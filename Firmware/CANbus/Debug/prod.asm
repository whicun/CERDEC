;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Wed Dec 18 08:17:35 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwendtag $C$DW$5


$C$DW$6	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$6, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$6


$C$DW$8	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$8, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$8


$C$DW$10	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$10, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_declaration
	.dwattr $C$DW$10, DW_AT_external
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$11)

$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$10


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$15, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwendtag $C$DW$15


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("SPICANWaitForTXBuf")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$16


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("conf_default")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwendtag $C$DW$18


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$36)

$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$168)

	.dwendtag $C$DW$19


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("SPICAN_T0_RTS")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwendtag $C$DW$23


$C$DW$24	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$24, DW_AT_name("velf_rst")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwendtag $C$DW$24


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("dac_setmode")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$25


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("ad7738_init")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwendtag $C$DW$27


$C$DW$28	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$28, DW_AT_name("maf_rst")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwendtag $C$DW$28


$C$DW$29	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$29, DW_AT_name("SPICANInit")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwendtag $C$DW$29

$C$DW$30	.dwtag  DW_TAG_variable
	.dwattr $C$DW$30, DW_AT_name("UNITS")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("METHOD")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("BAUD")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$342)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("BITMAP")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$300)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external

$C$DW$34	.dwtag  DW_TAG_variable
	.dwattr $C$DW$34, DW_AT_name("LPV")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external

$C$DW$35	.dwtag  DW_TAG_variable
	.dwattr $C$DW$35, DW_AT_name("INTERFACE")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$377)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external


$C$DW$36	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$36, DW_AT_name("ds1820start")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwendtag $C$DW$36


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("configCAN")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("latch_dac")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("reboot")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwendtag $C$DW$39


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("delay_us")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$40


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("lcd_init")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwendtag $C$DW$42


$C$DW$43	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$43, DW_AT_name("sys_init")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwendtag $C$DW$43


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwendtag $C$DW$44


$C$DW$45	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$45, DW_AT_name("InitECan")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwendtag $C$DW$45


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("lcd_clear")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
	.dwendtag $C$DW$47


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("shunt_switch")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$48


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("flash_init")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwendtag $C$DW$50


$C$DW$51	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$51, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$51


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("ssr_set")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$36)

$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$53


$C$DW$56	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$56, DW_AT_name("led_init")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
	.dwendtag $C$DW$56


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("led_set")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$36)

$C$DW$59	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$59, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$57


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("extio_init")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
	.dwendtag $C$DW$60


$C$DW$61	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$61, DW_AT_name("gpio_init")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
	.dwendtag $C$DW$61


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("scia_init")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$62


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$64


$C$DW$66	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$66, DW_AT_name("lcd_puts")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$163)

$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$66


$C$DW$69	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$69, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$69, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$69, DW_AT_declaration
	.dwattr $C$DW$69, DW_AT_external
$C$DW$70	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$163)

$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$69

$C$DW$72	.dwtag  DW_TAG_variable
	.dwattr $C$DW$72, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external

$C$DW$73	.dwtag  DW_TAG_variable
	.dwattr $C$DW$73, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external

$C$DW$74	.dwtag  DW_TAG_variable
	.dwattr $C$DW$74, DW_AT_name("port4004")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external

$C$DW$75	.dwtag  DW_TAG_variable
	.dwattr $C$DW$75, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external

$C$DW$76	.dwtag  DW_TAG_variable
	.dwattr $C$DW$76, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external

$C$DW$77	.dwtag  DW_TAG_variable
	.dwattr $C$DW$77, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external

$C$DW$78	.dwtag  DW_TAG_variable
	.dwattr $C$DW$78, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external

$C$DW$79	.dwtag  DW_TAG_variable
	.dwattr $C$DW$79, DW_AT_name("port400e")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external


$C$DW$80	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$80, DW_AT_name("tagdetect")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$80


$C$DW$82	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$82, DW_AT_name("sprintf")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external
$C$DW$83	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$163)

$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$180)

$C$DW$85	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$82


$C$DW$86	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$86, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external
$C$DW$87	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$163)

$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$86


$C$DW$89	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$89, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
	.dwendtag $C$DW$89


$C$DW$90	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$90, DW_AT_name("SPICANReadBufs")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_SPICANReadBufs")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
$C$DW$91	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$168)

$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$168)

	.dwendtag $C$DW$90


$C$DW$93	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$93, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
	.dwendtag $C$DW$93


$C$DW$94	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$94, DW_AT_name("scia_puts")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external
$C$DW$95	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$94

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("cmd_mode")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$96, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$96, DW_AT_external


$C$DW$97	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$97, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwendtag $C$DW$97


$C$DW$98	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$98, DW_AT_name("conf_read")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwendtag $C$DW$98

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$99	.dwtag  DW_TAG_variable
	.dwattr $C$DW$99, DW_AT_name("autoidchanged")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$99, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$99, DW_AT_external


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("conf_write")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwendtag $C$DW$101


$C$DW$102	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$102, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
	.dwendtag $C$DW$102


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("atoi")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
$C$DW$106	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$105


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("SPICANRead")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
$C$DW$108	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$107


$C$DW$109	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$109, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$109, DW_AT_declaration
	.dwattr $C$DW$109, DW_AT_external
$C$DW$110	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$163)

$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$109


$C$DW$112	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$112, DW_AT_name("scia_getparam")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$163)

$C$DW$114	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$163)

$C$DW$115	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$112


$C$DW$116	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$116, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$116, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$116, DW_AT_declaration
	.dwattr $C$DW$116, DW_AT_external
	.dwendtag $C$DW$116


$C$DW$117	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$117, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$117, DW_AT_declaration
	.dwattr $C$DW$117, DW_AT_external
$C$DW$118	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$117


$C$DW$119	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$119, DW_AT_name("strtod")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$180)

$C$DW$121	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$362)

	.dwendtag $C$DW$119


$C$DW$122	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$122, DW_AT_name("memcpy")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external
$C$DW$123	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$3)

$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$148)

$C$DW$125	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$122


$C$DW$126	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$126, DW_AT_name("atol")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$126, DW_AT_declaration
	.dwattr $C$DW$126, DW_AT_external
$C$DW$127	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$126

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$128	.dwtag  DW_TAG_variable
	.dwattr $C$DW$128, DW_AT_name("VEL_U")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$128, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$128, DW_AT_external


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
$C$DW$130	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$129

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$131	.dwtag  DW_TAG_variable
	.dwattr $C$DW$131, DW_AT_name("POS_U")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$131, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$131, DW_AT_external


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("ds1820read")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
	.dwendtag $C$DW$132


$C$DW$133	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$133, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external
	.dwendtag $C$DW$133


$C$DW$134	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$134, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
	.dwendtag $C$DW$134


$C$DW$135	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$135, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$135, DW_AT_declaration
	.dwattr $C$DW$135, DW_AT_external
	.dwendtag $C$DW$135


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
	.dwendtag $C$DW$136


$C$DW$137	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$137, DW_AT_name("prod_getavail")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$137, DW_AT_declaration
	.dwattr $C$DW$137, DW_AT_external
	.dwendtag $C$DW$137


$C$DW$138	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$138, DW_AT_name("prod_getnext")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$138, DW_AT_declaration
	.dwattr $C$DW$138, DW_AT_external
	.dwendtag $C$DW$138

$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$139, DW_AT_declaration
	.dwattr $C$DW$139, DW_AT_external


$C$DW$140	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$140, DW_AT_name("strlen")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$140, DW_AT_declaration
	.dwattr $C$DW$140, DW_AT_external
$C$DW$141	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$140

$C$DW$142	.dwtag  DW_TAG_variable
	.dwattr $C$DW$142, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$142, DW_AT_declaration
	.dwattr $C$DW$142, DW_AT_external

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$143	.dwtag  DW_TAG_variable
	.dwattr $C$DW$143, DW_AT_name("autoid")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$143, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$143, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$144	.dwtag  DW_TAG_variable
	.dwattr $C$DW$144, DW_AT_name("tagwasthere")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$144, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$144, DW_AT_external


$C$DW$145	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$145, DW_AT_name("tagid")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$145, DW_AT_declaration
	.dwattr $C$DW$145, DW_AT_external
$C$DW$146	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$145

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("rtc")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$147, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$147, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$148, DW_AT_declaration
	.dwattr $C$DW$148, DW_AT_external

_buff$6:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$7:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$149	.dwtag  DW_TAG_variable
	.dwattr $C$DW$149, DW_AT_name("tsensor")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$149, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$149, DW_AT_external

$C$DW$150	.dwtag  DW_TAG_variable
	.dwattr $C$DW$150, DW_AT_name("_ctypes_")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$150, DW_AT_declaration
	.dwattr $C$DW$150, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$151	.dwtag  DW_TAG_variable
	.dwattr $C$DW$151, DW_AT_name("fileOb")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$151, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$151, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$152	.dwtag  DW_TAG_variable
	.dwattr $C$DW$152, DW_AT_name("Fatfs")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$152, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$152, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$153	.dwtag  DW_TAG_variable
	.dwattr $C$DW$153, DW_AT_name("conf_data")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$153, DW_AT_declaration
	.dwattr $C$DW$153, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\273522 C:\\Users\\ebenton\\AppData\\Local\\Temp\\273524 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\2735212 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$154	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$154, DW_AT_name("update_units")
	.dwattr $C$DW$154, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$154, DW_AT_high_pc(0x00)
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$154, DW_AT_external
	.dwattr $C$DW$154, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$154, DW_AT_TI_begin_line(0x17bb)
	.dwattr $C$DW$154, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$154, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6075,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$155	.dwtag  DW_TAG_variable
	.dwattr $C$DW$155, DW_AT_name("buff")
	.dwattr $C$DW$155, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$383)
	.dwattr $C$DW$155, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6075 | void update_units(void) {                                              
; 6077 | int l;                                                                 
; 6078 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6080,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6080 | lcd_clear();                                                           
; 6081 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6080| 
        ; call occurs [#_lcd_clear] ; [] |6080| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6082,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6082 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6082| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6082| 
        ADDL      XAR4,ACC              ; [CPU_] |6082| 
        MOV       AL,AR1                ; [CPU_] |6082| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6082| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6082| 
        ; call occurs [#_lcd_puts] ; [] |6082| 
	.dwpsn	file "../Source/prod.c",line 6083,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6083 | switch (conf_data.vfd[l].what) {                                       
; 6084 | case VFD_LOAD:                                                         
; 6085 | case VFD_PEAK:                                                         
; 6086 | case VFD_VALL:                                                         
; 6087 | case VFD_POSI:                                                         
; 6088 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6083| 
        CMPB      AL,#4                 ; [CPU_] |6083| 
        B         $C$L2,LOS             ; [CPU_] |6083| 
        ; branchcc occurs ; [] |6083| 
        CMPB      AL,#5                 ; [CPU_] |6083| 
        B         $C$L8,EQ              ; [CPU_] |6083| 
        ; branchcc occurs ; [] |6083| 
        CMPB      AL,#6                 ; [CPU_] |6083| 
        B         $C$L7,EQ              ; [CPU_] |6083| 
        ; branchcc occurs ; [] |6083| 
        B         $C$L10,UNC            ; [CPU_] |6083| 
        ; branch occurs ; [] |6083| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6089,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6089 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6089| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6089| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6089| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6089| 
        ADDB      AL,#1                 ; [CPU_] |6089| 
        MOVL      XAR4,XAR3             ; [CPU_] |6089| 
        MOV       *-SP[3],AL            ; [CPU_] |6089| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_sprintf")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6089| 
        ; call occurs [#_sprintf] ; [] |6089| 
	.dwpsn	file "../Source/prod.c",line 6090,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6090 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6090| 
        ADD       AL,AR1                ; [CPU_] |6090| 
        MOVL      XAR4,XAR3             ; [CPU_] |6090| 
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$159, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6090| 
        ; call occurs [#_lcd_puts] ; [] |6090| 
	.dwpsn	file "../Source/prod.c",line 6091,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6091 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6091| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6091| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6091| 
        B         $C$L3,EQ              ; [CPU_] |6091| 
        ; branchcc occurs ; [] |6091| 
	.dwpsn	file "../Source/prod.c",line 6092,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6092 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6092| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6092| 
        ADD       AL,AR1                ; [CPU_] |6092| 
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$160, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6092| 
        ; call occurs [#_lcd_puts] ; [] |6092| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6095,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6095 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6096 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6095| 
        CMPB      AL,#3                 ; [CPU_] |6095| 
        B         $C$L6,EQ              ; [CPU_] |6095| 
        ; branchcc occurs ; [] |6095| 
	.dwpsn	file "../Source/prod.c",line 6097,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6097 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6098 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6099 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6097| 
        CMPB      AL,#4                 ; [CPU_] |6097| 
        B         $C$L5,EQ              ; [CPU_] |6097| 
        ; branchcc occurs ; [] |6097| 
	.dwpsn	file "../Source/prod.c",line 6100,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6100 | lcd_puts(                                                              
; 6101 |                 (char*) UNITS[0x0f                                     
; 6102 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6103 |                 18 + 20 * l);                                          
; 6105 | break;                                                                 
; 6106 | case VFD_LIMIT:                                                        
; 6107 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6108 | lcd_puts(buff, 5 + 20 * l);                                            
; 6109 | break;                                                                 
; 6110 | case VFD_TEMP:                                                         
; 6111 | #if(VFD==1)                                                            
; 6112 | buff[0] = 0xb0;                                                        
; 6113 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6100| 
        MOV       T,#10                 ; [CPU_] |6100| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6100| 
        ADDL      ACC,XAR6              ; [CPU_] |6100| 
        MOVL      XAR4,ACC              ; [CPU_] |6100| 
        MOVB      XAR0,#42              ; [CPU_] |6100| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6100| 
        MPYB      ACC,T,#152            ; [CPU_] |6100| 
        ADDL      ACC,XAR6              ; [CPU_] |6100| 
        MOVL      XAR4,ACC              ; [CPU_] |6100| 
        MOVB      XAR0,#125             ; [CPU_] |6100| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6100| 
        ANDB      AL,#0x0f              ; [CPU_] |6100| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6100| 
        MOV       ACC,AL << 1           ; [CPU_] |6100| 
        ADDL      XAR4,ACC              ; [CPU_] |6100| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6100| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6100| 
        B         $C$L9,UNC             ; [CPU_] |6100| 
        ; branch occurs ; [] |6100| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6098,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6098| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6098| 
	.dwpsn	file "../Source/prod.c",line 6099,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6099| 
        ; branch occurs ; [] |6099| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6096,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6096| 
	.dwpsn	file "../Source/prod.c",line 6097,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6097| 
        ; branch occurs ; [] |6097| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6114,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6114 | buff[0] = 0xdf;                                                        
; 6115 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6114| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6114| 
	.dwpsn	file "../Source/prod.c",line 6116,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6116 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6116| 
	.dwpsn	file "../Source/prod.c",line 6117,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6117 | buff[2] = '\0';                                                        
; 6118 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6117| 
	.dwpsn	file "../Source/prod.c",line 6119,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6119 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6119| 
        ; branch occurs ; [] |6119| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6107,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6107| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6107| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6107| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6107| 
        ADDB      AL,#1                 ; [CPU_] |6107| 
        MOVL      XAR4,XAR3             ; [CPU_] |6107| 
        MOV       *-SP[3],AL            ; [CPU_] |6107| 
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("_sprintf")
	.dwattr $C$DW$161, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6107| 
        ; call occurs [#_sprintf] ; [] |6107| 
	.dwpsn	file "../Source/prod.c",line 6108,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6108| 
        MOVL      XAR4,XAR3             ; [CPU_] |6108| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6108| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$162, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6108| 
        ; call occurs [#_lcd_puts] ; [] |6108| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6081,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6081| 
        SUBB      XAR6,#1               ; [CPU_U] |6081| 
        MOVZ      AR0,AR6               ; [CPU_] |6081| 
        ADDB      XAR2,#3               ; [CPU_] |6081| 
        ADDB      XAR1,#20              ; [CPU_] |6081| 
        MOV       *-SP[4],AR6           ; [CPU_] |6081| 
        CMP       AR0,#-1               ; [CPU_] |6081| 
        B         $C$L1,NEQ             ; [CPU_] |6081| 
        ; branchcc occurs ; [] |6081| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$154, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$154, DW_AT_TI_end_line(0x17ea)
	.dwattr $C$DW$154, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$154

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$164	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$164, DW_AT_name("print_vfd")
	.dwattr $C$DW$164, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$164, DW_AT_high_pc(0x00)
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$164, DW_AT_external
	.dwattr $C$DW$164, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$164, DW_AT_TI_begin_line(0x1746)
	.dwattr $C$DW$164, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$164, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5958,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$165	.dwtag  DW_TAG_variable
	.dwattr $C$DW$165, DW_AT_name("buff")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$385)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5958 | void print_vfd(void) {                                                 
; 5959 | int l;                                                                 
; 5960 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$166	.dwtag  DW_TAG_variable
	.dwattr $C$DW$166, DW_AT_name("l")
	.dwattr $C$DW$166, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$166, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$166, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5962,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5962 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5962| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5962| 
        ; call occurs [#_scia_puts] ; [] |5962| 
	.dwpsn	file "../Source/prod.c",line 5963,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5963 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5963| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5964,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5964 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5964| 
        MOVB      AL,#1                 ; [CPU_] |5964| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5964| 
        ADD       AL,AR1                ; [CPU_] |5964| 
        MOV       *-SP[3],AL            ; [CPU_] |5964| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5964| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5964| 
        ADDL      XAR4,ACC              ; [CPU_] |5964| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5964| 
        MOVL      XAR4,XAR3             ; [CPU_] |5964| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5964| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("_sprintf")
	.dwattr $C$DW$168, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5964| 
        ; call occurs [#_sprintf] ; [] |5964| 
	.dwpsn	file "../Source/prod.c",line 5965,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5965 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5965| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_scia_puts")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5965| 
        ; call occurs [#_scia_puts] ; [] |5965| 
	.dwpsn	file "../Source/prod.c",line 5967,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5967 | switch (conf_data.vfd[l].what) {                                       
; 5968 | case VFD_LOAD:                                                         
; 5969 | case VFD_PEAK:                                                         
; 5970 | case VFD_VALL:                                                         
; 5971 | case VFD_POSI:                                                         
; 5972 | case VFD_VELO:                                                         
; 5973 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5974 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5975 |         scia_puts(buff);                                               
; 5976 |         break;                                                         
; 5977 | case VFD_LIMIT:                                                        
; 5978 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5979 |         scia_puts(buff);                                               
; 5980 |         break;                                                         
; 5981 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5967| 
        CMPB      AL,#4                 ; [CPU_] |5967| 
        B         $C$L13,LOS            ; [CPU_] |5967| 
        ; branchcc occurs ; [] |5967| 
        CMPB      AL,#5                 ; [CPU_] |5967| 
        B         $C$L12,EQ             ; [CPU_] |5967| 
        ; branchcc occurs ; [] |5967| 
        CMPB      AL,#6                 ; [CPU_] |5967| 
        B         $C$L16,NEQ            ; [CPU_] |5967| 
        ; branchcc occurs ; [] |5967| 
	.dwpsn	file "../Source/prod.c",line 5982,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5982 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5982| 
	.dwpsn	file "../Source/prod.c",line 5983,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5983 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5983| 
        ; branch occurs ; [] |5983| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5978,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5978| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5978| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5978| 
        ADDB      AL,#1                 ; [CPU_] |5978| 
        MOV       *-SP[3],AL            ; [CPU_] |5978| 
	.dwpsn	file "../Source/prod.c",line 5980,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5980| 
        ; branch occurs ; [] |5980| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5973,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5973| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5973| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5973| 
        ADDB      AL,#1                 ; [CPU_] |5973| 
        MOV       *-SP[3],AL            ; [CPU_] |5973| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5973| 
        MOV       *-SP[4],AL            ; [CPU_] |5973| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5973| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("_sprintf")
	.dwattr $C$DW$170, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5973| 
        ; call occurs [#_sprintf] ; [] |5973| 
	.dwpsn	file "../Source/prod.c",line 5975,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5975| 
$C$L15:    
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("_scia_puts")
	.dwattr $C$DW$171, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5975| 
        ; call occurs [#_scia_puts] ; [] |5975| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5985,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5985 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5985| 
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5985| 
        ; call occurs [#_scia_puts] ; [] |5985| 
	.dwpsn	file "../Source/prod.c",line 5963,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5963| 
        ADDB      XAR2,#3               ; [CPU_] |5963| 
        MOV       AL,AR1                ; [CPU_] |5963| 
        CMPB      AL,#4                 ; [CPU_] |5963| 
        B         $C$L11,LT             ; [CPU_] |5963| 
        ; branchcc occurs ; [] |5963| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$173, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$164, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$164, DW_AT_TI_end_line(0x1763)
	.dwattr $C$DW$164, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$164

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$174	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$174, DW_AT_name("print_sensor")
	.dwattr $C$DW$174, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$174, DW_AT_high_pc(0x00)
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$174, DW_AT_external
	.dwattr $C$DW$174, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$174, DW_AT_TI_begin_line(0x16ef)
	.dwattr $C$DW$174, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$174, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5871,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$175	.dwtag  DW_TAG_variable
	.dwattr $C$DW$175, DW_AT_name("buff")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$384)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$176	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$176, DW_AT_name("ss")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$177	.dwtag  DW_TAG_variable
	.dwattr $C$DW$177, DW_AT_name("ss")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$178	.dwtag  DW_TAG_variable
	.dwattr $C$DW$178, DW_AT_name("j")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_reg0]

$C$DW$179	.dwtag  DW_TAG_variable
	.dwattr $C$DW$179, DW_AT_name("j")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_breg20 -7]

$C$DW$180	.dwtag  DW_TAG_variable
	.dwattr $C$DW$180, DW_AT_name("j")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_breg20 -7]

$C$DW$181	.dwtag  DW_TAG_variable
	.dwattr $C$DW$181, DW_AT_name("j")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_breg20 -7]

$C$DW$182	.dwtag  DW_TAG_variable
	.dwattr $C$DW$182, DW_AT_name("j")
	.dwattr $C$DW$182, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$182, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$182, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5871 | void print_sensor(int ss) {                                            
; 5872 | int j;                                                                 
; 5873 | static char buff[100];                                                 
; 5875 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5871| 
	.dwpsn	file "../Source/prod.c",line 5876,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5876 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5877 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5878 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5876| 
        MPYB      P,T,#152              ; [CPU_] |5876| 
        MOVL      ACC,XAR3              ; [CPU_] |5876| 
        ADDL      ACC,P                 ; [CPU_] |5876| 
        MOVL      XAR2,ACC              ; [CPU_] |5876| 
        MOVB      XAR0,#118             ; [CPU_] |5876| 
        MOVL      *-SP[12],P            ; [CPU_] |5876| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5876| 
        B         $C$L28,EQ             ; [CPU_] |5876| 
        ; branchcc occurs ; [] |5876| 
	.dwpsn	file "../Source/prod.c",line 5879,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5879 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5879| 
        MOVL      ACC,XAR2              ; [CPU_] |5879| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5879| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5879| 
        ADDB      ACC,#82               ; [CPU_] |5879| 
        MOVL      XAR4,XAR1             ; [CPU_] |5879| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5879| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_sprintf")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5879| 
        ; call occurs [#_sprintf] ; [] |5879| 
	.dwpsn	file "../Source/prod.c",line 5880,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5880 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5880| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5880| 
        ; call occurs [#_scia_puts] ; [] |5880| 
	.dwpsn	file "../Source/prod.c",line 5881,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5881 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5881| 
        MOVL      ACC,XAR2              ; [CPU_] |5881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5881| 
        ADDB      ACC,#98               ; [CPU_] |5881| 
        MOVL      XAR4,XAR1             ; [CPU_] |5881| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5881| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_sprintf")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5881| 
        ; call occurs [#_sprintf] ; [] |5881| 
	.dwpsn	file "../Source/prod.c",line 5882,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5882 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5882| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5882| 
        ; call occurs [#_scia_puts] ; [] |5882| 
	.dwpsn	file "../Source/prod.c",line 5883,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5883 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5884 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5883| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5883| 
        MOVL      XAR4,XAR2             ; [CPU_] |5883| 
        ADDB      XAR4,#114             ; [CPU_] |5883| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5883| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5883| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5883| 
        MOVL      XAR4,XAR1             ; [CPU_] |5883| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5883| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_sprintf")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5883| 
        ; call occurs [#_sprintf] ; [] |5883| 
	.dwpsn	file "../Source/prod.c",line 5885,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5885 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5885| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_scia_puts")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5885| 
        ; call occurs [#_scia_puts] ; [] |5885| 
	.dwpsn	file "../Source/prod.c",line 5886,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5886 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5887 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5886| 
        MOVB      XAR0,#118             ; [CPU_] |5886| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5886| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5886| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5886| 
        ADDL      XAR4,ACC              ; [CPU_] |5886| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5886| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5886| 
        MOVL      XAR4,XAR1             ; [CPU_] |5886| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_sprintf")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5886| 
        ; call occurs [#_sprintf] ; [] |5886| 
	.dwpsn	file "../Source/prod.c",line 5888,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5888 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5888| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5888| 
        ; call occurs [#_scia_puts] ; [] |5888| 
	.dwpsn	file "../Source/prod.c",line 5889,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5889 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5890 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5889| 
        MOVB      XAR0,#124             ; [CPU_] |5889| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5889| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5889| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5889| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5889| 
        ANDB      AL,#0x0f              ; [CPU_] |5889| 
        MOV       ACC,AL << 1           ; [CPU_] |5889| 
        ADDL      XAR4,ACC              ; [CPU_] |5889| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5889| 
        MOVL      XAR4,XAR1             ; [CPU_] |5889| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5889| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_sprintf")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5889| 
        ; call occurs [#_sprintf] ; [] |5889| 
	.dwpsn	file "../Source/prod.c",line 5891,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5891 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5891| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5891| 
        ; call occurs [#_scia_puts] ; [] |5891| 
	.dwpsn	file "../Source/prod.c",line 5892,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5892 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5893 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5892| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5892| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5892| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5892| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5892| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5892| 
        MOV       ACC,AL << 1           ; [CPU_] |5892| 
        ADDL      ACC,XAR6              ; [CPU_] |5892| 
        MOVL      XAR4,ACC              ; [CPU_] |5892| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5892| 
        MOVL      XAR4,XAR1             ; [CPU_] |5892| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5892| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_sprintf")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5892| 
        ; call occurs [#_sprintf] ; [] |5892| 
	.dwpsn	file "../Source/prod.c",line 5894,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5894 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5894| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_scia_puts")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5894| 
        ; call occurs [#_scia_puts] ; [] |5894| 
	.dwpsn	file "../Source/prod.c",line 5895,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5895 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5896 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5895| 
        MOVB      XAR0,#126             ; [CPU_] |5895| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5895| 
        MOVL      XAR4,XAR1             ; [CPU_] |5895| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5895| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5895| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_sprintf")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5895| 
        ; call occurs [#_sprintf] ; [] |5895| 
	.dwpsn	file "../Source/prod.c",line 5897,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5897 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5897| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5897| 
        ; call occurs [#_scia_puts] ; [] |5897| 
	.dwpsn	file "../Source/prod.c",line 5898,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5898 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5899 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5898| 
        MOVB      XAR0,#122             ; [CPU_] |5898| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5898| 
        MOVL      XAR4,XAR1             ; [CPU_] |5898| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5898| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5898| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_sprintf")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5898| 
        ; call occurs [#_sprintf] ; [] |5898| 
	.dwpsn	file "../Source/prod.c",line 5900,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5900 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5900| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5900| 
        ; call occurs [#_scia_puts] ; [] |5900| 
	.dwpsn	file "../Source/prod.c",line 5901,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5901 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5902 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5901| 
        MOVB      XAR0,#222             ; [CPU_] |5901| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5901| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5901| 
        MOVL      XAR4,XAR1             ; [CPU_] |5901| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5901| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_sprintf")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5901| 
        ; call occurs [#_sprintf] ; [] |5901| 
	.dwpsn	file "../Source/prod.c",line 5903,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5903 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5903| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5903| 
        ; call occurs [#_scia_puts] ; [] |5903| 
	.dwpsn	file "../Source/prod.c",line 5904,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5904 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5905 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5904| 
        MOVB      XAR0,#224             ; [CPU_] |5904| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5904| 
        MOVL      XAR4,XAR1             ; [CPU_] |5904| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5904| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5904| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_sprintf")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5904| 
        ; call occurs [#_sprintf] ; [] |5904| 
	.dwpsn	file "../Source/prod.c",line 5906,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5906 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5906| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5906| 
        ; call occurs [#_scia_puts] ; [] |5906| 
	.dwpsn	file "../Source/prod.c",line 5907,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5907 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5908 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5907| 
        MOVB      XAR0,#228             ; [CPU_] |5907| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5907| 
        MOVL      XAR4,XAR1             ; [CPU_] |5907| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5907| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5907| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_sprintf")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5907| 
        ; call occurs [#_sprintf] ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5909,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5909 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5909| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_scia_puts")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5909| 
        ; call occurs [#_scia_puts] ; [] |5909| 
	.dwpsn	file "../Source/prod.c",line 5910,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5910 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5911 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5910| 
        MOVB      XAR0,#230             ; [CPU_] |5910| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5910| 
        MOVL      XAR4,XAR1             ; [CPU_] |5910| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5910| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5910| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_sprintf")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5910| 
        ; call occurs [#_sprintf] ; [] |5910| 
	.dwpsn	file "../Source/prod.c",line 5912,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5912 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5912| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5912| 
        ; call occurs [#_scia_puts] ; [] |5912| 
	.dwpsn	file "../Source/prod.c",line 5914,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5914 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5915 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5916 |                         conf_data.sensor[ss].points);                  
; 5917 |         scia_puts(buff);                                               
; 5919 |         scia_puts("  Point:");                                         
; 5920 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5921 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5922 |                 scia_puts(buff);                                       
; 5924 |         scia_puts("\r\n  Mass: ");                                     
; 5925 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5926 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5927 |                 scia_puts(buff);                                       
; 5929 |         scia_puts("\r\n  Count:");                                     
; 5930 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5931 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5932 |                 scia_puts(buff);                                       
; 5934 |         scia_puts("\r\n  Slope:    ");                                 
; 5935 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5936 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5937 |                 scia_puts(buff);                                       
; 5939 |         scia_puts("\r\n  Intercept:");                                 
; 5940 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5941 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5942 |                 scia_puts(buff);                                       
; 5944 |         scia_puts("\r\n");                                             
; 5945 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5914| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5914| 
        CMPB      AL,#2                 ; [CPU_] |5914| 
        B         $C$L17,EQ             ; [CPU_] |5914| 
        ; branchcc occurs ; [] |5914| 
	.dwpsn	file "../Source/prod.c",line 5946,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5946 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5947 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5946| 
        MOVB      XAR0,#178             ; [CPU_] |5946| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5946| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5946| 
        MOVL      XAR4,XAR1             ; [CPU_] |5946| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5946| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_sprintf")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5946| 
        ; call occurs [#_sprintf] ; [] |5946| 
	.dwpsn	file "../Source/prod.c",line 5948,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5948 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5948| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5948| 
        ; call occurs [#_scia_puts] ; [] |5948| 
	.dwpsn	file "../Source/prod.c",line 5949,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5949 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5950 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5949| 
        MOVB      XAR0,#200             ; [CPU_] |5949| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5949| 
        MOVL      XAR4,XAR1             ; [CPU_] |5949| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5949| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5949| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_sprintf")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5949| 
        ; call occurs [#_sprintf] ; [] |5949| 
	.dwpsn	file "../Source/prod.c",line 5951,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5951 | scia_puts(buff);                                                       
; 5954 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5951| 
        B         $C$L29,UNC            ; [CPU_] |5951| 
        ; branch occurs ; [] |5951| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5915,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5915| 
        MOVB      XAR0,#128             ; [CPU_] |5915| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5915| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5915| 
        MOVL      XAR4,XAR1             ; [CPU_] |5915| 
        MOV       *-SP[3],AL            ; [CPU_] |5915| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_sprintf")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5915| 
        ; call occurs [#_sprintf] ; [] |5915| 
	.dwpsn	file "../Source/prod.c",line 5917,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5917| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5917| 
        ; call occurs [#_scia_puts] ; [] |5917| 
	.dwpsn	file "../Source/prod.c",line 5919,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5919| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5919| 
        ; call occurs [#_scia_puts] ; [] |5919| 
	.dwpsn	file "../Source/prod.c",line 5920,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5920| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5920,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5920| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5920| 
        B         $C$L27,LT             ; [CPU_] |5920| 
        ; branchcc occurs ; [] |5920| 
	.dwpsn	file "../Source/prod.c",line 5924,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5924| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5924| 
        ; call occurs [#_scia_puts] ; [] |5924| 
	.dwpsn	file "../Source/prod.c",line 5925,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5925| 
        MOV       *-SP[7],AL            ; [CPU_] |5925| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5925,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5925| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5925| 
        B         $C$L26,LT             ; [CPU_] |5925| 
        ; branchcc occurs ; [] |5925| 
	.dwpsn	file "../Source/prod.c",line 5929,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5929| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5929| 
        ; call occurs [#_scia_puts] ; [] |5929| 
	.dwpsn	file "../Source/prod.c",line 5930,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5930| 
        MOV       *-SP[7],AL            ; [CPU_] |5930| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5930,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5930| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5930| 
        B         $C$L25,LT             ; [CPU_] |5930| 
        ; branchcc occurs ; [] |5930| 
	.dwpsn	file "../Source/prod.c",line 5934,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5934| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5934| 
        ; call occurs [#_scia_puts] ; [] |5934| 
	.dwpsn	file "../Source/prod.c",line 5935,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5935| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5935,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5935| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5935| 
        ADDB      AL,#-1                ; [CPU_] |5935| 
        CMP       AL,*-SP[7]            ; [CPU_] |5935| 
        B         $C$L24,GT             ; [CPU_] |5935| 
        ; branchcc occurs ; [] |5935| 
	.dwpsn	file "../Source/prod.c",line 5939,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5939| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_scia_puts")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5939| 
        ; call occurs [#_scia_puts] ; [] |5939| 
	.dwpsn	file "../Source/prod.c",line 5940,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5940| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5940,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5940| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5940| 
        ADDB      AL,#-1                ; [CPU_] |5940| 
        CMP       AL,*-SP[7]            ; [CPU_] |5940| 
        B         $C$L23,GT             ; [CPU_] |5940| 
        ; branchcc occurs ; [] |5940| 
	.dwpsn	file "../Source/prod.c",line 5944,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5944| 
	.dwpsn	file "../Source/prod.c",line 5945,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5945| 
        ; branch occurs ; [] |5945| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5941,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5941| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5941| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5941| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5941| 
        MOV       ACC,AL << 1           ; [CPU_] |5941| 
        ADDL      ACC,XAR6              ; [CPU_] |5941| 
        ADDL      ACC,XAR3              ; [CPU_] |5941| 
        MOVL      XAR4,ACC              ; [CPU_] |5941| 
        MOVB      XAR0,#200             ; [CPU_] |5941| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5941| 
        MOVL      XAR4,XAR1             ; [CPU_] |5941| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5941| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_sprintf")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5941| 
        ; call occurs [#_sprintf] ; [] |5941| 
	.dwpsn	file "../Source/prod.c",line 5942,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5942| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5942| 
        ; call occurs [#_scia_puts] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5940,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5940| 
        B         $C$L22,UNC            ; [CPU_] |5940| 
        ; branch occurs ; [] |5940| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5936,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5936| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5936| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5936| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5936| 
        MOV       ACC,AL << 1           ; [CPU_] |5936| 
        ADDL      ACC,XAR6              ; [CPU_] |5936| 
        ADDL      ACC,XAR3              ; [CPU_] |5936| 
        MOVL      XAR4,ACC              ; [CPU_] |5936| 
        MOVB      XAR0,#178             ; [CPU_] |5936| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5936| 
        MOVL      XAR4,XAR1             ; [CPU_] |5936| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5936| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_sprintf")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5936| 
        ; call occurs [#_sprintf] ; [] |5936| 
	.dwpsn	file "../Source/prod.c",line 5937,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5937| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5937| 
        ; call occurs [#_scia_puts] ; [] |5937| 
	.dwpsn	file "../Source/prod.c",line 5935,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5935| 
        B         $C$L21,UNC            ; [CPU_] |5935| 
        ; branch occurs ; [] |5935| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5931,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5931| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5931| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5931| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5931| 
        ADDL      ACC,XAR6              ; [CPU_] |5931| 
        ADDL      ACC,XAR3              ; [CPU_] |5931| 
        MOVL      XAR4,ACC              ; [CPU_] |5931| 
        MOVB      XAR0,#154             ; [CPU_] |5931| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5931| 
        MOVL      XAR4,XAR1             ; [CPU_] |5931| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5931| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_sprintf")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5931| 
        ; call occurs [#_sprintf] ; [] |5931| 
	.dwpsn	file "../Source/prod.c",line 5932,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5932| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5932| 
        ; call occurs [#_scia_puts] ; [] |5932| 
	.dwpsn	file "../Source/prod.c",line 5930,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5930| 
	.dwpsn	file "../Source/prod.c",line 5932,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5932| 
	.dwpsn	file "../Source/prod.c",line 5930,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5930| 
        ; branch occurs ; [] |5930| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5926,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5926| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5926| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5926| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5926| 
        ADDL      ACC,XAR6              ; [CPU_] |5926| 
        ADDL      ACC,XAR3              ; [CPU_] |5926| 
        MOVL      XAR4,ACC              ; [CPU_] |5926| 
        MOVB      XAR0,#130             ; [CPU_] |5926| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5926| 
        MOVL      XAR4,XAR1             ; [CPU_] |5926| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5926| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_sprintf")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5926| 
        ; call occurs [#_sprintf] ; [] |5926| 
	.dwpsn	file "../Source/prod.c",line 5927,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5927| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5927| 
        ; call occurs [#_scia_puts] ; [] |5927| 
	.dwpsn	file "../Source/prod.c",line 5925,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5925| 
	.dwpsn	file "../Source/prod.c",line 5927,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5927| 
	.dwpsn	file "../Source/prod.c",line 5925,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5925| 
        ; branch occurs ; [] |5925| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5921,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5921| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5921| 
        ADD       AH,AL                 ; [CPU_] |5921| 
        MOV       *-SP[7],AH            ; [CPU_] |5921| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5921| 
        MOVL      XAR4,XAR1             ; [CPU_] |5921| 
        MOV       *-SP[3],AH            ; [CPU_] |5921| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_sprintf")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5921| 
        ; call occurs [#_sprintf] ; [] |5921| 
	.dwpsn	file "../Source/prod.c",line 5922,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5922| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_scia_puts")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5922| 
        ; call occurs [#_scia_puts] ; [] |5922| 
        MOV       AL,*-SP[7]            ; [CPU_] |5922| 
	.dwpsn	file "../Source/prod.c",line 5920,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5920| 
        ; branch occurs ; [] |5920| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5877,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5877| 
$C$L29:    
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("_scia_puts")
	.dwattr $C$DW$227, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5877| 
        ; call occurs [#_scia_puts] ; [] |5877| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$174, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$174, DW_AT_TI_end_line(0x1743)
	.dwattr $C$DW$174, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$174

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$229	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$229, DW_AT_name("print_limits")
	.dwattr $C$DW$229, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$229, DW_AT_high_pc(0x00)
	.dwattr $C$DW$229, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$229, DW_AT_external
	.dwattr $C$DW$229, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$229, DW_AT_TI_begin_line(0x178a)
	.dwattr $C$DW$229, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$229, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6026,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$230	.dwtag  DW_TAG_variable
	.dwattr $C$DW$230, DW_AT_name("buff")
	.dwattr $C$DW$230, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$230, DW_AT_type(*$C$DW$T$385)
	.dwattr $C$DW$230, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6026 | void print_limits(void) {                                              
; 6027 | int ii;                                                                
; 6028 | static char buff[64];                                                  
; 6029 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$231	.dwtag  DW_TAG_variable
	.dwattr $C$DW$231, DW_AT_name("ii")
	.dwattr $C$DW$231, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$231, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$231, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$232	.dwtag  DW_TAG_variable
	.dwattr $C$DW$232, DW_AT_name("up")
	.dwattr $C$DW$232, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$232, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$232, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6031,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6031 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6031| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6031| 
        ; call occurs [#_scia_puts] ; [] |6031| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6033,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6033 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6033| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6034,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6034 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6034| 
        MOVB      AL,#1                 ; [CPU_] |6034| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6034| 
        ADD       AL,*-SP[9]            ; [CPU_] |6034| 
        MOVL      XAR4,XAR2             ; [CPU_] |6034| 
        MOV       *-SP[3],AL            ; [CPU_] |6034| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_sprintf")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6034| 
        ; call occurs [#_sprintf] ; [] |6034| 
	.dwpsn	file "../Source/prod.c",line 6035,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6035 | scia_puts(buff);                                                       
; 6037 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6035| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6035| 
        ; call occurs [#_scia_puts] ; [] |6035| 
	.dwpsn	file "../Source/prod.c",line 6039,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6039 | switch (conf_data.lim[ii].what) {                                      
; 6040 | case VFD_LOAD:                                                         
; 6041 | case VFD_PEAK:                                                         
; 6042 | case VFD_VALL:                                                         
; 6043 |         up =                                                           
; 6044 |                         UNITS[0x0f                                     
; 6045 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6046 |         break;                                                         
; 6047 | case VFD_POSI:                                                         
; 6048 |         up = POS_U;                                                    
; 6049 |         break;                                                         
; 6050 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6039| 
        B         $C$L40,NTC            ; [CPU_] |6039| 
        ; branchcc occurs ; [] |6039| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6039| 
        CMPB      AL,#2                 ; [CPU_] |6039| 
        B         $C$L32,LOS            ; [CPU_] |6039| 
        ; branchcc occurs ; [] |6039| 
        CMPB      AL,#3                 ; [CPU_] |6039| 
        B         $C$L31,EQ             ; [CPU_] |6039| 
        ; branchcc occurs ; [] |6039| 
        CMPB      AL,#4                 ; [CPU_] |6039| 
        B         $C$L33,NEQ            ; [CPU_] |6039| 
        ; branchcc occurs ; [] |6039| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6051,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6051 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6051| 
	.dwpsn	file "../Source/prod.c",line 6052,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6052 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6052| 
        ; branch occurs ; [] |6052| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6048,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6048| 
	.dwpsn	file "../Source/prod.c",line 6049,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6049| 
        ; branch occurs ; [] |6049| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6043,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6043| 
        MOV       T,#10                 ; [CPU_] |6043| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6043| 
        ADDL      ACC,XAR6              ; [CPU_] |6043| 
        MOVL      XAR4,ACC              ; [CPU_] |6043| 
        MOVB      XAR0,#42              ; [CPU_] |6043| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6043| 
        MPYB      ACC,T,#152            ; [CPU_] |6043| 
        ADDL      ACC,XAR6              ; [CPU_] |6043| 
        MOVL      XAR4,ACC              ; [CPU_] |6043| 
        MOVB      XAR0,#125             ; [CPU_] |6043| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6043| 
        ANDB      AL,#0x0f              ; [CPU_] |6043| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6043| 
        MOV       ACC,AL << 1           ; [CPU_] |6043| 
        ADDL      XAR4,ACC              ; [CPU_] |6043| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6043| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6055,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6055 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6056 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6055| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6055| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6055| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6055| 
        ADDL      XAR4,ACC              ; [CPU_] |6055| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6055| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6055| 
        MOVL      XAR4,XAR2             ; [CPU_] |6055| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6055| 
        ADDB      AL,#1                 ; [CPU_] |6055| 
        MOV       *-SP[5],AL            ; [CPU_] |6055| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_sprintf")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6055| 
        ; call occurs [#_sprintf] ; [] |6055| 
	.dwpsn	file "../Source/prod.c",line 6057,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6057 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6057| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_scia_puts")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6057| 
        ; call occurs [#_scia_puts] ; [] |6057| 
	.dwpsn	file "../Source/prod.c",line 6058,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6058 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6059 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6060 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6061 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6058| 
        B         $C$L34,TC             ; [CPU_] |6058| 
        ; branchcc occurs ; [] |6058| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6058| 
        B         $C$L35,UNC            ; [CPU_] |6058| 
        ; branch occurs ; [] |6058| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6058| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6058| 
        B         $C$L36,TC             ; [CPU_] |6058| 
        ; branchcc occurs ; [] |6058| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6058| 
        B         $C$L37,UNC            ; [CPU_] |6058| 
        ; branch occurs ; [] |6058| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6058| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6058| 
        B         $C$L38,TC             ; [CPU_] |6058| 
        ; branchcc occurs ; [] |6058| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6058| 
        B         $C$L39,UNC            ; [CPU_] |6058| 
        ; branch occurs ; [] |6058| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6058| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6058| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6058| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6058| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6058| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6058| 
        MOVL      XAR4,XAR2             ; [CPU_] |6058| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_sprintf")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6058| 
        ; call occurs [#_sprintf] ; [] |6058| 
	.dwpsn	file "../Source/prod.c",line 6062,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6062 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6062| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_scia_puts")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6062| 
        ; call occurs [#_scia_puts] ; [] |6062| 
	.dwpsn	file "../Source/prod.c",line 6063,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6063 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6064 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6063| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6063| 
        MOVL      XAR4,XAR2             ; [CPU_] |6063| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6063| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6063| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6063| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_sprintf")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6063| 
        ; call occurs [#_sprintf] ; [] |6063| 
	.dwpsn	file "../Source/prod.c",line 6065,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6065 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6065| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_scia_puts")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6065| 
        ; call occurs [#_scia_puts] ; [] |6065| 
	.dwpsn	file "../Source/prod.c",line 6066,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6066 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6067 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6066| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6066| 
        MOVL      XAR4,XAR2             ; [CPU_] |6066| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6066| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6066| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6066| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_sprintf")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6066| 
        ; call occurs [#_sprintf] ; [] |6066| 
	.dwpsn	file "../Source/prod.c",line 6068,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6068 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6068| 
	.dwpsn	file "../Source/prod.c",line 6069,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6069 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6069| 
        ; branch occurs ; [] |6069| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6070,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6070 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6070| 
$C$L41:    
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_scia_puts")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6070| 
        ; call occurs [#_scia_puts] ; [] |6070| 
	.dwpsn	file "../Source/prod.c",line 6033,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6033| 
        INC       *-SP[9]               ; [CPU_] |6033| 
        MOV       AL,*-SP[9]            ; [CPU_] |6033| 
        CMPB      AL,#4                 ; [CPU_] |6033| 
        B         $C$L30,LT             ; [CPU_] |6033| 
        ; branchcc occurs ; [] |6033| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$229, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$229, DW_AT_TI_end_line(0x17b9)
	.dwattr $C$DW$229, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$229

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$245	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$245, DW_AT_name("print_dac")
	.dwattr $C$DW$245, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$245, DW_AT_high_pc(0x00)
	.dwattr $C$DW$245, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$245, DW_AT_external
	.dwattr $C$DW$245, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$245, DW_AT_TI_begin_line(0x1766)
	.dwattr $C$DW$245, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$245, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5990,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$246	.dwtag  DW_TAG_variable
	.dwattr $C$DW$246, DW_AT_name("buff")
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$246, DW_AT_type(*$C$DW$T$385)
	.dwattr $C$DW$246, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5990 | void print_dac(void) {                                                 
; 5991 | int l;                                                                 
; 5992 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$247	.dwtag  DW_TAG_variable
	.dwattr $C$DW$247, DW_AT_name("l")
	.dwattr $C$DW$247, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$247, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$247, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5994,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5994 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5994| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_scia_puts")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5994| 
        ; call occurs [#_scia_puts] ; [] |5994| 
	.dwpsn	file "../Source/prod.c",line 5996,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5996 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5996| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5997,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5997 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5997| 
        MOVB      AL,#1                 ; [CPU_] |5997| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5997| 
        ADD       AL,AR1                ; [CPU_] |5997| 
        MOV       *-SP[3],AL            ; [CPU_] |5997| 
        MOVL      XAR4,XAR3             ; [CPU_] |5997| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_sprintf")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5997| 
        ; call occurs [#_sprintf] ; [] |5997| 
	.dwpsn	file "../Source/prod.c",line 5998,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5998 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5998| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5998| 
        ; call occurs [#_scia_puts] ; [] |5998| 
	.dwpsn	file "../Source/prod.c",line 6000,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6000 | sprintf(buff,                                                          
; 6001 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 6002 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 6003 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |6000| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6000| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6000| 
        MOVL      XAR4,XAR3             ; [CPU_] |6000| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6000| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6000| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6000| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |6000| 
        MOVL      *-SP[8],ACC           ; [CPU_] |6000| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_sprintf")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6000| 
        ; call occurs [#_sprintf] ; [] |6000| 
	.dwpsn	file "../Source/prod.c",line 6004,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6004 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6004| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_scia_puts")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6004| 
        ; call occurs [#_scia_puts] ; [] |6004| 
	.dwpsn	file "../Source/prod.c",line 6006,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6006 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |6006| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6006| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6006| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6006| 
        ADDL      XAR4,ACC              ; [CPU_] |6006| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6006| 
        MOVL      XAR4,XAR3             ; [CPU_] |6006| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6006| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_sprintf")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6006| 
        ; call occurs [#_sprintf] ; [] |6006| 
	.dwpsn	file "../Source/prod.c",line 6007,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6007 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6007| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6007| 
        ; call occurs [#_scia_puts] ; [] |6007| 
	.dwpsn	file "../Source/prod.c",line 6009,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6009 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6009| 
        CMPB      AL,#7                 ; [CPU_] |6009| 
        B         $C$L43,EQ             ; [CPU_] |6009| 
        ; branchcc occurs ; [] |6009| 
	.dwpsn	file "../Source/prod.c",line 6010,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6010 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |6010| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6010| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6010| 
        ADDB      AL,#1                 ; [CPU_] |6010| 
        MOVL      XAR4,XAR3             ; [CPU_] |6010| 
        MOV       *-SP[3],AL            ; [CPU_] |6010| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_sprintf")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6010| 
        ; call occurs [#_sprintf] ; [] |6010| 
	.dwpsn	file "../Source/prod.c",line 6011,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6011 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6011| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_scia_puts")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6011| 
        ; call occurs [#_scia_puts] ; [] |6011| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 6014,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6014 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 6015 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 6016 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 6017 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 6018 |         scia_puts(buff);                                               
; 6019 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6014| 
        CMPB      AL,#3                 ; [CPU_] |6014| 
        B         $C$L44,EQ             ; [CPU_] |6014| 
        ; branchcc occurs ; [] |6014| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |6014| 
        CMPB      AL,#4                 ; [CPU_] |6014| 
        B         $C$L44,EQ             ; [CPU_] |6014| 
        ; branchcc occurs ; [] |6014| 
	.dwpsn	file "../Source/prod.c",line 6020,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6020 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6020| 
        B         $C$L45,UNC            ; [CPU_] |6020| 
        ; branch occurs ; [] |6020| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 6016,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |6016| 
        MOVB      XAR0,#8               ; [CPU_] |6016| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6016| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6016| 
        MOVB      XAR0,#10              ; [CPU_] |6016| 
        MOVL      XAR4,XAR3             ; [CPU_] |6016| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6016| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6016| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6016| 
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("_sprintf")
	.dwattr $C$DW$257, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6016| 
        ; call occurs [#_sprintf] ; [] |6016| 
	.dwpsn	file "../Source/prod.c",line 6018,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6018| 
$C$L45:    
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_name("_scia_puts")
	.dwattr $C$DW$258, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6018| 
        ; call occurs [#_scia_puts] ; [] |6018| 
	.dwpsn	file "../Source/prod.c",line 5996,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5996| 
        ADDB      XAR2,#12              ; [CPU_] |5996| 
        MOV       AL,AR1                ; [CPU_] |5996| 
        CMPB      AL,#4                 ; [CPU_] |5996| 
        B         $C$L42,LT             ; [CPU_] |5996| 
        ; branchcc occurs ; [] |5996| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$245, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$245, DW_AT_TI_end_line(0x1787)
	.dwattr $C$DW$245, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$245

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$260	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$260, DW_AT_name("print_channel")
	.dwattr $C$DW$260, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$260, DW_AT_high_pc(0x00)
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$260, DW_AT_external
	.dwattr $C$DW$260, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$260, DW_AT_TI_begin_line(0x16d4)
	.dwattr $C$DW$260, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$260, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5844,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$261	.dwtag  DW_TAG_variable
	.dwattr $C$DW$261, DW_AT_name("buff")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$384)
	.dwattr $C$DW$261, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$262	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$262, DW_AT_name("ch")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$262, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$263	.dwtag  DW_TAG_variable
	.dwattr $C$DW$263, DW_AT_name("ch")
	.dwattr $C$DW$263, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$263, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$263, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5844 | void print_channel(Uint16 ch) {                                        
; 5845 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5844| 
	.dwpsn	file "../Source/prod.c",line 5847,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5847 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5847| 
        MOVZ      AR1,AR2               ; [CPU_] |5847| 
        MOVB      AH,#1                 ; [CPU_] |5847| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5847| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5847| 
        ADD       AH,AR1                ; [CPU_] |5847| 
        MOVL      XAR4,XAR3             ; [CPU_] |5847| 
        MOV       *-SP[3],AH            ; [CPU_] |5847| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_sprintf")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5847| 
        ; call occurs [#_sprintf] ; [] |5847| 
	.dwpsn	file "../Source/prod.c",line 5848,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5848 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5848| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5848| 
        ; call occurs [#_scia_puts] ; [] |5848| 
	.dwpsn	file "../Source/prod.c",line 5850,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5850 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5850| 
        MOV       T,AR1                 ; [CPU_] |5850| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5850| 
        MPYU      ACC,T,AL              ; [CPU_] |5850| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5850| 
        ADDL      XAR1,ACC              ; [CPU_] |5850| 
        MOVB      XAR0,#44              ; [CPU_] |5850| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5850| 
        MOVL      XAR4,XAR3             ; [CPU_] |5850| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5850| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5850| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("_sprintf")
	.dwattr $C$DW$266, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5850| 
        ; call occurs [#_sprintf] ; [] |5850| 
	.dwpsn	file "../Source/prod.c",line 5851,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5851 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5851| 
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_name("_scia_puts")
	.dwattr $C$DW$267, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5851| 
        ; call occurs [#_scia_puts] ; [] |5851| 
	.dwpsn	file "../Source/prod.c",line 5861,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5861 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5861| 
        MOVB      XAR0,#42              ; [CPU_] |5861| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5861| 
        MOVL      XAR4,XAR3             ; [CPU_] |5861| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5861| 
        ADDB      AL,#1                 ; [CPU_] |5861| 
        MOV       *-SP[3],AL            ; [CPU_] |5861| 
$C$DW$268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$268, DW_AT_name("_sprintf")
	.dwattr $C$DW$268, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5861| 
        ; call occurs [#_sprintf] ; [] |5861| 
	.dwpsn	file "../Source/prod.c",line 5862,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5862 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5862| 
$C$DW$269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$269, DW_AT_name("_scia_puts")
	.dwattr $C$DW$269, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5864,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5864 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5864| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5864| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5864| 
        B         $C$L46,EQ             ; [CPU_] |5864| 
        ; branchcc occurs ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5865,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5865 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5865| 
$C$DW$270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$270, DW_AT_name("_scia_puts")
	.dwattr $C$DW$270, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5865| 
        ; call occurs [#_scia_puts] ; [] |5865| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$271, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$260, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$260, DW_AT_TI_end_line(0x16eb)
	.dwattr $C$DW$260, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$260

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$272	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$272, DW_AT_name("matchTag")
	.dwattr $C$DW$272, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$272, DW_AT_high_pc(0x00)
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$272, DW_AT_external
	.dwattr $C$DW$272, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$272, DW_AT_TI_begin_line(0x16b0)
	.dwattr $C$DW$272, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$272, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5808,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$273	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$273, DW_AT_name("ch")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5808 | void matchTag(Uint16 ch) {                                             
; 5809 | Uint16 sns;                                                            
; 5810 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$274	.dwtag  DW_TAG_variable
	.dwattr $C$DW$274, DW_AT_name("ch")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$274, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$275	.dwtag  DW_TAG_variable
	.dwattr $C$DW$275, DW_AT_name("sns")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$275, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$276	.dwtag  DW_TAG_variable
	.dwattr $C$DW$276, DW_AT_name("tag")
	.dwattr $C$DW$276, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$276, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$276, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5812,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5812 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5812| 
	.dwpsn	file "../Source/prod.c",line 5808,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5808| 
	.dwpsn	file "../Source/prod.c",line 5812,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5812| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5812| 
        MOVL      XAR1,ACC              ; [CPU_] |5812| 
	.dwpsn	file "../Source/prod.c",line 5814,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5814 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5814| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5814| 
	.dwpsn	file "../Source/prod.c",line 5812,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5812| 
	.dwpsn	file "../Source/prod.c",line 5814,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5815 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5814| 
        B         $C$L50,EQ             ; [CPU_] |5814| 
        ; branchcc occurs ; [] |5814| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5814| 
        B         $C$L50,HIS            ; [CPU_] |5814| 
        ; branchcc occurs ; [] |5814| 
	.dwpsn	file "../Source/prod.c",line 5818,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5818 | tag = tagid(ch);                                                       
; 5819 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5820 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_name("_tagid")
	.dwattr $C$DW$277, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5818| 
        ; call occurs [#_tagid] ; [] |5818| 
        MOVB      XAR6,#0               ; [CPU_] |5818| 
        MOVL      XAR3,ACC              ; [CPU_] |5818| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5818| 
        MOV       *-SP[2],#0            ; [CPU_] |5818| 
        MOV       *-SP[1],#0            ; [CPU_] |5818| 
$C$DW$278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$278, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$278, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5818| 
        ; call occurs [#ULL$$CMP] ; [] |5818| 
        CMPB      AL,#0                 ; [CPU_] |5818| 
        B         $C$L50,EQ             ; [CPU_] |5818| 
        ; branchcc occurs ; [] |5818| 
        MOVB      ACC,#0                ; [CPU_] |5818| 
        SUBB      ACC,#1                ; [CPU_] |5818| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5818| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5818| 
        MOVL      ACC,XAR3              ; [CPU_] |5818| 
$C$DW$279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$279, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$279, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5818| 
        ; call occurs [#ULL$$CMP] ; [] |5818| 
        CMPB      AL,#0                 ; [CPU_] |5818| 
        B         $C$L50,EQ             ; [CPU_] |5818| 
        ; branchcc occurs ; [] |5818| 
	.dwpsn	file "../Source/prod.c",line 5821,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5821 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5821| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5821| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5821| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5823,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5823 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5825 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5823| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5826,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5826 | continue;                       // not calibrated                      
; 5829 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5826| 
        B         $C$L48,EQ             ; [CPU_] |5826| 
        ; branchcc occurs ; [] |5826| 
	.dwpsn	file "../Source/prod.c",line 5830,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | continue;                       // doesn't match, skip                 
; 5833 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5830| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5830| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5830| 
        MOVL      ACC,XAR3              ; [CPU_] |5830| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5830| 
$C$DW$280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$280, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$280, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5830| 
        ; call occurs [#ULL$$CMP] ; [] |5830| 
        CMPB      AL,#0                 ; [CPU_] |5830| 
        B         $C$L49,EQ             ; [CPU_] |5830| 
        ; branchcc occurs ; [] |5830| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5823,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5823| 
        MOVL      XAR0,ACC              ; [CPU_] |5823| 
        ADDB      XAR4,#1               ; [CPU_] |5823| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5823| 
        ; branchcc occurs ; [] |5823| 
        B         $C$L50,UNC            ; [CPU_] |5823| 
        ; branch occurs ; [] |5823| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5834,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5834 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5834| 
	.dwpsn	file "../Source/prod.c",line 5835,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5835 | conf_data.ch[ch].ci = sns;                                             
; 5837 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5835| 
        MOV       T,*-SP[5]             ; [CPU_] |5835| 
        MPYU      ACC,T,AL              ; [CPU_] |5835| 
        ADDL      ACC,XAR2              ; [CPU_] |5835| 
        MOVL      XAR5,ACC              ; [CPU_] |5835| 
        MOVB      XAR0,#42              ; [CPU_] |5835| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5835| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$281, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$272, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$272, DW_AT_TI_end_line(0x16d0)
	.dwattr $C$DW$272, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$272

	.sect	".text"
	.clink
	.global	_main

$C$DW$282	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$282, DW_AT_name("main")
	.dwattr $C$DW$282, DW_AT_low_pc(_main)
	.dwattr $C$DW$282, DW_AT_high_pc(0x00)
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$282, DW_AT_external
	.dwattr $C$DW$282, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$282, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$282, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$282, DW_AT_TI_max_frame_size(-168)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("buff")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$378)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("cmdbuff")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$378)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 166           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 149 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U141
;* AR1   assigned to $O$U338
;* AR1   assigned to $O$U367
;* AR1   assigned to $O$U576
;* AR1   assigned to $O$U704
;* AR1   assigned to $O$U803
;* AR1   assigned to $O$U840
;* AR5   assigned to $O$U856
;* AL    assigned to $O$U1015
;* AR1   assigned to $O$U993
;* AR1   assigned to $O$U1083
;* AR1   assigned to $O$U983
;* AR6   assigned to $O$U1284
;* AR1   assigned to $O$U1310
;* AR7   assigned to $O$U1546
;* XT    assigned to $O$U1573
;* PL    assigned to $O$U1574
;* AR5   assigned to $O$U1598
;* PL    assigned to $O$U1603
;* PL    assigned to $O$U1610
;* AR5   assigned to $O$U1612
;* AR5   assigned to $O$U1613
;* AR5   assigned to $O$U1627
;* XT    assigned to $O$U1669
;* PL    assigned to $O$U1670
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("ccp")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -120]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("tempft")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -12]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("templg")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -14]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ds_ct")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -63]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ds_sn")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -65]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("ds_bm")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -66]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("ds_dec")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -67]

$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("ds_dn")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -68]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("ds_stop")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -69]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("ds_en")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -70]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("bincmdresult")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -63]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("line")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -71]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("daccbm")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -72]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("tempvalue")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -122]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("scale")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -16]

$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("unsaved")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_breg20 -64]

$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("tagch")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_breg20 -159]

$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("ss")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_breg20 -73]

$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("ch")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_breg20 -74]

$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("version")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR6   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U267
;* AR1   assigned to $O$U267
;* AR5   assigned to $O$U267
;* AR5   assigned to $O$U267
;* AR5   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR7   assigned to $O$U267
;* AR7   assigned to $O$U267
;* AR7   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR5   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR1   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR5   assigned to $O$U267
;* AR5   assigned to $O$U267
;* AR1   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR1   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR5   assigned to $O$U267
;* AR4   assigned to $O$U267
;* AR1   assigned to $O$U267
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U435
;* AR1   assigned to $O$U435
;* AR1   assigned to $O$U435
;* AR1   assigned to $O$U413
;* AR1   assigned to $O$U413
;* AR1   assigned to $O$U413
;* AR1   assigned to $O$U413
;* AR1   assigned to $O$U413
;* AR5   assigned to $O$U413
;* AR1   assigned to $O$U304
;* AR1   assigned to $O$U597
;* AR1   assigned to $O$U597
;* AR1   assigned to $O$U642
;* AR1   assigned to $O$U642
;* AR4   assigned to $O$K831
;* AR4   assigned to $O$K831
;* AR1   assigned to $O$K831
;* AR4   assigned to $O$K831
;* AR1   assigned to $O$K831
;* AR1   assigned to $O$K831
;* AR1   assigned to $O$K831
;* AR1   assigned to $O$K831
;* AR5   assigned to $O$K831
;* AR5   assigned to $O$K831
;* AR1   assigned to $O$K831
;* AR1   assigned to $O$U885
;* AR1   assigned to $O$U885
;* AR1   assigned to $O$U908
;* AR3   assigned to $O$U908
;* AR1   assigned to $O$U908
;* AR6   assigned to $O$U865
;* AL    assigned to $O$U865
;* AR1   assigned to $O$U934
;* AR1   assigned to $O$U934
;* AR1   assigned to $O$U1014
;* AR7   assigned to $O$U1014
;* AR5   assigned to $O$U1014
;* AR5   assigned to $O$U1014
;* AR5   assigned to $O$U1014
;* AR7   assigned to $O$U1014
;* AR7   assigned to $O$U1014
;* AR7   assigned to $O$U1014
;* AR7   assigned to $O$U1014
;* AR4   assigned to $O$U1014
;* AR4   assigned to $O$U1014
;* AR7   assigned to $O$U1014
;* AR7   assigned to $O$U1014
;* AR1   assigned to $O$K321
;* AR7   assigned to $O$U1149
;* AR7   assigned to $O$U1149
;* AR7   assigned to $O$U1149
;* AR7   assigned to $O$U1149
;* AR4   assigned to $O$U1151
;* AR4   assigned to $O$U1151
;* AR4   assigned to $O$U1151
;* AR4   assigned to $O$U1151
;* AR3   assigned to $O$U1185
;* AR1   assigned to $O$U1185
;* AR1   assigned to $O$U1185
;* AR1   assigned to $O$U1191
;* AR4   assigned to $O$U1203
;* AR4   assigned to $O$U1200
;* AR7   assigned to $O$U1200
;* PL    assigned to $O$U1200
;* AR7   assigned to $O$U1200
;* AR4   assigned to $O$U1200
;* AR5   assigned to $O$U1260
;* AR4   assigned to $O$U1260
;* AR5   assigned to $O$U1339
;* AR5   assigned to $O$U1339
;* AR4   assigned to $O$U1335
;* AR4   assigned to $O$U1335
;* AR5   assigned to $O$U1394
;* AR5   assigned to $O$U1394
;* PL    assigned to $O$U1400
;* AR1   assigned to $O$U1400
;* AR6   assigned to $O$U1401
;* AR6   assigned to $O$U1401
;* AR5   assigned to $O$U1437
;* AR5   assigned to $O$U1437
;* PL    assigned to $O$U1440
;* AR1   assigned to $O$U1440
;* AR6   assigned to $O$U1441
;* AR7   assigned to $O$U1441
;* AR5   assigned to $O$U1479
;* AR5   assigned to $O$U1479
;* AR5   assigned to $O$U1514
;* AR5   assigned to $O$U1514
;* AR4   assigned to $O$U1549
;* AR1   assigned to $O$U1549
;* AR5   assigned to $O$U1549
;* AR5   assigned to $O$U1549
;* AR4   assigned to $O$U1638
;* AR4   assigned to $O$U1638
;* AR4   assigned to $O$U1638
;* AR4   assigned to $O$U1647
;* AR3   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg12]

;* AR1   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg16]

;* AR7   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("intp")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("intp")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("intp")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("intp")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("tempint")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("tempint")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("temp16")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg10]

$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("temp16")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_breg20 -75]

$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("temp32")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_breg20 -80]

;* AL    assigned to _temp32
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("temp32")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("cmethod")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg6]

$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("cmethod")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_breg20 -63]

;* AL    assigned to _flash_ret
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("flash_ret")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("flash_ret")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("flash_ret")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("flash_ret")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("slen")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("slen")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("slen")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("slen")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("slen")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("slen")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("pt")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("pt")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg0]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("pt")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -75]

$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("pt")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_breg20 -75]

;* AL    assigned to _pt
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("pt")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("pt")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("pt")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg12]

$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("pt")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_breg20 -63]

;* AR6   assigned to _pt
$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("pt")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("wtp")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("wtp")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("wtp")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("wtp")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_reg12]

$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("cmdlen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_breg20 -75]

;* AL    assigned to _cmdlen
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("cmdlen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg0]

$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("cmdlen")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_breg20 -63]

$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("cmdlen")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_breg20 -63]

;* AR6   assigned to _cmdlen
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("cmdlen")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("cmdlen")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("cmdlen")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_reg0]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("k")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -75]

$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("k")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_breg20 -76]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("k")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -76]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("k")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -63]

;* AR6   assigned to _k
$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("k")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_reg16]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("k")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -75]

$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("k")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_breg20 -63]

;* PL    assigned to _k
$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("k")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_reg2]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("k")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -63]

;* PL    assigned to _k
$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("k")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("k")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_reg10]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -63]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -63]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -63]

;* AR1   assigned to _j
$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_reg6]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -63]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -63]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -63]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -63]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -76]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -76]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -63]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -75]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -77]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -64]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -64]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -64]

$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("j")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_breg20 -64]

$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("j")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_breg20 -64]

$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("j")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_breg20 -64]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("j")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -63]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("j")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -77]

;* AR1   assigned to _i
$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_reg0]

$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_breg20 -63]

;* AR7   assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg18]

$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_breg20 -63]

;* AL    assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg0]

$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_breg20 -63]

$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_breg20 -63]

$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("i")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("i")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_reg16]

$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("i")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_breg20 -63]

;* AR6   assigned to _i
$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("i")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_reg16]

$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("volt")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$376)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_breg20 -24]

$C$DW$473	.dwtag  DW_TAG_variable
	.dwattr $C$DW$473, DW_AT_name("dsum")
	.dwattr $C$DW$473, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$473, DW_AT_type(*$C$DW$T$357)
	.dwattr $C$DW$473, DW_AT_location[DW_OP_breg20 -32]

$C$DW$474	.dwtag  DW_TAG_variable
	.dwattr $C$DW$474, DW_AT_name("dacc")
	.dwattr $C$DW$474, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$474, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$474, DW_AT_location[DW_OP_breg20 -35]

$C$DW$475	.dwtag  DW_TAG_variable
	.dwattr $C$DW$475, DW_AT_name("sampcnt")
	.dwattr $C$DW$475, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$475, DW_AT_type(*$C$DW$T$338)
	.dwattr $C$DW$475, DW_AT_location[DW_OP_breg20 -38]

$C$DW$476	.dwtag  DW_TAG_variable
	.dwattr $C$DW$476, DW_AT_name("data")
	.dwattr $C$DW$476, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$476, DW_AT_type(*$C$DW$T$309)
	.dwattr $C$DW$476, DW_AT_location[DW_OP_breg20 -46]

$C$DW$477	.dwtag  DW_TAG_variable
	.dwattr $C$DW$477, DW_AT_name("data2")
	.dwattr $C$DW$477, DW_AT_TI_symbol_name("_data2")
	.dwattr $C$DW$477, DW_AT_type(*$C$DW$T$309)
	.dwattr $C$DW$477, DW_AT_location[DW_OP_breg20 -54]

$C$DW$478	.dwtag  DW_TAG_variable
	.dwattr $C$DW$478, DW_AT_name("data3")
	.dwattr $C$DW$478, DW_AT_TI_symbol_name("_data3")
	.dwattr $C$DW$478, DW_AT_type(*$C$DW$T$309)
	.dwattr $C$DW$478, DW_AT_location[DW_OP_breg20 -62]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#160               ; [CPU_] 
	.dwcfi	cfa_offset, -168
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_sys_init")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_delay_us")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_gpio_init")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_extio_init")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_InitECan")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
; 243 | // Set SD select output as appropriate (Usually high)                  
; 244 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 257 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_configCAN")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 258,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 258 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 259 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 261 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |258| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |258| 
        MOVL      ACC,XAR5              ; [CPU_] |258| 
        SUBL      XAR4,ACC              ; [CPU_] |258| 
        MOVL      ACC,XAR4              ; [CPU_] |258| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |258| 
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_memcpy")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |258| 
        ; call occurs [#_memcpy] ; [] |258| 
	.dwpsn	file "../Source/prod.c",line 262,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 263 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |262| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |262| 
        MOVL      ACC,XAR5              ; [CPU_] |262| 
        SUBL      XAR4,ACC              ; [CPU_] |262| 
        MOVL      ACC,XAR4              ; [CPU_] |262| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |262| 
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_memcpy")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |262| 
        ; call occurs [#_memcpy] ; [] |262| 
	.dwpsn	file "../Source/prod.c",line 280,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |280| 
        MOV       AH,#479               ; [CPU_] |280| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |280| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 290,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | Flash_CallbackPtr = NULL;                                              
; 292 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |290| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |290| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_flash_init")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |293| 
        ; call occurs [#_flash_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_led_init")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |295| 
        ; call occurs [#_led_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | lcd_init();                             // lcd/vfd display             
; 298 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_lcd_init")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |296| 
        ; call occurs [#_lcd_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_ssr_set")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_ssr_set")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_ssr_set")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(3, 0);                  // indicate gui not connected          
; 305 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_ssr_set")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_conf_read")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |318| 
        ; call occurs [#_conf_read] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |319| 
        MOV       AH,#21930             ; [CPU_] |319| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |319| 
        B         $C$L51,EQ             ; [CPU_] |319| 
        ; branchcc occurs ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_conf_default")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |320| 
        ; call occurs [#_conf_default] ; [] |320| 
	.dwpsn	file "../Source/prod.c",line 321,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 321 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_conf_write")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |321| 
        ; call occurs [#_conf_write] ; [] |321| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |324| 
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |324| 
        ; call occurs [#_shunt_switch] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |326| 
        ; call occurs [#_ad7738_init] ; [] |326| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | ad7738_setcal();                                                       
; 329 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |327| 
        ; call occurs [#_ad7738_setcal] ; [] |327| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | tagwasthere[i] = 0;                                                    
; 333 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 329,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |335| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_delay_us")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |335| 
        ; call occurs [#_delay_us] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | lcd_clear();                                                           
; 338 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |337| 
        ; call occurs [#_lcd_clear] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |339| 
        MOVL      XAR0,#44              ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      *-SP[4],ACC           ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |339| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_sprintf")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |341| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |341| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_sprintf")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |341| 
        ; call occurs [#_sprintf] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |342| 
        MOVL      XAR4,XAR1             ; [CPU_] |342| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |343| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |343| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |343| 
        ; call occurs [#_lcd_dputs] ; [] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 346,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |346| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 348,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |348| 
        TBIT      AL,#4                 ; [CPU_] |348| 
        B         $C$L54,TC             ; [CPU_] |348| 
        ; branchcc occurs ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |349| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 352,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | if (1 & i) {                                                           
; 353 |         led_set( LED1, LED_RED);                                       
; 354 |         led_set( LED2, LED_RED);                                       
; 355 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |352| 
        B         $C$L55,TC             ; [CPU_] |352| 
        ; branchcc occurs ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |356| 
        MOVB      AH,#2                 ; [CPU_] |356| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_led_set")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |356| 
        ; call occurs [#_led_set] ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 357,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |357| 
        B         $C$L56,UNC            ; [CPU_] |357| 
        ; branch occurs ; [] |357| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |353| 
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_led_set")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |354| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |354| 
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_led_set")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 359,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |359| 
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_delay_us")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |359| 
        ; call occurs [#_delay_us] ; [] |359| 
	.dwpsn	file "../Source/prod.c",line 346,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |346| 
        MOV       AL,AR1                ; [CPU_] |346| 
        CMPB      AL,#100               ; [CPU_] |346| 
        B         $C$L53,LT             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_led_set")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |363| 
        MOVB      AH,#0                 ; [CPU_] |363| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_led_set")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
        MOV       AL,AR1                ; [CPU_] |363| 
	.dwpsn	file "../Source/prod.c",line 365,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |365| 
        CMPB      AL,#20                ; [CPU_] |365| 
        B         $C$L58,GEQ            ; [CPU_] |365| 
        ; branchcc occurs ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |366| 
        MOVL      XAR4,XAR5             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |366| 
        INC       *+XAR4[0]             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |368| 
        CMPB      AL,#4                 ; [CPU_] |368| 
        B         $C$L57,LT             ; [CPU_] |368| 
        ; branchcc occurs ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 369,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |369| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |369| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |372| 
        MOVB      AL,#40                ; [CPU_] |372| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |372| 
        ; call occurs [#_lcd_dputs] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_conf_write")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |374| 
        ; call occurs [#_conf_write] ; [] |374| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |377| 
        MOVL      XAR0,#74              ; [CPU_] |377| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |377| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |377| 
        MOVB      XAR0,#35              ; [CPU_] |377| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |377| 
        ADDL      XAR4,ACC              ; [CPU_] |377| 
        MOVL      XAR0,#88              ; [CPU_] |377| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |377| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |145| 
        MOV       *+FP[AR0],#0          ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOVL      XAR0,#96              ; [CPU_] |157| 
        MOV       *+FP[AR0],#0          ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOVL      XAR0,#98              ; [CPU_] |167| 
        MOV       *+FP[AR0],#0          ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOVL      XAR0,#99              ; [CPU_] |168| 
        MOV       *+FP[AR0],#0          ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOVL      XAR0,#100             ; [CPU_] |170| 
        MOV       *+FP[AR0],#60         ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOVL      XAR0,#101             ; [CPU_] |171| 
        MOV       *+FP[AR0],#1          ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOVL      XAR0,#102             ; [CPU_] |172| 
        MOV       *+FP[AR0],#15         ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOVL      XAR0,#103             ; [CPU_] |173| 
        MOV       *+FP[AR0],#0          ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 379,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | switch (conf_data.rxdir) {                                             
; 380 | case SDIR_RS232:                        // RS232, 0                    
; 381 |         led_set( LED1, LED_RED);                                       
; 382 |         led_set( LED2, LED_RED);                                       
; 383 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 384 |         scia_init(temp32);                                             
; 385 |         break;                                                         
; 386 | case SDIR_RS485:                        // RS485, 1                    
; 387 |         led_set( LED1, LED_GREEN);                                     
; 388 |         led_set( LED2, LED_RED);                                       
; 389 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 390 |         scia_init(temp32);                                             
; 391 |         break;                                                         
; 392 | case SDIR_ENET:                 // Ethernet, 2                         
; 393 |         led_set( LED1, LED_RED);                                       
; 394 |         led_set( LED2, LED_GREEN);                                     
; 395 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 396 |         scia_init(921600L);                                            
; 397 |         //scia_init( 460800L );                                        
; 398 |         break;                                                         
; 399 | case SDIR_USB:                  // USB, 3                              
; 400 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 401 |         led_set( LED1, LED_GREEN);                                     
; 402 |         led_set( LED2, LED_GREEN);                                     
; 403 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 404 |         // the USB chip can't handle 921600bps without dropping bytes  
; 405 |         // it seems 460800bps is fine so far.                          
; 406 |         // the client (PC Host) side can use any baudrate.             
; 407 |         scia_init(460800L);                                            
; 408 |         break;                                                         
; 409 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |379| 
        B         $C$L64,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#1                 ; [CPU_] |379| 
        B         $C$L63,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#2                 ; [CPU_] |379| 
        B         $C$L60,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#3                 ; [CPU_] |379| 
        B         $C$L59,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#1                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_led_set")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_led_set")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 414 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |413| 
        MOVL      XAR0,#72              ; [CPU_] |413| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        MOVB      XAR0,#34              ; [CPU_] |413| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |413| 
	.dwpsn	file "../Source/prod.c",line 415,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |415| 
        ; branch occurs ; [] |415| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_led_set")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |402| 
        MOVB      AH,#2                 ; [CPU_] |402| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_led_set")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |403| 
        MOVL      XAR0,#72              ; [CPU_] |403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |403| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |403| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |403| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |403| 
        ADDL      XAR4,ACC              ; [CPU_] |403| 
        MOVL      XAR0,#44              ; [CPU_] |403| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |403| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_sprintf")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |403| 
        ; call occurs [#_sprintf] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |407| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |393| 
        MOVB      AH,#1                 ; [CPU_] |393| 
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_led_set")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |394| 
        MOVB      AH,#2                 ; [CPU_] |394| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_led_set")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |394| 
        ; call occurs [#_led_set] ; [] |394| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |395| 
        MOVL      XAR0,#72              ; [CPU_] |395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |395| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |395| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |395| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |395| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |395| 
        MOVL      XAR0,#44              ; [CPU_] |395| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |395| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_sprintf")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |395| 
        ; call occurs [#_sprintf] ; [] |395| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |396| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |398| 
        ; branch occurs ; [] |398| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 387,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |391| 
        ; branch occurs ; [] |391| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |381| 
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_led_set")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |382| 
        MOVB      AH,#1                 ; [CPU_] |382| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_led_set")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |382| 
        ; call occurs [#_led_set] ; [] |382| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |383| 
        MOVL      XAR0,#72              ; [CPU_] |383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |383| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |383| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |383| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |383| 
        ADDL      XAR4,ACC              ; [CPU_] |383| 
        MOVL      XAR0,#88              ; [CPU_] |383| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |383| 
        MOVL      *-SP[4],ACC           ; [CPU_] |383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |383| 
        MOVL      XAR0,#44              ; [CPU_] |383| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |383| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_sprintf")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |383| 
        ; call occurs [#_sprintf] ; [] |383| 
        MOVL      ACC,XAR1              ; [CPU_] |383| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_scia_init")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |384| 
        ; call occurs [#_scia_init] ; [] |384| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |417| 
        ; call occurs [#_lcd_clear] ; [] |417| 
        MOVL      XAR0,#44              ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |418| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |418| 
        ; call occurs [#_lcd_dputs] ; [] |418| 
	.dwpsn	file "../Source/prod.c",line 421,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | uart_set_dir(conf_data.rxdir);                                         
; 423 | // initalize hardware and SFCLIB buffers                               
; 424 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 426 | // Enable global Interrupts and higher priority real-time debug events:
; 427 | EINT;                                                                  
; 428 | // Enable Global interrupt INTM                                        
; 429 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |421| 
        MOVL      XAR0,#40              ; [CPU_] |421| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |421| 
        MOVB      XAR0,#34              ; [CPU_] |421| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |421| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |421| 
        ; call occurs [#_uart_set_dir] ; [] |421| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 433 |         for (i = 0; i < 50; i++)                // 1s                  
; 435 |                 delay_us(20000);                // delay for 20ms      
; 437 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
        CMPB      AL,#3                 ; [CPU_] |431| 
        B         $C$L76,NEQ            ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |439| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 441,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 443 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |441| 
        ; branch occurs ; [] |441| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L70,EQ             ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |443| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |445| 
        ; call occurs [#_scia_rx_getcmd] ; [] |445| 
        MOV       T,*-SP[63]            ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | lcd_puts(cmdbuff, 20 * j);                                             
; 447 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |446| 
        MOVL      XAR4,XAR1             ; [CPU_] |446| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |446| 
        ; call occurs [#_lcd_puts] ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[63]              ; [CPU_] |448| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |448| 
        B         $C$L69,LT             ; [CPU_] |448| 
        ; branchcc occurs ; [] |448| 
	.dwpsn	file "../Source/prod.c",line 449,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[63],#0           ; [CPU_] |449| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L68,NEQ            ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 441,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |441| 
        TBIT      AL,#5                 ; [CPU_] |441| 
        B         $C$L67,NTC            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
        SPM       #0                    ; [CPU_] 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_scia_puts")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |454| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_delay_us")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |454| 
        ; call occurs [#_delay_us] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_puts("E\r");                                                      
; 456 | j = 0;                                                                 
; 457 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |455| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_scia_puts")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |455| 
        ; call occurs [#_scia_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 458,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | for (i = 0; i < WTT; i++)               // 10s                         
; 460 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 3,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |456| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 461,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmds] ; [] |461| 
        CMPB      AL,#0                 ; [CPU_] |461| 
        B         $C$L72,EQ             ; [CPU_] |461| 
        ; branchcc occurs ; [] |461| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |462| 
        ; call occurs [#_scia_rx_getcmd] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[63]              ; [CPU_] |463| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |465| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_delay_us")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |465| 
        ; call occurs [#_delay_us] ; [] |465| 
        MOV       AL,*-SP[63]           ; [CPU_] |465| 
	.dwpsn	file "../Source/prod.c",line 466,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |466| 
        B         $C$L73,LT             ; [CPU_] |466| 
        ; branchcc occurs ; [] |466| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[63],#0           ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 469,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 469 | i = WTT - 10;                                                          
; 473 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |469| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 458,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |458| 
        CMP       AR1,#500              ; [CPU_] |458| 
        B         $C$L71,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |474| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_scia_puts")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_delay_us")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |476| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_scia_puts")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_delay_us")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |478| 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_scia_puts")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |479| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_delay_us")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |479| 
        ; call occurs [#_delay_us] ; [] |479| 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |480| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_scia_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |480| 
        ; call occurs [#_scia_puts] ; [] |480| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 482,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 482 | j = 0;                                                                 
; 483 | for (i = 0; i < 100; i++)               // 2s                          
; 485 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[63],#0           ; [CPU_] |482| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 486,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmds] ; [] |486| 
        CMPB      AL,#0                 ; [CPU_] |486| 
        B         $C$L75,EQ             ; [CPU_] |486| 
        ; branchcc occurs ; [] |486| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |487| 
        ; call occurs [#_scia_rx_getcmd] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       T,*-SP[63]            ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |488| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |488| 
        ; call occurs [#_lcd_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[63]              ; [CPU_] |489| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |489| 
        B         $C$L75,LT             ; [CPU_] |489| 
        ; branchcc occurs ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[63],#1           ; [CPU_] |490| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 493,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 493 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |493| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_delay_us")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |493| 
        ; call occurs [#_delay_us] ; [] |493| 
	.dwpsn	file "../Source/prod.c",line 483,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |483| 
        ; branchcc occurs ; [] |483| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 496,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |496| 
        B         $C$L78,UNC            ; [CPU_] |496| 
        ; branch occurs ; [] |496| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 435,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |435| 
        SPM       #0                    ; [CPU_] 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_delay_us")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |435| 
        ; call occurs [#_delay_us] ; [] |435| 
	.dwpsn	file "../Source/prod.c",line 433,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |433| 
        ; branchcc occurs ; [] |433| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 499,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 501 | #ifdef SDHCCARD                                                        
; 503 | // check SD card                                                       
; 504 | lcd_puts( "SD Card Testing...", 0 );                                   
; 505 | sd_write = 0;                                                          
; 506 | sd_close = 0;                                                          
; 507 | sd_cnt = 0;                                                            
; 508 | fp = NULL;                                                             
; 510 | f_mount( 0, &Fatfs );                                                  
; 512 | res = f_getfree( "0:", &fsize, &fs );                                  
; 514 | sprintf( buff, "%02X", res );                                          
; 515 | lcd_puts( buff, 18 );                                                  
; 517 | if( !res )                                                             
; 519 |         switch( fs->fs_type & 3 )                                      
; 521 |                 case 1:                                                
; 522 |                 lcd_puts( "FAT12", 20 );                               
; 523 |                 break;                                                 
; 524 |                 case 2:                                                
; 525 |                 lcd_puts( "FAT16", 20 );                               
; 526 |                 break;                                                 
; 527 |                 case 3:                                                
; 528 |                 lcd_puts( "FAT32", 20 );                               
; 529 |                 break;                                                 
; 532 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 533 |         lcd_puts( buff, 40 );                                          
; 535 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 536 |         lcd_puts( buff, 60 );                                          
; 538 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 540 |                 switch( res )                                          
; 542 |                         case CT_MMC:                                   
; 543 |                         lcd_puts( "on MMC", 26 );                      
; 544 |                         break;                                         
; 545 |                         case CT_SD1:                                   
; 546 |                         lcd_puts( "on SDV1", 26 );                     
; 547 |                         break;                                         
; 548 |                         case CT_SD2:                                   
; 549 |                         lcd_puts( "on SDV2", 26 );                     
; 550 |                         break;                                         
; 551 |                         case CT_SD2|CT_BLOCK:                          
; 552 |                         lcd_puts( "on SDHC", 26 );                     
; 553 |                         break;                                         
; 554 |                         default:                                       
; 555 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 556 |                         break;                                         
; 561 | else                                                                   
; 563 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 579 | for( i = 0; i < 100; i++ )                      // 2s                  
; 581 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 583 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |499| 
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |499| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |585| 
        MOVB      AH,#2                 ; [CPU_] |585| 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_led_set")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |586| 
        MOVB      AH,#0                 ; [CPU_] |586| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_led_set")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |586| 
        ; call occurs [#_led_set] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_update_units")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |588| 
        ; call occurs [#_update_units] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |590| 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | ad7738_resetvall( BM_ALL);              // reset valley                
; 592 | line = 0;                                                              
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | // main loop                                                           
; 596 | //=====================================================================
;     | =====//                                                                
; 597 | Uint16 data[8];                                                        
; 598 | Uint16 data2[8];                                                       
; 599 | Uint16 data3[8];                                                       
; 600 | int n;                                                                 
; 601 | Uint16 res;                                                            
; 602 | res = 0;                                                               
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |591| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |591| 
        ; call occurs [#_ad7738_resetvall] ; [] |591| 
	.dwpsn	file "../Source/prod.c",line 603,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 603 | SPICANInit();                                                          
; 604 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |603| 
        ; call occurs [#_SPICANInit] ; [] |603| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 606,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 606 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |606| 
	.dwpsn	file "../Source/prod.c",line 609,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 609 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |609| 
        ; call occurs [#_SPICANReadStat] ; [] |609| 
        MOV       *-SP[46],AL           ; [CPU_] |609| 
	.dwpsn	file "../Source/prod.c",line 610,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 610 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |610| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |610| 
        ; call occurs [#_SPICANRead] ; [] |610| 
        MOV       *-SP[45],AL           ; [CPU_] |610| 
	.dwpsn	file "../Source/prod.c",line 611,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 611 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |611| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |611| 
        ; call occurs [#_SPICANRead] ; [] |611| 
        MOV       *-SP[44],AL           ; [CPU_] |611| 
	.dwpsn	file "../Source/prod.c",line 612,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 612 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |612| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |612| 
        ; call occurs [#_SPICANRead] ; [] |612| 
        MOV       *-SP[43],AL           ; [CPU_] |612| 
	.dwpsn	file "../Source/prod.c",line 613,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 613 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |613| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |613| 
        ; call occurs [#_SPICANRead] ; [] |613| 
        MOV       *-SP[42],AL           ; [CPU_] |613| 
	.dwpsn	file "../Source/prod.c",line 614,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 614 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |614| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |614| 
        ; call occurs [#_SPICANRead] ; [] |614| 
        MOV       *-SP[41],AL           ; [CPU_] |614| 
	.dwpsn	file "../Source/prod.c",line 615,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 615 | data[6] = SPICANRead(0x70);                                            
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |615| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |615| 
        ; call occurs [#_SPICANRead] ; [] |615| 
        MOV       *-SP[40],AL           ; [CPU_] |615| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | data[7] = SPICANRead(0x0F);                                            
;----------------------------------------------------------------------
        MOVB      AL,#15                ; [CPU_] |616| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |616| 
        ; call occurs [#_SPICANRead] ; [] |616| 
	.dwpsn	file "../Source/prod.c",line 618,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 618 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |618| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |616| 
	.dwpsn	file "../Source/prod.c",line 618,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |618| 
        MOVB      AL,#161               ; [CPU_] |618| 
        SUBB      XAR4,#46              ; [CPU_U] |618| 
        MOVZ      AR4,AR4               ; [CPU_] |618| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |618| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |618| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 619 | SPICANWaitForTXBuf(0);                                                 
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |619| 
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |619| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |619| 
	.dwpsn	file "../Source/prod.c",line 620,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 620 | SPICAN_T0_RTS();                                                       
;----------------------------------------------------------------------
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_SPICAN_T0_RTS       ; [CPU_] |620| 
        ; call occurs [#_SPICAN_T0_RTS] ; [] |620| 
	.dwpsn	file "../Source/prod.c",line 622,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 622 | data[0] = res;                                                         
; 623 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        MOVB      *-SP[46],#1,UNC       ; [CPU_] |622| 
	.dwpsn	file "../Source/prod.c",line 624,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 624 | data[1] = data[1] + 1;                                                 
; 625 | data[2] = data[2] + 1;                                                 
; 626 | data[3] = data[3] + 1;                                                 
; 627 | data[4] = data[4] + 1;                                                 
; 628 | data[5] = data[5] + 1;                                                 
; 629 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |624| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 631 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |631| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 626,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |626| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |631| 
        ; call occurs [#_SPICANRead] ; [] |631| 
        MOV       *-SP[46],AL           ; [CPU_] |631| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 632 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |632| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |632| 
        ; call occurs [#_SPICANRead] ; [] |632| 
        MOV       *-SP[45],AL           ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 633,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 633 | data[2] = SPICANRead(SPICAN_TXB0D0 + 2);                               
;----------------------------------------------------------------------
        MOVB      AL,#56                ; [CPU_] |633| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |633| 
        ; call occurs [#_SPICANRead] ; [] |633| 
        MOV       *-SP[44],AL           ; [CPU_] |633| 
	.dwpsn	file "../Source/prod.c",line 634,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 634 | data[3] = SPICANRead(SPICAN_TXB0D0 + 3);                               
;----------------------------------------------------------------------
        MOVB      AL,#57                ; [CPU_] |634| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |634| 
        ; call occurs [#_SPICANRead] ; [] |634| 
        MOV       *-SP[43],AL           ; [CPU_] |634| 
	.dwpsn	file "../Source/prod.c",line 635,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 635 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |635| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |635| 
        ; call occurs [#_SPICANRead] ; [] |635| 
        MOV       *-SP[42],AL           ; [CPU_] |635| 
	.dwpsn	file "../Source/prod.c",line 636,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 636 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |636| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |636| 
        ; call occurs [#_SPICANRead] ; [] |636| 
        MOV       *-SP[41],AL           ; [CPU_] |636| 
	.dwpsn	file "../Source/prod.c",line 637,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 637 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 639 | for (;;) {                                                             
; 641 |         data[7] = SPICANReadBufs(data2, data3);                        
; 643 |         if(data[7] > 1)                                                
; 645 |                 SPICANWaitForTXBuf(0);                                 
; 646 |                 SPICANReadSetT0Message(0xA2, 8, data2);                
; 647 |                 SPICANWaitForTXBuf(0);                                 
; 648 |                 SPICAN_T0_RTS();                                       
; 650 |         else if(data[7] > 0)                                           
; 652 |                 SPICANWaitForTXBuf(0);                                 
; 653 |                 SPICANReadSetT0Message(0xA3, 8, data3);                
; 654 |                 SPICANWaitForTXBuf(0);                                 
; 655 |                 SPICAN_T0_RTS();                                       
; 658 |         // Check for any errors                                        
; 659 |         data[6] = SPICANRead(0x2D);                                    
; 661 |         // check SW2 for reset command                                 
; 662 |         if (!(0x0010 & INBTTN)) {                                      
; 664 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 665 |                 ad7738_resetpeak(0x0f);                                
; 666 |                 ad7738_resetvall(0x0f);                                
; 668 | #if(0)                                                                 
; 669 |                 // DEBUG: tagid                                        
; 670 |                 lcd_clear();                                           
; 671 |                 for( i = 0; i < 4; i++ )                               
; 673 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 674 |                         lcd_puts( buff, i * 20 );                      
; 676 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 678 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 680 |                 // DEBUG: tagid                                        
; 681 |                 update_units();                                        
; 682 | #endif                                                                 
; 686 | #ifdef SDHCCARD                                                        
; 687 |         // write to SD card file if flag set                           
; 688 |         if( sd_write && fp )                                           
; 690 |                 if( prod_getavail() > 31 || sd_close )                 
; 692 |                         led_set( LED2, LED_RED );                      
; 694 |                         k = 32;                                        
; 696 |                         while( prod_getavail() && k-- )                
; 698 |                                 wtp = prod_getnext();                  
; 700 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 702 |                                         intp = (Uint16*)&wtp->adw[i];  
; 704 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 706 |                                         for( j = 0; j < 2; j++ )       
; 708 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 709 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 710 |                                                 intp++;                
; 713 |                                 sd_cnt++;                              
; 716 |                         if( sd_close )                                 
; 718 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 719 |                                 if( res )                              
; 721 |                                         sprintf( buff, "%02X ", res ); 
; 722 |                                         scia_puts( buff );             
; 725 |                                 res = f_close( fp );                   
; 726 |                                 fp = NULL;                             
; 728 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 729 |                                 scia_puts( buff );                     
; 731 |                                 sd_write = 0;                          
; 732 |                                 sd_close = 0;                          
; 735 |                         led_set( LED2, LED_OFF );                      
; 738 | #endif                                                                 
; 740 |         //=============================================================
;     | =====================//                                                
; 741 |         // update the vfd
;     |                          //                                            
; 742 |         //=============================================================
;     | =====================//                                                
; 743 |         // if there is new "monitor data" ready                        
; 744 |         if (ad7738_monrdy()) {                                         
; 745 |                 // clear the ready flag                                
; 746 |                 ad7738_monclr();                                       
; 748 |                 // display the appropriate data                        
; 749 |                 switch (conf_data.vfd[line].what) {                    
; 750 |                 case VFD_LOAD:                                         
; 751 |                         wtp = ad7738_getmon();                         
; 752 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 753 |                         goto VFD_LINE_BUFF;                            
; 755 |                 case VFD_PEAK:                                         
; 756 |                         wtp = ad7738_getpeak();                        
; 757 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 758 |                         goto VFD_LINE_BUFF;                            
; 760 |                 case VFD_VALL:                                         
; 761 |                         wtp = ad7738_getvall();                        
; 762 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 763 |                         goto VFD_LINE_BUFF;                            
; 765 |                 case VFD_POSI:                                         
; 766 |                         wtp = ad7738_getmon();                         
; 767 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 768 |                         goto VFD_LINE_BUFF;                            
; 770 |                 case VFD_VELO:                                         
; 771 |                         wtp = ad7738_getmon();                         
; 772 |                         //wtp = ad7738_getpeak();                      
; 773 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 775 |                         // display appropriate decimal points          
; 776 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 777 |                         case 0:                                        
; 778 |                                 sprintf(buff, "%10.0f", tempft);       
; 779 |                                 break;                                 
; 780 |                         case 1:                                        
; 781 |                                 sprintf(buff, "%10.1f", tempft);       
; 782 |                                 break;                                 
; 783 |                         case 2:                                        
; 784 |                                 sprintf(buff, "%10.2f", tempft);       
; 785 |                                 break;                                 
; 786 |                         case 3:                                        
; 787 |                                 sprintf(buff, "%10.3f", tempft);       
; 788 |                                 break;                                 
; 789 |                         case 4:                                        
; 790 |                                 sprintf(buff, "%10.4f", tempft);       
; 791 |                                 break;                                 
; 792 |                         case 5:                                        
; 793 |                                 sprintf(buff, "%10.5f", tempft);       
; 794 |                                 break;                                 
; 796 |                         break;                                         
; 798 |                 case VFD_LIMIT:                                        
; 799 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 800 |                         sprintf(buff, "  %s",                          
; 801 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 802 |                         break;                                         
; 803 |                 case VFD_TEMP:                                         
; 804 |                         sprintf(buff, "%10.1f", tempvalue);            
; 805 |                         break;                                         
; 808 |                 // print to LCD                                        
; 809 |                 lcd_puts(buff, 7 + 20 * line);                         
; 811 |                 line++;                                                
; 812 |                 if (line >= VFD_MAX) {                                 
; 813 |                         line = 0;                                      
; 817 |         //=============================================================
;     | =====================//                                                
; 818 |         // temperature sensor reading
;     |                  //                                                    
; 819 |         //=============================================================
;     | =====================//                                                
; 821 |         // if its time to start a temp conversion...                   
; 822 |         if (ad7738_tempstart()) {                                      
; 823 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 826 |         // if its time to start a temp reading...                      
; 827 |         else if (ad7738_tempread()) {                                  
; 828 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 829 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 832 |         //=============================================================
;     | =====================//                                                
; 833 |         // Auto ID detection
;     |                  //                                                    
; 834 |         //=============================================================
;     | =====================//                                                
; 835 |         // check for changes in the load cells connected by "TAG ID"   
; 836 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 837 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 839 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 841 |                                 // new loadcell just plugged in        
; 842 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 843 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 845 |                                         DINT;                          
; 846 |                                         maf_rst();                     
; 847 |                                         ad7738_setcal();               
; 848 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 849 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 850 |                                         EINT;                          
; 852 |                                         lcd_clear();                   
; 853 |                                         update_units();                
; 854 |                                         autoidchanged = 1;             
; 857 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 858 |                 } else {                                               
; 860 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 862 |                         if (autoid[tagch]) {                           
; 863 |                                 autoid[tagch] = 0;                     
; 864 |                                 lcd_clear();                           
; 865 |                                 update_units();                        
; 866 |                                 autoidchanged = 1;                     
; 870 |                 tagch++;                                               
; 871 |                 if (tagch >= CHS_MAX) {                                
; 872 |                         tagch = 0;                                     
; 876 |         //=============================================================
;     | =====================//                                                
; 877 |         // Data streamming
;     |                          //                                            
; 878 |         //=============================================================
;     | =====================//                                                
; 879 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 880 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 881 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 882 |                 //      taking into account decimation, etc.           
; 883 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 885 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 887 |                         ds_ct = 0;                                     
; 888 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 889 |                         j = 0;                                         
; 890 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 891 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 892 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 893 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 894 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 895 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 896 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 898 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 899 |                                 wtp = prod_getnext();                  
; 900 |                                 if (--k) {                             
; 901 |                                         continue;
;     |          // decimation                                                 
; 903 |                                 k = ds_dec;                            
; 904 |                                 ds_ct++;                               
; 906 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 907 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 908 |                                         if (ds_bm & ch) {              
; 909 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 910 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 911 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 912 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 913 |                                                         intp++;        
; 916 |                                         ch <<= 1;
;     |          // next channel                                               
; 919 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 920 |                                         if (ds_bm & ch) {              
; 921 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 922 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 923 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 924 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 925 |                                                         intp++;        
; 928 |                                         ch <<= 1;
;     |          // next channel                                               
; 931 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 932 |                                         if (ds_bm & ch) {              
; 933 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 934 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 935 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 936 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 937 |                                                         intp++;        
; 940 |                                         ch <<= 1;
;     |          // next channel                                               
; 944 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 946 |                         if (ds_stop) {                                 
; 947 |                                 ds_en = 0;                             
; 950 |                         scia_send_bin(buff, j);         // send data   
; 952 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 953 |                 } else if (ad7738_getlimitchgd()) {                    
; 954 |                         j = 0;                                         
; 955 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 956 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 957 |                         for (i = 0; i < LIM_MAX; i++) {                
; 958 |                                 buff[j++] = ad7738_getlimitst(i);      
; 960 |                         scia_send_bin(buff, j);         // send data   
; 961 |                 } else if (autoidchanged) {                            
; 962 |                         autoidchanged = 0;                             
; 964 |                         j = 0;                                         
; 965 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 966 |                         buff[j++] = GetAutoId;                  // 1,  
; 967 |                         buff[j++] = conf_data.tagiden;                 
; 968 |                         for (i = 0; i < CHS_MAX; i++) {                
; 969 |                                 buff[j++] = autoid[i];                 
; 971 |                         scia_send_bin(buff, j);         // send data   
; 977 |         //=============================================================
;     | =====================//                                                
; 978 |         // serial command processing
;     |                  //                                                    
; 979 |         //=============================================================
;     | =====================//                                                
; 981 |         //=============================================================
;     | =====================//                                                
; 982 |         // Check for available command in the command buffer
;     |                  //                                                    
; 983 |         //=============================================================
;     | =====================//                                                
; 984 |         if (0 == scia_rx_getcmds()) {                                  
; 985 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 988 |         //=============================================================
;     | =====================//                                                
; 989 |         // Read one command from command buffer
;     |                  //                                                    
; 990 |         //=============================================================
;     | =====================//                                                
; 991 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 993 |         //=============================================================
;     | =====================//                                                
; 994 |         // Empty command
;     |                          //                                            
; 995 |         //=============================================================
;     | =====================//                                                
; 996 |         if (0 == cmdlen) {                                             
; 997 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 998 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 999 |                 continue;                                              
; 1002 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 1004 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1005 |                 // ASCII command mode processing
;     |                                  //                                    
; 1006 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1008 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 1011 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1012 |                 // Current configuration print out
;     |                          //                                            
; 1013 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1015 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1079 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1081 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1083 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1086 |                         case 'A':                               // all 
; 1088 |                                 version = VERSION;                     
; 1089 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1090 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1091 |                                 scia_puts(buff);                       
; 1092 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1093 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1094 |                                 scia_puts(buff);                       
; 1095 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1096 |                                 scia_puts(buff);                       
; 1097 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1098 |                                                 conf_data.uname);      
; 1099 |                                 scia_puts(buff);                       
; 1101 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1102 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1103 |                                 scia_puts(buff);                       
; 1104 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1105 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1106 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1107 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1108 |                                         scia_puts(buff);               
; 1110 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1111 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1112 |                                 scia_puts(buff);                       
; 1114 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1115 |                                                 conf_data.filter);     
; 1116 |                                 scia_puts(buff);                       
; 1118 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1119 |                                         scia_puts("\r\n");             
; 1120 |                                         print_channel(ch);
;     |          // channel info                                               
; 1121 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1124 |                                 scia_puts("\r\n");                     
; 1125 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1126 |                                                 conf_data.velfilter);  
; 1127 |                                 scia_puts(buff);                       
; 1128 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1129 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1130 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1131 |                                         scia_puts(buff);               
; 1133 |                                 print_vfd();                           
; 1134 |                                 print_dac();                           
; 1135 |                                 print_limits();                        
; 1136 |                                 break;                                 
; 1138 |                         case 'S':
;     |  // sensor list                                                        
; 1140 |                                 scia_puts("\r\n");                     
; 1142 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1143 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1144 |                                         scia_puts(buff);               
; 1145 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1147 |                                 break;                                 
; 1149 |                         case 'D':
;     |  // Display settings                                                   
; 1151 |                                 print_vfd();                           
; 1152 |                                 break;                                 
; 1154 |                         case 'O':
;     |  // DAC settings                                                       
; 1156 |                                 print_dac();                           
; 1157 |                                 break;                                 
; 1159 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1161 |                                 print_limits();                        
; 1162 |                                 break;                                 
; 1164 |                         default:                                       
; 1165 |                                 goto INVALIDCMD;                       
; 1168 |                         break;                                         
; 1170 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1171 |                         // Unit config commands
;     |                                  //                                    
; 1172 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1173 |                 case 'U':                                       // Unit
; 1175 |                         if (cmdlen < 2) {                              
; 1176 |                                 goto INVALIDCMD;                       
; 1179 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1182 |                         case 'S':
;     |  // unit serial number                                                 
; 1184 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1185 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1186 |                                 conf_data.usn = atol(cmdbuff);         
; 1188 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1189 |                                 scia_puts(buff);                       
; 1190 |                                 unsaved = 1;                           
; 1191 |                                 break;                                 
; 1193 |                         case 'N':
;     |  // unit name                                                          
; 1195 |                                 j = sizeof(conf_data.uname) - 1;       
; 1196 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1197 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1198 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1200 |                                         cmdlen = j;                    
; 1201 |                                         cmdbuff[j] = '\0';             
; 1203 |                                 // also copy the null terminater       
; 1204 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1205 |                                                 cmdlen + 1);           
; 1206 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1208 |                                 scia_puts(cmdbuff);                    
; 1209 |                                 scia_puts("\r\n");                     
; 1210 |                                 unsaved = 1;                           
; 1211 |                                 break;                                 
; 1213 |                         case 'C':
;     |  // current sensor                                                     
; 1215 |                                 // channel number                      
; 1216 |                                 j = CHS_MAX;                           
; 1217 |                                 do {                                   
; 1218 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1219 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1220 |                                         ch = atoi(cmdbuff);            
; 1221 |                                         scia_puts(cmdbuff);            
; 1222 |                                         if (ch > 0 && ch <= j) {       
; 1223 |                                                 break;
;     |          // valid input channel number                                 
; 1225 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1226 |                                 } while (j);                           
; 1227 |                                 scia_puts("\r\n");                     
; 1228 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1230 |                                 // sensor number                       
; 1231 |                                 j = SENSPCH;                           
; 1232 |                                 do {                                   
; 1233 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1234 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1235 |                                         ss = atoi(cmdbuff);            
; 1236 |                                         scia_puts(cmdbuff);            
; 1237 |                                         if (ss > 0 && ss <= j) {       
; 1238 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1240 |                                                 break;                 
; 1242 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1243 |                                 } while (j);                           
; 1244 |                                 scia_puts("\r\n");                     
; 1245 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1247 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1248 |                                                 ch + 1, ss + 1);       
; 1249 |                                 scia_puts(buff);                       
; 1250 |                                 print_sensor(ss);                      
; 1251 |                                 unsaved = 1;                           
; 1253 |                                 DINT;                                  
; 1254 |                                 conf_data.ch[ch].ci = ss;              
; 1255 |                                 ad7738_setcal();                       
; 1257 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1258 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1259 |                                 EINT;                                  
; 1261 |                                 update_units();                        
; 1262 |                                 break;                                 
; 1264 |                         case 'I':
;     |  // interface                                                          
; 1266 |                                 for (j = 0; j < 4; j++) {              
; 1267 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1268 |                                         scia_puts(buff);               
; 1269 |                                         if (j < 3) {                   
; 1270 |                                                 scia_puts(", ");       
; 1273 |                                 scia_puts("\r\n");                     
; 1274 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1275 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1276 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1277 |                                 scia_puts(cmdbuff);                    
; 1278 |                                 scia_puts("\r\n");                     
; 1279 |                                 if (cmdlen == 0) {                     
; 1280 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1281 |                                         break;                         
; 1283 |                                 pt = atoi(cmdbuff);                    
; 1284 |                                 if (pt > 3) {                          
; 1285 |                                         scia_puts(                     
; 1286 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1287 |                                         break;                         
; 1289 |                                 conf_data.rxdir = pt;                  
; 1290 |                                 sprintf(buff,                          
; 1291 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1292 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1293 |                                 scia_puts(buff);                       
; 1294 |                                 scia_puts(                             
; 1295 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1296 |                                 unsaved = 1;                           
; 1297 |                                 break;                                 
; 1299 |                         case 'B':
;     |  // baudrate                                                           
; 1301 |                                 if (conf_data.rxdir == SDIR_USB        
; 1302 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1303 |                                         scia_puts(                     
; 1304 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1305 |                                         break;                         
; 1308 |                                 for (j = 0; j < 8; j++) {              
; 1309 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1310 |                                         scia_puts(buff);               
; 1311 |                                         if (j < 7) {                   
; 1312 |                                                 scia_puts(", ");       
; 1315 |                                 scia_puts("\r\n");                     
; 1316 |                                 cmdlen = sprintf(buff,                 
; 1317 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1318 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1319 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1320 |                                 scia_puts(cmdbuff);                    
; 1321 |                                 scia_puts("\r\n");                     
; 1322 |                                 if (cmdlen == 0) {                     
; 1323 |                                         scia_puts(                     
; 1324 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1325 |                                         break;                         
; 1327 |                                 pt = atoi(cmdbuff);                    
; 1328 |                                 if (pt > 7) {                          
; 1329 |                                         scia_puts(                     
; 1330 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1331 |                                         break;                         
; 1333 |                                 conf_data.baud = pt;                   
; 1334 |                                 sprintf(buff,                          
; 1335 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1336 |                                                 BAUD[conf_data.baud]); 
; 1337 |                                 scia_puts(buff);                       
; 1338 |                                 scia_puts(                             
; 1339 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1340 |                                 unsaved = 1;                           
; 1341 |                                 break;                                 
; 1343 |                         case 'F':
;     |  // averaging filter size                                              
; 1345 |                                 j = MAF_MAX;                           
; 1346 |                                 do {                                   
; 1347 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1348 |                                                         j);            
; 1349 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1350 |                                         i = atoi(cmdbuff);             
; 1351 |                                         scia_puts(cmdbuff);            
; 1352 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1353 |                                                 break;
;     |          // valid number input                                         
; 1355 |                                         scia_puts(                     
; 1356 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1357 |                                 } while (j);                           
; 1358 |                                 scia_puts("\r\n");                     
; 1360 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1361 |                                                 i);                    
; 1362 |                                 scia_puts(buff);                       
; 1363 |                                 unsaved = 1;                           
; 1365 |                                 // update new value                    
; 1366 |                                 DINT;                                  
; 1367 |                                 conf_data.filter = i;                  
; 1368 |                                 maf_rst();                             
; 1369 |                                 EINT;                                  
; 1370 |                                 break;                                 
; 1372 |                         case 'W':
;     |  // diff window ratio                                                  
; 1374 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1375 |                                                 conf_data.diffwin);    
; 1376 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1377 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1378 |                                 scia_puts(cmdbuff);                    
; 1379 |                                 scia_puts("\r\n");                     
; 1381 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1382 |                                                 conf_data.diffwin);    
; 1383 |                                 scia_puts(buff);                       
; 1384 |                                 unsaved = 1;                           
; 1386 |                                 DINT;                                  
; 1387 |                                 ad7738_setcal();                       
; 1388 |                                 maf_rst();                             
; 1389 |                                 EINT;                                  
; 1390 |                                 break;                                 
; 1392 |                         default:                                       
; 1393 |                                 goto INVALIDCMD;                       
; 1396 |                         break;                                         
; 1398 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1399 |                         // Board calibration
;     |                                  //                                    
; 1400 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1401 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1403 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1404 |                                 goto INVALIDCMD;                       
; 1407 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1408 |                                 goto INVALIDCMD;                       
; 1409 |                                 // invalid calibration method          
; 1412 |                         // channel index                               
; 1413 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1414 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1415 |                                 goto INVALIDCMD;                       
; 1416 |                                 // invalid channel number              
; 1418 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1420 |                         volt[0] = 0;                                   
; 1421 |                         volt[1] = 0;                                   
; 1422 |                         for (j = 3; j < cmdlen; j++) {                 
; 1423 |                                 if (cmdbuff[j] == 'X') {               
; 1424 |                                         j++;                           
; 1425 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1428 |                                 if (cmdbuff[j] == 'Y') {               
; 1429 |                                         j++;                           
; 1430 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1434 |                         if (volt[0] == volt[1]) {                      
; 1435 |                                 goto INVALIDCMD;                       
; 1436 |                                 // invalid parameters                  
; 1439 |                         lcd_clear();                                   
; 1440 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1441 |                         lcd_puts(buff, 20);                            
; 1442 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1443 |                         lcd_puts(buff, 40);                            
; 1444 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1445 |                         lcd_puts(buff, 60);                            
; 1447 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1450 |                         case 'C':
;     |  // board ADC calibration                                              
; 1452 |                                 lcd_puts("Board Calibration...", 0);   
; 1454 |                                 sprintf(buff,                          
; 1455 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1456 |                                                 ch + 1);               
; 1457 |                                 scia_puts(buff);                       
; 1469 |                                 for (j = 0; j < 2; j++) {              
; 1470 |                                         sprintf(buff,                  
; 1471 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1472 |                                                         volt[j]);      
; 1473 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1474 |                                         scia_puts("Reading ... ");     
; 1476 |                                         dsum[j] = 0;                   
; 1477 |                                         sampcnt = CAL_SAMPLES;         
; 1478 |                                         while (sampcnt--) {            
; 1479 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1480 |                                                         delay_us(1);
;     |                  // wait                                               
; 1482 |                                                 cntp = ad7738_getraw();
; 1483 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1486 |                                         scia_puts("done\r\n");         
; 1489 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1490 |                                                 / (dsum[1] - dsum[0]); 
; 1492 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1493 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1494 |                                 scia_puts(buff);                       
; 1495 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1496 |                                 break;                                 
; 1498 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1500 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1501 |                                                 || volt[1] < -10) {    
; 1502 |                                         lcd_clear();                   
; 1503 |                                         update_units();                
; 1504 |                                         goto INVALIDCMD;               
; 1505 |                                         // invalid parameters          
; 1508 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1510 |                                 sprintf(buff,                          
; 1511 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1512 |                                                 ch + 1);               
; 1513 |                                 scia_puts(buff);                       
; 1514 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1515 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1517 |                                 for (j = 0; j < 2; j++) {              
; 1518 |                                         if (volt[j] < 0) {             
; 1519 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1520 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1521 |                                         } else {                       
; 1522 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1523 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1525 |                                         if (dsum[0] <= 0) {            
; 1526 |                                                 dacc[j] = 0;           
; 1527 |                                         } else if (dsum[0] >= 0xffff) {
; 1528 |                                                 dacc[j] = 0xffff;      
; 1529 |                                         } else {                       
; 1530 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1533 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1534 |                                         scia_puts(buff);               
; 1535 |                                         cmdbuff[0] = '\0';             
; 1537 |                                         do {                           
; 1538 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1539 |                                                 latch_dac();           
; 1541 |                                                 do {                   
; 1542 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1543 | 
;     |  sizeof(cmdbuff));                                                     
; 1544 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1545 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1547 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1548 |                                                         break;
;     |                  // done                                               
; 1551 |                                                 i = atoi(cmdbuff + 1); 
; 1552 |                                                 if (i == 0) {          
; 1553 |                                                         i = 1;         
; 1556 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1558 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1559 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1560 |                                                         } else {       
; 1561 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1563 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1565 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1566 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1567 |                                                         } else {       
; 1568 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1571 |                                         } while (i);                   
; 1573 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1574 |                                         scia_puts(buff);               
; 1577 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1579 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1580 |                                 cmdbuff[0] = '\0';                     
; 1582 |                                 do {                                   
; 1583 |                                         mcbsp_xmit(dacc[2], ch);       
; 1584 |                                         latch_dac();                   
; 1586 |                                         do {                           
; 1587 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1588 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1589 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1591 |                                         if ('S' == cmdbuff[0]) {       
; 1592 |                                                 break;
;     |          // done                                                       
; 1595 |                                         i = atoi(cmdbuff + 1);         
; 1596 |                                         if (i == 0) {                  
; 1597 |                                                 i = 1;                 
; 1600 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1602 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1603 |                                                         dacc[2] += i;  
; 1604 |                                                 } else {               
; 1605 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1607 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1609 |                                                 if (dacc[2] >= i) {    
; 1610 |                                                         dacc[2] -= i;  
; 1611 |                                                 } else {               
; 1612 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1615 |                                 } while (i);                           
; 1617 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1618 |                                 scia_puts(buff);                       
; 1620 |                                 // do the calculations                 
; 1621 |                                 if (volt[0] < 0) {                     
; 1622 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1623 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1624 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1625 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1626 |                                 } else {                               
; 1627 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1628 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1629 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1630 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1632 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1634 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1636 |                                 sprintf(buff,                          
; 1637 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1638 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1639 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1640 |                                 scia_puts(buff);                       
; 1642 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1643 |                                 break;                                 
; 1645 |                         default:                                       
; 1646 |                                 goto INVALIDCMD;                       
; 1649 |                         unsaved = 1;                                   
; 1650 |                         lcd_clear();                                   
; 1651 |                         update_units();                                
; 1653 |                         DINT;                                          
; 1654 |                         ad7738_setcal();                               
; 1655 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1656 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1657 |                         EINT;                                          
; 1658 |                         break;                                         
; 1660 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1661 |                         // Channel sensor calibration
;     |                                  //                                    
; 1662 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1663 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1665 |                         if (cmdlen < 2) {                              
; 1666 |                                 goto INVALIDCMD;                       
; 1669 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1670 |                                         && 'S' != cmdbuff[1]) {        
; 1671 |                                 goto INVALIDCMD;                       
; 1672 |                                 // invalid calibration method          
; 1674 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1676 |                         lcd_clear();                                   
; 1677 |                         lcd_puts("Sensor Calibration..", 0);           
; 1679 |                         // === read informations ====                  
; 1680 |                         // channel number                              
; 1681 |                         j = CHS_MAX;                                   
; 1682 |                         do {                                           
; 1683 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1684 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1685 |                                 ch = atoi(cmdbuff);                    
; 1686 |                                 scia_puts(cmdbuff);                    
; 1687 |                                 if (ch > 0 && ch <= j) {               
; 1688 |                                         break;
;     |  // valid input channel number                                         
; 1690 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1691 |                         } while (j);                                   
; 1692 |                         scia_puts("\r\n");                             
; 1693 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1695 |                         // sensor number                               
; 1696 |                         j = SENSPCH;                                   
; 1697 |                         do {                                           
; 1698 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1699 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1700 |                                 ss = atoi(cmdbuff);                    
; 1701 |                                 scia_puts(cmdbuff);                    
; 1702 |                                 if (ss > 0 && ss <= j) {               
; 1703 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1705 |                                         break;                         
; 1707 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1708 |                         } while (j);                                   
; 1709 |                         scia_puts("\r\n");                             
; 1710 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1712 |                         // put on the vfd                              
; 1713 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1714 |                         lcd_puts(buff, 20);                            
; 1716 |                         // sensor serial number                        
; 1717 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1718 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1719 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1720 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1722 |                                 cmdlen = j;                            
; 1723 |                                 cmdbuff[j] = '\0';                     
; 1725 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1726 |                         scia_puts(cmdbuff);                            
; 1727 |                         scia_puts("\r\n");                             
; 1729 |                         // sensor label                                
; 1730 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1731 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1732 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1733 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1735 |                                 cmdlen = j;                            
; 1736 |                                 cmdbuff[j] = '\0';                     
; 1738 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1739 |                         scia_puts(cmdbuff);                            
; 1740 |                         scia_puts("\r\n");                             
; 1742 |                         // unit                                        
; 1743 |                         for (j = 0; j < 7; j++) {                      
; 1744 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1746 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1747 |                         scia_puts(buff);                               
; 1748 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1749 |                                         sizeof(cmdbuff));              
; 1750 |                         tsensor.unit = atoi(cmdbuff);                  
; 1752 |                         switch (tsensor.unit) {                        
; 1753 |                         case 0:                                 // lb  
; 1754 |                         case 1:                                 // kg  
; 1755 |                                 tsensor.unit |= 0x10;                  
; 1756 |                                 break;                                 
; 1757 |                         case 2:                                 // in  
; 1758 |                         case 3:                                 // cm  
; 1759 |                         case 4:                                 // mm  
; 1760 |                                 tsensor.unit |= 0x20;                  
; 1761 |                                 break;                                 
; 1762 |                         case 5:                                 // ps  
; 1763 |                                 tsensor.unit |= 0x30;                  
; 1764 |                                 break;                                 
; 1765 |                         case 6:                                 // nm  
; 1766 |                                 tsensor.unit |= 0x40;                  
; 1767 |                                 break;                                 
; 1768 |                         case 7:                                        
; 1769 |                         case 8:                                        
; 1770 |                         case 15:                                       
; 1771 |                                 tsensor.unit |= 0xf0;                  
; 1772 |                                 break;                                 
; 1773 |                         default:                                       
; 1774 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1775 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1776 |                                 break;                                 
; 1778 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1779 |                         tsensor.ufactor = 1;                    // 1:1 
; 1781 |                         scia_puts(cmdbuff);                            
; 1782 |                         scia_puts("\r\n");                             
; 1784 |                         // range                                       
; 1785 |                         j = 1;                                         
; 1786 |                         do {                                           
; 1787 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1788 |                                 tsensor.range = atof(cmdbuff);         
; 1789 |                                 if (tsensor.range != 0) {              
; 1790 |                                         break;                         
; 1792 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1793 |                         } while (j);                                   
; 1794 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1795 |                         scia_puts(cmdbuff);                            
; 1796 |                         scia_puts("\r\n");                             
; 1798 |                         tsensor.tagid = tagid(ch);                     
; 1800 |                         if (tsensor.tagid == 0) {                      
; 1801 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1802 |                         } else {                                       
; 1803 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1805 |                         scia_puts(buff);                               
; 1807 |                         switch (cmethod)
;     |  // on method code                                                     
; 1810 |                         case 'V':
;     |  // mv/v cal                                                           
; 1812 |                                 lcd_puts("Method: mv/v", 40);          
; 1814 |                                 tsensor.method = MD_RUN_MVV;           
; 1815 |                                 tsensor.points = 1;                    
; 1817 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1818 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1819 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1820 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1821 |                                 if (tsensor.slope[0] == 0) {           
; 1822 |                                         tsensor.slope[0] = 1;          
; 1824 |                                 scia_puts(cmdbuff);                    
; 1825 |                                 scia_puts("\r\n");                     
; 1827 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1828 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1830 |                                 scia_puts("Reading ... ");             
; 1832 |                                 dsum[0] = 0;                           
; 1833 |                                 sampcnt = CAL_SAMPLES;                 
; 1834 |                                 while (sampcnt--) {                    
; 1835 |                                         while (0 == ad7738_rawrdy()) { 
; 1836 |                                                 delay_us(1);
;     |          // wait                                                       
; 1839 |                                         cntp = ad7738_getraw();        
; 1840 |                                         dsum[0] += cntp->adc[ch];      
; 1842 |                                 scia_puts("done\r\n");                 
; 1844 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1845 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1846 |                                 break;                                 
; 1848 |                         case 'M':
;     |  // mass cal                                                           
; 1850 |                                 tsensor.method = MD_RUN_MAS;           
; 1852 |                                 // calibration points for mass cal only
; 1853 |                                 j = PNT_MAX;                           
; 1854 |                                 do {                                   
; 1855 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1856 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1857 |                                         tsensor.points = atoi(cmdbuff);
; 1858 |                                         scia_puts(cmdbuff);            
; 1859 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1860 |                                                 break;                 
; 1862 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1864 |                                 } while (j);                           
; 1865 |                                 scia_puts("\r\n");                     
; 1867 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1868 |                                 lcd_puts(buff, 40);                    
; 1870 |                                 // calculate the default point values  
; 1871 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1872 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1873 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1876 |                                 // read in value with default provided 
; 1877 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1878 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1879 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1880 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1882 |                                         // zero length response set the
;     |  default                                                               
; 1883 |                                         if (cmdlen > 0) {              
; 1884 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1886 |                                         scia_puts(cmdbuff);            
; 1887 |                                         scia_puts("\r\n");             
; 1890 |                                 // TODO: sort the list of points       
; 1892 |                                 // read adc count for each point       
; 1893 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1894 |                                         sprintf(buff,                  
; 1895 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1896 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1897 |                                                         j + 1);        
; 1898 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1899 |                                         scia_puts("Reading ... ");     
; 1901 |                                         dsum[0] = 0;                   
; 1902 |                                         sampcnt = CAL_SAMPLES;         
; 1903 |                                         while (sampcnt--) {            
; 1904 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1905 |                                                         delay_us(1);
;     |                  // wait                                               
; 1908 |                                                 cntp = ad7738_getraw();
; 1909 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1911 |                                         scia_puts("done\r\n");         
; 1912 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1915 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1916 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1917 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1918 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1919 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1920 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1921 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1922 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1923 | 
;     |  * tsensor.adc[j];                                                     
; 1925 |                                 break;                                 
; 1927 |                         case 'S':
;     |  // shunt cal                                                          
; 1929 |                                 lcd_puts("Method: shunt", 40);         
; 1931 |                                 tsensor.method = MD_RUN_SHT;           
; 1932 |                                 tsensor.points = 1;                    
; 1934 |                                 sprintf(buff,                          
; 1935 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1936 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1937 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1938 |                                 scia_puts(cmdbuff);                    
; 1939 |                                 scale = atof(cmdbuff);                 
; 1940 |                                 if (scale == 0) {                      
; 1941 |                                         scale = 1.46;                  
; 1942 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1944 |                                 scia_puts("\r\n");                     
; 1946 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1947 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1949 |                                 scia_puts("Reading ... ");             
; 1951 |                                 for (j = 0; j < 2; j++) {              
; 1952 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1954 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1955 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1956 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1958 |                                                 DINT;                  
; 1959 |                                                 maf_rst();             
; 1960 |                                                 EINT;                  
; 1961 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1964 |                                         dsum[j] = 0;                   
; 1965 |                                         sampcnt = CAL_SAMPLES;         
; 1966 |                                         while (sampcnt--) {            
; 1967 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1968 |                                                         delay_us(1);
;     |                  // wait                                               
; 1971 |                                                 cntp = ad7738_getraw();
; 1972 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1976 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1977 |                                 DINT;                                  
; 1978 |                                 maf_rst();                             
; 1979 |                                 EINT;                                  
; 1981 |                                 scia_puts("done\r\n");                 
; 1983 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1984 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1985 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1986 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1987 |                                 break;                                 
; 1989 |                         default:                                       
; 1990 |                                 lcd_clear();                           
; 1991 |                                 update_units();                        
; 1992 |                                 goto INVALIDCMD;                       
; 1995 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1996 |                         scia_getparam(                                 
; 1997 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1998 |                                         cmdbuff, sizeof(cmdbuff));     
; 1999 |                         scia_puts("Reading ... ");                     
; 2001 |                         for (j = 0; j < 2; j++) {                      
; 2002 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 2004 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 2005 |                                         for (i = 0; i < 50; i++) {     
; 2006 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 2008 |                                         DINT;                          
; 2009 |                                         maf_rst();                     
; 2010 |                                         EINT;                          
; 2011 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 2014 |                                 dsum[j] = 0;                           
; 2015 |                                 sampcnt = CAL_SAMPLES;                 
; 2016 |                                 while (sampcnt--) {                    
; 2017 |                                         while (0 == ad7738_rawrdy()) { 
; 2018 |                                                 delay_us(1);
;     |          // wait                                                       
; 2021 |                                         cntp = ad7738_getraw();        
; 2022 |                                         dsum[j] += cntp->adc[ch];      
; 2024 |                                 dsum[j] /= CAL_SAMPLES;                
; 2026 |                                 pt = 0;                                
; 2027 |                                 if (tsensor.points > 2) {              
; 2028 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2029 |                                                 pt++;                  
; 2032 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2033 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2036 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2037 |                         DINT;                                          
; 2038 |                         maf_rst();                                     
; 2039 |                         EINT;                                          
; 2041 |                         scia_puts("done\r\n");                         
; 2043 |                         tsensor.shunt = volt[1] - volt[0];             
; 2045 |                         // setup some other members of the structure   
; 2046 |                         tsensor.tare = 0;                              
; 2047 |                         tsensor.dacgain = 1;                           
; 2048 |                         tsensor.dacoff = 0;                            
; 2049 |                         tsensor.ch = ch;                               
; 2051 |                         DINT;                                          
; 2052 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2053 |                                         sizeof(sconf_t));              
; 2055 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2057 |                         ad7738_setcal();                               
; 2058 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2059 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2060 |                         EINT;                                          
; 2062 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2063 |                                         ch + 1, ss + 1);               
; 2064 |                         scia_puts(buff);                               
; 2065 |                         print_sensor(ss);                              
; 2067 |                         unsaved = 1;                                   
; 2068 |                         lcd_clear();                                   
; 2069 |                         update_units();                                
; 2070 |                         break;                                         
; 2072 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2073 |                         // sensor config commands
;     |                                          //                            
; 2074 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2075 |                 case 'S':                               // sensor      
; 2077 |                         if (cmdlen < 2) {                              
; 2078 |                                 goto INVALIDCMD;                       
; 2081 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2082 |                                         && 'D' != cmdbuff[1]) {        
; 2083 |                                 goto INVALIDCMD;                       
; 2084 |                                 // invalid command                     
; 2086 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2106 |                         // sensor number                               
; 2107 |                         j = SENSPCH;                                   
; 2108 |                         do {                                           
; 2109 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2110 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2111 |                                 ss = atoi(cmdbuff);                    
; 2112 |                                 scia_puts(cmdbuff);                    
; 2113 |                                 if (ss > 0 && ss <= j) {               
; 2114 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2116 |                                         break;                         
; 2118 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2119 |                         } while (j);                                   
; 2120 |                         scia_puts("\r\n");                             
; 2121 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2123 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2126 |                         case 'N':
;     |  // change sensor label                                                
; 2128 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2129 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2130 |                                                 ss + 1, j);            
; 2131 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2132 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2134 |                                         cmdlen = j;                    
; 2135 |                                         cmdbuff[j] = '\0';             
; 2137 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2138 |                                                 cmdlen + 1);           
; 2139 |                                 scia_puts(cmdbuff);                    
; 2140 |                                 scia_puts("\r\n");                     
; 2141 |                                 unsaved = 1;                           
; 2143 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2144 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2145 |                                 scia_puts(buff);                       
; 2146 |                                 break;                                 
; 2148 |                         case 'U':
;     |  // change the output unit                                             
; 2150 |                                 scale = 0;                             
; 2152 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2153 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2155 |                                         do {                           
; 2156 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2157 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2158 |                                                 j = atoi(cmdbuff);     
; 2159 |                                                 scia_puts(cmdbuff);    
; 2160 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2161 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2163 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2164 |                                         scia_puts("\r\n");             
; 2166 |                                         switch (j) {                   
; 2167 |                                         case 0:                        
; 2168 |                                                 scale = 1;             
; 2169 |                                                 j |= 0x10;             
; 2170 |                                                 break;                 
; 2171 |                                         case 1:                        
; 2172 |                                                 scale = LB_TO_KG;      
; 2173 |                                                 j |= 0x10;             
; 2174 |                                                 break;                 
; 2175 |                                         case 7:                        
; 2176 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2177 |                                                 j |= 0xf0;             
; 2178 |                                                 break;                 
; 2180 |                                         break;                         
; 2182 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2184 |                                         do {                           
; 2185 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2186 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2187 |                                                 j = atoi(cmdbuff);     
; 2188 |                                                 scia_puts(cmdbuff);    
; 2189 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2190 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2192 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2193 |                                         scia_puts("\r\n");             
; 2195 |                                         switch (j) {                   
; 2196 |                                         case 0:                        
; 2197 |                                                 scale = 1.0 / LB_TO_KG;
; 2198 |                                                 j |= 0x10;             
; 2199 |                                                 break;                 
; 2200 |                                         case 1:                        
; 2201 |                                                 scale = 1;             
; 2202 |                                                 j |= 0x10;             
; 2203 |                                                 break;                 
; 2204 |                                         case 7:                        
; 2205 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2206 |                                                 j |= 0xf0;             
; 2207 |                                                 break;                 
; 2209 |                                         break;                         
; 2211 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2213 |                                         do {                           
; 2214 |                                                 scia_getparam(         
; 2215 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2216 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2217 |                                                 j = atoi(cmdbuff);     
; 2218 |                                                 scia_puts(cmdbuff);    
; 2219 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2220 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2222 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2223 |                                         scia_puts("\r\n");             
; 2225 |                                         switch (j) {                   
; 2226 |                                         case 2:                        
; 2227 |                                                 scale = 1;             
; 2228 |                                                 j |= 0x20;             
; 2229 |                                                 break;                 
; 2230 |                                         case 3:                        
; 2231 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2232 |                                                 j |= 0x20;             
; 2233 |                                                 break;                 
; 2234 |                                         case 4:                        
; 2235 |                                                 scale = IN_TO_MM;      
; 2236 |                                                 j |= 0x20;             
; 2237 |                                                 break;                 
; 2238 |                                         case 7:                        
; 2239 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2240 |                                                 j |= 0xf0;             
; 2241 |                                                 break;                 
; 2243 |                                         break;                         
; 2245 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2247 |                                         do {                           
; 2248 |                                                 scia_getparam(         
; 2249 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2250 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2251 |                                                 j = atoi(cmdbuff);     
; 2252 |                                                 scia_puts(cmdbuff);    
; 2253 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2254 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2256 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2257 |                                         scia_puts("\r\n");             
; 2259 |                                         switch (j) {                   
; 2260 |                                         case 2:                        
; 2261 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2262 |                                                 j |= 0x20;             
; 2263 |                                                 break;                 
; 2264 |                                         case 3:                        
; 2265 |                                                 scale = 1;             
; 2266 |                                                 j |= 0x20;             
; 2267 |                                                 break;                 
; 2268 |                                         case 4:                        
; 2269 |                                                 scale = 10;            
; 2270 |                                                 j |= 0x20;             
; 2271 |                                                 break;                 
; 2272 |                                         case 7:                        
; 2273 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2274 |                                                 j |= 0xf0;             
; 2275 |                                                 break;                 
; 2277 |                                         break;                         
; 2279 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2281 |                                         do {                           
; 2282 |                                                 scia_getparam(         
; 2283 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2284 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2285 |                                                 j = atoi(cmdbuff);     
; 2286 |                                                 scia_puts(cmdbuff);    
; 2287 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2288 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2290 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2291 |                                         scia_puts("\r\n");             
; 2293 |                                         switch (j) {                   
; 2294 |                                         case 2:                        
; 2295 |                                                 scale = 1.0 / IN_TO_MM;
; 2296 |                                                 j |= 0x20;             
; 2297 |                                                 break;                 
; 2298 |                                         case 3:                        
; 2299 |                                                 scale = 0.1;           
; 2300 |                                                 j |= 0x20;             
; 2301 |                                                 break;                 
; 2302 |                                         case 4:                        
; 2303 |                                                 scale = 1;             
; 2304 |                                                 j |= 0x20;             
; 2305 |                                                 break;                 
; 2306 |                                         case 7:                        
; 2307 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2308 |                                                 j |= 0xf0;             
; 2309 |                                                 break;                 
; 2311 |                                         break;                         
; 2313 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2315 |                                         do {                           
; 2316 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2317 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2318 |                                                 j = atoi(cmdbuff);     
; 2319 |                                                 scia_puts(cmdbuff);    
; 2320 |                                                 if (j != 5 && j != 7) {
; 2321 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2323 |                                         } while (j != 5 && j != 7);    
; 2324 |                                         scia_puts("\r\n");             
; 2326 |                                         switch (j) {                   
; 2327 |                                         case 5:                        
; 2328 |                                                 scale = 1;             
; 2329 |                                                 j |= 0x30;             
; 2330 |                                                 break;                 
; 2331 |                                         case 7:                        
; 2332 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2333 |                                                 j |= 0xf0;             
; 2334 |                                                 break;                 
; 2336 |                                         break;                         
; 2338 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2340 |                                         do {                           
; 2341 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2342 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2343 |                                                 j = atoi(cmdbuff);     
; 2344 |                                                 scia_puts(cmdbuff);    
; 2345 |                                                 if (j != 6 && j != 7) {
; 2346 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2348 |                                         } while (j != 6 && j != 7);    
; 2349 |                                         scia_puts("\r\n");             
; 2351 |                                         switch (j) {                   
; 2352 |                                         case 6:                        
; 2353 |                                                 scale = 1;             
; 2354 |                                                 j |= 0x40;             
; 2355 |                                                 break;                 
; 2356 |                                         case 7:                        
; 2357 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2358 |                                                 j |= 0xf0;             
; 2359 |                                                 break;                 
; 2361 |                                         break;                         
; 2363 |                                 default:                               
; 2364 |                                         break;                         
; 2367 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2368 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2369 |                                         break;                         
; 2372 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2373 |                                         scia_puts(                     
; 2374 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2375 |                                         break;                         
; 2378 |                                 conf_data.sensor[ss].ounit = j;        
; 2379 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2380 |                                 unsaved = 1;                           
; 2382 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2383 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2384 |                                 scia_puts(buff);                       
; 2386 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2387 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2388 |                                                 update_units();        
; 2389 |                                                 DINT;                  
; 2390 |                                                 ad7738_setcal();       
; 2391 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2392 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2393 |                                                 EINT;                  
; 2396 |                                 break;                                 
; 2398 |                         case 'B':
;     |  // change percent base                                                
; 2400 |                                 // base                                
; 2401 |                                 j = 1;                                 
; 2402 |                                 do {                                   
; 2403 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2404 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2405 |                                         scale = atof(cmdbuff);         
; 2406 |                                         scia_puts(cmdbuff);            
; 2407 |                                         if (scale != 0) {              
; 2408 |                                                 break;                 
; 2410 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2411 |                                 } while (j);                           
; 2412 |                                 scia_puts("\r\n");                     
; 2413 |                                 conf_data.sensor[ss].base = scale;     
; 2414 |                                 unsaved = 1;                           
; 2416 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2417 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2418 |                                 scia_puts(buff);                       
; 2420 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2421 |                                         // output unit is percent      
; 2422 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2423 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2425 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2426 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2427 |                                                         // changed is f
;     | or the current sensor                                                  
; 2428 |                                                         DINT;          
; 2429 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2430 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2431 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2432 |                                                         EINT;          
; 2436 |                                 break;                                 
; 2438 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2440 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2441 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2442 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2443 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2444 |                                 scia_puts(cmdbuff);                    
; 2445 |                                 scia_puts("\r\n");                     
; 2447 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2448 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2449 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2450 |                                 scia_puts(cmdbuff);                    
; 2451 |                                 scia_puts("\r\n");                     
; 2452 |                                 unsaved = 1;                           
; 2454 |                                 sprintf(buff,                          
; 2455 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2456 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2457 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2458 |                                 scia_puts(buff);                       
; 2460 |                                 DINT;                                  
; 2461 |                                 ad7738_setcal();                       
; 2462 |                                 EINT;                                  
; 2463 |                                 break;                                 
; 2465 |                         default:                                       
; 2466 |                                 goto INVALIDCMD;                       
; 2469 |                         break;                                         
; 2471 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2472 |                         // Encoder config commands
;     |                                  //                                    
; 2473 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2474 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2476 |                         if (cmdlen < 2) {                              
; 2477 |                                 goto INVALIDCMD;                       
; 2480 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2483 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2485 |                                 j = MAF_MAX;                           
; 2486 |                                 do {                                   
; 2487 |                                         sprintf(buff,                  
; 2488 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2489 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2490 |                                         i = atoi(cmdbuff);             
; 2491 |                                         scia_puts(cmdbuff);            
; 2492 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2493 |                                                 break;
;     |          // valid number input                                         
; 2495 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2496 |                                 } while (j);                           
; 2497 |                                 scia_puts("\r\n");                     
; 2499 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2500 |                                                 i);                    
; 2501 |                                 scia_puts(buff);                       
; 2502 |                                 unsaved = 1;                           
; 2504 |                                 // update new value                    
; 2505 |                                 DINT;                                  
; 2506 |                                 conf_data.velfilter = i;               
; 2507 |                                 ad7738_setcal();                       
; 2508 |                                 velf_rst();                            
; 2509 |                                 EINT;                                  
; 2510 |                                 break;                                 
; 2512 |                         case 'P':
;     |  // count per inch                                                     
; 2514 |                                 // channel number                      
; 2515 |                                 j = ENC_MAX;                           
; 2516 |                                 do {                                   
; 2517 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2518 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2519 |                                         ss = atoi(cmdbuff);            
; 2520 |                                         scia_puts(cmdbuff);            
; 2521 |                                         if (ss > 0 && ss <= j) {       
; 2522 |                                                 break;
;     |          // valid input line number                                    
; 2524 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2525 |                                 } while (j);                           
; 2526 |                                 scia_puts("\r\n");                     
; 2527 |                                 ss--;
;     |  // line number, convert to index                                      
; 2529 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2530 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2531 |                                 templg = atol(cmdbuff);                
; 2532 |                                 scia_puts(cmdbuff);                    
; 2533 |                                 scia_puts("\r\n");                     
; 2534 |                                 if (templg == 0) {                     
; 2535 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2536 |                                         break;                         
; 2538 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2539 |                                                 ss + 1, templg);       
; 2540 |                                 scia_puts(buff);                       
; 2541 |                                 unsaved = 1;                           
; 2543 |                                 // update new value                    
; 2544 |                                 DINT;                                  
; 2545 |                                 conf_data.cntperin[ss] = templg;       
; 2546 |                                 ad7738_setcal();                       
; 2547 |                                 velf_rst();                            
; 2548 |                                 EINT;                                  
; 2549 |                                 break;                                 
; 2551 |                         break;                                         
; 2553 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2554 |                         // Display command
;     |                                  //                                    
; 2555 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2556 |                 case 'D':                                              
; 2558 |                         if (cmdlen < 2) {                              
; 2559 |                                 goto INVALIDCMD;                       
; 2562 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2564 |                         case 'S':
;     |  // selection                                                          
; 2566 |                                 // line number                         
; 2567 |                                 j = VFD_MAX;                           
; 2568 |                                 do {                                   
; 2569 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2570 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2571 |                                         ss = atoi(cmdbuff);            
; 2572 |                                         scia_puts(cmdbuff);            
; 2573 |                                         if (ss > 0 && ss <= j) {       
; 2574 |                                                 break;
;     |          // valid input line number                                    
; 2576 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2577 |                                 } while (j);                           
; 2578 |                                 scia_puts("\r\n");                     
; 2579 |                                 ss--;
;     |  // line number, convert to index                                      
; 2581 |                                 // what                                
; 2582 |                                 for (j = 0; j < 7; j++) {              
; 2583 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2584 |                                         scia_puts(buff);               
; 2585 |                                         if (j < 6) {                   
; 2586 |                                                 scia_puts(", ");       
; 2589 |                                 scia_puts("\r\n");                     
; 2590 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2591 |                                                 ss + 1);               
; 2592 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2593 |                                 pt = atoi(cmdbuff);                    
; 2594 |                                 if (pt >= 7) {                         
; 2595 |                                         pt = 0;                        
; 2596 |                                         scia_puts(                     
; 2597 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2599 |                                 scia_puts(cmdbuff);                    
; 2600 |                                 scia_puts("\r\n");                     
; 2601 |                                 conf_data.vfd[ss].what = pt;           
; 2603 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2605 |                                 case VFD_LOAD:                         
; 2606 |                                 case VFD_PEAK:                         
; 2607 |                                 case VFD_VALL:                         
; 2609 |                                         j = CHS_MAX;                   
; 2610 |                                         goto VFD_CHANNEL;              
; 2612 |                                 case VFD_POSI:                         
; 2613 |                                 case VFD_VELO:                         
; 2615 |                                         j = ENC_MAX;                   
; 2617 |                                         VFD_CHANNEL:                   
; 2618 |                                         // channel number              
; 2619 |                                         do {                           
; 2620 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2621 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2622 |                                                 ch = atoi(cmdbuff);    
; 2623 |                                                 scia_puts(cmdbuff);    
; 2624 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2625 |                                                         break;
;     |          // valid input channel number                                 
; 2627 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2628 |                                         } while (j);                   
; 2629 |                                         scia_puts("\r\n");             
; 2630 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2631 |                                         conf_data.vfd[ss].ch = ch;     
; 2633 |                                         // digits after decimal point  
; 2634 |                                         j = 1;                         
; 2635 |                                         do {                           
; 2636 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2637 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2638 |                                                 i = atoi(cmdbuff);     
; 2639 |                                                 if (i >= 0 && i <= 5) {
; 2640 |                                                         break;         
; 2642 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2643 |                                         } while (j);                   
; 2644 |                                         scia_puts(cmdbuff);            
; 2645 |                                         scia_puts("\r\n");             
; 2646 |                                         conf_data.vfd[ss].adec = i;    
; 2648 |                                         sprintf(buff,                  
; 2649 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2650 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2651 |                                         scia_puts(buff);               
; 2652 |                                         break;                         
; 2654 |                                 case VFD_LIMIT:                        
; 2655 |                                         // channel number              
; 2656 |                                         j = CHS_MAX;                   
; 2657 |                                         do {                           
; 2658 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2659 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2660 |                                                 ch = atoi(cmdbuff);    
; 2661 |                                                 scia_puts(cmdbuff);    
; 2662 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2663 |                                                         break;
;     |          // valid input channel number                                 
; 2665 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2666 |                                         } while (j);                   
; 2667 |                                         scia_puts("\r\n");             
; 2668 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2669 |                                         conf_data.vfd[ss].ch = ch;     
; 2671 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2672 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2673 |                                         scia_puts(buff);               
; 2674 |                                         break;                         
; 2675 |                                 case VFD_TEMP:                         
; 2676 |                                         // no more info                
; 2677 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2678 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2679 |                                         scia_puts(buff);               
; 2680 |                                         break;                         
; 2683 |                                 lcd_clear();                           
; 2684 |                                 update_units();                        
; 2685 |                                 unsaved = 1;                           
; 2686 |                                 break;                                 
; 2688 |                         default:                                       
; 2689 |                                 goto INVALIDCMD;                       
; 2692 |                         break;                                         
; 2694 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2695 |                         // DAC out command
;     |                                  //                                    
; 2696 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2697 |                 case 'O':                                              
; 2699 |                         if (cmdlen < 2) {                              
; 2700 |                                 goto INVALIDCMD;                       
; 2703 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2705 |                         case 'S':
;     |  // selection                                                          
; 2707 |                                 // DAC channel number                  
; 2708 |                                 j = DAC_MAX;                           
; 2709 |                                 do {                                   
; 2710 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2711 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2712 |                                         ss = atoi(cmdbuff);            
; 2713 |                                         scia_puts(cmdbuff);            
; 2714 |                                         if (ss > 0 && ss <= j) {       
; 2715 |                                                 break;
;     |          // valid input channel number                                 
; 2717 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2718 |                                 } while (j);                           
; 2719 |                                 scia_puts("\r\n");                     
; 2720 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2722 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2723 |                                 for (j = 0; j < 5; j++) {              
; 2724 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2725 |                                         scia_puts(buff);               
; 2726 |                                         scia_puts(", ");               
; 2728 |                                 j = 7;                                 
; 2729 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2730 |                                 scia_puts(buff);                       
; 2731 |                                 scia_puts("\r\n");                     
; 2732 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2733 |                                                 ss + 1);               
; 2734 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2735 |                                 pt = atoi(cmdbuff);                    
; 2736 |                                 if (pt >= 5 && pt != 7) {              
; 2737 |                                         pt = 0;                        
; 2738 |                                         scia_puts(                     
; 2739 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2741 |                                 scia_puts(cmdbuff);                    
; 2742 |                                 scia_puts("\r\n");                     
; 2743 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2745 |                                 if ( VFD_VOLT != pt) {                 
; 2747 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2748 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2749 |                                                 j = CHS_MAX;           
; 2750 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2751 |                                                 j = ENC_MAX;           
; 2754 |                                         // linked load/... channel numb
;     | er                                                                     
; 2755 |                                         do {                           
; 2756 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2757 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2758 |                                                 ch = atoi(cmdbuff);    
; 2759 |                                                 scia_puts(cmdbuff);    
; 2760 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2761 |                                                         break;
;     |          // valid input channel number                                 
; 2763 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2764 |                                         } while (j);                   
; 2765 |                                         scia_puts("\r\n");             
; 2766 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2767 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2769 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2770 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2771 |                                                 // gain                
; 2772 |                                                 if ( VFD_POSI == pt) { 
; 2773 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2774 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2775 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2777 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2778 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2779 |                                                 scia_puts(cmdbuff);    
; 2780 |                                                 scia_puts("\r\n");     
; 2782 |                                                 // offset              
; 2783 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2784 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2785 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2786 |                                                 scia_puts(cmdbuff);    
; 2787 |                                                 scia_puts("\r\n");     
; 2791 |                                 unsaved = 1;                           
; 2793 |                                 // print result                        
; 2794 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2795 |                                                 LPV[pt]);              
; 2796 |                                 scia_puts(buff);                       
; 2798 |                                 if ( VFD_VOLT == pt) {                 
; 2799 |                                         scia_puts("\r\n");             
; 2800 |                                 } else {                               
; 2801 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2802 |                                         scia_puts(buff);               
; 2804 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2805 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2806 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2807 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2808 |                                                 scia_puts(buff);       
; 2812 |                                 DINT;                                  
; 2813 |                                 ad7738_setcal();                       
; 2814 |                                 EINT;                                  
; 2815 |                                 break;                                 
; 2817 |                         case 'D':
;     |  // direct voltage output                                              
; 2819 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2820 |                                                 || 'V' != cmdbuff[3]) {
; 2821 |                                         goto INVALIDCMD;               
; 2824 |                                 // channel index                       
; 2825 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2826 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2827 |                                         goto INVALIDCMD;               
; 2828 |                                         // invalid channel number      
; 2830 |                                 ss--;
;     |  // change to zero based index                                         
; 2832 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2833 |                                         goto INVALIDCMD;               
; 2834 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2837 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2838 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2839 |                                         goto INVALIDCMD;               
; 2840 |                                         // invalid voltage             
; 2843 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2844 |                                 if (volt[0] < 0) {                     
; 2845 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2846 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2847 |                                 } else {                               
; 2848 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2849 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2852 |                                 if (dsum[0] <= 0) {                    
; 2853 |                                         dacc[0] = 0;                   
; 2854 |                                 } else if (dsum[0] >= 0xffff) {        
; 2855 |                                         dacc[0] = 0xffff;              
; 2856 |                                 } else {                               
; 2857 |                                         dacc[0] = (Uint16) dsum[0];    
; 2860 |                                 mcbsp_xmit(dacc[0], ss);               
; 2861 |                                 latch_dac();                           
; 2863 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2864 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2865 |                                 scia_puts(buff);                       
; 2867 |                                 break;                                 
; 2869 |                         default:                                       
; 2870 |                                 goto INVALIDCMD;                       
; 2873 |                         break;                                         
; 2875 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2876 |                         // LIMIT command
;     |                                          //                            
; 2877 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2878 |                 case 'L':                                              
; 2880 |                         if (cmdlen < 2) {                              
; 2881 |                                 goto INVALIDCMD;                       
; 2884 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2886 |                         case 'S':
;     |  // selection                                                          
; 2888 |                                 // LIMIT channel number                
; 2889 |                                 j = LIM_MAX;                           
; 2890 |                                 do {                                   
; 2891 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2892 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2893 |                                         ss = atoi(cmdbuff);            
; 2894 |                                         scia_puts(cmdbuff);            
; 2895 |                                         if (ss > 0 && ss <= j) {       
; 2896 |                                                 break;
;     |          // valid input channel number                                 
; 2898 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2899 |                                 } while (j);                           
; 2900 |                                 scia_puts("\r\n");                     
; 2901 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2903 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2904 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2905 |                                 scia_puts(cmdbuff);                    
; 2906 |                                 scia_puts("\r\n");                     
; 2908 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2910 |                                         // set on flag                 
; 2911 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2913 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2914 |                                         for (j = 0; j < 5; j++) {      
; 2915 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2916 |                                                 scia_puts(buff);       
; 2917 |                                                 if (j < 4) {           
; 2918 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2921 |                                         scia_puts("\r\n");             
; 2922 |                                         sprintf(buff,                  
; 2923 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2924 |                                                         ss + 1);       
; 2925 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2926 |                                         pt = atoi(cmdbuff);            
; 2927 |                                         if (pt >= 5) {                 
; 2928 |                                                 pt = 0;                
; 2929 |                                                 scia_puts(             
; 2930 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2932 |                                         scia_puts(cmdbuff);            
; 2933 |                                         scia_puts("\r\n");             
; 2934 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2936 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2937 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2938 |                                                 j = CHS_MAX;           
; 2939 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2940 |                                                 j = ENC_MAX;           
; 2943 |                                         // linked load/... channel numb
;     | er                                                                     
; 2944 |                                         do {                           
; 2945 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2946 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2947 |                                                 ch = atoi(cmdbuff);    
; 2948 |                                                 scia_puts(cmdbuff);    
; 2949 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2950 |                                                         break;
;     |          // valid input channel number                                 
; 2952 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2953 |                                         } while (j);                   
; 2954 |                                         scia_puts("\r\n");             
; 2955 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2956 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2958 |                                         // NO/NC                       
; 2959 |                                         scia_getparam(                 
; 2960 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2961 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2962 |                                         scia_puts(cmdbuff);            
; 2963 |                                         scia_puts("\r\n");             
; 2965 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2967 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2968 |                                         } else {                       
; 2969 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2972 |                                         scia_getparam(                 
; 2973 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2974 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2975 |                                         scia_puts(cmdbuff);            
; 2976 |                                         scia_puts("\r\n");             
; 2978 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2980 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2981 |                                         } else {                       
; 2982 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2985 |                                         scia_getparam(                 
; 2986 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2987 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2988 |                                         scia_puts(cmdbuff);            
; 2989 |                                         scia_puts("\r\n");             
; 2991 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2993 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2994 |                                         } else {                       
; 2995 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2998 |                                         // unit (output)               
; 2999 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 3000 |                                         case VFD_LOAD:                 
; 3001 |                                         case VFD_PEAK:                 
; 3002 |                                         case VFD_VALL:                 
; 3003 |                                                 ccp =                  
; 3004 |                                                                 UNITS[0
;     | x0f                                                                    
; 3005 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 3006 |                                                 break;                 
; 3007 |                                         case VFD_POSI:                 
; 3008 |                                                 ccp = POS_U;           
; 3009 |                                                 break;                 
; 3010 |                                         case VFD_VELO:                 
; 3011 |                                                 ccp = VEL_U;           
; 3012 |                                                 break;                 
; 3015 |                                         // set value                   
; 3016 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 3017 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3018 |                                         scia_puts(cmdbuff);            
; 3019 |                                         scia_puts("\r\n");             
; 3021 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3022 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3023 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3025 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3026 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3027 |                                         scia_puts(cmdbuff);            
; 3028 |                                         scia_puts("\r\n");             
; 3030 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3031 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3032 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3033 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3035 |                                         // print result                
; 3036 |                                         sprintf(buff,                  
; 3037 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3038 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3039 |                                         scia_puts(buff);               
; 3041 |                                         sprintf(buff,                  
; 3042 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3043 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3044 | 
;     |  "NC" : "NO",                                                          
; 3045 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3046 | 
;     |  "ON" : "OFF",                                                         
; 3047 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3048 |                                         scia_puts(buff);               
; 3049 |                                         sprintf(buff,                  
; 3050 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3051 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3052 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3053 |                                         scia_puts(buff);               
; 3055 |                                 } else
;     |  // turn off                                                           
; 3057 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3058 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3061 |                                 unsaved = 1;                           
; 3063 |                                 DINT;                                  
; 3064 |                                 ad7738_setcal();                       
; 3065 |                                 EINT;                                  
; 3066 |                                 break;                                 
; 3068 |                         default:                                       
; 3069 |                                 goto INVALIDCMD;                       
; 3072 |                         break;                                         
; 3074 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3075 |                         // reset commands
;     |                                          //                            
; 3076 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3077 |                 case 'R':                                              
; 3079 |                         if (cmdlen < 2) {                              
; 3080 |                                 goto INVALIDCMD;                       
; 3083 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3085 |                         case 'T':
;     |  // tare                                                               
; 3087 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3088 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3089 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3090 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3091 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3092 |                                 } else {                               
; 3093 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3094 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3095 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3097 |                                 break;                                 
; 3099 |                         case 'P':
;     |  // peak                                                               
; 3101 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3102 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3103 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3104 |                                 } else {                               
; 3105 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3107 |                                 break;                                 
; 3109 |                         case 'V':
;     |  // valley                                                             
; 3111 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3112 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3113 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3114 |                                 } else {                               
; 3115 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3117 |                                 break;                                 
; 3119 |                         case 'S':
;     |  // shunt switch                                                       
; 3121 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3122 |                                         shunt_switch(1);               
; 3123 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3124 |                                 } else {                               
; 3125 |                                         shunt_switch(0);               
; 3126 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3128 |                                 break;                                 
; 3130 |                         case 'L':
;     |  // limit                                                              
; 3132 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3133 |                                 ch--;                                  
; 3135 |                                 ad7738_resetlimit(ch);                 
; 3136 |                                 break;                                 
; 3138 |                         case 'I':
;     |  // posItion                                                           
; 3140 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3141 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3142 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3143 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3144 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3145 |                                 } else {                               
; 3146 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3147 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3148 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3150 |                                 break;                                 
; 3152 |                         default:                                       
; 3153 |                                 goto INVALIDCMD;                       
; 3155 |                         break;                                         
; 3157 | #ifdef SDHCCARD                                                        
; 3159 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3160 |                         // Stream to SD Card
;     |                                  //                                    
; 3161 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3162 |                         case 'W':// Write control                      
; 3164 |                         if( cmdlen < 2 )                               
; 3166 |                                 goto INVALIDCMD;                       
; 3169 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3171 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3173 |                                 if( cmdlen < 3 )                       
; 3175 |                                         goto INVALIDCMD;               
; 3178 |                                 if( sd_write )                         
; 3180 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3181 |                                         break;                         
; 3184 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3185 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3187 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3189 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3190 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3192 |                                 if( !res )                             
; 3194 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3195 |                                         if( res || cmdlen != temp16 )  
; 3197 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3198 |                                                 scia_puts( buff );     
; 3199 |                                                 f_close( fp );         
; 3200 |                                                 fp = NULL;             
; 3201 |                                                 break;                 
; 3218 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3220 |                                         if( res )                      
; 3222 |                                                 f_close( fp );         
; 3223 |                                                 fp = NULL;             
; 3224 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3225 |                                                 break;                 
; 3228 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3229 |                                         scia_puts( buff );             
; 3231 |                                         prod_init();                   
; 3232 |                                         sd_write = 1;                  
; 3233 |                                         sd_cnt = 0;                    
; 3234 |                                         break;                         
; 3237 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3238 |                                 scia_puts( buff );                     
; 3239 |                                 break;                                 
; 3241 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3243 |                                 if( sd_write )                         
; 3245 |                                         sd_close = 1;                  
; 3246 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3247 |                                         break;                         
; 3249 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3250 |                                 break;                                 
; 3252 |                                 case 'L':
;     |          // list files                                                 
; 3254 |                                 if( sd_write )                         
; 3256 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3257 |                                         break;                         
; 3260 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3261 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3263 |                                 res = f_opendir(&dir, "0:");           
; 3264 |                                 if (res)                               
; 3266 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3267 |                                         scia_puts( buff );             
; 3268 |                                         break;                         
; 3271 |                                 p1 = s1 = s2 = 0;                      
; 3272 |                                 for(;;)                                
; 3274 |                                         res = f_readdir(&dir, &Finfo); 
; 3275 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3276 |                                         break;                         
; 3277 |                                         if (Finfo.fattrib & AM_DIR)    
; 3279 |                                                 s2++;                  
; 3281 |                                         else                           
; 3283 |                                                 s1++;                  
; 3284 |                                                 p1 += Finfo.fsize;     
; 3286 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3287 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3288 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3289 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3290 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3291 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3292 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3293 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3294 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3295 |                                         scia_puts( buff );             
; 3297 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3298 |                                 scia_puts( buff );                     
; 3299 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3301 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3302 |                                         scia_puts( buff );             
; 3304 |                                 break;                                 
; 3306 |                                 case 'G':
;     |          // get a file                                                 
; 3308 |                                 if( sd_write )                         
; 3310 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3311 |                                         break;                         
; 3314 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3315 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3317 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3319 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3320 |                                 res = f_open( fp, buff, FA_READ );     
; 3321 |                                 if (res)                               
; 3323 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3324 |                                         scia_puts( buff );             
; 3325 |                                         break;                         
; 3328 |                                 do                                     
; 3330 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3331 |                                         scia_send( buff, temp16 );     
; 3332 |                                 }while( !res && temp16 == 512 );       
; 3334 |                                 f_close( fp );                         
; 3335 |                                 fp = NULL;                             
; 3336 |                                 break;                                 
; 3338 |                                 case 'R':
;     |          // remove a file                                              
; 3340 |                                 if( sd_write )                         
; 3342 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3343 |                                         break;                         
; 3346 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3347 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3349 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3351 |                                 res = f_unlink( buff );                
; 3353 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3354 |                                 scia_puts( buff );                     
; 3355 |                                 break;                                 
; 3357 |                                 default:                               
; 3358 |                                 goto INVALIDCMD;                       
; 3361 |                         break;                                         
; 3362 | #endif                                                                 
; 3364 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3365 |                         // Flash memory access commands
;     |                                    //                                  
; 3366 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3367 |                 case 'F':                                       // flas
;     | h access                                                               
; 3369 |                         if (cmdlen < 2) {                              
; 3370 |                                 goto INVALIDCMD;                       
; 3373 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3375 |                         case 'W':
;     |  // write flash                                                        
; 3377 |                                 if (unsaved) {                         
; 3378 |                                         // flash writing               
; 3379 |                                         lcd_clear();                   
; 3380 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3381 |                                         scia_puts("Flash writing..."); 
; 3383 |                                         for (i = 0; i < 50; i++) {     
; 3384 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3387 |                                         DINT;                          
; 3388 |                                         flash_ret = conf_write();      
; 3389 |                                         EINT;                          
; 3391 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3392 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3393 |                                                 unsaved = 0;           
; 3394 |                                         } else {                       
; 3395 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3397 |                                         lcd_clear();                   
; 3398 |                                         update_units();                
; 3399 |                                         break;                         
; 3401 |                                 scia_puts(                             
; 3402 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3403 |                                 break;                                 
; 3405 |                         case 'R':
;     |  // read flash                                                         
; 3407 |                                 // flash reading                       
; 3408 |                                 conf_read();                           
; 3410 |                                 DINT;                                  
; 3411 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3412 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3413 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3414 |                                 EINT;                                  
; 3416 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3417 |                                 unsaved = 0;                           
; 3419 |                                 update_units();                        
; 3421 |                                 break;                                 
; 3423 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3425 |                                 conf_default();                        
; 3427 |                                 // flash writing                       
; 3428 |                                 lcd_clear();                           
; 3429 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3430 |                                 scia_puts("Flash write...");           
; 3432 |                                 for (i = 0; i < 50; i++) {             
; 3433 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3436 |                                 DINT;                                  
; 3437 |                                 flash_ret = conf_write();              
; 3438 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3439 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3440 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3441 |                                 EINT;                                  
; 3443 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3444 |                                         scia_puts(                     
; 3445 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3446 |                                         unsaved = 0;                   
; 3447 |                                 } else {                               
; 3448 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3450 |                                 lcd_clear();                           
; 3451 |                                 update_units();                        
; 3452 |                                 break;                                 
; 3454 |                         default:                                       
; 3455 |                                 goto INVALIDCMD;                       
; 3458 |                         break;                                         
; 3460 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3461 |                         // Help manu
;     |                                  //                                    
; 3462 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3463 |                 case 'H':                               // help menu   
; 3465 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3467 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3468 |                         scia_puts(                                     
; 3469 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3470 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3471 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3472 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3473 |                         scia_puts("\r\n");                             
; 3475 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3476 |                         scia_puts("UN          Set unit name.\r\n");   
; 3477 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3478 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3479 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3480 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3481 |                         scia_puts("\r\n");                             
; 3483 |                         scia_puts(                                     
; 3484 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3485 |                         scia_puts(                                     
; 3486 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3487 |                         scia_puts("\r\n");                             
; 3489 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3490 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3491 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3492 |                         scia_puts("\r\n");                             
; 3494 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3495 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3496 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3497 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3498 |                         scia_puts("\r\n");                             
; 3500 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3501 |                         scia_puts(                                     
; 3502 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3503 |                         scia_puts("\r\n");                             
; 3505 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3506 |                         scia_puts("\r\n");                             
; 3508 |                         scia_puts(                                     
; 3509 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3510 |                         scia_puts(                                     
; 3511 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3512 |                         scia_puts("\r\n");                             
; 3514 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3515 |                         scia_puts("\r\n");                             
; 3517 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3518 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3519 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3520 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3521 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3522 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3523 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3524 |                         scia_puts("\r\n");                             
; 3526 | #ifdef SDHCCARD                                                        
; 3527 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3528 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3529 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3530 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3531 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3532 |                         scia_puts( "\r\n" );                           
; 3533 | #endif                                                                 
; 3535 |                         scia_puts(                                     
; 3536 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3537 |                         scia_puts(                                     
; 3538 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3539 |                         scia_puts(                                     
; 3540 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3541 |                         scia_puts("\r\n");                             
; 3543 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3545 |                         // not implemented                             
; 3546 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3548 |                         scia_puts("\r\n");                             
; 3550 |                         break;                                         
; 3552 |                 case 'X':                                              
; 3554 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3556 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3558 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3561 |                         cmd_mode = SCI_MODE_BIN;                       
; 3562 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3564 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3566 |                         break;                                         
; 3568 |                 case 'Z':                                              
; 3570 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3572 |                         for (i = 0; i < 100; i++)       // 2s          
; 3574 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3577 |                         reboot();                                      
; 3578 |                         break;                                         
; 3602 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3603 |                         // Invalid commands
;     |                                  //                                    
; 3604 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3605 |                 default:                                               
; 3607 |                         INVALIDCMD:                                    
; 3609 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3610 |                         scia_puts(cmdbuff);                            
; 3611 |                         scia_puts("\", ignored.\r\n");                 
; 3612 |                         break;                                         
; 3614 |                 } // switch on 1st byte                                
; 3616 |                 if (unsaved) {                                         
; 3617 |                         scia_puts(                                     
; 3618 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3621 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3622 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3623 |                 // BIN command mode processing
;     |                          //                                            
; 3624 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3626 |                 // ------------------------------------------------    
; 3627 |                 // DEBUG: put received command on LCD                  
; 3636 |                 // ------------------------------------------------    
; 3637 |                 if (cmdlen < 2) {                                      
; 3638 |                         // INVALID COMMAND, less than 2 byte           
; 3639 |                         // may need to send NACK back                  
; 3640 |                         continue;                                      
; 3643 |                 for (i = 0; i < 2; i++) {                              
; 3644 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3647 |                 j = 2;                                  // buff length 
; 3648 |                 bincmdresult = Error_UnImpl;                           
; 3650 |                 // DEBUG, sending the command back                     
; 3651 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3653 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3655 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3658 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3773 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3775 |                 case CheckAddress:                                     
; 3777 |                         buff[j++] = 0;                                 
; 3778 |                         bincmdresult = OK_SendResult;                  
; 3779 |                         break;                                         
; 3781 |                 case SetAddress:                                       
; 3783 |                         buff[j] = cmdbuff[j];                          
; 3784 |                         j++;                                           
; 3785 |                         bincmdresult = OK_SendResult;                  
; 3786 |                         break;                                         
; 3788 |                 case RemoveAddress:                                    
; 3790 |                         buff[j] = cmdbuff[j];                          
; 3791 |                         j++;                                           
; 3792 |                         bincmdresult = OK_SendResult;                  
; 3793 |                         break;                                         
; 3795 |                 case GetUnitInfo:                                      
; 3797 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3798 |                         for (i = 0; i < 2; i++) {                      
; 3799 |                                 buff[j++] = 0xff & *intp;              
; 3800 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3801 |                                 intp++;                                
; 3804 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3805 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3807 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3808 |                         for (i = 0; i < 2; i++) {                      
; 3809 |                                 buff[j++] = 0xff & *intp;              
; 3810 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3811 |                                 intp++;                                
; 3814 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3815 |                         buff[j++] = slen;                              
; 3816 |                         for (i = 0; i < slen; i++) {                   
; 3817 |                                 buff[j++] = conf_data.uname[i]; // name
; 3819 |                         bincmdresult = OK_SendResult;                  
; 3821 |                         break;                                         
; 3823 |                 case SetUnitSN:                                        
; 3825 |                         if (cmdlen < 6) {                              
; 3826 |                                 bincmdresult = Error_Invalid;          
; 3827 |                                 break;                                 
; 3830 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3831 |                         for (i = 0; i < 2; i++) {                      
; 3832 |                                 *intp = cmdbuff[j];                    
; 3833 |                                 buff[j++] = 0xff & *intp;              
; 3834 |                                 *intp += cmdbuff[j] << 8;              
; 3835 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3836 |                                 intp++;                                
; 3838 |                         unsaved = 1;                                   
; 3840 |                         bincmdresult = OK_SendResult;                  
; 3841 |                         break;                                         
; 3843 |                 case SetUnitName:                                      
; 3845 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3846 |                                 bincmdresult = Error_Invalid;          
; 3847 |                                 break;                                 
; 3850 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3851 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3853 |                         conf_data.uname[i] = '\0';                     
; 3854 |                         unsaved = 1;                                   
; 3856 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3857 |                         buff[j++] = slen;                              
; 3858 |                         for (i = 0; i < slen; i++) {                   
; 3859 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3861 |                         bincmdresult = OK_SendResult;                  
; 3862 |                         break;                                         
; 3864 |                 case GetInterface:                                     
; 3866 |                         buff[j++] = conf_data.rxdir;                   
; 3868 |                         if (conf_data.rxdir == SDIR_RS485              
; 3869 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3870 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3871 |                                 for (i = 0; i < 2; i++) {              
; 3872 |                                         buff[j++] = 0xff & *intp;      
; 3873 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3874 |                                         intp++;                        
; 3877 |                         bincmdresult = OK_SendResult;                  
; 3878 |                         break;                                         
; 3880 |                 case SetInterface:                                     
; 3882 |                         if (cmdlen < 3) {                              
; 3883 |                                 bincmdresult = Error_Invalid;          
; 3884 |                                 break;                                 
; 3886 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3887 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3888 |                                 bincmdresult = Error_Invalid;          
; 3889 |                                 break;                                 
; 3892 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3893 |                                 if (cmdlen < 7) {                      
; 3894 |                                         bincmdresult = Error_Invalid;  
; 3895 |                                         break;                         
; 3898 |                                 temp32 = 0;                            
; 3899 |                                 for (k = 6; k > 2; k--) {              
; 3900 |                                         temp32 += cmdbuff[k];          
; 3901 |                                         temp32 <<= 8;                  
; 3904 |                                 for (i = 0; i < 8; i++) {              
; 3905 |                                         if (temp32 == BAUD[i]) {       
; 3906 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3907 |                                                 break;                 
; 3910 |                                 if (i == 8) {                          
; 3911 |                                         bincmdresult = Error_Invalid;  
; 3912 |                                         break;                         
; 3916 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3918 |                         while (j < cmdlen) {                           
; 3919 |                                 buff[j] = cmdbuff[j];                  
; 3920 |                                 j++;                                   
; 3922 |                         unsaved = 1;                                   
; 3923 |                         bincmdresult = OK_SendResult;                  
; 3924 |                         break;                                         
; 3926 |                 case GetChannel:                                       
; 3928 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3929 |                                 bincmdresult = Error_Invalid;          
; 3930 |                                 break;                                 
; 3932 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3934 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3936 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3938 |                                 buff[j++] = 0;                         
; 3941 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3942 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3944 |                                 buff[j++] = 0xff & *intp;              
; 3945 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3946 |                                 intp++;                                
; 3949 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3950 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3952 |                                 buff[j++] = 0xff & *intp;              
; 3953 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3954 |                                 intp++;                                
; 3957 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3958 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3960 |                                 buff[j++] = 0xff & *intp;              
; 3961 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3962 |                                 intp++;                                
; 3965 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3966 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3968 |                                 buff[j++] = 0xff & *intp;              
; 3969 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3970 |                                 intp++;                                
; 3973 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3974 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3976 |                                 buff[j++] = 0xff & *intp;              
; 3977 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3978 |                                 intp++;                                
; 3981 |                         bincmdresult = OK_SendResult;                  
; 3982 |                         break;                                         
; 3984 |                 case GetSensor:                                        
; 3986 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3987 |                                 bincmdresult = Error_Invalid;          
; 3988 |                                 break;                                 
; 3990 |                         ss = cmdbuff[2];                               
; 3991 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3993 |                         // sensor serial name                          
; 3994 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3995 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3996 |                         for (i = 0; i < slen; i++) {                   
; 3997 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 4000 |                         // sensor name/label                           
; 4001 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4002 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4003 |                         for (i = 0; i < slen; i++) {                   
; 4004 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4007 |                         // TAGID                                       
; 4008 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 4009 |                         for (i = 0; i < 4; i++) {                      
; 4010 |                                 buff[j++] = 0xff & *intp;              
; 4011 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4012 |                                 intp++;                                
; 4015 |                         // Method                                      
; 4016 |                         buff[j++] = conf_data.sensor[ss].method;       
; 4018 |                         // Date                                        
; 4019 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4020 |                         for (i = 0; i < 2; i++) {                      
; 4021 |                                 buff[j++] = 0xff & *intp;              
; 4022 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4023 |                                 intp++;                                
; 4026 |                         // Range                                       
; 4027 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4028 |                         for (i = 0; i < 2; i++) {                      
; 4029 |                                 buff[j++] = 0xff & *intp;              
; 4030 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4031 |                                 intp++;                                
; 4034 |                         // Unit                                        
; 4035 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4037 |                         // Output Unit                                 
; 4038 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4040 |                         // Unit Factor                                 
; 4041 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4042 |                         for (i = 0; i < 2; i++) {                      
; 4043 |                                 buff[j++] = 0xff & *intp;              
; 4044 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4045 |                                 intp++;                                
; 4048 |                         // calibration points.                         
; 4049 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4050 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4051 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4052 |                                         // mass point                  
; 4053 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4054 |                                         for (i = 0; i < 2; i++) {      
; 4055 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4056 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4057 |                                                 intp++;                
; 4059 |                                         // adc counts point            
; 4060 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4061 |                                         for (i = 0; i < 2; i++) {      
; 4062 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4063 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4064 |                                                 intp++;                
; 4068 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4069 |                                         // slope point                 
; 4070 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4071 |                                         for (i = 0; i < 2; i++) {      
; 4072 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4073 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4074 |                                                 intp++;                
; 4076 |                                         // intercept point             
; 4077 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4078 |                                         for (i = 0; i < 2; i++) {      
; 4079 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4080 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4081 |                                                 intp++;                
; 4084 |                         } else {                                       
; 4085 |                                 buff[j++] = 0;                         
; 4086 |                                 // slope                               
; 4087 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4088 |                                 for (i = 0; i < 2; i++) {              
; 4089 |                                         buff[j++] = 0xff & *intp;      
; 4090 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4091 |                                         intp++;                        
; 4093 |                                 // intercept                           
; 4094 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4095 |                                 for (i = 0; i < 2; i++) {              
; 4096 |                                         buff[j++] = 0xff & *intp;      
; 4097 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4098 |                                         intp++;                        
; 4102 |                         // shunt                                       
; 4103 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4104 |                         for (i = 0; i < 2; i++) {                      
; 4105 |                                 buff[j++] = 0xff & *intp;              
; 4106 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4107 |                                 intp++;                                
; 4110 |                         // base                                        
; 4111 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4112 |                         for (i = 0; i < 2; i++) {                      
; 4113 |                                 buff[j++] = 0xff & *intp;              
; 4114 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4115 |                                 intp++;                                
; 4118 |                         // DAC calibration gain                        
; 4119 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4120 |                         for (i = 0; i < 2; i++) {                      
; 4121 |                                 buff[j++] = 0xff & *intp;              
; 4122 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4123 |                                 intp++;                                
; 4126 |                         // DAC calibration offset                      
; 4127 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4128 |                         for (i = 0; i < 2; i++) {                      
; 4129 |                                 buff[j++] = 0xff & *intp;              
; 4130 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4131 |                                 intp++;                                
; 4134 |                         // channel calibrated on                       
; 4135 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4137 |                         bincmdresult = OK_SendResult;                  
; 4138 |                         break;                                         
; 4140 |                 case GetQEPChannels:                                   
; 4142 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4143 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4144 |                                 for (i = 0; i < 2; i++) {              
; 4145 |                                         buff[j++] = 0xff & *intp;      
; 4146 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4147 |                                         intp++;                        
; 4151 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4152 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4154 |                         bincmdresult = OK_SendResult;                  
; 4155 |                         break;                                         
; 4157 |                 case GetCurSensor:                                     
; 4159 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4160 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4163 |                         bincmdresult = OK_SendResult;                  
; 4164 |                         break;                                         
; 4166 |                 case GetAFilterSize:                                   
; 4168 |                         // filter size                                 
; 4169 |                         intp = (Uint16*) &conf_data.filter;            
; 4170 |                         buff[j++] = 0xff & *intp;                      
; 4171 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4172 |                         // filter window                               
; 4173 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4174 |                         for (i = 0; i < 2; i++) {                      
; 4175 |                                 buff[j++] = 0xff & *intp;              
; 4176 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4177 |                                 intp++;                                
; 4179 |                         bincmdresult = OK_SendResult;                  
; 4180 |                         break;                                         
; 4182 |                 case GetAutoId:                                        
; 4184 |                         buff[j++] = conf_data.tagiden;                 
; 4185 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4186 |                                 buff[j++] = autoid[i];                 
; 4188 |                         bincmdresult = OK_SendResult;                  
; 4189 |                         break;                                         
; 4191 |                 case GetDisplay:                                       
; 4193 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4194 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4195 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4196 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4198 |                         bincmdresult = OK_SendResult;                  
; 4199 |                         break;                                         
; 4201 |                 case GetDAC:                                           
; 4203 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4204 |                                 buff[j++] = conf_data.dac[i].what;     
; 4205 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4207 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4208 |                                 //{                                    
; 4209 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4210 |                                 //}                                    
; 4211 |                                 //else                                 
; 4212 |                                 //{                                    
; 4213 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4214 |                                 //}                                    
; 4215 |                                 for (k = 0; k < 2; k++) {              
; 4216 |                                         buff[j++] = 0xff & *intp;      
; 4217 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4218 |                                         intp++;                        
; 4220 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4221 |                                 //{                                    
; 4222 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4223 |                                 //}                                    
; 4224 |                                 //else                                 
; 4225 |                                 //{                                    
; 4226 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4227 |                                 //}                                    
; 4228 |                                 for (k = 0; k < 2; k++) {              
; 4229 |                                         buff[j++] = 0xff & *intp;      
; 4230 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4231 |                                         intp++;                        
; 4233 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4234 |                                 for (k = 0; k < 2; k++) {              
; 4235 |                                         buff[j++] = 0xff & *intp;      
; 4236 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4237 |                                         intp++;                        
; 4239 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4240 |                                 for (k = 0; k < 2; k++) {              
; 4241 |                                         buff[j++] = 0xff & *intp;      
; 4242 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4243 |                                         intp++;                        
; 4245 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4246 |                                 for (k = 0; k < 2; k++) {              
; 4247 |                                         buff[j++] = 0xff & *intp;      
; 4248 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4249 |                                         intp++;                        
; 4252 |                         bincmdresult = OK_SendResult;                  
; 4253 |                         break;                                         
; 4255 |                 case GetLIMIT:                                         
; 4257 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4258 |                                 buff[j++] = conf_data.lim[i].what;     
; 4259 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4260 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4262 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4263 |                                 for (k = 0; k < 2; k++) {              
; 4264 |                                         buff[j++] = 0xff & *intp;      
; 4265 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4266 |                                         intp++;                        
; 4268 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4269 |                                 for (k = 0; k < 2; k++) {              
; 4270 |                                         buff[j++] = 0xff & *intp;      
; 4271 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4272 |                                         intp++;                        
; 4275 |                         bincmdresult = OK_SendResult;                  
; 4276 |                         break;                                         
; 4278 |                 case GetLIMITStatus:                                   
; 4280 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4281 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4283 |                         bincmdresult = OK_SendResult;                  
; 4284 |                         break;                                         
; 4286 |                         // Heat Cal commands.                          
; 4287 |                 case GetTCLoadA:                                       
; 4288 |                 case GetTCLoadB:                                       
; 4289 |                 case GetTCLoadC:                                       
; 4290 |                 case GetTCLoadD:                                       
; 4292 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4293 |                         intp = (Uint16*) &temp16;                      
; 4294 |                         buff[j++] = 0xff & *intp;                      
; 4295 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4297 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4298 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4299 |                         intp = (Uint16*) &templg;                      
; 4300 |                         for (i = 0; i < 2; i++) {                      
; 4301 |                                 buff[j++] = 0xff & *intp;              
; 4302 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4303 |                                 intp++;                                
; 4305 |                         bincmdresult = OK_SendResult;                  
; 4306 |                         break;                                         
; 4308 |                 case GetTCTemp:                                        
; 4310 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4311 |                         intp = (Uint16*) &temp16;                      
; 4312 |                         buff[j++] = 0xff & *intp;                      
; 4313 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4314 |                         bincmdresult = OK_SendResult;                  
; 4315 |                         break;                                         
; 4317 |                 case GetTCStatus:                                      
; 4319 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4320 |                         for (i = 0; i < 2; i++) {                      
; 4321 |                                 buff[j++] = 0xff & *intp;              
; 4322 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4323 |                                 intp++;                                
; 4326 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4327 |                                 temp16 = 0x80;                         
; 4328 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4329 |                                         temp16 |= 0x01;                
; 4331 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4332 |                                         temp16 |= 0x02;                
; 4334 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4335 |                                         temp16 |= 0x04;                
; 4337 |                                 buff[j++] = 0xff & temp16;             
; 4339 |                         bincmdresult = OK_SendResult;                  
; 4340 |                         break;                                         
; 4342 |                 case GetTCParam:                                       
; 4344 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4345 |                                 bincmdresult = Error_Invalid;          
; 4346 |                                 break;                                 
; 4349 |                         ch = cmdbuff[2];                               
; 4350 |                         buff[j++] = ch;                                
; 4352 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4353 |                         for (k = 0; k < 2; k++) {                      
; 4354 |                                 buff[j++] = 0xff & *intp;              
; 4355 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4356 |                                 intp++;                                
; 4358 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4359 |                         for (k = 0; k < 2; k++) {                      
; 4360 |                                 buff[j++] = 0xff & *intp;              
; 4361 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4362 |                                 intp++;                                
; 4364 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4365 |                         for (k = 0; k < 2; k++) {                      
; 4366 |                                 buff[j++] = 0xff & *intp;              
; 4367 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4368 |                                 intp++;                                
; 4370 |                         bincmdresult = OK_SendResult;                  
; 4371 |                         break;                                         
; 4373 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4374 | #if 1                                                                  
; 4375 |                 case Open_SSR_IN1:                                     
; 4376 |                         ssr_set(0, SSR_OPEN);                          
; 4377 |                         break;                                         
; 4379 |                 case Close_SSR_IN1:                                    
; 4380 |                         ssr_set(0, SSR_CLOSE);                         
; 4381 |                         break;                                         
; 4382 | #endif                                                                 
; 4384 |                 case SetTCParam:                                       
; 4386 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4387 |                                 bincmdresult = Error_Invalid;          
; 4388 |                                 break;                                 
; 4391 |                         ch = cmdbuff[2];                               
; 4392 |                         buff[j++] = ch;                                
; 4394 |                         k = 3;                                         
; 4395 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4396 |                         for (i = 0; i < 2; i++) {                      
; 4397 |                                 *intp = cmdbuff[k++];                  
; 4398 |                                 *intp += cmdbuff[k++] << 8;            
; 4399 |                                 intp++;                                
; 4401 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4402 |                         for (i = 0; i < 2; i++) {                      
; 4403 |                                 *intp = cmdbuff[k++];                  
; 4404 |                                 *intp += cmdbuff[k++] << 8;            
; 4405 |                                 intp++;                                
; 4407 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4408 |                         for (i = 0; i < 2; i++) {                      
; 4409 |                                 *intp = cmdbuff[k++];                  
; 4410 |                                 *intp += cmdbuff[k++] << 8;            
; 4411 |                                 intp++;                                
; 4414 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4415 |                         for (k = 0; k < 2; k++) {                      
; 4416 |                                 buff[j++] = 0xff & *intp;              
; 4417 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4418 |                                 intp++;                                
; 4420 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4421 |                         for (k = 0; k < 2; k++) {                      
; 4422 |                                 buff[j++] = 0xff & *intp;              
; 4423 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4424 |                                 intp++;                                
; 4426 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4427 |                         for (k = 0; k < 2; k++) {                      
; 4428 |                                 buff[j++] = 0xff & *intp;              
; 4429 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4430 |                                 intp++;                                
; 4432 |                         unsaved = 1;                                   
; 4433 |                         bincmdresult = OK_SendResult;                  
; 4434 |                         break;                                         
; 4436 |                 case SetBCalParam:                                     
; 4438 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4439 |                                         || cmdbuff[3] != 2) {          
; 4440 |                                 bincmdresult = Error_Invalid;          
; 4441 |                                 break;                                 
; 4444 |                         ch = cmdbuff[2];                               
; 4445 |                         buff[j++] = ch;                                
; 4446 |                         buff[j] = cmdbuff[j++];                        
; 4448 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4449 |                                 intp = (Uint16*) &volt[k];             
; 4450 |                                 for (i = 0; i < 2; i++) {              
; 4451 |                                         *intp = cmdbuff[j];            
; 4452 |                                         buff[j++] = 0xff & *intp;      
; 4453 |                                         *intp += cmdbuff[j] << 8;      
; 4454 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4455 |                                         intp++;                        
; 4458 |                         bincmdresult = OK_SendResult;                  
; 4459 |                         break;                                         
; 4461 |                 case StartBCRead:                                      
; 4463 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4464 |                                         || cmdbuff[3] >= 2) {          
; 4465 |                                 bincmdresult = Error_Invalid;          
; 4466 |                                 break;                                 
; 4469 |                         k = cmdbuff[3];                                
; 4470 |                         intp = (Uint16*) &tempft;                      
; 4471 |                         for (i = 0; i < 2; i++) {                      
; 4472 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4473 |                                 intp++;                                
; 4475 |                         if (volt[k] != tempft) {                       
; 4476 |                                 bincmdresult = Error_Invalid;          
; 4477 |                                 break;                                 
; 4479 |                         lcd_clear();                                   
; 4480 |                         lcd_puts("Board Calibration...", 0);           
; 4481 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4482 |                         lcd_puts(buff, 20);                            
; 4483 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4484 |                         lcd_puts(buff, 40);                            
; 4485 |                         lcd_puts("Reading ... ", 60);                  
; 4487 |                         dsum[k] = 0;                                   
; 4488 |                         sampcnt = CAL_SAMPLES;                         
; 4489 |                         while (sampcnt--) {                            
; 4490 |                                 while (0 == ad7738_rawrdy()) {         
; 4491 |                                         delay_us(1);
;     |  // wait                                                               
; 4493 |                                 cntp = ad7738_getraw();                
; 4494 |                                 dsum[k] += cntp->adc[ch];              
; 4496 |                         if (1 == k) {                                  
; 4497 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4498 |                                                 / (dsum[1] - dsum[0]); 
; 4500 |                                 unsaved = 1;                           
; 4501 |                                 DINT;                                  
; 4502 |                                 ad7738_setcal();                       
; 4503 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4504 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4505 |                                 EINT;                                  
; 4507 |                         for (i = 0; i < cmdlen; i++) {                 
; 4508 |                                 buff[i] = cmdbuff[i];                  
; 4510 |                         j = cmdlen;                                    
; 4511 |                         bincmdresult = OK_SendResult;                  
; 4513 |                         lcd_clear();                                   
; 4514 |                         update_units();                                
; 4515 |                         break;                                         
; 4517 |                 case SetDCalParam:                                     
; 4519 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4520 |                                         || (0x07 | daccbm) != 0x07) {  
; 4521 |                                 bincmdresult = Error_Invalid;          
; 4522 |                                 break;                                 
; 4524 |                         ch = cmdbuff[2];                               
; 4525 |                         buff[j++] = ch;                                
; 4527 |                         for (k = 0; k < 3; k++) {                      
; 4528 |                                 intp = (Uint16*) &volt[k];             
; 4529 |                                 for (i = 0; i < 2; i++) {              
; 4530 |                                         *intp = cmdbuff[j];            
; 4531 |                                         buff[j++] = 0xff & *intp;      
; 4532 |                                         *intp += cmdbuff[j] << 8;      
; 4533 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4534 |                                         intp++;                        
; 4538 |                         // order: - o +                                
; 4539 |                         // do the calculations                         
; 4540 |                         conf_data.dac[ch].dslopen =                    
; 4541 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4542 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4543 |                         conf_data.dac[ch].dslopep =                    
; 4544 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4545 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4546 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4547 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4549 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4550 |                         daccbm = 0;                                    
; 4552 |                         unsaved = 1;                                   
; 4554 |                         DINT;                                          
; 4555 |                         ad7738_setcal();                               
; 4556 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4557 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4558 |                         EINT;                                          
; 4560 |                         bincmdresult = OK_SendResult;                  
; 4561 |                         break;                                         
; 4563 |                 case StartDCRead:                                      
; 4565 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4566 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4567 |                                 bincmdresult = Error_Invalid;          
; 4568 |                                 break;                                 
; 4571 |                         if (daccbm == 0) {                             
; 4572 |                                 ch = cmdbuff[2];                       
; 4573 |                         } else {                                       
; 4574 |                                 if (ch != cmdbuff[2]) {                
; 4575 |                                         bincmdresult = Error_Invalid;  
; 4576 |                                         break;                         
; 4579 |                         buff[j++] = ch;                                
; 4580 |                         k = cmdbuff[j];                                
; 4581 |                         buff[j++] = k;                                 
; 4583 |                         intp = (Uint16*) &volt[k];                     
; 4584 |                         for (i = 0; i < 2; i++) {                      
; 4585 |                                 *intp = cmdbuff[j];                    
; 4586 |                                 buff[j++] = 0xff & *intp;              
; 4587 |                                 *intp += cmdbuff[j] << 8;              
; 4588 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4589 |                                 intp++;                                
; 4591 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4592 |                                 bincmdresult = Error_Invalid;          
; 4593 |                                 break;                                 
; 4596 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4597 |                         if (dsum[0] <= 0) {                            
; 4598 |                                 dacc[k] = 0;                           
; 4599 |                         } else if (dsum[0] >= 0xffff) {                
; 4600 |                                 dacc[k] = 0xffff;                      
; 4601 |                         } else {                                       
; 4602 |                                 dacc[k] = (Uint16) dsum[0];            
; 4605 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4607 |                         mcbsp_xmit(dacc[k], ch);                       
; 4608 |                         latch_dac();                                   
; 4610 |                         daccbm |= (0x1 << k);                          
; 4612 |                         bincmdresult = OK_SendResult;                  
; 4613 |                         break;                                         
; 4615 |                 case SetSensorCalPa:                                   
; 4617 |                         if (cmdlen < 20) {                             
; 4618 |                                 bincmdresult = Error_Invalid;          
; 4619 |                                 break;                                 
; 4621 |                         k = 2;                                         
; 4622 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4623 |                         ss = cmdbuff[k++];              // sensor index
; 4624 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4625 |                                 bincmdresult = Error_Invalid;          
; 4626 |                                 break;                                 
; 4629 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4630 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4631 |                                 bincmdresult = Error_Invalid;          
; 4632 |                                 break;                                 
; 4634 |                         for (i = 0; i < tempint; i++) {                
; 4635 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4637 |                         tsensor.ssn[i] = '\0';                         
; 4639 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4640 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4641 |                                 bincmdresult = Error_Invalid;          
; 4642 |                                 break;                                 
; 4644 |                         for (i = 0; i < tempint; i++) {                
; 4645 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4647 |                         tsensor.slbl[i] = '\0';                        
; 4649 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4651 |                         intp = (Uint16*) &tsensor.date; // date        
; 4652 |                         for (i = 0; i < 2; i++) {                      
; 4653 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4654 |                                 k += 2;                                
; 4655 |                                 intp++;                                
; 4658 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4659 |                         for (i = 0; i < 2; i++) {                      
; 4660 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4661 |                                 k += 2;                                
; 4662 |                                 intp++;                                
; 4664 |                         tsensor.base = tsensor.range;                  
; 4666 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4667 |                         switch (tsensor.unit) {                        
; 4668 |                         case 0:                                 // lb  
; 4669 |                         case 1:                                 // kg  
; 4670 |                                 tsensor.unit |= UNIT_WT;               
; 4671 |                                 break;                                 
; 4672 |                         case 2:                                 // in  
; 4673 |                         case 3:                                 // cm  
; 4674 |                         case 4:                                 // mm  
; 4675 |                                 tsensor.unit |= UNIT_LT;               
; 4676 |                                 break;                                 
; 4677 |                         case 5:                                 // ps  
; 4678 |                                 tsensor.unit |= UNIT_PR;               
; 4679 |                                 break;                                 
; 4680 |                         case 6:                                 // nm  
; 4681 |                                 tsensor.unit |= UNIT_TQ;               
; 4682 |                                 break;                                 
; 4683 |                         case 7:                                        
; 4684 |                         case 8:                                        
; 4685 |                         case 15:                                       
; 4686 |                                 tsensor.unit |= 0xf0;                  
; 4687 |                                 break;                                 
; 4688 |                         default:                                       
; 4689 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4690 |                                 break;                                 
; 4692 |                         tsensor.ounit = tsensor.unit;                  
; 4693 |                         tsensor.ufactor = 1;                           
; 4695 |                         switch (tsensor.method) {                      
; 4696 |                         case MD_RUN_MVV:                               
; 4698 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4699 |                                 for (i = 0; i < 2; i++) {              
; 4700 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4701 |                                         k += 2;                        
; 4702 |                                         intp++;                        
; 4704 |                                 if (tsensor.slope[0] == 0) {           
; 4705 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4707 |                                 tsensor.points = 1;                    
; 4708 |                                 break;                                 
; 4710 |                         case MD_RUN_MAS:                               
; 4712 |                                 tsensor.points = cmdbuff[k++];         
; 4713 |                                 if (tsensor.points > PNT_MAX) {        
; 4714 |                                         tsensor.method = MD_UNCALED;   
; 4715 |                                         break;                         
; 4718 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4719 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4720 |                                         for (i = 0; i < 2; i++) {      
; 4721 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4722 |                                                 k += 2;                
; 4723 |                                                 intp++;                
; 4726 |                                 break;                                 
; 4728 |                         case MD_RUN_SHT:                               
; 4730 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4731 |                                 for (i = 0; i < 2; i++) {              
; 4732 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4733 |                                         k += 2;                        
; 4734 |                                         intp++;                        
; 4736 |                                 if (scale == 0) {                      
; 4737 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4739 |                                 tsensor.points = 1;                    
; 4740 |                                 break;                                 
; 4742 |                         default:                                       
; 4744 |                                 tsensor.method = MD_UNCALED;           
; 4745 |                                 break;                                 
; 4748 |                         if (tsensor.method == MD_UNCALED) {            
; 4749 |                                 bincmdresult = Error_Invalid;          
; 4750 |                                 break;                                 
; 4752 |                         tsensor.tare = 0;                              
; 4753 |                         tsensor.dacgain = 1;                           
; 4754 |                         tsensor.dacoff = 0;                            
; 4755 |                         tsensor.ch = ch;                               
; 4757 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4758 |                                 buff[j] = cmdbuff[j++];                
; 4760 |                         bincmdresult = OK_SendResult;                  
; 4761 |                         break;                                         
; 4763 |                 case StartSCRead:                                      
; 4765 |                         if (cmdlen < 5) {                              
; 4766 |                                 bincmdresult = Error_Invalid;          
; 4767 |                                 break;                                 
; 4769 |                         k = 2;                                         
; 4770 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4771 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4772 |                                 bincmdresult = Error_Invalid;          
; 4773 |                                 break;                                 
; 4776 |                         lcd_clear();                                   
; 4777 |                         lcd_puts("Sensor Calibration..", 0);           
; 4778 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4779 |                         lcd_puts(buff, 20);                            
; 4780 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4781 |                         lcd_puts(buff, 40);                            
; 4783 |                         switch (tsensor.method) {                      
; 4785 |                         case MD_RUN_MVV:                               
; 4787 |                                 lcd_puts("Reading zero point...", 60); 
; 4789 |                                 dsum[0] = 0;                           
; 4790 |                                 sampcnt = CAL_SAMPLES;                 
; 4791 |                                 while (sampcnt--) {                    
; 4792 |                                         while (0 == ad7738_rawrdy()) { 
; 4793 |                                                 delay_us(1);
;     |          // wait                                                       
; 4796 |                                         cntp = ad7738_getraw();        
; 4797 |                                         dsum[0] += cntp->adc[ch];      
; 4799 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4800 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4802 |                                 bincmdresult = OK_SendResult;          
; 4803 |                                 break;                                 
; 4805 |                         case MD_RUN_MAS:                               
; 4807 |                                 pt = cmdbuff[k++];                     
; 4808 |                                 intp = (Uint16*) &scale;               
; 4809 |                                 for (i = 0; i < 2; i++) {              
; 4810 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4811 |                                         k += 2;                        
; 4812 |                                         intp++;                        
; 4814 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4815 |                                         bincmdresult = Error_Invalid;  
; 4816 |                                         break;                         
; 4818 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4819 |                                 lcd_puts(buff, 60);                    
; 4821 |                                 dsum[0] = 0;                           
; 4822 |                                 sampcnt = CAL_SAMPLES;                 
; 4823 |                                 while (sampcnt--) {                    
; 4824 |                                         while (0 == ad7738_rawrdy()) { 
; 4825 |                                                 delay_us(1);
;     |          // wait                                                       
; 4828 |                                         cntp = ad7738_getraw();        
; 4829 |                                         dsum[0] += cntp->adc[ch];      
; 4831 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4833 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4835 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4836 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4837 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4838 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4839 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4840 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4841 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4842 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4843 | 
;     |          * tsensor.adc[k];                                             
; 4847 |                                 bincmdresult = OK_SendResult;          
; 4848 |                                 break;                                 
; 4850 |                         case MD_RUN_SHT:                               
; 4852 |                                 lcd_puts("Reading zero point...", 60); 
; 4854 |                                 for (k = 0; k < 2; k++) {              
; 4855 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4857 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4858 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4859 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4861 |                                                 DINT;                  
; 4862 |                                                 maf_rst();             
; 4863 |                                                 EINT;                  
; 4864 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4867 |                                         dsum[k] = 0;                   
; 4868 |                                         sampcnt = CAL_SAMPLES;         
; 4869 |                                         while (sampcnt--) {            
; 4870 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4871 |                                                         delay_us(1);
;     |                  // wait                                               
; 4874 |                                                 cntp = ad7738_getraw();
; 4875 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4879 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4880 |                                 DINT;                                  
; 4881 |                                 maf_rst();                             
; 4882 |                                 EINT;                                  
; 4884 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4885 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4886 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4887 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4889 |                                 bincmdresult = OK_SendResult;          
; 4890 |                                 break;                                 
; 4892 |                         default:                                       
; 4894 |                                 bincmdresult = Error_Invalid;          
; 4895 |                                 break;                                 
; 4897 |                         lcd_clear();                                   
; 4898 |                         update_units();                                
; 4900 |                         if (bincmdresult != OK_SendResult) {           
; 4901 |                                 break;                                 
; 4903 |                         for (i = 0; i < cmdlen; i++) {                 
; 4904 |                                 buff[i] = cmdbuff[i];                  
; 4906 |                         j = cmdlen;                                    
; 4907 |                         break;                                         
; 4909 |                 case StartSCShuntRd:                                   
; 4911 |                         if (cmdlen < 5) {                              
; 4912 |                                 bincmdresult = Error_Invalid;          
; 4913 |                                 break;                                 
; 4915 |                         k = 2;                                         
; 4916 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4917 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4918 |                                 bincmdresult = Error_Invalid;          
; 4919 |                                 break;                                 
; 4922 |                         lcd_clear();                                   
; 4923 |                         lcd_puts("Sensor Calibration..", 0);           
; 4924 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4925 |                         lcd_puts(buff, 20);                            
; 4926 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4927 |                         lcd_puts(buff, 40);                            
; 4928 |                         lcd_puts("Reading shunt value...", 60);        
; 4930 |                         for (k = 0; k < 2; k++) {                      
; 4931 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4933 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4934 |                                         for (i = 0; i < 50; i++) {     
; 4935 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4937 |                                         DINT;                          
; 4938 |                                         maf_rst();                     
; 4939 |                                         EINT;                          
; 4940 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4943 |                                 dsum[k] = 0;                           
; 4944 |                                 sampcnt = CAL_SAMPLES;                 
; 4945 |                                 while (sampcnt--) {                    
; 4946 |                                         while (0 == ad7738_rawrdy()) { 
; 4947 |                                                 delay_us(1);
;     |          // wait                                                       
; 4950 |                                         cntp = ad7738_getraw();        
; 4951 |                                         dsum[k] += cntp->adc[ch];      
; 4953 |                                 dsum[k] /= CAL_SAMPLES;                
; 4955 |                                 pt = 0;                                
; 4956 |                                 if (tsensor.points > 2) {              
; 4957 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4958 |                                                 pt++;                  
; 4961 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4962 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4965 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4966 |                         DINT;                                          
; 4967 |                         maf_rst();                                     
; 4968 |                         EINT;                                          
; 4970 |                         tsensor.shunt = volt[1] - volt[0];             
; 4972 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4974 |                         DINT;                                          
; 4975 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4976 |                                         sizeof(sconf_t));              
; 4978 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4980 |                         ad7738_setcal();                               
; 4981 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4982 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4983 |                         EINT;                                          
; 4985 |                         unsaved = 1;                                   
; 4987 |                         lcd_clear();                                   
; 4988 |                         update_units();                                
; 4990 |                         for (i = 0; i < cmdlen; i++) {                 
; 4991 |                                 buff[i] = cmdbuff[i];                  
; 4993 |                         j = cmdlen;                                    
; 4994 |                         bincmdresult = OK_SendResult;                  
; 4995 |                         break;                                         
; 4997 |                 case SetSensorName:                                    
; 4999 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 5000 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 5001 |                                 bincmdresult = Error_Invalid;          
; 5002 |                                 break;                                 
; 5004 |                         ss = cmdbuff[2];                               
; 5005 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5007 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 5008 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 5009 |                         for (i = 0; i < slen; i++) {                   
; 5010 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 5012 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 5013 |                         unsaved = 1;                                   
; 5015 |                         // sensor name/label                           
; 5016 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 5017 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 5018 |                         for (i = 0; i < slen; i++) {                   
; 5019 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5022 |                         bincmdresult = OK_SendResult;                  
; 5023 |                         break;                                         
; 5025 |                 case SetSensorOUnit:                                   
; 5027 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5028 |                                 bincmdresult = Error_Invalid;          
; 5029 |                                 break;                                 
; 5032 |                         ss = cmdbuff[2];                               
; 5033 |                         pt = cmdbuff[3];                               
; 5035 |                         if (pt != UNIT_PC                              
; 5036 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5037 |                                 bincmdresult = Error_Invalid;          
; 5038 |                                 break;                                 
; 5041 |                         conf_data.sensor[ss].ounit = pt;               
; 5042 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5043 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5045 |                         if (pt == UNIT_PC) {                           
; 5046 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5047 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5048 |                         } else if (conf_data.sensor[ss].ounit          
; 5049 |                                         == conf_data.sensor[ss].unit) {
; 5050 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5051 |                         } else {                                       
; 5052 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5053 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5055 |                                         if (pt == UNIT_KG) {           
; 5056 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5058 |                                         break;                         
; 5060 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5062 |                                         if (pt == UNIT_LB) {           
; 5063 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5065 |                                         break;                         
; 5067 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5069 |                                         switch (pt) {                  
; 5070 |                                         case UNIT_CM:                  
; 5071 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5072 |                                                 break;                 
; 5073 |                                         case UNIT_MM:                  
; 5074 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5075 |                                                 break;                 
; 5077 |                                         break;                         
; 5079 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5081 |                                         switch (pt) {                  
; 5082 |                                         case UNIT_IN:                  
; 5083 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5084 |                                                 break;                 
; 5085 |                                         case UNIT_MM:                  
; 5086 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5087 |                                                 break;                 
; 5089 |                                         break;                         
; 5091 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5093 |                                         switch (pt) {                  
; 5094 |                                         case UNIT_IN:                  
; 5095 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5096 |                                                 break;                 
; 5097 |                                         case UNIT_CM:                  
; 5098 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5099 |                                                 break;                 
; 5101 |                                         break;                         
; 5103 |                                 default:                               
; 5105 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5106 |                                         break;                         
; 5110 |                         unsaved = 1;                                   
; 5112 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5113 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5114 |                                         update_units();                
; 5115 |                                         DINT;                          
; 5116 |                                         ad7738_setcal();               
; 5117 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5118 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5119 |                                         EINT;                          
; 5123 |                         bincmdresult = OK_SendResult;                  
; 5124 |                         break;                                         
; 5126 |                 case SetSensorBase:                                    
; 5128 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5129 |                                 bincmdresult = Error_Invalid;          
; 5130 |                                 break;                                 
; 5132 |                         ss = cmdbuff[2];                               
; 5133 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5135 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5136 |                         for (i = 0; i < 2; i++) {                      
; 5137 |                                 *intp = cmdbuff[j];                    
; 5138 |                                 buff[j++] = 0xff & *intp;              
; 5139 |                                 *intp += cmdbuff[j] << 8;              
; 5140 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5141 |                                 intp++;                                
; 5143 |                         unsaved = 1;                                   
; 5145 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5146 |                                 // output unit is percent              
; 5147 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5148 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5150 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5151 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5152 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5153 |                                                 DINT;                  
; 5154 |                                                 ad7738_setcal();       
; 5155 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5156 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5157 |                                                 EINT;                  
; 5162 |                         bincmdresult = OK_SendResult;                  
; 5163 |                         break;                                         
; 5165 |                 case SetQEPChannels:                                   
; 5167 |                         if (cmdlen < 6) {                              
; 5168 |                                 bincmdresult = Error_Invalid;          
; 5169 |                                 break;                                 
; 5172 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5173 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5174 |                                 for (i = 0; i < 2; i++) {              
; 5175 |                                         *intp = cmdbuff[j];            
; 5176 |                                         buff[j++] = 0xff & *intp;      
; 5177 |                                         *intp += cmdbuff[j] << 8;      
; 5178 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5179 |                                         intp++;                        
; 5183 |                         conf_data.velfilter = cmdbuff[j];              
; 5184 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5185 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5186 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5188 |                         unsaved = 1;                                   
; 5190 |                         DINT;                                          
; 5191 |                         ad7738_setcal();                               
; 5192 |                         velf_rst();                                    
; 5193 |                         EINT;                                          
; 5195 |                         bincmdresult = OK_SendResult;                  
; 5196 |                         break;                                         
; 5198 |                         //case SetEnCntperin: // not needed            
; 5199 |                         //break;                                       
; 5201 |                 case SetCurSensor:                                     
; 5203 |                         if (cmdlen < 4||                               
; 5204 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5205 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5206 |                                 bincmdresult = Error_Invalid;          
; 5207 |                                 break;                                 
; 5210 |                         ch = cmdbuff[2];                               
; 5211 |                         ss = cmdbuff[3];                               
; 5213 |                         if (autoid[ch]) {                              
; 5214 |                                 bincmdresult = Error_Exe;              
; 5215 |                                 break;                                 
; 5218 |                         DINT;                                          
; 5219 |                         conf_data.ch[ch].ci = ss;                      
; 5220 |                         ad7738_setcal();                               
; 5222 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5223 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5224 |                         EINT;                                          
; 5226 |                         update_units();                                
; 5227 |                         unsaved = 1;                                   
; 5229 |                         buff[j++] = ch;                                
; 5230 |                         buff[j++] = ss;                                
; 5231 |                         bincmdresult = OK_SendResult;                  
; 5232 |                         break;                                         
; 5234 |                 case SetAFilterSize:                                   
; 5236 |                         if (cmdlen < 4) {                              
; 5237 |                                 bincmdresult = Error_Invalid;          
; 5238 |                                 break;                                 
; 5241 |                         // filter length                               
; 5242 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5243 |                         if (temp16 > MAF_MAX) {                        
; 5244 |                                 bincmdresult = Error_Invalid;          
; 5245 |                                 break;                                 
; 5248 |                         // filter diff window                          
; 5249 |                         intp = (Uint16*) &tempft;                      
; 5250 |                         for (i = 0; i < 2; i++) {                      
; 5251 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5252 |                                 intp++;                                
; 5255 |                         DINT;                                          
; 5256 |                         conf_data.filter = temp16;                     
; 5257 |                         conf_data.diffwin = tempft;                    
; 5258 |                         maf_rst();                                     
; 5259 |                         EINT;                                          
; 5261 |                         unsaved = 1;                                   
; 5263 |                         buff[j++] = 0xff & temp16;                     
; 5264 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5266 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5267 |                         buff[j++] = 0xff & intp[0];                    
; 5268 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5269 |                         buff[j++] = 0xff & intp[1];                    
; 5270 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5272 |                         bincmdresult = OK_SendResult;                  
; 5273 |                         break;                                         
; 5275 |                 case SetAutoId:                                        
; 5277 |                         if (cmdlen < 3) {                              
; 5278 |                                 bincmdresult = Error_Invalid;          
; 5279 |                                 break;                                 
; 5282 |                         conf_data.tagiden = cmdbuff[2];                
; 5283 |                         if (!conf_data.tagiden) {                      
; 5284 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5285 |                                         tagwasthere[i] = 0;            
; 5286 |                                         autoid[i] = 0;                 
; 5288 |                                 update_units();                        
; 5290 |                         unsaved = 1;                                   
; 5292 |                         buff[j] = cmdbuff[j++];                        
; 5293 |                         bincmdresult = OK_SendResult;                  
; 5294 |                         break;                                         
; 5296 |                 case SetDisplayLine:                                   
; 5298 |                         if (cmdlen < 14) {                             
; 5299 |                                 bincmdresult = Error_Invalid;          
; 5300 |                                 break;                                 
; 5303 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5304 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5305 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5306 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5307 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5308 |                                         || cmdbuff[13] > 5) {          
; 5309 |                                 bincmdresult = Error_Invalid;          
; 5310 |                                 break;                                 
; 5313 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5314 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5315 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5316 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5317 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5318 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5319 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5321 |                         unsaved = 1;                                   
; 5323 |                         lcd_clear();                                   
; 5324 |                         update_units();                                
; 5325 |                         bincmdresult = OK_SendResult;                  
; 5326 |                         break;                                         
; 5328 |                 case SetDACCh:                                         
; 5330 |                         if (cmdlen < 42) {                             
; 5331 |                                 bincmdresult = Error_Invalid;          
; 5332 |                                 break;                                 
; 5335 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5336 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5337 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5338 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5339 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5340 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5341 |                                 bincmdresult = Error_Invalid;          
; 5342 |                                 break;                                 
; 5345 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5346 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5347 |                                 buff[j++] = conf_data.dac[i].what;     
; 5348 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5349 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5351 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5352 |                                 //{                                    
; 5353 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5354 |                                 //}                                    
; 5355 |                                 //else                                 
; 5356 |                                 //{                                    
; 5357 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5358 |                                 //}                                    
; 5359 |                                 for (k = 0; k < 2; k++) {              
; 5360 |                                         *intp = cmdbuff[j];            
; 5361 |                                         buff[j++] = 0xff & *intp;      
; 5362 |                                         *intp += cmdbuff[j] << 8;      
; 5363 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5364 |                                         intp++;                        
; 5367 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5368 |                                 //{                                    
; 5369 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5370 |                                 //}                                    
; 5371 |                                 //else                                 
; 5372 |                                 //{                                    
; 5373 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5374 |                                 //}                                    
; 5375 |                                 for (k = 0; k < 2; k++) {              
; 5376 |                                         *intp = cmdbuff[j];            
; 5377 |                                         buff[j++] = 0xff & *intp;      
; 5378 |                                         *intp += cmdbuff[j] << 8;      
; 5379 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5380 |                                         intp++;                        
; 5383 |                         unsaved = 1;                                   
; 5385 |                         DINT;                                          
; 5386 |                         ad7738_setcal();                               
; 5387 |                         EINT;                                          
; 5388 |                         bincmdresult = OK_SendResult;                  
; 5389 |                         break;                                         
; 5391 |                 case SetLIMITCh:                                       
; 5393 |                         if (cmdlen < 46) {                             
; 5394 |                                 bincmdresult = Error_Invalid;          
; 5395 |                                 break;                                 
; 5398 |                         if (cmdbuff[2]                                 
; 5399 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5400 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5401 |                                 bincmdresult = Error_Invalid;          
; 5402 |                                 break;                                 
; 5405 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5406 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5407 |                                 buff[j++] = conf_data.lim[i].what;     
; 5408 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5409 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5410 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5411 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5413 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5414 |                                 for (k = 0; k < 2; k++) {              
; 5415 |                                         *intp = cmdbuff[j];            
; 5416 |                                         buff[j++] = 0xff & *intp;      
; 5417 |                                         *intp += cmdbuff[j] << 8;      
; 5418 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5419 |                                         intp++;                        
; 5421 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5422 |                                 for (k = 0; k < 2; k++) {              
; 5423 |                                         *intp = cmdbuff[j];            
; 5424 |                                         buff[j++] = 0xff & *intp;      
; 5425 |                                         *intp += cmdbuff[j] << 8;      
; 5426 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5427 |                                         intp++;                        
; 5430 |                         unsaved = 1;                                   
; 5432 |                         DINT;                                          
; 5433 |                         ad7738_setcal();                               
; 5434 |                         EINT;                                          
; 5436 |                         bincmdresult = OK_SendResult;                  
; 5437 |                         break;                                         
; 5439 |                 case Tare:                                             
; 5441 |                         if (cmdlen < 3) {                              
; 5442 |                                 //bincmdresult = Error_Invalid;        
; 5443 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5444 |                                 ad7738_resetpeak(0xff);                
; 5445 |                                 ad7738_resetvall(0xff);                
; 5446 |                                 unsaved = 1;                           
; 5448 |                                 buff[j++] = 0xff;                      
; 5449 |                                 bincmdresult = OK_SendResult;          
; 5450 |                                 break;                                 
; 5453 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5454 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5455 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5456 |                         unsaved = 1;                                   
; 5458 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5459 |                         bincmdresult = OK_SendResult;                  
; 5460 |                         break;                                         
; 5462 |                 case ResetPkVly:                                       
; 5464 |                         if (cmdlen < 3) {                              
; 5465 |                                 bincmdresult = Error_Invalid;          
; 5466 |                                 break;                                 
; 5469 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5470 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5471 |                         unsaved = 1;                                   
; 5473 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5474 |                         bincmdresult = OK_SendResult;                  
; 5475 |                         break;                                         
; 5477 |                 case ResetPk:                                          
; 5479 |                         if (cmdlen < 3) {                              
; 5480 |                                 bincmdresult = Error_Invalid;          
; 5481 |                                 break;                                 
; 5484 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5485 |                         unsaved = 1;                                   
; 5487 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5488 |                         bincmdresult = OK_SendResult;                  
; 5489 |                         break;                                         
; 5491 |                 case ResetVly:                                         
; 5493 |                         if (cmdlen < 3) {                              
; 5494 |                                 bincmdresult = Error_Invalid;          
; 5495 |                                 break;                                 
; 5498 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5499 |                         unsaved = 1;                                   
; 5501 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5502 |                         bincmdresult = OK_SendResult;                  
; 5503 |                         break;                                         
; 5505 |                 case ResetLIMIT:                                       
; 5507 |                         if (cmdlen < 3) {                              
; 5508 |                                 bincmdresult = Error_Invalid;          
; 5509 |                                 break;                                 
; 5512 |                         k = 0x01;                                      
; 5513 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5514 |                                 if (k & cmdbuff[2]) {                  
; 5515 |                                         ad7738_resetlimit(i);          
; 5517 |                                 k <<= 1;                               
; 5519 |                         unsaved = 1;                                   
; 5521 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5522 |                         bincmdresult = OK_SendResult;                  
; 5523 |                         break;                                         
; 5525 |                 case ResetPosition:                                    
; 5527 |                         if (cmdlen < 3) {                              
; 5528 |                                 bincmdresult = Error_Invalid;          
; 5529 |                                 break;                                 
; 5532 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5533 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5534 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5535 |                         unsaved = 1;                                   
; 5537 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5538 |                         bincmdresult = OK_SendResult;                  
; 5539 |                         break;                                         
; 5541 |                 case SetShuntSwitch:                                   
; 5543 |                         if (cmdlen < 3) {                              
; 5544 |                                 bincmdresult = Error_Invalid;          
; 5545 |                                 break;                                 
; 5548 |                         shunt_switch(cmdbuff[2]);                      
; 5549 |                         unsaved = 1;                                   
; 5551 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5552 |                         bincmdresult = OK_SendResult;                  
; 5553 |                         break;                                         
; 5555 |                 case SetDirectVolt:                                    
; 5557 |                         if (cmdlen < 7) {                              
; 5558 |                                 bincmdresult = Error_Invalid;          
; 5559 |                                 break;                                 
; 5562 |                         ss = cmdbuff[j];                               
; 5563 |                         buff[j++] = ss;                                
; 5565 |                         intp = (Uint16*) &volt[0];                     
; 5566 |                         for (k = 0; k < 2; k++) {                      
; 5567 |                                 *intp = cmdbuff[j];                    
; 5568 |                                 buff[j++] = 0xff & *intp;              
; 5569 |                                 *intp += cmdbuff[j] << 8;              
; 5570 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5571 |                                 intp++;                                
; 5574 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5575 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5576 |                                 bincmdresult = Error_Invalid;          
; 5577 |                                 break;                                 
; 5580 |                         if (volt[0] < 0) {                             
; 5581 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5582 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5583 |                         } else {                                       
; 5584 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5585 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5588 |                         if (dsum[0] <= 0) {                            
; 5589 |                                 dacc[0] = 0;                           
; 5590 |                         } else if (dsum[0] >= 0xffff) {                
; 5591 |                                 dacc[0] = 0xffff;                      
; 5592 |                         } else {                                       
; 5593 |                                 dacc[0] = (Uint16) dsum[0];            
; 5596 |                         mcbsp_xmit(dacc[0], ss);                       
; 5597 |                         latch_dac();                                   
; 5599 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5600 |                         buff[j++] = 0xff & dacc[0];                    
; 5601 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5603 |                         bincmdresult = OK_SendResult;                  
; 5604 |                         break;                                         
; 5606 |                 case GetAllFlash:                                      
; 5608 |                         break;                                         
; 5610 |                 case SetAllFlash:                                      
; 5612 |                         break;                                         
; 5614 |                 case FlashMemWrite:                                    
; 5616 |                         bincmdresult = OK_SendResult;                  
; 5617 |                         if (unsaved) {                                 
; 5618 |                                 // flash writing                       
; 5619 |                                 lcd_clear();                           
; 5620 |                                 lcd_puts("Flash writing...", 0);       
; 5622 |                                 for (i = 0; i < 50; i++) {             
; 5623 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5626 |                                 DINT;                                  
; 5627 |                                 flash_ret = conf_write();              
; 5628 |                                 EINT;                                  
; 5630 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5631 |                                         lcd_puts("Done", 16);          
; 5632 |                                         unsaved = 0;                   
; 5633 |                                 } else {                               
; 5634 |                                         lcd_puts("Fail", 16);          
; 5635 |                                         bincmdresult = Error_Exe;      
; 5638 |                                 for (i = 0; i < 50; i++) {             
; 5639 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5641 |                                 lcd_clear();                           
; 5642 |                                 update_units();                        
; 5644 |                         break;                                         
; 5646 |                 case FlashMemDefault:                                  
; 5648 |                         conf_default();                                
; 5650 |                         // flash writing                               
; 5651 |                         lcd_clear();                                   
; 5652 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5654 |                         for (i = 0; i < 50; i++) {                     
; 5655 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5658 |                         DINT;                                          
; 5659 |                         flash_ret = conf_write();                      
; 5660 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5661 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5662 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5663 |                         EINT;                                          
; 5665 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5666 |                                 lcd_puts("Done", 31);                  
; 5667 |                                 unsaved = 0;                           
; 5668 |                                 bincmdresult = OK_SendResult;          
; 5669 |                         } else {                                       
; 5670 |                                 lcd_puts("Fail", 31);                  
; 5671 |                                 bincmdresult = Error_Exe;              
; 5673 |                         for (i = 0; i < 50; i++) {                     
; 5674 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5676 |                         lcd_clear();                                   
; 5677 |                         update_units();                                
; 5679 |                         break;                                         
; 5681 |                 case FlashMemRead:                                     
; 5683 |                         // flash reading                               
; 5684 |                         conf_read();                                   
; 5686 |                         DINT;                                          
; 5687 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5688 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5689 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5690 |                         EINT;                                          
; 5692 |                         unsaved = 0;                                   
; 5693 |                         update_units();                                
; 5694 |                         bincmdresult = OK_SendResult;                  
; 5695 |                         break;                                         
; 5697 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |637| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |637| 
        ; call occurs [#_SPICANRead] ; [] |637| 
        MOVL      XAR0,#40              ; [CPU_] |637| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |637| 
        MOV       *-SP[40],AL           ; [CPU_] |637| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 592,column 2,is_stmt,isa 0
        MOVL      XAR0,#97              ; [CPU_] |592| 
        MOV       *+FP[AR0],#0          ; [CPU_] |592| 
        B         $C$L636,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5699,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5699 | if (cmdlen < 6) {                                                      
; 5700 |         bincmdresult = Error_Invalid;                                  
; 5701 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5699| 
        B         $C$L322,LO            ; [CPU_] |5699| 
        ; branchcc occurs ; [] |5699| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5704,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5704 | ds_dn = cmdbuff[2];                                                    
; 5705 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5704| 
	.dwpsn	file "../Source/prod.c",line 5706,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5706 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5706| 
	.dwpsn	file "../Source/prod.c",line 5704,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5704| 
        ADDB      ACC,#2                ; [CPU_] |5704| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5704| 
        MOVL      XAR0,#100             ; [CPU_] |5704| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5704| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5704| 
	.dwpsn	file "../Source/prod.c",line 5706,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5707 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5706| 
        MOVL      ACC,XAR7              ; [CPU_] |5706| 
        ADDB      ACC,#4                ; [CPU_] |5706| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5706| 
        MOVL      XAR0,#101             ; [CPU_] |5706| 
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5706| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5706| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5706| 
	.dwpsn	file "../Source/prod.c",line 5708,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5708 | ds_bm = cmdbuff[5];                                                    
; 5710 | tempint = 0;                                                           
; 5711 | k = 0x01;                                                              
; 5712 | for (i = 0; i < 8; i++) {                                              
; 5713 |         if (ds_bm & k) {                                               
; 5714 |                 tempint++;                                             
; 5716 |         k <<= 1;                                                       
; 5719 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5720 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5721 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5722 | //                                      ds_en = 0;                     
; 5723 | //                                      bincmdresult = Error_Invalid;  
; 5724 | //                                      break;                         
; 5725 | //                              }                                      
;----------------------------------------------------------------------
        MOVL      XAR0,#102             ; [CPU_] |5708| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5708| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5708| 
        MOVL      XAR0,#44              ; [CPU_] |5708| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5708| 
        ADDB      XAR7,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5727,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5727 | ds_en = 1;                                                             
; 5728 | ds_stop = 0;                                                           
; 5729 | ds_sn = 0;                                                             
; 5731 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5732 | //                              ad7738_setlimitchgd();                 
; 5734 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOVL      XAR0,#98              ; [CPU_] |5727| 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5735,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5735 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5735| 
	.dwpsn	file "../Source/prod.c",line 5727,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],#1          ; [CPU_] |5727| 
	.dwpsn	file "../Source/prod.c",line 5728,column 5,is_stmt,isa 0
        MOVL      XAR0,#99              ; [CPU_] |5728| 
        MOV       *+FP[AR0],#0          ; [CPU_] |5728| 
	.dwpsn	file "../Source/prod.c",line 5729,column 5,is_stmt,isa 0
        MOVL      XAR0,#103             ; [CPU_] |5729| 
        MOV       *+FP[AR0],#0          ; [CPU_] |5729| 
	.dwpsn	file "../Source/prod.c",line 5736,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5736 | j++;                                                                   
; 5738 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOVL      XAR0,#91              ; [CPU_] |5736| 
        MOV       *+FP[AR0],#6          ; [CPU_] |5736| 
	.dwpsn	file "../Source/prod.c",line 5739,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5739 | break;                                                                 
; 5741 | case StopStream:                                                       
; 5743 | ds_stop = 1;                                                           
; 5744 | bincmdresult = OK_SendResult;                                          
; 5745 | break;                                                                 
; 5747 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5749 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L747,UNC           ; [CPU_] |5739| 
        ; branch occurs ; [] |5739| 
$C$L80:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4911,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4911| 
        B         $C$L322,LO            ; [CPU_] |4911| 
        ; branchcc occurs ; [] |4911| 
	.dwpsn	file "../Source/prod.c",line 4916,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4916| 
        MOVL      ACC,XAR4              ; [CPU_] |4916| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4916| 
        MOVL      XAR0,#66              ; [CPU_] |4916| 
        ADDB      ACC,#2                ; [CPU_] |4916| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4916| 
        MOVL      XAR0,#94              ; [CPU_] |4916| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |4916| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4916| 
        CMPL      ACC,XAR6              ; [CPU_] |4916| 
        B         $C$L322,NEQ           ; [CPU_] |4916| 
        ; branchcc occurs ; [] |4916| 
        MOVL      XAR0,#95              ; [CPU_] |4916| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |4916| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4916| 
        CMPL      ACC,XAR6              ; [CPU_] |4916| 
        B         $C$L322,NEQ           ; [CPU_] |4916| 
        ; branchcc occurs ; [] |4916| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4916| 
        MOVL      XAR0,#64              ; [CPU_] |4916| 
        MOVL      ACC,XAR5              ; [CPU_] |4916| 
        ADDB      ACC,#4                ; [CPU_] |4916| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4916| 
        MOVB      XAR0,#36              ; [CPU_] |4916| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4916| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4916| 
        B         $C$L322,NEQ           ; [CPU_] |4916| 
        ; branchcc occurs ; [] |4916| 
	.dwpsn	file "../Source/prod.c",line 4922,column 5,is_stmt,isa 0
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4922| 
        ; call occurs [#_lcd_clear] ; [] |4922| 
	.dwpsn	file "../Source/prod.c",line 4923,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4923| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4923| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4923| 
        ; call occurs [#_lcd_puts] ; [] |4923| 
	.dwpsn	file "../Source/prod.c",line 4924,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4924| 
        MOVL      XAR0,#94              ; [CPU_] |4924| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4924| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4924| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |4924| 
        MOVL      XAR0,#95              ; [CPU_] |4924| 
        MOV       *-SP[3],AL            ; [CPU_] |4924| 
        MOVB      AL,#1                 ; [CPU_] |4924| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |4924| 
        MOVL      XAR0,#44              ; [CPU_] |4924| 
        MOV       *-SP[4],AL            ; [CPU_] |4924| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4924| 
        MOVL      XAR4,XAR3             ; [CPU_] |4924| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_sprintf")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4924| 
        ; call occurs [#_sprintf] ; [] |4924| 
	.dwpsn	file "../Source/prod.c",line 4925,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4925| 
        MOVL      XAR4,XAR3             ; [CPU_] |4925| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4925| 
        ; call occurs [#_lcd_puts] ; [] |4925| 
	.dwpsn	file "../Source/prod.c",line 4926,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4926| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4926| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4926| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4926| 
        MOVL      XAR0,#58              ; [CPU_] |4926| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4926| 
        MOVB      XAR1,#36              ; [CPU_] |4926| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4926| 
        ADDL      ACC,XAR6              ; [CPU_] |4926| 
        MOVL      XAR4,ACC              ; [CPU_] |4926| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4926| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4926| 
        MOVL      XAR4,XAR3             ; [CPU_] |4926| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_sprintf")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4926| 
        ; call occurs [#_sprintf] ; [] |4926| 
	.dwpsn	file "../Source/prod.c",line 4927,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4927| 
        MOVL      XAR4,XAR3             ; [CPU_] |4927| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4927| 
        ; call occurs [#_lcd_puts] ; [] |4927| 
	.dwpsn	file "../Source/prod.c",line 4928,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4928| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4928| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4928| 
        ; call occurs [#_lcd_puts] ; [] |4928| 
        MOVL      XAR0,#78              ; [CPU_] |4928| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4928| 
        MOVL      XAR0,#94              ; [CPU_] |4928| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |4928| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] 
        MOVL      XAR0,#94              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#38              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#95              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4930,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4930| 
        MOVL      XAR0,#92              ; [CPU_] |4930| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4930| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4931,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4931| 
        B         $C$L83,LEQ            ; [CPU_] |4931| 
        ; branchcc occurs ; [] |4931| 
	.dwpsn	file "../Source/prod.c",line 4933,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4933| 
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4933| 
        ; call occurs [#_shunt_switch] ; [] |4933| 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       *+FP[AR0],#49         ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4935,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4935| 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_delay_us")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4935| 
        ; call occurs [#_delay_us] ; [] |4935| 
        MOVL      XAR0,#104             ; [CPU_] |4935| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4934,column 19,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |4934| 
        SUBB      XAR6,#1               ; [CPU_U] |4934| 
        MOV       *+FP[AR0],AR6         ; [CPU_] |4934| 
        MOVZ      AR0,AR6               ; [CPU_] |4934| 
        CMP       AR0,#-1               ; [CPU_] |4934| 
        B         $C$L82,NEQ            ; [CPU_] |4934| 
        ; branchcc occurs ; [] |4934| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4938,column 7,is_stmt,isa 0
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_maf_rst")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4938| 
        ; call occurs [#_maf_rst] ; [] |4938| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4940,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4940| 
        SPM       #0                    ; [CPU_] 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_delay_us")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4940| 
        ; call occurs [#_delay_us] ; [] |4940| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4943,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4943| 
	.dwpsn	file "../Source/prod.c",line 4944,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4944| 
	.dwpsn	file "../Source/prod.c",line 4943,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4943| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4943| 
	.dwpsn	file "../Source/prod.c",line 4945,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4945| 
	.dwpsn	file "../Source/prod.c",line 4944,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4944| 
	.dwpsn	file "../Source/prod.c",line 4945,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4945| 
        MOVB      ACC,#0                ; [CPU_] |4945| 
        SUBB      ACC,#1                ; [CPU_] |4945| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4945| 
        B         $C$L86,EQ             ; [CPU_] |4945| 
        ; branchcc occurs ; [] |4945| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4946,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4946| 
        ; branch occurs ; [] |4946| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4947,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4947| 
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_delay_us")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4947| 
        ; call occurs [#_delay_us] ; [] |4947| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4946,column 14,is_stmt,isa 0
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4946| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4946| 
        CMPB      AL,#0                 ; [CPU_] |4946| 
        B         $C$L84,EQ             ; [CPU_] |4946| 
        ; branchcc occurs ; [] |4946| 
	.dwpsn	file "../Source/prod.c",line 4950,column 7,is_stmt,isa 0
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4950| 
        ; call occurs [#_ad7738_getraw] ; [] |4950| 
	.dwpsn	file "../Source/prod.c",line 4951,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4951| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4951| 
        ADDL      XAR4,ACC              ; [CPU_] |4951| 
        MOVL      XAR0,#34              ; [CPU_] |4951| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4951| 
        MOVL      XAR0,#34              ; [CPU_] |4951| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4951| 
        ASR64     ACC:P,16              ; [CPU_] |4951| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4951| 
        MOVL      XAR0,#34              ; [CPU_] |4951| 
        ASR64     ACC:P,16              ; [CPU_] |4951| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4951| 
        MOVL      XAR0,#34              ; [CPU_] |4951| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4951| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4951| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4951| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4951| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4951| 
	.dwpsn	file "../Source/prod.c",line 4945,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4945| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4945| 
        MOVB      ACC,#0                ; [CPU_] |4945| 
        SUBB      ACC,#1                ; [CPU_] |4945| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4945| 
        B         $C$L85,NEQ            ; [CPU_] |4945| 
        ; branchcc occurs ; [] |4945| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4953,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4953| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4953| 
        MOV       *-SP[2],#0            ; [CPU_] |4953| 
        MOV       *-SP[1],#0            ; [CPU_] |4953| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4953| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4953| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4953| 
        ; call occurs [#LL$$DIV] ; [] |4953| 
	.dwpsn	file "../Source/prod.c",line 4956,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4956| 
        MOVB      XAR0,#46              ; [CPU_] |4956| 
	.dwpsn	file "../Source/prod.c",line 4953,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4953| 
	.dwpsn	file "../Source/prod.c",line 4955,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4955| 
	.dwpsn	file "../Source/prod.c",line 4953,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4953| 
	.dwpsn	file "../Source/prod.c",line 4956,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4956| 
        CMPB      AL,#2                 ; [CPU_] |4956| 
        B         $C$L89,LEQ            ; [CPU_] |4956| 
        ; branchcc occurs ; [] |4956| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4957,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4957| 
        ; branch occurs ; [] |4957| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4958,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4958| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4957,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4957| 
        B         $C$L89,HIS            ; [CPU_] |4957| 
        ; branchcc occurs ; [] |4957| 
        MOVB      AL,#1                 ; [CPU_] |4957| 
        ADD       AL,AR4                ; [CPU_] |4957| 
        MOVZ      AR5,AL                ; [CPU_] |4957| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4957| 
        ADDL      ACC,XAR1              ; [CPU_] |4957| 
        MOVL      XAR6,ACC              ; [CPU_] |4957| 
        MOVB      XAR0,#72              ; [CPU_] |4957| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4957| 
        MOVL      XAR0,#32              ; [CPU_] |4957| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4957| 
        MOVL      XAR0,#32              ; [CPU_] |4957| 
        ASR64     ACC:P,16              ; [CPU_] |4957| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4957| 
        MOVL      XAR0,#32              ; [CPU_] |4957| 
        ASR64     ACC:P,16              ; [CPU_] |4957| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4957| 
        MOVL      *-SP[4],P             ; [CPU_] |4957| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4957| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4957| 
        MOVL      P,*-SP[32]            ; [CPU_] |4957| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$594, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4957| 
        ; call occurs [#LL$$CMP] ; [] |4957| 
        CMPB      AL,#0                 ; [CPU_] |4957| 
        B         $C$L87,GT             ; [CPU_] |4957| 
        ; branchcc occurs ; [] |4957| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4961,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4961| 
        ADDL      ACC,XAR1              ; [CPU_] |4961| 
        MOVL      XAR4,ACC              ; [CPU_] |4961| 
        MOVL      XAR0,#88              ; [CPU_] |4961| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4961| 
        MOVB      XAR0,#96              ; [CPU_] |4961| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4961| 
        MOVL      XAR0,#38              ; [CPU_] |4961| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4961| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4961| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4961| 
        ; call occurs [#FS$$MPY] ; [] |4961| 
        MOVL      XAR0,#30              ; [CPU_] |4961| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4961| 
        MOVL      P,*XAR3++             ; [CPU_] |4961| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4961| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4961| 
        ; call occurs [#LL$$TOFS] ; [] |4961| 
        MOVL      XAR0,#30              ; [CPU_] |4961| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4961| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4961| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4961| 
        ; call occurs [#FS$$MPY] ; [] |4961| 
        MOVL      XAR0,#88              ; [CPU_] |4961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4961| 
        MOVB      XAR1,#118             ; [CPU_] |4961| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4961| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4961| 
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4961| 
        ; call occurs [#FS$$ADD] ; [] |4961| 
        MOVL      XAR0,#36              ; [CPU_] |4961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4961| 
        MOVL      XAR0,#36              ; [CPU_] |4961| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4961| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4961| 
        MOVL      XAR0,#92              ; [CPU_] |4961| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4961| 
	.dwpsn	file "../Source/prod.c",line 4930,column 17,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |4930| 
        ADDB      AL,#1                 ; [CPU_] |4930| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4930| 
        CMPB      AL,#2                 ; [CPU_] |4930| 
        B         $C$L81,LT             ; [CPU_] |4930| 
        ; branchcc occurs ; [] |4930| 
	.dwpsn	file "../Source/prod.c",line 4965,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4965| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4965| 
        ; call occurs [#_shunt_switch] ; [] |4965| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4967,column 5,is_stmt,isa 0
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_maf_rst")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4967| 
        ; call occurs [#_maf_rst] ; [] |4967| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4970,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4970| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4970| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4970| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4970| 
        ; call occurs [#FS$$SUB] ; [] |4970| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4970| 
        MOVL      XAR0,#36              ; [CPU_] |4970| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4970| 
        MOVB      XAR0,#140             ; [CPU_] |4970| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4970| 
        MOVL      XAR0,#94              ; [CPU_] |4970| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4970| 
	.dwpsn	file "../Source/prod.c",line 4972,column 5,is_stmt,isa 0
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_tagid")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4972| 
        ; call occurs [#_tagid] ; [] |4972| 
        MOVL      XAR4,XAR1             ; [CPU_] |4972| 
        ADDB      XAR4,#32              ; [CPU_] |4972| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4972| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4972| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4975,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4975| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4975| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4975| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4975| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR0,#95              ; [CPU_] |4975| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4975| 
	.dwpsn	file "../Source/prod.c",line 4978,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4978| 
	.dwpsn	file "../Source/prod.c",line 4980,column 5,is_stmt,isa 0
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4980| 
        ; call occurs [#_ad7738_setcal] ; [] |4980| 
        MOVZ      AR1,*-SP[63]          ; [CPU_] |4980| 
	.dwpsn	file "../Source/prod.c",line 4981,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4981| 
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4981| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4981| 
        MOV       AL,AR1                ; [CPU_] |4981| 
	.dwpsn	file "../Source/prod.c",line 4982,column 5,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4982| 
        ; call occurs [#_ad7738_resetvall] ; [] |4982| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4987| 
        ; call occurs [#_lcd_clear] ; [] |4987| 
	.dwpsn	file "../Source/prod.c",line 4988,column 5,is_stmt,isa 0
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_update_units")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4988| 
        ; call occurs [#_update_units] ; [] |4988| 
        MOVL      XAR0,#42              ; [CPU_] |4988| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4988| 
	.dwpsn	file "../Source/prod.c",line 4990,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4990| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 4991,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4991| 
	.dwpsn	file "../Source/prod.c",line 4990,column 17,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4990| 
        ADDB      AH,#1                 ; [CPU_] |4990| 
	.dwpsn	file "../Source/prod.c",line 4991,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4991| 
        ADDB      XAR7,#1               ; [CPU_] |4991| 
	.dwpsn	file "../Source/prod.c",line 4990,column 17,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |4990| 
        CMP       AL,AH                 ; [CPU_] |4990| 
        B         $C$L90,HI             ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
	.dwpsn	file "../Source/prod.c",line 4993,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4993| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4993| 
	.dwpsn	file "../Source/prod.c",line 4995,column 5,is_stmt,isa 0
        B         $C$L303,UNC           ; [CPU_] |4995| 
        ; branch occurs ; [] |4995| 
$C$L91:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4765,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4765| 
        B         $C$L322,LO            ; [CPU_] |4765| 
        ; branchcc occurs ; [] |4765| 
	.dwpsn	file "../Source/prod.c",line 4770,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4770| 
        MOVL      XAR0,#66              ; [CPU_] |4770| 
        ADDB      ACC,#2                ; [CPU_] |4770| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4770| 
        MOVL      XAR0,#94              ; [CPU_] |4770| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |4770| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4770| 
        CMPL      ACC,XAR6              ; [CPU_] |4770| 
        B         $C$L322,NEQ           ; [CPU_] |4770| 
        ; branchcc occurs ; [] |4770| 
        MOVL      XAR0,#95              ; [CPU_] |4770| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |4770| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4770| 
        CMPL      ACC,XAR6              ; [CPU_] |4770| 
        B         $C$L322,NEQ           ; [CPU_] |4770| 
        ; branchcc occurs ; [] |4770| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4770| 
        MOVL      XAR0,#64              ; [CPU_] |4770| 
        MOVL      ACC,XAR5              ; [CPU_] |4770| 
        ADDB      ACC,#4                ; [CPU_] |4770| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4770| 
        MOVB      XAR0,#36              ; [CPU_] |4770| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4770| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4770| 
        B         $C$L322,NEQ           ; [CPU_] |4770| 
        ; branchcc occurs ; [] |4770| 
	.dwpsn	file "../Source/prod.c",line 4776,column 5,is_stmt,isa 0
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4776| 
        ; call occurs [#_lcd_clear] ; [] |4776| 
	.dwpsn	file "../Source/prod.c",line 4777,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4777| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4777| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4777| 
        ; call occurs [#_lcd_puts] ; [] |4777| 
	.dwpsn	file "../Source/prod.c",line 4778,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4778| 
        MOVL      XAR0,#94              ; [CPU_] |4778| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4778| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4778| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |4778| 
        MOVL      XAR0,#95              ; [CPU_] |4778| 
        MOV       *-SP[3],AL            ; [CPU_] |4778| 
        MOVB      AL,#1                 ; [CPU_] |4778| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |4778| 
        MOVL      XAR0,#44              ; [CPU_] |4778| 
        MOV       *-SP[4],AL            ; [CPU_] |4778| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4778| 
        MOVL      XAR4,XAR1             ; [CPU_] |4778| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_sprintf")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4778| 
        ; call occurs [#_sprintf] ; [] |4778| 
	.dwpsn	file "../Source/prod.c",line 4779,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4779| 
	.dwpsn	file "../Source/prod.c",line 4778,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4778| 
	.dwpsn	file "../Source/prod.c",line 4779,column 5,is_stmt,isa 0
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4779| 
        ; call occurs [#_lcd_puts] ; [] |4779| 
	.dwpsn	file "../Source/prod.c",line 4780,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4780| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4780| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4780| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4780| 
        MOVL      XAR0,#58              ; [CPU_] |4780| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4780| 
        MOVB      XAR1,#36              ; [CPU_] |4780| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4780| 
        ADDL      ACC,XAR6              ; [CPU_] |4780| 
        MOVL      XAR4,ACC              ; [CPU_] |4780| 
        MOVL      XAR0,#44              ; [CPU_] |4780| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4780| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4780| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4780| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_sprintf")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4780| 
        ; call occurs [#_sprintf] ; [] |4780| 
        MOVL      XAR0,#44              ; [CPU_] |4780| 
	.dwpsn	file "../Source/prod.c",line 4781,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4781| 
	.dwpsn	file "../Source/prod.c",line 4780,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4780| 
	.dwpsn	file "../Source/prod.c",line 4781,column 5,is_stmt,isa 0
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4781| 
        ; call occurs [#_lcd_puts] ; [] |4781| 
	.dwpsn	file "../Source/prod.c",line 4783,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4783| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4783| 
        MOVB      XAR1,#36              ; [CPU_] |4783| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4783| 
        CMPB      AL,#1                 ; [CPU_] |4783| 
        B         $C$L92,EQ             ; [CPU_] |4783| 
        ; branchcc occurs ; [] |4783| 
        CMPB      AL,#2                 ; [CPU_] |4783| 
        B         $C$L105,EQ            ; [CPU_] |4783| 
        ; branchcc occurs ; [] |4783| 
        CMPB      AL,#3                 ; [CPU_] |4783| 
        B         $C$L96,EQ             ; [CPU_] |4783| 
        ; branchcc occurs ; [] |4783| 
        B         $C$L112,UNC           ; [CPU_] |4783| 
        ; branch occurs ; [] |4783| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4787,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4787| 
        MOVB      AL,#60                ; [CPU_] |4787| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4787| 
        ; call occurs [#_lcd_puts] ; [] |4787| 
        MOVL      XAR0,#94              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4789| 
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4790| 
        MOV       T,*+FP[AR0]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4789| 
	.dwpsn	file "../Source/prod.c",line 4791,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4791| 
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4790| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4789| 
	.dwpsn	file "../Source/prod.c",line 4791,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4791| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4791| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4789| 
	.dwpsn	file "../Source/prod.c",line 4791,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4791| 
        SUBB      ACC,#1                ; [CPU_] |4791| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4791| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4791| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4791| 
        ; branchcc occurs ; [] |4791| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4792,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4792| 
        ; branch occurs ; [] |4792| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4793,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4793| 
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_delay_us")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4793| 
        ; call occurs [#_delay_us] ; [] |4793| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4792,column 14,is_stmt,isa 0
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4792| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4792| 
        CMPB      AL,#0                 ; [CPU_] |4792| 
        B         $C$L93,EQ             ; [CPU_] |4792| 
        ; branchcc occurs ; [] |4792| 
	.dwpsn	file "../Source/prod.c",line 4796,column 7,is_stmt,isa 0
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4796| 
        ; call occurs [#_ad7738_getraw] ; [] |4796| 
	.dwpsn	file "../Source/prod.c",line 4797,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4797| 
        ADDL      XAR4,ACC              ; [CPU_] |4797| 
        MOVL      XAR0,#28              ; [CPU_] |4797| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4797| 
        MOVL      XAR0,#28              ; [CPU_] |4797| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4797| 
        ASR64     ACC:P,16              ; [CPU_] |4797| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4797| 
        MOVL      XAR0,#28              ; [CPU_] |4797| 
        ASR64     ACC:P,16              ; [CPU_] |4797| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4797| 
        MOVL      XAR0,#28              ; [CPU_] |4797| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4797| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4797| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4797| 
        MOVL      *-SP[32],P            ; [CPU_] |4797| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4797| 
	.dwpsn	file "../Source/prod.c",line 4791,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4791| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4791| 
        MOVB      ACC,#0                ; [CPU_] |4791| 
        SUBB      ACC,#1                ; [CPU_] |4791| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4791| 
        B         $C$L94,NEQ            ; [CPU_] |4791| 
        ; branchcc occurs ; [] |4791| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4799,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4799| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4803| 
        ; branch occurs ; [] |4803| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4852,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4852| 
        MOVB      AL,#60                ; [CPU_] |4852| 
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4852| 
        ; call occurs [#_lcd_puts] ; [] |4852| 
        MOVL      XAR0,#94              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4854,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4854| 
        MOVL      XAR0,#92              ; [CPU_] |4854| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4854| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4855,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4855| 
        B         $C$L99,LEQ            ; [CPU_] |4855| 
        ; branchcc occurs ; [] |4855| 
	.dwpsn	file "../Source/prod.c",line 4857,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4857| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4857| 
        ; call occurs [#_shunt_switch] ; [] |4857| 
        MOV       *-SP[63],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4859,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4859| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_delay_us")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4859| 
        ; call occurs [#_delay_us] ; [] |4859| 
        MOVZ      AR6,*-SP[63]          ; [CPU_] |4859| 
	.dwpsn	file "../Source/prod.c",line 4858,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4858| 
        MOVZ      AR0,AR6               ; [CPU_] |4858| 
        MOV       *-SP[63],AR6          ; [CPU_] |4858| 
        CMP       AR0,#-1               ; [CPU_] |4858| 
        B         $C$L98,NEQ            ; [CPU_] |4858| 
        ; branchcc occurs ; [] |4858| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4862,column 8,is_stmt,isa 0
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("_maf_rst")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4862| 
        ; call occurs [#_maf_rst] ; [] |4862| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4864,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4864| 
        SPM       #0                    ; [CPU_] 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("_delay_us")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4864| 
        ; call occurs [#_delay_us] ; [] |4864| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4867,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4867| 
	.dwpsn	file "../Source/prod.c",line 4868,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4868| 
	.dwpsn	file "../Source/prod.c",line 4867,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4867| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4867| 
	.dwpsn	file "../Source/prod.c",line 4869,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4869| 
	.dwpsn	file "../Source/prod.c",line 4868,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4868| 
	.dwpsn	file "../Source/prod.c",line 4869,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4869| 
        MOVB      ACC,#0                ; [CPU_] |4869| 
        SUBB      ACC,#1                ; [CPU_] |4869| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4869| 
        B         $C$L101,EQ            ; [CPU_] |4869| 
        ; branchcc occurs ; [] |4869| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4870,column 15,is_stmt,isa 0
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4870| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4870| 
        CMPB      AL,#0                 ; [CPU_] |4870| 
        B         $C$L104,EQ            ; [CPU_] |4870| 
        ; branchcc occurs ; [] |4870| 
	.dwpsn	file "../Source/prod.c",line 4874,column 8,is_stmt,isa 0
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4874| 
        ; call occurs [#_ad7738_getraw] ; [] |4874| 
	.dwpsn	file "../Source/prod.c",line 4875,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4875| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4875| 
        ADDL      XAR4,ACC              ; [CPU_] |4875| 
        MOVL      XAR0,#26              ; [CPU_] |4875| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4875| 
        MOVL      XAR0,#26              ; [CPU_] |4875| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4875| 
        ASR64     ACC:P,16              ; [CPU_] |4875| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4875| 
        MOVL      XAR0,#26              ; [CPU_] |4875| 
        ASR64     ACC:P,16              ; [CPU_] |4875| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4875| 
        MOVL      XAR0,#26              ; [CPU_] |4875| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4875| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4875| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4875| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4875| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4875| 
	.dwpsn	file "../Source/prod.c",line 4869,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4869| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4869| 
        MOVB      ACC,#0                ; [CPU_] |4869| 
        SUBB      ACC,#1                ; [CPU_] |4869| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4869| 
        B         $C$L100,NEQ           ; [CPU_] |4869| 
        ; branchcc occurs ; [] |4869| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4854,column 18,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |4854| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4854| 
        ADDB      XAR1,#4               ; [CPU_] |4854| 
        MOVL      XAR0,#92              ; [CPU_] |4854| 
        ADDB      AL,#1                 ; [CPU_] |4854| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4854| 
        CMPB      AL,#2                 ; [CPU_] |4854| 
        B         $C$L97,LT             ; [CPU_] |4854| 
        ; branchcc occurs ; [] |4854| 
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4879| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4879| 
        ; call occurs [#_shunt_switch] ; [] |4879| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4881,column 6,is_stmt,isa 0
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("_maf_rst")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4881| 
        ; call occurs [#_maf_rst] ; [] |4881| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4884,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4884| 
        MOV       AH,#17948             ; [CPU_] |4884| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4884| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4884| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4884| 
        ; call occurs [#FS$$MPY] ; [] |4884| 
        MOVL      XAR1,ACC              ; [CPU_] |4884| 
        MOVL      P,*-SP[28]            ; [CPU_] |4884| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4884| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4884| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4884| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4884| 
        ; call occurs [#LL$$TOFS] ; [] |4884| 
        MOVL      XAR0,#88              ; [CPU_] |4884| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4884| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4884| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4884| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4884| 
        ; call occurs [#FS$$MPY] ; [] |4884| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4884| 
        MOVL      ACC,XAR1              ; [CPU_] |4884| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4884| 
        ; call occurs [#FS$$DIV] ; [] |4884| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4884| 
        MOVB      XAR0,#96              ; [CPU_] |4884| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4884| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4886,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4886| 
        MOVL      XAR0,#52              ; [CPU_] |4886| 
        ADDB      ACC,#96               ; [CPU_] |4886| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4886| 
        MOVL      XAR0,#88              ; [CPU_] |4886| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4886| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4886| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4886| 
        ; call occurs [#FS$$NEG] ; [] |4886| 
        MOVB      XAR0,#96              ; [CPU_] |4886| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4886| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4886| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4886| 
        ; call occurs [#FS$$MPY] ; [] |4886| 
        MOVL      XAR1,ACC              ; [CPU_] |4886| 
        MOVL      P,*-SP[32]            ; [CPU_] |4886| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4886| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4886| 
        ; call occurs [#LL$$TOFS] ; [] |4886| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4886| 
        MOVL      ACC,XAR1              ; [CPU_] |4886| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4886| 
        ; call occurs [#FS$$MPY] ; [] |4886| 
        MOVL      XAR6,ACC              ; [CPU_] |4886| 
        MOV       AL,#16384             ; [CPU_] |4886| 
        MOV       AH,#17948             ; [CPU_] |4886| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4886| 
        MOVL      ACC,XAR6              ; [CPU_] |4886| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4886| 
        ; call occurs [#FS$$DIV] ; [] |4886| 
        MOVL      XAR0,#36              ; [CPU_] |4886| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4886| 
        MOVB      XAR1,#118             ; [CPU_] |4886| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4886| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4889,column 6,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4890,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4890| 
        ; branch occurs ; [] |4890| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4871,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4871| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("_delay_us")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4871| 
        ; call occurs [#_delay_us] ; [] |4871| 
	.dwpsn	file "../Source/prod.c",line 4870,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4870| 
        ; branch occurs ; [] |4870| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4807| 
	.dwpsn	file "../Source/prod.c",line 4808,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4808| 
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4807| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] |4807| 
	.dwpsn	file "../Source/prod.c",line 4808,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4808| 
        MOVZ      AR5,AR5               ; [CPU_] |4808| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4810,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4810| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4810| 
        MOV       *XAR5++,AL            ; [CPU_] |4810| 
	.dwpsn	file "../Source/prod.c",line 4811,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4809,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4809| 
        ; branchcc occurs ; [] |4809| 
	.dwpsn	file "../Source/prod.c",line 4814,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4814| 
        MOVB      XAR0,#46              ; [CPU_] |4814| 
        MOV       AL,*-SP[63]           ; [CPU_] |4814| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4814| 
        B         $C$L112,HIS           ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
        MOVL      XAR0,#36              ; [CPU_] |4814| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4814| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4814| 
        ADDL      ACC,XAR6              ; [CPU_] |4814| 
        ADDB      ACC,#48               ; [CPU_] |4814| 
        MOVL      XAR1,ACC              ; [CPU_] |4814| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4814| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4814| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4814| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4814| 
        ; call occurs [#FS$$CMP] ; [] |4814| 
        CMPB      AL,#0                 ; [CPU_] |4814| 
        B         $C$L112,NEQ           ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
	.dwpsn	file "../Source/prod.c",line 4818,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4818| 
        MOVB      AL,#1                 ; [CPU_] |4818| 
        MOVL      XAR0,#44              ; [CPU_] |4818| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4818| 
        ADD       AL,*-SP[63]           ; [CPU_] |4818| 
        MOV       *-SP[3],AL            ; [CPU_] |4818| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4818| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("_sprintf")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4818| 
        ; call occurs [#_sprintf] ; [] |4818| 
        MOVL      XAR0,#44              ; [CPU_] |4818| 
	.dwpsn	file "../Source/prod.c",line 4819,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4819| 
	.dwpsn	file "../Source/prod.c",line 4818,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4818| 
	.dwpsn	file "../Source/prod.c",line 4819,column 6,is_stmt,isa 0
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4819| 
        ; call occurs [#_lcd_puts] ; [] |4819| 
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4821| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4822| 
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4821| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4822| 
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4821| 
	.dwpsn	file "../Source/prod.c",line 4823,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4823| 
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4821| 
	.dwpsn	file "../Source/prod.c",line 4823,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4823| 
        MOVB      ACC,#0                ; [CPU_] |4823| 
        SUBB      ACC,#1                ; [CPU_] |4823| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4823| 
        B         $C$L108,EQ            ; [CPU_] |4823| 
        ; branchcc occurs ; [] |4823| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4824,column 14,is_stmt,isa 0
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4824| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4824| 
        CMPB      AL,#0                 ; [CPU_] |4824| 
        B         $C$L111,EQ            ; [CPU_] |4824| 
        ; branchcc occurs ; [] |4824| 
	.dwpsn	file "../Source/prod.c",line 4828,column 7,is_stmt,isa 0
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4828| 
        ; call occurs [#_ad7738_getraw] ; [] |4828| 
	.dwpsn	file "../Source/prod.c",line 4829,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4829| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4829| 
        ADDL      XAR4,ACC              ; [CPU_] |4829| 
        MOVL      XAR0,#24              ; [CPU_] |4829| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4829| 
        MOVL      XAR0,#24              ; [CPU_] |4829| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4829| 
        ASR64     ACC:P,16              ; [CPU_] |4829| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4829| 
        MOVL      XAR0,#24              ; [CPU_] |4829| 
        ASR64     ACC:P,16              ; [CPU_] |4829| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4829| 
        MOVL      XAR0,#24              ; [CPU_] |4829| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4829| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4829| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4829| 
        MOVL      *-SP[32],P            ; [CPU_] |4829| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4829| 
	.dwpsn	file "../Source/prod.c",line 4823,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4823| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4823| 
        MOVB      ACC,#0                ; [CPU_] |4823| 
        SUBB      ACC,#1                ; [CPU_] |4823| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4823| 
        B         $C$L107,NEQ           ; [CPU_] |4823| 
        ; branchcc occurs ; [] |4823| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4831,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4831| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4831| 
        MOV       *-SP[2],#0            ; [CPU_] |4831| 
        MOV       *-SP[1],#0            ; [CPU_] |4831| 
        MOVL      P,*-SP[32]            ; [CPU_] |4831| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4831| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4831| 
        ; call occurs [#LL$$DIV] ; [] |4831| 
        ADDB      XAR1,#24              ; [CPU_] |4831| 
	.dwpsn	file "../Source/prod.c",line 4833,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4833| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4833| 
	.dwpsn	file "../Source/prod.c",line 4831,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4831| 
	.dwpsn	file "../Source/prod.c",line 4833,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4833| 
        MOV       AL,*-SP[63]           ; [CPU_] |4833| 
        SUB       AL,AR6                ; [CPU_] |4833| 
        MOVZ      AR7,AL                ; [CPU_] |4833| 
        MOVL      XAR4,#65535           ; [CPU_U] |4833| 
        MOVL      ACC,XAR4              ; [CPU_] |4833| 
        CMPL      ACC,XAR7              ; [CPU_] |4833| 
        B         $C$L103,NEQ           ; [CPU_] |4833| 
        ; branchcc occurs ; [] |4833| 
	.dwpsn	file "../Source/prod.c",line 4836,column 12,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |4836| 
        B         $C$L110,UNC           ; [CPU_] |4836| 
        ; branch occurs ; [] |4836| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4837,column 8,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4837| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4837| 
        MOVL      XAR0,#40              ; [CPU_] |4837| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4837| 
        MOVB      AL,#10                ; [CPU_] |4837| 
        MPYU      ACC,T,AL              ; [CPU_] |4837| 
        MOVL      XAR0,#88              ; [CPU_] |4837| 
        ADDL      ACC,XAR6              ; [CPU_] |4837| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4837| 
        MOVL      XAR0,#36              ; [CPU_] |4837| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4837| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[63]           ; [CPU_] |4837| 
        MOV       ACC,AL << 1           ; [CPU_] |4837| 
        ADDL      ACC,XAR6              ; [CPU_] |4837| 
        MOVL      XAR3,ACC              ; [CPU_] |4837| 
        MOVB      XAR0,#48              ; [CPU_] |4837| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4837| 
        MOVB      XAR0,#50              ; [CPU_] |4837| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4837| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4837| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4837| 
        ; call occurs [#FS$$SUB] ; [] |4837| 
        MOVL      XAR0,#42              ; [CPU_] |4837| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4837| 
        MOVB      XAR0,#74              ; [CPU_] |4837| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4837| 
        MOVB      XAR0,#72              ; [CPU_] |4837| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4837| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4837| 
        ; call occurs [#L$$TOFS] ; [] |4837| 
        MOVL      XAR0,#42              ; [CPU_] |4837| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4837| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4837| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4837| 
        ; call occurs [#FS$$DIV] ; [] |4837| 
        MOVL      XAR0,#88              ; [CPU_] |4837| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4837| 
        MOVB      XAR1,#44              ; [CPU_] |4837| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4837| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4837| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4837| 
        ; call occurs [#FS$$DIV] ; [] |4837| 
        MOVB      XAR0,#96              ; [CPU_] |4837| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4837| 
	.dwpsn	file "../Source/prod.c",line 4841,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4841| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4841| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4841| 
        MOVB      XAR1,#44              ; [CPU_] |4841| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4841| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4841| 
        ; call occurs [#FS$$MPY] ; [] |4841| 
        MOVL      XAR0,#88              ; [CPU_] |4841| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4841| 
        MOVB      XAR0,#72              ; [CPU_] |4841| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4841| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4841| 
        ; call occurs [#L$$TOFS] ; [] |4841| 
        MOVL      XAR0,#88              ; [CPU_] |4841| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4841| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4841| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4841| 
        ; call occurs [#FS$$MPY] ; [] |4841| 
        MOVB      XAR0,#48              ; [CPU_] |4841| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4841| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4841| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4841| 
        ; call occurs [#FS$$SUB] ; [] |4841| 
        MOVB      XAR0,#118             ; [CPU_] |4841| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4841| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4836,column 43,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |4836| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4836,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4836| 
        ADDB      AL,#-1                ; [CPU_] |4836| 
        CMP       AL,*-SP[63]           ; [CPU_] |4836| 
        B         $C$L109,GT            ; [CPU_] |4836| 
        ; branchcc occurs ; [] |4836| 
	.dwpsn	file "../Source/prod.c",line 4848,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4848| 
        ; branch occurs ; [] |4848| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4825,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4825| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("_delay_us")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4825| 
        ; call occurs [#_delay_us] ; [] |4825| 
	.dwpsn	file "../Source/prod.c",line 4824,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4824| 
        ; branch occurs ; [] |4824| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4815,column 7,is_stmt,isa 0
        MOV       *-SP[63],#2           ; [CPU_] |4815| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4897,column 5,is_stmt,isa 0
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4897| 
        ; call occurs [#_lcd_clear] ; [] |4897| 
	.dwpsn	file "../Source/prod.c",line 4898,column 5,is_stmt,isa 0
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("_update_units")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4898| 
        ; call occurs [#_update_units] ; [] |4898| 
        MOV       AL,*-SP[63]           ; [CPU_] |4898| 
	.dwpsn	file "../Source/prod.c",line 4901,column 6,is_stmt,isa 0
        B         $C$L319,NEQ           ; [CPU_] |4901| 
        ; branchcc occurs ; [] |4901| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4903,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4903| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4904| 
	.dwpsn	file "../Source/prod.c",line 4903,column 17,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4903| 
        ADDB      AH,#1                 ; [CPU_] |4903| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4904| 
        ADDB      XAR7,#1               ; [CPU_] |4904| 
	.dwpsn	file "../Source/prod.c",line 4903,column 17,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |4903| 
        CMP       AL,AH                 ; [CPU_] |4903| 
        B         $C$L114,HI            ; [CPU_] |4903| 
        ; branchcc occurs ; [] |4903| 
	.dwpsn	file "../Source/prod.c",line 4906,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4906| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4906| 
	.dwpsn	file "../Source/prod.c",line 4907,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |4907| 
        ; branch occurs ; [] |4907| 
$C$L115:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4617,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4617| 
        B         $C$L322,LO            ; [CPU_] |4617| 
        ; branchcc occurs ; [] |4617| 
	.dwpsn	file "../Source/prod.c",line 4622,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4622| 
        MOVL      XAR0,#94              ; [CPU_] |4622| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4622| 
	.dwpsn	file "../Source/prod.c",line 4623,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |4623| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4623| 
	.dwpsn	file "../Source/prod.c",line 4624,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4624| 
	.dwpsn	file "../Source/prod.c",line 4623,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AL          ; [CPU_] |4623| 
	.dwpsn	file "../Source/prod.c",line 4624,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4624| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4624| 
        MOVL      XAR0,#94              ; [CPU_] |4624| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4624| 
        CMPB      AL,#4                 ; [CPU_] |4624| 
        B         $C$L322,HIS           ; [CPU_] |4624| 
        ; branchcc occurs ; [] |4624| 
        MOVL      XAR0,#95              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4624| 
        B         $C$L322,HIS           ; [CPU_] |4624| 
        ; branchcc occurs ; [] |4624| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4630,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4630| 
        MOVL      ACC,XAR4              ; [CPU_] |4630| 
        ADDB      ACC,#4                ; [CPU_] |4630| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4630| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4630| 
        CMPB      AL,#16                ; [CPU_] |4630| 
        B         $C$L322,HIS           ; [CPU_] |4630| 
        ; branchcc occurs ; [] |4630| 
	.dwpsn	file "../Source/prod.c",line 4634,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4634| 
        MOVL      XAR0,#64              ; [CPU_] |4634| 
        CMPB      AL,#0                 ; [CPU_] |4634| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4634| 
        B         $C$L116,LEQ           ; [CPU_] |4634| 
        ; branchcc occurs ; [] |4634| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4634| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4634| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4634| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4634| 
        MOVL      XAR0,ACC              ; [CPU_] |4634| 
	.dwpsn	file "../Source/prod.c",line 4635,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4635| 
        ADD       AL,AR4                ; [CPU_] |4635| 
        MOVZ      AR6,AL                ; [CPU_] |4635| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4635| 
	.dwpsn	file "../Source/prod.c",line 4634,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4634| 
        ; branch occurs ; [] |4634| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4629| 
	.dwpsn	file "../Source/prod.c",line 4634,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4634| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4637,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4637| 
        MOVL      XAR0,#86              ; [CPU_] |4637| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4637| 
	.dwpsn	file "../Source/prod.c",line 4639,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4639| 
        MOVL      XAR4,ACC              ; [CPU_] |4639| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4639| 
        CMPB      AL,#16                ; [CPU_] |4639| 
        B         $C$L322,HIS           ; [CPU_] |4639| 
        ; branchcc occurs ; [] |4639| 
        ADDB      XAR4,#1               ; [CPU_] |4639| 
	.dwpsn	file "../Source/prod.c",line 4644,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4644| 
	.dwpsn	file "../Source/prod.c",line 4639,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4639| 
        MOVL      P,XAR4                ; [CPU_] |4639| 
	.dwpsn	file "../Source/prod.c",line 4644,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4644| 
        ; branchcc occurs ; [] |4644| 
        MOVZ      AR5,AL                ; [CPU_] |4644| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4645,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4645| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4645| 
        MOV       *XAR4++,AL            ; [CPU_] |4645| 
        ADDB      XAR7,#1               ; [CPU_] |4645| 
        MOVL      P,XAR7                ; [CPU_] |4645| 
	.dwpsn	file "../Source/prod.c",line 4644,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4644| 
        ; branchcc occurs ; [] |4644| 
        B         $C$L120,UNC           ; [CPU_] |4644| 
        ; branch occurs ; [] |4644| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4644,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4644| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4647,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4647| 
        ADD       ACC,AR5               ; [CPU_] |4647| 
        MOVL      XAR4,ACC              ; [CPU_] |4647| 
        MOVB      XAR0,#16              ; [CPU_] |4647| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4647| 
	.dwpsn	file "../Source/prod.c",line 4649,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4649| 
        MOV       AL,*XAR7              ; [CPU_] |4649| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4649| 
        ADDB      XAR7,#1               ; [CPU_] |4649| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4649| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4649| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4653,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4653| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4653| 
	.dwpsn	file "../Source/prod.c",line 4654,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4654| 
	.dwpsn	file "../Source/prod.c",line 4653,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4653| 
        MOV       *XAR5++,AL            ; [CPU_] |4653| 
	.dwpsn	file "../Source/prod.c",line 4654,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4654| 
        MOVL      P,XAR7                ; [CPU_] |4654| 
	.dwpsn	file "../Source/prod.c",line 4652,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4652| 
        ; branchcc occurs ; [] |4652| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4660,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4660| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4661,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4660,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4660| 
        MOV       *XAR0++,AL            ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4661,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4661| 
        MOVL      P,XAR5                ; [CPU_] |4661| 
	.dwpsn	file "../Source/prod.c",line 4659,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4659| 
        ; branchcc occurs ; [] |4659| 
	.dwpsn	file "../Source/prod.c",line 4664,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4664| 
        MOVB      XAR0,#40              ; [CPU_] |4664| 
	.dwpsn	file "../Source/prod.c",line 4666,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4664,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4664| 
        MOVB      XAR0,#142             ; [CPU_] |4664| 
	.dwpsn	file "../Source/prod.c",line 4666,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4664,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4664| 
	.dwpsn	file "../Source/prod.c",line 4666,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4666| 
        MOV       AL,*XAR7              ; [CPU_] |4666| 
        ADDB      XAR7,#1               ; [CPU_] |4666| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4667,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4666,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4667,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4667| 
        CMPB      AL,#6                 ; [CPU_] |4667| 
        B         $C$L123,GT            ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
        CMPB      AL,#6                 ; [CPU_] |4667| 
        B         $C$L126,EQ            ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
        CMPB      AL,#1                 ; [CPU_] |4667| 
        B         $C$L129,LOS           ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
        MOV       AH,AL                 ; [CPU_] |4667| 
        ADDB      AH,#-2                ; [CPU_] |4667| 
        CMPB      AH,#2                 ; [CPU_] |4667| 
        B         $C$L128,LOS           ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
        CMPB      AL,#5                 ; [CPU_] |4667| 
        B         $C$L127,EQ            ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
        B         $C$L124,UNC           ; [CPU_] |4667| 
        ; branch occurs ; [] |4667| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4667| 
        ADDB      AH,#-7                ; [CPU_] |4667| 
        CMPB      AH,#1                 ; [CPU_] |4667| 
        B         $C$L125,LOS           ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
        CMPB      AL,#15                ; [CPU_] |4667| 
        B         $C$L125,EQ            ; [CPU_] |4667| 
        ; branchcc occurs ; [] |4667| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4689,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4689| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4689| 
	.dwpsn	file "../Source/prod.c",line 4690,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4690| 
        ; branch occurs ; [] |4690| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4686,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4686| 
	.dwpsn	file "../Source/prod.c",line 4687,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4687| 
        ; branch occurs ; [] |4687| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4681,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4682,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4682| 
        ; branch occurs ; [] |4682| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4678,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4679,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4679| 
        ; branch occurs ; [] |4679| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4675,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4675| 
	.dwpsn	file "../Source/prod.c",line 4676,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4676| 
        ; branch occurs ; [] |4676| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4670,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4670| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4692,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4692| 
        MOVB      XAR0,#43              ; [CPU_] |4692| 
        ADDB      XAR7,#42              ; [CPU_] |4692| 
        MOV       AL,*XAR7              ; [CPU_] |4692| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4693,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4693| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4693| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4693| 
	.dwpsn	file "../Source/prod.c",line 4695,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4695| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4695| 
        CMPB      AL,#1                 ; [CPU_] |4695| 
        B         $C$L137,EQ            ; [CPU_] |4695| 
        ; branchcc occurs ; [] |4695| 
        CMPB      AL,#2                 ; [CPU_] |4695| 
        B         $C$L131,EQ            ; [CPU_] |4695| 
        ; branchcc occurs ; [] |4695| 
        CMPB      AL,#3                 ; [CPU_] |4695| 
        B         $C$L135,EQ            ; [CPU_] |4695| 
        ; branchcc occurs ; [] |4695| 
        B         $C$L134,UNC           ; [CPU_] |4695| 
        ; branch occurs ; [] |4695| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4712,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4712| 
        MOVB      XAR0,#46              ; [CPU_] |4712| 
        MOV       AL,*XAR7              ; [CPU_] |4712| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4713| 
	.dwpsn	file "../Source/prod.c",line 4712,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4713| 
        CMPB      AL,#12                ; [CPU_] |4713| 
        B         $C$L134,GT            ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4712,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4718,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4718| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4712,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4712| 
        MOVL      P,XAR6                ; [CPU_] |4712| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4726| 
        B         $C$L140,LEQ           ; [CPU_] |4726| 
        ; branchcc occurs ; [] |4726| 
	.dwpsn	file "../Source/prod.c",line 4719,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4719| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4719| 
        ADDB      ACC,#48               ; [CPU_] |4719| 
        MOVL      XAR0,ACC              ; [CPU_] |4719| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4721,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4721| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4721| 
	.dwpsn	file "../Source/prod.c",line 4722,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4722| 
	.dwpsn	file "../Source/prod.c",line 4721,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4721| 
        MOV       *XAR0++,AL            ; [CPU_] |4721| 
	.dwpsn	file "../Source/prod.c",line 4722,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4722| 
        MOVL      P,XAR5                ; [CPU_] |4722| 
	.dwpsn	file "../Source/prod.c",line 4720,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4720| 
        ; branchcc occurs ; [] |4720| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4718,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4718| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4718| 
        ; branch occurs ; [] |4718| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4744,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4744| 
	.dwpsn	file "../Source/prod.c",line 4745,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4745| 
        ; branch occurs ; [] |4745| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4730,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4730| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4730| 
        MOVZ      AR0,AR5               ; [CPU_] |4730| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4732,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4732| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4733,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4733| 
	.dwpsn	file "../Source/prod.c",line 4732,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4732| 
        MOV       *XAR0++,AL            ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4733,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4733| 
        MOVL      P,XAR5                ; [CPU_] |4733| 
	.dwpsn	file "../Source/prod.c",line 4731,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4731| 
        ; branchcc occurs ; [] |4731| 
	.dwpsn	file "../Source/prod.c",line 4736,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4736| 
        MOV       AH,#0                 ; [CPU_] |4736| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4736| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4736| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4736| 
        ; call occurs [#FS$$CMP] ; [] |4736| 
        CMPB      AL,#0                 ; [CPU_] |4736| 
        B         $C$L139,NEQ           ; [CPU_] |4736| 
        ; branchcc occurs ; [] |4736| 
	.dwpsn	file "../Source/prod.c",line 4737,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4737| 
        MOV       AH,#16314             ; [CPU_] |4737| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4737| 
        B         $C$L139,UNC           ; [CPU_] |4737| 
        ; branch occurs ; [] |4737| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4700,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4700| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4700| 
	.dwpsn	file "../Source/prod.c",line 4701,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4701| 
	.dwpsn	file "../Source/prod.c",line 4700,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4700| 
        MOV       *XAR0++,AL            ; [CPU_] |4700| 
	.dwpsn	file "../Source/prod.c",line 4701,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4701| 
        MOVL      P,XAR5                ; [CPU_] |4701| 
	.dwpsn	file "../Source/prod.c",line 4699,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4699| 
        ; branchcc occurs ; [] |4699| 
	.dwpsn	file "../Source/prod.c",line 4704,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4704| 
        MOVL      XAR0,#88              ; [CPU_] |4704| 
        MOVL      ACC,XAR1              ; [CPU_] |4704| 
        ADDB      ACC,#96               ; [CPU_] |4704| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4704| 
        MOVL      XAR0,#52              ; [CPU_] |4704| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4704| 
        MOV       AL,#0                 ; [CPU_] |4704| 
        MOV       AH,#0                 ; [CPU_] |4704| 
        MOVB      XAR0,#96              ; [CPU_] |4704| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4704| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4704| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4704| 
        ; call occurs [#FS$$CMP] ; [] |4704| 
        CMPB      AL,#0                 ; [CPU_] |4704| 
        B         $C$L139,NEQ           ; [CPU_] |4704| 
        ; branchcc occurs ; [] |4704| 
	.dwpsn	file "../Source/prod.c",line 4705,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4705| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4705| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4705| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4707,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4707| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4748,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4748| 
        MOVB      XAR0,#36              ; [CPU_] |4748| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4748| 
        B         $C$L322,EQ            ; [CPU_] |4748| 
        ; branchcc occurs ; [] |4748| 
	.dwpsn	file "../Source/prod.c",line 4752,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4752| 
        MOV       AL,#0                 ; [CPU_] |4752| 
        MOV       AH,#0                 ; [CPU_] |4752| 
	.dwpsn	file "../Source/prod.c",line 4753,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4752,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4752| 
	.dwpsn	file "../Source/prod.c",line 4753,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4755,column 5,is_stmt,isa 0
        MOVB      XAR1,#150             ; [CPU_] |4755| 
	.dwpsn	file "../Source/prod.c",line 4753,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4754,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4754| 
        MOV       AL,#0                 ; [CPU_] |4754| 
        MOV       AH,#0                 ; [CPU_] |4754| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4754| 
	.dwpsn	file "../Source/prod.c",line 4755,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4755| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4755| 
        MOVL      XAR0,#93              ; [CPU_] |4755| 
        MOV       *+XAR4[AR1],AL        ; [CPU_] |4755| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |4755| 
	.dwpsn	file "../Source/prod.c",line 4757,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4757| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4757| 
        ; branch occurs ; [] |4757| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4758| 
        MOV       PL,*+FP[AR0]          ; [CPU_] |4758| 
        MOVL      XAR0,#44              ; [CPU_] |4758| 
        ADD       ACC,PL                ; [CPU_] |4758| 
        MOVL      XAR7,ACC              ; [CPU_] |4758| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4758| 
        ADD       ACC,PL                ; [CPU_] |4758| 
        MOVL      XAR4,ACC              ; [CPU_] |4758| 
        MOVL      XAR0,#91              ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4757,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4757| 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4758| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4758| 
        MOV       AL,PL                 ; [CPU_] |4758| 
        ADDB      AL,#1                 ; [CPU_] |4758| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4758| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4757,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4757| 
        B         $C$L141,HI            ; [CPU_] |4757| 
        ; branchcc occurs ; [] |4757| 
        B         $C$L747,UNC           ; [CPU_] |4757| 
        ; branch occurs ; [] |4757| 
$C$L143:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4565| 
        B         $C$L322,LO            ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
        MOVL      ACC,XAR4              ; [CPU_] |4565| 
        MOVL      XAR0,#66              ; [CPU_] |4565| 
        ADDB      ACC,#2                ; [CPU_] |4565| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4565| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4565| 
        B         $C$L322,LT            ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
        MOVL      XAR5,XAR4             ; [CPU_] |4565| 
        MOVL      XAR0,#66              ; [CPU_] |4565| 
        CMPB      AL,#4                 ; [CPU_] |4565| 
        ADDB      XAR5,#2               ; [CPU_] |4565| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4565| 
        B         $C$L322,GEQ           ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4565| 
        B         $C$L322,LT            ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
        CMPB      AH,#2                 ; [CPU_] |4565| 
        B         $C$L322,GT            ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
        MOVL      XAR0,#96              ; [CPU_] 
        MOV       AH,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4571,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4571| 
        ; branchcc occurs ; [] |4571| 
	.dwpsn	file "../Source/prod.c",line 4574,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4574| 
        MOVL      XAR0,#66              ; [CPU_] |4574| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4574| 
        MOVL      XAR0,#94              ; [CPU_] |4574| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |4574| 
        MOVU      ACC,AL                ; [CPU_] |4574| 
        CMPL      ACC,XAR6              ; [CPU_] |4574| 
        B         $C$L145,EQ            ; [CPU_] |4574| 
        ; branchcc occurs ; [] |4574| 
        B         $C$L322,UNC           ; [CPU_] |4574| 
        ; branch occurs ; [] |4574| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4572,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4572| 
        MOVL      XAR0,#66              ; [CPU_] |4572| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4572| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4572| 
        MOVL      XAR0,#94              ; [CPU_] |4572| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4572| 
$C$L145:    
        MOVL      XAR0,#94              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4579,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4579| 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4580,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4580| 
	.dwpsn	file "../Source/prod.c",line 4579,column 5,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |4579| 
	.dwpsn	file "../Source/prod.c",line 4580,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR4             ; [CPU_] |4580| 
        MOVL      XAR6,XAR5             ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4579,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4579| 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4583| 
	.dwpsn	file "../Source/prod.c",line 4580,column 5,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4580| 
        SETC      SXM                   ; [CPU_] 
        ADDB      XAR6,#3               ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4583| 
	.dwpsn	file "../Source/prod.c",line 4580,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        MOVZ      AR4,AR4               ; [CPU_] |4583| 
	.dwpsn	file "../Source/prod.c",line 4580,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AL          ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4581,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4581| 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4583| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4583| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#4               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4585,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4585| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4585| 
	.dwpsn	file "../Source/prod.c",line 4586,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4586| 
        MOV       *XAR7++,AL            ; [CPU_] |4586| 
	.dwpsn	file "../Source/prod.c",line 4587,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4587| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4587| 
        MOV       *XAR4++,AL            ; [CPU_] |4587| 
	.dwpsn	file "../Source/prod.c",line 4588,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4588| 
        MOV       *XAR7++,AL            ; [CPU_] |4588| 
	.dwpsn	file "../Source/prod.c",line 4584,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4584| 
        ; branchcc occurs ; [] |4584| 
	.dwpsn	file "../Source/prod.c",line 4591,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4591| 
        MOVL      XAR0,#93              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] |4591| 
        MOVZ      AR4,AR4               ; [CPU_] |4591| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4591| 
        ADDL      XAR4,ACC              ; [CPU_] |4591| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4591| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4591| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4591| 
        MOVL      ACC,XAR1              ; [CPU_] |4591| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4591| 
        ; call occurs [#FS$$CMP] ; [] |4591| 
        CMPB      AL,#0                 ; [CPU_] |4591| 
        B         $C$L322,LT            ; [CPU_] |4591| 
        ; branchcc occurs ; [] |4591| 
        MOV       AL,#0                 ; [CPU_] |4591| 
        MOV       AH,#16672             ; [CPU_] |4591| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4591| 
        MOVL      ACC,XAR1              ; [CPU_] |4591| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4591| 
        ; call occurs [#FS$$CMP] ; [] |4591| 
        CMPB      AL,#0                 ; [CPU_] |4591| 
        B         $C$L322,GT            ; [CPU_] |4591| 
        ; branchcc occurs ; [] |4591| 
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4596| 
        MOV       AH,#16672             ; [CPU_] |4596| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4596| 
        MOVL      ACC,XAR1              ; [CPU_] |4596| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4596| 
        ; call occurs [#FS$$ADD] ; [] |4596| 
        MOVL      XAR6,ACC              ; [CPU_] |4596| 
        MOV       AL,#65024             ; [CPU_] |4596| 
        MOV       AH,#18175             ; [CPU_] |4596| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4596| 
        MOVL      ACC,XAR6              ; [CPU_] |4596| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4596| 
        ; call occurs [#FS$$MPY] ; [] |4596| 
        MOVL      XAR6,ACC              ; [CPU_] |4596| 
        MOV       AL,#0                 ; [CPU_] |4596| 
        MOV       AH,#16672             ; [CPU_] |4596| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4596| 
        MOVL      ACC,XAR6              ; [CPU_] |4596| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4596| 
        ; call occurs [#FS$$DIV] ; [] |4596| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4596| 
        ; call occurs [#FS$$TOLL] ; [] |4596| 
	.dwpsn	file "../Source/prod.c",line 4587,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4587| 
	.dwpsn	file "../Source/prod.c",line 4597,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4597| 
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4587,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#8          ; [CPU_] |4587| 
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4597,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4597| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4597| 
        CMP64     ACC:P                 ; [CPU_] |4597| 
        B         $C$L148,LEQ           ; [CPU_] |4597| 
        ; branchcc occurs ; [] |4597| 
	.dwpsn	file "../Source/prod.c",line 4599,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4599| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4599| 
        MOV       *-SP[2],#0            ; [CPU_] |4599| 
        MOV       *-SP[1],#0            ; [CPU_] |4599| 
        MOVL      P,*-SP[32]            ; [CPU_] |4599| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4599| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$662, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4599| 
        ; call occurs [#LL$$CMP] ; [] |4599| 
        CMPB      AL,#0                 ; [CPU_] |4599| 
        B         $C$L147,GEQ           ; [CPU_] |4599| 
        ; branchcc occurs ; [] |4599| 
	.dwpsn	file "../Source/prod.c",line 4602,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4602| 
        MOVL      XAR0,#93              ; [CPU_] |4602| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4602| 
        MOVU      ACC,AR4               ; [CPU_] |4602| 
        ADD       ACC,*+FP[AR0]         ; [CPU_] |4602| 
        MOVL      XAR1,ACC              ; [CPU_] |4602| 
        MOV       AL,*-SP[32]           ; [CPU_] |4602| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4602| 
        B         $C$L149,UNC           ; [CPU_] |4602| 
        ; branch occurs ; [] |4602| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4600,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4600| 
        MOVL      XAR0,#93              ; [CPU_] |4600| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4600| 
        MOVU      ACC,AR4               ; [CPU_] |4600| 
        ADD       ACC,*+FP[AR0]         ; [CPU_] |4600| 
        MOVL      XAR1,ACC              ; [CPU_] |4600| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4600| 
	.dwpsn	file "../Source/prod.c",line 4601,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4601| 
        ; branch occurs ; [] |4601| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4598,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4598| 
        MOVL      XAR0,#93              ; [CPU_] |4598| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4598| 
        MOVU      ACC,AR4               ; [CPU_] |4598| 
        ADD       ACC,*+FP[AR0]         ; [CPU_] |4598| 
        MOVL      XAR1,ACC              ; [CPU_] |4598| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4598| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4605,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4605| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4605| 
        ; call occurs [#_dac_setmode] ; [] |4605| 
	.dwpsn	file "../Source/prod.c",line 4607,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4607| 
        MOV       AH,*-SP[63]           ; [CPU_] |4607| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4607| 
        ; call occurs [#_mcbsp_xmit] ; [] |4607| 
	.dwpsn	file "../Source/prod.c",line 4608,column 5,is_stmt,isa 0
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("_latch_dac")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4608| 
        ; call occurs [#_latch_dac] ; [] |4608| 
	.dwpsn	file "../Source/prod.c",line 4610,column 5,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4610| 
        MOVB      AL,#1                 ; [CPU_] |4610| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4610| 
        MOVL      XAR0,#96              ; [CPU_] |4610| 
        LSL       AL,T                  ; [CPU_] |4610| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |4610| 
        MOVL      XAR0,#96              ; [CPU_] |4610| 
        OR        AH,AL                 ; [CPU_] |4610| 
        MOV       *+FP[AR0],AH          ; [CPU_] |4610| 
	.dwpsn	file "../Source/prod.c",line 4613,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |4613| 
        ; branch occurs ; [] |4613| 
$C$L150:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4519| 
        B         $C$L322,LO            ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4519| 
        MOVL      XAR0,#66              ; [CPU_] |4519| 
        MOVL      ACC,XAR5              ; [CPU_] |4519| 
        ADDB      ACC,#2                ; [CPU_] |4519| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4519| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4519| 
        MOVZ      AR7,AR6               ; [CPU_] |4519| 
        MOVL      XAR0,#94              ; [CPU_] |4519| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4519| 
        MOVU      ACC,AL                ; [CPU_] |4519| 
        CMPL      ACC,XAR7              ; [CPU_] |4519| 
        B         $C$L322,NEQ           ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
        MOVL      XAR0,#96              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4519| 
        CMPB      AL,#7                 ; [CPU_] |4519| 
        B         $C$L322,NEQ           ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
	.dwpsn	file "../Source/prod.c",line 4524,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4524,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AR6         ; [CPU_] |4524| 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4525| 
        MOVL      XAR0,#66              ; [CPU_] |4525| 
        ADDB      ACC,#2                ; [CPU_] |4525| 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4525| 
        MOVL      XAR0,#94              ; [CPU_] |4525| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4525| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4525| 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] |4525| 
        MOV       *+FP[AR0],#3          ; [CPU_] |4525| 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        MOVB      XAR6,#2               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4528,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4528| 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4530,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4530| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4530| 
	.dwpsn	file "../Source/prod.c",line 4531,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4531| 
        MOV       *XAR7++,AL            ; [CPU_] |4531| 
	.dwpsn	file "../Source/prod.c",line 4532,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4532| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4532| 
        MOV       *XAR0++,AL            ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4533,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4533| 
        MOV       *XAR7++,AL            ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4529,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR4--         ; [CPU_] |4529| 
        ; branchcc occurs ; [] |4529| 
	.dwpsn	file "../Source/prod.c",line 4527,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4527| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4527| 
        ADDB      XAR1,#2               ; [CPU_] |4527| 
	.dwpsn	file "../Source/prod.c",line 4533,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4533| 
        ADDB      AL,#4                 ; [CPU_] |4533| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4527,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR6--         ; [CPU_] |4527| 
        ; branchcc occurs ; [] |4527| 
	.dwpsn	file "../Source/prod.c",line 4540,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4540| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4540| 
        ; call occurs [#U$$TOFS] ; [] |4540| 
        MOVL      XAR1,ACC              ; [CPU_] |4540| 
        MOV       AL,*-SP[35]           ; [CPU_] |4540| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4540| 
        ; call occurs [#U$$TOFS] ; [] |4540| 
        MOVL      XAR0,#86              ; [CPU_] |4540| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4540| 
        MOVL      XAR0,#94              ; [CPU_] |4540| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4540| 
        MOVL      XAR0,#40              ; [CPU_] |4540| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4540| 
        MOVB      AL,#12                ; [CPU_] |4540| 
        MPYU      ACC,T,AL              ; [CPU_] |4540| 
        MOVL      XAR0,#88              ; [CPU_] |4540| 
        ADDL      ACC,XAR6              ; [CPU_] |4540| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4540| 
        MOVL      XAR0,#86              ; [CPU_] |4540| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4540| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4540| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4540| 
        ; call occurs [#FS$$SUB] ; [] |4540| 
        MOVL      XAR0,#42              ; [CPU_] |4540| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4540| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4540| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4540| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4540| 
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4540| 
        ; call occurs [#FS$$SUB] ; [] |4540| 
        MOVL      XAR0,#42              ; [CPU_] |4540| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4540| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4540| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4540| 
        ; call occurs [#FS$$DIV] ; [] |4540| 
        MOVL      XAR0,#88              ; [CPU_] |4540| 
        MOVL      XAR6,ACC              ; [CPU_] |4540| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4540| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4540| 
        MOVL      XAR4,ACC              ; [CPU_] |4540| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4540| 
	.dwpsn	file "../Source/prod.c",line 4543,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4543| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4543| 
        ; call occurs [#U$$TOFS] ; [] |4543| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4543| 
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4543| 
        ; call occurs [#FS$$SUB] ; [] |4543| 
        MOVL      XAR1,ACC              ; [CPU_] |4543| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4543| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4543| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4543| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4543| 
        ; call occurs [#FS$$SUB] ; [] |4543| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4543| 
        MOVL      ACC,XAR1              ; [CPU_] |4543| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4543| 
        ; call occurs [#FS$$DIV] ; [] |4543| 
        MOVL      XAR0,#88              ; [CPU_] |4543| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4543| 
        MOVL      XAR6,ACC              ; [CPU_] |4543| 
        MOVL      ACC,XAR1              ; [CPU_] |4543| 
        ADD       ACC,#49 << 6          ; [CPU_] |4543| 
        MOVL      XAR4,ACC              ; [CPU_] |4543| 
	.dwpsn	file "../Source/prod.c",line 4546,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4543,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4543| 
	.dwpsn	file "../Source/prod.c",line 4546,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4546| 
        MOVL      XAR4,ACC              ; [CPU_] |4546| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4546| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4546| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4546| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4546| 
        ; call occurs [#FS$$MPY] ; [] |4546| 
        MOVL      XAR0,#86              ; [CPU_] |4546| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4546| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4546| 
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4546| 
        ; call occurs [#FS$$SUB] ; [] |4546| 
        MOVL      XAR6,ACC              ; [CPU_] |4546| 
        MOVL      ACC,XAR1              ; [CPU_] |4546| 
        ADD       ACC,#785 << 2         ; [CPU_] |4546| 
        MOVL      XAR4,ACC              ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4549,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4549| 
	.dwpsn	file "../Source/prod.c",line 4546,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4549,column 5,is_stmt,isa 0
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4549| 
        ; call occurs [#_dac_setmode] ; [] |4549| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4555,column 5,is_stmt,isa 0
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4555| 
        ; call occurs [#_ad7738_setcal] ; [] |4555| 
        MOVL      XAR0,#78              ; [CPU_] |4555| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4555| 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4556| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |4556| 
        MOVL      XAR1,ACC              ; [CPU_] |4556| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4556| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4556| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4556| 
	.dwpsn	file "../Source/prod.c",line 4557,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4557| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4557| 
        ; call occurs [#_ad7738_resetvall] ; [] |4557| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4550,column 5,is_stmt,isa 0
        MOVL      XAR0,#96              ; [CPU_] |4550| 
        MOV       *+FP[AR0],#0          ; [CPU_] |4550| 
	.dwpsn	file "../Source/prod.c",line 4561,column 5,is_stmt,isa 0
        B         $C$L303,UNC           ; [CPU_] |4561| 
        ; branch occurs ; [] |4561| 
$C$L153:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4463,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4463| 
        B         $C$L322,LO            ; [CPU_] |4463| 
        ; branchcc occurs ; [] |4463| 
        MOVL      XAR0,#88              ; [CPU_] |4463| 
        MOVL      ACC,XAR4              ; [CPU_] |4463| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4463| 
        MOVL      XAR0,#66              ; [CPU_] |4463| 
        ADDB      ACC,#2                ; [CPU_] |4463| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4463| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4463| 
        MOVL      XAR0,#94              ; [CPU_] |4463| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4463| 
        MOVU      ACC,AL                ; [CPU_] |4463| 
        CMPL      ACC,XAR6              ; [CPU_] |4463| 
        B         $C$L322,NEQ           ; [CPU_] |4463| 
        ; branchcc occurs ; [] |4463| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4463| 
        B         $C$L322,LT            ; [CPU_] |4463| 
        ; branchcc occurs ; [] |4463| 
        CMPB      AL,#2                 ; [CPU_] |4463| 
        B         $C$L322,GEQ           ; [CPU_] |4463| 
        ; branchcc occurs ; [] |4463| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4470,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4470| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |4469| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4470,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4470| 
        MOVZ      AR7,AR6               ; [CPU_] |4470| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4472,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4472| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4472| 
	.dwpsn	file "../Source/prod.c",line 4471,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4471| 
        ADDB      XAR4,#2               ; [CPU_] |4471| 
	.dwpsn	file "../Source/prod.c",line 4472,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4472| 
	.dwpsn	file "../Source/prod.c",line 4471,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4471| 
        ; branchcc occurs ; [] |4471| 
	.dwpsn	file "../Source/prod.c",line 4475,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4475| 
        SUBB      XAR4,#24              ; [CPU_U] |4475| 
        MOVZ      AR1,AR4               ; [CPU_] |4475| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4475| 
        ADDL      XAR1,ACC              ; [CPU_] |4475| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4475| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4475| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4475| 
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4475| 
        ; call occurs [#FS$$CMP] ; [] |4475| 
        CMPB      AL,#0                 ; [CPU_] |4475| 
        B         $C$L322,NEQ           ; [CPU_] |4475| 
        ; branchcc occurs ; [] |4475| 
	.dwpsn	file "../Source/prod.c",line 4479,column 5,is_stmt,isa 0
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4479| 
        ; call occurs [#_lcd_clear] ; [] |4479| 
	.dwpsn	file "../Source/prod.c",line 4480,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4480| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4480| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4480| 
        ; call occurs [#_lcd_puts] ; [] |4480| 
	.dwpsn	file "../Source/prod.c",line 4481,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4481| 
        MOVL      XAR0,#94              ; [CPU_] |4481| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4481| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4481| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |4481| 
        MOVL      XAR0,#44              ; [CPU_] |4481| 
        MOV       *-SP[3],AL            ; [CPU_] |4481| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4481| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_sprintf")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4481| 
        ; call occurs [#_sprintf] ; [] |4481| 
        MOVL      XAR0,#44              ; [CPU_] |4481| 
	.dwpsn	file "../Source/prod.c",line 4482,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4482| 
	.dwpsn	file "../Source/prod.c",line 4481,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4481| 
	.dwpsn	file "../Source/prod.c",line 4482,column 5,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4482| 
        ; call occurs [#_lcd_puts] ; [] |4482| 
	.dwpsn	file "../Source/prod.c",line 4483,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4483| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4483| 
        MOVL      XAR0,#44              ; [CPU_] |4483| 
        ADD       AL,*-SP[63]           ; [CPU_] |4483| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4483| 
        MOV       *-SP[3],AL            ; [CPU_] |4483| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4483| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4483| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4483| 
        MOVL      XAR4,XAR1             ; [CPU_] |4483| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("_sprintf")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4483| 
        ; call occurs [#_sprintf] ; [] |4483| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4483,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4483| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4484| 
        ; call occurs [#_lcd_puts] ; [] |4484| 
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4485| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4485| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4485| 
        ; call occurs [#_lcd_puts] ; [] |4485| 
	.dwpsn	file "../Source/prod.c",line 4487,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4487| 
        SUBB      XAR4,#32              ; [CPU_U] |4487| 
        MOVZ      AR1,AR4               ; [CPU_] |4487| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4487,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4487| 
        ADDL      XAR1,ACC              ; [CPU_] |4487| 
	.dwpsn	file "../Source/prod.c",line 4488,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4488| 
	.dwpsn	file "../Source/prod.c",line 4487,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4487| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4487| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4487| 
	.dwpsn	file "../Source/prod.c",line 4489,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4489| 
	.dwpsn	file "../Source/prod.c",line 4488,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4488| 
	.dwpsn	file "../Source/prod.c",line 4489,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4489| 
        MOVB      ACC,#0                ; [CPU_] |4489| 
        SUBB      ACC,#1                ; [CPU_] |4489| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4489| 
        B         $C$L157,EQ            ; [CPU_] |4489| 
        ; branchcc occurs ; [] |4489| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4490,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4490| 
        ; branch occurs ; [] |4490| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4491,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4491| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("_delay_us")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4491| 
        ; call occurs [#_delay_us] ; [] |4491| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4490,column 13,is_stmt,isa 0
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4490| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4490| 
        CMPB      AL,#0                 ; [CPU_] |4490| 
        B         $C$L155,EQ            ; [CPU_] |4490| 
        ; branchcc occurs ; [] |4490| 
	.dwpsn	file "../Source/prod.c",line 4493,column 6,is_stmt,isa 0
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4493| 
        ; call occurs [#_ad7738_getraw] ; [] |4493| 
	.dwpsn	file "../Source/prod.c",line 4494,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4494| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4494| 
        ADDL      XAR4,ACC              ; [CPU_] |4494| 
        MOVL      XAR0,#22              ; [CPU_] |4494| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4494| 
        MOVL      XAR0,#22              ; [CPU_] |4494| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4494| 
        ASR64     ACC:P,16              ; [CPU_] |4494| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4494| 
        MOVL      XAR0,#22              ; [CPU_] |4494| 
        ASR64     ACC:P,16              ; [CPU_] |4494| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4494| 
        MOVL      XAR0,#22              ; [CPU_] |4494| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4494| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4494| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4494| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4494| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4494| 
	.dwpsn	file "../Source/prod.c",line 4489,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4489| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4489| 
        MOVB      ACC,#0                ; [CPU_] |4489| 
        SUBB      ACC,#1                ; [CPU_] |4489| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4489| 
        B         $C$L156,NEQ           ; [CPU_] |4489| 
        ; branchcc occurs ; [] |4489| 
$C$L157:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4496,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4496| 
        B         $C$L158,NEQ           ; [CPU_] |4496| 
        ; branchcc occurs ; [] |4496| 
	.dwpsn	file "../Source/prod.c",line 4497,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4497| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4497| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4497| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4497| 
        ; call occurs [#FS$$SUB] ; [] |4497| 
        MOVL      XAR6,ACC              ; [CPU_] |4497| 
        MOV       AL,#16384             ; [CPU_] |4497| 
        MOV       AH,#17948             ; [CPU_] |4497| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4497| 
        MOVL      ACC,XAR6              ; [CPU_] |4497| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4497| 
        ; call occurs [#FS$$MPY] ; [] |4497| 
        MOVL      XAR1,ACC              ; [CPU_] |4497| 
        MOVL      P,*-SP[28]            ; [CPU_] |4497| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4497| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4497| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4497| 
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4497| 
        ; call occurs [#LL$$TOFS] ; [] |4497| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4497| 
        MOVL      ACC,XAR1              ; [CPU_] |4497| 
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4497| 
        ; call occurs [#FS$$DIV] ; [] |4497| 
        MOVL      XAR0,#94              ; [CPU_] |4497| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4497| 
        MOVL      XAR0,#40              ; [CPU_] |4497| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4497| 
        MOVL      XAR6,ACC              ; [CPU_] |4497| 
        MOVB      AL,#10                ; [CPU_] |4497| 
        MPYU      ACC,T,AL              ; [CPU_] |4497| 
        ADDL      ACC,XAR7              ; [CPU_] |4497| 
        MOVL      XAR4,ACC              ; [CPU_] |4497| 
        MOVB      XAR0,#44              ; [CPU_] |4497| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4497| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4502,column 6,is_stmt,isa 0
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4502| 
        ; call occurs [#_ad7738_setcal] ; [] |4502| 
        MOVL      XAR0,#78              ; [CPU_] |4502| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4502| 
	.dwpsn	file "../Source/prod.c",line 4503,column 6,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4503| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |4503| 
        MOVL      XAR1,ACC              ; [CPU_] |4503| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4503| 
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4503| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4503| 
	.dwpsn	file "../Source/prod.c",line 4504,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4504| 
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4504| 
        ; call occurs [#_ad7738_resetvall] ; [] |4504| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4500,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |4500| 
        MOV       *+FP[AR0],#1          ; [CPU_] |4500| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4507,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4507| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4508,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4508| 
	.dwpsn	file "../Source/prod.c",line 4507,column 17,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4507| 
        ADDB      AH,#1                 ; [CPU_] |4507| 
	.dwpsn	file "../Source/prod.c",line 4508,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4508| 
        ADDB      XAR7,#1               ; [CPU_] |4508| 
	.dwpsn	file "../Source/prod.c",line 4507,column 17,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |4507| 
        CMP       AL,AH                 ; [CPU_] |4507| 
        B         $C$L159,HI            ; [CPU_] |4507| 
        ; branchcc occurs ; [] |4507| 
	.dwpsn	file "../Source/prod.c",line 4510,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4510| 
        SPM       #0                    ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4510| 
	.dwpsn	file "../Source/prod.c",line 4513,column 5,is_stmt,isa 0
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4513| 
        ; call occurs [#_lcd_clear] ; [] |4513| 
	.dwpsn	file "../Source/prod.c",line 4514,column 5,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_update_units")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4514| 
        ; call occurs [#_update_units] ; [] |4514| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |4515| 
        ; branch occurs ; [] |4515| 
$C$L160:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4438,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4438| 
        B         $C$L322,LO            ; [CPU_] |4438| 
        ; branchcc occurs ; [] |4438| 
        MOVL      ACC,XAR4              ; [CPU_] |4438| 
        MOVL      XAR0,#66              ; [CPU_] |4438| 
        ADDB      ACC,#2                ; [CPU_] |4438| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4438| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4438| 
        B         $C$L322,LT            ; [CPU_] |4438| 
        ; branchcc occurs ; [] |4438| 
        MOVL      XAR5,XAR4             ; [CPU_] |4438| 
        MOVL      XAR0,#66              ; [CPU_] |4438| 
        CMPB      AL,#4                 ; [CPU_] |4438| 
        ADDB      XAR5,#2               ; [CPU_] |4438| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4438| 
        B         $C$L322,GEQ           ; [CPU_] |4438| 
        ; branchcc occurs ; [] |4438| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4438| 
        CMPB      AH,#2                 ; [CPU_] |4438| 
        B         $C$L322,NEQ           ; [CPU_] |4438| 
        ; branchcc occurs ; [] |4438| 
	.dwpsn	file "../Source/prod.c",line 4444,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4444| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4444| 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4445| 
        MOVL      XAR0,#66              ; [CPU_] |4445| 
	.dwpsn	file "../Source/prod.c",line 4448,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4448| 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4445| 
	.dwpsn	file "../Source/prod.c",line 4446,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4446| 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4445| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4445| 
	.dwpsn	file "../Source/prod.c",line 4446,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4446| 
        MOV       *+FP[AR0],#4          ; [CPU_] |4446| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4448,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4448| 
        ; branch occurs ; [] |4448| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4449,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4449| 
        SUBB      XAR4,#24              ; [CPU_U] |4449| 
        MOVZ      AR4,AR4               ; [CPU_] |4449| 
        MOV       ACC,PL << 1           ; [CPU_] |4449| 
        MOVL      XAR0,#44              ; [CPU_] |4449| 
        ADDL      XAR4,ACC              ; [CPU_] |4449| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4449| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4451,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4451| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4451| 
	.dwpsn	file "../Source/prod.c",line 4452,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4452| 
        MOV       *XAR7++,AL            ; [CPU_] |4452| 
	.dwpsn	file "../Source/prod.c",line 4453,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4453| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4453| 
        MOV       *XAR4++,AL            ; [CPU_] |4453| 
	.dwpsn	file "../Source/prod.c",line 4454,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4454| 
        MOV       *XAR7++,AL            ; [CPU_] |4454| 
	.dwpsn	file "../Source/prod.c",line 4450,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4450| 
        ; branchcc occurs ; [] |4450| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4448,column 33,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4448| 
        ADDB      AL,#1                 ; [CPU_] |4448| 
        MOV       PL,AL                 ; [CPU_] |4448| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4448| 
	.dwpsn	file "../Source/prod.c",line 4454,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4454| 
        ADDB      AL,#4                 ; [CPU_] |4454| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4454| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4448,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4448| 
        MOV       AL,PL                 ; [CPU_] |4448| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4448| 
        B         $C$L161,LT            ; [CPU_] |4448| 
        ; branchcc occurs ; [] |4448| 
        B         $C$L747,UNC           ; [CPU_] |4448| 
        ; branch occurs ; [] |4448| 
$C$L164:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5393,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5393| 
        B         $C$L322,LO            ; [CPU_] |5393| 
        ; branchcc occurs ; [] |5393| 
	.dwpsn	file "../Source/prod.c",line 5398,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5398| 
        MOVL      XAR0,#66              ; [CPU_] |5398| 
        MOVL      ACC,XAR7              ; [CPU_] |5398| 
        ADDB      ACC,#2                ; [CPU_] |5398| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5398| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GT            ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOVB      XAR0,#13              ; [CPU_] |5398| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GT            ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOVB      XAR0,#24              ; [CPU_] |5398| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GT            ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOVB      XAR0,#35              ; [CPU_] |5398| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GT            ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GEQ           ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOVB      XAR0,#14              ; [CPU_] |5398| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GEQ           ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOVB      XAR0,#25              ; [CPU_] |5398| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GEQ           ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOVB      XAR0,#36              ; [CPU_] |5398| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5398| 
        CMPB      AL,#4                 ; [CPU_] |5398| 
        B         $C$L322,GEQ           ; [CPU_] |5398| 
        ; branchcc occurs ; [] |5398| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5406,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5406| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5406| 
        MOVL      XAR0,ACC              ; [CPU_] |5406| 
        MOV       AL,*XAR7              ; [CPU_] |5406| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5406| 
	.dwpsn	file "../Source/prod.c",line 5407,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5407| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5407| 
        MOVL      XAR0,ACC              ; [CPU_] |5407| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5407| 
        MOV       *XAR4++,AL            ; [CPU_] |5407| 
	.dwpsn	file "../Source/prod.c",line 5408,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5408| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5408| 
        MOVL      XAR0,ACC              ; [CPU_] |5408| 
	.dwpsn	file "../Source/prod.c",line 5406,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5406| 
	.dwpsn	file "../Source/prod.c",line 5408,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5408| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5408| 
	.dwpsn	file "../Source/prod.c",line 5409,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5409| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5409| 
        MOVL      XAR0,ACC              ; [CPU_] |5409| 
	.dwpsn	file "../Source/prod.c",line 5408,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5408| 
	.dwpsn	file "../Source/prod.c",line 5409,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |5409| 
        MOV       *XAR4++,AL            ; [CPU_] |5409| 
	.dwpsn	file "../Source/prod.c",line 5410,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5410| 
        ANDB      AL,#0xfe              ; [CPU_] |5410| 
        MOV       T,AL                  ; [CPU_] |5410| 
        MOVL      ACC,XAR5              ; [CPU_] |5410| 
        ADD       ACC,#199 << 4         ; [CPU_] |5410| 
        MOVL      XAR0,ACC              ; [CPU_] |5410| 
	.dwpsn	file "../Source/prod.c",line 5411,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5411| 
        ADD       ACC,#199 << 4         ; [CPU_] |5411| 
	.dwpsn	file "../Source/prod.c",line 5410,column 6,is_stmt,isa 0
        MOV       *+XAR0[0],T           ; [CPU_] |5410| 
	.dwpsn	file "../Source/prod.c",line 5411,column 6,is_stmt,isa 0
        MOVL      XAR0,ACC              ; [CPU_] |5411| 
        MOVL      XAR1,P                ; [CPU_] |5411| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5411| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5411| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5415,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5415| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5415| 
	.dwpsn	file "../Source/prod.c",line 5416,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5416| 
        MOV       *XAR4++,AL            ; [CPU_] |5416| 
	.dwpsn	file "../Source/prod.c",line 5417,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5417| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5417| 
        MOV       *XAR1++,AL            ; [CPU_] |5417| 
	.dwpsn	file "../Source/prod.c",line 5418,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5418| 
        MOV       *XAR4++,AL            ; [CPU_] |5418| 
	.dwpsn	file "../Source/prod.c",line 5414,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR0--         ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
	.dwpsn	file "../Source/prod.c",line 5421,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5421| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5423,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5423| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5423| 
	.dwpsn	file "../Source/prod.c",line 5424,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5424| 
        MOV       *XAR4++,AL            ; [CPU_] |5424| 
	.dwpsn	file "../Source/prod.c",line 5425,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5425| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5425| 
        MOV       *XAR1++,AL            ; [CPU_] |5425| 
	.dwpsn	file "../Source/prod.c",line 5426,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5426| 
        MOV       *XAR4++,AL            ; [CPU_] |5426| 
	.dwpsn	file "../Source/prod.c",line 5422,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR0--         ; [CPU_] |5422| 
        ; branchcc occurs ; [] |5422| 
	.dwpsn	file "../Source/prod.c",line 5405,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5405| 
        MOVL      XAR0,#91              ; [CPU_] |5405| 
        ADDB      ACC,#8                ; [CPU_] |5405| 
        MOVL      P,ACC                 ; [CPU_] |5405| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5405| 
	.dwpsn	file "../Source/prod.c",line 5408,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5408| 
        ADDB      AL,#11                ; [CPU_] |5408| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5408| 
        MOVZ      AR0,AR3               ; [CPU_] |5408| 
	.dwpsn	file "../Source/prod.c",line 5405,column 17,is_stmt,isa 0
        ADDB      XAR6,#8               ; [CPU_] |5405| 
        ADDB      XAR5,#8               ; [CPU_] |5405| 
        SUBB      XAR0,#1               ; [CPU_U] |5405| 
        MOVZ      AR3,AR0               ; [CPU_] |5405| 
        CMP       AR0,#-1               ; [CPU_] |5405| 
        B         $C$L165,NEQ           ; [CPU_] |5405| 
        ; branchcc occurs ; [] |5405| 
        B         $C$L176,UNC           ; [CPU_] |5405| 
        ; branch occurs ; [] |5405| 
$C$L168:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5330,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5330| 
        B         $C$L322,LO            ; [CPU_] |5330| 
        ; branchcc occurs ; [] |5330| 
	.dwpsn	file "../Source/prod.c",line 5335,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5335| 
        MOVL      XAR0,#66              ; [CPU_] |5335| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5335| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L169,LEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        CMPB      AL,#7                 ; [CPU_] |5335| 
        B         $C$L322,NEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5335| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L170,LEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        CMPB      AL,#7                 ; [CPU_] |5335| 
        B         $C$L322,NEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5335| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L171,LEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        CMPB      AL,#7                 ; [CPU_] |5335| 
        B         $C$L322,NEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5335| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L172,LEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        CMPB      AL,#7                 ; [CPU_] |5335| 
        B         $C$L322,NEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5335| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L322,GEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        MOVB      XAR0,#13              ; [CPU_] |5335| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L322,GEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        MOVB      XAR0,#23              ; [CPU_] |5335| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L322,GEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        MOVB      XAR0,#33              ; [CPU_] |5335| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5335| 
        CMPB      AL,#4                 ; [CPU_] |5335| 
        B         $C$L322,GEQ           ; [CPU_] |5335| 
        ; branchcc occurs ; [] |5335| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5346| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5346| 
        MOVL      XAR0,ACC              ; [CPU_] |5346| 
        MOV       AL,*XAR7              ; [CPU_] |5346| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5347,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5347| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5347| 
        MOVL      XAR0,ACC              ; [CPU_] |5347| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5347| 
        MOV       *XAR4++,AL            ; [CPU_] |5347| 
	.dwpsn	file "../Source/prod.c",line 5348,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5348| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5348| 
        MOVL      XAR0,ACC              ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5348,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5348| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5349| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5349| 
        MOVL      XAR0,ACC              ; [CPU_] |5349| 
	.dwpsn	file "../Source/prod.c",line 5348,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 6,is_stmt,isa 0
        MOVL      XAR1,P                ; [CPU_] |5349| 
        MOV       AL,*+XAR0[0]          ; [CPU_] |5349| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5349| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5360,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5360| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5361| 
        MOV       *XAR4++,AL            ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5362,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5362| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5362| 
        MOV       *XAR1++,AL            ; [CPU_] |5362| 
	.dwpsn	file "../Source/prod.c",line 5363,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5363| 
        MOV       *XAR4++,AL            ; [CPU_] |5363| 
	.dwpsn	file "../Source/prod.c",line 5359,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR0--         ; [CPU_] |5359| 
        ; branchcc occurs ; [] |5359| 
	.dwpsn	file "../Source/prod.c",line 5369,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5369| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5376,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5376| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5376| 
	.dwpsn	file "../Source/prod.c",line 5377,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5377| 
        MOV       *XAR4++,AL            ; [CPU_] |5377| 
	.dwpsn	file "../Source/prod.c",line 5378,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5378| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5378| 
        MOV       *XAR1++,AL            ; [CPU_] |5378| 
	.dwpsn	file "../Source/prod.c",line 5379,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5379| 
        MOV       *XAR4++,AL            ; [CPU_] |5379| 
	.dwpsn	file "../Source/prod.c",line 5375,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR0--         ; [CPU_] |5375| 
        ; branchcc occurs ; [] |5375| 
	.dwpsn	file "../Source/prod.c",line 5345,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5345| 
        MOVL      XAR0,#91              ; [CPU_] |5345| 
        ADDB      ACC,#12               ; [CPU_] |5345| 
        MOVL      P,ACC                 ; [CPU_] |5345| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5348,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5348| 
        ADDB      AL,#10                ; [CPU_] |5348| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5348| 
        MOVZ      AR0,AR3               ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5345,column 17,is_stmt,isa 0
        ADDB      XAR6,#12              ; [CPU_] |5345| 
        ADDB      XAR5,#12              ; [CPU_] |5345| 
        SUBB      XAR0,#1               ; [CPU_U] |5345| 
        MOVZ      AR3,AR0               ; [CPU_] |5345| 
        CMP       AR0,#-1               ; [CPU_] |5345| 
        B         $C$L173,NEQ           ; [CPU_] |5345| 
        ; branchcc occurs ; [] |5345| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5386,column 5,is_stmt,isa 0
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5386| 
        ; call occurs [#_ad7738_setcal] ; [] |5386| 
	.dwpsn	file "../Source/prod.c",line 5389,column 5,is_stmt,isa 0
        B         $C$L189,UNC           ; [CPU_] |5389| 
        ; branch occurs ; [] |5389| 
$C$L177:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5298,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5298| 
        B         $C$L322,LO            ; [CPU_] |5298| 
        ; branchcc occurs ; [] |5298| 
	.dwpsn	file "../Source/prod.c",line 5303,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5303| 
        MOVL      XAR0,#66              ; [CPU_] |5303| 
        MOVL      ACC,XAR7              ; [CPU_] |5303| 
        ADDB      ACC,#2                ; [CPU_] |5303| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5303| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GT            ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GT            ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVB      XAR0,#8               ; [CPU_] |5303| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GT            ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVB      XAR0,#11              ; [CPU_] |5303| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GT            ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5303| 
        CMPB      AL,#4                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5303| 
        CMPB      AL,#4                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVB      XAR0,#9               ; [CPU_] |5303| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5303| 
        CMPB      AL,#4                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVB      XAR0,#12              ; [CPU_] |5303| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5303| 
        CMPB      AL,#4                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVL      ACC,XAR7              ; [CPU_] |5303| 
        MOVL      XAR0,#64              ; [CPU_] |5303| 
        ADDB      ACC,#4                ; [CPU_] |5303| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5303| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVB      XAR0,#10              ; [CPU_] |5303| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVB      XAR0,#13              ; [CPU_] |5303| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5303| 
        CMPB      AL,#6                 ; [CPU_] |5303| 
        B         $C$L322,GEQ           ; [CPU_] |5303| 
        ; branchcc occurs ; [] |5303| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5314,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5314| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5315,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5315| 
	.dwpsn	file "../Source/prod.c",line 5314,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5315,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5315| 
	.dwpsn	file "../Source/prod.c",line 5316,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5316| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5316| 
        ADDB      XAR7,#1               ; [CPU_] |5316| 
	.dwpsn	file "../Source/prod.c",line 5317,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5317| 
        MOV       *XAR4++,AL            ; [CPU_] |5317| 
	.dwpsn	file "../Source/prod.c",line 5318,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5318| 
        ADDB      XAR7,#1               ; [CPU_] |5318| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5318| 
	.dwpsn	file "../Source/prod.c",line 5319,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5319| 
	.dwpsn	file "../Source/prod.c",line 5313,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5319,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5319| 
	.dwpsn	file "../Source/prod.c",line 5313,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5313| 
        ; branchcc occurs ; [] |5313| 
	.dwpsn	file "../Source/prod.c",line 5323,column 5,is_stmt,isa 0
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5323| 
        ; call occurs [#_lcd_clear] ; [] |5323| 
	.dwpsn	file "../Source/prod.c",line 5324,column 5,is_stmt,isa 0
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_update_units")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5324| 
        ; call occurs [#_update_units] ; [] |5324| 
	.dwpsn	file "../Source/prod.c",line 5321,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5321| 
        MOV       *+FP[AR0],#1          ; [CPU_] |5321| 
        MOVL      XAR0,#91              ; [CPU_] |5321| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5321| 
	.dwpsn	file "../Source/prod.c",line 5319,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |5319| 
	.dwpsn	file "../Source/prod.c",line 5326,column 5,is_stmt,isa 0
        B         $C$L306,UNC           ; [CPU_] |5326| 
        ; branch occurs ; [] |5326| 
$C$L179:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5277,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5277| 
        B         $C$L322,LO            ; [CPU_] |5277| 
        ; branchcc occurs ; [] |5277| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5282,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5282| 
        MOVB      XAR0,#36              ; [CPU_] |5282| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5282| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5283| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5283| 
        B         $C$L181,NEQ           ; [CPU_] |5283| 
        ; branchcc occurs ; [] |5283| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5285,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5285| 
	.dwpsn	file "../Source/prod.c",line 5286,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5286| 
	.dwpsn	file "../Source/prod.c",line 5284,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5284| 
        ; branchcc occurs ; [] |5284| 
	.dwpsn	file "../Source/prod.c",line 5288,column 6,is_stmt,isa 0
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_update_units")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5288| 
        ; call occurs [#_update_units] ; [] |5288| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5292,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5292| 
	.dwpsn	file "../Source/prod.c",line 5294,column 5,is_stmt,isa 0
        B         $C$L235,UNC           ; [CPU_] |5294| 
        ; branch occurs ; [] |5294| 
$C$L182:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5236,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5236| 
        B         $C$L322,LO            ; [CPU_] |5236| 
        ; branchcc occurs ; [] |5236| 
	.dwpsn	file "../Source/prod.c",line 5242,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5242| 
        ADDB      XAR4,#2               ; [CPU_] |5242| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5242| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5242| 
        MOVZ      AR3,AL                ; [CPU_] |5242| 
	.dwpsn	file "../Source/prod.c",line 5243,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5243| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5243| 
        CMP       AR3,#4096             ; [CPU_] |5243| 
        B         $C$L322,HI            ; [CPU_] |5243| 
        ; branchcc occurs ; [] |5243| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5249| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5249| 
        MOVZ      AR7,AR6               ; [CPU_] |5249| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5251,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5251| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5250,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5250| 
        ADDB      XAR4,#2               ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5251,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5250,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5250| 
        ; branchcc occurs ; [] |5250| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5256,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5256| 
        MOVB      XAR1,#38              ; [CPU_] |5256| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5256| 
	.dwpsn	file "../Source/prod.c",line 5257,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5257| 
        MOVB      XAR1,#40              ; [CPU_] |5257| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5257| 
	.dwpsn	file "../Source/prod.c",line 5258,column 5,is_stmt,isa 0
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_maf_rst")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5258| 
        ; call occurs [#_maf_rst] ; [] |5258| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5263,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5263| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5263| 
	.dwpsn	file "../Source/prod.c",line 5267,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5263,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5263| 
	.dwpsn	file "../Source/prod.c",line 5264,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5264| 
        LSR       AL,8                  ; [CPU_] |5264| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5267,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5267| 
        MOVB      XAR1,#40              ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5268,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5268| 
        MOVL      XAR0,#50              ; [CPU_] |5268| 
	.dwpsn	file "../Source/prod.c",line 5267,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5267| 
        ANDB      AL,#0xff              ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5268,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5268| 
	.dwpsn	file "../Source/prod.c",line 5267,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5268,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5268| 
	.dwpsn	file "../Source/prod.c",line 5269,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5269| 
	.dwpsn	file "../Source/prod.c",line 5268,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5268| 
        LSR       AL,8                  ; [CPU_] |5268| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5268| 
	.dwpsn	file "../Source/prod.c",line 5269,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5269| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5269| 
	.dwpsn	file "../Source/prod.c",line 5261,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5261| 
	.dwpsn	file "../Source/prod.c",line 5270,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5270| 
	.dwpsn	file "../Source/prod.c",line 5269,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5269| 
	.dwpsn	file "../Source/prod.c",line 5270,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5270| 
	.dwpsn	file "../Source/prod.c",line 5261,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],#1          ; [CPU_] |5261| 
	.dwpsn	file "../Source/prod.c",line 5270,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5270| 
        MOV       *+FP[AR0],#8          ; [CPU_] |5270| 
	.dwpsn	file "../Source/prod.c",line 5273,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |5273| 
        ; branch occurs ; [] |5273| 
$C$L184:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5203| 
        B         $C$L322,LO            ; [CPU_] |5203| 
        ; branchcc occurs ; [] |5203| 
        MOVL      ACC,XAR4              ; [CPU_] |5203| 
        MOVL      XAR0,#66              ; [CPU_] |5203| 
        ADDB      ACC,#2                ; [CPU_] |5203| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5203| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5203| 
        B         $C$L322,LT            ; [CPU_] |5203| 
        ; branchcc occurs ; [] |5203| 
        MOVL      XAR5,XAR4             ; [CPU_] |5203| 
        MOVL      XAR0,#66              ; [CPU_] |5203| 
        CMPB      AL,#4                 ; [CPU_] |5203| 
        ADDB      XAR5,#2               ; [CPU_] |5203| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5203| 
        B         $C$L322,GEQ           ; [CPU_] |5203| 
        ; branchcc occurs ; [] |5203| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5203| 
        B         $C$L322,LT            ; [CPU_] |5203| 
        ; branchcc occurs ; [] |5203| 
        CMPB      AH,#20                ; [CPU_] |5203| 
        B         $C$L322,GEQ           ; [CPU_] |5203| 
        ; branchcc occurs ; [] |5203| 
	.dwpsn	file "../Source/prod.c",line 5210,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5210| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5210| 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5213| 
	.dwpsn	file "../Source/prod.c",line 5211,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5211| 
        MOV       *+FP[AR0],AH          ; [CPU_] |5211| 
	.dwpsn	file "../Source/prod.c",line 5213,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5213| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5213| 
        MOVL      XAR0,#80              ; [CPU_] |5213| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5213| 
        MOVL      XAR0,#94              ; [CPU_] |5213| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |5213| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5213| 
        B         $C$L320,NEQ           ; [CPU_] |5213| 
        ; branchcc occurs ; [] |5213| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5219,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5219| 
        MOV       T,*+FP[AR0]           ; [CPU_] |5219| 
        MOVL      XAR0,#40              ; [CPU_] |5219| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5219| 
        MOVB      AL,#10                ; [CPU_] |5219| 
        MPYU      ACC,T,AL              ; [CPU_] |5219| 
        MOVL      XAR0,#95              ; [CPU_] |5219| 
        ADDL      ACC,XAR6              ; [CPU_] |5219| 
        MOVL      XAR4,ACC              ; [CPU_] |5219| 
        MOVB      XAR1,#42              ; [CPU_] |5219| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5219| 
        MOV       *+XAR4[AR1],AL        ; [CPU_] |5219| 
	.dwpsn	file "../Source/prod.c",line 5220,column 5,is_stmt,isa 0
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5220| 
        ; call occurs [#_ad7738_setcal] ; [] |5220| 
        MOVL      XAR0,#78              ; [CPU_] |5220| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5220| 
	.dwpsn	file "../Source/prod.c",line 5222,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5222| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |5222| 
        MOVL      XAR1,ACC              ; [CPU_] |5222| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5222| 
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5222| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5222| 
	.dwpsn	file "../Source/prod.c",line 5223,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5223| 
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5223| 
        ; call occurs [#_ad7738_resetvall] ; [] |5223| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5226,column 5,is_stmt,isa 0
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_update_units")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5226| 
        ; call occurs [#_update_units] ; [] |5226| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5229| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5229| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5229| 
        MOVL      XAR0,#95              ; [CPU_] |5229| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5229| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5229| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5230,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5230| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],#1          ; [CPU_] |5227| 
$C$L185:    
	.dwpsn	file "../Source/prod.c",line 5230,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5230| 
        MOV       *+FP[AR0],#4          ; [CPU_] |5230| 
	.dwpsn	file "../Source/prod.c",line 5232,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |5232| 
        ; branch occurs ; [] |5232| 
$C$L186:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5167,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5167| 
        B         $C$L322,LO            ; [CPU_] |5167| 
        ; branchcc occurs ; [] |5167| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5173,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR5             ; [CPU_] |5173| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L188:    
	.dwpsn	file "../Source/prod.c",line 5175,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5175| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5175| 
	.dwpsn	file "../Source/prod.c",line 5176,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5176| 
        MOV       *XAR4++,AL            ; [CPU_] |5176| 
	.dwpsn	file "../Source/prod.c",line 5177,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5177| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5177| 
        MOV       *XAR1++,AL            ; [CPU_] |5177| 
	.dwpsn	file "../Source/prod.c",line 5178,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5178| 
        MOV       *XAR4++,AL            ; [CPU_] |5178| 
	.dwpsn	file "../Source/prod.c",line 5174,column 18,is_stmt,isa 0
        BANZ      $C$L188,AR0--         ; [CPU_] |5174| 
        ; branchcc occurs ; [] |5174| 
	.dwpsn	file "../Source/prod.c",line 5172,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5172| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5172| 
        ADDB      XAR5,#2               ; [CPU_] |5172| 
	.dwpsn	file "../Source/prod.c",line 5178,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5178| 
        ADDB      AL,#4                 ; [CPU_] |5178| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5178| 
	.dwpsn	file "../Source/prod.c",line 5172,column 17,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5172| 
        ; branchcc occurs ; [] |5172| 
	.dwpsn	file "../Source/prod.c",line 5183,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |5183| 
        MOVL      ACC,XAR5              ; [CPU_] |5183| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5183| 
        MOVL      XAR6,ACC              ; [CPU_] |5183| 
        MOV       AL,*XAR7              ; [CPU_] |5183| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5183| 
	.dwpsn	file "../Source/prod.c",line 5184,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5184| 
        MOVL      XAR6,XAR5             ; [CPU_] |5184| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5184| 
        MOVL      XAR5,ACC              ; [CPU_] |5184| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5184| 
        ANDB      AL,#0xff              ; [CPU_] |5184| 
        MOV       *XAR4++,AL            ; [CPU_] |5184| 
	.dwpsn	file "../Source/prod.c",line 5185,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5185| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5185| 
        MOVL      XAR5,ACC              ; [CPU_] |5185| 
	.dwpsn	file "../Source/prod.c",line 5183,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5183| 
	.dwpsn	file "../Source/prod.c",line 5185,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5185| 
        ADD       *+XAR5[0],AL          ; [CPU_] |5185| 
	.dwpsn	file "../Source/prod.c",line 5186,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5186| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5186| 
        MOVL      XAR5,ACC              ; [CPU_] |5186| 
        MOVL      XAR0,#91              ; [CPU_] |5186| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5186| 
        LSR       AL,8                  ; [CPU_] |5186| 
        MOV       *+XAR4[0],AL          ; [CPU_] |5186| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5186| 
	.dwpsn	file "../Source/prod.c",line 5185,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5185| 
        ADDB      AL,#2                 ; [CPU_] |5185| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5185| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5191,column 5,is_stmt,isa 0
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5191| 
        ; call occurs [#_ad7738_setcal] ; [] |5191| 
	.dwpsn	file "../Source/prod.c",line 5192,column 5,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_velf_rst")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5192| 
        ; call occurs [#_velf_rst] ; [] |5192| 
$C$L189:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5196,column 5,is_stmt,isa 0
        B         $C$L303,UNC           ; [CPU_] |5196| 
        ; branch occurs ; [] |5196| 
$C$L190:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5128,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5128| 
        B         $C$L322,LO            ; [CPU_] |5128| 
        ; branchcc occurs ; [] |5128| 
        MOVL      ACC,XAR4              ; [CPU_] |5128| 
        MOVL      XAR0,#66              ; [CPU_] |5128| 
        ADDB      ACC,#2                ; [CPU_] |5128| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5128| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5128| 
        B         $C$L322,LT            ; [CPU_] |5128| 
        ; branchcc occurs ; [] |5128| 
        MOVL      XAR5,XAR4             ; [CPU_] |5128| 
        MOVL      XAR0,#66              ; [CPU_] |5128| 
        CMPB      AL,#20                ; [CPU_] |5128| 
        ADDB      XAR5,#2               ; [CPU_] |5128| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5128| 
        B         $C$L322,GEQ           ; [CPU_] |5128| 
        ; branchcc occurs ; [] |5128| 
	.dwpsn	file "../Source/prod.c",line 5132,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5132| 
	.dwpsn	file "../Source/prod.c",line 5133,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5133| 
	.dwpsn	file "../Source/prod.c",line 5132,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AL          ; [CPU_] |5132| 
	.dwpsn	file "../Source/prod.c",line 5135,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5135| 
	.dwpsn	file "../Source/prod.c",line 5133,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5133| 
	.dwpsn	file "../Source/prod.c",line 5135,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5135| 
        ADDB      ACC,#2                ; [CPU_] |5135| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5135| 
        MOVL      XAR0,#95              ; [CPU_] |5135| 
        MOV       T,*+FP[AR0]           ; [CPU_] |5135| 
        MOVL      XAR0,#40              ; [CPU_] |5135| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5135| 
        MOVB      AL,#152               ; [CPU_] |5135| 
        MPYU      ACC,T,AL              ; [CPU_] |5135| 
        ADDL      ACC,XAR6              ; [CPU_] |5135| 
        ADDB      ACC,#224              ; [CPU_] |5135| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5135| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5137,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5137| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5137| 
	.dwpsn	file "../Source/prod.c",line 5138,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5138| 
        MOV       *XAR5++,AL            ; [CPU_] |5138| 
	.dwpsn	file "../Source/prod.c",line 5139,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5139| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5139| 
        MOV       *XAR7++,AL            ; [CPU_] |5139| 
	.dwpsn	file "../Source/prod.c",line 5140,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5140| 
        MOV       *XAR5++,AL            ; [CPU_] |5140| 
	.dwpsn	file "../Source/prod.c",line 5136,column 17,is_stmt,isa 0
        BANZ      $C$L191,AR6--         ; [CPU_] |5136| 
        ; branchcc occurs ; [] |5136| 
	.dwpsn	file "../Source/prod.c",line 5145,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5145| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5145| 
        MOVB      AL,#152               ; [CPU_] |5145| 
        MPYU      ACC,T,AL              ; [CPU_] |5145| 
        ADDL      ACC,XAR6              ; [CPU_] |5145| 
        MOVL      XAR1,ACC              ; [CPU_] |5145| 
        MOVB      XAR0,#125             ; [CPU_] |5145| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5145| 
        CMPB      AL,#247               ; [CPU_] |5145| 
        B         $C$L194,NEQ           ; [CPU_] |5145| 
        ; branchcc occurs ; [] |5145| 
	.dwpsn	file "../Source/prod.c",line 5147,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5147| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5147| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5147| 
        MOV       AL,#0                 ; [CPU_] |5147| 
        MOV       AH,#17096             ; [CPU_] |5147| 
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5147| 
        ; call occurs [#FS$$DIV] ; [] |5147| 
        MOVB      XAR0,#126             ; [CPU_] |5147| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5147| 
        MOVL      XAR0,#40              ; [CPU_] |5147| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5147| 
	.dwpsn	file "../Source/prod.c",line 5150,column 11,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5150| 
        MOV       *+FP[AR0],#0          ; [CPU_] |5150| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5151,column 7,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5151| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |5151| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5151| 
        CMPL      ACC,XAR6              ; [CPU_] |5151| 
        B         $C$L193,NEQ           ; [CPU_] |5151| 
        ; branchcc occurs ; [] |5151| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5154,column 8,is_stmt,isa 0
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5154| 
        ; call occurs [#_ad7738_setcal] ; [] |5154| 
        MOVL      XAR0,#78              ; [CPU_] |5154| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5154| 
	.dwpsn	file "../Source/prod.c",line 5155,column 8,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5155| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |5155| 
        MOVL      XAR4,ACC              ; [CPU_] |5155| 
        MOVL      XAR0,#88              ; [CPU_] |5155| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5155| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5155| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5155| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5155| 
        MOVL      XAR0,#88              ; [CPU_] |5155| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5155| 
	.dwpsn	file "../Source/prod.c",line 5156,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5156| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5156| 
        ; call occurs [#_ad7738_resetvall] ; [] |5156| 
 clrc INTM
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5150,column 19,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5150| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5150| 
        ADDB      XAR1,#10              ; [CPU_] |5150| 
        MOVL      XAR0,#94              ; [CPU_] |5150| 
        ADDB      AL,#1                 ; [CPU_] |5150| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5150| 
        CMPB      AL,#4                 ; [CPU_] |5150| 
        B         $C$L192,LO            ; [CPU_] |5150| 
        ; branchcc occurs ; [] |5150| 
$C$L194:    
	.dwpsn	file "../Source/prod.c",line 5143,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5143| 
        MOV       *+FP[AR0],#1          ; [CPU_] |5143| 
	.dwpsn	file "../Source/prod.c",line 5139,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5139| 
        MOV       *+FP[AR0],#7          ; [CPU_] |5139| 
	.dwpsn	file "../Source/prod.c",line 5163,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |5163| 
        ; branch occurs ; [] |5163| 
$C$L195:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5027,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5027| 
        B         $C$L322,LO            ; [CPU_] |5027| 
        ; branchcc occurs ; [] |5027| 
        MOVL      ACC,XAR4              ; [CPU_] |5027| 
        MOVL      XAR0,#66              ; [CPU_] |5027| 
        ADDB      ACC,#2                ; [CPU_] |5027| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5027| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5027| 
        B         $C$L322,LT            ; [CPU_] |5027| 
        ; branchcc occurs ; [] |5027| 
        MOVL      XAR5,XAR4             ; [CPU_] |5027| 
        MOVL      XAR0,#66              ; [CPU_] |5027| 
        CMPB      AL,#20                ; [CPU_] |5027| 
        ADDB      XAR5,#2               ; [CPU_] |5027| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5027| 
        B         $C$L322,GEQ           ; [CPU_] |5027| 
        ; branchcc occurs ; [] |5027| 
	.dwpsn	file "../Source/prod.c",line 5032,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5032| 
        MOVL      XAR0,#66              ; [CPU_] |5032| 
        ADDB      XAR5,#2               ; [CPU_] |5032| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5032| 
        MOVL      XAR0,#95              ; [CPU_] |5032| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5032| 
	.dwpsn	file "../Source/prod.c",line 5033,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5033| 
        MOV       AL,AR6                ; [CPU_] |5033| 
        CMPB      AL,#247               ; [CPU_] |5033| 
        B         $C$L196,EQ            ; [CPU_] |5033| 
        ; branchcc occurs ; [] |5033| 
	.dwpsn	file "../Source/prod.c",line 5035,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5035| 
        MOVL      XAR0,#66              ; [CPU_] |5035| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5035| 
        MOVL      XAR0,#95              ; [CPU_] |5035| 
        MOV       T,*+FP[AR0]           ; [CPU_] |5035| 
        MOVL      XAR0,#40              ; [CPU_] |5035| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5035| 
        MOVB      AL,#152               ; [CPU_] |5035| 
        MPYU      ACC,T,AL              ; [CPU_] |5035| 
        ADDL      ACC,XAR7              ; [CPU_] |5035| 
        MOVL      XAR4,ACC              ; [CPU_] |5035| 
        MOVB      XAR0,#124             ; [CPU_] |5035| 
        MOV       PH,#0                 ; [CPU_] |5035| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5035| 
        ANDB      AL,#0xf0              ; [CPU_] |5035| 
        MOVU      ACC,AL                ; [CPU_] |5035| 
        MOVL      XAR7,ACC              ; [CPU_] |5035| 
        MOV       AL,AR6                ; [CPU_] |5035| 
        ANDB      AL,#240               ; [CPU_] |5035| 
        MOV       PL,AL                 ; [CPU_] |5035| 
        MOVL      ACC,XAR7              ; [CPU_] |5035| 
        CMPL      ACC,P                 ; [CPU_] |5035| 
        B         $C$L322,NEQ           ; [CPU_] |5035| 
        ; branchcc occurs ; [] |5035| 
$C$L196:    
	.dwpsn	file "../Source/prod.c",line 5041,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5041| 
        MOV       T,*+FP[AR0]           ; [CPU_] |5041| 
        MOVL      XAR0,#40              ; [CPU_] |5041| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5041| 
        MOVB      AL,#152               ; [CPU_] |5041| 
        MPYU      ACC,T,AL              ; [CPU_] |5041| 
        ADDL      ACC,XAR7              ; [CPU_] |5041| 
        MOVL      XAR1,ACC              ; [CPU_] |5041| 
        MOVB      XAR0,#125             ; [CPU_] |5041| 
	.dwpsn	file "../Source/prod.c",line 5042,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5042| 
	.dwpsn	file "../Source/prod.c",line 5041,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5041| 
	.dwpsn	file "../Source/prod.c",line 5042,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5042| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5042| 
	.dwpsn	file "../Source/prod.c",line 5043,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5043| 
	.dwpsn	file "../Source/prod.c",line 5042,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5042| 
	.dwpsn	file "../Source/prod.c",line 5043,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5043| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5043| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5043| 
        MOV       AL,AR6                ; [CPU_] |5043| 
        MOV       *+FP[AR0],#4          ; [CPU_] |5043| 
	.dwpsn	file "../Source/prod.c",line 5045,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5045| 
        B         $C$L206,EQ            ; [CPU_] |5045| 
        ; branchcc occurs ; [] |5045| 
	.dwpsn	file "../Source/prod.c",line 5048,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5048| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5048| 
        B         $C$L205,EQ            ; [CPU_] |5048| 
        ; branchcc occurs ; [] |5048| 
	.dwpsn	file "../Source/prod.c",line 5052,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5052| 
        CMPB      AL,#34                ; [CPU_] |5052| 
        B         $C$L197,GT            ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
        CMPB      AL,#34                ; [CPU_] |5052| 
        B         $C$L201,EQ            ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
        CMPB      AL,#16                ; [CPU_] |5052| 
        B         $C$L204,EQ            ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
        CMPB      AL,#17                ; [CPU_] |5052| 
        B         $C$L203,EQ            ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
        B         $C$L205,UNC           ; [CPU_] |5052| 
        ; branch occurs ; [] |5052| 
$C$L197:    
        CMPB      AL,#35                ; [CPU_] |5052| 
        B         $C$L199,EQ            ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
        CMPB      AL,#36                ; [CPU_] |5052| 
        B         $C$L205,NEQ           ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5093,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5093| 
        B         $C$L198,EQ            ; [CPU_] |5093| 
        ; branchcc occurs ; [] |5093| 
        CMPB      AL,#35                ; [CPU_] |5093| 
        B         $C$L208,NEQ           ; [CPU_] |5093| 
        ; branchcc occurs ; [] |5093| 
	.dwpsn	file "../Source/prod.c",line 5098,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5098| 
        MOV       AH,#15820             ; [CPU_] |5098| 
	.dwpsn	file "../Source/prod.c",line 5099,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5099| 
        ; branch occurs ; [] |5099| 
$C$L198:    
	.dwpsn	file "../Source/prod.c",line 5095,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5095| 
        MOV       AH,#15649             ; [CPU_] |5095| 
	.dwpsn	file "../Source/prod.c",line 5096,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5096| 
        ; branch occurs ; [] |5096| 
$C$L199:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5081,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5081| 
        B         $C$L200,EQ            ; [CPU_] |5081| 
        ; branchcc occurs ; [] |5081| 
        CMPB      AL,#36                ; [CPU_] |5081| 
        B         $C$L208,NEQ           ; [CPU_] |5081| 
        ; branchcc occurs ; [] |5081| 
	.dwpsn	file "../Source/prod.c",line 5086,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5086| 
        MOV       AH,#16672             ; [CPU_] |5086| 
	.dwpsn	file "../Source/prod.c",line 5087,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5087| 
        ; branch occurs ; [] |5087| 
$C$L200:    
	.dwpsn	file "../Source/prod.c",line 5083,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5083| 
        MOV       AH,#16073             ; [CPU_] |5083| 
	.dwpsn	file "../Source/prod.c",line 5084,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5084| 
        ; branch occurs ; [] |5084| 
$C$L201:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5069,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5069| 
        B         $C$L202,EQ            ; [CPU_] |5069| 
        ; branchcc occurs ; [] |5069| 
        CMPB      AL,#36                ; [CPU_] |5069| 
        B         $C$L208,NEQ           ; [CPU_] |5069| 
        ; branchcc occurs ; [] |5069| 
	.dwpsn	file "../Source/prod.c",line 5074,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5074| 
        MOV       AH,#16843             ; [CPU_] |5074| 
	.dwpsn	file "../Source/prod.c",line 5075,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5075| 
        ; branch occurs ; [] |5075| 
$C$L202:    
	.dwpsn	file "../Source/prod.c",line 5071,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5071| 
        MOV       AH,#16418             ; [CPU_] |5071| 
	.dwpsn	file "../Source/prod.c",line 5072,column 8,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5072| 
        ; branch occurs ; [] |5072| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5062,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5062| 
        B         $C$L208,NEQ           ; [CPU_] |5062| 
        ; branchcc occurs ; [] |5062| 
	.dwpsn	file "../Source/prod.c",line 5063,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5063| 
        MOV       AH,#16397             ; [CPU_] |5063| 
        B         $C$L207,UNC           ; [CPU_] |5063| 
        ; branch occurs ; [] |5063| 
$C$L204:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5055,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5055| 
        B         $C$L208,NEQ           ; [CPU_] |5055| 
        ; branchcc occurs ; [] |5055| 
	.dwpsn	file "../Source/prod.c",line 5056,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5056| 
        MOV       AH,#16104             ; [CPU_] |5056| 
        B         $C$L207,UNC           ; [CPU_] |5056| 
        ; branch occurs ; [] |5056| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5050,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5050| 
	.dwpsn	file "../Source/prod.c",line 5051,column 5,is_stmt,isa 0
        B         $C$L207,UNC           ; [CPU_] |5051| 
        ; branch occurs ; [] |5051| 
$C$L206:    
	.dwpsn	file "../Source/prod.c",line 5046,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5046| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5046| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5046| 
        MOV       AL,#0                 ; [CPU_] |5046| 
        MOV       AH,#17096             ; [CPU_] |5046| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5046| 
        ; call occurs [#FS$$DIV] ; [] |5046| 
$C$L207:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5046| 
$C$L208:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5112,column 10,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5112| 
        MOV       *+FP[AR0],#0          ; [CPU_] |5112| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5113,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5113| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |5113| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5113| 
        CMPL      ACC,XAR6              ; [CPU_] |5113| 
        B         $C$L210,NEQ           ; [CPU_] |5113| 
        ; branchcc occurs ; [] |5113| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5114,column 7,is_stmt,isa 0
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_update_units")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5114| 
        ; call occurs [#_update_units] ; [] |5114| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5116,column 7,is_stmt,isa 0
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5116| 
        ; call occurs [#_ad7738_setcal] ; [] |5116| 
        MOVL      XAR0,#78              ; [CPU_] |5116| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5116| 
	.dwpsn	file "../Source/prod.c",line 5117,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5117| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |5117| 
        MOVL      XAR4,ACC              ; [CPU_] |5117| 
        MOVL      XAR0,#88              ; [CPU_] |5117| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5117| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5117| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5117| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5117| 
        MOVL      XAR0,#88              ; [CPU_] |5117| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5117| 
	.dwpsn	file "../Source/prod.c",line 5118,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5118| 
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5118| 
        ; call occurs [#_ad7738_resetvall] ; [] |5118| 
 clrc INTM
$C$L210:    
	.dwpsn	file "../Source/prod.c",line 5112,column 18,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |5112| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5112| 
        ADDB      XAR1,#10              ; [CPU_] |5112| 
        MOVL      XAR0,#94              ; [CPU_] |5112| 
        ADDB      AL,#1                 ; [CPU_] |5112| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5112| 
        CMPB      AL,#4                 ; [CPU_] |5112| 
        B         $C$L209,LO            ; [CPU_] |5112| 
        ; branchcc occurs ; [] |5112| 
        B         $C$L303,UNC           ; [CPU_] |5112| 
        ; branch occurs ; [] |5112| 
$C$L211:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4999,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4999| 
        B         $C$L322,LO            ; [CPU_] |4999| 
        ; branchcc occurs ; [] |4999| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4999| 
        MOVL      XAR0,#66              ; [CPU_] |4999| 
        MOVL      ACC,XAR7              ; [CPU_] |4999| 
        ADDB      ACC,#2                ; [CPU_] |4999| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4999| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4999| 
        B         $C$L322,LT            ; [CPU_] |4999| 
        ; branchcc occurs ; [] |4999| 
        ADDB      XAR4,#2               ; [CPU_] |4999| 
        MOVL      XAR0,#66              ; [CPU_] |4999| 
        CMPB      AL,#20                ; [CPU_] |4999| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4999| 
        B         $C$L322,GEQ           ; [CPU_] |4999| 
        ; branchcc occurs ; [] |4999| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4999| 
        MOVB      AH,#4                 ; [CPU_] |4999| 
        MOVL      XAR0,#93              ; [CPU_] |4999| 
        ADD       AH,AR6                ; [CPU_] |4999| 
        CMP       AH,*+FP[AR0]          ; [CPU_] |4999| 
        B         $C$L322,HI            ; [CPU_] |4999| 
        ; branchcc occurs ; [] |4999| 
	.dwpsn	file "../Source/prod.c",line 5004,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5004| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5004| 
	.dwpsn	file "../Source/prod.c",line 5005,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5005| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |5005| 
        ADDB      ACC,#2                ; [CPU_] |5005| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5005| 
        MOVL      XAR0,#95              ; [CPU_] |5005| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5005| 
        MOV       @_buff$1+2,AL         ; [CPU_] |5005| 
        MOV       AL,AR6                ; [CPU_] |5005| 
	.dwpsn	file "../Source/prod.c",line 5007,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5007| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |5007| 
        B         $C$L212,HIS           ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5007| 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 5009,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5009| 
        MOVB      XAR5,#0               ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5009,column 17,is_stmt,isa 0
        B         $C$L214,EQ            ; [CPU_] |5009| 
        ; branchcc occurs ; [] |5009| 
        MOVL      XAR0,#95              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 5010,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5010| 
	.dwpsn	file "../Source/prod.c",line 5009,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5010,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5010| 
	.dwpsn	file "../Source/prod.c",line 5009,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5010,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5010| 
	.dwpsn	file "../Source/prod.c",line 5009,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |5009| 
        B         $C$L213,HI            ; [CPU_] |5009| 
        ; branchcc occurs ; [] |5009| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5012,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |5012| 
        MOVB      AL,#152               ; [CPU_] |5012| 
        MOV       T,*+FP[AR0]           ; [CPU_] |5012| 
        MOVL      XAR0,#40              ; [CPU_] |5012| 
        MPYU      P,T,AL                ; [CPU_] |5012| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5012| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,P                 ; [CPU_] |5012| 
        ADD       ACC,AR5               ; [CPU_] |5012| 
        ADDL      ACC,XAR6              ; [CPU_] |5012| 
        MOVL      XAR4,ACC              ; [CPU_] |5012| 
        MOVB      XAR0,#98              ; [CPU_] |5012| 
	.dwpsn	file "../Source/prod.c",line 5016,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5016| 
	.dwpsn	file "../Source/prod.c",line 5012,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5012| 
	.dwpsn	file "../Source/prod.c",line 5016,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |5016| 
        MOVL      XAR4,ACC              ; [CPU_] |5016| 
        MOVL      XAR1,ACC              ; [CPU_] |5016| 
        ADDB      XAR4,#98              ; [CPU_] |5016| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_strlen")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |5016| 
        ; call occurs [#_strlen] ; [] |5016| 
	.dwpsn	file "../Source/prod.c",line 5017,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5017| 
        MOVL      XAR0,#91              ; [CPU_] |5017| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5017| 
	.dwpsn	file "../Source/prod.c",line 5018,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5018| 
	.dwpsn	file "../Source/prod.c",line 5017,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],#4          ; [CPU_] |5017| 
	.dwpsn	file "../Source/prod.c",line 5018,column 17,is_stmt,isa 0
        B         $C$L303,EQ            ; [CPU_] |5018| 
        ; branchcc occurs ; [] |5018| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5018,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |5018| 
$C$L215:    
	.dwpsn	file "../Source/prod.c",line 5019,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |5019| 
        MOVL      XAR0,#91              ; [CPU_] |5019| 
        MOV       *XAR4++,AH            ; [CPU_] |5019| 
	.dwpsn	file "../Source/prod.c",line 5018,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |5018| 
	.dwpsn	file "../Source/prod.c",line 5019,column 6,is_stmt,isa 0
        MOV       AH,*+FP[AR0]          ; [CPU_] |5019| 
        ADDB      AH,#1                 ; [CPU_] |5019| 
        MOVL      XAR0,#91              ; [CPU_] |5019| 
	.dwpsn	file "../Source/prod.c",line 5018,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |5018| 
	.dwpsn	file "../Source/prod.c",line 5019,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |5019| 
	.dwpsn	file "../Source/prod.c",line 5018,column 17,is_stmt,isa 0
        B         $C$L215,HI            ; [CPU_] |5018| 
        ; branchcc occurs ; [] |5018| 
        B         $C$L303,UNC           ; [CPU_] |5018| 
        ; branch occurs ; [] |5018| 
$C$L216:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5557,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5557| 
        B         $C$L322,LO            ; [CPU_] |5557| 
        ; branchcc occurs ; [] |5557| 
	.dwpsn	file "../Source/prod.c",line 5562,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5562| 
        MOVL      XAR0,#95              ; [CPU_] |5562| 
        ADDB      XAR5,#2               ; [CPU_] |5562| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5562| 
        MOV       *+FP[AR0],AL          ; [CPU_] |5562| 
	.dwpsn	file "../Source/prod.c",line 5563,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5563| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5563| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5563| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5563| 
	.dwpsn	file "../Source/prod.c",line 5565,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5565| 
        SUBB      XAR5,#24              ; [CPU_U] |5565| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5565| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L217:    
	.dwpsn	file "../Source/prod.c",line 5567,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5567| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5567| 
	.dwpsn	file "../Source/prod.c",line 5568,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5568| 
        MOV       *XAR1++,AL            ; [CPU_] |5568| 
	.dwpsn	file "../Source/prod.c",line 5569,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5569| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5569| 
        MOV       *XAR5++,AL            ; [CPU_] |5569| 
	.dwpsn	file "../Source/prod.c",line 5570,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5570| 
        MOV       *XAR1++,AL            ; [CPU_] |5570| 
	.dwpsn	file "../Source/prod.c",line 5566,column 17,is_stmt,isa 0
        BANZ      $C$L217,AR6--         ; [CPU_] |5566| 
        ; branchcc occurs ; [] |5566| 
        MOVL      XAR0,#95              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5574,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5574| 
        B         $C$L322,HIS           ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
        MOVL      XAR0,#95              ; [CPU_] |5574| 
        MOV       T,*+FP[AR0]           ; [CPU_] |5574| 
        MOVL      XAR0,#40              ; [CPU_] |5574| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5574| 
        MOVB      AL,#12                ; [CPU_] |5574| 
        MPYU      ACC,T,AL              ; [CPU_] |5574| 
        ADDL      ACC,XAR6              ; [CPU_] |5574| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5574| 
        MOVL      XAR4,ACC              ; [CPU_] |5574| 
        MOVL      XAR0,#88              ; [CPU_] |5574| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5574| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5574| 
        CMPB      AL,#7                 ; [CPU_] |5574| 
        B         $C$L322,NEQ           ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5574| 
        MOV       *-SP[63],#0           ; [CPU_] |5574| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5574| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5574| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5574| 
        ; call occurs [#FS$$CMP] ; [] |5574| 
        CMPB      AL,#0                 ; [CPU_] |5574| 
        B         $C$L218,GEQ           ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
        MOV       *-SP[63],#1           ; [CPU_] |5574| 
$C$L218:    
        MOV       AL,*-SP[63]           ; [CPU_] 
        B         $C$L322,NEQ           ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
        MOV       AL,#0                 ; [CPU_] |5574| 
        MOV       AH,#16672             ; [CPU_] |5574| 
        MOV       *-SP[63],#0           ; [CPU_] |5574| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5574| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5574| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5574| 
        ; call occurs [#FS$$CMP] ; [] |5574| 
        CMPB      AL,#0                 ; [CPU_] |5574| 
        B         $C$L219,LEQ           ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
        MOV       *-SP[63],#1           ; [CPU_] |5574| 
$C$L219:    
        MOV       AL,*-SP[63]           ; [CPU_] 
        B         $C$L322,NEQ           ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
	.dwpsn	file "../Source/prod.c",line 5581,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5581| 
        MOV       AH,#0                 ; [CPU_] |5581| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5581| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5581| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5581| 
        ; call occurs [#FS$$CMP] ; [] |5581| 
        CMPB      AL,#0                 ; [CPU_] |5581| 
        B         $C$L220,GEQ           ; [CPU_] |5581| 
        ; branchcc occurs ; [] |5581| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5581| 
        MOVL      XAR0,#88              ; [CPU_] |5581| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5581| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5581| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5581| 
        B         $C$L221,UNC           ; [CPU_] |5581| 
        ; branch occurs ; [] |5581| 
$C$L220:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5581| 
        MOVL      XAR0,#88              ; [CPU_] |5581| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5581| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5581| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5581| 
$C$L221:    
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5581| 
        ; call occurs [#FS$$MPY] ; [] |5581| 
        MOVL      XAR0,#88              ; [CPU_] |5581| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5581| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5581| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5581| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5581| 
        ; call occurs [#FS$$ADD] ; [] |5581| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5581| 
        ; call occurs [#FS$$TOLL] ; [] |5581| 
	.dwpsn	file "../Source/prod.c",line 5569,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5569| 
	.dwpsn	file "../Source/prod.c",line 5588,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5588| 
	.dwpsn	file "../Source/prod.c",line 5581,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5581| 
	.dwpsn	file "../Source/prod.c",line 5569,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#7          ; [CPU_] |5569| 
	.dwpsn	file "../Source/prod.c",line 5581,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5581| 
	.dwpsn	file "../Source/prod.c",line 5588,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5588| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5588| 
        CMP64     ACC:P                 ; [CPU_] |5588| 
        B         $C$L223,LEQ           ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
	.dwpsn	file "../Source/prod.c",line 5590,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5590| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5590| 
        MOV       *-SP[2],#0            ; [CPU_] |5590| 
        MOV       *-SP[1],#0            ; [CPU_] |5590| 
        MOVL      P,*-SP[32]            ; [CPU_] |5590| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5590| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$728, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5590| 
        ; call occurs [#LL$$CMP] ; [] |5590| 
        CMPB      AL,#0                 ; [CPU_] |5590| 
        B         $C$L222,GEQ           ; [CPU_] |5590| 
        ; branchcc occurs ; [] |5590| 
	.dwpsn	file "../Source/prod.c",line 5593,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5593| 
        MOV       *-SP[35],AL           ; [CPU_] |5593| 
        B         $C$L224,UNC           ; [CPU_] |5593| 
        ; branch occurs ; [] |5593| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5591,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5591| 
	.dwpsn	file "../Source/prod.c",line 5592,column 5,is_stmt,isa 0
        B         $C$L224,UNC           ; [CPU_] |5592| 
        ; branch occurs ; [] |5592| 
$C$L223:    
	.dwpsn	file "../Source/prod.c",line 5589,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5589| 
$C$L224:    
        MOVL      XAR0,#95              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5596,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5596| 
        MOV       AH,*+FP[AR0]          ; [CPU_] 
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5596| 
        ; call occurs [#_mcbsp_xmit] ; [] |5596| 
	.dwpsn	file "../Source/prod.c",line 5597,column 5,is_stmt,isa 0
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_latch_dac")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5597| 
        ; call occurs [#_latch_dac] ; [] |5597| 
	.dwpsn	file "../Source/prod.c",line 5600,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5600| 
        ANDB      AL,#0xff              ; [CPU_] |5600| 
        MOV       *XAR1++,AL            ; [CPU_] |5600| 
	.dwpsn	file "../Source/prod.c",line 5601,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5601| 
        LSR       AL,8                  ; [CPU_] |5601| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5601| 
	.dwpsn	file "../Source/prod.c",line 5604,column 5,is_stmt,isa 0
        B         $C$L739,UNC           ; [CPU_] |5604| 
        ; branch occurs ; [] |5604| 
$C$L225:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5493,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5493| 
        B         $C$L322,LO            ; [CPU_] |5493| 
        ; branchcc occurs ; [] |5493| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5498| 
$C$L226:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5498| 
$C$L227:    
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5498| 
        ; call occurs [#_ad7738_resetvall] ; [] |5498| 
$C$L228:    
	.dwpsn	file "../Source/prod.c",line 5501,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5501| 
        MOVL      XAR0,#66              ; [CPU_] |5501| 
        ADDB      ACC,#2                ; [CPU_] |5501| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5501| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5501| 
        ANDB      AL,#0x0f              ; [CPU_] |5501| 
	.dwpsn	file "../Source/prod.c",line 5503,column 5,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5503| 
        ; branch occurs ; [] |5503| 
$C$L229:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5479,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5479| 
        B         $C$L322,LO            ; [CPU_] |5479| 
        ; branchcc occurs ; [] |5479| 
	.dwpsn	file "../Source/prod.c",line 5484,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5484| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5484| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5484| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5484| 
	.dwpsn	file "../Source/prod.c",line 5489,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5489| 
        ; branch occurs ; [] |5489| 
$C$L230:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5543,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5543| 
        B         $C$L322,LO            ; [CPU_] |5543| 
        ; branchcc occurs ; [] |5543| 
	.dwpsn	file "../Source/prod.c",line 5548,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5548| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5548| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5548| 
        ; call occurs [#_shunt_switch] ; [] |5548| 
	.dwpsn	file "../Source/prod.c",line 5553,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5553| 
        ; branch occurs ; [] |5553| 
$C$L231:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5527,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5527| 
        B         $C$L322,LO            ; [CPU_] |5527| 
        ; branchcc occurs ; [] |5527| 
	.dwpsn	file "../Source/prod.c",line 5532,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5532| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5532| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5532| 
        ; call occurs [#_ad7738_resettare] ; [] |5532| 
	.dwpsn	file "../Source/prod.c",line 5533,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5533| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5533| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5533| 
	.dwpsn	file "../Source/prod.c",line 5534,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5534| 
	.dwpsn	file "../Source/prod.c",line 5539,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5539| 
        ; branch occurs ; [] |5539| 
$C$L232:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5507,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5507| 
        B         $C$L322,LO            ; [CPU_] |5507| 
        ; branchcc occurs ; [] |5507| 
	.dwpsn	file "../Source/prod.c",line 5512,column 5,is_stmt,isa 0
        MOV       *-SP[63],#1           ; [CPU_] |5512| 
	.dwpsn	file "../Source/prod.c",line 5513,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5513| 
$C$L233:    
        MOV       AL,*-SP[63]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5514,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5514| 
        B         $C$L234,EQ            ; [CPU_] |5514| 
        ; branchcc occurs ; [] |5514| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5515,column 7,is_stmt,isa 0
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5515| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5515| 
$C$L234:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5513,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5513| 
	.dwpsn	file "../Source/prod.c",line 5517,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5517| 
        MOV       *-SP[63],AL           ; [CPU_] |5517| 
	.dwpsn	file "../Source/prod.c",line 5513,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5513| 
        CMPB      AL,#4                 ; [CPU_] |5513| 
        B         $C$L233,LT            ; [CPU_] |5513| 
        ; branchcc occurs ; [] |5513| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5521,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5521| 
        ANDB      AL,#0x0f              ; [CPU_] |5521| 
$C$L235:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5521| 
        MOVL      XAR0,#66              ; [CPU_] |5521| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5521| 
	.dwpsn	file "../Source/prod.c",line 5523,column 5,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5523| 
        ; branch occurs ; [] |5523| 
$C$L236:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5464,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5464| 
        B         $C$L322,LO            ; [CPU_] |5464| 
        ; branchcc occurs ; [] |5464| 
	.dwpsn	file "../Source/prod.c",line 5469,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5469| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5469| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5469| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5469| 
	.dwpsn	file "../Source/prod.c",line 5475,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5475| 
        ; branch occurs ; [] |5475| 
$C$L237:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5441,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5441| 
        B         $C$L240,LO            ; [CPU_] |5441| 
        ; branchcc occurs ; [] |5441| 
	.dwpsn	file "../Source/prod.c",line 5453,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5453| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5453| 
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5453| 
        ; call occurs [#_ad7738_resettare] ; [] |5453| 
	.dwpsn	file "../Source/prod.c",line 5454,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5454| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5454| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5454| 
	.dwpsn	file "../Source/prod.c",line 5455,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5455| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5455| 
        ; call occurs [#_ad7738_resetvall] ; [] |5455| 
	.dwpsn	file "../Source/prod.c",line 5458,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5458| 
        MOVL      ACC,XAR1              ; [CPU_] |5458| 
        ADDB      ACC,#2                ; [CPU_] |5458| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5458| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5458| 
        ANDB      AL,#0xff              ; [CPU_] |5458| 
$C$L238:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5458| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5458| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5456,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5456| 
        MOV       *+FP[AR0],#1          ; [CPU_] |5456| 
	.dwpsn	file "../Source/prod.c",line 5460,column 5,is_stmt,isa 0
        B         $C$L746,UNC           ; [CPU_] |5460| 
        ; branch occurs ; [] |5460| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5443,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5443| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5443| 
        ; call occurs [#_ad7738_resettare] ; [] |5443| 
	.dwpsn	file "../Source/prod.c",line 5444,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5444| 
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5444| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5444| 
	.dwpsn	file "../Source/prod.c",line 5445,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5445| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5445| 
        ; call occurs [#_ad7738_resetvall] ; [] |5445| 
	.dwpsn	file "../Source/prod.c",line 5448,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5448| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5448| 
	.dwpsn	file "../Source/prod.c",line 5450,column 6,is_stmt,isa 0
        B         $C$L239,UNC           ; [CPU_] |5450| 
        ; branch occurs ; [] |5450| 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5616,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5616| 
        MOV       *-SP[63],#0           ; [CPU_] |5616| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5616| 
	.dwpsn	file "../Source/prod.c",line 5617,column 5,is_stmt,isa 0
        B         $C$L319,EQ            ; [CPU_] |5617| 
        ; branchcc occurs ; [] |5617| 
	.dwpsn	file "../Source/prod.c",line 5619,column 6,is_stmt,isa 0
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5619| 
        ; call occurs [#_lcd_clear] ; [] |5619| 
	.dwpsn	file "../Source/prod.c",line 5620,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5620| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5620| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5620| 
        ; call occurs [#_lcd_puts] ; [] |5620| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5623,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5623| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_delay_us")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5623| 
        ; call occurs [#_delay_us] ; [] |5623| 
	.dwpsn	file "../Source/prod.c",line 5622,column 18,is_stmt,isa 0
        BANZ      $C$L242,AR3--         ; [CPU_] |5622| 
        ; branchcc occurs ; [] |5622| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5627,column 6,is_stmt,isa 0
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_conf_write")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5627| 
        ; call occurs [#_conf_write] ; [] |5627| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5630,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5630| 
        B         $C$L243,NEQ           ; [CPU_] |5630| 
        ; branchcc occurs ; [] |5630| 
	.dwpsn	file "../Source/prod.c",line 5631,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5631| 
        MOVB      AL,#16                ; [CPU_] |5631| 
        SPM       #0                    ; [CPU_] 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5631| 
        ; call occurs [#_lcd_puts] ; [] |5631| 
	.dwpsn	file "../Source/prod.c",line 5632,column 7,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5632| 
        MOV       *+FP[AR0],#0          ; [CPU_] |5632| 
	.dwpsn	file "../Source/prod.c",line 5633,column 6,is_stmt,isa 0
        B         $C$L244,UNC           ; [CPU_] |5633| 
        ; branch occurs ; [] |5633| 
$C$L243:    
	.dwpsn	file "../Source/prod.c",line 5634,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5634| 
        MOVB      AL,#16                ; [CPU_] |5634| 
        SPM       #0                    ; [CPU_] 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5634| 
        ; call occurs [#_lcd_puts] ; [] |5634| 
	.dwpsn	file "../Source/prod.c",line 5635,column 7,is_stmt,isa 0
        MOV       *-SP[63],#3           ; [CPU_] |5635| 
$C$L244:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L245:    
	.dwpsn	file "../Source/prod.c",line 5639,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5639| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_delay_us")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5639| 
        ; call occurs [#_delay_us] ; [] |5639| 
	.dwpsn	file "../Source/prod.c",line 5638,column 18,is_stmt,isa 0
        BANZ      $C$L245,AR3--         ; [CPU_] |5638| 
        ; branchcc occurs ; [] |5638| 
        B         $C$L318,UNC           ; [CPU_] |5638| 
        ; branch occurs ; [] |5638| 
$C$L246:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4386,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4386| 
        B         $C$L322,LO            ; [CPU_] |4386| 
        ; branchcc occurs ; [] |4386| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4386| 
        MOVL      XAR0,#66              ; [CPU_] |4386| 
        MOVL      ACC,XAR7              ; [CPU_] |4386| 
        ADDB      ACC,#2                ; [CPU_] |4386| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4386| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4386| 
        B         $C$L322,LT            ; [CPU_] |4386| 
        ; branchcc occurs ; [] |4386| 
        ADDB      XAR4,#2               ; [CPU_] |4386| 
        MOVL      XAR0,#66              ; [CPU_] |4386| 
        CMPB      AL,#4                 ; [CPU_] |4386| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4386| 
        B         $C$L322,GEQ           ; [CPU_] |4386| 
        ; branchcc occurs ; [] |4386| 
	.dwpsn	file "../Source/prod.c",line 4391,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4391| 
	.dwpsn	file "../Source/prod.c",line 4392,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4392| 
	.dwpsn	file "../Source/prod.c",line 4391,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AL          ; [CPU_] |4391| 
	.dwpsn	file "../Source/prod.c",line 4395,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4395| 
	.dwpsn	file "../Source/prod.c",line 4392,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4392| 
	.dwpsn	file "../Source/prod.c",line 4395,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4395| 
        ADDB      ACC,#2                ; [CPU_] |4395| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4395| 
        MOVL      XAR0,#94              ; [CPU_] |4395| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4395| 
        MOVL      XAR0,#40              ; [CPU_] |4395| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4395| 
        MOVB      AL,#10                ; [CPU_] |4395| 
        MPYU      ACC,T,AL              ; [CPU_] |4395| 
        ADDL      ACC,XAR6              ; [CPU_] |4395| 
        ADDB      ACC,#46               ; [CPU_] |4395| 
        MOVL      XAR4,ACC              ; [CPU_] |4395| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4397,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4397| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4397| 
        ADDB      XAR7,#1               ; [CPU_] |4397| 
	.dwpsn	file "../Source/prod.c",line 4398,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4398| 
        ADD       *XAR4++,AL            ; [CPU_] |4398| 
	.dwpsn	file "../Source/prod.c",line 4396,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4396| 
        ; branchcc occurs ; [] |4396| 
	.dwpsn	file "../Source/prod.c",line 4401,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4401| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4401| 
        MOVB      AL,#10                ; [CPU_] |4401| 
        MPYU      ACC,T,AL              ; [CPU_] |4401| 
        ADDL      ACC,XAR6              ; [CPU_] |4401| 
        MOVL      XAR5,ACC              ; [CPU_] |4401| 
        ADDB      ACC,#48               ; [CPU_] |4401| 
        MOVL      XAR4,ACC              ; [CPU_] |4401| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4401| 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4403,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4403| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4403| 
        ADDB      XAR7,#1               ; [CPU_] |4403| 
	.dwpsn	file "../Source/prod.c",line 4404,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4404| 
        ADD       *XAR4++,AL            ; [CPU_] |4404| 
	.dwpsn	file "../Source/prod.c",line 4402,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4402| 
        ; branchcc occurs ; [] |4402| 
	.dwpsn	file "../Source/prod.c",line 4407,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4407| 
        ADDB      ACC,#50               ; [CPU_] |4407| 
        MOVL      XAR4,ACC              ; [CPU_] |4407| 
        MOVL      P,ACC                 ; [CPU_] |4407| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4409,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4409| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4409| 
        ADDB      XAR7,#1               ; [CPU_] |4409| 
	.dwpsn	file "../Source/prod.c",line 4410,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4410| 
        ADD       *XAR4++,AL            ; [CPU_] |4410| 
	.dwpsn	file "../Source/prod.c",line 4408,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4408| 
        ; branchcc occurs ; [] |4408| 
	.dwpsn	file "../Source/prod.c",line 4414,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4414| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4414| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4414| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4416,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4416| 
        ANDB      AL,#0xff              ; [CPU_] |4416| 
        MOV       *XAR4++,AL            ; [CPU_] |4416| 
	.dwpsn	file "../Source/prod.c",line 4417,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4417| 
        LSR       AL,8                  ; [CPU_] |4417| 
        MOV       *XAR4++,AL            ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4415,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4415| 
        ; branchcc occurs ; [] |4415| 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4420| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4422,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4422| 
        ANDB      AL,#0xff              ; [CPU_] |4422| 
        MOV       *XAR4++,AL            ; [CPU_] |4422| 
	.dwpsn	file "../Source/prod.c",line 4423,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4423| 
        LSR       AL,8                  ; [CPU_] |4423| 
        MOV       *XAR4++,AL            ; [CPU_] |4423| 
	.dwpsn	file "../Source/prod.c",line 4421,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4421| 
        ; branchcc occurs ; [] |4421| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4426| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L252:    
	.dwpsn	file "../Source/prod.c",line 4428,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4428| 
        ANDB      AL,#0xff              ; [CPU_] |4428| 
        MOV       *XAR4++,AL            ; [CPU_] |4428| 
	.dwpsn	file "../Source/prod.c",line 4429,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4429| 
        LSR       AL,8                  ; [CPU_] |4429| 
        MOV       *XAR4++,AL            ; [CPU_] |4429| 
	.dwpsn	file "../Source/prod.c",line 4427,column 17,is_stmt,isa 0
        BANZ      $C$L252,AR6--         ; [CPU_] |4427| 
        ; branchcc occurs ; [] |4427| 
	.dwpsn	file "../Source/prod.c",line 4432,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |4432| 
        MOV       *+FP[AR0],#1          ; [CPU_] |4432| 
	.dwpsn	file "../Source/prod.c",line 4417,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4417| 
        MOV       *+FP[AR0],#15         ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4434,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |4434| 
        ; branch occurs ; [] |4434| 
$C$L253:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4344| 
        B         $C$L322,LO            ; [CPU_] |4344| 
        ; branchcc occurs ; [] |4344| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4344| 
        MOVL      XAR0,#66              ; [CPU_] |4344| 
        MOVL      ACC,XAR5              ; [CPU_] |4344| 
        ADDB      ACC,#2                ; [CPU_] |4344| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4344| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4344| 
        B         $C$L322,LT            ; [CPU_] |4344| 
        ; branchcc occurs ; [] |4344| 
        ADDB      XAR4,#2               ; [CPU_] |4344| 
        MOVL      XAR0,#66              ; [CPU_] |4344| 
        CMPB      AL,#4                 ; [CPU_] |4344| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4344| 
        B         $C$L322,GEQ           ; [CPU_] |4344| 
        ; branchcc occurs ; [] |4344| 
	.dwpsn	file "../Source/prod.c",line 4349,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |4349| 
	.dwpsn	file "../Source/prod.c",line 4350,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4350| 
	.dwpsn	file "../Source/prod.c",line 4349,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AL          ; [CPU_] |4349| 
	.dwpsn	file "../Source/prod.c",line 4352,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4352| 
        MOVL      XAR0,#66              ; [CPU_] |4352| 
	.dwpsn	file "../Source/prod.c",line 4350,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4350| 
	.dwpsn	file "../Source/prod.c",line 4352,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4352| 
        MOVL      XAR0,#94              ; [CPU_] |4352| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4352| 
        MOVL      XAR0,#40              ; [CPU_] |4352| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4352| 
        MOVB      AL,#10                ; [CPU_] |4352| 
        MPYU      ACC,T,AL              ; [CPU_] |4352| 
        ADDL      ACC,XAR6              ; [CPU_] |4352| 
        ADDB      ACC,#46               ; [CPU_] |4352| 
        MOVL      XAR5,ACC              ; [CPU_] |4352| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4354,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4354| 
        ANDB      AL,#0xff              ; [CPU_] |4354| 
        MOV       *XAR4++,AL            ; [CPU_] |4354| 
	.dwpsn	file "../Source/prod.c",line 4355,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4355| 
        LSR       AL,8                  ; [CPU_] |4355| 
        MOV       *XAR4++,AL            ; [CPU_] |4355| 
	.dwpsn	file "../Source/prod.c",line 4353,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR0--         ; [CPU_] |4353| 
        ; branchcc occurs ; [] |4353| 
	.dwpsn	file "../Source/prod.c",line 4358,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4358| 
        MPYU      ACC,T,AL              ; [CPU_] |4358| 
        ADDL      ACC,XAR6              ; [CPU_] |4358| 
        MOVL      XAR7,ACC              ; [CPU_] |4358| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |4358| 
        ADDB      XAR7,#48              ; [CPU_] |4358| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4360,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4360| 
        ANDB      AL,#0xff              ; [CPU_] |4360| 
        MOV       *XAR4++,AL            ; [CPU_] |4360| 
	.dwpsn	file "../Source/prod.c",line 4361,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4361| 
        LSR       AL,8                  ; [CPU_] |4361| 
        MOV       *XAR4++,AL            ; [CPU_] |4361| 
	.dwpsn	file "../Source/prod.c",line 4359,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR6--         ; [CPU_] |4359| 
        ; branchcc occurs ; [] |4359| 
	.dwpsn	file "../Source/prod.c",line 4355,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4355| 
	.dwpsn	file "../Source/prod.c",line 4364,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4364| 
	.dwpsn	file "../Source/prod.c",line 4355,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#15         ; [CPU_] |4355| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L256:    
	.dwpsn	file "../Source/prod.c",line 4366,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4366| 
        ANDB      AL,#0xff              ; [CPU_] |4366| 
        MOV       *XAR4++,AL            ; [CPU_] |4366| 
	.dwpsn	file "../Source/prod.c",line 4367,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4367| 
        LSR       AL,8                  ; [CPU_] |4367| 
        MOV       *XAR4++,AL            ; [CPU_] |4367| 
	.dwpsn	file "../Source/prod.c",line 4365,column 17,is_stmt,isa 0
        BANZ      $C$L256,AR0--         ; [CPU_] |4365| 
        ; branchcc occurs ; [] |4365| 
        B         $C$L747,UNC           ; [CPU_] |4365| 
        ; branch occurs ; [] |4365| 
$C$L257:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3986,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3986| 
        B         $C$L322,LO            ; [CPU_] |3986| 
        ; branchcc occurs ; [] |3986| 
        MOVL      ACC,XAR4              ; [CPU_] |3986| 
        MOVL      XAR0,#66              ; [CPU_] |3986| 
        ADDB      ACC,#2                ; [CPU_] |3986| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3986| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3986| 
        B         $C$L322,LT            ; [CPU_] |3986| 
        ; branchcc occurs ; [] |3986| 
        MOVL      XAR5,XAR4             ; [CPU_] |3986| 
        MOVL      XAR0,#66              ; [CPU_] |3986| 
        CMPB      AL,#20                ; [CPU_] |3986| 
        ADDB      XAR5,#2               ; [CPU_] |3986| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3986| 
        B         $C$L322,GEQ           ; [CPU_] |3986| 
        ; branchcc occurs ; [] |3986| 
	.dwpsn	file "../Source/prod.c",line 3990,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |3990| 
	.dwpsn	file "../Source/prod.c",line 3991,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3991| 
	.dwpsn	file "../Source/prod.c",line 3990,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AL          ; [CPU_] |3990| 
	.dwpsn	file "../Source/prod.c",line 3994,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3994| 
        MOVL      XAR0,#66              ; [CPU_] |3994| 
	.dwpsn	file "../Source/prod.c",line 3991,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3994,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3994| 
        MOVL      XAR0,#95              ; [CPU_] |3994| 
        MOV       T,*+FP[AR0]           ; [CPU_] |3994| 
        MOVL      XAR0,#40              ; [CPU_] |3994| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3994| 
        MOVB      AL,#152               ; [CPU_] |3994| 
        MPYU      ACC,T,AL              ; [CPU_] |3994| 
        ADDL      ACC,XAR6              ; [CPU_] |3994| 
        ADDB      ACC,#82               ; [CPU_] |3994| 
        MOVL      XAR4,ACC              ; [CPU_] |3994| 
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_strlen")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3994| 
        ; call occurs [#_strlen] ; [] |3994| 
        MOVZ      AR6,AL                ; [CPU_] |3994| 
	.dwpsn	file "../Source/prod.c",line 3995,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3995| 
        MOV       *+XAR1[3],AL          ; [CPU_] |3995| 
        MOV       *+FP[AR0],#4          ; [CPU_] |3995| 
        MOV       AL,AR6                ; [CPU_] |3995| 
	.dwpsn	file "../Source/prod.c",line 3996,column 17,is_stmt,isa 0
        B         $C$L259,EQ            ; [CPU_] |3996| 
        ; branchcc occurs ; [] |3996| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#95              ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3996,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3996| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 3997,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3997| 
        MOVL      XAR0,#91              ; [CPU_] |3997| 
        MOV       *XAR4++,AL            ; [CPU_] |3997| 
	.dwpsn	file "../Source/prod.c",line 3996,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3996| 
	.dwpsn	file "../Source/prod.c",line 3997,column 6,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |3997| 
        MOVL      XAR0,#91              ; [CPU_] |3997| 
        ADDB      AL,#1                 ; [CPU_] |3997| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3997| 
	.dwpsn	file "../Source/prod.c",line 3996,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3996| 
        CMP       AL,AH                 ; [CPU_] |3996| 
        B         $C$L258,HI            ; [CPU_] |3996| 
        ; branchcc occurs ; [] |3996| 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 4001,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |4001| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4001| 
        MOVL      XAR0,#40              ; [CPU_] |4001| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4001| 
        MOVB      AL,#152               ; [CPU_] |4001| 
        MPYU      ACC,T,AL              ; [CPU_] |4001| 
        ADDL      ACC,XAR6              ; [CPU_] |4001| 
        MOVL      XAR4,ACC              ; [CPU_] |4001| 
        MOVL      XAR1,ACC              ; [CPU_] |4001| 
        ADDB      XAR4,#98              ; [CPU_] |4001| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_strlen")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4001| 
        ; call occurs [#_strlen] ; [] |4001| 
        MOVL      XAR0,#44              ; [CPU_] |4001| 
        MOVZ      AR6,AL                ; [CPU_] |4001| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4001| 
	.dwpsn	file "../Source/prod.c",line 4002,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4002| 
        MOVZ      AR7,*+FP[AR0]         ; [CPU_] |4002| 
        SETC      SXM                   ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] |4002| 
        MOVL      XAR4,ACC              ; [CPU_] |4002| 
        MOVL      XAR0,#91              ; [CPU_] |4002| 
        MOV       AL,AR7                ; [CPU_] |4002| 
        ADDB      AL,#1                 ; [CPU_] |4002| 
        MOV       *XAR4++,AR6           ; [CPU_] |4002| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4002| 
        MOV       AL,AR6                ; [CPU_] |4002| 
	.dwpsn	file "../Source/prod.c",line 4003,column 17,is_stmt,isa 0
        B         $C$L261,EQ            ; [CPU_] |4003| 
        ; branchcc occurs ; [] |4003| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4003,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4003| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 4004,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4004| 
        MOVL      XAR0,#91              ; [CPU_] |4004| 
        MOV       *XAR4++,AL            ; [CPU_] |4004| 
	.dwpsn	file "../Source/prod.c",line 4003,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4003| 
	.dwpsn	file "../Source/prod.c",line 4004,column 6,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |4004| 
        MOVL      XAR0,#91              ; [CPU_] |4004| 
        ADDB      AL,#1                 ; [CPU_] |4004| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4004| 
	.dwpsn	file "../Source/prod.c",line 4003,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4003| 
        CMP       AL,AH                 ; [CPU_] |4003| 
        B         $C$L260,HI            ; [CPU_] |4003| 
        ; branchcc occurs ; [] |4003| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 4008,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4008| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |4008| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4010,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4010| 
        ANDB      AL,#0xff              ; [CPU_] |4010| 
        MOV       *XAR4++,AL            ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4011,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4011| 
        LSR       AL,8                  ; [CPU_] |4011| 
        MOV       *XAR4++,AL            ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4009,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4009| 
        ; branchcc occurs ; [] |4009| 
	.dwpsn	file "../Source/prod.c",line 4016,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4016| 
	.dwpsn	file "../Source/prod.c",line 4019,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4019| 
	.dwpsn	file "../Source/prod.c",line 4016,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4016| 
        MOV       *XAR4++,AL            ; [CPU_] |4016| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4019,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |4019| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4021,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4021| 
        ANDB      AL,#0xff              ; [CPU_] |4021| 
        MOV       *XAR4++,AL            ; [CPU_] |4021| 
	.dwpsn	file "../Source/prod.c",line 4022,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4022| 
        LSR       AL,8                  ; [CPU_] |4022| 
        MOV       *XAR4++,AL            ; [CPU_] |4022| 
	.dwpsn	file "../Source/prod.c",line 4020,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4020| 
        ; branchcc occurs ; [] |4020| 
	.dwpsn	file "../Source/prod.c",line 4027,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4027| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4027| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4029,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4029| 
        ANDB      AL,#0xff              ; [CPU_] |4029| 
        MOV       *XAR4++,AL            ; [CPU_] |4029| 
	.dwpsn	file "../Source/prod.c",line 4030,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4030| 
        LSR       AL,8                  ; [CPU_] |4030| 
        MOV       *XAR4++,AL            ; [CPU_] |4030| 
	.dwpsn	file "../Source/prod.c",line 4028,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4028| 
        ; branchcc occurs ; [] |4028| 
	.dwpsn	file "../Source/prod.c",line 4035,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4035| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4041,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4035,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4038,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4038| 
	.dwpsn	file "../Source/prod.c",line 4035,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4038,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4038| 
	.dwpsn	file "../Source/prod.c",line 4041,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4038,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4038| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4038| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4043,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4043| 
        ANDB      AL,#0xff              ; [CPU_] |4043| 
        MOV       *XAR4++,AL            ; [CPU_] |4043| 
	.dwpsn	file "../Source/prod.c",line 4044,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4044| 
        LSR       AL,8                  ; [CPU_] |4044| 
        MOV       *XAR4++,AL            ; [CPU_] |4044| 
	.dwpsn	file "../Source/prod.c",line 4042,column 17,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4042| 
        ; branchcc occurs ; [] |4042| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4011,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4011| 
        ADDB      AL,#23                ; [CPU_] |4011| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4049,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4049| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4049| 
        CMPB      AL,#2                 ; [CPU_] |4049| 
        B         $C$L268,EQ            ; [CPU_] |4049| 
        ; branchcc occurs ; [] |4049| 
	.dwpsn	file "../Source/prod.c",line 4087,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4087| 
        ADDB      ACC,#178              ; [CPU_] |4087| 
        MOVL      XAR5,ACC              ; [CPU_] |4087| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4085,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4085| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4089,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4089| 
        ANDB      AL,#0xff              ; [CPU_] |4089| 
        MOV       *XAR4++,AL            ; [CPU_] |4089| 
	.dwpsn	file "../Source/prod.c",line 4090,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4090| 
        LSR       AL,8                  ; [CPU_] |4090| 
        MOV       *XAR4++,AL            ; [CPU_] |4090| 
	.dwpsn	file "../Source/prod.c",line 4088,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4088| 
        ; branchcc occurs ; [] |4088| 
	.dwpsn	file "../Source/prod.c",line 4094,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4094| 
        MOVL      XAR0,#91              ; [CPU_] |4094| 
        ADDB      ACC,#200              ; [CPU_] |4094| 
        MOVL      XAR5,ACC              ; [CPU_] |4094| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4094| 
	.dwpsn	file "../Source/prod.c",line 4085,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4085| 
        ADDB      AL,#9                 ; [CPU_] |4085| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4085| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4096,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4096| 
        ANDB      AL,#0xff              ; [CPU_] |4096| 
        MOV       *XAR4++,AL            ; [CPU_] |4096| 
	.dwpsn	file "../Source/prod.c",line 4097,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4097| 
        LSR       AL,8                  ; [CPU_] |4097| 
        MOV       *XAR4++,AL            ; [CPU_] |4097| 
	.dwpsn	file "../Source/prod.c",line 4095,column 18,is_stmt,isa 0
        BANZ      $C$L267,AR0--         ; [CPU_] |4095| 
        ; branchcc occurs ; [] |4095| 
        B         $C$L277,UNC           ; [CPU_] |4095| 
        ; branch occurs ; [] |4095| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4050| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4051,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4050,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4050| 
        MOVL      XAR0,#91              ; [CPU_] |4050| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4050| 
        MOVL      XAR0,#91              ; [CPU_] |4050| 
        ADDB      AL,#1                 ; [CPU_] |4050| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4050| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4051,column 11,is_stmt,isa 0
        B         $C$L272,UNC           ; [CPU_] |4051| 
        ; branch occurs ; [] |4051| 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4053,column 7,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |4053| 
        MOV       ACC,AL                ; [CPU_] |4053| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4053| 
        MOVL      XAR6,ACC              ; [CPU_] |4053| 
        MOVL      XAR0,#40              ; [CPU_] |4053| 
        MOVB      AL,#76                ; [CPU_] |4053| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4053| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4053| 
        ADDL      ACC,XAR6              ; [CPU_] |4053| 
        LSL       ACC,1                 ; [CPU_] |4053| 
        ADDL      ACC,XAR7              ; [CPU_] |4053| 
        ADDB      ACC,#130              ; [CPU_] |4053| 
        MOVL      XAR7,ACC              ; [CPU_] |4053| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4055,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4055| 
        ANDB      AL,#0xff              ; [CPU_] |4055| 
        MOV       *XAR4++,AL            ; [CPU_] |4055| 
	.dwpsn	file "../Source/prod.c",line 4056,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4056| 
        LSR       AL,8                  ; [CPU_] |4056| 
        MOV       *XAR4++,AL            ; [CPU_] |4056| 
	.dwpsn	file "../Source/prod.c",line 4054,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR6--         ; [CPU_] |4054| 
        ; branchcc occurs ; [] |4054| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4062,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4062| 
        ANDB      AL,#0xff              ; [CPU_] |4062| 
        MOV       *XAR4++,AL            ; [CPU_] |4062| 
	.dwpsn	file "../Source/prod.c",line 4063,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4063| 
        LSR       AL,8                  ; [CPU_] |4063| 
        MOV       *XAR4++,AL            ; [CPU_] |4063| 
	.dwpsn	file "../Source/prod.c",line 4061,column 19,is_stmt,isa 0
        BANZ      $C$L271,AR0--         ; [CPU_] |4061| 
        ; branchcc occurs ; [] |4061| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4051,column 51,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4051| 
        ADDB      AL,#1                 ; [CPU_] |4051| 
        MOV       PL,AL                 ; [CPU_] |4051| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4051| 
	.dwpsn	file "../Source/prod.c",line 4056,column 8,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4056| 
        ADDB      AL,#8                 ; [CPU_] |4056| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4056| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4051,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4051| 
        MOV       AL,PL                 ; [CPU_] |4051| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4051| 
        B         $C$L269,LT            ; [CPU_] |4051| 
        ; branchcc occurs ; [] |4051| 
	.dwpsn	file "../Source/prod.c",line 4068,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4068| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L276,UNC           ; [CPU_] |4068| 
        ; branch occurs ; [] |4068| 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4070,column 7,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |4070| 
        MOV       ACC,AR5               ; [CPU_] |4070| 
        MOV       T,*+FP[AR0]           ; [CPU_] |4070| 
        MOVL      P,ACC                 ; [CPU_] |4070| 
        MOVL      XAR0,#40              ; [CPU_] |4070| 
        MOVB      AL,#76                ; [CPU_] |4070| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4070| 
        MPYU      ACC,T,AL              ; [CPU_] |4070| 
        ADDL      ACC,P                 ; [CPU_] |4070| 
        LSL       ACC,1                 ; [CPU_] |4070| 
        ADDL      ACC,XAR6              ; [CPU_] |4070| 
        ADDB      ACC,#178              ; [CPU_] |4070| 
        MOVL      XAR7,ACC              ; [CPU_] |4070| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4072,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4072| 
        ANDB      AL,#0xff              ; [CPU_] |4072| 
        MOV       *XAR4++,AL            ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4073,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4073| 
        LSR       AL,8                  ; [CPU_] |4073| 
        MOV       *XAR4++,AL            ; [CPU_] |4073| 
	.dwpsn	file "../Source/prod.c",line 4071,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR6--         ; [CPU_] |4071| 
        ; branchcc occurs ; [] |4071| 
	.dwpsn	file "../Source/prod.c",line 4077,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4077| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4079,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4079| 
        ANDB      AL,#0xff              ; [CPU_] |4079| 
        MOV       *XAR4++,AL            ; [CPU_] |4079| 
	.dwpsn	file "../Source/prod.c",line 4080,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4080| 
        LSR       AL,8                  ; [CPU_] |4080| 
        MOV       *XAR4++,AL            ; [CPU_] |4080| 
	.dwpsn	file "../Source/prod.c",line 4078,column 19,is_stmt,isa 0
        BANZ      $C$L275,AR0--         ; [CPU_] |4078| 
        ; branchcc occurs ; [] |4078| 
	.dwpsn	file "../Source/prod.c",line 4068,column 55,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4068| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4068| 
        ADDB      XAR5,#1               ; [CPU_] |4068| 
	.dwpsn	file "../Source/prod.c",line 4073,column 8,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4073| 
        ADDB      AL,#8                 ; [CPU_] |4073| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4073| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4084,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4084| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4084| 
        ADDB      AL,#-1                ; [CPU_] |4084| 
        CMP       AL,AR5                ; [CPU_] |4084| 
        B         $C$L273,GT            ; [CPU_] |4084| 
        ; branchcc occurs ; [] |4084| 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4103,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4103| 
        ADDB      ACC,#222              ; [CPU_] |4103| 
        MOVL      XAR5,ACC              ; [CPU_] |4103| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4105,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4105| 
        ANDB      AL,#0xff              ; [CPU_] |4105| 
        MOV       *XAR4++,AL            ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4106,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4106| 
        LSR       AL,8                  ; [CPU_] |4106| 
        MOV       *XAR4++,AL            ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4104,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4104| 
        ; branchcc occurs ; [] |4104| 
	.dwpsn	file "../Source/prod.c",line 4111,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4111| 
        ADDB      ACC,#224              ; [CPU_] |4111| 
        MOVL      XAR5,ACC              ; [CPU_] |4111| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4113,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4113| 
        ANDB      AL,#0xff              ; [CPU_] |4113| 
        MOV       *XAR4++,AL            ; [CPU_] |4113| 
	.dwpsn	file "../Source/prod.c",line 4114,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4114| 
        LSR       AL,8                  ; [CPU_] |4114| 
        MOV       *XAR4++,AL            ; [CPU_] |4114| 
	.dwpsn	file "../Source/prod.c",line 4112,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4112| 
        ; branchcc occurs ; [] |4112| 
	.dwpsn	file "../Source/prod.c",line 4119,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4119| 
        ADDB      ACC,#228              ; [CPU_] |4119| 
        MOVL      XAR5,ACC              ; [CPU_] |4119| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4121,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4121| 
        ANDB      AL,#0xff              ; [CPU_] |4121| 
        MOV       *XAR4++,AL            ; [CPU_] |4121| 
	.dwpsn	file "../Source/prod.c",line 4122,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4122| 
        LSR       AL,8                  ; [CPU_] |4122| 
        MOV       *XAR4++,AL            ; [CPU_] |4122| 
	.dwpsn	file "../Source/prod.c",line 4120,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4120| 
        ; branchcc occurs ; [] |4120| 
	.dwpsn	file "../Source/prod.c",line 4127,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4127| 
        ADDB      ACC,#230              ; [CPU_] |4127| 
        MOVL      XAR5,ACC              ; [CPU_] |4127| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L281:    
	.dwpsn	file "../Source/prod.c",line 4129,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4129| 
        ANDB      AL,#0xff              ; [CPU_] |4129| 
        MOV       *XAR4++,AL            ; [CPU_] |4129| 
	.dwpsn	file "../Source/prod.c",line 4130,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4130| 
        LSR       AL,8                  ; [CPU_] |4130| 
        MOV       *XAR4++,AL            ; [CPU_] |4130| 
	.dwpsn	file "../Source/prod.c",line 4128,column 17,is_stmt,isa 0
        BANZ      $C$L281,AR0--         ; [CPU_] |4128| 
        ; branchcc occurs ; [] |4128| 
	.dwpsn	file "../Source/prod.c",line 4135,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4135| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4135| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4135| 
        MOVL      XAR0,#91              ; [CPU_] |4135| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4135| 
	.dwpsn	file "../Source/prod.c",line 4106,column 6,is_stmt,isa 0
        ADDB      AL,#17                ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4138,column 5,is_stmt,isa 0
        B         $C$L306,UNC           ; [CPU_] |4138| 
        ; branch occurs ; [] |4138| 
$C$L282:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3928,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3928| 
        B         $C$L322,LO            ; [CPU_] |3928| 
        ; branchcc occurs ; [] |3928| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3928| 
        MOVL      XAR0,#66              ; [CPU_] |3928| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3928| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3928| 
        B         $C$L322,LT            ; [CPU_] |3928| 
        ; branchcc occurs ; [] |3928| 
        CMPB      AL,#4                 ; [CPU_] |3928| 
        B         $C$L322,GEQ           ; [CPU_] |3928| 
        ; branchcc occurs ; [] |3928| 
	.dwpsn	file "../Source/prod.c",line 3932,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3932| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3934,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3934| 
        MOVL      XAR0,#40              ; [CPU_] |3934| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3934| 
        MPYB      ACC,T,#10             ; [CPU_] |3934| 
        ADDL      ACC,XAR6              ; [CPU_] |3934| 
        MOVL      XAR4,ACC              ; [CPU_] |3934| 
        MOVB      XAR0,#42              ; [CPU_] |3934| 
        MOVL      P,ACC                 ; [CPU_] |3934| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3934| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOV       *+XAR5[3],AL          ; [CPU_] |3934| 
	.dwpsn	file "../Source/prod.c",line 3941,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3941| 
        ADDB      XAR5,#44              ; [CPU_] |3941| 
        MOVL      XAR7,XAR5             ; [CPU_] |3941| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3938,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3938| 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3944,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3944| 
        ANDB      AL,#0xff              ; [CPU_] |3944| 
        MOV       *XAR4++,AL            ; [CPU_] |3944| 
	.dwpsn	file "../Source/prod.c",line 3945,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3945| 
        LSR       AL,8                  ; [CPU_] |3945| 
        MOV       *XAR4++,AL            ; [CPU_] |3945| 
	.dwpsn	file "../Source/prod.c",line 3942,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3942| 
        ; branchcc occurs ; [] |3942| 
	.dwpsn	file "../Source/prod.c",line 3949,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |3949| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3952,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |3952| 
        ANDB      AL,#0xff              ; [CPU_] |3952| 
        MOV       *XAR4++,AL            ; [CPU_] |3952| 
	.dwpsn	file "../Source/prod.c",line 3953,column 6,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |3953| 
        LSR       AL,8                  ; [CPU_] |3953| 
        MOV       *XAR4++,AL            ; [CPU_] |3953| 
	.dwpsn	file "../Source/prod.c",line 3950,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR0--         ; [CPU_] |3950| 
        ; branchcc occurs ; [] |3950| 
	.dwpsn	file "../Source/prod.c",line 3957,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3957| 
        ADDB      XAR5,#46              ; [CPU_] |3957| 
        MOVL      XAR7,XAR5             ; [CPU_] |3957| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3960,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3960| 
        ANDB      AL,#0xff              ; [CPU_] |3960| 
        MOV       *XAR4++,AL            ; [CPU_] |3960| 
	.dwpsn	file "../Source/prod.c",line 3961,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3961| 
        LSR       AL,8                  ; [CPU_] |3961| 
        MOV       *XAR4++,AL            ; [CPU_] |3961| 
	.dwpsn	file "../Source/prod.c",line 3958,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3958| 
        ; branchcc occurs ; [] |3958| 
	.dwpsn	file "../Source/prod.c",line 3965,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3965| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3968,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3968| 
        ANDB      AL,#0xff              ; [CPU_] |3968| 
        MOV       *XAR4++,AL            ; [CPU_] |3968| 
	.dwpsn	file "../Source/prod.c",line 3969,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3969| 
        LSR       AL,8                  ; [CPU_] |3969| 
        MOV       *XAR4++,AL            ; [CPU_] |3969| 
	.dwpsn	file "../Source/prod.c",line 3966,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3966| 
        ; branchcc occurs ; [] |3966| 
	.dwpsn	file "../Source/prod.c",line 3938,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3938| 
        MOV       *+FP[AR0],#28         ; [CPU_] |3938| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L287:    
	.dwpsn	file "../Source/prod.c",line 3976,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3976| 
        ANDB      AL,#0xff              ; [CPU_] |3976| 
        MOV       *XAR4++,AL            ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3977,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3977| 
        LSR       AL,8                  ; [CPU_] |3977| 
        MOV       *XAR4++,AL            ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3974,column 17,is_stmt,isa 0
        BANZ      $C$L287,AR0--         ; [CPU_] |3974| 
        ; branchcc occurs ; [] |3974| 
        B         $C$L747,UNC           ; [CPU_] |3974| 
        ; branch occurs ; [] |3974| 
$C$L288:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3882,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3882| 
        B         $C$L322,LO            ; [CPU_] |3882| 
        ; branchcc occurs ; [] |3882| 
	.dwpsn	file "../Source/prod.c",line 3886,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3886| 
        B         $C$L289,EQ            ; [CPU_] |3886| 
        ; branchcc occurs ; [] |3886| 
        CMPB      AL,#1                 ; [CPU_] |3886| 
        B         $C$L289,EQ            ; [CPU_] |3886| 
        ; branchcc occurs ; [] |3886| 
        CMPB      AL,#2                 ; [CPU_] |3886| 
        B         $C$L289,EQ            ; [CPU_] |3886| 
        ; branchcc occurs ; [] |3886| 
        ADDB      XAR4,#2               ; [CPU_] |3886| 
        MOVL      XAR0,#66              ; [CPU_] |3886| 
        CMPB      AL,#3                 ; [CPU_] |3886| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3886| 
        B         $C$L322,NEQ           ; [CPU_] |3886| 
        ; branchcc occurs ; [] |3886| 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3892,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3892| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3892| 
        MOVL      XAR4,XAR5             ; [CPU_] |3892| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3892| 
        ADDB      XAR5,#2               ; [CPU_] |3892| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3892| 
        ADDB      XAR4,#6               ; [CPU_] |3892| 
        B         $C$L294,NEQ           ; [CPU_] |3892| 
        ; branchcc occurs ; [] |3892| 
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3893,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3893| 
        B         $C$L322,LO            ; [CPU_] |3893| 
        ; branchcc occurs ; [] |3893| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3898,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3898| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3900,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3900| 
        ADDL      ACC,XT                ; [CPU_] |3900| 
	.dwpsn	file "../Source/prod.c",line 3901,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3901| 
	.dwpsn	file "../Source/prod.c",line 3899,column 18,is_stmt,isa 0
        BANZ      $C$L290,AR6--         ; [CPU_] |3899| 
        ; branchcc occurs ; [] |3899| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3904,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3904| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3905,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3905| 
        B         $C$L292,EQ            ; [CPU_] |3905| 
        ; branchcc occurs ; [] |3905| 
	.dwpsn	file "../Source/prod.c",line 3904,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3904| 
        ADDB      XAR4,#1               ; [CPU_] |3904| 
        BANZ      $C$L291,AR0--         ; [CPU_] |3904| 
        ; branchcc occurs ; [] |3904| 
        B         $C$L293,UNC           ; [CPU_] |3904| 
        ; branch occurs ; [] |3904| 
$C$L292:    
	.dwpsn	file "../Source/prod.c",line 3906,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3906| 
        MOVB      XAR0,#35              ; [CPU_] |3906| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3906| 
$C$L293:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3910,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3910| 
        B         $C$L322,EQ            ; [CPU_] |3910| 
        ; branchcc occurs ; [] |3910| 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3916,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3916| 
        MOVL      XAR0,#66              ; [CPU_] |3916| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3916| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3916| 
        ADDB      ACC,#2                ; [CPU_] |3916| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3916| 
        MOVB      XAR0,#34              ; [CPU_] |3916| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3916| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3916| 
        MOVL      XAR0,#44              ; [CPU_] |3916| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3916| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3919,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3919| 
        MOVL      XAR0,#91              ; [CPU_] |3919| 
        MOV       *XAR4++,AL            ; [CPU_] |3919| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3919| 
        ADDB      XAR7,#1               ; [CPU_] |3919| 
	.dwpsn	file "../Source/prod.c",line 3918,column 12,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |3918| 
        MOVL      XAR0,#91              ; [CPU_] |3918| 
        MOV       AH,AL                 ; [CPU_] |3918| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3918| 
        MOVL      XAR0,#93              ; [CPU_] |3918| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3918| 
        CMP       AL,AH                 ; [CPU_] |3918| 
        B         $C$L295,HI            ; [CPU_] |3918| 
        ; branchcc occurs ; [] |3918| 
        B         $C$L303,UNC           ; [CPU_] |3918| 
        ; branch occurs ; [] |3918| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3866,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3866| 
        MOVB      XAR0,#34              ; [CPU_] |3866| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3866| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3866| 
        MOVL      XAR0,#91              ; [CPU_] |3866| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3866| 
        MOV       *+FP[AR0],#3          ; [CPU_] |3866| 
	.dwpsn	file "../Source/prod.c",line 3868,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3868| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3868| 
        CMPB      AL,#1                 ; [CPU_] |3868| 
        B         $C$L297,EQ            ; [CPU_] |3868| 
        ; branchcc occurs ; [] |3868| 
        MOVB      XAR1,#34              ; [CPU_] |3868| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3868| 
        B         $C$L747,NEQ           ; [CPU_] |3868| 
        ; branchcc occurs ; [] |3868| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3870,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3870| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3870| 
        MOVL      XAR0,#74              ; [CPU_] |3870| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3870| 
        MOVL      XAR0,#44              ; [CPU_] |3870| 
        ADDL      ACC,XAR6              ; [CPU_] |3870| 
        MOVL      XAR5,ACC              ; [CPU_] |3870| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3870| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3873,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3873| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      AL,#4                 ; [CPU_] |3873| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |3873| 
$C$L298:    
	.dwpsn	file "../Source/prod.c",line 3872,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3872| 
        ANDB      AL,#0xff              ; [CPU_] |3872| 
        MOV       *XAR4++,AL            ; [CPU_] |3872| 
	.dwpsn	file "../Source/prod.c",line 3873,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3873| 
        LSR       AL,8                  ; [CPU_] |3873| 
        MOV       *XAR4++,AL            ; [CPU_] |3873| 
	.dwpsn	file "../Source/prod.c",line 3871,column 18,is_stmt,isa 0
        BANZ      $C$L298,AR6--         ; [CPU_] |3871| 
        ; branchcc occurs ; [] |3871| 
        B         $C$L747,UNC           ; [CPU_] |3871| 
        ; branch occurs ; [] |3871| 
$C$L299:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3845,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3845| 
        B         $C$L322,LO            ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3845| 
        MOVL      XAR0,#66              ; [CPU_] |3845| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3845| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3845| 
        ADDB      AL,#3                 ; [CPU_] |3845| 
        MOVL      XAR0,#93              ; [CPU_] |3845| 
        CMP       AL,*+FP[AR0]          ; [CPU_] |3845| 
        B         $C$L322,HI            ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3850,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3850| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L301,UNC           ; [CPU_] |3850| 
        ; branch occurs ; [] |3850| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3851,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3851| 
        ADD       PL,AL                 ; [CPU_] |3851| 
        MOVL      ACC,XAR7              ; [CPU_] |3851| 
        ADD       ACC,PL                ; [CPU_] |3851| 
        MOVL      XAR7,ACC              ; [CPU_] |3851| 
	.dwpsn	file "../Source/prod.c",line 3850,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3850| 
	.dwpsn	file "../Source/prod.c",line 3851,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3851| 
        MOV       *XAR4++,AL            ; [CPU_] |3851| 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3850,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3850| 
        MOVL      XAR0,#66              ; [CPU_] |3850| 
        MOVL      ACC,XAR7              ; [CPU_] |3850| 
        ADDB      ACC,#2                ; [CPU_] |3850| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3850| 
        MOV       AL,AR6                ; [CPU_] |3850| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3850| 
        B         $C$L300,LT            ; [CPU_] |3850| 
        ; branchcc occurs ; [] |3850| 
	.dwpsn	file "../Source/prod.c",line 3853,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3853| 
        MOVL      XAR0,#76              ; [CPU_] |3853| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3853| 
	.dwpsn	file "../Source/prod.c",line 3856,column 5,is_stmt,isa 0
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_strlen")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3856| 
        ; call occurs [#_strlen] ; [] |3856| 
	.dwpsn	file "../Source/prod.c",line 3857,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3857| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3857| 
	.dwpsn	file "../Source/prod.c",line 3858,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3858| 
	.dwpsn	file "../Source/prod.c",line 3857,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3857| 
        MOV       *+FP[AR0],#3          ; [CPU_] |3857| 
	.dwpsn	file "../Source/prod.c",line 3858,column 17,is_stmt,isa 0
        B         $C$L303,EQ            ; [CPU_] |3858| 
        ; branchcc occurs ; [] |3858| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3858,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3858| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L302:    
	.dwpsn	file "../Source/prod.c",line 3859,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3859| 
        MOVL      XAR0,#91              ; [CPU_] |3859| 
        MOV       *XAR5++,AH            ; [CPU_] |3859| 
	.dwpsn	file "../Source/prod.c",line 3858,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3858| 
	.dwpsn	file "../Source/prod.c",line 3859,column 6,is_stmt,isa 0
        MOV       AH,*+FP[AR0]          ; [CPU_] |3859| 
        ADDB      AH,#1                 ; [CPU_] |3859| 
        MOVL      XAR0,#91              ; [CPU_] |3859| 
	.dwpsn	file "../Source/prod.c",line 3858,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3858| 
	.dwpsn	file "../Source/prod.c",line 3859,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |3859| 
	.dwpsn	file "../Source/prod.c",line 3858,column 17,is_stmt,isa 0
        B         $C$L302,HI            ; [CPU_] |3858| 
        ; branchcc occurs ; [] |3858| 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3854,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |3854| 
        MOV       *+FP[AR0],#1          ; [CPU_] |3854| 
	.dwpsn	file "../Source/prod.c",line 3862,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |3862| 
        ; branch occurs ; [] |3862| 
$C$L304:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3825,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3825| 
        B         $C$L322,LO            ; [CPU_] |3825| 
        ; branchcc occurs ; [] |3825| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3830,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3830| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3830| 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 3832,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3832| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3832| 
	.dwpsn	file "../Source/prod.c",line 3833,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3833| 
        MOV       *XAR5++,AL            ; [CPU_] |3833| 
	.dwpsn	file "../Source/prod.c",line 3834,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3834| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3834| 
        MOV       *XAR4++,AL            ; [CPU_] |3834| 
	.dwpsn	file "../Source/prod.c",line 3835,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3835| 
        MOV       *XAR5++,AL            ; [CPU_] |3835| 
	.dwpsn	file "../Source/prod.c",line 3831,column 17,is_stmt,isa 0
        BANZ      $C$L305,AR6--         ; [CPU_] |3831| 
        ; branchcc occurs ; [] |3831| 
	.dwpsn	file "../Source/prod.c",line 3838,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |3838| 
        MOV       *+FP[AR0],#1          ; [CPU_] |3838| 
        MOVL      XAR0,#91              ; [CPU_] |3838| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3838| 
	.dwpsn	file "../Source/prod.c",line 3835,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3835| 
$C$L306:    
        MOVL      XAR0,#91              ; [CPU_] |3835| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3835| 
	.dwpsn	file "../Source/prod.c",line 3841,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |3841| 
        ; branch occurs ; [] |3841| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 5750,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5750 | cmd_mode = SCI_MODE_ASCII;                                             
; 5751 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5752 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5753 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5750| 
	.dwpsn	file "../Source/prod.c",line 5756,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5756 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_update_units")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5756| 
        ; call occurs [#_update_units] ; [] |5756| 
	.dwpsn	file "../Source/prod.c",line 5749,column 5,is_stmt,isa 0
        MOVL      XAR0,#98              ; [CPU_] |5749| 
        MOV       *+FP[AR0],#0          ; [CPU_] |5749| 
	.dwpsn	file "../Source/prod.c",line 5757,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5757 | break;                                                                 
; 5759 | default:                                                               
; 5761 | // send back NACK?                                                     
; 5763 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L747,UNC           ; [CPU_] |5757| 
        ; branch occurs ; [] |5757| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 5743,column 5,is_stmt,isa 0
        MOVL      XAR0,#99              ; [CPU_] |5743| 
        MOV       *+FP[AR0],#1          ; [CPU_] |5743| 
	.dwpsn	file "../Source/prod.c",line 5745,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |5745| 
        ; branch occurs ; [] |5745| 
$C$L309:    
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4381,column 5,is_stmt,isa 0
        B         $C$L311,UNC           ; [CPU_] |4381| 
        ; branch occurs ; [] |4381| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 4376,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4376| 
$C$L311:    
        MOVB      AL,#0                 ; [CPU_] |4376| 
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_ssr_set")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4376| 
        ; call occurs [#_ssr_set] ; [] |4376| 
	.dwpsn	file "../Source/prod.c",line 4377,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |4377| 
        ; branch occurs ; [] |4377| 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5684,column 5,is_stmt,isa 0
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_conf_read")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5684| 
        ; call occurs [#_conf_read] ; [] |5684| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5687,column 5,is_stmt,isa 0
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5687| 
        ; call occurs [#_ad7738_setcal] ; [] |5687| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5688| 
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5688| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5688| 
	.dwpsn	file "../Source/prod.c",line 5689,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5689| 
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5689| 
        ; call occurs [#_ad7738_resetvall] ; [] |5689| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5693,column 5,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_update_units")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5693| 
        ; call occurs [#_update_units] ; [] |5693| 
	.dwpsn	file "../Source/prod.c",line 5692,column 5,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5692| 
        MOV       *+FP[AR0],#0          ; [CPU_] |5692| 
	.dwpsn	file "../Source/prod.c",line 5695,column 5,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |5695| 
        ; branch occurs ; [] |5695| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5648,column 5,is_stmt,isa 0
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_conf_default")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5648| 
        ; call occurs [#_conf_default] ; [] |5648| 
	.dwpsn	file "../Source/prod.c",line 5651,column 5,is_stmt,isa 0
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5651| 
        ; call occurs [#_lcd_clear] ; [] |5651| 
	.dwpsn	file "../Source/prod.c",line 5652,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5652| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5652| 
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5652| 
        ; call occurs [#_lcd_puts] ; [] |5652| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L314:    
	.dwpsn	file "../Source/prod.c",line 5655,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5655| 
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_delay_us")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5655| 
        ; call occurs [#_delay_us] ; [] |5655| 
	.dwpsn	file "../Source/prod.c",line 5654,column 17,is_stmt,isa 0
        BANZ      $C$L314,AR3--         ; [CPU_] |5654| 
        ; branchcc occurs ; [] |5654| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5659,column 5,is_stmt,isa 0
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_conf_write")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5659| 
        ; call occurs [#_conf_write] ; [] |5659| 
        MOVZ      AR1,AL                ; [CPU_] |5659| 
	.dwpsn	file "../Source/prod.c",line 5660,column 5,is_stmt,isa 0
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5660| 
        ; call occurs [#_ad7738_setcal] ; [] |5660| 
	.dwpsn	file "../Source/prod.c",line 5661,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5661| 
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5661| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5661| 
	.dwpsn	file "../Source/prod.c",line 5662,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5662| 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5662| 
        ; call occurs [#_ad7738_resetvall] ; [] |5662| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
        B         $C$L315,NEQ           ; [CPU_] |5665| 
        ; branchcc occurs ; [] |5665| 
	.dwpsn	file "../Source/prod.c",line 5666,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5666| 
        MOVB      AL,#31                ; [CPU_] |5666| 
        SPM       #0                    ; [CPU_] 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5666| 
        ; call occurs [#_lcd_puts] ; [] |5666| 
	.dwpsn	file "../Source/prod.c",line 5667,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |5667| 
	.dwpsn	file "../Source/prod.c",line 5668,column 6,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |5668| 
	.dwpsn	file "../Source/prod.c",line 5667,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#0          ; [CPU_] |5667| 
	.dwpsn	file "../Source/prod.c",line 5669,column 5,is_stmt,isa 0
        B         $C$L316,UNC           ; [CPU_] |5669| 
        ; branch occurs ; [] |5669| 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5670,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5670| 
        MOVB      AL,#31                ; [CPU_] |5670| 
        SPM       #0                    ; [CPU_] 
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5670| 
        ; call occurs [#_lcd_puts] ; [] |5670| 
	.dwpsn	file "../Source/prod.c",line 5671,column 6,is_stmt,isa 0
        MOV       *-SP[63],#3           ; [CPU_] |5671| 
$C$L316:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L317:    
	.dwpsn	file "../Source/prod.c",line 5674,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5674| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_delay_us")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5674| 
        ; call occurs [#_delay_us] ; [] |5674| 
	.dwpsn	file "../Source/prod.c",line 5673,column 17,is_stmt,isa 0
        BANZ      $C$L317,AR3--         ; [CPU_] |5673| 
        ; branchcc occurs ; [] |5673| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5676,column 5,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5676| 
        ; call occurs [#_lcd_clear] ; [] |5676| 
	.dwpsn	file "../Source/prod.c",line 5677,column 5,is_stmt,isa 0
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_update_units")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5677| 
        ; call occurs [#_update_units] ; [] |5677| 
$C$L319:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5766,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5766 | switch (bincmdresult) {                                                
; 5767 | case OK_SendResult:                                                    
; 5768 |         scia_send_bin(buff, j);         // send back                   
; 5770 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5771 |                 delay_us(2000);                 // 2ms                 
; 5772 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5774 |         break;                                                         
; 5776 | case Error_UnImpl:                                                     
; 5778 |         buff[1] = CmdUnImpl;                                           
; 5779 |         buff[2] = cmdbuff[1];                                          
; 5780 |         scia_send_bin(buff, 3);         // send back                   
; 5781 |         break;                                                         
; 5783 | case Error_Invalid:                                                    
; 5785 |         buff[1] = CmdInvalid;                                          
; 5786 |         buff[2] = cmdbuff[1];                                          
; 5787 |         scia_send_bin(buff, 3);         // send back                   
; 5788 |         break;                                                         
; 5790 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L747,EQ            ; [CPU_] |5766| 
        ; branchcc occurs ; [] |5766| 
        CMPB      AL,#1                 ; [CPU_] |5766| 
        B         $C$L323,EQ            ; [CPU_] |5766| 
        ; branchcc occurs ; [] |5766| 
        CMPB      AL,#2                 ; [CPU_] |5766| 
        B         $C$L322,EQ            ; [CPU_] |5766| 
        ; branchcc occurs ; [] |5766| 
        CMPB      AL,#3                 ; [CPU_] |5766| 
        B         $C$L636,NEQ           ; [CPU_] |5766| 
        ; branchcc occurs ; [] |5766| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5792,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5792 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5792| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5792| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5793,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5793 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5793| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5793| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5793| 
	.dwpsn	file "../Source/prod.c",line 5794,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5794 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5794| 
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5794| 
        ; call occurs [#_scia_send_bin] ; [] |5794| 
	.dwpsn	file "../Source/prod.c",line 5795,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5795 | break;                                                                 
; 5797 | default:                                                               
; 5799 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L636,UNC           ; [CPU_] |5795| 
        ; branch occurs ; [] |5795| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 5785,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5785| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5785| 
	.dwpsn	file "../Source/prod.c",line 5788,column 5,is_stmt,isa 0
        B         $C$L321,UNC           ; [CPU_] |5788| 
        ; branch occurs ; [] |5788| 
$C$L323:    
	.dwpsn	file "../Source/prod.c",line 5778,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5778| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5778| 
	.dwpsn	file "../Source/prod.c",line 5781,column 5,is_stmt,isa 0
        B         $C$L321,UNC           ; [CPU_] |5781| 
        ; branch occurs ; [] |5781| 
$C$L324:    
	.dwpsn	file "../Source/prod.c",line 1008,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1008| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1008| 
        CMPB      AL,#79                ; [CPU_] |1008| 
        B         $C$L326,GT            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#79                ; [CPU_] |1008| 
        B         $C$L447,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#69                ; [CPU_] |1008| 
        B         $C$L325,GT            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#69                ; [CPU_] |1008| 
        B         $C$L507,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#66                ; [CPU_] |1008| 
        B         $C$L593,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#67                ; [CPU_] |1008| 
        B         $C$L534,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#68                ; [CPU_] |1008| 
        B         $C$L516,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        B         $C$L627,UNC           ; [CPU_] |1008| 
        ; branch occurs ; [] |1008| 
$C$L325:    
        CMPB      AL,#70                ; [CPU_] |1008| 
        B         $C$L498,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#72                ; [CPU_] |1008| 
        B         $C$L632,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#76                ; [CPU_] |1008| 
        B         $C$L470,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        B         $C$L627,UNC           ; [CPU_] |1008| 
        ; branch occurs ; [] |1008| 
$C$L326:    
        CMPB      AL,#85                ; [CPU_] |1008| 
        B         $C$L327,GT            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#85                ; [CPU_] |1008| 
        B         $C$L328,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#80                ; [CPU_] |1008| 
        B         $C$L433,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#82                ; [CPU_] |1008| 
        B         $C$L418,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#83                ; [CPU_] |1008| 
        B         $C$L354,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        B         $C$L627,UNC           ; [CPU_] |1008| 
        ; branch occurs ; [] |1008| 
$C$L327:    
        CMPB      AL,#88                ; [CPU_] |1008| 
        B         $C$L630,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        CMPB      AL,#90                ; [CPU_] |1008| 
        B         $C$L628,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
        B         $C$L627,UNC           ; [CPU_] |1008| 
        ; branch occurs ; [] |1008| 
$C$L328:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1176,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1176| 
        B         $C$L627,LO            ; [CPU_] |1176| 
        ; branchcc occurs ; [] |1176| 
	.dwpsn	file "../Source/prod.c",line 1179,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1179| 
        CMPB      AL,#73                ; [CPU_] |1179| 
        B         $C$L329,GT            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        CMPB      AL,#73                ; [CPU_] |1179| 
        B         $C$L343,EQ            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        CMPB      AL,#66                ; [CPU_] |1179| 
        B         $C$L332,EQ            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        CMPB      AL,#67                ; [CPU_] |1179| 
        B         $C$L350,EQ            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        CMPB      AL,#70                ; [CPU_] |1179| 
        B         $C$L348,EQ            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        B         $C$L627,UNC           ; [CPU_] |1179| 
        ; branch occurs ; [] |1179| 
$C$L329:    
        CMPB      AL,#78                ; [CPU_] |1179| 
        B         $C$L330,EQ            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        CMPB      AL,#83                ; [CPU_] |1179| 
        B         $C$L342,EQ            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        CMPB      AL,#87                ; [CPU_] |1179| 
        B         $C$L340,EQ            ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
        B         $C$L627,UNC           ; [CPU_] |1179| 
        ; branch occurs ; [] |1179| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1196,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1196| 
        MOVL      XAR0,#44              ; [CPU_] |1196| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1196| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1196| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1196| 
        MOVL      XAR4,XAR1             ; [CPU_] |1196| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_sprintf")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1196| 
        ; call occurs [#_sprintf] ; [] |1196| 
	.dwpsn	file "../Source/prod.c",line 1197,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1197| 
        MOV       AL,#1024              ; [CPU_] |1197| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1197| 
	.dwpsn	file "../Source/prod.c",line 1196,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1196| 
	.dwpsn	file "../Source/prod.c",line 1197,column 6,is_stmt,isa 0
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1197| 
        ; call occurs [#_scia_getparam] ; [] |1197| 
        CMPB      AL,#31                ; [CPU_] |1197| 
        B         $C$L331,LOS           ; [CPU_] |1197| 
        ; branchcc occurs ; [] |1197| 
	.dwpsn	file "../Source/prod.c",line 1201,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1201| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1201| 
	.dwpsn	file "../Source/prod.c",line 1200,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1200| 
	.dwpsn	file "../Source/prod.c",line 1201,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1201| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1201| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1204,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1204| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1204| 
        MOVL      XAR0,#86              ; [CPU_] |1204| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1204| 
        MOVB      AH,#1                 ; [CPU_] |1204| 
        ADD       AH,AL                 ; [CPU_] |1204| 
        MOVU      ACC,AH                ; [CPU_] |1204| 
        MOVL      XAR5,XAR1             ; [CPU_] |1204| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_memcpy")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1204| 
        ; call occurs [#_memcpy] ; [] |1204| 
        MOVL      XAR4,XAR1             ; [CPU_] |1204| 
	.dwpsn	file "../Source/prod.c",line 1208,column 6,is_stmt,isa 0
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_scia_puts")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1208| 
        ; call occurs [#_scia_puts] ; [] |1208| 
	.dwpsn	file "../Source/prod.c",line 1209,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1209| 
	.dwpsn	file "../Source/prod.c",line 1211,column 6,is_stmt,isa 0
        B         $C$L336,UNC           ; [CPU_] |1211| 
        ; branch occurs ; [] |1211| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1301,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1301| 
        MOVB      XAR0,#34              ; [CPU_] |1301| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1301| 
        CMPB      AL,#3                 ; [CPU_] |1301| 
        B         $C$L339,EQ            ; [CPU_] |1301| 
        ; branchcc occurs ; [] |1301| 
        MOVB      XAR1,#34              ; [CPU_] |1301| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1301| 
        CMPB      AL,#2                 ; [CPU_] |1301| 
        B         $C$L339,EQ            ; [CPU_] |1301| 
        ; branchcc occurs ; [] |1301| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1308,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1308| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] |1308| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1309,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1309| 
        MOVL      XAR0,#44              ; [CPU_] |1309| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1309| 
        MOV       *-SP[3],AL            ; [CPU_] |1309| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1309| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1309| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1309| 
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_sprintf")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1309| 
        ; call occurs [#_sprintf] ; [] |1309| 
        MOVL      XAR0,#44              ; [CPU_] |1309| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1309| 
	.dwpsn	file "../Source/prod.c",line 1310,column 7,is_stmt,isa 0
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_scia_puts")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1310| 
        ; call occurs [#_scia_puts] ; [] |1310| 
        MOV       AL,*-SP[63]           ; [CPU_] |1310| 
	.dwpsn	file "../Source/prod.c",line 1311,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1311| 
        B         $C$L334,GEQ           ; [CPU_] |1311| 
        ; branchcc occurs ; [] |1311| 
	.dwpsn	file "../Source/prod.c",line 1312,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1312| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_scia_puts")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1312| 
        ; call occurs [#_scia_puts] ; [] |1312| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1308,column 18,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |1308| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1308| 
        B         $C$L333,LT            ; [CPU_] |1308| 
        ; branchcc occurs ; [] |1308| 
	.dwpsn	file "../Source/prod.c",line 1315,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1315| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_scia_puts")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1315| 
        ; call occurs [#_scia_puts] ; [] |1315| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1316,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1316| 
        MOVB      XAR0,#35              ; [CPU_] |1316| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1316| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1316| 
        MOV       *-SP[3],AL            ; [CPU_] |1316| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1316| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1316| 
        MOVL      XAR0,#74              ; [CPU_] |1316| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1316| 
        ADDL      ACC,XAR6              ; [CPU_] |1316| 
        MOVL      XAR4,ACC              ; [CPU_] |1316| 
        MOVL      XAR0,#44              ; [CPU_] |1316| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1316| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1316| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1316| 
        MOVL      XAR4,XAR1             ; [CPU_] |1316| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_sprintf")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1316| 
        ; call occurs [#_sprintf] ; [] |1316| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1319| 
	.dwpsn	file "../Source/prod.c",line 1316,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1316| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1319| 
	.dwpsn	file "../Source/prod.c",line 1316,column 6,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |1316| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1319| 
        MOVL      XAR5,XAR1             ; [CPU_] |1319| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1319| 
        ; call occurs [#_scia_getparam] ; [] |1319| 
        MOVL      XAR4,XAR1             ; [CPU_] |1319| 
	.dwpsn	file "../Source/prod.c",line 1320,column 6,is_stmt,isa 0
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1320| 
        ; call occurs [#_scia_puts] ; [] |1320| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1321| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1321| 
        ; call occurs [#_scia_puts] ; [] |1321| 
        MOV       AL,*-SP[63]           ; [CPU_] |1321| 
	.dwpsn	file "../Source/prod.c",line 1322,column 6,is_stmt,isa 0
        B         $C$L338,EQ            ; [CPU_] |1322| 
        ; branchcc occurs ; [] |1322| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1327,column 6,is_stmt,isa 0
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_atoi")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1327| 
        ; call occurs [#_atoi] ; [] |1327| 
        CMPB      AL,#7                 ; [CPU_] |1327| 
        B         $C$L337,HI            ; [CPU_] |1327| 
        ; branchcc occurs ; [] |1327| 
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1333| 
        MOVB      XAR1,#35              ; [CPU_] |1333| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1334,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1334| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1334| 
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1334,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1334| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1334| 
        MOVL      XAR0,#74              ; [CPU_] |1334| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1334| 
$C$L335:    
        ADDL      ACC,XAR6              ; [CPU_] |1334| 
        MOVL      XAR4,ACC              ; [CPU_] |1334| 
        MOVL      XAR0,#44              ; [CPU_] |1334| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1334| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1334| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1334| 
        MOVL      XAR4,XAR1             ; [CPU_] |1334| 
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_sprintf")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1334| 
        ; call occurs [#_sprintf] ; [] |1334| 
        MOVL      XAR4,XAR1             ; [CPU_] |1334| 
	.dwpsn	file "../Source/prod.c",line 1337,column 6,is_stmt,isa 0
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_scia_puts")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1337| 
        ; call occurs [#_scia_puts] ; [] |1337| 
	.dwpsn	file "../Source/prod.c",line 1338,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1338| 
$C$L336:    
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_puts")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1338| 
        ; call occurs [#_scia_puts] ; [] |1338| 
	.dwpsn	file "../Source/prod.c",line 1341,column 6,is_stmt,isa 0
        B         $C$L514,UNC           ; [CPU_] |1341| 
        ; branch occurs ; [] |1341| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1329,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1329| 
	.dwpsn	file "../Source/prod.c",line 1331,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1331| 
        ; branch occurs ; [] |1331| 
$C$L338:    
	.dwpsn	file "../Source/prod.c",line 1323,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1323| 
	.dwpsn	file "../Source/prod.c",line 1325,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1325| 
        ; branch occurs ; [] |1325| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1303,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1303| 
	.dwpsn	file "../Source/prod.c",line 1305,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1305| 
        ; branch occurs ; [] |1305| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1374,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1374| 
        MOVB      XAR0,#40              ; [CPU_] |1374| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1374| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1374| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1374| 
        MOVL      XAR0,#44              ; [CPU_] |1374| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1374| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1374| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_sprintf")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1374| 
        ; call occurs [#_sprintf] ; [] |1374| 
        MOVL      XAR0,#44              ; [CPU_] |1374| 
	.dwpsn	file "../Source/prod.c",line 1376,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1376| 
	.dwpsn	file "../Source/prod.c",line 1374,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1374| 
	.dwpsn	file "../Source/prod.c",line 1376,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1376| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1376| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1376| 
        ; call occurs [#_scia_getparam] ; [] |1376| 
        MOVL      XAR0,#86              ; [CPU_] |1376| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1376,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1376| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_strtod")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1377,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1377| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1377| 
        MOVB      XAR1,#40              ; [CPU_] |1377| 
        MOVL      XAR0,#86              ; [CPU_] |1377| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1377| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1377| 
	.dwpsn	file "../Source/prod.c",line 1378,column 6,is_stmt,isa 0
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_puts")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1378| 
        ; call occurs [#_scia_puts] ; [] |1378| 
	.dwpsn	file "../Source/prod.c",line 1379,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1379| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_scia_puts")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1379| 
        ; call occurs [#_scia_puts] ; [] |1379| 
	.dwpsn	file "../Source/prod.c",line 1381,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1381| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1381| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1381| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1381| 
        MOVB      XAR1,#40              ; [CPU_] |1381| 
        MOVL      XAR0,#44              ; [CPU_] |1381| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1381| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1381| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1381| 
        MOVL      XAR4,XAR1             ; [CPU_] |1381| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_sprintf")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1381| 
        ; call occurs [#_sprintf] ; [] |1381| 
        MOVL      XAR4,XAR1             ; [CPU_] |1381| 
	.dwpsn	file "../Source/prod.c",line 1383,column 6,is_stmt,isa 0
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_scia_puts")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1383| 
        ; call occurs [#_scia_puts] ; [] |1383| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1387,column 6,is_stmt,isa 0
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1387| 
        ; call occurs [#_ad7738_setcal] ; [] |1387| 
$C$L341:    
	.dwpsn	file "../Source/prod.c",line 1388,column 6,is_stmt,isa 0
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_maf_rst")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1388| 
        ; call occurs [#_maf_rst] ; [] |1388| 
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        B         $C$L513,UNC           ; [CPU_] |1390| 
        ; branch occurs ; [] |1390| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1184,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1184| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1184| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1184| 
        MOV       AL,#1024              ; [CPU_] |1184| 
        MOVL      XAR5,XAR1             ; [CPU_] |1184| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1184| 
        ; call occurs [#_scia_getparam] ; [] |1184| 
        MOVL      XAR4,XAR1             ; [CPU_] |1184| 
	.dwpsn	file "../Source/prod.c",line 1186,column 6,is_stmt,isa 0
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_atol")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1186| 
        ; call occurs [#_atol] ; [] |1186| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1186| 
	.dwpsn	file "../Source/prod.c",line 1188,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1188| 
	.dwpsn	file "../Source/prod.c",line 1186,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1186| 
	.dwpsn	file "../Source/prod.c",line 1188,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1188| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1188| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1188| 
	.dwpsn	file "../Source/prod.c",line 1191,column 6,is_stmt,isa 0
        B         $C$L408,UNC           ; [CPU_] |1191| 
        ; branch occurs ; [] |1191| 
$C$L343:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1266,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1266| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] |1266| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1267,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1267| 
        MOVL      XAR0,#44              ; [CPU_] |1267| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1267| 
        MOV       *-SP[3],AL            ; [CPU_] |1267| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1267| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1267| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1267| 
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_sprintf")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1267| 
        ; call occurs [#_sprintf] ; [] |1267| 
        MOVL      XAR0,#44              ; [CPU_] |1267| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1267| 
	.dwpsn	file "../Source/prod.c",line 1268,column 7,is_stmt,isa 0
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_scia_puts")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1268| 
        ; call occurs [#_scia_puts] ; [] |1268| 
        MOV       AL,*-SP[63]           ; [CPU_] |1268| 
	.dwpsn	file "../Source/prod.c",line 1269,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1269| 
        B         $C$L345,GEQ           ; [CPU_] |1269| 
        ; branchcc occurs ; [] |1269| 
	.dwpsn	file "../Source/prod.c",line 1270,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1270| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_puts")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1270| 
        ; call occurs [#_scia_puts] ; [] |1270| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1266,column 18,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |1266| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1266| 
        B         $C$L344,LT            ; [CPU_] |1266| 
        ; branchcc occurs ; [] |1266| 
	.dwpsn	file "../Source/prod.c",line 1273,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1273| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_scia_puts")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1273| 
        ; call occurs [#_scia_puts] ; [] |1273| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1274,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1274| 
        MOVB      XAR0,#34              ; [CPU_] |1274| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1274| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1274| 
        MOV       *-SP[3],AL            ; [CPU_] |1274| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1274| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1274| 
        MOVL      XAR0,#72              ; [CPU_] |1274| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1274| 
        ADDL      ACC,XAR6              ; [CPU_] |1274| 
        MOVL      XAR4,ACC              ; [CPU_] |1274| 
        MOVL      XAR0,#44              ; [CPU_] |1274| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1274| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1274| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1274| 
        MOVL      XAR4,XAR1             ; [CPU_] |1274| 
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_sprintf")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1274| 
        ; call occurs [#_sprintf] ; [] |1274| 
	.dwpsn	file "../Source/prod.c",line 1276,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1276| 
	.dwpsn	file "../Source/prod.c",line 1274,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1274| 
	.dwpsn	file "../Source/prod.c",line 1276,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1276| 
        MOV       AL,#1024              ; [CPU_] |1276| 
        MOVL      XAR5,XAR1             ; [CPU_] |1276| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1276| 
        ; call occurs [#_scia_getparam] ; [] |1276| 
        MOV       *-SP[63],AL           ; [CPU_] |1276| 
        MOVL      XAR4,XAR1             ; [CPU_] |1276| 
	.dwpsn	file "../Source/prod.c",line 1277,column 6,is_stmt,isa 0
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_puts")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1277| 
        ; call occurs [#_scia_puts] ; [] |1277| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1278| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_puts")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1278| 
        ; call occurs [#_scia_puts] ; [] |1278| 
        MOV       AL,*-SP[63]           ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1279,column 6,is_stmt,isa 0
        B         $C$L347,EQ            ; [CPU_] |1279| 
        ; branchcc occurs ; [] |1279| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1283,column 6,is_stmt,isa 0
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_atoi")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1283| 
        ; call occurs [#_atoi] ; [] |1283| 
        CMPB      AL,#3                 ; [CPU_] |1283| 
        B         $C$L346,HI            ; [CPU_] |1283| 
        ; branchcc occurs ; [] |1283| 
	.dwpsn	file "../Source/prod.c",line 1289,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1289| 
        MOVB      XAR1,#34              ; [CPU_] |1289| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1289| 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1290| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1290| 
	.dwpsn	file "../Source/prod.c",line 1289,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1289| 
	.dwpsn	file "../Source/prod.c",line 1290,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1290| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1290| 
        MOVL      XAR0,#72              ; [CPU_] |1290| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1290| 
	.dwpsn	file "../Source/prod.c",line 1297,column 6,is_stmt,isa 0
        B         $C$L335,UNC           ; [CPU_] |1297| 
        ; branch occurs ; [] |1297| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1285,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1285| 
	.dwpsn	file "../Source/prod.c",line 1287,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1287| 
        ; branch occurs ; [] |1287| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1280,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1280| 
	.dwpsn	file "../Source/prod.c",line 1281,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1281| 
        ; branch occurs ; [] |1281| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1347,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1347| 
        MOVL      XAR0,#44              ; [CPU_] |1347| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1347| 
        MOV       *-SP[3],#4096         ; [CPU_] |1347| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1347| 
        MOVL      XAR4,XAR1             ; [CPU_] |1347| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_sprintf")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1347| 
        ; call occurs [#_sprintf] ; [] |1347| 
	.dwpsn	file "../Source/prod.c",line 1349,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1349| 
	.dwpsn	file "../Source/prod.c",line 1347,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1347| 
	.dwpsn	file "../Source/prod.c",line 1349,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1349| 
        MOV       AL,#1024              ; [CPU_] |1349| 
        MOVL      XAR5,XAR1             ; [CPU_] |1349| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1349| 
        ; call occurs [#_scia_getparam] ; [] |1349| 
	.dwpsn	file "../Source/prod.c",line 1350,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1350| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_atoi")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1350| 
        ; call occurs [#_atoi] ; [] |1350| 
        MOV       *-SP[63],AL           ; [CPU_] |1350| 
	.dwpsn	file "../Source/prod.c",line 1351,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1351| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_scia_puts")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1351| 
        ; call occurs [#_scia_puts] ; [] |1351| 
        MOV       AL,*-SP[63]           ; [CPU_] |1351| 
	.dwpsn	file "../Source/prod.c",line 1353,column 8,is_stmt,isa 0
        B         $C$L349,LEQ           ; [CPU_] |1353| 
        ; branchcc occurs ; [] |1353| 
        CMP       AL,#4096              ; [CPU_] |1353| 
        B         $C$L349,GT            ; [CPU_] |1353| 
        ; branchcc occurs ; [] |1353| 
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1358| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_puts")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1358| 
        ; call occurs [#_scia_puts] ; [] |1358| 
	.dwpsn	file "../Source/prod.c",line 1360,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1360| 
        MOVL      XAR0,#44              ; [CPU_] |1360| 
        MOV       AL,*-SP[63]           ; [CPU_] |1360| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1360| 
        MOV       *-SP[3],AL            ; [CPU_] |1360| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1360| 
        MOVL      XAR4,XAR1             ; [CPU_] |1360| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_sprintf")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1360| 
        ; call occurs [#_sprintf] ; [] |1360| 
        MOVL      XAR4,XAR1             ; [CPU_] |1360| 
	.dwpsn	file "../Source/prod.c",line 1362,column 6,is_stmt,isa 0
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_puts")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1362| 
        ; call occurs [#_scia_puts] ; [] |1362| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1367,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1367| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1367| 
        MOV       AL,*-SP[63]           ; [CPU_] |1367| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1367| 
	.dwpsn	file "../Source/prod.c",line 1370,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1370| 
        ; branch occurs ; [] |1370| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1355,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1355| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_puts")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1355| 
        ; call occurs [#_scia_puts] ; [] |1355| 
	.dwpsn	file "../Source/prod.c",line 1346,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1346| 
        ; branch occurs ; [] |1346| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1218,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1218| 
        MOVL      XAR0,#44              ; [CPU_] |1218| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1218| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1218| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1218| 
        MOVL      XAR4,XAR1             ; [CPU_] |1218| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_sprintf")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1218| 
        ; call occurs [#_sprintf] ; [] |1218| 
	.dwpsn	file "../Source/prod.c",line 1219,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1219| 
	.dwpsn	file "../Source/prod.c",line 1218,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1218| 
	.dwpsn	file "../Source/prod.c",line 1219,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1219| 
        MOV       AL,#1024              ; [CPU_] |1219| 
        MOVL      XAR5,XAR1             ; [CPU_] |1219| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1219| 
        ; call occurs [#_scia_getparam] ; [] |1219| 
	.dwpsn	file "../Source/prod.c",line 1220,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1220| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_atoi")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1220| 
        ; call occurs [#_atoi] ; [] |1220| 
        MOVL      XAR0,#94              ; [CPU_] |1220| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1220| 
	.dwpsn	file "../Source/prod.c",line 1221,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1221| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_puts")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1221| 
        ; call occurs [#_scia_puts] ; [] |1221| 
        MOVL      XAR0,#94              ; [CPU_] |1221| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1221| 
	.dwpsn	file "../Source/prod.c",line 1223,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1223| 
        CMPB      AL,#4                 ; [CPU_] |1223| 
        B         $C$L353,HIS           ; [CPU_] |1223| 
        ; branchcc occurs ; [] |1223| 
	.dwpsn	file "../Source/prod.c",line 1227,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1227| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_puts")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1227| 
        ; call occurs [#_scia_puts] ; [] |1227| 
        MOVL      XAR0,#94              ; [CPU_] |1227| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1227| 
	.dwpsn	file "../Source/prod.c",line 1228,column 6,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1228| 
        ADDB      AL,#-1                ; [CPU_] |1228| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1228| 
$C$L351:    
	.dwpsn	file "../Source/prod.c",line 1233,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1233| 
        MOVL      XAR0,#44              ; [CPU_] |1233| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1233| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1233| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1233| 
        MOVL      XAR4,XAR1             ; [CPU_] |1233| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_sprintf")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1233| 
        ; call occurs [#_sprintf] ; [] |1233| 
	.dwpsn	file "../Source/prod.c",line 1234,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1234| 
	.dwpsn	file "../Source/prod.c",line 1233,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1233| 
	.dwpsn	file "../Source/prod.c",line 1234,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1234| 
        MOV       AL,#1024              ; [CPU_] |1234| 
        MOVL      XAR5,XAR1             ; [CPU_] |1234| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1234| 
        ; call occurs [#_scia_getparam] ; [] |1234| 
	.dwpsn	file "../Source/prod.c",line 1235,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1235| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_atoi")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1235| 
        ; call occurs [#_atoi] ; [] |1235| 
        MOVL      XAR0,#95              ; [CPU_] |1235| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1236,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1236| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1236| 
        ; call occurs [#_scia_puts] ; [] |1236| 
        MOVL      XAR0,#95              ; [CPU_] |1236| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1236| 
	.dwpsn	file "../Source/prod.c",line 1240,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1240| 
        CMPB      AL,#20                ; [CPU_] |1240| 
        B         $C$L352,HIS           ; [CPU_] |1240| 
        ; branchcc occurs ; [] |1240| 
	.dwpsn	file "../Source/prod.c",line 1244,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1244| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_puts")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1244| 
        ; call occurs [#_scia_puts] ; [] |1244| 
	.dwpsn	file "../Source/prod.c",line 1247,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1247| 
        MOVL      XAR0,#94              ; [CPU_] |1247| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1247| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1247| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |1247| 
        MOVL      XAR0,#95              ; [CPU_] |1247| 
        MOV       *-SP[3],AL            ; [CPU_] |1247| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |1247| 
        MOVL      XAR0,#95              ; [CPU_] |1247| 
        MOV       AL,AH                 ; [CPU_] |1247| 
        ADDB      AL,#-1                ; [CPU_] |1247| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1247| 
        MOVL      XAR0,#44              ; [CPU_] |1247| 
        MOV       *-SP[4],AH            ; [CPU_] |1247| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1247| 
        MOVL      XAR4,XAR1             ; [CPU_] |1247| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_sprintf")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1247| 
        ; call occurs [#_sprintf] ; [] |1247| 
        MOVL      XAR4,XAR1             ; [CPU_] |1247| 
	.dwpsn	file "../Source/prod.c",line 1249,column 6,is_stmt,isa 0
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_scia_puts")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1249| 
        ; call occurs [#_scia_puts] ; [] |1249| 
        MOVL      XAR0,#95              ; [CPU_] |1249| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 6,is_stmt,isa 0
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_print_sensor")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1250| 
        ; call occurs [#_print_sensor] ; [] |1250| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1254| 
        MOV       T,*+FP[AR0]           ; [CPU_] |1254| 
        MOVL      XAR0,#40              ; [CPU_] |1254| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1254| 
        MOVB      AL,#10                ; [CPU_] |1254| 
        MPYU      ACC,T,AL              ; [CPU_] |1254| 
        MOVL      XAR0,#95              ; [CPU_] |1254| 
        ADDL      ACC,XAR6              ; [CPU_] |1254| 
        MOVL      XAR4,ACC              ; [CPU_] |1254| 
        MOVB      XAR1,#42              ; [CPU_] |1254| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1254| 
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1254| 
	.dwpsn	file "../Source/prod.c",line 1255,column 6,is_stmt,isa 0
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1255| 
        ; call occurs [#_ad7738_setcal] ; [] |1255| 
        MOVL      XAR0,#78              ; [CPU_] |1255| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1255| 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1257| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |1257| 
        MOVL      XAR1,ACC              ; [CPU_] |1257| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1257| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1257| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1257| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1258| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1258| 
        ; call occurs [#_ad7738_resetvall] ; [] |1258| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1262,column 6,is_stmt,isa 0
        B         $C$L530,UNC           ; [CPU_] |1262| 
        ; branch occurs ; [] |1262| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 1242,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1242| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_puts")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1242| 
        ; call occurs [#_scia_puts] ; [] |1242| 
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
        B         $C$L351,UNC           ; [CPU_] |1232| 
        ; branch occurs ; [] |1232| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 1225,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1225| 
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_scia_puts")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1225| 
        ; call occurs [#_scia_puts] ; [] |1225| 
	.dwpsn	file "../Source/prod.c",line 1217,column 6,is_stmt,isa 0
        B         $C$L350,UNC           ; [CPU_] |1217| 
        ; branch occurs ; [] |1217| 
$C$L354:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2078,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2078| 
        B         $C$L627,LO            ; [CPU_] |2078| 
        ; branchcc occurs ; [] |2078| 
	.dwpsn	file "../Source/prod.c",line 2083,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2083| 
        CMPB      AL,#78                ; [CPU_] |2083| 
        B         $C$L355,EQ            ; [CPU_] |2083| 
        ; branchcc occurs ; [] |2083| 
        CMPB      AL,#85                ; [CPU_] |2083| 
        B         $C$L355,EQ            ; [CPU_] |2083| 
        ; branchcc occurs ; [] |2083| 
        CMPB      AL,#66                ; [CPU_] |2083| 
        B         $C$L355,EQ            ; [CPU_] |2083| 
        ; branchcc occurs ; [] |2083| 
        CMPB      AL,#68                ; [CPU_] |2083| 
        B         $C$L627,NEQ           ; [CPU_] |2083| 
        ; branchcc occurs ; [] |2083| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2086,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2086| 
	.dwpsn	file "../Source/prod.c",line 2107,column 5,is_stmt,isa 0
        MOV       *-SP[63],#20          ; [CPU_] |2107| 
$C$L356:    
	.dwpsn	file "../Source/prod.c",line 2109,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2109| 
        MOVL      XAR0,#44              ; [CPU_] |2109| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2109| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2109| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2109| 
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_sprintf")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2109| 
        ; call occurs [#_sprintf] ; [] |2109| 
        MOVL      XAR0,#44              ; [CPU_] |2109| 
	.dwpsn	file "../Source/prod.c",line 2110,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2110| 
	.dwpsn	file "../Source/prod.c",line 2109,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2109| 
	.dwpsn	file "../Source/prod.c",line 2110,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2110| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2110| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2110| 
        ; call occurs [#_scia_getparam] ; [] |2110| 
        MOVL      XAR0,#86              ; [CPU_] |2110| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2110| 
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_atoi")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2111| 
        ; call occurs [#_atoi] ; [] |2111| 
        MOVL      XAR0,#95              ; [CPU_] |2111| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2111| 
        MOVL      XAR0,#86              ; [CPU_] |2111| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2111| 
	.dwpsn	file "../Source/prod.c",line 2112,column 6,is_stmt,isa 0
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_puts")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2112| 
        ; call occurs [#_scia_puts] ; [] |2112| 
        MOVL      XAR0,#95              ; [CPU_] |2112| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2112| 
	.dwpsn	file "../Source/prod.c",line 2116,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2116| 
        CMPB      AL,#20                ; [CPU_] |2116| 
        B         $C$L417,HIS           ; [CPU_] |2116| 
        ; branchcc occurs ; [] |2116| 
	.dwpsn	file "../Source/prod.c",line 2120,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2120| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_puts")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2120| 
        ; call occurs [#_scia_puts] ; [] |2120| 
        MOVL      XAR0,#95              ; [CPU_] |2120| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2120| 
	.dwpsn	file "../Source/prod.c",line 2121,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2121| 
        ADDB      AL,#-1                ; [CPU_] |2121| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2121| 
	.dwpsn	file "../Source/prod.c",line 2123,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2123| 
        CMPB      AL,#66                ; [CPU_] |2123| 
        B         $C$L412,EQ            ; [CPU_] |2123| 
        ; branchcc occurs ; [] |2123| 
        CMPB      AL,#68                ; [CPU_] |2123| 
        B         $C$L409,EQ            ; [CPU_] |2123| 
        ; branchcc occurs ; [] |2123| 
        CMPB      AL,#78                ; [CPU_] |2123| 
        B         $C$L406,EQ            ; [CPU_] |2123| 
        ; branchcc occurs ; [] |2123| 
        CMPB      AL,#85                ; [CPU_] |2123| 
        B         $C$L627,NEQ           ; [CPU_] |2123| 
        ; branchcc occurs ; [] |2123| 
	.dwpsn	file "../Source/prod.c",line 2152,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2152| 
	.dwpsn	file "../Source/prod.c",line 2150,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2150| 
        MOV       AH,#0                 ; [CPU_] |2150| 
	.dwpsn	file "../Source/prod.c",line 2152,column 6,is_stmt,isa 0
        MOV       T,*+FP[AR0]           ; [CPU_] |2152| 
        MOVL      XAR0,#40              ; [CPU_] |2152| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2152| 
	.dwpsn	file "../Source/prod.c",line 2150,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2150| 
	.dwpsn	file "../Source/prod.c",line 2152,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2152| 
        MPYU      ACC,T,AL              ; [CPU_] |2152| 
        ADDL      ACC,XAR6              ; [CPU_] |2152| 
        ADDB      ACC,#124              ; [CPU_] |2152| 
        MOVL      XAR1,ACC              ; [CPU_] |2152| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2152| 
        CMPB      AL,#35                ; [CPU_] |2152| 
        B         $C$L357,GT            ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
        CMPB      AL,#35                ; [CPU_] |2152| 
        B         $C$L373,EQ            ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
        CMPB      AL,#16                ; [CPU_] |2152| 
        B         $C$L393,EQ            ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
        CMPB      AL,#17                ; [CPU_] |2152| 
        B         $C$L389,EQ            ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
        CMPB      AL,#34                ; [CPU_] |2152| 
        B         $C$L380,EQ            ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
        B         $C$L397,UNC           ; [CPU_] |2152| 
        ; branch occurs ; [] |2152| 
$C$L357:    
        CMPB      AL,#36                ; [CPU_] |2152| 
        B         $C$L366,EQ            ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
        CMPB      AL,#53                ; [CPU_] |2152| 
        B         $C$L362,EQ            ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
        CMPB      AL,#70                ; [CPU_] |2152| 
        B         $C$L397,NEQ           ; [CPU_] |2152| 
        ; branchcc occurs ; [] |2152| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2341,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2341| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2341| 
        MOV       AL,#1024              ; [CPU_] |2341| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2341| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2341| 
        ; call occurs [#_scia_getparam] ; [] |2341| 
        MOVL      XAR0,#86              ; [CPU_] |2341| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2341| 
	.dwpsn	file "../Source/prod.c",line 2343,column 8,is_stmt,isa 0
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_atoi")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2343| 
        ; call occurs [#_atoi] ; [] |2343| 
        MOVL      XAR0,#86              ; [CPU_] |2343| 
        MOV       *-SP[63],AL           ; [CPU_] |2343| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2343| 
	.dwpsn	file "../Source/prod.c",line 2344,column 8,is_stmt,isa 0
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_puts")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2344| 
        ; call occurs [#_scia_puts] ; [] |2344| 
        MOV       AL,*-SP[63]           ; [CPU_] |2344| 
	.dwpsn	file "../Source/prod.c",line 2345,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2345| 
        B         $C$L359,EQ            ; [CPU_] |2345| 
        ; branchcc occurs ; [] |2345| 
        CMPB      AL,#7                 ; [CPU_] |2345| 
        B         $C$L360,EQ            ; [CPU_] |2345| 
        ; branchcc occurs ; [] |2345| 
	.dwpsn	file "../Source/prod.c",line 2346,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2346| 
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_puts")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2346| 
        ; call occurs [#_scia_puts] ; [] |2346| 
$C$L359:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2348,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2348| 
        B         $C$L360,EQ            ; [CPU_] |2348| 
        ; branchcc occurs ; [] |2348| 
        CMPB      AL,#7                 ; [CPU_] |2348| 
        B         $C$L358,NEQ           ; [CPU_] |2348| 
        ; branchcc occurs ; [] |2348| 
$C$L360:    
	.dwpsn	file "../Source/prod.c",line 2349,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2349| 
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_scia_puts")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2349| 
        ; call occurs [#_scia_puts] ; [] |2349| 
        MOV       AL,*-SP[63]           ; [CPU_] |2349| 
	.dwpsn	file "../Source/prod.c",line 2351,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2351| 
        B         $C$L361,EQ            ; [CPU_] |2351| 
        ; branchcc occurs ; [] |2351| 
        CMPB      AL,#7                 ; [CPU_] |2351| 
        B         $C$L396,EQ            ; [CPU_] |2351| 
        ; branchcc occurs ; [] |2351| 
        B         $C$L397,UNC           ; [CPU_] |2351| 
        ; branch occurs ; [] |2351| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2353,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2353| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2353| 
        MOV       AL,*-SP[63]           ; [CPU_] |2353| 
	.dwpsn	file "../Source/prod.c",line 2354,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2354| 
	.dwpsn	file "../Source/prod.c",line 2355,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2355| 
        ; branch occurs ; [] |2355| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2316,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2316| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2316| 
        MOV       AL,#1024              ; [CPU_] |2316| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2316| 
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2316| 
        ; call occurs [#_scia_getparam] ; [] |2316| 
        MOVL      XAR0,#86              ; [CPU_] |2316| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2316| 
	.dwpsn	file "../Source/prod.c",line 2318,column 8,is_stmt,isa 0
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_atoi")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2318| 
        ; call occurs [#_atoi] ; [] |2318| 
        MOVL      XAR0,#86              ; [CPU_] |2318| 
        MOV       *-SP[63],AL           ; [CPU_] |2318| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2318| 
	.dwpsn	file "../Source/prod.c",line 2319,column 8,is_stmt,isa 0
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_puts")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2319| 
        ; call occurs [#_scia_puts] ; [] |2319| 
        MOV       AL,*-SP[63]           ; [CPU_] |2319| 
	.dwpsn	file "../Source/prod.c",line 2320,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2320| 
        B         $C$L363,EQ            ; [CPU_] |2320| 
        ; branchcc occurs ; [] |2320| 
        CMPB      AL,#7                 ; [CPU_] |2320| 
        B         $C$L364,EQ            ; [CPU_] |2320| 
        ; branchcc occurs ; [] |2320| 
	.dwpsn	file "../Source/prod.c",line 2321,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2321| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_scia_puts")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2321| 
        ; call occurs [#_scia_puts] ; [] |2321| 
$C$L363:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2323,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2323| 
        B         $C$L364,EQ            ; [CPU_] |2323| 
        ; branchcc occurs ; [] |2323| 
        CMPB      AL,#7                 ; [CPU_] |2323| 
        B         $C$L362,NEQ           ; [CPU_] |2323| 
        ; branchcc occurs ; [] |2323| 
$C$L364:    
	.dwpsn	file "../Source/prod.c",line 2324,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2324| 
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2324| 
        ; call occurs [#_scia_puts] ; [] |2324| 
        MOV       AL,*-SP[63]           ; [CPU_] |2324| 
	.dwpsn	file "../Source/prod.c",line 2326,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2326| 
        B         $C$L365,EQ            ; [CPU_] |2326| 
        ; branchcc occurs ; [] |2326| 
        CMPB      AL,#7                 ; [CPU_] |2326| 
        B         $C$L396,EQ            ; [CPU_] |2326| 
        ; branchcc occurs ; [] |2326| 
        B         $C$L397,UNC           ; [CPU_] |2326| 
        ; branch occurs ; [] |2326| 
$C$L365:    
	.dwpsn	file "../Source/prod.c",line 2328,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2328| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2328| 
        MOV       AL,*-SP[63]           ; [CPU_] |2328| 
	.dwpsn	file "../Source/prod.c",line 2329,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2329| 
	.dwpsn	file "../Source/prod.c",line 2330,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2330| 
        ; branch occurs ; [] |2330| 
$C$L366:    
	.dwpsn	file "../Source/prod.c",line 2282,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2282| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2282| 
        MOV       AL,#1024              ; [CPU_] |2282| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2282| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2282| 
        ; call occurs [#_scia_getparam] ; [] |2282| 
        MOVL      XAR0,#86              ; [CPU_] |2282| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2282| 
	.dwpsn	file "../Source/prod.c",line 2285,column 8,is_stmt,isa 0
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_atoi")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2285| 
        ; call occurs [#_atoi] ; [] |2285| 
        MOVL      XAR0,#86              ; [CPU_] |2285| 
        MOV       *-SP[63],AL           ; [CPU_] |2285| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2285| 
	.dwpsn	file "../Source/prod.c",line 2286,column 8,is_stmt,isa 0
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2286| 
        ; call occurs [#_scia_puts] ; [] |2286| 
        MOV       AL,*-SP[63]           ; [CPU_] |2286| 
	.dwpsn	file "../Source/prod.c",line 2287,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2287| 
        B         $C$L367,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
        CMPB      AL,#3                 ; [CPU_] |2287| 
        B         $C$L368,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
        CMPB      AL,#4                 ; [CPU_] |2287| 
        B         $C$L369,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
        CMPB      AL,#7                 ; [CPU_] |2287| 
        B         $C$L370,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
	.dwpsn	file "../Source/prod.c",line 2288,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2288| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_puts")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2288| 
        ; call occurs [#_scia_puts] ; [] |2288| 
$C$L367:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2290,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2290| 
        B         $C$L370,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
$C$L368:    
        CMPB      AL,#3                 ; [CPU_] |2290| 
        B         $C$L370,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
$C$L369:    
        CMPB      AL,#4                 ; [CPU_] |2290| 
        B         $C$L370,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
        CMPB      AL,#7                 ; [CPU_] |2290| 
        B         $C$L366,NEQ           ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2291,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2291| 
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_puts")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2291| 
        ; call occurs [#_scia_puts] ; [] |2291| 
        MOV       AL,*-SP[63]           ; [CPU_] |2291| 
	.dwpsn	file "../Source/prod.c",line 2293,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2293| 
        B         $C$L372,EQ            ; [CPU_] |2293| 
        ; branchcc occurs ; [] |2293| 
        CMPB      AL,#3                 ; [CPU_] |2293| 
        B         $C$L371,EQ            ; [CPU_] |2293| 
        ; branchcc occurs ; [] |2293| 
        CMPB      AL,#4                 ; [CPU_] |2293| 
        B         $C$L388,EQ            ; [CPU_] |2293| 
        ; branchcc occurs ; [] |2293| 
        CMPB      AL,#7                 ; [CPU_] |2293| 
        B         $C$L396,EQ            ; [CPU_] |2293| 
        ; branchcc occurs ; [] |2293| 
        B         $C$L397,UNC           ; [CPU_] |2293| 
        ; branch occurs ; [] |2293| 
$C$L371:    
	.dwpsn	file "../Source/prod.c",line 2299,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2299| 
        MOV       AH,#15820             ; [CPU_] |2299| 
	.dwpsn	file "../Source/prod.c",line 2301,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2301| 
        ; branch occurs ; [] |2301| 
$C$L372:    
	.dwpsn	file "../Source/prod.c",line 2295,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2295| 
        MOV       AH,#15649             ; [CPU_] |2295| 
	.dwpsn	file "../Source/prod.c",line 2297,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2297| 
        ; branch occurs ; [] |2297| 
$C$L373:    
	.dwpsn	file "../Source/prod.c",line 2248,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2248| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2248| 
        MOV       AL,#1024              ; [CPU_] |2248| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2248| 
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2248| 
        ; call occurs [#_scia_getparam] ; [] |2248| 
        MOVL      XAR0,#86              ; [CPU_] |2248| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2248| 
	.dwpsn	file "../Source/prod.c",line 2251,column 8,is_stmt,isa 0
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_atoi")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2251| 
        ; call occurs [#_atoi] ; [] |2251| 
        MOVL      XAR0,#86              ; [CPU_] |2251| 
        MOV       *-SP[63],AL           ; [CPU_] |2251| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2251| 
	.dwpsn	file "../Source/prod.c",line 2252,column 8,is_stmt,isa 0
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_puts")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2252| 
        ; call occurs [#_scia_puts] ; [] |2252| 
        MOV       AL,*-SP[63]           ; [CPU_] |2252| 
	.dwpsn	file "../Source/prod.c",line 2253,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2253| 
        B         $C$L374,EQ            ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
        CMPB      AL,#3                 ; [CPU_] |2253| 
        B         $C$L375,EQ            ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
        CMPB      AL,#4                 ; [CPU_] |2253| 
        B         $C$L376,EQ            ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
        CMPB      AL,#7                 ; [CPU_] |2253| 
        B         $C$L377,EQ            ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
	.dwpsn	file "../Source/prod.c",line 2254,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2254| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_scia_puts")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2254| 
        ; call occurs [#_scia_puts] ; [] |2254| 
$C$L374:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2256,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2256| 
        B         $C$L377,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
$C$L375:    
        CMPB      AL,#3                 ; [CPU_] |2256| 
        B         $C$L377,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
$C$L376:    
        CMPB      AL,#4                 ; [CPU_] |2256| 
        B         $C$L377,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
        CMPB      AL,#7                 ; [CPU_] |2256| 
        B         $C$L373,NEQ           ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2257,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2257| 
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2257| 
        ; call occurs [#_scia_puts] ; [] |2257| 
        MOV       AL,*-SP[63]           ; [CPU_] |2257| 
	.dwpsn	file "../Source/prod.c",line 2259,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2259| 
        B         $C$L379,EQ            ; [CPU_] |2259| 
        ; branchcc occurs ; [] |2259| 
        CMPB      AL,#3                 ; [CPU_] |2259| 
        B         $C$L388,EQ            ; [CPU_] |2259| 
        ; branchcc occurs ; [] |2259| 
        CMPB      AL,#4                 ; [CPU_] |2259| 
        B         $C$L378,EQ            ; [CPU_] |2259| 
        ; branchcc occurs ; [] |2259| 
        CMPB      AL,#7                 ; [CPU_] |2259| 
        B         $C$L396,EQ            ; [CPU_] |2259| 
        ; branchcc occurs ; [] |2259| 
        B         $C$L397,UNC           ; [CPU_] |2259| 
        ; branch occurs ; [] |2259| 
$C$L378:    
	.dwpsn	file "../Source/prod.c",line 2269,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2269| 
        MOV       AH,#16672             ; [CPU_] |2269| 
	.dwpsn	file "../Source/prod.c",line 2271,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2271| 
        ; branch occurs ; [] |2271| 
$C$L379:    
	.dwpsn	file "../Source/prod.c",line 2261,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2261| 
        MOV       AH,#16073             ; [CPU_] |2261| 
	.dwpsn	file "../Source/prod.c",line 2263,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2263| 
        ; branch occurs ; [] |2263| 
$C$L380:    
	.dwpsn	file "../Source/prod.c",line 2214,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2214| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2214| 
        MOV       AL,#1024              ; [CPU_] |2214| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2214| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2214| 
        ; call occurs [#_scia_getparam] ; [] |2214| 
        MOVL      XAR0,#86              ; [CPU_] |2214| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2214| 
	.dwpsn	file "../Source/prod.c",line 2217,column 8,is_stmt,isa 0
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_atoi")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2217| 
        ; call occurs [#_atoi] ; [] |2217| 
        MOVL      XAR0,#86              ; [CPU_] |2217| 
        MOV       *-SP[63],AL           ; [CPU_] |2217| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2217| 
	.dwpsn	file "../Source/prod.c",line 2218,column 8,is_stmt,isa 0
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_puts")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2218| 
        ; call occurs [#_scia_puts] ; [] |2218| 
        MOV       AL,*-SP[63]           ; [CPU_] |2218| 
	.dwpsn	file "../Source/prod.c",line 2219,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2219| 
        B         $C$L381,EQ            ; [CPU_] |2219| 
        ; branchcc occurs ; [] |2219| 
        CMPB      AL,#3                 ; [CPU_] |2219| 
        B         $C$L382,EQ            ; [CPU_] |2219| 
        ; branchcc occurs ; [] |2219| 
        CMPB      AL,#4                 ; [CPU_] |2219| 
        B         $C$L383,EQ            ; [CPU_] |2219| 
        ; branchcc occurs ; [] |2219| 
        CMPB      AL,#7                 ; [CPU_] |2219| 
        B         $C$L384,EQ            ; [CPU_] |2219| 
        ; branchcc occurs ; [] |2219| 
	.dwpsn	file "../Source/prod.c",line 2220,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2220| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_scia_puts")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2220| 
        ; call occurs [#_scia_puts] ; [] |2220| 
$C$L381:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2222,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2222| 
        B         $C$L384,EQ            ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
$C$L382:    
        CMPB      AL,#3                 ; [CPU_] |2222| 
        B         $C$L384,EQ            ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
$C$L383:    
        CMPB      AL,#4                 ; [CPU_] |2222| 
        B         $C$L384,EQ            ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
        CMPB      AL,#7                 ; [CPU_] |2222| 
        B         $C$L380,NEQ           ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2223,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2223| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_puts")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2223| 
        ; call occurs [#_scia_puts] ; [] |2223| 
        MOV       AL,*-SP[63]           ; [CPU_] |2223| 
	.dwpsn	file "../Source/prod.c",line 2225,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2225| 
        B         $C$L388,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        CMPB      AL,#3                 ; [CPU_] |2225| 
        B         $C$L387,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        CMPB      AL,#4                 ; [CPU_] |2225| 
        B         $C$L385,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        CMPB      AL,#7                 ; [CPU_] |2225| 
        B         $C$L396,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        B         $C$L397,UNC           ; [CPU_] |2225| 
        ; branch occurs ; [] |2225| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2235,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2235| 
        MOV       AH,#16843             ; [CPU_] |2235| 
$C$L386:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2235| 
        MOV       AL,*-SP[63]           ; [CPU_] |2235| 
	.dwpsn	file "../Source/prod.c",line 2236,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2236| 
	.dwpsn	file "../Source/prod.c",line 2237,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2237| 
        ; branch occurs ; [] |2237| 
$C$L387:    
	.dwpsn	file "../Source/prod.c",line 2231,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2231| 
        MOV       AH,#16418             ; [CPU_] |2231| 
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2233| 
        ; branch occurs ; [] |2233| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2227,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2227| 
	.dwpsn	file "../Source/prod.c",line 2229,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2229| 
        ; branch occurs ; [] |2229| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2185,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2185| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2185| 
        MOV       AL,#1024              ; [CPU_] |2185| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2185| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2185| 
        ; call occurs [#_scia_getparam] ; [] |2185| 
        MOVL      XAR0,#86              ; [CPU_] |2185| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2185| 
	.dwpsn	file "../Source/prod.c",line 2187,column 8,is_stmt,isa 0
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_atoi")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2187| 
        ; call occurs [#_atoi] ; [] |2187| 
        MOVL      XAR0,#86              ; [CPU_] |2187| 
        MOV       *-SP[63],AL           ; [CPU_] |2187| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2187| 
	.dwpsn	file "../Source/prod.c",line 2188,column 8,is_stmt,isa 0
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_puts")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2188| 
        ; call occurs [#_scia_puts] ; [] |2188| 
        MOV       AL,*-SP[63]           ; [CPU_] |2188| 
	.dwpsn	file "../Source/prod.c",line 2189,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2189| 
        B         $C$L391,EQ            ; [CPU_] |2189| 
        ; branchcc occurs ; [] |2189| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2189| 
        B         $C$L390,EQ            ; [CPU_] |2189| 
        ; branchcc occurs ; [] |2189| 
	.dwpsn	file "../Source/prod.c",line 2190,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2190| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_scia_puts")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2190| 
        ; call occurs [#_scia_puts] ; [] |2190| 
$C$L390:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2192,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2192| 
        B         $C$L391,EQ            ; [CPU_] |2192| 
        ; branchcc occurs ; [] |2192| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2192| 
        B         $C$L389,NEQ           ; [CPU_] |2192| 
        ; branchcc occurs ; [] |2192| 
$C$L391:    
	.dwpsn	file "../Source/prod.c",line 2193,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2193| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_scia_puts")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2193| 
        ; call occurs [#_scia_puts] ; [] |2193| 
        MOV       AL,*-SP[63]           ; [CPU_] |2193| 
	.dwpsn	file "../Source/prod.c",line 2195,column 7,is_stmt,isa 0
        B         $C$L392,EQ            ; [CPU_] |2195| 
        ; branchcc occurs ; [] |2195| 
        CMPB      AL,#1                 ; [CPU_] |2195| 
        B         $C$L399,EQ            ; [CPU_] |2195| 
        ; branchcc occurs ; [] |2195| 
        CMPB      AL,#7                 ; [CPU_] |2195| 
        B         $C$L396,EQ            ; [CPU_] |2195| 
        ; branchcc occurs ; [] |2195| 
        B         $C$L397,UNC           ; [CPU_] |2195| 
        ; branch occurs ; [] |2195| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2197,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2197| 
        MOV       AH,#16397             ; [CPU_] |2197| 
	.dwpsn	file "../Source/prod.c",line 2199,column 8,is_stmt,isa 0
        B         $C$L400,UNC           ; [CPU_] |2199| 
        ; branch occurs ; [] |2199| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2156,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2156| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2156| 
        MOV       AL,#1024              ; [CPU_] |2156| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2156| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2156| 
        ; call occurs [#_scia_getparam] ; [] |2156| 
        MOVL      XAR0,#86              ; [CPU_] |2156| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2156| 
	.dwpsn	file "../Source/prod.c",line 2158,column 8,is_stmt,isa 0
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_atoi")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2158| 
        ; call occurs [#_atoi] ; [] |2158| 
        MOVL      XAR0,#86              ; [CPU_] |2158| 
        MOV       *-SP[63],AL           ; [CPU_] |2158| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2158| 
	.dwpsn	file "../Source/prod.c",line 2159,column 8,is_stmt,isa 0
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_scia_puts")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2159| 
        ; call occurs [#_scia_puts] ; [] |2159| 
        MOV       AL,*-SP[63]           ; [CPU_] |2159| 
	.dwpsn	file "../Source/prod.c",line 2160,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2160| 
        B         $C$L395,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2160| 
        B         $C$L394,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
	.dwpsn	file "../Source/prod.c",line 2161,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2161| 
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_scia_puts")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2161| 
        ; call occurs [#_scia_puts] ; [] |2161| 
$C$L394:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2163,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2163| 
        B         $C$L395,EQ            ; [CPU_] |2163| 
        ; branchcc occurs ; [] |2163| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2163| 
        B         $C$L393,NEQ           ; [CPU_] |2163| 
        ; branchcc occurs ; [] |2163| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2164,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2164| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_scia_puts")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2164| 
        ; call occurs [#_scia_puts] ; [] |2164| 
        MOV       AL,*-SP[63]           ; [CPU_] |2164| 
	.dwpsn	file "../Source/prod.c",line 2166,column 7,is_stmt,isa 0
        B         $C$L399,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#1                 ; [CPU_] |2166| 
        B         $C$L398,EQ            ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
        CMPB      AL,#7                 ; [CPU_] |2166| 
        B         $C$L397,NEQ           ; [CPU_] |2166| 
        ; branchcc occurs ; [] |2166| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2176,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2176| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2176| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2176| 
        MOV       AL,#0                 ; [CPU_] |2176| 
        MOV       AH,#17096             ; [CPU_] |2176| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2176| 
        ; call occurs [#FS$$DIV] ; [] |2176| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2176| 
        MOV       AL,*-SP[63]           ; [CPU_] |2176| 
	.dwpsn	file "../Source/prod.c",line 2177,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2177| 
        MOV       *-SP[63],AL           ; [CPU_] |2177| 
$C$L397:    
	.dwpsn	file "../Source/prod.c",line 2367,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2367| 
        MOV       AH,#0                 ; [CPU_] |2367| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2367| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2367| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2367| 
        ; call occurs [#FS$$CMP] ; [] |2367| 
        CMPB      AL,#0                 ; [CPU_] |2367| 
        B         $C$L402,NEQ           ; [CPU_] |2367| 
        ; branchcc occurs ; [] |2367| 
	.dwpsn	file "../Source/prod.c",line 2368,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2368| 
	.dwpsn	file "../Source/prod.c",line 2369,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2369| 
        ; branch occurs ; [] |2369| 
$C$L398:    
	.dwpsn	file "../Source/prod.c",line 2172,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2172| 
        MOV       AH,#16104             ; [CPU_] |2172| 
	.dwpsn	file "../Source/prod.c",line 2174,column 8,is_stmt,isa 0
        B         $C$L400,UNC           ; [CPU_] |2174| 
        ; branch occurs ; [] |2174| 
$C$L399:    
	.dwpsn	file "../Source/prod.c",line 2168,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2168| 
$C$L400:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2168| 
        MOV       AL,*-SP[63]           ; [CPU_] |2168| 
	.dwpsn	file "../Source/prod.c",line 2169,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2169| 
$C$L401:    
        MOV       *-SP[63],AL           ; [CPU_] |2169| 
$C$L402:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2372,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2372| 
        B         $C$L405,EQ            ; [CPU_] |2372| 
        ; branchcc occurs ; [] |2372| 
	.dwpsn	file "../Source/prod.c",line 2378,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2378| 
	.dwpsn	file "../Source/prod.c",line 2382,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2382| 
	.dwpsn	file "../Source/prod.c",line 2379,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2379| 
	.dwpsn	file "../Source/prod.c",line 2382,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2382| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2379,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2379| 
	.dwpsn	file "../Source/prod.c",line 2382,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2382| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2382| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |2382| 
        MOVL      XAR0,#70              ; [CPU_] |2382| 
        MOV       *-SP[3],AL            ; [CPU_] |2382| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2382| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2382| 
        ANDB      AL,#0x0f              ; [CPU_] |2382| 
        MOV       ACC,AL << 1           ; [CPU_] |2382| 
        ADDL      ACC,XAR6              ; [CPU_] |2382| 
        MOVL      XAR4,ACC              ; [CPU_] |2382| 
        MOVL      XAR0,#44              ; [CPU_] |2382| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2382| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2382| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2382| 
        MOVL      XAR4,XAR1             ; [CPU_] |2382| 
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_sprintf")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2382| 
        ; call occurs [#_sprintf] ; [] |2382| 
        MOVL      XAR4,XAR1             ; [CPU_] |2382| 
	.dwpsn	file "../Source/prod.c",line 2384,column 6,is_stmt,isa 0
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_scia_puts")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2384| 
        ; call occurs [#_scia_puts] ; [] |2384| 
        MOVL      XAR0,#40              ; [CPU_] |2384| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2384| 
	.dwpsn	file "../Source/prod.c",line 2380,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |2380| 
        MOV       *+FP[AR0],#1          ; [CPU_] |2380| 
	.dwpsn	file "../Source/prod.c",line 2386,column 11,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2386| 
        MOV       *+FP[AR0],#0          ; [CPU_] |2386| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2387,column 7,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2387| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |2387| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2387| 
        CMPL      ACC,XAR6              ; [CPU_] |2387| 
        B         $C$L404,NEQ           ; [CPU_] |2387| 
        ; branchcc occurs ; [] |2387| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2388,column 8,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_update_units")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2388| 
        ; call occurs [#_update_units] ; [] |2388| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2390,column 8,is_stmt,isa 0
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2390| 
        ; call occurs [#_ad7738_setcal] ; [] |2390| 
        MOVL      XAR0,#78              ; [CPU_] |2390| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2390| 
	.dwpsn	file "../Source/prod.c",line 2391,column 8,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2391| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |2391| 
        MOVL      XAR4,ACC              ; [CPU_] |2391| 
        MOVL      XAR0,#88              ; [CPU_] |2391| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2391| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2391| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2391| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2391| 
        MOVL      XAR0,#88              ; [CPU_] |2391| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2391| 
	.dwpsn	file "../Source/prod.c",line 2392,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2392| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2392| 
        ; call occurs [#_ad7738_resetvall] ; [] |2392| 
 clrc INTM
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2386,column 19,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2386| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2386| 
        ADDB      XAR1,#10              ; [CPU_] |2386| 
        MOVL      XAR0,#94              ; [CPU_] |2386| 
        ADDB      AL,#1                 ; [CPU_] |2386| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2386| 
        CMPB      AL,#4                 ; [CPU_] |2386| 
        B         $C$L403,LO            ; [CPU_] |2386| 
        ; branchcc occurs ; [] |2386| 
        B         $C$L634,UNC           ; [CPU_] |2386| 
        ; branch occurs ; [] |2386| 
$C$L405:    
	.dwpsn	file "../Source/prod.c",line 2373,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2373| 
	.dwpsn	file "../Source/prod.c",line 2375,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2375| 
        ; branch occurs ; [] |2375| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2129,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2129| 
        MOVL      XAR0,#95              ; [CPU_] |2129| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2129| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |2129| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2129| 
        MOVL      XAR0,#44              ; [CPU_] |2129| 
        MOV       *-SP[3],AL            ; [CPU_] |2129| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2129| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2129| 
        MOV       *-SP[63],AL           ; [CPU_] |2129| 
        MOVL      XAR4,XAR1             ; [CPU_] |2129| 
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_sprintf")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2129| 
        ; call occurs [#_sprintf] ; [] |2129| 
	.dwpsn	file "../Source/prod.c",line 2131,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2131| 
        MOV       AL,#1024              ; [CPU_] |2131| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2131| 
	.dwpsn	file "../Source/prod.c",line 2129,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2129| 
	.dwpsn	file "../Source/prod.c",line 2131,column 6,is_stmt,isa 0
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2131| 
        ; call occurs [#_scia_getparam] ; [] |2131| 
        MOVZ      AR6,AL                ; [CPU_] |2131| 
        CMPB      AL,#15                ; [CPU_] |2131| 
        B         $C$L407,LOS           ; [CPU_] |2131| 
        ; branchcc occurs ; [] |2131| 
	.dwpsn	file "../Source/prod.c",line 2135,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2135| 
        MOVB      XAR0,#15              ; [CPU_] |2135| 
	.dwpsn	file "../Source/prod.c",line 2134,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2134| 
	.dwpsn	file "../Source/prod.c",line 2135,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2135| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2137,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2137| 
        MOVB      AL,#152               ; [CPU_] |2137| 
        MOV       T,*+FP[AR0]           ; [CPU_] |2137| 
        MOVL      XAR0,#40              ; [CPU_] |2137| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2137| 
        MPYU      ACC,T,AL              ; [CPU_] |2137| 
        MOVL      XAR0,#86              ; [CPU_] |2137| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2137| 
        ADDL      ACC,XAR7              ; [CPU_] |2137| 
        ADDB      ACC,#98               ; [CPU_] |2137| 
        MOVL      XAR1,ACC              ; [CPU_] |2137| 
        MOVL      XAR4,ACC              ; [CPU_] |2137| 
        MOVB      AH,#1                 ; [CPU_] |2137| 
        ADD       AH,AR6                ; [CPU_] |2137| 
        MOVU      ACC,AH                ; [CPU_] |2137| 
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_memcpy")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2137| 
        ; call occurs [#_memcpy] ; [] |2137| 
        MOVL      XAR0,#86              ; [CPU_] |2137| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2137| 
	.dwpsn	file "../Source/prod.c",line 2139,column 6,is_stmt,isa 0
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_puts")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2139| 
        ; call occurs [#_scia_puts] ; [] |2139| 
	.dwpsn	file "../Source/prod.c",line 2140,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2140| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_scia_puts")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2140| 
        ; call occurs [#_scia_puts] ; [] |2140| 
	.dwpsn	file "../Source/prod.c",line 2143,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2143| 
        MOV       AL,*-SP[63]           ; [CPU_] |2143| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2143| 
        MOV       *-SP[3],AL            ; [CPU_] |2143| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2143| 
$C$L408:    
        MOVL      XAR0,#44              ; [CPU_] |2143| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2143| 
        MOVL      XAR4,XAR1             ; [CPU_] |2143| 
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_sprintf")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2143| 
        ; call occurs [#_sprintf] ; [] |2143| 
        MOVL      XAR4,XAR1             ; [CPU_] |2143| 
	.dwpsn	file "../Source/prod.c",line 2146,column 6,is_stmt,isa 0
        B         $C$L336,UNC           ; [CPU_] |2146| 
        ; branch occurs ; [] |2146| 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2440,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2440| 
        MOV       T,*+FP[AR0]           ; [CPU_] |2440| 
        MOVB      AL,#152               ; [CPU_] |2440| 
        MOVL      XAR0,#40              ; [CPU_] |2440| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2440| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2440| 
        MPYU      ACC,T,AL              ; [CPU_] |2440| 
        MOVL      XAR0,#95              ; [CPU_] |2440| 
        ADDL      ACC,XAR6              ; [CPU_] |2440| 
        MOVL      XAR1,ACC              ; [CPU_] |2440| 
        MOVB      AL,#1                 ; [CPU_] |2440| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |2440| 
        MOV       *-SP[63],AL           ; [CPU_] |2440| 
        MOVB      XAR0,#124             ; [CPU_] |2440| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2440| 
        MOV       *-SP[3],AL            ; [CPU_] |2440| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2440| 
        MOVL      XAR0,#70              ; [CPU_] |2440| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2440| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2440| 
        MOV       ACC,AL << 1           ; [CPU_] |2440| 
        ADDL      ACC,XAR6              ; [CPU_] |2440| 
        MOVL      XAR4,ACC              ; [CPU_] |2440| 
        MOVL      XAR0,#44              ; [CPU_] |2440| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2440| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2440| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2440| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_sprintf")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2440| 
        ; call occurs [#_sprintf] ; [] |2440| 
        MOVL      XAR0,#44              ; [CPU_] |2440| 
	.dwpsn	file "../Source/prod.c",line 2442,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2442| 
	.dwpsn	file "../Source/prod.c",line 2440,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2440| 
	.dwpsn	file "../Source/prod.c",line 2442,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2442| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2442| 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2442| 
        ; call occurs [#_scia_getparam] ; [] |2442| 
        MOVL      XAR0,#86              ; [CPU_] |2442| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2442,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2442| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_strtod")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2443,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2443| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2443| 
        MOVL      XAR0,#86              ; [CPU_] |2443| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2443| 
	.dwpsn	file "../Source/prod.c",line 2444,column 6,is_stmt,isa 0
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_scia_puts")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2444| 
        ; call occurs [#_scia_puts] ; [] |2444| 
	.dwpsn	file "../Source/prod.c",line 2445,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2445| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_scia_puts")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2445| 
        ; call occurs [#_scia_puts] ; [] |2445| 
	.dwpsn	file "../Source/prod.c",line 2447,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2447| 
        MOVL      XAR0,#44              ; [CPU_] |2447| 
        MOV       AL,*-SP[63]           ; [CPU_] |2447| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2447| 
        MOV       *-SP[3],AL            ; [CPU_] |2447| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2447| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_sprintf")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2447| 
        ; call occurs [#_sprintf] ; [] |2447| 
        MOVL      XAR0,#44              ; [CPU_] |2447| 
	.dwpsn	file "../Source/prod.c",line 2448,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2448| 
	.dwpsn	file "../Source/prod.c",line 2447,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2447| 
	.dwpsn	file "../Source/prod.c",line 2448,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2448| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2448| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2448| 
        ; call occurs [#_scia_getparam] ; [] |2448| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_strtod")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2449,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2449| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2449| 
        MOVL      XAR0,#86              ; [CPU_] |2449| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2449| 
	.dwpsn	file "../Source/prod.c",line 2450,column 6,is_stmt,isa 0
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_scia_puts")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2450| 
        ; call occurs [#_scia_puts] ; [] |2450| 
	.dwpsn	file "../Source/prod.c",line 2451,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2451| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_puts")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2451| 
        ; call occurs [#_scia_puts] ; [] |2451| 
	.dwpsn	file "../Source/prod.c",line 2454,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2454| 
        MOVB      XAR0,#228             ; [CPU_] |2454| 
        MOV       AL,*-SP[63]           ; [CPU_] |2454| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2454| 
        MOV       *-SP[3],AL            ; [CPU_] |2454| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2454| 
        MOVB      XAR0,#230             ; [CPU_] |2454| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2454| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2454| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2454| 
$C$L410:    
        MOVL      XAR0,#44              ; [CPU_] |2454| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2454| 
        MOVL      XAR4,XAR1             ; [CPU_] |2454| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_sprintf")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2454| 
        ; call occurs [#_sprintf] ; [] |2454| 
        MOVL      XAR4,XAR1             ; [CPU_] |2454| 
	.dwpsn	file "../Source/prod.c",line 2458,column 6,is_stmt,isa 0
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2458| 
        ; call occurs [#_scia_puts] ; [] |2458| 
$C$L411:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2461,column 6,is_stmt,isa 0
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2461| 
        ; call occurs [#_ad7738_setcal] ; [] |2461| 
	.dwpsn	file "../Source/prod.c",line 2463,column 6,is_stmt,isa 0
        B         $C$L513,UNC           ; [CPU_] |2463| 
        ; branch occurs ; [] |2463| 
$C$L412:    
        MOVB      AL,#1                 ; [CPU_] 
        MOVL      XAR0,#95              ; [CPU_] 
        ADD       AL,*+FP[AR0]          ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2403,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2403| 
        MOV       AL,*-SP[63]           ; [CPU_] |2403| 
        MOVL      XAR0,#44              ; [CPU_] |2403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2403| 
        MOV       *-SP[3],AL            ; [CPU_] |2403| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2403| 
        MOVL      XAR4,XAR1             ; [CPU_] |2403| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_sprintf")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2403| 
        ; call occurs [#_sprintf] ; [] |2403| 
	.dwpsn	file "../Source/prod.c",line 2404,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2404| 
	.dwpsn	file "../Source/prod.c",line 2403,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2403| 
	.dwpsn	file "../Source/prod.c",line 2404,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2404| 
        MOV       AL,#1024              ; [CPU_] |2404| 
        MOVL      XAR5,XAR1             ; [CPU_] |2404| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2404| 
        ; call occurs [#_scia_getparam] ; [] |2404| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_strtod")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2406,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2406| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_scia_puts")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2406| 
        ; call occurs [#_scia_puts] ; [] |2406| 
	.dwpsn	file "../Source/prod.c",line 2408,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2408| 
        MOV       AH,#0                 ; [CPU_] |2408| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2408| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2408| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2408| 
        ; call occurs [#FS$$CMP] ; [] |2408| 
        CMPB      AL,#0                 ; [CPU_] |2408| 
        B         $C$L416,EQ            ; [CPU_] |2408| 
        ; branchcc occurs ; [] |2408| 
	.dwpsn	file "../Source/prod.c",line 2412,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2412| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_scia_puts")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2412| 
        ; call occurs [#_scia_puts] ; [] |2412| 
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2413| 
        MOV       T,*+FP[AR0]           ; [CPU_] |2413| 
        MOVL      XAR0,#40              ; [CPU_] |2413| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2413| 
        MOVB      AL,#152               ; [CPU_] |2413| 
        MPYU      ACC,T,AL              ; [CPU_] |2413| 
        ADDL      ACC,XAR6              ; [CPU_] |2413| 
        MOVL      XAR1,ACC              ; [CPU_] |2413| 
        MOVB      XAR0,#224             ; [CPU_] |2413| 
	.dwpsn	file "../Source/prod.c",line 2416,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2416| 
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2413| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2413| 
	.dwpsn	file "../Source/prod.c",line 2416,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2416| 
        MOV       AL,*-SP[63]           ; [CPU_] |2416| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2416| 
        MOV       *-SP[3],AL            ; [CPU_] |2416| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2416| 
        MOVL      XAR0,#44              ; [CPU_] |2416| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2416| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2416| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_sprintf")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2416| 
        ; call occurs [#_sprintf] ; [] |2416| 
        MOVL      XAR0,#44              ; [CPU_] |2416| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2416| 
	.dwpsn	file "../Source/prod.c",line 2418,column 6,is_stmt,isa 0
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_scia_puts")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2418| 
        ; call occurs [#_scia_puts] ; [] |2418| 
	.dwpsn	file "../Source/prod.c",line 2414,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |2414| 
        MOV       *+FP[AR0],#1          ; [CPU_] |2414| 
	.dwpsn	file "../Source/prod.c",line 2420,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2420| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2420| 
        CMPB      AL,#247               ; [CPU_] |2420| 
        B         $C$L634,NEQ           ; [CPU_] |2420| 
        ; branchcc occurs ; [] |2420| 
	.dwpsn	file "../Source/prod.c",line 2422,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2422| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2422| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2422| 
        MOV       AL,#0                 ; [CPU_] |2422| 
        MOV       AH,#17096             ; [CPU_] |2422| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2422| 
        ; call occurs [#FS$$DIV] ; [] |2422| 
        MOVB      XAR0,#126             ; [CPU_] |2422| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2422| 
        MOVL      XAR0,#40              ; [CPU_] |2422| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2422| 
	.dwpsn	file "../Source/prod.c",line 2425,column 12,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2425| 
        MOV       *+FP[AR0],#0          ; [CPU_] |2425| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L414:    
	.dwpsn	file "../Source/prod.c",line 2426,column 8,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2426| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |2426| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2426| 
        CMPL      ACC,XAR6              ; [CPU_] |2426| 
        B         $C$L415,NEQ           ; [CPU_] |2426| 
        ; branchcc occurs ; [] |2426| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2429,column 9,is_stmt,isa 0
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2429| 
        ; call occurs [#_ad7738_setcal] ; [] |2429| 
        MOVL      XAR0,#78              ; [CPU_] |2429| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2429| 
	.dwpsn	file "../Source/prod.c",line 2430,column 9,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2430| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |2430| 
        MOVL      XAR4,ACC              ; [CPU_] |2430| 
        MOVL      XAR0,#88              ; [CPU_] |2430| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2430| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2430| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2430| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2430| 
        MOVL      XAR0,#88              ; [CPU_] |2430| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2430| 
	.dwpsn	file "../Source/prod.c",line 2431,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2431| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2431| 
        ; call occurs [#_ad7738_resetvall] ; [] |2431| 
 clrc INTM
$C$L415:    
	.dwpsn	file "../Source/prod.c",line 2425,column 20,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2425| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2425| 
        ADDB      XAR1,#10              ; [CPU_] |2425| 
        MOVL      XAR0,#94              ; [CPU_] |2425| 
        ADDB      AL,#1                 ; [CPU_] |2425| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2425| 
        CMPB      AL,#4                 ; [CPU_] |2425| 
        B         $C$L414,LO            ; [CPU_] |2425| 
        ; branchcc occurs ; [] |2425| 
        B         $C$L634,UNC           ; [CPU_] |2425| 
        ; branch occurs ; [] |2425| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 2410,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2410| 
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_scia_puts")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2410| 
        ; call occurs [#_scia_puts] ; [] |2410| 
	.dwpsn	file "../Source/prod.c",line 2402,column 6,is_stmt,isa 0
        B         $C$L413,UNC           ; [CPU_] |2402| 
        ; branch occurs ; [] |2402| 
$C$L417:    
	.dwpsn	file "../Source/prod.c",line 2118,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2118| 
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_scia_puts")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2118| 
        ; call occurs [#_scia_puts] ; [] |2118| 
	.dwpsn	file "../Source/prod.c",line 2108,column 5,is_stmt,isa 0
        B         $C$L356,UNC           ; [CPU_] |2108| 
        ; branch occurs ; [] |2108| 
$C$L418:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3080,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3080| 
        B         $C$L627,LO            ; [CPU_] |3080| 
        ; branchcc occurs ; [] |3080| 
	.dwpsn	file "../Source/prod.c",line 3083,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3083| 
        CMPB      AL,#83                ; [CPU_] |3083| 
        B         $C$L419,GT            ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        CMPB      AL,#83                ; [CPU_] |3083| 
        B         $C$L423,EQ            ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        CMPB      AL,#73                ; [CPU_] |3083| 
        B         $C$L428,EQ            ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        CMPB      AL,#76                ; [CPU_] |3083| 
        B         $C$L432,EQ            ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        CMPB      AL,#80                ; [CPU_] |3083| 
        B         $C$L425,EQ            ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        B         $C$L627,UNC           ; [CPU_] |3083| 
        ; branch occurs ; [] |3083| 
$C$L419:    
        CMPB      AL,#84                ; [CPU_] |3083| 
        B         $C$L421,EQ            ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        CMPB      AL,#86                ; [CPU_] |3083| 
        B         $C$L627,NEQ           ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3111,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3111| 
        B         $C$L420,LOS           ; [CPU_] |3111| 
        ; branchcc occurs ; [] |3111| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L420,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3111,column 6,is_stmt,isa 0
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_atoi")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3111| 
        ; call occurs [#_atoi] ; [] |3111| 
        CMPB      AL,#4                 ; [CPU_] |3111| 
        B         $C$L420,GT            ; [CPU_] |3111| 
        ; branchcc occurs ; [] |3111| 
        CMPB      AL,#0                 ; [CPU_] |3111| 
        B         $C$L420,LEQ           ; [CPU_] |3111| 
        ; branchcc occurs ; [] |3111| 
	.dwpsn	file "../Source/prod.c",line 3113,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3113| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3113| 
        ADD       ACC,AR5               ; [CPU_] |3113| 
        MOVL      XAR4,ACC              ; [CPU_] |3113| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3113| 
	.dwpsn	file "../Source/prod.c",line 3114,column 6,is_stmt,isa 0
        B         $C$L430,UNC           ; [CPU_] |3114| 
        ; branch occurs ; [] |3114| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3115,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3115| 
        B         $C$L430,UNC           ; [CPU_] |3115| 
        ; branch occurs ; [] |3115| 
$C$L421:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3087,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3087| 
        B         $C$L422,LOS           ; [CPU_] |3087| 
        ; branchcc occurs ; [] |3087| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L422,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3087,column 6,is_stmt,isa 0
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_atoi")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3087| 
        ; call occurs [#_atoi] ; [] |3087| 
        CMPB      AL,#4                 ; [CPU_] |3087| 
        MOVZ      AR4,AL                ; [CPU_] |3087| 
        B         $C$L422,GT            ; [CPU_] |3087| 
        ; branchcc occurs ; [] |3087| 
        CMPB      AL,#0                 ; [CPU_] |3087| 
        B         $C$L422,LEQ           ; [CPU_] |3087| 
        ; branchcc occurs ; [] |3087| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3089,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3089| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3089| 
	.dwpsn	file "../Source/prod.c",line 3092,column 6,is_stmt,isa 0
        B         $C$L429,UNC           ; [CPU_] |3092| 
        ; branch occurs ; [] |3092| 
$C$L422:    
	.dwpsn	file "../Source/prod.c",line 3093,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3093| 
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3093| 
        ; call occurs [#_ad7738_resettare] ; [] |3093| 
	.dwpsn	file "../Source/prod.c",line 3094,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3094| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3094| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3094| 
	.dwpsn	file "../Source/prod.c",line 3095,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3095| 
        B         $C$L430,UNC           ; [CPU_] |3095| 
        ; branch occurs ; [] |3095| 
$C$L423:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3121,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3121| 
        B         $C$L424,LOS           ; [CPU_] |3121| 
        ; branchcc occurs ; [] |3121| 
        MOVL      ACC,XAR4              ; [CPU_] |3121| 
        MOVL      XAR0,#66              ; [CPU_] |3121| 
        ADDB      ACC,#2                ; [CPU_] |3121| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3121| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3121| 
        CMPB      AL,#67                ; [CPU_] |3121| 
        B         $C$L424,NEQ           ; [CPU_] |3121| 
        ; branchcc occurs ; [] |3121| 
	.dwpsn	file "../Source/prod.c",line 3122,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3122| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3122| 
        ; call occurs [#_shunt_switch] ; [] |3122| 
	.dwpsn	file "../Source/prod.c",line 3123,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3123| 
	.dwpsn	file "../Source/prod.c",line 3124,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3124| 
        ; branch occurs ; [] |3124| 
$C$L424:    
	.dwpsn	file "../Source/prod.c",line 3125,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3125| 
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3125| 
        ; call occurs [#_shunt_switch] ; [] |3125| 
	.dwpsn	file "../Source/prod.c",line 3126,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3126| 
        B         $C$L633,UNC           ; [CPU_] |3126| 
        ; branch occurs ; [] |3126| 
$C$L425:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3101,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3101| 
        B         $C$L427,LOS           ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3101,column 6,is_stmt,isa 0
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_atoi")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3101| 
        ; call occurs [#_atoi] ; [] |3101| 
        CMPB      AL,#4                 ; [CPU_] |3101| 
        B         $C$L427,GT            ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
        CMPB      AL,#0                 ; [CPU_] |3101| 
        B         $C$L427,LEQ           ; [CPU_] |3101| 
        ; branchcc occurs ; [] |3101| 
	.dwpsn	file "../Source/prod.c",line 3103,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3103| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3103| 
        ADD       ACC,AR5               ; [CPU_] |3103| 
        MOVL      XAR4,ACC              ; [CPU_] |3103| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3103| 
$C$L426:    
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3103| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3103| 
	.dwpsn	file "../Source/prod.c",line 3104,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3104| 
        ; branch occurs ; [] |3104| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3105,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3105| 
        B         $C$L426,UNC           ; [CPU_] |3105| 
        ; branch occurs ; [] |3105| 
$C$L428:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3140,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3140| 
        B         $C$L431,LOS           ; [CPU_] |3140| 
        ; branchcc occurs ; [] |3140| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L431,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3140,column 6,is_stmt,isa 0
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_atoi")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3140| 
        ; call occurs [#_atoi] ; [] |3140| 
        CMPB      AL,#2                 ; [CPU_] |3140| 
        B         $C$L431,GT            ; [CPU_] |3140| 
        ; branchcc occurs ; [] |3140| 
        CMPB      AL,#0                 ; [CPU_] |3140| 
        B         $C$L431,LEQ           ; [CPU_] |3140| 
        ; branchcc occurs ; [] |3140| 
	.dwpsn	file "../Source/prod.c",line 3142,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3142| 
        ADD       AR6,AL                ; [CPU_] |3142| 
        MOVL      XAR0,#78              ; [CPU_] |3142| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3142| 
        ADD       ACC,AR6               ; [CPU_] |3142| 
$C$L429:    
        MOVL      XAR1,ACC              ; [CPU_] |3142| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3142| 
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3142| 
        ; call occurs [#_ad7738_resettare] ; [] |3142| 
	.dwpsn	file "../Source/prod.c",line 3143,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3143| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3143| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3143| 
	.dwpsn	file "../Source/prod.c",line 3144,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3144| 
$C$L430:    
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3144| 
        ; call occurs [#_ad7738_resetvall] ; [] |3144| 
	.dwpsn	file "../Source/prod.c",line 3145,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3145| 
        ; branch occurs ; [] |3145| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 3146,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3146| 
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3146| 
        ; call occurs [#_ad7738_resettare] ; [] |3146| 
	.dwpsn	file "../Source/prod.c",line 3147,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3147| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3147| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3147| 
	.dwpsn	file "../Source/prod.c",line 3148,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3148| 
        B         $C$L430,UNC           ; [CPU_] |3148| 
        ; branch occurs ; [] |3148| 
$C$L432:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3132,column 6,is_stmt,isa 0
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_atoi")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3132| 
        ; call occurs [#_atoi] ; [] |3132| 
        MOVL      XAR0,#94              ; [CPU_] |3132| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3132| 
	.dwpsn	file "../Source/prod.c",line 3135,column 6,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |3135| 
        ADDB      AL,#-1                ; [CPU_] |3135| 
        MOV       *+FP[AR0],AL          ; [CPU_] |3135| 
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3135| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3135| 
	.dwpsn	file "../Source/prod.c",line 3136,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3136| 
        ; branch occurs ; [] |3136| 
$C$L433:    
	.dwpsn	file "../Source/prod.c",line 1083,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1083| 
        CMPB      AL,#76                ; [CPU_] |1083| 
        B         $C$L434,GT            ; [CPU_] |1083| 
        ; branchcc occurs ; [] |1083| 
        CMPB      AL,#76                ; [CPU_] |1083| 
        B         $C$L442,EQ            ; [CPU_] |1083| 
        ; branchcc occurs ; [] |1083| 
        CMPB      AL,#65                ; [CPU_] |1083| 
        B         $C$L435,EQ            ; [CPU_] |1083| 
        ; branchcc occurs ; [] |1083| 
        CMPB      AL,#68                ; [CPU_] |1083| 
        B         $C$L446,EQ            ; [CPU_] |1083| 
        ; branchcc occurs ; [] |1083| 
        B         $C$L627,UNC           ; [CPU_] |1083| 
        ; branch occurs ; [] |1083| 
$C$L434:    
        CMPB      AL,#79                ; [CPU_] |1083| 
        B         $C$L445,EQ            ; [CPU_] |1083| 
        ; branchcc occurs ; [] |1083| 
        CMPB      AL,#83                ; [CPU_] |1083| 
        B         $C$L443,EQ            ; [CPU_] |1083| 
        ; branchcc occurs ; [] |1083| 
        B         $C$L627,UNC           ; [CPU_] |1083| 
        ; branch occurs ; [] |1083| 
$C$L435:    
	.dwpsn	file "../Source/prod.c",line 1088,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1088| 
	.dwpsn	file "../Source/prod.c",line 1089,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1089| 
	.dwpsn	file "../Source/prod.c",line 1088,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1088| 
	.dwpsn	file "../Source/prod.c",line 1089,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1089| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1089| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1089| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1089| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1089| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1089| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1089| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1089| 
        MOVL      XAR4,XAR1             ; [CPU_] |1089| 
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_sprintf")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1089| 
        ; call occurs [#_sprintf] ; [] |1089| 
	.dwpsn	file "../Source/prod.c",line 1091,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1091| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_scia_puts")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1091| 
        ; call occurs [#_scia_puts] ; [] |1091| 
	.dwpsn	file "../Source/prod.c",line 1092,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1092| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1092| 
        LSR       AL,8                  ; [CPU_] |1092| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1092| 
        MOV       *-SP[3],AL            ; [CPU_] |1092| 
        IN        AL,*(04004H)          ; [CPU_] |1092| 
        MOVL      XAR4,XAR1             ; [CPU_] |1092| 
        ANDB      AL,#0xff              ; [CPU_] |1092| 
        MOV       *-SP[4],AL            ; [CPU_] |1092| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_sprintf")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1092| 
        ; call occurs [#_sprintf] ; [] |1092| 
	.dwpsn	file "../Source/prod.c",line 1094,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1094| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_scia_puts")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1094| 
        ; call occurs [#_scia_puts] ; [] |1094| 
	.dwpsn	file "../Source/prod.c",line 1095,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1095| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1095| 
        MOVL      XAR0,#44              ; [CPU_] |1095| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1095| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1095| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1095| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1095| 
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_sprintf")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1095| 
        ; call occurs [#_sprintf] ; [] |1095| 
        MOVL      XAR0,#44              ; [CPU_] |1095| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1095| 
	.dwpsn	file "../Source/prod.c",line 1096,column 6,is_stmt,isa 0
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_scia_puts")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1096| 
        ; call occurs [#_scia_puts] ; [] |1096| 
	.dwpsn	file "../Source/prod.c",line 1097,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1097| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1097| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1097| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1097| 
        MOVL      XAR0,#44              ; [CPU_] |1097| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1097| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1097| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_sprintf")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1097| 
        ; call occurs [#_sprintf] ; [] |1097| 
        MOVL      XAR0,#44              ; [CPU_] |1097| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1097| 
	.dwpsn	file "../Source/prod.c",line 1099,column 6,is_stmt,isa 0
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_puts")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1099| 
        ; call occurs [#_scia_puts] ; [] |1099| 
	.dwpsn	file "../Source/prod.c",line 1101,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1101| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1101| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1101| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1101| 
        MOVL      XAR0,#72              ; [CPU_] |1101| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1101| 
        ADDL      ACC,XAR6              ; [CPU_] |1101| 
        MOVL      XAR4,ACC              ; [CPU_] |1101| 
        MOVL      XAR0,#44              ; [CPU_] |1101| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1101| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1101| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1101| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_sprintf")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1101| 
        ; call occurs [#_sprintf] ; [] |1101| 
        MOVL      XAR0,#44              ; [CPU_] |1101| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1101| 
	.dwpsn	file "../Source/prod.c",line 1103,column 6,is_stmt,isa 0
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_scia_puts")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1103| 
        ; call occurs [#_scia_puts] ; [] |1103| 
	.dwpsn	file "../Source/prod.c",line 1104,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1104| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1104| 
        B         $C$L436,EQ            ; [CPU_] |1104| 
        ; branchcc occurs ; [] |1104| 
        MOVB      XAR0,#34              ; [CPU_] |1104| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1104| 
        CMPB      AL,#1                 ; [CPU_] |1104| 
        B         $C$L437,NEQ           ; [CPU_] |1104| 
        ; branchcc occurs ; [] |1104| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1106,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1106| 
        MOVL      XAR0,#74              ; [CPU_] |1106| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1106| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1106| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1106| 
        ADDL      ACC,XAR6              ; [CPU_] |1106| 
        MOVL      XAR4,ACC              ; [CPU_] |1106| 
        MOVL      XAR0,#44              ; [CPU_] |1106| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1106| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1106| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1106| 
        MOVL      XAR4,XAR1             ; [CPU_] |1106| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_sprintf")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1106| 
        ; call occurs [#_sprintf] ; [] |1106| 
        MOVL      XAR4,XAR1             ; [CPU_] |1106| 
	.dwpsn	file "../Source/prod.c",line 1108,column 7,is_stmt,isa 0
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_scia_puts")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1108| 
        ; call occurs [#_scia_puts] ; [] |1108| 
$C$L437:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1110,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1110| 
        B         $C$L438,NEQ           ; [CPU_] |1110| 
        ; branchcc occurs ; [] |1110| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1110| 
        B         $C$L439,UNC           ; [CPU_] |1110| 
        ; branch occurs ; [] |1110| 
$C$L438:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1110| 
$C$L439:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1110| 
        MOVL      XAR0,#44              ; [CPU_] |1110| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1110| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1110| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1110| 
        MOVL      XAR4,XAR1             ; [CPU_] |1110| 
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_sprintf")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1110| 
        ; call occurs [#_sprintf] ; [] |1110| 
        MOVL      XAR4,XAR1             ; [CPU_] |1110| 
	.dwpsn	file "../Source/prod.c",line 1112,column 6,is_stmt,isa 0
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_scia_puts")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1112| 
        ; call occurs [#_scia_puts] ; [] |1112| 
	.dwpsn	file "../Source/prod.c",line 1114,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1114| 
        MOVB      XAR0,#38              ; [CPU_] |1114| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1114| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1114| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1114| 
        MOVL      XAR0,#44              ; [CPU_] |1114| 
        MOV       *-SP[3],AL            ; [CPU_] |1114| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1114| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_sprintf")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1114| 
        ; call occurs [#_sprintf] ; [] |1114| 
        MOVL      XAR0,#44              ; [CPU_] |1114| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1114| 
	.dwpsn	file "../Source/prod.c",line 1116,column 6,is_stmt,isa 0
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_scia_puts")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1116| 
        ; call occurs [#_scia_puts] ; [] |1116| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1118,column 11,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1118| 
        MOV       *+FP[AR0],#0          ; [CPU_] |1118| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1119,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1119| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_scia_puts")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1119| 
        ; call occurs [#_scia_puts] ; [] |1119| 
        MOVL      XAR0,#94              ; [CPU_] |1119| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1119| 
	.dwpsn	file "../Source/prod.c",line 1120,column 7,is_stmt,isa 0
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_print_channel")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1120| 
        ; call occurs [#_print_channel] ; [] |1120| 
	.dwpsn	file "../Source/prod.c",line 1121,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1121| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_print_sensor")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1121| 
        ; call occurs [#_print_sensor] ; [] |1121| 
	.dwpsn	file "../Source/prod.c",line 1118,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1118| 
        MOVL      XAR0,#94              ; [CPU_] |1118| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1118| 
        MOVL      XAR0,#94              ; [CPU_] |1118| 
        ADDB      AL,#1                 ; [CPU_] |1118| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1118| 
        CMPB      AL,#4                 ; [CPU_] |1118| 
        B         $C$L440,LO            ; [CPU_] |1118| 
        ; branchcc occurs ; [] |1118| 
	.dwpsn	file "../Source/prod.c",line 1124,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1124| 
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_scia_puts")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1124| 
        ; call occurs [#_scia_puts] ; [] |1124| 
	.dwpsn	file "../Source/prod.c",line 1125,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1125| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1125| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1125| 
        MOVL      ACC,XAR4              ; [CPU_] |1125| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1125| 
        MOVL      XAR4,ACC              ; [CPU_] |1125| 
        MOVL      XAR0,#44              ; [CPU_] |1125| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1125| 
        MOV       *-SP[3],AL            ; [CPU_] |1125| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1125| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_sprintf")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1125| 
        ; call occurs [#_sprintf] ; [] |1125| 
        MOVL      XAR0,#44              ; [CPU_] |1125| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1125| 
	.dwpsn	file "../Source/prod.c",line 1127,column 6,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_scia_puts")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1127| 
        ; call occurs [#_scia_puts] ; [] |1127| 
        MOVL      XAR0,#40              ; [CPU_] |1127| 
	.dwpsn	file "../Source/prod.c",line 1128,column 11,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |1128| 
	.dwpsn	file "../Source/prod.c",line 1127,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1127| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1129,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1129| 
        MOVB      AL,#65                ; [CPU_] |1129| 
        MOVL      XAR0,#44              ; [CPU_] |1129| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1129| 
        ADD       AL,*-SP[63]           ; [CPU_] |1129| 
        MOV       *-SP[3],AL            ; [CPU_] |1129| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1129| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1129| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1129| 
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_sprintf")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1129| 
        ; call occurs [#_sprintf] ; [] |1129| 
        MOVL      XAR0,#44              ; [CPU_] |1129| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1129| 
	.dwpsn	file "../Source/prod.c",line 1131,column 7,is_stmt,isa 0
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_scia_puts")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1131| 
        ; call occurs [#_scia_puts] ; [] |1131| 
	.dwpsn	file "../Source/prod.c",line 1128,column 18,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |1128| 
	.dwpsn	file "../Source/prod.c",line 1131,column 7,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |1131| 
	.dwpsn	file "../Source/prod.c",line 1128,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1128| 
        B         $C$L441,LT            ; [CPU_] |1128| 
        ; branchcc occurs ; [] |1128| 
	.dwpsn	file "../Source/prod.c",line 1133,column 6,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_print_vfd")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1133| 
        ; call occurs [#_print_vfd] ; [] |1133| 
	.dwpsn	file "../Source/prod.c",line 1134,column 6,is_stmt,isa 0
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_print_dac")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1134| 
        ; call occurs [#_print_dac] ; [] |1134| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1135,column 6,is_stmt,isa 0
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_print_limits")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1135| 
        ; call occurs [#_print_limits] ; [] |1135| 
	.dwpsn	file "../Source/prod.c",line 1136,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1136| 
        ; branch occurs ; [] |1136| 
$C$L443:    
	.dwpsn	file "../Source/prod.c",line 1140,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1140| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1140| 
        ; call occurs [#_scia_puts] ; [] |1140| 
	.dwpsn	file "../Source/prod.c",line 1142,column 11,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |1142| 
        MOV       *+FP[AR0],#0          ; [CPU_] |1142| 
$C$L444:    
	.dwpsn	file "../Source/prod.c",line 1143,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1143| 
        MOVL      XAR0,#95              ; [CPU_] |1143| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1143| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |1143| 
        MOVL      XAR0,#44              ; [CPU_] |1143| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1143| 
        MOVZ      AR1,AL                ; [CPU_] |1143| 
        MOV       *-SP[3],AL            ; [CPU_] |1143| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1143| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_sprintf")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1143| 
        ; call occurs [#_sprintf] ; [] |1143| 
        MOVL      XAR0,#44              ; [CPU_] |1143| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1143| 
	.dwpsn	file "../Source/prod.c",line 1144,column 7,is_stmt,isa 0
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_scia_puts")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1144| 
        ; call occurs [#_scia_puts] ; [] |1144| 
        MOVL      XAR0,#95              ; [CPU_] |1144| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1144| 
	.dwpsn	file "../Source/prod.c",line 1145,column 7,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_print_sensor")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1145| 
        ; call occurs [#_print_sensor] ; [] |1145| 
	.dwpsn	file "../Source/prod.c",line 1142,column 19,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |1142| 
        MOV       *+FP[AR0],AR1         ; [CPU_] |1142| 
        MOVL      XAR0,#95              ; [CPU_] |1142| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1142| 
        CMPB      AL,#20                ; [CPU_] |1142| 
        B         $C$L444,LO            ; [CPU_] |1142| 
        ; branchcc occurs ; [] |1142| 
        B         $C$L634,UNC           ; [CPU_] |1142| 
        ; branch occurs ; [] |1142| 
$C$L445:    
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_print_dac")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1156| 
        ; call occurs [#_print_dac] ; [] |1156| 
	.dwpsn	file "../Source/prod.c",line 1157,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1157| 
        ; branch occurs ; [] |1157| 
$C$L446:    
	.dwpsn	file "../Source/prod.c",line 1151,column 6,is_stmt,isa 0
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_print_vfd")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1151| 
        ; call occurs [#_print_vfd] ; [] |1151| 
	.dwpsn	file "../Source/prod.c",line 1152,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |1152| 
        ; branch occurs ; [] |1152| 
$C$L447:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2700,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2700| 
        B         $C$L627,LO            ; [CPU_] |2700| 
        ; branchcc occurs ; [] |2700| 
	.dwpsn	file "../Source/prod.c",line 2703,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2703| 
        CMPB      AL,#68                ; [CPU_] |2703| 
        B         $C$L448,EQ            ; [CPU_] |2703| 
        ; branchcc occurs ; [] |2703| 
        CMPB      AL,#83                ; [CPU_] |2703| 
        B         $C$L454,EQ            ; [CPU_] |2703| 
        ; branchcc occurs ; [] |2703| 
        B         $C$L627,UNC           ; [CPU_] |2703| 
        ; branch occurs ; [] |2703| 
$C$L448:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2821,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2821| 
        B         $C$L627,LO            ; [CPU_] |2821| 
        ; branchcc occurs ; [] |2821| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L627,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L627,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2825,column 6,is_stmt,isa 0
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_atoi")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2825| 
        ; call occurs [#_atoi] ; [] |2825| 
        MOVL      XAR0,#95              ; [CPU_] |2825| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2825| 
	.dwpsn	file "../Source/prod.c",line 2827,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2827| 
        CMPB      AL,#4                 ; [CPU_] |2827| 
        B         $C$L627,HIS           ; [CPU_] |2827| 
        ; branchcc occurs ; [] |2827| 
	.dwpsn	file "../Source/prod.c",line 2833,column 7,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2833| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2833| 
        MOVL      XAR0,#95              ; [CPU_] |2833| 
        MOV       T,*+FP[AR0]           ; [CPU_] |2833| 
        MOVL      XAR0,#40              ; [CPU_] |2833| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2833| 
        MOVB      AL,#12                ; [CPU_] |2833| 
        MPYU      ACC,T,AL              ; [CPU_] |2833| 
        ADDL      ACC,XAR6              ; [CPU_] |2833| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2833| 
        MOVL      XAR1,ACC              ; [CPU_] |2833| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2833| 
        CMPB      AL,#7                 ; [CPU_] |2833| 
        B         $C$L627,NEQ           ; [CPU_] |2833| 
        ; branchcc occurs ; [] |2833| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_strtod")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2837,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2837| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2839,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2839| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2839| 
        MOVL      ACC,XAR6              ; [CPU_] |2839| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2839| 
        ; call occurs [#FS$$CMP] ; [] |2839| 
        CMPB      AL,#0                 ; [CPU_] |2839| 
        B         $C$L627,LT            ; [CPU_] |2839| 
        ; branchcc occurs ; [] |2839| 
        MOV       AL,#0                 ; [CPU_] |2839| 
        MOV       AH,#16672             ; [CPU_] |2839| 
        MOVL      XAR0,#88              ; [CPU_] |2839| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2839| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2839| 
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2839| 
        ; call occurs [#FS$$CMP] ; [] |2839| 
        CMPB      AL,#0                 ; [CPU_] |2839| 
        B         $C$L627,GT            ; [CPU_] |2839| 
        ; branchcc occurs ; [] |2839| 
	.dwpsn	file "../Source/prod.c",line 2845,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2845| 
        MOV       AH,#0                 ; [CPU_] |2845| 
        MOVL      XAR0,#88              ; [CPU_] |2845| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2845| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2845| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2845| 
        ; call occurs [#FS$$CMP] ; [] |2845| 
        CMPB      AL,#0                 ; [CPU_] |2845| 
        B         $C$L449,GEQ           ; [CPU_] |2845| 
        ; branchcc occurs ; [] |2845| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2845| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2845| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2845| 
        B         $C$L450,UNC           ; [CPU_] |2845| 
        ; branch occurs ; [] |2845| 
$C$L449:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2845| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2845| 
$C$L450:    
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2845| 
        ; call occurs [#FS$$MPY] ; [] |2845| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2845| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2845| 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2845| 
        ; call occurs [#FS$$ADD] ; [] |2845| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2845| 
        ; call occurs [#FS$$TOLL] ; [] |2845| 
	.dwpsn	file "../Source/prod.c",line 2852,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2852| 
	.dwpsn	file "../Source/prod.c",line 2845,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2845| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2845| 
	.dwpsn	file "../Source/prod.c",line 2852,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2852| 
        CMP64     ACC:P                 ; [CPU_] |2852| 
        B         $C$L452,LEQ           ; [CPU_] |2852| 
        ; branchcc occurs ; [] |2852| 
	.dwpsn	file "../Source/prod.c",line 2854,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2854| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2854| 
        MOV       *-SP[2],#0            ; [CPU_] |2854| 
        MOV       *-SP[1],#0            ; [CPU_] |2854| 
        MOVL      P,*-SP[32]            ; [CPU_] |2854| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2854| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$975, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2854| 
        ; call occurs [#LL$$CMP] ; [] |2854| 
        CMPB      AL,#0                 ; [CPU_] |2854| 
        B         $C$L451,GEQ           ; [CPU_] |2854| 
        ; branchcc occurs ; [] |2854| 
	.dwpsn	file "../Source/prod.c",line 2857,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2857| 
        MOV       *-SP[35],AL           ; [CPU_] |2857| 
        B         $C$L453,UNC           ; [CPU_] |2857| 
        ; branch occurs ; [] |2857| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2855,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2855| 
	.dwpsn	file "../Source/prod.c",line 2856,column 6,is_stmt,isa 0
        B         $C$L453,UNC           ; [CPU_] |2856| 
        ; branch occurs ; [] |2856| 
$C$L452:    
	.dwpsn	file "../Source/prod.c",line 2853,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2853| 
$C$L453:    
        MOVL      XAR0,#95              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2860,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2860| 
        MOV       AH,*+FP[AR0]          ; [CPU_] 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2860| 
        ; call occurs [#_mcbsp_xmit] ; [] |2860| 
	.dwpsn	file "../Source/prod.c",line 2861,column 6,is_stmt,isa 0
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_latch_dac")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2861| 
        ; call occurs [#_latch_dac] ; [] |2861| 
	.dwpsn	file "../Source/prod.c",line 2863,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2863| 
        MOVL      XAR0,#95              ; [CPU_] |2863| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2863| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2863| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |2863| 
        MOV       *-SP[3],AL            ; [CPU_] |2863| 
        MOVL      XAR0,#44              ; [CPU_] |2863| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2863| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2863| 
        MOV       AL,*-SP[35]           ; [CPU_] |2863| 
        MOV       *-SP[7],AL            ; [CPU_] |2863| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2863| 
        MOVL      XAR4,XAR1             ; [CPU_] |2863| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_sprintf")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2863| 
        ; call occurs [#_sprintf] ; [] |2863| 
        MOVL      XAR4,XAR1             ; [CPU_] |2863| 
	.dwpsn	file "../Source/prod.c",line 2867,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2867| 
        ; branch occurs ; [] |2867| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2710,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2710| 
        MOVL      XAR0,#44              ; [CPU_] |2710| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2710| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2710| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2710| 
        MOVL      XAR4,XAR1             ; [CPU_] |2710| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_sprintf")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2710| 
        ; call occurs [#_sprintf] ; [] |2710| 
	.dwpsn	file "../Source/prod.c",line 2711,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2711| 
	.dwpsn	file "../Source/prod.c",line 2710,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2710| 
	.dwpsn	file "../Source/prod.c",line 2711,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2711| 
        MOV       AL,#1024              ; [CPU_] |2711| 
        MOVL      XAR5,XAR1             ; [CPU_] |2711| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2711| 
        ; call occurs [#_scia_getparam] ; [] |2711| 
	.dwpsn	file "../Source/prod.c",line 2712,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2712| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_atoi")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2712| 
        ; call occurs [#_atoi] ; [] |2712| 
        MOVL      XAR0,#95              ; [CPU_] |2712| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2712| 
	.dwpsn	file "../Source/prod.c",line 2713,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2713| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_scia_puts")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2713| 
        ; call occurs [#_scia_puts] ; [] |2713| 
        MOVL      XAR0,#95              ; [CPU_] |2713| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2713| 
	.dwpsn	file "../Source/prod.c",line 2715,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2715| 
        CMPB      AL,#4                 ; [CPU_] |2715| 
        B         $C$L469,HIS           ; [CPU_] |2715| 
        ; branchcc occurs ; [] |2715| 
	.dwpsn	file "../Source/prod.c",line 2719,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2719| 
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_scia_puts")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2719| 
        ; call occurs [#_scia_puts] ; [] |2719| 
        MOVL      XAR0,#62              ; [CPU_] |2719| 
	.dwpsn	file "../Source/prod.c",line 2723,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2723| 
	.dwpsn	file "../Source/prod.c",line 2719,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2719| 
	.dwpsn	file "../Source/prod.c",line 2723,column 11,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |2723| 
$C$L455:    
	.dwpsn	file "../Source/prod.c",line 2724,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2724| 
        MOVL      XAR0,#44              ; [CPU_] |2724| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2724| 
        MOV       *-SP[3],AL            ; [CPU_] |2724| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2724| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2724| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2724| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_sprintf")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2724| 
        ; call occurs [#_sprintf] ; [] |2724| 
        MOVL      XAR0,#44              ; [CPU_] |2724| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2724| 
	.dwpsn	file "../Source/prod.c",line 2725,column 7,is_stmt,isa 0
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_puts")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2725| 
        ; call occurs [#_scia_puts] ; [] |2725| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2726| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_puts")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2726| 
        ; call occurs [#_scia_puts] ; [] |2726| 
	.dwpsn	file "../Source/prod.c",line 2723,column 18,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |2723| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |2726| 
	.dwpsn	file "../Source/prod.c",line 2723,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2723| 
        B         $C$L455,LT            ; [CPU_] |2723| 
        ; branchcc occurs ; [] |2723| 
	.dwpsn	file "../Source/prod.c",line 2729,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2729| 
        MOVB      XAR0,#14              ; [CPU_] |2729| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2729| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2729| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2729| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2729| 
        MOVL      XAR0,#44              ; [CPU_] |2729| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2729| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2729| 
        MOVL      XAR4,XAR1             ; [CPU_] |2729| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_sprintf")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2729| 
        ; call occurs [#_sprintf] ; [] |2729| 
	.dwpsn	file "../Source/prod.c",line 2730,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2730| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_puts")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2730| 
        ; call occurs [#_scia_puts] ; [] |2730| 
	.dwpsn	file "../Source/prod.c",line 2731,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2731| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2731| 
        ; call occurs [#_scia_puts] ; [] |2731| 
        MOVL      XAR0,#95              ; [CPU_] |2731| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |2731| 
	.dwpsn	file "../Source/prod.c",line 2732,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2732| 
        MOV       AL,AH                 ; [CPU_] |2732| 
        MOVL      XAR0,#95              ; [CPU_] |2732| 
        ADDB      AL,#-1                ; [CPU_] |2732| 
        MOV       *-SP[63],AH           ; [CPU_] |2732| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2732| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2732| 
        MOV       *-SP[3],AH            ; [CPU_] |2732| 
        MOVL      XAR4,XAR1             ; [CPU_] |2732| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_sprintf")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2732| 
        ; call occurs [#_sprintf] ; [] |2732| 
	.dwpsn	file "../Source/prod.c",line 2734,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2734| 
        MOVL      XAR4,XAR1             ; [CPU_] |2734| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2734| 
        MOV       AL,#1024              ; [CPU_] |2734| 
        MOVL      XAR5,XAR1             ; [CPU_] |2734| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2734| 
        ; call occurs [#_scia_getparam] ; [] |2734| 
        MOVL      XAR4,XAR1             ; [CPU_] |2734| 
	.dwpsn	file "../Source/prod.c",line 2735,column 6,is_stmt,isa 0
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_atoi")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2735| 
        ; call occurs [#_atoi] ; [] |2735| 
        MOVL      XAR0,#93              ; [CPU_] |2735| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2735| 
	.dwpsn	file "../Source/prod.c",line 2728,column 6,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2728| 
        MOV       *+FP[AR0],#7          ; [CPU_] |2728| 
        MOVL      XAR0,#93              ; [CPU_] |2728| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2728| 
	.dwpsn	file "../Source/prod.c",line 2736,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2736| 
        B         $C$L456,LO            ; [CPU_] |2736| 
        ; branchcc occurs ; [] |2736| 
        CMPB      AL,#7                 ; [CPU_] |2736| 
        B         $C$L456,EQ            ; [CPU_] |2736| 
        ; branchcc occurs ; [] |2736| 
	.dwpsn	file "../Source/prod.c",line 2738,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2738| 
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2738| 
        ; call occurs [#_scia_puts] ; [] |2738| 
	.dwpsn	file "../Source/prod.c",line 2737,column 7,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |2737| 
        MOV       *+FP[AR0],#0          ; [CPU_] |2737| 
$C$L456:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2741,column 6,is_stmt,isa 0
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_scia_puts")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2741| 
        ; call occurs [#_scia_puts] ; [] |2741| 
	.dwpsn	file "../Source/prod.c",line 2742,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2742| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_puts")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2742| 
        ; call occurs [#_scia_puts] ; [] |2742| 
	.dwpsn	file "../Source/prod.c",line 2743,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2743| 
        MOV       T,*+FP[AR0]           ; [CPU_] |2743| 
        MOVL      XAR0,#40              ; [CPU_] |2743| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2743| 
        MOVB      AL,#12                ; [CPU_] |2743| 
        MPYU      ACC,T,AL              ; [CPU_] |2743| 
        ADDL      ACC,XAR6              ; [CPU_] |2743| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2743| 
        MOVL      XAR1,ACC              ; [CPU_] |2743| 
        MOVL      XAR0,#93              ; [CPU_] |2743| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2743| 
	.dwpsn	file "../Source/prod.c",line 2745,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2745| 
	.dwpsn	file "../Source/prod.c",line 2743,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2743| 
	.dwpsn	file "../Source/prod.c",line 2745,column 6,is_stmt,isa 0
        B         $C$L463,EQ            ; [CPU_] |2745| 
        ; branchcc occurs ; [] |2745| 
	.dwpsn	file "../Source/prod.c",line 2747,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2747| 
        B         $C$L458,EQ            ; [CPU_] |2747| 
        ; branchcc occurs ; [] |2747| 
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2747| 
        B         $C$L458,EQ            ; [CPU_] |2747| 
        ; branchcc occurs ; [] |2747| 
	.dwpsn	file "../Source/prod.c",line 2750,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2750| 
        B         $C$L457,EQ            ; [CPU_] |2750| 
        ; branchcc occurs ; [] |2750| 
        CMPB      AL,#4                 ; [CPU_] |2750| 
        B         $C$L459,NEQ           ; [CPU_] |2750| 
        ; branchcc occurs ; [] |2750| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2751,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2751| 
        MOV       *+FP[AR0],#2          ; [CPU_] |2751| 
        B         $C$L459,UNC           ; [CPU_] |2751| 
        ; branch occurs ; [] |2751| 
$C$L458:    
	.dwpsn	file "../Source/prod.c",line 2749,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2749| 
        MOV       *+FP[AR0],#4          ; [CPU_] |2749| 
$C$L459:    
        MOVL      XAR0,#92              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2756,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2756| 
        MOVL      XAR0,#92              ; [CPU_] |2756| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2756| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2756| 
        MOVL      XAR0,#44              ; [CPU_] |2756| 
        MOV       *-SP[3],AL            ; [CPU_] |2756| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2756| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_sprintf")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2756| 
        ; call occurs [#_sprintf] ; [] |2756| 
        MOVL      XAR0,#44              ; [CPU_] |2756| 
	.dwpsn	file "../Source/prod.c",line 2757,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2757| 
	.dwpsn	file "../Source/prod.c",line 2756,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2756| 
	.dwpsn	file "../Source/prod.c",line 2757,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2757| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2757| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2757| 
        ; call occurs [#_scia_getparam] ; [] |2757| 
        MOVL      XAR0,#86              ; [CPU_] |2757| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2757| 
	.dwpsn	file "../Source/prod.c",line 2758,column 8,is_stmt,isa 0
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_atoi")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2758| 
        ; call occurs [#_atoi] ; [] |2758| 
        MOVL      XAR0,#94              ; [CPU_] |2758| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2758| 
        MOVL      XAR0,#86              ; [CPU_] |2758| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2758| 
	.dwpsn	file "../Source/prod.c",line 2759,column 8,is_stmt,isa 0
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_scia_puts")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2759| 
        ; call occurs [#_scia_puts] ; [] |2759| 
        MOVL      XAR0,#94              ; [CPU_] |2759| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2759| 
	.dwpsn	file "../Source/prod.c",line 2761,column 9,is_stmt,isa 0
        B         $C$L468,EQ            ; [CPU_] |2761| 
        ; branchcc occurs ; [] |2761| 
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       AH,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMP       AL,AH                 ; [CPU_] |2761| 
        B         $C$L468,LO            ; [CPU_] |2761| 
        ; branchcc occurs ; [] |2761| 
	.dwpsn	file "../Source/prod.c",line 2765,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2765| 
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2765| 
        ; call occurs [#_scia_puts] ; [] |2765| 
        MOVL      XAR0,#94              ; [CPU_] |2765| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2765| 
	.dwpsn	file "../Source/prod.c",line 2767,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2767| 
        ADDB      AL,#-1                ; [CPU_] |2767| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2767| 
        MOVL      XAR0,#93              ; [CPU_] |2767| 
        MOV       *+XAR1[1],AL          ; [CPU_] |2767| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2767| 
	.dwpsn	file "../Source/prod.c",line 2770,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2770| 
        B         $C$L461,EQ            ; [CPU_] |2770| 
        ; branchcc occurs ; [] |2770| 
        CMPB      AL,#4                 ; [CPU_] |2770| 
        B         $C$L463,NEQ           ; [CPU_] |2770| 
        ; branchcc occurs ; [] |2770| 
	.dwpsn	file "../Source/prod.c",line 2775,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2775| 
        B         $C$L462,UNC           ; [CPU_] |2775| 
        ; branch occurs ; [] |2775| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2773,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2773| 
$C$L462:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2773| 
        MOVL      XAR0,#44              ; [CPU_] |2773| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2773| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_sprintf")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2773| 
        ; call occurs [#_sprintf] ; [] |2773| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2777,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2777| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2777| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2777| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2777| 
        ; call occurs [#_scia_getparam] ; [] |2777| 
        MOVL      XAR0,#86              ; [CPU_] |2777| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2777,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2777| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_strtod")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2778,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2778| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2778| 
        MOVL      XAR0,#86              ; [CPU_] |2778| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2778| 
	.dwpsn	file "../Source/prod.c",line 2779,column 8,is_stmt,isa 0
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2779| 
        ; call occurs [#_scia_puts] ; [] |2779| 
	.dwpsn	file "../Source/prod.c",line 2780,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2780| 
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2780| 
        ; call occurs [#_scia_puts] ; [] |2780| 
	.dwpsn	file "../Source/prod.c",line 2783,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2783| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2783| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2783| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2783| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_sprintf")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2783| 
        ; call occurs [#_sprintf] ; [] |2783| 
        MOVL      XAR0,#44              ; [CPU_] |2783| 
	.dwpsn	file "../Source/prod.c",line 2784,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2784| 
	.dwpsn	file "../Source/prod.c",line 2783,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2783| 
	.dwpsn	file "../Source/prod.c",line 2784,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2784| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2784| 
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2784| 
        ; call occurs [#_scia_getparam] ; [] |2784| 
        MOVL      XAR0,#86              ; [CPU_] |2784| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2784,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2784| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_strtod")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2785,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2785| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2785| 
        MOVL      XAR0,#86              ; [CPU_] |2785| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2785| 
	.dwpsn	file "../Source/prod.c",line 2786,column 8,is_stmt,isa 0
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2786| 
        ; call occurs [#_scia_puts] ; [] |2786| 
	.dwpsn	file "../Source/prod.c",line 2787,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2787| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2787| 
        ; call occurs [#_scia_puts] ; [] |2787| 
$C$L463:    
	.dwpsn	file "../Source/prod.c",line 2794,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2794| 
        MOV       AL,*-SP[63]           ; [CPU_] |2794| 
        MOVL      XAR0,#93              ; [CPU_] |2794| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2794| 
        MOV       *-SP[3],AL            ; [CPU_] |2794| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2794| 
        MOVL      XAR0,#62              ; [CPU_] |2794| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2794| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2794| 
        ADDL      ACC,XAR6              ; [CPU_] |2794| 
        MOVL      XAR4,ACC              ; [CPU_] |2794| 
        MOVL      XAR0,#44              ; [CPU_] |2794| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2794| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2794| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_sprintf")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2794| 
        ; call occurs [#_sprintf] ; [] |2794| 
        MOVL      XAR0,#44              ; [CPU_] |2794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2794| 
	.dwpsn	file "../Source/prod.c",line 2796,column 6,is_stmt,isa 0
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2796| 
        ; call occurs [#_scia_puts] ; [] |2796| 
	.dwpsn	file "../Source/prod.c",line 2791,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |2791| 
        MOV       *+FP[AR0],#1          ; [CPU_] |2791| 
        MOVL      XAR0,#93              ; [CPU_] |2791| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2791| 
	.dwpsn	file "../Source/prod.c",line 2798,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2798| 
        B         $C$L465,EQ            ; [CPU_] |2798| 
        ; branchcc occurs ; [] |2798| 
	.dwpsn	file "../Source/prod.c",line 2801,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2801| 
        MOVB      AL,#1                 ; [CPU_] |2801| 
        MOVL      XAR0,#94              ; [CPU_] |2801| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2801| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |2801| 
        MOVL      XAR0,#44              ; [CPU_] |2801| 
        MOV       *-SP[3],AL            ; [CPU_] |2801| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2801| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_sprintf")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2801| 
        ; call occurs [#_sprintf] ; [] |2801| 
        MOVL      XAR0,#44              ; [CPU_] |2801| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2801| 
	.dwpsn	file "../Source/prod.c",line 2802,column 7,is_stmt,isa 0
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2802| 
        ; call occurs [#_scia_puts] ; [] |2802| 
        MOVL      XAR0,#93              ; [CPU_] |2802| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2802| 
	.dwpsn	file "../Source/prod.c",line 2804,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2804| 
        B         $C$L464,EQ            ; [CPU_] |2804| 
        ; branchcc occurs ; [] |2804| 
        CMPB      AL,#4                 ; [CPU_] |2804| 
        B         $C$L467,NEQ           ; [CPU_] |2804| 
        ; branchcc occurs ; [] |2804| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2805,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2805| 
        MOVB      XAR0,#8               ; [CPU_] |2805| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2805| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2805| 
        MOVB      XAR0,#10              ; [CPU_] |2805| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2805| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2805| 
        MOVL      XAR0,#44              ; [CPU_] |2805| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2805| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2805| 
        MOVL      XAR4,XAR1             ; [CPU_] |2805| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_sprintf")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2805| 
        ; call occurs [#_sprintf] ; [] |2805| 
        MOVL      XAR4,XAR1             ; [CPU_] |2805| 
	.dwpsn	file "../Source/prod.c",line 2808,column 8,is_stmt,isa 0
        B         $C$L466,UNC           ; [CPU_] |2808| 
        ; branch occurs ; [] |2808| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2799,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2799| 
$C$L466:    
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2799| 
        ; call occurs [#_scia_puts] ; [] |2799| 
$C$L467:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2813,column 6,is_stmt,isa 0
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2813| 
        ; call occurs [#_ad7738_setcal] ; [] |2813| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2815,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |2815| 
        ; branch occurs ; [] |2815| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2763,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2763| 
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2763| 
        ; call occurs [#_scia_puts] ; [] |2763| 
	.dwpsn	file "../Source/prod.c",line 2755,column 7,is_stmt,isa 0
        B         $C$L460,UNC           ; [CPU_] |2755| 
        ; branch occurs ; [] |2755| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2717,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2717| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2717| 
        ; call occurs [#_scia_puts] ; [] |2717| 
	.dwpsn	file "../Source/prod.c",line 2709,column 6,is_stmt,isa 0
        B         $C$L454,UNC           ; [CPU_] |2709| 
        ; branch occurs ; [] |2709| 
$C$L470:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2881,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2881| 
        B         $C$L627,LO            ; [CPU_] |2881| 
        ; branchcc occurs ; [] |2881| 
	.dwpsn	file "../Source/prod.c",line 2884,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2884| 
        CMPB      AL,#83                ; [CPU_] |2884| 
        B         $C$L627,NEQ           ; [CPU_] |2884| 
        ; branchcc occurs ; [] |2884| 
$C$L471:    
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2891| 
        MOVL      XAR0,#44              ; [CPU_] |2891| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2891| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2891| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2891| 
        MOVL      XAR4,XAR1             ; [CPU_] |2891| 
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_sprintf")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2891| 
        ; call occurs [#_sprintf] ; [] |2891| 
	.dwpsn	file "../Source/prod.c",line 2892,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2892| 
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2891| 
	.dwpsn	file "../Source/prod.c",line 2892,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2892| 
        MOV       AL,#1024              ; [CPU_] |2892| 
        MOVL      XAR5,XAR1             ; [CPU_] |2892| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2892| 
        ; call occurs [#_scia_getparam] ; [] |2892| 
	.dwpsn	file "../Source/prod.c",line 2893,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2893| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_atoi")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2893| 
        ; call occurs [#_atoi] ; [] |2893| 
        MOVL      XAR0,#95              ; [CPU_] |2893| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2893| 
	.dwpsn	file "../Source/prod.c",line 2894,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2894| 
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2894| 
        ; call occurs [#_scia_puts] ; [] |2894| 
        MOVL      XAR0,#95              ; [CPU_] |2894| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2894| 
	.dwpsn	file "../Source/prod.c",line 2896,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2896| 
        CMPB      AL,#4                 ; [CPU_] |2896| 
        B         $C$L497,HIS           ; [CPU_] |2896| 
        ; branchcc occurs ; [] |2896| 
	.dwpsn	file "../Source/prod.c",line 2900,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2900| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2900| 
        ; call occurs [#_scia_puts] ; [] |2900| 
        MOVL      XAR0,#95              ; [CPU_] |2900| 
        MOVZ      AR1,*+FP[AR0]         ; [CPU_] |2900| 
	.dwpsn	file "../Source/prod.c",line 2903,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2903| 
        MOVL      XAR0,#95              ; [CPU_] |2903| 
        MOV       AL,AR1                ; [CPU_] |2903| 
        ADDB      AL,#-1                ; [CPU_] |2903| 
        MOV       *-SP[63],AR1          ; [CPU_] |2903| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2903| 
        MOVL      XAR0,#44              ; [CPU_] |2903| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2903| 
        MOV       *-SP[3],AR1           ; [CPU_] |2903| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2903| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_sprintf")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2903| 
        ; call occurs [#_sprintf] ; [] |2903| 
        MOVL      XAR0,#44              ; [CPU_] |2903| 
	.dwpsn	file "../Source/prod.c",line 2904,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2903,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2903| 
	.dwpsn	file "../Source/prod.c",line 2904,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2904| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2904| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2904| 
        ; call occurs [#_scia_getparam] ; [] |2904| 
        MOVL      XAR0,#86              ; [CPU_] |2904| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2905,column 6,is_stmt,isa 0
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2905| 
        ; call occurs [#_scia_puts] ; [] |2905| 
	.dwpsn	file "../Source/prod.c",line 2906,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2906| 
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2906| 
        ; call occurs [#_scia_puts] ; [] |2906| 
        MOVL      XAR0,#86              ; [CPU_] |2906| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2906| 
	.dwpsn	file "../Source/prod.c",line 2908,column 6,is_stmt,isa 0
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_atoi")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2908| 
        ; call occurs [#_atoi] ; [] |2908| 
        CMPB      AL,#1                 ; [CPU_] |2908| 
        B         $C$L472,EQ            ; [CPU_] |2908| 
        ; branchcc occurs ; [] |2908| 
        MOVL      XAR0,#95              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3057,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3057| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3057| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3057| 
        ADDL      ACC,XAR6              ; [CPU_] |3057| 
        ADD       ACC,#199 << 4         ; [CPU_] |3057| 
        MOVL      XAR4,ACC              ; [CPU_] |3057| 
	.dwpsn	file "../Source/prod.c",line 3058,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3058| 
	.dwpsn	file "../Source/prod.c",line 3057,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3057| 
	.dwpsn	file "../Source/prod.c",line 3058,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3058| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3058| 
        MOV       *-SP[3],AR1           ; [CPU_] |3058| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3058| 
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_sprintf")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3058| 
        ; call occurs [#_sprintf] ; [] |3058| 
        B         $C$L411,UNC           ; [CPU_] |3058| 
        ; branch occurs ; [] |3058| 
$C$L472:    
        MOVL      XAR0,#95              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2911,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2911| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2911| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2911| 
        ADDL      ACC,XAR6              ; [CPU_] |2911| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2911| 
        MOVL      XAR1,ACC              ; [CPU_] |2911| 
        MOVL      XAR0,#62              ; [CPU_] |2911| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2911| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2911| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2914,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2914| 
        MOVL      XAR0,#92              ; [CPU_] |2914| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2914| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2915,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2915| 
        MOVL      XAR0,#88              ; [CPU_] |2915| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2915| 
        MOV       *-SP[3],AL            ; [CPU_] |2915| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2915| 
        MOVL      XAR0,#88              ; [CPU_] |2915| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2915| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2915| 
        MOVL      XAR0,#44              ; [CPU_] |2915| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2915| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2915| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_sprintf")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2915| 
        ; call occurs [#_sprintf] ; [] |2915| 
        MOVL      XAR0,#44              ; [CPU_] |2915| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2915| 
	.dwpsn	file "../Source/prod.c",line 2916,column 8,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2916| 
        ; call occurs [#_scia_puts] ; [] |2916| 
        MOVL      XAR0,#92              ; [CPU_] |2916| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2916| 
	.dwpsn	file "../Source/prod.c",line 2917,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2917| 
        B         $C$L474,GEQ           ; [CPU_] |2917| 
        ; branchcc occurs ; [] |2917| 
	.dwpsn	file "../Source/prod.c",line 2918,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2918| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2918| 
        ; call occurs [#_scia_puts] ; [] |2918| 
$C$L474:    
        MOVL      XAR0,#92              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2914,column 19,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2914| 
        ADDB      AL,#1                 ; [CPU_] |2914| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2914| 
        CMPB      AL,#5                 ; [CPU_] |2914| 
        B         $C$L473,LT            ; [CPU_] |2914| 
        ; branchcc occurs ; [] |2914| 
	.dwpsn	file "../Source/prod.c",line 2921,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2921| 
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2921| 
        ; call occurs [#_scia_puts] ; [] |2921| 
	.dwpsn	file "../Source/prod.c",line 2922,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2922| 
        MOVL      XAR0,#44              ; [CPU_] |2922| 
        MOV       AL,*-SP[63]           ; [CPU_] |2922| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2922| 
        MOV       *-SP[3],AL            ; [CPU_] |2922| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2922| 
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_sprintf")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2922| 
        ; call occurs [#_sprintf] ; [] |2922| 
        MOVL      XAR0,#44              ; [CPU_] |2922| 
	.dwpsn	file "../Source/prod.c",line 2925,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2925| 
	.dwpsn	file "../Source/prod.c",line 2922,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2922| 
	.dwpsn	file "../Source/prod.c",line 2925,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2925| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2925| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2925| 
        ; call occurs [#_scia_getparam] ; [] |2925| 
        MOVL      XAR0,#86              ; [CPU_] |2925| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2925| 
	.dwpsn	file "../Source/prod.c",line 2926,column 7,is_stmt,isa 0
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_atoi")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2926| 
        ; call occurs [#_atoi] ; [] |2926| 
        MOVL      XAR0,#93              ; [CPU_] |2926| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2926| 
        CMPB      AL,#5                 ; [CPU_] |2926| 
        B         $C$L475,LO            ; [CPU_] |2926| 
        ; branchcc occurs ; [] |2926| 
	.dwpsn	file "../Source/prod.c",line 2929,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2929| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2929| 
        ; call occurs [#_scia_puts] ; [] |2929| 
	.dwpsn	file "../Source/prod.c",line 2928,column 8,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |2928| 
        MOV       *+FP[AR0],#0          ; [CPU_] |2928| 
$C$L475:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2932,column 7,is_stmt,isa 0
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2932| 
        ; call occurs [#_scia_puts] ; [] |2932| 
	.dwpsn	file "../Source/prod.c",line 2933,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2933| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2933| 
        ; call occurs [#_scia_puts] ; [] |2933| 
        MOVL      XAR0,#93              ; [CPU_] |2933| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2933| 
	.dwpsn	file "../Source/prod.c",line 2934,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2934| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2936| 
        B         $C$L477,EQ            ; [CPU_] |2936| 
        ; branchcc occurs ; [] |2936| 
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2936| 
        B         $C$L477,EQ            ; [CPU_] |2936| 
        ; branchcc occurs ; [] |2936| 
	.dwpsn	file "../Source/prod.c",line 2939,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2939| 
        B         $C$L476,EQ            ; [CPU_] |2939| 
        ; branchcc occurs ; [] |2939| 
        CMPB      AL,#4                 ; [CPU_] |2939| 
        B         $C$L478,NEQ           ; [CPU_] |2939| 
        ; branchcc occurs ; [] |2939| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2940,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2940| 
        MOV       *+FP[AR0],#2          ; [CPU_] |2940| 
        B         $C$L478,UNC           ; [CPU_] |2940| 
        ; branch occurs ; [] |2940| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2938,column 8,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2938| 
        MOV       *+FP[AR0],#4          ; [CPU_] |2938| 
$C$L478:    
        MOVL      XAR0,#92              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2945,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2945| 
        MOVL      XAR0,#92              ; [CPU_] |2945| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2945| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2945| 
        MOVL      XAR0,#44              ; [CPU_] |2945| 
        MOV       *-SP[3],AL            ; [CPU_] |2945| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2945| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_sprintf")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2945| 
        ; call occurs [#_sprintf] ; [] |2945| 
        MOVL      XAR0,#44              ; [CPU_] |2945| 
	.dwpsn	file "../Source/prod.c",line 2946,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2946| 
	.dwpsn	file "../Source/prod.c",line 2945,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2945| 
	.dwpsn	file "../Source/prod.c",line 2946,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2946| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2946| 
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2946| 
        ; call occurs [#_scia_getparam] ; [] |2946| 
        MOVL      XAR0,#86              ; [CPU_] |2946| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2946| 
	.dwpsn	file "../Source/prod.c",line 2947,column 8,is_stmt,isa 0
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_atoi")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2947| 
        ; call occurs [#_atoi] ; [] |2947| 
        MOVL      XAR0,#94              ; [CPU_] |2947| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2947| 
        MOVL      XAR0,#86              ; [CPU_] |2947| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2947| 
	.dwpsn	file "../Source/prod.c",line 2948,column 8,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2948| 
        ; call occurs [#_scia_puts] ; [] |2948| 
        MOVL      XAR0,#94              ; [CPU_] |2948| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2948| 
	.dwpsn	file "../Source/prod.c",line 2950,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2950| 
        ; branchcc occurs ; [] |2950| 
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       AH,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMP       AL,AH                 ; [CPU_] |2950| 
        B         $C$L496,LO            ; [CPU_] |2950| 
        ; branchcc occurs ; [] |2950| 
	.dwpsn	file "../Source/prod.c",line 2954,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2954| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2954| 
        ; call occurs [#_scia_puts] ; [] |2954| 
        MOVL      XAR0,#94              ; [CPU_] |2954| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2954| 
	.dwpsn	file "../Source/prod.c",line 2959,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2959| 
	.dwpsn	file "../Source/prod.c",line 2956,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2956| 
        ADDB      AL,#-1                ; [CPU_] |2956| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2956| 
	.dwpsn	file "../Source/prod.c",line 2959,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2959| 
	.dwpsn	file "../Source/prod.c",line 2956,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2956| 
	.dwpsn	file "../Source/prod.c",line 2959,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2959| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2959| 
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2959| 
        ; call occurs [#_scia_getparam] ; [] |2959| 
        MOVL      XAR0,#86              ; [CPU_] |2959| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2959| 
	.dwpsn	file "../Source/prod.c",line 2962,column 7,is_stmt,isa 0
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2962| 
        ; call occurs [#_scia_puts] ; [] |2962| 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2963| 
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2963| 
        ; call occurs [#_scia_puts] ; [] |2963| 
        MOVL      XAR0,#86              ; [CPU_] |2963| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2963| 
	.dwpsn	file "../Source/prod.c",line 2965,column 7,is_stmt,isa 0
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_atoi")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2965| 
        ; call occurs [#_atoi] ; [] |2965| 
        CMPB      AL,#1                 ; [CPU_] |2965| 
        B         $C$L480,EQ            ; [CPU_] |2965| 
        ; branchcc occurs ; [] |2965| 
	.dwpsn	file "../Source/prod.c",line 2969,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2969| 
        B         $C$L481,UNC           ; [CPU_] |2969| 
        ; branch occurs ; [] |2969| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 2967,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2967| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2972,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2972| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2972| 
        MOV       AL,#1024              ; [CPU_] |2972| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2972| 
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2972| 
        ; call occurs [#_scia_getparam] ; [] |2972| 
        MOVL      XAR0,#86              ; [CPU_] |2972| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2972| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2975| 
        ; call occurs [#_scia_puts] ; [] |2975| 
	.dwpsn	file "../Source/prod.c",line 2976,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2976| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2976| 
        ; call occurs [#_scia_puts] ; [] |2976| 
        MOVL      XAR0,#86              ; [CPU_] |2976| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2976| 
	.dwpsn	file "../Source/prod.c",line 2978,column 7,is_stmt,isa 0
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_atoi")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2978| 
        ; call occurs [#_atoi] ; [] |2978| 
        CMPB      AL,#1                 ; [CPU_] |2978| 
        B         $C$L482,EQ            ; [CPU_] |2978| 
        ; branchcc occurs ; [] |2978| 
	.dwpsn	file "../Source/prod.c",line 2982,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2982| 
        B         $C$L483,UNC           ; [CPU_] |2982| 
        ; branch occurs ; [] |2982| 
$C$L482:    
	.dwpsn	file "../Source/prod.c",line 2980,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2980| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2985,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2985| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2985| 
        MOV       AL,#1024              ; [CPU_] |2985| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2985| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2985| 
        ; call occurs [#_scia_getparam] ; [] |2985| 
        MOVL      XAR0,#86              ; [CPU_] |2985| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2985| 
	.dwpsn	file "../Source/prod.c",line 2988,column 7,is_stmt,isa 0
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2988| 
        ; call occurs [#_scia_puts] ; [] |2988| 
	.dwpsn	file "../Source/prod.c",line 2989,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2989| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2989| 
        ; call occurs [#_scia_puts] ; [] |2989| 
        MOVL      XAR0,#86              ; [CPU_] |2989| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2989| 
	.dwpsn	file "../Source/prod.c",line 2991,column 7,is_stmt,isa 0
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_atoi")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2991| 
        ; call occurs [#_atoi] ; [] |2991| 
        CMPB      AL,#1                 ; [CPU_] |2991| 
        B         $C$L484,EQ            ; [CPU_] |2991| 
        ; branchcc occurs ; [] |2991| 
	.dwpsn	file "../Source/prod.c",line 2995,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2995| 
        B         $C$L485,UNC           ; [CPU_] |2995| 
        ; branch occurs ; [] |2995| 
$C$L484:    
	.dwpsn	file "../Source/prod.c",line 2993,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2993| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2999,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2999| 
        CMPB      AL,#2                 ; [CPU_] |2999| 
        B         $C$L487,LOS           ; [CPU_] |2999| 
        ; branchcc occurs ; [] |2999| 
        CMPB      AL,#3                 ; [CPU_] |2999| 
        B         $C$L486,EQ            ; [CPU_] |2999| 
        ; branchcc occurs ; [] |2999| 
        CMPB      AL,#4                 ; [CPU_] |2999| 
        B         $C$L489,NEQ           ; [CPU_] |2999| 
        ; branchcc occurs ; [] |2999| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3011,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |3011| 
	.dwpsn	file "../Source/prod.c",line 3012,column 8,is_stmt,isa 0
        B         $C$L488,UNC           ; [CPU_] |3012| 
        ; branch occurs ; [] |3012| 
$C$L486:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3008,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |3008| 
	.dwpsn	file "../Source/prod.c",line 3009,column 8,is_stmt,isa 0
        B         $C$L488,UNC           ; [CPU_] |3009| 
        ; branch occurs ; [] |3009| 
$C$L487:    
	.dwpsn	file "../Source/prod.c",line 3003,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3003| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3003| 
        MOV       T,#10                 ; [CPU_] |3003| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |3003| 
        ADDL      ACC,XAR6              ; [CPU_] |3003| 
        MOVL      XAR4,ACC              ; [CPU_] |3003| 
        MOVB      XAR0,#42              ; [CPU_] |3003| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |3003| 
        MPYB      ACC,T,#152            ; [CPU_] |3003| 
        ADDL      ACC,XAR6              ; [CPU_] |3003| 
        MOVL      XAR4,ACC              ; [CPU_] |3003| 
        MOVB      XAR0,#125             ; [CPU_] |3003| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3003| 
        MOVL      XAR0,#70              ; [CPU_] |3003| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3003| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |3003| 
        MOV       ACC,AL << 1           ; [CPU_] |3003| 
        ADDL      ACC,XAR6              ; [CPU_] |3003| 
        MOVL      XAR4,ACC              ; [CPU_] |3003| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3003| 
$C$L488:    
        MOVL      XAR0,#48              ; [CPU_] |3003| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3003| 
$C$L489:    
	.dwpsn	file "../Source/prod.c",line 3016,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |3016| 
        MOVL      XAR0,#48              ; [CPU_] |3016| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3016| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3016| 
        MOVL      XAR0,#44              ; [CPU_] |3016| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3016| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3016| 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_sprintf")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3016| 
        ; call occurs [#_sprintf] ; [] |3016| 
        MOVL      XAR0,#44              ; [CPU_] |3016| 
	.dwpsn	file "../Source/prod.c",line 3017,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3017| 
	.dwpsn	file "../Source/prod.c",line 3016,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3016| 
	.dwpsn	file "../Source/prod.c",line 3017,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3017| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3017| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3017| 
        ; call occurs [#_scia_getparam] ; [] |3017| 
        MOVL      XAR0,#86              ; [CPU_] |3017| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3017| 
	.dwpsn	file "../Source/prod.c",line 3018,column 7,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3018| 
        ; call occurs [#_scia_puts] ; [] |3018| 
	.dwpsn	file "../Source/prod.c",line 3019,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3019| 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3019| 
        ; call occurs [#_scia_puts] ; [] |3019| 
        MOVL      XAR0,#86              ; [CPU_] |3019| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3019,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3019| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_strtod")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3025,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |3025| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3025| 
	.dwpsn	file "../Source/prod.c",line 3021,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3021| 
	.dwpsn	file "../Source/prod.c",line 3025,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3025| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3025| 
        MOVL      XAR0,#44              ; [CPU_] |3025| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3025| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3025| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_sprintf")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3025| 
        ; call occurs [#_sprintf] ; [] |3025| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3026,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3026| 
        MOVL      XAR0,#86              ; [CPU_] |3026| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3026| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3026| 
        ; call occurs [#_scia_getparam] ; [] |3026| 
        MOVL      XAR0,#86              ; [CPU_] |3026| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3026| 
	.dwpsn	file "../Source/prod.c",line 3027,column 7,is_stmt,isa 0
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3027| 
        ; call occurs [#_scia_puts] ; [] |3027| 
	.dwpsn	file "../Source/prod.c",line 3028,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3028| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3028| 
        ; call occurs [#_scia_puts] ; [] |3028| 
        MOVL      XAR0,#86              ; [CPU_] |3028| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3028,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3028| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_strtod")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3036,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3036| 
        MOVL      XAR0,#93              ; [CPU_] |3036| 
	.dwpsn	file "../Source/prod.c",line 3030,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3030| 
	.dwpsn	file "../Source/prod.c",line 3036,column 7,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |3036| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3036| 
        MOV       *-SP[3],AL            ; [CPU_] |3036| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |3036| 
        MOVL      XAR0,#62              ; [CPU_] |3036| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3036| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |3036| 
        ADDL      ACC,XAR6              ; [CPU_] |3036| 
        MOVL      XAR4,ACC              ; [CPU_] |3036| 
        MOVL      XAR0,#94              ; [CPU_] |3036| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3036| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3036| 
        MOVB      AL,#1                 ; [CPU_] |3036| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |3036| 
        MOVL      XAR0,#44              ; [CPU_] |3036| 
        MOV       *-SP[7],AL            ; [CPU_] |3036| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3036| 
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_sprintf")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3036| 
        ; call occurs [#_sprintf] ; [] |3036| 
        MOVL      XAR0,#44              ; [CPU_] |3036| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3036| 
	.dwpsn	file "../Source/prod.c",line 3039,column 7,is_stmt,isa 0
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3039| 
        ; call occurs [#_scia_puts] ; [] |3039| 
	.dwpsn	file "../Source/prod.c",line 3041,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3041| 
        B         $C$L490,TC            ; [CPU_] |3041| 
        ; branchcc occurs ; [] |3041| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3041| 
        B         $C$L491,UNC           ; [CPU_] |3041| 
        ; branch occurs ; [] |3041| 
$C$L490:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3041| 
$C$L491:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3041| 
        B         $C$L492,TC            ; [CPU_] |3041| 
        ; branchcc occurs ; [] |3041| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3041| 
        B         $C$L493,UNC           ; [CPU_] |3041| 
        ; branch occurs ; [] |3041| 
$C$L492:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3041| 
$C$L493:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3041| 
        B         $C$L494,TC            ; [CPU_] |3041| 
        ; branchcc occurs ; [] |3041| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3041| 
        B         $C$L495,UNC           ; [CPU_] |3041| 
        ; branch occurs ; [] |3041| 
$C$L494:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3041| 
$C$L495:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3041| 
        MOVL      XAR0,#44              ; [CPU_] |3041| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3041| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3041| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3041| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3041| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3041| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_sprintf")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3041| 
        ; call occurs [#_sprintf] ; [] |3041| 
        MOVL      XAR0,#44              ; [CPU_] |3041| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3041| 
	.dwpsn	file "../Source/prod.c",line 3048,column 7,is_stmt,isa 0
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3048| 
        ; call occurs [#_scia_puts] ; [] |3048| 
	.dwpsn	file "../Source/prod.c",line 3049,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3049| 
        MOVL      XAR0,#48              ; [CPU_] |3049| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3049| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3049| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3049| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3049| 
        MOVL      XAR0,#48              ; [CPU_] |3049| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3049| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3049| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3049| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3049| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3049| 
	.dwpsn	file "../Source/prod.c",line 3066,column 6,is_stmt,isa 0
        B         $C$L410,UNC           ; [CPU_] |3066| 
        ; branch occurs ; [] |3066| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2952,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2952| 
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2952| 
        ; call occurs [#_scia_puts] ; [] |2952| 
	.dwpsn	file "../Source/prod.c",line 2944,column 7,is_stmt,isa 0
        B         $C$L479,UNC           ; [CPU_] |2944| 
        ; branch occurs ; [] |2944| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2898,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2898| 
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2898| 
        ; call occurs [#_scia_puts] ; [] |2898| 
	.dwpsn	file "../Source/prod.c",line 2890,column 6,is_stmt,isa 0
        B         $C$L471,UNC           ; [CPU_] |2890| 
        ; branch occurs ; [] |2890| 
$C$L498:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3370,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3370| 
        B         $C$L627,LO            ; [CPU_] |3370| 
        ; branchcc occurs ; [] |3370| 
	.dwpsn	file "../Source/prod.c",line 3373,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3373| 
        CMPB      AL,#68                ; [CPU_] |3373| 
        B         $C$L502,EQ            ; [CPU_] |3373| 
        ; branchcc occurs ; [] |3373| 
        CMPB      AL,#82                ; [CPU_] |3373| 
        B         $C$L501,EQ            ; [CPU_] |3373| 
        ; branchcc occurs ; [] |3373| 
        CMPB      AL,#87                ; [CPU_] |3373| 
        B         $C$L627,NEQ           ; [CPU_] |3373| 
        ; branchcc occurs ; [] |3373| 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3377,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3377| 
        ; branchcc occurs ; [] |3377| 
	.dwpsn	file "../Source/prod.c",line 3401,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3401| 
	.dwpsn	file "../Source/prod.c",line 3403,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3403| 
        ; branch occurs ; [] |3403| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3379,column 7,is_stmt,isa 0
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3379| 
        ; call occurs [#_lcd_clear] ; [] |3379| 
	.dwpsn	file "../Source/prod.c",line 3380,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3380| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3380| 
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3380| 
        ; call occurs [#_lcd_puts] ; [] |3380| 
	.dwpsn	file "../Source/prod.c",line 3381,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3381| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3381| 
        ; call occurs [#_scia_puts] ; [] |3381| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3384,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3384| 
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_delay_us")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3384| 
        ; call occurs [#_delay_us] ; [] |3384| 
	.dwpsn	file "../Source/prod.c",line 3383,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3383| 
        ; branchcc occurs ; [] |3383| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3388,column 7,is_stmt,isa 0
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_conf_write")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3388| 
        ; call occurs [#_conf_write] ; [] |3388| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3391,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3391| 
        B         $C$L505,NEQ           ; [CPU_] |3391| 
        ; branchcc occurs ; [] |3391| 
	.dwpsn	file "../Source/prod.c",line 3392,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3392| 
	.dwpsn	file "../Source/prod.c",line 3394,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3394| 
        ; branch occurs ; [] |3394| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3408,column 6,is_stmt,isa 0
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_conf_read")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3408| 
        ; call occurs [#_conf_read] ; [] |3408| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3411,column 6,is_stmt,isa 0
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3411| 
        ; call occurs [#_ad7738_setcal] ; [] |3411| 
	.dwpsn	file "../Source/prod.c",line 3412,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3412| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3412| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3412| 
	.dwpsn	file "../Source/prod.c",line 3413,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3413| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3413| 
        ; call occurs [#_ad7738_resetvall] ; [] |3413| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3416,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3416| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3416| 
        ; call occurs [#_scia_puts] ; [] |3416| 
	.dwpsn	file "../Source/prod.c",line 3419,column 6,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_update_units")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3419| 
        ; call occurs [#_update_units] ; [] |3419| 
	.dwpsn	file "../Source/prod.c",line 3417,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |3417| 
        MOV       *+FP[AR0],#0          ; [CPU_] |3417| 
	.dwpsn	file "../Source/prod.c",line 3421,column 6,is_stmt,isa 0
        B         $C$L636,UNC           ; [CPU_] |3421| 
        ; branch occurs ; [] |3421| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3425,column 6,is_stmt,isa 0
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_conf_default")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3425| 
        ; call occurs [#_conf_default] ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3428,column 6,is_stmt,isa 0
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3428| 
        ; call occurs [#_lcd_clear] ; [] |3428| 
	.dwpsn	file "../Source/prod.c",line 3429,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3429| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3429| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3429| 
        ; call occurs [#_lcd_puts] ; [] |3429| 
	.dwpsn	file "../Source/prod.c",line 3430,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3430| 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3433,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3433| 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_delay_us")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3433| 
        ; call occurs [#_delay_us] ; [] |3433| 
	.dwpsn	file "../Source/prod.c",line 3432,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3432| 
        ; branchcc occurs ; [] |3432| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3437,column 6,is_stmt,isa 0
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_conf_write")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3437| 
        ; call occurs [#_conf_write] ; [] |3437| 
        MOVZ      AR1,AL                ; [CPU_] |3437| 
	.dwpsn	file "../Source/prod.c",line 3438,column 6,is_stmt,isa 0
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3438| 
        ; call occurs [#_ad7738_setcal] ; [] |3438| 
	.dwpsn	file "../Source/prod.c",line 3439,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3439| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3439| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3439| 
	.dwpsn	file "../Source/prod.c",line 3440,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3440| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3440| 
        ; call occurs [#_ad7738_resetvall] ; [] |3440| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3443,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3443| 
        ; branchcc occurs ; [] |3443| 
	.dwpsn	file "../Source/prod.c",line 3444,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3444| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3444| 
        ; call occurs [#_scia_puts] ; [] |3444| 
	.dwpsn	file "../Source/prod.c",line 3446,column 7,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |3446| 
        MOV       *+FP[AR0],#0          ; [CPU_] |3446| 
	.dwpsn	file "../Source/prod.c",line 3447,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3447| 
        ; branch occurs ; [] |3447| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3448,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3448| 
        SPM       #0                    ; [CPU_] 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3448| 
        ; call occurs [#_scia_puts] ; [] |3448| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3450,column 6,is_stmt,isa 0
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3450| 
        ; call occurs [#_lcd_clear] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3451,column 6,is_stmt,isa 0
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_update_units")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3451| 
        ; call occurs [#_update_units] ; [] |3451| 
	.dwpsn	file "../Source/prod.c",line 3452,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3452| 
        ; branch occurs ; [] |3452| 
$C$L507:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2477,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2477| 
        B         $C$L627,LO            ; [CPU_] |2477| 
        ; branchcc occurs ; [] |2477| 
	.dwpsn	file "../Source/prod.c",line 2480,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2480| 
        CMPB      AL,#70                ; [CPU_] |2480| 
        B         $C$L511,EQ            ; [CPU_] |2480| 
        ; branchcc occurs ; [] |2480| 
        CMPB      AL,#80                ; [CPU_] |2480| 
        B         $C$L634,NEQ           ; [CPU_] |2480| 
        ; branchcc occurs ; [] |2480| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2517,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2517| 
        MOVL      XAR0,#44              ; [CPU_] |2517| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2517| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2517| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2517| 
        MOVL      XAR4,XAR1             ; [CPU_] |2517| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_sprintf")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2517| 
        ; call occurs [#_sprintf] ; [] |2517| 
	.dwpsn	file "../Source/prod.c",line 2518,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2518| 
	.dwpsn	file "../Source/prod.c",line 2517,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2517| 
	.dwpsn	file "../Source/prod.c",line 2518,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2518| 
        MOV       AL,#1024              ; [CPU_] |2518| 
        MOVL      XAR5,XAR1             ; [CPU_] |2518| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2518| 
        ; call occurs [#_scia_getparam] ; [] |2518| 
	.dwpsn	file "../Source/prod.c",line 2519,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2519| 
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_atoi")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2519| 
        ; call occurs [#_atoi] ; [] |2519| 
        MOVL      XAR0,#95              ; [CPU_] |2519| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2519| 
	.dwpsn	file "../Source/prod.c",line 2520,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2520| 
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2520| 
        ; call occurs [#_scia_puts] ; [] |2520| 
        MOVL      XAR0,#95              ; [CPU_] |2520| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2520| 
	.dwpsn	file "../Source/prod.c",line 2522,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2522| 
        CMPB      AL,#2                 ; [CPU_] |2522| 
        B         $C$L510,HIS           ; [CPU_] |2522| 
        ; branchcc occurs ; [] |2522| 
	.dwpsn	file "../Source/prod.c",line 2526,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2526| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2526| 
        ; call occurs [#_scia_puts] ; [] |2526| 
        MOVL      XAR0,#95              ; [CPU_] |2526| 
        MOVZ      AR1,*+FP[AR0]         ; [CPU_] |2526| 
	.dwpsn	file "../Source/prod.c",line 2529,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2529| 
        MOVL      XAR0,#95              ; [CPU_] |2529| 
        MOV       AL,AR1                ; [CPU_] |2529| 
        ADDB      AL,#-1                ; [CPU_] |2529| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2529| 
        MOVL      XAR0,#44              ; [CPU_] |2529| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2529| 
        MOV       *-SP[3],AR1           ; [CPU_] |2529| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2529| 
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_sprintf")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2529| 
        ; call occurs [#_sprintf] ; [] |2529| 
        MOVL      XAR0,#44              ; [CPU_] |2529| 
	.dwpsn	file "../Source/prod.c",line 2530,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2530| 
	.dwpsn	file "../Source/prod.c",line 2529,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2529| 
	.dwpsn	file "../Source/prod.c",line 2530,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2530| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2530| 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2530| 
        ; call occurs [#_scia_getparam] ; [] |2530| 
        MOVL      XAR0,#86              ; [CPU_] |2530| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2530| 
	.dwpsn	file "../Source/prod.c",line 2531,column 6,is_stmt,isa 0
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_atol")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2531| 
        ; call occurs [#_atol] ; [] |2531| 
        MOVL      XAR0,#86              ; [CPU_] |2531| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2531| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2531| 
	.dwpsn	file "../Source/prod.c",line 2532,column 6,is_stmt,isa 0
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2532| 
        ; call occurs [#_scia_puts] ; [] |2532| 
	.dwpsn	file "../Source/prod.c",line 2533,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2533| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2533| 
        ; call occurs [#_scia_puts] ; [] |2533| 
	.dwpsn	file "../Source/prod.c",line 2534,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2534| 
        B         $C$L509,NEQ           ; [CPU_] |2534| 
        ; branchcc occurs ; [] |2534| 
	.dwpsn	file "../Source/prod.c",line 2535,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2535| 
	.dwpsn	file "../Source/prod.c",line 2536,column 7,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2536| 
        ; branch occurs ; [] |2536| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2538,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2538| 
        MOVL      XAR0,#44              ; [CPU_] |2538| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2538| 
        MOV       *-SP[3],AR1           ; [CPU_] |2538| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2538| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2538| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2538| 
        MOVL      XAR4,XAR1             ; [CPU_] |2538| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_sprintf")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2538| 
        ; call occurs [#_sprintf] ; [] |2538| 
        MOVL      XAR4,XAR1             ; [CPU_] |2538| 
	.dwpsn	file "../Source/prod.c",line 2540,column 6,is_stmt,isa 0
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2540| 
        ; call occurs [#_scia_puts] ; [] |2540| 
 setc INTM
        MOVL      XAR0,#95              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2545,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2545| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2545| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2545| 
        ADDL      ACC,XAR6              ; [CPU_] |2545| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2545| 
        ADD       ACC,#201 << 4         ; [CPU_] |2545| 
        MOVL      XAR4,ACC              ; [CPU_] |2545| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2545| 
	.dwpsn	file "../Source/prod.c",line 2549,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2549| 
        ; branch occurs ; [] |2549| 
$C$L510:    
	.dwpsn	file "../Source/prod.c",line 2524,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2524| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2524| 
        ; call occurs [#_scia_puts] ; [] |2524| 
	.dwpsn	file "../Source/prod.c",line 2516,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2516| 
        ; branch occurs ; [] |2516| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2487,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2487| 
        MOVL      XAR0,#44              ; [CPU_] |2487| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2487| 
        MOV       *-SP[3],#4096         ; [CPU_] |2487| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2487| 
        MOVL      XAR4,XAR1             ; [CPU_] |2487| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_sprintf")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2487| 
        ; call occurs [#_sprintf] ; [] |2487| 
	.dwpsn	file "../Source/prod.c",line 2489,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2489| 
	.dwpsn	file "../Source/prod.c",line 2487,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2487| 
	.dwpsn	file "../Source/prod.c",line 2489,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2489| 
        MOV       AL,#1024              ; [CPU_] |2489| 
        MOVL      XAR5,XAR1             ; [CPU_] |2489| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2489| 
        ; call occurs [#_scia_getparam] ; [] |2489| 
	.dwpsn	file "../Source/prod.c",line 2490,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2490| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_atoi")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2490| 
        ; call occurs [#_atoi] ; [] |2490| 
        MOV       *-SP[63],AL           ; [CPU_] |2490| 
	.dwpsn	file "../Source/prod.c",line 2491,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2491| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2491| 
        ; call occurs [#_scia_puts] ; [] |2491| 
        MOV       AL,*-SP[63]           ; [CPU_] |2491| 
	.dwpsn	file "../Source/prod.c",line 2493,column 8,is_stmt,isa 0
        B         $C$L515,LEQ           ; [CPU_] |2493| 
        ; branchcc occurs ; [] |2493| 
        CMP       AL,#4096              ; [CPU_] |2493| 
        B         $C$L515,GT            ; [CPU_] |2493| 
        ; branchcc occurs ; [] |2493| 
	.dwpsn	file "../Source/prod.c",line 2497,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2497| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2497| 
        ; call occurs [#_scia_puts] ; [] |2497| 
	.dwpsn	file "../Source/prod.c",line 2499,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2499| 
        MOVL      XAR0,#44              ; [CPU_] |2499| 
        MOV       AL,*-SP[63]           ; [CPU_] |2499| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2499| 
        MOV       *-SP[3],AL            ; [CPU_] |2499| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2499| 
        MOVL      XAR4,XAR1             ; [CPU_] |2499| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_sprintf")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2499| 
        ; call occurs [#_sprintf] ; [] |2499| 
        MOVL      XAR4,XAR1             ; [CPU_] |2499| 
	.dwpsn	file "../Source/prod.c",line 2501,column 6,is_stmt,isa 0
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2501| 
        ; call occurs [#_scia_puts] ; [] |2501| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2506,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2506| 
        MOVL      ACC,XAR4              ; [CPU_] |2506| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2506| 
        MOVL      XAR4,ACC              ; [CPU_] |2506| 
        MOV       AL,*-SP[63]           ; [CPU_] |2506| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2506| 
$C$L512:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2507,column 6,is_stmt,isa 0
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2507| 
        ; call occurs [#_ad7738_setcal] ; [] |2507| 
	.dwpsn	file "../Source/prod.c",line 2508,column 6,is_stmt,isa 0
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2508| 
        ; call occurs [#_velf_rst] ; [] |2508| 
$C$L513:    
 clrc INTM
$C$L514:    
	.dwpsn	file "../Source/prod.c",line 2502,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |2502| 
        MOV       *+FP[AR0],#1          ; [CPU_] |2502| 
	.dwpsn	file "../Source/prod.c",line 2510,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |2510| 
        ; branch occurs ; [] |2510| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2495,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2495| 
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2495| 
        ; call occurs [#_scia_puts] ; [] |2495| 
	.dwpsn	file "../Source/prod.c",line 2486,column 6,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |2486| 
        ; branch occurs ; [] |2486| 
$C$L516:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2559,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2559| 
        B         $C$L627,LO            ; [CPU_] |2559| 
        ; branchcc occurs ; [] |2559| 
	.dwpsn	file "../Source/prod.c",line 2562,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2562| 
        CMPB      AL,#83                ; [CPU_] |2562| 
        B         $C$L627,NEQ           ; [CPU_] |2562| 
        ; branchcc occurs ; [] |2562| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2569,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2569| 
        MOVL      XAR0,#44              ; [CPU_] |2569| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2569| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2569| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2569| 
        MOVL      XAR4,XAR1             ; [CPU_] |2569| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_sprintf")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2569| 
        ; call occurs [#_sprintf] ; [] |2569| 
	.dwpsn	file "../Source/prod.c",line 2570,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2570| 
	.dwpsn	file "../Source/prod.c",line 2569,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2569| 
	.dwpsn	file "../Source/prod.c",line 2570,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2570| 
        MOV       AL,#1024              ; [CPU_] |2570| 
        MOVL      XAR5,XAR1             ; [CPU_] |2570| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2570| 
        ; call occurs [#_scia_getparam] ; [] |2570| 
	.dwpsn	file "../Source/prod.c",line 2571,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2571| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_atoi")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2571| 
        ; call occurs [#_atoi] ; [] |2571| 
        MOVL      XAR0,#95              ; [CPU_] |2571| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2571| 
	.dwpsn	file "../Source/prod.c",line 2572,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2572| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2572| 
        ; call occurs [#_scia_puts] ; [] |2572| 
        MOVL      XAR0,#95              ; [CPU_] |2572| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2574,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2574| 
        CMPB      AL,#4                 ; [CPU_] |2574| 
        B         $C$L533,HIS           ; [CPU_] |2574| 
        ; branchcc occurs ; [] |2574| 
	.dwpsn	file "../Source/prod.c",line 2578,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2578| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2578| 
        ; call occurs [#_scia_puts] ; [] |2578| 
        MOVL      XAR0,#62              ; [CPU_] |2578| 
	.dwpsn	file "../Source/prod.c",line 2582,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2582| 
	.dwpsn	file "../Source/prod.c",line 2578,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2578| 
	.dwpsn	file "../Source/prod.c",line 2582,column 11,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |2582| 
$C$L518:    
	.dwpsn	file "../Source/prod.c",line 2583,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2583| 
        MOVL      XAR0,#44              ; [CPU_] |2583| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2583| 
        MOV       *-SP[3],AL            ; [CPU_] |2583| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2583| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2583| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2583| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_sprintf")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2583| 
        ; call occurs [#_sprintf] ; [] |2583| 
        MOVL      XAR0,#44              ; [CPU_] |2583| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2583| 
	.dwpsn	file "../Source/prod.c",line 2584,column 7,is_stmt,isa 0
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2584| 
        ; call occurs [#_scia_puts] ; [] |2584| 
        MOV       AL,*-SP[63]           ; [CPU_] |2584| 
	.dwpsn	file "../Source/prod.c",line 2585,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2585| 
        B         $C$L519,GEQ           ; [CPU_] |2585| 
        ; branchcc occurs ; [] |2585| 
	.dwpsn	file "../Source/prod.c",line 2586,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2586| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2586| 
        ; call occurs [#_scia_puts] ; [] |2586| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2582,column 18,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |2582| 
        MOV       AL,*-SP[63]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2582| 
        B         $C$L518,LT            ; [CPU_] |2582| 
        ; branchcc occurs ; [] |2582| 
	.dwpsn	file "../Source/prod.c",line 2589,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2589| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2589| 
        ; call occurs [#_scia_puts] ; [] |2589| 
        MOVL      XAR0,#95              ; [CPU_] |2589| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |2589| 
	.dwpsn	file "../Source/prod.c",line 2590,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2590| 
        MOV       AL,AH                 ; [CPU_] |2590| 
        MOVL      XAR0,#95              ; [CPU_] |2590| 
        ADDB      AL,#-1                ; [CPU_] |2590| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2590| 
        MOVL      XAR0,#44              ; [CPU_] |2590| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2590| 
        MOV       *-SP[3],AH            ; [CPU_] |2590| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2590| 
        MOV       *-SP[63],AH           ; [CPU_] |2590| 
        MOVL      XAR4,XAR1             ; [CPU_] |2590| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_sprintf")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2590| 
        ; call occurs [#_sprintf] ; [] |2590| 
	.dwpsn	file "../Source/prod.c",line 2592,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2592| 
	.dwpsn	file "../Source/prod.c",line 2590,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2590| 
	.dwpsn	file "../Source/prod.c",line 2592,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2592| 
        MOV       AL,#1024              ; [CPU_] |2592| 
        MOVL      XAR5,XAR1             ; [CPU_] |2592| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2592| 
        ; call occurs [#_scia_getparam] ; [] |2592| 
        MOVL      XAR4,XAR1             ; [CPU_] |2592| 
	.dwpsn	file "../Source/prod.c",line 2593,column 6,is_stmt,isa 0
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_atoi")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2593| 
        ; call occurs [#_atoi] ; [] |2593| 
        MOVZ      AR1,AL                ; [CPU_] |2593| 
        CMPB      AL,#7                 ; [CPU_] |2593| 
        B         $C$L520,LO            ; [CPU_] |2593| 
        ; branchcc occurs ; [] |2593| 
	.dwpsn	file "../Source/prod.c",line 2596,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2596| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2596| 
        ; call occurs [#_scia_puts] ; [] |2596| 
	.dwpsn	file "../Source/prod.c",line 2595,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2595| 
$C$L520:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2599,column 6,is_stmt,isa 0
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2599| 
        ; call occurs [#_scia_puts] ; [] |2599| 
	.dwpsn	file "../Source/prod.c",line 2600,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2600| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2600| 
        ; call occurs [#_scia_puts] ; [] |2600| 
	.dwpsn	file "../Source/prod.c",line 2601,column 6,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2601| 
        MOV       T,*+FP[AR0]           ; [CPU_] |2601| 
        MOVL      XAR0,#40              ; [CPU_] |2601| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2601| 
        MOVB      AL,#3                 ; [CPU_] |2601| 
        MPYU      ACC,T,AL              ; [CPU_] |2601| 
        ADDL      ACC,XAR6              ; [CPU_] |2601| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2601| 
        MOVL      XAR4,ACC              ; [CPU_] |2601| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2601| 
	.dwpsn	file "../Source/prod.c",line 2603,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2603| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2603| 
        CMPB      AL,#2                 ; [CPU_] |2603| 
        B         $C$L524,LOS           ; [CPU_] |2603| 
        ; branchcc occurs ; [] |2603| 
        MOV       AH,AL                 ; [CPU_] |2603| 
        ADDB      AH,#-3                ; [CPU_] |2603| 
        CMPB      AH,#1                 ; [CPU_] |2603| 
        B         $C$L523,LOS           ; [CPU_] |2603| 
        ; branchcc occurs ; [] |2603| 
        CMPB      AL,#5                 ; [CPU_] |2603| 
        B         $C$L521,EQ            ; [CPU_] |2603| 
        ; branchcc occurs ; [] |2603| 
        CMPB      AL,#6                 ; [CPU_] |2603| 
        B         $C$L529,NEQ           ; [CPU_] |2603| 
        ; branchcc occurs ; [] |2603| 
	.dwpsn	file "../Source/prod.c",line 2677,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2677| 
        MOV       AL,*-SP[63]           ; [CPU_] |2677| 
        MOVL      XAR0,#62              ; [CPU_] |2677| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2677| 
        MOV       *-SP[3],AL            ; [CPU_] |2677| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2677| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2677| 
        ADDL      ACC,XAR6              ; [CPU_] |2677| 
        MOVL      XAR4,ACC              ; [CPU_] |2677| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2677| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2677| 
	.dwpsn	file "../Source/prod.c",line 2680,column 7,is_stmt,isa 0
        B         $C$L528,UNC           ; [CPU_] |2680| 
        ; branch occurs ; [] |2680| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2658,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2658| 
        MOVL      XAR0,#44              ; [CPU_] |2658| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2658| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2658| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2658| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_sprintf")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2658| 
        ; call occurs [#_sprintf] ; [] |2658| 
        MOVL      XAR0,#44              ; [CPU_] |2658| 
	.dwpsn	file "../Source/prod.c",line 2659,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2658,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2658| 
	.dwpsn	file "../Source/prod.c",line 2659,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2659| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2659| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2659| 
        ; call occurs [#_scia_getparam] ; [] |2659| 
        MOVL      XAR0,#86              ; [CPU_] |2659| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2660,column 8,is_stmt,isa 0
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_atoi")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2660| 
        ; call occurs [#_atoi] ; [] |2660| 
        MOVL      XAR0,#94              ; [CPU_] |2660| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2660| 
        MOVL      XAR0,#86              ; [CPU_] |2660| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2660| 
	.dwpsn	file "../Source/prod.c",line 2661,column 8,is_stmt,isa 0
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2661| 
        ; call occurs [#_scia_puts] ; [] |2661| 
        MOVL      XAR0,#94              ; [CPU_] |2661| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2661| 
	.dwpsn	file "../Source/prod.c",line 2663,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2663| 
        CMPB      AL,#4                 ; [CPU_] |2663| 
        B         $C$L522,HIS           ; [CPU_] |2663| 
        ; branchcc occurs ; [] |2663| 
	.dwpsn	file "../Source/prod.c",line 2667,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2667| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2667| 
        ; call occurs [#_scia_puts] ; [] |2667| 
        MOVL      XAR0,#94              ; [CPU_] |2667| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2667| 
	.dwpsn	file "../Source/prod.c",line 2671,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2671| 
	.dwpsn	file "../Source/prod.c",line 2669,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2669| 
        ADDB      AL,#-1                ; [CPU_] |2669| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2669| 
	.dwpsn	file "../Source/prod.c",line 2671,column 7,is_stmt,isa 0
        MOVL      XAR0,#62              ; [CPU_] |2671| 
	.dwpsn	file "../Source/prod.c",line 2669,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2669| 
	.dwpsn	file "../Source/prod.c",line 2671,column 7,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |2671| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2671| 
        MOV       *-SP[3],AL            ; [CPU_] |2671| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2671| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2671| 
        ADDL      ACC,XAR6              ; [CPU_] |2671| 
        MOVL      XAR4,ACC              ; [CPU_] |2671| 
        MOVL      XAR0,#94              ; [CPU_] |2671| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2671| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2671| 
        MOVB      AL,#1                 ; [CPU_] |2671| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |2671| 
        MOV       *-SP[7],AL            ; [CPU_] |2671| 
	.dwpsn	file "../Source/prod.c",line 2674,column 7,is_stmt,isa 0
        B         $C$L528,UNC           ; [CPU_] |2674| 
        ; branch occurs ; [] |2674| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2665,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2665| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2665| 
        ; call occurs [#_scia_puts] ; [] |2665| 
	.dwpsn	file "../Source/prod.c",line 2657,column 7,is_stmt,isa 0
        B         $C$L521,UNC           ; [CPU_] |2657| 
        ; branch occurs ; [] |2657| 
$C$L523:    
	.dwpsn	file "../Source/prod.c",line 2615,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2615| 
        B         $C$L525,UNC           ; [CPU_] |2615| 
        ; branch occurs ; [] |2615| 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2609,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2609| 
$C$L525:    
        MOVL      XAR0,#93              ; [CPU_] |2609| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2609| 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] 
$C$L526:    
	.dwpsn	file "../Source/prod.c",line 2620,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2620| 
        MOVL      XAR0,#93              ; [CPU_] |2620| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2620| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2620| 
        MOVL      XAR0,#44              ; [CPU_] |2620| 
        MOV       *-SP[3],AL            ; [CPU_] |2620| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2620| 
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_sprintf")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2620| 
        ; call occurs [#_sprintf] ; [] |2620| 
        MOVL      XAR0,#44              ; [CPU_] |2620| 
	.dwpsn	file "../Source/prod.c",line 2621,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2621| 
	.dwpsn	file "../Source/prod.c",line 2620,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2620| 
	.dwpsn	file "../Source/prod.c",line 2621,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2621| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2621| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2621| 
        ; call occurs [#_scia_getparam] ; [] |2621| 
        MOVL      XAR0,#86              ; [CPU_] |2621| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2621| 
	.dwpsn	file "../Source/prod.c",line 2622,column 8,is_stmt,isa 0
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_atoi")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2622| 
        ; call occurs [#_atoi] ; [] |2622| 
        MOVL      XAR0,#94              ; [CPU_] |2622| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2622| 
        MOVL      XAR0,#86              ; [CPU_] |2622| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2622| 
	.dwpsn	file "../Source/prod.c",line 2623,column 8,is_stmt,isa 0
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2623| 
        ; call occurs [#_scia_puts] ; [] |2623| 
        MOVL      XAR0,#94              ; [CPU_] |2623| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2623| 
	.dwpsn	file "../Source/prod.c",line 2625,column 9,is_stmt,isa 0
        B         $C$L532,EQ            ; [CPU_] |2625| 
        ; branchcc occurs ; [] |2625| 
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       AH,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMP       AL,AH                 ; [CPU_] |2625| 
        B         $C$L532,LO            ; [CPU_] |2625| 
        ; branchcc occurs ; [] |2625| 
	.dwpsn	file "../Source/prod.c",line 2629,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2629| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2629| 
        ; call occurs [#_scia_puts] ; [] |2629| 
        MOVL      XAR0,#94              ; [CPU_] |2629| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2629| 
	.dwpsn	file "../Source/prod.c",line 2631,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2631| 
        ADDB      AL,#-1                ; [CPU_] |2631| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2631| 
        MOV       *+XAR1[1],AL          ; [CPU_] |2631| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2636,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2636| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2636| 
        MOV       AL,#1024              ; [CPU_] |2636| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2636| 
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2636| 
        ; call occurs [#_scia_getparam] ; [] |2636| 
        MOVL      XAR0,#86              ; [CPU_] |2636| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2636| 
	.dwpsn	file "../Source/prod.c",line 2638,column 8,is_stmt,isa 0
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_atoi")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2638| 
        ; call occurs [#_atoi] ; [] |2638| 
        MOVL      XAR0,#104             ; [CPU_] |2638| 
        CMPB      AL,#0                 ; [CPU_] |2638| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2638| 
        B         $C$L531,LT            ; [CPU_] |2638| 
        ; branchcc occurs ; [] |2638| 
        CMPB      AL,#6                 ; [CPU_] |2638| 
        B         $C$L531,GEQ           ; [CPU_] |2638| 
        ; branchcc occurs ; [] |2638| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2644,column 7,is_stmt,isa 0
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2644| 
        ; call occurs [#_scia_puts] ; [] |2644| 
	.dwpsn	file "../Source/prod.c",line 2645,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2645| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2645| 
        ; call occurs [#_scia_puts] ; [] |2645| 
        MOVL      XAR0,#104             ; [CPU_] |2645| 
	.dwpsn	file "../Source/prod.c",line 2648,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2648| 
	.dwpsn	file "../Source/prod.c",line 2645,column 7,is_stmt,isa 0
        MOV       AL,*+FP[AR0]          ; [CPU_] |2645| 
	.dwpsn	file "../Source/prod.c",line 2646,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2646| 
	.dwpsn	file "../Source/prod.c",line 2648,column 7,is_stmt,isa 0
        MOVL      XAR0,#62              ; [CPU_] |2648| 
        MOV       AL,*-SP[63]           ; [CPU_] |2648| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2648| 
        MOV       *-SP[3],AL            ; [CPU_] |2648| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2648| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2648| 
        ADDL      ACC,XAR6              ; [CPU_] |2648| 
        MOVL      XAR4,ACC              ; [CPU_] |2648| 
        MOVL      XAR0,#94              ; [CPU_] |2648| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2648| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2648| 
        MOVB      AL,#1                 ; [CPU_] |2648| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |2648| 
        MOVL      XAR0,#104             ; [CPU_] |2648| 
        MOV       *-SP[7],AL            ; [CPU_] |2648| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2648| 
        MOV       *-SP[8],AL            ; [CPU_] |2648| 
$C$L528:    
        MOVL      XAR0,#44              ; [CPU_] |2648| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2648| 
        MOVL      XAR4,XAR1             ; [CPU_] |2648| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_sprintf")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2648| 
        ; call occurs [#_sprintf] ; [] |2648| 
        MOVL      XAR4,XAR1             ; [CPU_] |2648| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2651| 
        ; call occurs [#_scia_puts] ; [] |2651| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2683,column 6,is_stmt,isa 0
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2683| 
        ; call occurs [#_lcd_clear] ; [] |2683| 
$C$L530:    
	.dwpsn	file "../Source/prod.c",line 2684,column 6,is_stmt,isa 0
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_update_units")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2684| 
        ; call occurs [#_update_units] ; [] |2684| 
	.dwpsn	file "../Source/prod.c",line 2686,column 6,is_stmt,isa 0
        B         $C$L514,UNC           ; [CPU_] |2686| 
        ; branch occurs ; [] |2686| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 2642,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2642| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2642| 
        ; call occurs [#_scia_puts] ; [] |2642| 
	.dwpsn	file "../Source/prod.c",line 2635,column 7,is_stmt,isa 0
        B         $C$L527,UNC           ; [CPU_] |2635| 
        ; branch occurs ; [] |2635| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 2627,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2627| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2627| 
        ; call occurs [#_scia_puts] ; [] |2627| 
	.dwpsn	file "../Source/prod.c",line 2619,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2619| 
        ; branch occurs ; [] |2619| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 2576,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2576| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2576| 
        ; call occurs [#_scia_puts] ; [] |2576| 
	.dwpsn	file "../Source/prod.c",line 2568,column 6,is_stmt,isa 0
        B         $C$L517,UNC           ; [CPU_] |2568| 
        ; branch occurs ; [] |2568| 
$C$L534:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1666,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1666| 
        B         $C$L627,LO            ; [CPU_] |1666| 
        ; branchcc occurs ; [] |1666| 
	.dwpsn	file "../Source/prod.c",line 1671,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1671| 
        CMPB      AL,#86                ; [CPU_] |1671| 
        B         $C$L535,EQ            ; [CPU_] |1671| 
        ; branchcc occurs ; [] |1671| 
        CMPB      AL,#77                ; [CPU_] |1671| 
        B         $C$L535,EQ            ; [CPU_] |1671| 
        ; branchcc occurs ; [] |1671| 
        CMPB      AL,#83                ; [CPU_] |1671| 
        B         $C$L627,NEQ           ; [CPU_] |1671| 
        ; branchcc occurs ; [] |1671| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1674,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1674| 
        MOV       *-SP[63],AL           ; [CPU_] |1674| 
	.dwpsn	file "../Source/prod.c",line 1676,column 5,is_stmt,isa 0
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1676| 
        ; call occurs [#_lcd_clear] ; [] |1676| 
	.dwpsn	file "../Source/prod.c",line 1677,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1677| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1677| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1677| 
        ; call occurs [#_lcd_puts] ; [] |1677| 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1683,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1683| 
        MOVL      XAR0,#44              ; [CPU_] |1683| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1683| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1683| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1683| 
        MOVL      XAR4,XAR1             ; [CPU_] |1683| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_sprintf")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1683| 
        ; call occurs [#_sprintf] ; [] |1683| 
	.dwpsn	file "../Source/prod.c",line 1684,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1684| 
	.dwpsn	file "../Source/prod.c",line 1683,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1683| 
	.dwpsn	file "../Source/prod.c",line 1684,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1684| 
        MOV       AL,#1024              ; [CPU_] |1684| 
        MOVL      XAR5,XAR1             ; [CPU_] |1684| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1684| 
        ; call occurs [#_scia_getparam] ; [] |1684| 
	.dwpsn	file "../Source/prod.c",line 1685,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1685| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_atoi")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1685| 
        ; call occurs [#_atoi] ; [] |1685| 
        MOVL      XAR0,#94              ; [CPU_] |1685| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1685| 
	.dwpsn	file "../Source/prod.c",line 1686,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1686| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1686| 
        ; call occurs [#_scia_puts] ; [] |1686| 
        MOVL      XAR0,#94              ; [CPU_] |1686| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1686| 
	.dwpsn	file "../Source/prod.c",line 1688,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1688| 
        CMPB      AL,#4                 ; [CPU_] |1688| 
        B         $C$L592,HIS           ; [CPU_] |1688| 
        ; branchcc occurs ; [] |1688| 
	.dwpsn	file "../Source/prod.c",line 1692,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1692| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1692| 
        ; call occurs [#_scia_puts] ; [] |1692| 
        MOVL      XAR0,#94              ; [CPU_] |1692| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1692| 
	.dwpsn	file "../Source/prod.c",line 1693,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1693| 
        ADDB      AL,#-1                ; [CPU_] |1693| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1693| 
$C$L537:    
	.dwpsn	file "../Source/prod.c",line 1698,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1698| 
        MOVL      XAR0,#44              ; [CPU_] |1698| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1698| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1698| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1698| 
        MOVL      XAR4,XAR1             ; [CPU_] |1698| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_sprintf")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1698| 
        ; call occurs [#_sprintf] ; [] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1699| 
	.dwpsn	file "../Source/prod.c",line 1698,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1699| 
        MOV       AL,#1024              ; [CPU_] |1699| 
        MOVL      XAR5,XAR1             ; [CPU_] |1699| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1699| 
        ; call occurs [#_scia_getparam] ; [] |1699| 
	.dwpsn	file "../Source/prod.c",line 1700,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1700| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_atoi")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1700| 
        ; call occurs [#_atoi] ; [] |1700| 
        MOVL      XAR0,#95              ; [CPU_] |1700| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1700| 
	.dwpsn	file "../Source/prod.c",line 1701,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1701| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1701| 
        ; call occurs [#_scia_puts] ; [] |1701| 
        MOVL      XAR0,#95              ; [CPU_] |1701| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1701| 
	.dwpsn	file "../Source/prod.c",line 1705,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1705| 
        CMPB      AL,#20                ; [CPU_] |1705| 
        B         $C$L591,HIS           ; [CPU_] |1705| 
        ; branchcc occurs ; [] |1705| 
	.dwpsn	file "../Source/prod.c",line 1709,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1709| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1709| 
        ; call occurs [#_scia_puts] ; [] |1709| 
        MOVL      XAR0,#95              ; [CPU_] |1709| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |1709| 
	.dwpsn	file "../Source/prod.c",line 1713,column 5,is_stmt,isa 0
        MOV       AL,AH                 ; [CPU_] |1713| 
        MOVL      XAR0,#95              ; [CPU_] |1713| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1713| 
        ADDB      AL,#-1                ; [CPU_] |1713| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1713| 
        MOVL      XAR0,#93              ; [CPU_] |1713| 
        MOVB      AL,#1                 ; [CPU_] |1713| 
        MOV       *+FP[AR0],AH          ; [CPU_] |1713| 
        MOVL      XAR0,#94              ; [CPU_] |1713| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |1713| 
        MOVL      XAR0,#92              ; [CPU_] |1713| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1713| 
        MOVL      XAR0,#44              ; [CPU_] |1713| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1713| 
        MOV       *-SP[3],AL            ; [CPU_] |1713| 
        MOV       *-SP[4],AH            ; [CPU_] |1713| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1713| 
        MOVL      XAR4,XAR1             ; [CPU_] |1713| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_sprintf")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1713| 
        ; call occurs [#_sprintf] ; [] |1713| 
	.dwpsn	file "../Source/prod.c",line 1714,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1714| 
        MOVL      XAR4,XAR1             ; [CPU_] |1714| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1714| 
        ; call occurs [#_lcd_puts] ; [] |1714| 
	.dwpsn	file "../Source/prod.c",line 1718,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1718| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1718| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1718| 
        MOVL      XAR4,XAR1             ; [CPU_] |1718| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_sprintf")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1718| 
        ; call occurs [#_sprintf] ; [] |1718| 
	.dwpsn	file "../Source/prod.c",line 1719,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1719| 
        MOV       AL,#1024              ; [CPU_] |1719| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1719| 
        MOVL      XAR4,XAR1             ; [CPU_] |1719| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1719| 
        ; call occurs [#_scia_getparam] ; [] |1719| 
        CMPB      AL,#15                ; [CPU_] |1719| 
        B         $C$L538,LOS           ; [CPU_] |1719| 
        ; branchcc occurs ; [] |1719| 
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1723| 
        MOVB      XAR0,#15              ; [CPU_] |1723| 
	.dwpsn	file "../Source/prod.c",line 1722,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1722| 
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1723| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1725,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1725| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1725| 
        MOVL      XAR0,#86              ; [CPU_] |1725| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1725| 
        MOVB      AH,#1                 ; [CPU_] |1725| 
        ADD       AH,AL                 ; [CPU_] |1725| 
        MOVU      ACC,AH                ; [CPU_] |1725| 
        MOVL      XAR5,XAR1             ; [CPU_] |1725| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_memcpy")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1725| 
        ; call occurs [#_memcpy] ; [] |1725| 
        MOVL      XAR4,XAR1             ; [CPU_] |1725| 
	.dwpsn	file "../Source/prod.c",line 1726,column 5,is_stmt,isa 0
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1726| 
        ; call occurs [#_scia_puts] ; [] |1726| 
	.dwpsn	file "../Source/prod.c",line 1727,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1727| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1727| 
        ; call occurs [#_scia_puts] ; [] |1727| 
	.dwpsn	file "../Source/prod.c",line 1731,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1731| 
        MOVL      XAR0,#44              ; [CPU_] |1731| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1731| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1731| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1731| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_sprintf")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1731| 
        ; call occurs [#_sprintf] ; [] |1731| 
        MOVL      XAR0,#44              ; [CPU_] |1731| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1732| 
	.dwpsn	file "../Source/prod.c",line 1731,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1731| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1732| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1732| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1732| 
        ; call occurs [#_scia_getparam] ; [] |1732| 
        CMPB      AL,#15                ; [CPU_] |1732| 
        B         $C$L539,LOS           ; [CPU_] |1732| 
        ; branchcc occurs ; [] |1732| 
	.dwpsn	file "../Source/prod.c",line 1736,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1736| 
        MOVB      XAR0,#15              ; [CPU_] |1736| 
	.dwpsn	file "../Source/prod.c",line 1735,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1735| 
	.dwpsn	file "../Source/prod.c",line 1736,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1736| 
$C$L539:    
	.dwpsn	file "../Source/prod.c",line 1738,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1738| 
        MOVL      XAR0,#60              ; [CPU_] |1738| 
        MOVL      XAR5,XAR1             ; [CPU_] |1738| 
        ADD       AH,AL                 ; [CPU_] |1738| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1738| 
        MOVU      ACC,AH                ; [CPU_] |1738| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_memcpy")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1738| 
        ; call occurs [#_memcpy] ; [] |1738| 
        MOVL      XAR4,XAR1             ; [CPU_] |1738| 
	.dwpsn	file "../Source/prod.c",line 1739,column 5,is_stmt,isa 0
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1739| 
        ; call occurs [#_scia_puts] ; [] |1739| 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1740| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1740| 
        ; call occurs [#_scia_puts] ; [] |1740| 
        MOVL      XAR0,#70              ; [CPU_] |1740| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1740| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1743,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1743| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] |1743| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1743| 
$C$L540:    
	.dwpsn	file "../Source/prod.c",line 1744,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1744| 
        MOVL      XAR0,#88              ; [CPU_] |1744| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1744| 
        MOV       *-SP[3],AL            ; [CPU_] |1744| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1744| 
        MOVL      XAR0,#88              ; [CPU_] |1744| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1744| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1744| 
        MOVL      XAR4,XAR1             ; [CPU_] |1744| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1744| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_sprintf")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1744| 
        ; call occurs [#_sprintf] ; [] |1744| 
	.dwpsn	file "../Source/prod.c",line 1743,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1743| 
        MOVL      XAR0,#91              ; [CPU_] |1743| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1743| 
        MOVL      XAR0,#91              ; [CPU_] |1743| 
        ADDB      AL,#1                 ; [CPU_] |1743| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1743| 
        CMPB      AL,#7                 ; [CPU_] |1743| 
        B         $C$L540,LT            ; [CPU_] |1743| 
        ; branchcc occurs ; [] |1743| 
	.dwpsn	file "../Source/prod.c",line 1746,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1746| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1746| 
        MOVB      XAR1,#54              ; [CPU_] |1746| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1746| 
	.dwpsn	file "../Source/prod.c",line 1747,column 5,is_stmt,isa 0
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1747| 
        ; call occurs [#_scia_puts] ; [] |1747| 
	.dwpsn	file "../Source/prod.c",line 1748,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1748| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1748| 
        MOV       AL,#1024              ; [CPU_] |1748| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1748| 
        MOVL      XAR5,XAR1             ; [CPU_] |1748| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1748| 
        ; call occurs [#_scia_getparam] ; [] |1748| 
        MOVL      XAR4,XAR1             ; [CPU_] |1748| 
	.dwpsn	file "../Source/prod.c",line 1750,column 5,is_stmt,isa 0
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_atoi")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1750| 
        ; call occurs [#_atoi] ; [] |1750| 
        MOVB      XAR0,#42              ; [CPU_] |1750| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1750| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1750| 
	.dwpsn	file "../Source/prod.c",line 1752,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1752| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1752| 
        CMPB      AL,#6                 ; [CPU_] |1752| 
        B         $C$L541,GT            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#6                 ; [CPU_] |1752| 
        B         $C$L544,EQ            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#1                 ; [CPU_] |1752| 
        B         $C$L547,LOS           ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        MOV       AH,AL                 ; [CPU_] |1752| 
        ADDB      AH,#-2                ; [CPU_] |1752| 
        CMPB      AH,#2                 ; [CPU_] |1752| 
        B         $C$L546,LOS           ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#5                 ; [CPU_] |1752| 
        B         $C$L545,EQ            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        B         $C$L542,UNC           ; [CPU_] |1752| 
        ; branch occurs ; [] |1752| 
$C$L541:    
        MOV       AH,AL                 ; [CPU_] |1752| 
        ADDB      AH,#-7                ; [CPU_] |1752| 
        CMPB      AH,#1                 ; [CPU_] |1752| 
        B         $C$L543,LOS           ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
        CMPB      AL,#15                ; [CPU_] |1752| 
        B         $C$L543,EQ            ; [CPU_] |1752| 
        ; branchcc occurs ; [] |1752| 
$C$L542:    
	.dwpsn	file "../Source/prod.c",line 1774,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1774| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1774| 
	.dwpsn	file "../Source/prod.c",line 1775,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1775| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1775| 
        ; call occurs [#_scia_puts] ; [] |1775| 
	.dwpsn	file "../Source/prod.c",line 1776,column 6,is_stmt,isa 0
        B         $C$L548,UNC           ; [CPU_] |1776| 
        ; branch occurs ; [] |1776| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1771,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1771| 
	.dwpsn	file "../Source/prod.c",line 1772,column 6,is_stmt,isa 0
        B         $C$L548,UNC           ; [CPU_] |1772| 
        ; branch occurs ; [] |1772| 
$C$L544:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1766,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1766| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        B         $C$L548,UNC           ; [CPU_] |1767| 
        ; branch occurs ; [] |1767| 
$C$L545:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1763,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1763| 
	.dwpsn	file "../Source/prod.c",line 1764,column 6,is_stmt,isa 0
        B         $C$L548,UNC           ; [CPU_] |1764| 
        ; branch occurs ; [] |1764| 
$C$L546:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1760,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1760| 
	.dwpsn	file "../Source/prod.c",line 1761,column 6,is_stmt,isa 0
        B         $C$L548,UNC           ; [CPU_] |1761| 
        ; branch occurs ; [] |1761| 
$C$L547:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1755| 
$C$L548:    
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1778| 
        MOVL      XAR4,XAR7             ; [CPU_] |1778| 
        MOVB      XAR0,#43              ; [CPU_] |1778| 
        ADDB      XAR7,#42              ; [CPU_] |1778| 
        MOV       AL,*XAR7              ; [CPU_] |1778| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1779,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1779| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1779| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1779| 
        MOVL      XAR0,#86              ; [CPU_] |1779| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1779| 
	.dwpsn	file "../Source/prod.c",line 1781,column 5,is_stmt,isa 0
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1781| 
        ; call occurs [#_scia_puts] ; [] |1781| 
	.dwpsn	file "../Source/prod.c",line 1782,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1782| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1782| 
        ; call occurs [#_scia_puts] ; [] |1782| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1787,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1787| 
        MOVL      XAR5,XAR1             ; [CPU_] |1787| 
        MOV       AL,#1024              ; [CPU_] |1787| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1787| 
        ; call occurs [#_scia_getparam] ; [] |1787| 
        MOVL      XAR4,XAR1             ; [CPU_] |1787| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_strtod")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1788,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1788| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1788| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1788,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1788| 
	.dwpsn	file "../Source/prod.c",line 1790,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1790| 
        MOV       AH,#0                 ; [CPU_] |1790| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1790| 
        MOVL      ACC,XAR3              ; [CPU_] |1790| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1790| 
        ; call occurs [#FS$$CMP] ; [] |1790| 
        CMPB      AL,#0                 ; [CPU_] |1790| 
        B         $C$L590,EQ            ; [CPU_] |1790| 
        ; branchcc occurs ; [] |1790| 
	.dwpsn	file "../Source/prod.c",line 1794,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1794| 
        MOVB      XAR1,#142             ; [CPU_] |1794| 
        MOVL      XAR0,#86              ; [CPU_] |1794| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1794| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1795,column 5,is_stmt,isa 0
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1795| 
        ; call occurs [#_scia_puts] ; [] |1795| 
	.dwpsn	file "../Source/prod.c",line 1796,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1796| 
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1796| 
        ; call occurs [#_scia_puts] ; [] |1796| 
        MOVL      XAR0,#94              ; [CPU_] |1796| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1796| 
	.dwpsn	file "../Source/prod.c",line 1798,column 5,is_stmt,isa 0
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_tagid")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1798| 
        ; call occurs [#_tagid] ; [] |1798| 
        MOVL      XAR0,#36              ; [CPU_] |1798| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1798| 
        MOVL      XAR4,XAR5             ; [CPU_] |1798| 
        ADDB      XAR4,#32              ; [CPU_] |1798| 
	.dwpsn	file "../Source/prod.c",line 1800,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1800| 
	.dwpsn	file "../Source/prod.c",line 1798,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1798| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1798| 
	.dwpsn	file "../Source/prod.c",line 1800,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1800| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1800| 
        MOV       *-SP[2],#0            ; [CPU_] |1800| 
        MOV       *-SP[1],#0            ; [CPU_] |1800| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1800| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1800| 
        MOVL      P,XAR4                ; [CPU_] |1800| 
        MOVL      ACC,XAR5              ; [CPU_] |1800| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1195, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1800| 
        ; call occurs [#ULL$$CMP] ; [] |1800| 
        CMPB      AL,#0                 ; [CPU_] |1800| 
        B         $C$L550,NEQ           ; [CPU_] |1800| 
        ; branchcc occurs ; [] |1800| 
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1801| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1801| 
	.dwpsn	file "../Source/prod.c",line 1802,column 5,is_stmt,isa 0
        B         $C$L551,UNC           ; [CPU_] |1802| 
        ; branch occurs ; [] |1802| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1803| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1803| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1803| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1803| 
$C$L551:    
        MOVL      XAR0,#44              ; [CPU_] |1803| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1803| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_sprintf")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1803| 
        ; call occurs [#_sprintf] ; [] |1803| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1805,column 5,is_stmt,isa 0
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1805| 
        ; call occurs [#_scia_puts] ; [] |1805| 
        MOV       AL,*-SP[63]           ; [CPU_] |1805| 
	.dwpsn	file "../Source/prod.c",line 1807,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1807| 
        B         $C$L565,EQ            ; [CPU_] |1807| 
        ; branchcc occurs ; [] |1807| 
        CMPB      AL,#83                ; [CPU_] |1807| 
        B         $C$L557,EQ            ; [CPU_] |1807| 
        ; branchcc occurs ; [] |1807| 
        CMPB      AL,#86                ; [CPU_] |1807| 
        B         $C$L620,NEQ           ; [CPU_] |1807| 
        ; branchcc occurs ; [] |1807| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1812| 
        MOVB      AL,#40                ; [CPU_] |1812| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1812| 
        ; call occurs [#_lcd_puts] ; [] |1812| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1814| 
        MOVB      XAR0,#36              ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1817| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1815,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1815| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1815| 
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1817| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1817| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1817| 
        MOVL      XAR0,#70              ; [CPU_] |1817| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1817| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1817| 
        MOV       ACC,AL << 1           ; [CPU_] |1817| 
        ADDL      ACC,XAR6              ; [CPU_] |1817| 
        MOVL      XAR4,ACC              ; [CPU_] |1817| 
        MOVL      XAR0,#44              ; [CPU_] |1817| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1817| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1817| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1817| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_sprintf")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1817| 
        ; call occurs [#_sprintf] ; [] |1817| 
        MOVL      XAR0,#44              ; [CPU_] |1817| 
	.dwpsn	file "../Source/prod.c",line 1819,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1819| 
	.dwpsn	file "../Source/prod.c",line 1817,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1817| 
	.dwpsn	file "../Source/prod.c",line 1819,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1819| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1819| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1819| 
        ; call occurs [#_scia_getparam] ; [] |1819| 
        MOVL      XAR0,#86              ; [CPU_] |1819| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1819,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1819| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_strtod")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1820,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1820| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1820,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1820| 
	.dwpsn	file "../Source/prod.c",line 1821,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1821| 
        MOV       AH,#0                 ; [CPU_] |1821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1821| 
        MOVL      ACC,XAR6              ; [CPU_] |1821| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1821| 
        ; call occurs [#FS$$CMP] ; [] |1821| 
        CMPB      AL,#0                 ; [CPU_] |1821| 
        B         $C$L552,NEQ           ; [CPU_] |1821| 
        ; branchcc occurs ; [] |1821| 
	.dwpsn	file "../Source/prod.c",line 1822,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1822| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1822| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1822| 
$C$L552:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1824,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1824| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1824| 
        ; call occurs [#_scia_puts] ; [] |1824| 
	.dwpsn	file "../Source/prod.c",line 1825,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1825| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1825| 
        ; call occurs [#_scia_puts] ; [] |1825| 
	.dwpsn	file "../Source/prod.c",line 1827,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1827| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1827| 
        MOVL      XAR5,XAR1             ; [CPU_] |1827| 
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1827| 
        ; call occurs [#_scia_getparam] ; [] |1827| 
	.dwpsn	file "../Source/prod.c",line 1830,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1830| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1830| 
        ; call occurs [#_scia_puts] ; [] |1830| 
	.dwpsn	file "../Source/prod.c",line 1832,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1832| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1833| 
	.dwpsn	file "../Source/prod.c",line 1832,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1832| 
	.dwpsn	file "../Source/prod.c",line 1833,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1833| 
	.dwpsn	file "../Source/prod.c",line 1832,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1832| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1834| 
	.dwpsn	file "../Source/prod.c",line 1832,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1832| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1834| 
        MOVB      ACC,#0                ; [CPU_] |1834| 
        SUBB      ACC,#1                ; [CPU_] |1834| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1834| 
        B         $C$L555,EQ            ; [CPU_] |1834| 
        ; branchcc occurs ; [] |1834| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1835,column 14,is_stmt,isa 0
        B         $C$L554,UNC           ; [CPU_] |1835| 
        ; branch occurs ; [] |1835| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1836,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1836| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_delay_us")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1836| 
        ; call occurs [#_delay_us] ; [] |1836| 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1835,column 14,is_stmt,isa 0
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1835| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1835| 
        CMPB      AL,#0                 ; [CPU_] |1835| 
        B         $C$L553,EQ            ; [CPU_] |1835| 
        ; branchcc occurs ; [] |1835| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1839| 
        ; call occurs [#_ad7738_getraw] ; [] |1839| 
	.dwpsn	file "../Source/prod.c",line 1840,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1840| 
        ADDL      XAR4,ACC              ; [CPU_] |1840| 
        MOVL      XAR0,#20              ; [CPU_] |1840| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1840| 
        MOVL      XAR0,#20              ; [CPU_] |1840| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1840| 
        ASR64     ACC:P,16              ; [CPU_] |1840| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1840| 
        MOVL      XAR0,#20              ; [CPU_] |1840| 
        ASR64     ACC:P,16              ; [CPU_] |1840| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1840| 
        MOVL      XAR0,#20              ; [CPU_] |1840| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1840| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1840| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1840| 
        MOVL      *-SP[32],P            ; [CPU_] |1840| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1840| 
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1834| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1834| 
        MOVB      ACC,#0                ; [CPU_] |1834| 
        SUBB      ACC,#1                ; [CPU_] |1834| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1834| 
        B         $C$L554,NEQ           ; [CPU_] |1834| 
        ; branchcc occurs ; [] |1834| 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1842,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1842| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1842| 
        ; call occurs [#_scia_puts] ; [] |1842| 
	.dwpsn	file "../Source/prod.c",line 1844,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1844| 
        MOVL      XAR0,#52              ; [CPU_] |1844| 
        MOVL      ACC,XAR1              ; [CPU_] |1844| 
        ADDB      ACC,#96               ; [CPU_] |1844| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1844| 
        MOVL      XAR0,#94              ; [CPU_] |1844| 
        MOV       T,*+FP[AR0]           ; [CPU_] |1844| 
        MOVL      XAR0,#40              ; [CPU_] |1844| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1844| 
        MOVB      AL,#10                ; [CPU_] |1844| 
        MPYU      ACC,T,AL              ; [CPU_] |1844| 
        ADDL      ACC,XAR6              ; [CPU_] |1844| 
        ADDB      ACC,#42               ; [CPU_] |1844| 
        MOVL      XAR4,ACC              ; [CPU_] |1844| 
        MOVL      XAR0,#42              ; [CPU_] |1844| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1844| 
$C$L556:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1844| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1844| 
        ; call occurs [#FS$$NEG] ; [] |1844| 
        MOVB      XAR0,#96              ; [CPU_] |1844| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1844| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1844| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1844| 
        ; call occurs [#FS$$MPY] ; [] |1844| 
        MOVL      XAR0,#88              ; [CPU_] |1844| 
        MOVL      P,*-SP[32]            ; [CPU_] |1844| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1844| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1844| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1844| 
        ; call occurs [#LL$$TOFS] ; [] |1844| 
        MOVL      XAR0,#88              ; [CPU_] |1844| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1844| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1844| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1844| 
        ; call occurs [#FS$$MPY] ; [] |1844| 
        MOVL      XAR6,ACC              ; [CPU_] |1844| 
        MOV       AL,#16384             ; [CPU_] |1844| 
        MOV       AH,#17948             ; [CPU_] |1844| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1844| 
        MOVL      ACC,XAR6              ; [CPU_] |1844| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1844| 
        ; call occurs [#FS$$DIV] ; [] |1844| 
        MOVB      XAR0,#118             ; [CPU_] |1844| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1844| 
	.dwpsn	file "../Source/prod.c",line 1846,column 6,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |1846| 
        ; branch occurs ; [] |1846| 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1929,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1929| 
        MOVB      AL,#40                ; [CPU_] |1929| 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1929| 
        ; call occurs [#_lcd_puts] ; [] |1929| 
	.dwpsn	file "../Source/prod.c",line 1931,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1931| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1931| 
	.dwpsn	file "../Source/prod.c",line 1934,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1934| 
	.dwpsn	file "../Source/prod.c",line 1931,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1931| 
	.dwpsn	file "../Source/prod.c",line 1932,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1932| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1932| 
	.dwpsn	file "../Source/prod.c",line 1934,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1934| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1934| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1934| 
        MOVL      XAR0,#70              ; [CPU_] |1934| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1934| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1934| 
        MOV       ACC,AL << 1           ; [CPU_] |1934| 
        ADDL      ACC,XAR6              ; [CPU_] |1934| 
        MOVL      XAR4,ACC              ; [CPU_] |1934| 
        MOVL      XAR0,#44              ; [CPU_] |1934| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1934| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1934| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1934| 
        MOVL      XAR4,XAR1             ; [CPU_] |1934| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_sprintf")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1934| 
        ; call occurs [#_sprintf] ; [] |1934| 
	.dwpsn	file "../Source/prod.c",line 1937,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1937| 
	.dwpsn	file "../Source/prod.c",line 1934,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1934| 
	.dwpsn	file "../Source/prod.c",line 1937,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1937| 
        MOV       AL,#1024              ; [CPU_] |1937| 
        MOVL      XAR5,XAR1             ; [CPU_] |1937| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1937| 
        ; call occurs [#_scia_getparam] ; [] |1937| 
	.dwpsn	file "../Source/prod.c",line 1938,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1938| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1938| 
        ; call occurs [#_scia_puts] ; [] |1938| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_strtod")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1940,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1940| 
        MOV       AH,#0                 ; [CPU_] |1940| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1940| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1940| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1940| 
        ; call occurs [#FS$$CMP] ; [] |1940| 
        CMPB      AL,#0                 ; [CPU_] |1940| 
        B         $C$L558,NEQ           ; [CPU_] |1940| 
        ; branchcc occurs ; [] |1940| 
	.dwpsn	file "../Source/prod.c",line 1941,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1941| 
        MOV       AH,#16314             ; [CPU_] |1941| 
	.dwpsn	file "../Source/prod.c",line 1942,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1942| 
	.dwpsn	file "../Source/prod.c",line 1941,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1941| 
	.dwpsn	file "../Source/prod.c",line 1942,column 7,is_stmt,isa 0
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1942| 
        ; call occurs [#_scia_puts] ; [] |1942| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1944,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1944| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1944| 
        ; call occurs [#_scia_puts] ; [] |1944| 
	.dwpsn	file "../Source/prod.c",line 1946,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1946| 
        MOV       AL,#1024              ; [CPU_] |1946| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1946| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1946| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1946| 
        ; call occurs [#_scia_getparam] ; [] |1946| 
	.dwpsn	file "../Source/prod.c",line 1949,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1949| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1949| 
        ; call occurs [#_scia_puts] ; [] |1949| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1951,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1951| 
        MOVL      XAR0,#104             ; [CPU_] |1951| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1951| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L559:    
	.dwpsn	file "../Source/prod.c",line 1952,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1952| 
        B         $C$L561,LEQ           ; [CPU_] |1952| 
        ; branchcc occurs ; [] |1952| 
	.dwpsn	file "../Source/prod.c",line 1954,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1954| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1954| 
        ; call occurs [#_shunt_switch] ; [] |1954| 
        MOV       *-SP[63],#49          ; [CPU_] 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1956,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1956| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("_delay_us")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1956| 
        ; call occurs [#_delay_us] ; [] |1956| 
        MOVZ      AR6,*-SP[63]          ; [CPU_] |1956| 
	.dwpsn	file "../Source/prod.c",line 1955,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1955| 
        MOVZ      AR0,AR6               ; [CPU_] |1955| 
        MOV       *-SP[63],AR6          ; [CPU_] |1955| 
        CMP       AR0,#-1               ; [CPU_] |1955| 
        B         $C$L560,NEQ           ; [CPU_] |1955| 
        ; branchcc occurs ; [] |1955| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1959,column 8,is_stmt,isa 0
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1959| 
        ; call occurs [#_maf_rst] ; [] |1959| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1961,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1961| 
        SPM       #0                    ; [CPU_] 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("_delay_us")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1961| 
        ; call occurs [#_delay_us] ; [] |1961| 
$C$L561:    
	.dwpsn	file "../Source/prod.c",line 1964,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1964| 
	.dwpsn	file "../Source/prod.c",line 1965,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1965| 
	.dwpsn	file "../Source/prod.c",line 1964,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1964| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1964| 
	.dwpsn	file "../Source/prod.c",line 1966,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1966| 
	.dwpsn	file "../Source/prod.c",line 1965,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1965| 
	.dwpsn	file "../Source/prod.c",line 1966,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1966| 
        MOVB      ACC,#0                ; [CPU_] |1966| 
        SUBB      ACC,#1                ; [CPU_] |1966| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1966| 
        B         $C$L563,EQ            ; [CPU_] |1966| 
        ; branchcc occurs ; [] |1966| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1967,column 15,is_stmt,isa 0
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1967| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1967| 
        CMPB      AL,#0                 ; [CPU_] |1967| 
        B         $C$L564,EQ            ; [CPU_] |1967| 
        ; branchcc occurs ; [] |1967| 
	.dwpsn	file "../Source/prod.c",line 1971,column 8,is_stmt,isa 0
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1971| 
        ; call occurs [#_ad7738_getraw] ; [] |1971| 
	.dwpsn	file "../Source/prod.c",line 1972,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1972| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1972| 
        ADDL      XAR4,ACC              ; [CPU_] |1972| 
        MOVL      XAR0,#18              ; [CPU_] |1972| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1972| 
        MOVL      XAR0,#18              ; [CPU_] |1972| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1972| 
        ASR64     ACC:P,16              ; [CPU_] |1972| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1972| 
        MOVL      XAR0,#18              ; [CPU_] |1972| 
        ASR64     ACC:P,16              ; [CPU_] |1972| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1972| 
        MOVL      XAR0,#18              ; [CPU_] |1972| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1972| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1972| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1972| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1972| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1972| 
	.dwpsn	file "../Source/prod.c",line 1966,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1966| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1966| 
        MOVB      ACC,#0                ; [CPU_] |1966| 
        SUBB      ACC,#1                ; [CPU_] |1966| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1966| 
        B         $C$L562,NEQ           ; [CPU_] |1966| 
        ; branchcc occurs ; [] |1966| 
$C$L563:    
	.dwpsn	file "../Source/prod.c",line 1951,column 18,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1951| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1951| 
        ADDB      XAR1,#4               ; [CPU_] |1951| 
        MOVL      XAR0,#104             ; [CPU_] |1951| 
        ADDB      AL,#1                 ; [CPU_] |1951| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1951| 
        CMPB      AL,#2                 ; [CPU_] |1951| 
        B         $C$L559,LT            ; [CPU_] |1951| 
        ; branchcc occurs ; [] |1951| 
	.dwpsn	file "../Source/prod.c",line 1976,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1976| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1976| 
        ; call occurs [#_shunt_switch] ; [] |1976| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1978,column 6,is_stmt,isa 0
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1978| 
        ; call occurs [#_maf_rst] ; [] |1978| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1981,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1981| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1981| 
        ; call occurs [#_scia_puts] ; [] |1981| 
	.dwpsn	file "../Source/prod.c",line 1983,column 6,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1983| 
        MOV       T,*+FP[AR0]           ; [CPU_] |1983| 
        MOVL      XAR0,#40              ; [CPU_] |1983| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1983| 
        MOVB      AL,#10                ; [CPU_] |1983| 
        MPYU      ACC,T,AL              ; [CPU_] |1983| 
        MOVL      XAR0,#88              ; [CPU_] |1983| 
        ADDL      ACC,XAR6              ; [CPU_] |1983| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1983| 
        MOV       AL,#16384             ; [CPU_] |1983| 
        MOV       AH,#17948             ; [CPU_] |1983| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1983| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1983| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1983| 
        ; call occurs [#FS$$MPY] ; [] |1983| 
        MOVL      XAR3,ACC              ; [CPU_] |1983| 
        MOVL      P,*-SP[28]            ; [CPU_] |1983| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1983| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1983| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1983| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1983| 
        ; call occurs [#LL$$TOFS] ; [] |1983| 
        MOVL      XAR0,#88              ; [CPU_] |1983| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1983| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1983| 
        MOVB      XAR1,#44              ; [CPU_] |1983| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1983| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1983| 
        ; call occurs [#FS$$MPY] ; [] |1983| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1983| 
        MOVL      ACC,XAR3              ; [CPU_] |1983| 
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1983| 
        ; call occurs [#FS$$DIV] ; [] |1983| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1983| 
        MOVB      XAR0,#96              ; [CPU_] |1983| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 1985,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1985| 
        MOVL      ACC,XAR1              ; [CPU_] |1985| 
        ADDB      ACC,#96               ; [CPU_] |1985| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1985| 
        MOVL      XAR0,#88              ; [CPU_] |1985| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1985| 
        MOVL      XAR0,#42              ; [CPU_] |1985| 
        ADDB      XAR4,#42              ; [CPU_] |1985| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1985| 
	.dwpsn	file "../Source/prod.c",line 1987,column 6,is_stmt,isa 0
        B         $C$L556,UNC           ; [CPU_] |1987| 
        ; branch occurs ; [] |1987| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1968,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1968| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_delay_us")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1968| 
        ; call occurs [#_delay_us] ; [] |1968| 
	.dwpsn	file "../Source/prod.c",line 1967,column 15,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1967| 
        ; branch occurs ; [] |1967| 
$C$L565:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1850| 
$C$L566:    
	.dwpsn	file "../Source/prod.c",line 1855,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1855| 
        MOVL      XAR0,#44              ; [CPU_] |1855| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1855| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1855| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1855| 
        MOVL      XAR4,XAR1             ; [CPU_] |1855| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_sprintf")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1855| 
        ; call occurs [#_sprintf] ; [] |1855| 
	.dwpsn	file "../Source/prod.c",line 1856,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1856| 
	.dwpsn	file "../Source/prod.c",line 1855,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1855| 
	.dwpsn	file "../Source/prod.c",line 1856,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1856| 
        MOV       AL,#1024              ; [CPU_] |1856| 
        MOVL      XAR5,XAR1             ; [CPU_] |1856| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1856| 
        ; call occurs [#_scia_getparam] ; [] |1856| 
        MOVL      XAR4,XAR1             ; [CPU_] |1856| 
	.dwpsn	file "../Source/prod.c",line 1857,column 7,is_stmt,isa 0
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_atoi")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1857| 
        ; call occurs [#_atoi] ; [] |1857| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1857| 
        MOVB      XAR0,#46              ; [CPU_] |1857| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1857| 
        MOVL      XAR0,#86              ; [CPU_] |1857| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1857| 
	.dwpsn	file "../Source/prod.c",line 1858,column 7,is_stmt,isa 0
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1858| 
        ; call occurs [#_scia_puts] ; [] |1858| 
	.dwpsn	file "../Source/prod.c",line 1860,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1860| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1860| 
        CMPB      AL,#2                 ; [CPU_] |1860| 
        B         $C$L589,LT            ; [CPU_] |1860| 
        ; branchcc occurs ; [] |1860| 
        CMPB      AL,#12                ; [CPU_] |1860| 
        B         $C$L589,GT            ; [CPU_] |1860| 
        ; branchcc occurs ; [] |1860| 
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1865| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1865| 
        ; call occurs [#_scia_puts] ; [] |1865| 
	.dwpsn	file "../Source/prod.c",line 1867,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1867| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1867| 
        MOVL      XAR0,#44              ; [CPU_] |1867| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1867| 
        ADDB      XAR7,#46              ; [CPU_] |1867| 
        MOV       AL,*XAR7              ; [CPU_] |1867| 
        MOV       *-SP[3],AL            ; [CPU_] |1867| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1867| 
        MOVL      XAR4,XAR1             ; [CPU_] |1867| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("_sprintf")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1867| 
        ; call occurs [#_sprintf] ; [] |1867| 
	.dwpsn	file "../Source/prod.c",line 1868,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1868| 
	.dwpsn	file "../Source/prod.c",line 1867,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1867| 
	.dwpsn	file "../Source/prod.c",line 1868,column 6,is_stmt,isa 0
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1868| 
        ; call occurs [#_lcd_puts] ; [] |1868| 
	.dwpsn	file "../Source/prod.c",line 1871,column 11,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1871| 
        MOV       *+FP[AR0],#0          ; [CPU_] |1871| 
	.dwpsn	file "../Source/prod.c",line 1871,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1871| 
	.dwpsn	file "../Source/prod.c",line 1871,column 11,is_stmt,isa 0
        B         $C$L568,UNC           ; [CPU_] |1871| 
        ; branch occurs ; [] |1871| 
$C$L567:    
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1872,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1872| 
        SUB       AL,*-SP[63]           ; [CPU_] |1872| 
        ADDB      AL,#1                 ; [CPU_] |1872| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1872| 
        ; call occurs [#I$$TOFS] ; [] |1872| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1872| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1872| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1872| 
        ; call occurs [#FS$$MPY] ; [] |1872| 
        MOVL      XAR0,#88              ; [CPU_] |1872| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1872| 
        MOV       AL,*-SP[63]           ; [CPU_] |1872| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1872| 
        ; call occurs [#I$$TOFS] ; [] |1872| 
        MOVL      XAR0,#88              ; [CPU_] |1872| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1872| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1872| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1872| 
        ; call occurs [#FS$$DIV] ; [] |1872| 
        MOVL      XAR0,#104             ; [CPU_] |1872| 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] |1872| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1872| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1872| 
        ADDL      ACC,XAR1              ; [CPU_] |1872| 
        MOVL      XAR4,ACC              ; [CPU_] |1872| 
        MOVB      XAR0,#48              ; [CPU_] |1872| 
	.dwpsn	file "../Source/prod.c",line 1871,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1871| 
	.dwpsn	file "../Source/prod.c",line 1872,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1872| 
	.dwpsn	file "../Source/prod.c",line 1871,column 38,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1871| 
        MOV       *+FP[AR0],AR6         ; [CPU_] |1871| 
$C$L568:    
	.dwpsn	file "../Source/prod.c",line 1871,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1871| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1871| 
        MOVL      XAR0,#104             ; [CPU_] |1871| 
        MOV       *-SP[63],AL           ; [CPU_] |1871| 
        CMP       AL,*+FP[AR0]          ; [CPU_] |1871| 
        B         $C$L567,GT            ; [CPU_] |1871| 
        ; branchcc occurs ; [] |1871| 
	.dwpsn	file "../Source/prod.c",line 1877,column 11,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1877| 
        MOV       *+FP[AR0],#0          ; [CPU_] |1877| 
        B         $C$L571,UNC           ; [CPU_] |1877| 
        ; branch occurs ; [] |1877| 
$C$L569:    
        MOVL      XAR0,#104             ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1878,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1878| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1878| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1878| 
        MOVL      XAR0,#44              ; [CPU_] |1878| 
        ADDL      ACC,XAR1              ; [CPU_] |1878| 
        ADDB      ACC,#48               ; [CPU_] |1878| 
        MOVL      XAR1,ACC              ; [CPU_] |1878| 
        MOVB      AL,#1                 ; [CPU_] |1878| 
        ADD       AL,AR6                ; [CPU_] |1878| 
        MOV       *-SP[3],AL            ; [CPU_] |1878| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1878| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1878| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1878| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("_sprintf")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1878| 
        ; call occurs [#_sprintf] ; [] |1878| 
        MOVL      XAR0,#44              ; [CPU_] |1878| 
	.dwpsn	file "../Source/prod.c",line 1880,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1880| 
	.dwpsn	file "../Source/prod.c",line 1878,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1878| 
	.dwpsn	file "../Source/prod.c",line 1880,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1880| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1880| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1880| 
        ; call occurs [#_scia_getparam] ; [] |1880| 
        CMPB      AL,#0                 ; [CPU_] |1880| 
        B         $C$L570,EQ            ; [CPU_] |1880| 
        ; branchcc occurs ; [] |1880| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_strtod")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1884,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1884| 
$C$L570:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1886| 
        ; call occurs [#_scia_puts] ; [] |1886| 
	.dwpsn	file "../Source/prod.c",line 1887,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1887| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1887| 
        ; call occurs [#_scia_puts] ; [] |1887| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#104             ; [CPU_] |1887| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1887| 
	.dwpsn	file "../Source/prod.c",line 1877,column 38,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1877| 
        ADDB      AL,#1                 ; [CPU_] |1877| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1877| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] 
$C$L571:    
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1877,column 18,is_stmt,isa 0
        CMP       AL,*+FP[AR0]          ; [CPU_] |1877| 
        B         $C$L569,GT            ; [CPU_] |1877| 
        ; branchcc occurs ; [] |1877| 
	.dwpsn	file "../Source/prod.c",line 1893,column 11,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1893| 
        MOV       *+FP[AR0],#0          ; [CPU_] |1893| 
        B         $C$L576,UNC           ; [CPU_] |1893| 
        ; branch occurs ; [] |1893| 
$C$L572:    
        MOVL      XAR0,#104             ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1894,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1894| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1894| 
        ADDL      ACC,XAR1              ; [CPU_] |1894| 
        ADDB      ACC,#48               ; [CPU_] |1894| 
        MOVL      XAR1,ACC              ; [CPU_] |1894| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1894| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      XAR0,#70              ; [CPU_] |1894| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1894| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1894| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1894| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1894| 
        ANDB      AL,#0x0f              ; [CPU_] |1894| 
        MOV       ACC,AL << 1           ; [CPU_] |1894| 
        ADDL      ACC,XAR7              ; [CPU_] |1894| 
        MOVL      XAR4,ACC              ; [CPU_] |1894| 
        MOVL      XAR0,#44              ; [CPU_] |1894| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1894| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1894| 
        MOVB      AL,#1                 ; [CPU_] |1894| 
        ADD       AL,AR6                ; [CPU_] |1894| 
        MOV       *-SP[7],AL            ; [CPU_] |1894| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1894| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_sprintf")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1894| 
        ; call occurs [#_sprintf] ; [] |1894| 
        MOVL      XAR0,#44              ; [CPU_] |1894| 
	.dwpsn	file "../Source/prod.c",line 1898,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1898| 
	.dwpsn	file "../Source/prod.c",line 1894,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1894| 
	.dwpsn	file "../Source/prod.c",line 1898,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1898| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1898| 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1898| 
        ; call occurs [#_scia_getparam] ; [] |1898| 
	.dwpsn	file "../Source/prod.c",line 1899,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1899| 
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1899| 
        ; call occurs [#_scia_puts] ; [] |1899| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1902| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1902,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1903| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1903| 
        MOVB      ACC,#0                ; [CPU_] |1903| 
        SUBB      ACC,#1                ; [CPU_] |1903| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1903| 
        B         $C$L575,EQ            ; [CPU_] |1903| 
        ; branchcc occurs ; [] |1903| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1904,column 15,is_stmt,isa 0
        B         $C$L574,UNC           ; [CPU_] |1904| 
        ; branch occurs ; [] |1904| 
$C$L573:    
	.dwpsn	file "../Source/prod.c",line 1905,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1905| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_delay_us")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1905| 
        ; call occurs [#_delay_us] ; [] |1905| 
$C$L574:    
	.dwpsn	file "../Source/prod.c",line 1904,column 15,is_stmt,isa 0
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1904| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1904| 
        CMPB      AL,#0                 ; [CPU_] |1904| 
        B         $C$L573,EQ            ; [CPU_] |1904| 
        ; branchcc occurs ; [] |1904| 
	.dwpsn	file "../Source/prod.c",line 1908,column 8,is_stmt,isa 0
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1908| 
        ; call occurs [#_ad7738_getraw] ; [] |1908| 
	.dwpsn	file "../Source/prod.c",line 1909,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1909| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1909| 
        ADDL      XAR4,ACC              ; [CPU_] |1909| 
        MOVL      XAR0,#16              ; [CPU_] |1909| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1909| 
        MOVL      XAR0,#16              ; [CPU_] |1909| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1909| 
        ASR64     ACC:P,16              ; [CPU_] |1909| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1909| 
        MOVL      XAR0,#16              ; [CPU_] |1909| 
        ASR64     ACC:P,16              ; [CPU_] |1909| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1909| 
        MOVL      XAR0,#16              ; [CPU_] |1909| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1909| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1909| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1909| 
        MOVL      *-SP[32],P            ; [CPU_] |1909| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1909| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1903| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1903| 
        MOVB      ACC,#0                ; [CPU_] |1903| 
        SUBB      ACC,#1                ; [CPU_] |1903| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1903| 
        B         $C$L574,NEQ           ; [CPU_] |1903| 
        ; branchcc occurs ; [] |1903| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 1911,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1911| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1911| 
        ; call occurs [#_scia_puts] ; [] |1911| 
	.dwpsn	file "../Source/prod.c",line 1912,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1912| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1912| 
        MOV       *-SP[2],#0            ; [CPU_] |1912| 
        MOV       *-SP[1],#0            ; [CPU_] |1912| 
        MOVL      P,*-SP[32]            ; [CPU_] |1912| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1912| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1912| 
        ; call occurs [#LL$$DIV] ; [] |1912| 
        ADDB      XAR1,#24              ; [CPU_] |1912| 
        MOVL      XAR0,#104             ; [CPU_] |1912| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1912| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1912| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1893,column 38,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1893| 
        ADDB      AL,#1                 ; [CPU_] |1893| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1893| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] 
$C$L576:    
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1893,column 18,is_stmt,isa 0
        CMP       AL,*+FP[AR0]          ; [CPU_] |1893| 
        B         $C$L572,GT            ; [CPU_] |1893| 
        ; branchcc occurs ; [] |1893| 
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1916,column 11,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1916| 
        MOV       *+FP[AR0],#0          ; [CPU_] |1916| 
        B         $C$L578,UNC           ; [CPU_] |1916| 
        ; branch occurs ; [] |1916| 
$C$L577:    
        MOVL      XAR0,#104             ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1917| 
        ADDL      XAR1,ACC              ; [CPU_] |1917| 
        MOVB      XAR0,#48              ; [CPU_] |1917| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1917| 
        MOVB      XAR0,#50              ; [CPU_] |1917| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1917| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1917| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1917| 
        ; call occurs [#FS$$SUB] ; [] |1917| 
        MOVL      XAR0,#88              ; [CPU_] |1917| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1917| 
        MOVB      XAR0,#74              ; [CPU_] |1917| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1917| 
        MOVB      XAR0,#72              ; [CPU_] |1917| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1917| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1917| 
        ; call occurs [#L$$TOFS] ; [] |1917| 
        MOVL      XAR0,#88              ; [CPU_] |1917| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1917| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1917| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1917| 
        ; call occurs [#FS$$DIV] ; [] |1917| 
        MOVL      XAR0,#42              ; [CPU_] |1917| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1917| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1917| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1917| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1917| 
        ; call occurs [#FS$$DIV] ; [] |1917| 
        MOVB      XAR0,#96              ; [CPU_] |1917| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1917| 
	.dwpsn	file "../Source/prod.c",line 1921,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1921| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1921| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1921| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1921| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1921| 
        ; call occurs [#FS$$MPY] ; [] |1921| 
        MOVL      XAR0,#88              ; [CPU_] |1921| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1921| 
        MOVB      XAR0,#72              ; [CPU_] |1921| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1921| 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1921| 
        ; call occurs [#L$$TOFS] ; [] |1921| 
        MOVL      XAR0,#88              ; [CPU_] |1921| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1921| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1921| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1921| 
        ; call occurs [#FS$$MPY] ; [] |1921| 
        MOVB      XAR0,#48              ; [CPU_] |1921| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1921| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1921| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1921| 
        ; call occurs [#FS$$SUB] ; [] |1921| 
        MOVB      XAR0,#118             ; [CPU_] |1921| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1921| 
        MOVL      XAR0,#104             ; [CPU_] |1921| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1921| 
	.dwpsn	file "../Source/prod.c",line 1916,column 42,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1916| 
        ADDB      AL,#1                 ; [CPU_] |1916| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1916| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[63],AL           ; [CPU_] 
$C$L578:    
        MOV       AL,*-SP[63]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1925,column 6,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1925| 
        ADDB      AL,#-1                ; [CPU_] |1925| 
        CMP       AL,*+FP[AR0]          ; [CPU_] |1925| 
        B         $C$L577,GT            ; [CPU_] |1925| 
        ; branchcc occurs ; [] |1925| 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1996,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1996| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1996| 
        MOV       AL,#1024              ; [CPU_] |1996| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1996| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1996| 
        ; call occurs [#_scia_getparam] ; [] |1996| 
	.dwpsn	file "../Source/prod.c",line 1999,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1999| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1999| 
        ; call occurs [#_scia_puts] ; [] |1999| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2001,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2001| 
        MOVL      XAR0,#104             ; [CPU_] |2001| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |2001| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2002,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |2002| 
        B         $C$L582,LEQ           ; [CPU_] |2002| 
        ; branchcc occurs ; [] |2002| 
	.dwpsn	file "../Source/prod.c",line 2004,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2004| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2004| 
        ; call occurs [#_shunt_switch] ; [] |2004| 
        MOV       *-SP[63],#49          ; [CPU_] 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2006,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2006| 
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_delay_us")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2006| 
        ; call occurs [#_delay_us] ; [] |2006| 
        MOVZ      AR6,*-SP[63]          ; [CPU_] |2006| 
	.dwpsn	file "../Source/prod.c",line 2005,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2005| 
        MOVZ      AR0,AR6               ; [CPU_] |2005| 
        MOV       *-SP[63],AR6          ; [CPU_] |2005| 
        CMP       AR0,#-1               ; [CPU_] |2005| 
        B         $C$L581,NEQ           ; [CPU_] |2005| 
        ; branchcc occurs ; [] |2005| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2009,column 7,is_stmt,isa 0
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2009| 
        ; call occurs [#_maf_rst] ; [] |2009| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2011,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2011| 
        SPM       #0                    ; [CPU_] 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("_delay_us")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2011| 
        ; call occurs [#_delay_us] ; [] |2011| 
$C$L582:    
	.dwpsn	file "../Source/prod.c",line 2014,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |2014| 
	.dwpsn	file "../Source/prod.c",line 2015,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2015| 
	.dwpsn	file "../Source/prod.c",line 2014,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2014| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2014| 
	.dwpsn	file "../Source/prod.c",line 2016,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2016| 
	.dwpsn	file "../Source/prod.c",line 2015,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2015| 
	.dwpsn	file "../Source/prod.c",line 2016,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2016| 
        MOVB      ACC,#0                ; [CPU_] |2016| 
        SUBB      ACC,#1                ; [CPU_] |2016| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2016| 
        B         $C$L584,EQ            ; [CPU_] |2016| 
        ; branchcc occurs ; [] |2016| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L583:    
	.dwpsn	file "../Source/prod.c",line 2017,column 14,is_stmt,isa 0
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2017| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2017| 
        CMPB      AL,#0                 ; [CPU_] |2017| 
        B         $C$L588,EQ            ; [CPU_] |2017| 
        ; branchcc occurs ; [] |2017| 
	.dwpsn	file "../Source/prod.c",line 2021,column 7,is_stmt,isa 0
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2021| 
        ; call occurs [#_ad7738_getraw] ; [] |2021| 
	.dwpsn	file "../Source/prod.c",line 2022,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2022| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2022| 
        ADDL      XAR4,ACC              ; [CPU_] |2022| 
        MOVL      XAR0,#14              ; [CPU_] |2022| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2022| 
        MOVL      XAR0,#14              ; [CPU_] |2022| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2022| 
        ASR64     ACC:P,16              ; [CPU_] |2022| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2022| 
        MOVL      XAR0,#14              ; [CPU_] |2022| 
        ASR64     ACC:P,16              ; [CPU_] |2022| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2022| 
        MOVL      XAR0,#14              ; [CPU_] |2022| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |2022| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2022| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |2022| 
        MOVL      *+XAR3[0],P           ; [CPU_] |2022| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2022| 
	.dwpsn	file "../Source/prod.c",line 2016,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2016| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2016| 
        MOVB      ACC,#0                ; [CPU_] |2016| 
        SUBB      ACC,#1                ; [CPU_] |2016| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2016| 
        B         $C$L583,NEQ           ; [CPU_] |2016| 
        ; branchcc occurs ; [] |2016| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2024,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2024| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2024| 
        MOV       *-SP[2],#0            ; [CPU_] |2024| 
        MOV       *-SP[1],#0            ; [CPU_] |2024| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |2024| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |2024| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2024| 
        ; call occurs [#LL$$DIV] ; [] |2024| 
	.dwpsn	file "../Source/prod.c",line 2027,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2027| 
        MOVB      XAR0,#46              ; [CPU_] |2027| 
	.dwpsn	file "../Source/prod.c",line 2024,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2024| 
	.dwpsn	file "../Source/prod.c",line 2026,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2026| 
	.dwpsn	file "../Source/prod.c",line 2024,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2024| 
	.dwpsn	file "../Source/prod.c",line 2027,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2027| 
        CMPB      AL,#2                 ; [CPU_] |2027| 
        B         $C$L587,LEQ           ; [CPU_] |2027| 
        ; branchcc occurs ; [] |2027| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2028,column 7,is_stmt,isa 0
        B         $C$L586,UNC           ; [CPU_] |2028| 
        ; branch occurs ; [] |2028| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2029,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2029| 
$C$L586:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2028,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2028| 
        B         $C$L587,HIS           ; [CPU_] |2028| 
        ; branchcc occurs ; [] |2028| 
        MOVB      AL,#1                 ; [CPU_] |2028| 
        ADD       AL,AR4                ; [CPU_] |2028| 
        MOVZ      AR5,AL                ; [CPU_] |2028| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2028| 
        ADDL      ACC,XAR1              ; [CPU_] |2028| 
        MOVL      XAR6,ACC              ; [CPU_] |2028| 
        MOVB      XAR0,#72              ; [CPU_] |2028| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2028| 
        MOVL      XAR0,#12              ; [CPU_] |2028| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2028| 
        MOVL      XAR0,#12              ; [CPU_] |2028| 
        ASR64     ACC:P,16              ; [CPU_] |2028| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2028| 
        MOVL      XAR0,#12              ; [CPU_] |2028| 
        ASR64     ACC:P,16              ; [CPU_] |2028| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2028| 
        MOVL      *-SP[4],P             ; [CPU_] |2028| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2028| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2028| 
        MOVL      P,*-SP[32]            ; [CPU_] |2028| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1281, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2028| 
        ; call occurs [#LL$$CMP] ; [] |2028| 
        CMPB      AL,#0                 ; [CPU_] |2028| 
        B         $C$L585,GT            ; [CPU_] |2028| 
        ; branchcc occurs ; [] |2028| 
$C$L587:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2032,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2032| 
        ADDL      ACC,XAR1              ; [CPU_] |2032| 
        MOVL      XAR4,ACC              ; [CPU_] |2032| 
        MOVL      XAR0,#88              ; [CPU_] |2032| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2032| 
        MOVB      XAR0,#96              ; [CPU_] |2032| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2032| 
        MOVL      XAR0,#42              ; [CPU_] |2032| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2032| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2032| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2032| 
        ; call occurs [#FS$$MPY] ; [] |2032| 
        MOVL      XAR0,#36              ; [CPU_] |2032| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2032| 
        MOVL      P,*XAR3++             ; [CPU_] |2032| 
        MOVL      ACC,*XAR3++           ; [CPU_] |2032| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2032| 
        ; call occurs [#LL$$TOFS] ; [] |2032| 
        MOVL      XAR0,#36              ; [CPU_] |2032| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2032| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2032| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2032| 
        ; call occurs [#FS$$MPY] ; [] |2032| 
        MOVL      XAR0,#88              ; [CPU_] |2032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2032| 
        MOVB      XAR1,#118             ; [CPU_] |2032| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |2032| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2032| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2032| 
        ; call occurs [#FS$$ADD] ; [] |2032| 
        MOVL      XAR0,#38              ; [CPU_] |2032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2032| 
        MOVL      XAR0,#38              ; [CPU_] |2032| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2032| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2032| 
        MOVL      XAR0,#104             ; [CPU_] |2032| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2032| 
	.dwpsn	file "../Source/prod.c",line 2001,column 17,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |2001| 
        ADDB      AL,#1                 ; [CPU_] |2001| 
        MOV       *+FP[AR0],AL          ; [CPU_] |2001| 
        CMPB      AL,#2                 ; [CPU_] |2001| 
        B         $C$L580,LT            ; [CPU_] |2001| 
        ; branchcc occurs ; [] |2001| 
	.dwpsn	file "../Source/prod.c",line 2036,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2036| 
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2036| 
        ; call occurs [#_shunt_switch] ; [] |2036| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2038,column 5,is_stmt,isa 0
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2038| 
        ; call occurs [#_maf_rst] ; [] |2038| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2041,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2041| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2041| 
        ; call occurs [#_scia_puts] ; [] |2041| 
	.dwpsn	file "../Source/prod.c",line 2043,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2043| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2043| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2043| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2043| 
        ; call occurs [#FS$$SUB] ; [] |2043| 
	.dwpsn	file "../Source/prod.c",line 2049,column 5,is_stmt,isa 0
        MOVB      XAR1,#150             ; [CPU_] |2049| 
	.dwpsn	file "../Source/prod.c",line 2043,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |2043| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2043| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2043| 
        MOVB      XAR0,#140             ; [CPU_] |2043| 
	.dwpsn	file "../Source/prod.c",line 2047,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR4             ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2043,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2043| 
	.dwpsn	file "../Source/prod.c",line 2046,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2046| 
        MOV       AL,#0                 ; [CPU_] |2046| 
        MOV       AH,#0                 ; [CPU_] |2046| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2047,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2047| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2047| 
        MOVL      *+XAR7[AR0],ACC       ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2048,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2048| 
        MOV       AL,#0                 ; [CPU_] |2048| 
        MOV       AH,#0                 ; [CPU_] |2048| 
        MOVL      *+XAR7[AR0],ACC       ; [CPU_] |2048| 
	.dwpsn	file "../Source/prod.c",line 2049,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2049| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2049| 
        MOV       *+XAR7[AR1],AL        ; [CPU_] |2049| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2052,column 5,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |2052| 
        MOV       T,*+FP[AR0]           ; [CPU_] |2052| 
        MOVL      XAR0,#40              ; [CPU_] |2052| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2052| 
        MOVB      AL,#152               ; [CPU_] |2052| 
        MPYU      ACC,T,AL              ; [CPU_] |2052| 
        ADDL      ACC,XAR6              ; [CPU_] |2052| 
        ADDB      ACC,#82               ; [CPU_] |2052| 
        MOVL      XAR4,ACC              ; [CPU_] |2052| 
        MOVL      XAR0,#42              ; [CPU_] |2052| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |2052| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2052| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR0,#95              ; [CPU_] |2052| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2052| 
	.dwpsn	file "../Source/prod.c",line 2055,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2055| 
	.dwpsn	file "../Source/prod.c",line 2057,column 5,is_stmt,isa 0
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2057| 
        ; call occurs [#_ad7738_setcal] ; [] |2057| 
        MOVL      XAR0,#78              ; [CPU_] |2057| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2057| 
	.dwpsn	file "../Source/prod.c",line 2058,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |2058| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |2058| 
        MOVL      XAR1,ACC              ; [CPU_] |2058| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2058| 
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2058| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2058| 
	.dwpsn	file "../Source/prod.c",line 2059,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2059| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2059| 
        ; call occurs [#_ad7738_resetvall] ; [] |2059| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2062,column 5,is_stmt,isa 0
        MOVL      XAR0,#92              ; [CPU_] |2062| 
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2062| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2062| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2062| 
        MOVL      XAR0,#93              ; [CPU_] |2062| 
        MOV       *-SP[3],AL            ; [CPU_] |2062| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2062| 
        MOVL      XAR0,#44              ; [CPU_] |2062| 
        MOV       *-SP[4],AL            ; [CPU_] |2062| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2062| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2062| 
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_sprintf")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2062| 
        ; call occurs [#_sprintf] ; [] |2062| 
        MOVL      XAR4,XAR1             ; [CPU_] |2062| 
	.dwpsn	file "../Source/prod.c",line 2064,column 5,is_stmt,isa 0
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2064| 
        ; call occurs [#_scia_puts] ; [] |2064| 
        MOVL      XAR0,#95              ; [CPU_] |2064| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |2064| 
	.dwpsn	file "../Source/prod.c",line 2065,column 5,is_stmt,isa 0
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2065| 
        ; call occurs [#_print_sensor] ; [] |2065| 
	.dwpsn	file "../Source/prod.c",line 2070,column 5,is_stmt,isa 0
        B         $C$L529,UNC           ; [CPU_] |2070| 
        ; branch occurs ; [] |2070| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 2018,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2018| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_delay_us")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2018| 
        ; call occurs [#_delay_us] ; [] |2018| 
	.dwpsn	file "../Source/prod.c",line 2017,column 14,is_stmt,isa 0
        B         $C$L583,UNC           ; [CPU_] |2017| 
        ; branch occurs ; [] |2017| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1862,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1862| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1862| 
        ; call occurs [#_scia_puts] ; [] |1862| 
	.dwpsn	file "../Source/prod.c",line 1854,column 6,is_stmt,isa 0
        B         $C$L566,UNC           ; [CPU_] |1854| 
        ; branch occurs ; [] |1854| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1792,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1792| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1792| 
        ; call occurs [#_scia_puts] ; [] |1792| 
	.dwpsn	file "../Source/prod.c",line 1786,column 5,is_stmt,isa 0
        B         $C$L549,UNC           ; [CPU_] |1786| 
        ; branch occurs ; [] |1786| 
$C$L591:    
	.dwpsn	file "../Source/prod.c",line 1707,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1707| 
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1707| 
        ; call occurs [#_scia_puts] ; [] |1707| 
	.dwpsn	file "../Source/prod.c",line 1697,column 5,is_stmt,isa 0
        B         $C$L537,UNC           ; [CPU_] |1697| 
        ; branch occurs ; [] |1697| 
$C$L592:    
	.dwpsn	file "../Source/prod.c",line 1690,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1690| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1690| 
        ; call occurs [#_scia_puts] ; [] |1690| 
	.dwpsn	file "../Source/prod.c",line 1682,column 5,is_stmt,isa 0
        B         $C$L536,UNC           ; [CPU_] |1682| 
        ; branch occurs ; [] |1682| 
$C$L593:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1404,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1404| 
        B         $C$L627,LO            ; [CPU_] |1404| 
        ; branchcc occurs ; [] |1404| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L627,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1408,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1408| 
        CMPB      AL,#67                ; [CPU_] |1408| 
        B         $C$L594,EQ            ; [CPU_] |1408| 
        ; branchcc occurs ; [] |1408| 
        CMPB      AL,#68                ; [CPU_] |1408| 
        B         $C$L627,NEQ           ; [CPU_] |1408| 
        ; branchcc occurs ; [] |1408| 
$C$L594:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1413,column 5,is_stmt,isa 0
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_atoi")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1413| 
        ; call occurs [#_atoi] ; [] |1413| 
        MOVL      XAR0,#94              ; [CPU_] |1413| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1413| 
	.dwpsn	file "../Source/prod.c",line 1415,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1415| 
        CMPB      AL,#4                 ; [CPU_] |1415| 
        B         $C$L627,HIS           ; [CPU_] |1415| 
        ; branchcc occurs ; [] |1415| 
	.dwpsn	file "../Source/prod.c",line 1420,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1420| 
        MOV       AH,#0                 ; [CPU_] |1420| 
	.dwpsn	file "../Source/prod.c",line 1421,column 5,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |1421| 
	.dwpsn	file "../Source/prod.c",line 1420,column 5,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1420| 
	.dwpsn	file "../Source/prod.c",line 1421,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1421| 
        MOV       AH,#0                 ; [CPU_] |1421| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1421| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1421| 
	.dwpsn	file "../Source/prod.c",line 1422,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1422| 
        B         $C$L598,LOS           ; [CPU_] |1422| 
        ; branchcc occurs ; [] |1422| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1422,column 10,is_stmt,isa 0
        MOV       *-SP[63],#3           ; [CPU_] |1422| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1423,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1423| 
        CMPB      AL,#88                ; [CPU_] |1423| 
        B         $C$L596,NEQ           ; [CPU_] |1423| 
        ; branchcc occurs ; [] |1423| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[63]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_strtod")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1425,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1425| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1428,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1428| 
        B         $C$L597,NEQ           ; [CPU_] |1428| 
        ; branchcc occurs ; [] |1428| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[63]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_strtod")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1430,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1430| 
$C$L597:    
	.dwpsn	file "../Source/prod.c",line 1422,column 17,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |1422| 
        INC       *-SP[63]              ; [CPU_] |1422| 
        ADDB      XAR1,#1               ; [CPU_] |1422| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1422| 
        CMP       AL,*-SP[63]           ; [CPU_] |1422| 
        B         $C$L595,HI            ; [CPU_] |1422| 
        ; branchcc occurs ; [] |1422| 
$C$L598:    
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1418,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1418| 
        ADDB      AL,#-1                ; [CPU_] |1418| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1418| 
	.dwpsn	file "../Source/prod.c",line 1435,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1435| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1435| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1435| 
        ; call occurs [#FS$$CMP] ; [] |1435| 
        CMPB      AL,#0                 ; [CPU_] |1435| 
        B         $C$L627,EQ            ; [CPU_] |1435| 
        ; branchcc occurs ; [] |1435| 
	.dwpsn	file "../Source/prod.c",line 1439,column 5,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1439| 
        ; call occurs [#_lcd_clear] ; [] |1439| 
	.dwpsn	file "../Source/prod.c",line 1440,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1440| 
        MOVL      XAR0,#94              ; [CPU_] |1440| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1440| 
        ADD       AL,*+FP[AR0]          ; [CPU_] |1440| 
        MOVL      XAR0,#93              ; [CPU_] |1440| 
        MOVZ      AR1,AL                ; [CPU_] |1440| 
        MOV       *+FP[AR0],AL          ; [CPU_] |1440| 
        MOVL      XAR0,#44              ; [CPU_] |1440| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1440| 
        MOV       *-SP[3],AL            ; [CPU_] |1440| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1440| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("_sprintf")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1440| 
        ; call occurs [#_sprintf] ; [] |1440| 
        MOVL      XAR0,#44              ; [CPU_] |1440| 
	.dwpsn	file "../Source/prod.c",line 1441,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1441| 
	.dwpsn	file "../Source/prod.c",line 1440,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1440| 
	.dwpsn	file "../Source/prod.c",line 1441,column 5,is_stmt,isa 0
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1441| 
        ; call occurs [#_lcd_puts] ; [] |1441| 
	.dwpsn	file "../Source/prod.c",line 1442,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1442| 
        MOVL      XAR0,#44              ; [CPU_] |1442| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1442| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1442| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1442| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1442| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_sprintf")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1442| 
        ; call occurs [#_sprintf] ; [] |1442| 
        MOVL      XAR0,#44              ; [CPU_] |1442| 
	.dwpsn	file "../Source/prod.c",line 1443,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1443| 
	.dwpsn	file "../Source/prod.c",line 1442,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1442| 
	.dwpsn	file "../Source/prod.c",line 1443,column 5,is_stmt,isa 0
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1443| 
        ; call occurs [#_lcd_puts] ; [] |1443| 
	.dwpsn	file "../Source/prod.c",line 1444,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1444| 
        MOVL      XAR0,#44              ; [CPU_] |1444| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1444| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1444| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1444| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1444| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("_sprintf")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1444| 
        ; call occurs [#_sprintf] ; [] |1444| 
        MOVL      XAR0,#44              ; [CPU_] |1444| 
	.dwpsn	file "../Source/prod.c",line 1445,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1445| 
	.dwpsn	file "../Source/prod.c",line 1444,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1444| 
	.dwpsn	file "../Source/prod.c",line 1445,column 5,is_stmt,isa 0
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1445| 
        ; call occurs [#_lcd_puts] ; [] |1445| 
	.dwpsn	file "../Source/prod.c",line 1447,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1447| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1447| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1447| 
        MOVL      XAR0,#38              ; [CPU_] |1447| 
        ADDB      ACC,#1                ; [CPU_] |1447| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1447| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1447| 
        CMPB      AL,#67                ; [CPU_] |1447| 
        B         $C$L621,EQ            ; [CPU_] |1447| 
        ; branchcc occurs ; [] |1447| 
        CMPB      AL,#68                ; [CPU_] |1447| 
        B         $C$L627,NEQ           ; [CPU_] |1447| 
        ; branchcc occurs ; [] |1447| 
	.dwpsn	file "../Source/prod.c",line 1500,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1500| 
        MOV       AH,#16672             ; [CPU_] |1500| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1500| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1500| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1500| 
        ; call occurs [#FS$$CMP] ; [] |1500| 
        CMPB      AL,#0                 ; [CPU_] |1500| 
        B         $C$L620,GT            ; [CPU_] |1500| 
        ; branchcc occurs ; [] |1500| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1500| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1500| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1500| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1500| 
        ; call occurs [#FS$$CMP] ; [] |1500| 
        CMPB      AL,#0                 ; [CPU_] |1500| 
        B         $C$L620,LT            ; [CPU_] |1500| 
        ; branchcc occurs ; [] |1500| 
        MOV       AL,#0                 ; [CPU_] |1500| 
        MOV       AH,#16672             ; [CPU_] |1500| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1500| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1500| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1500| 
        ; call occurs [#FS$$CMP] ; [] |1500| 
        CMPB      AL,#0                 ; [CPU_] |1500| 
        B         $C$L620,GT            ; [CPU_] |1500| 
        ; branchcc occurs ; [] |1500| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1500| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1500| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1500| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1500| 
        ; call occurs [#FS$$CMP] ; [] |1500| 
        CMPB      AL,#0                 ; [CPU_] |1500| 
        B         $C$L620,LT            ; [CPU_] |1500| 
        ; branchcc occurs ; [] |1500| 
	.dwpsn	file "../Source/prod.c",line 1508,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1508| 
        MOVB      AL,#0                 ; [CPU_] |1508| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1508| 
        ; call occurs [#_lcd_puts] ; [] |1508| 
	.dwpsn	file "../Source/prod.c",line 1510,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1510| 
        MOVL      XAR0,#44              ; [CPU_] |1510| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1510| 
        MOV       *-SP[3],AR1           ; [CPU_] |1510| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1510| 
        MOVL      XAR4,XAR1             ; [CPU_] |1510| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_sprintf")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1510| 
        ; call occurs [#_sprintf] ; [] |1510| 
        MOVL      XAR4,XAR1             ; [CPU_] |1510| 
	.dwpsn	file "../Source/prod.c",line 1513,column 6,is_stmt,isa 0
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1513| 
        ; call occurs [#_scia_puts] ; [] |1513| 
	.dwpsn	file "../Source/prod.c",line 1514,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1514| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1514| 
        ; call occurs [#_scia_puts] ; [] |1514| 
	.dwpsn	file "../Source/prod.c",line 1515,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1515| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1515| 
        ; call occurs [#_dac_setmode] ; [] |1515| 
        MOVL      XAR0,#94              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[63],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L599:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1518,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1518| 
	.dwpsn	file "../Source/prod.c",line 1519,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1519| 
        MOV       AH,#0                 ; [CPU_] |1519| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1519| 
        MOVL      ACC,XAR1              ; [CPU_] |1519| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1519| 
        ; call occurs [#FS$$CMP] ; [] |1519| 
        CMPB      AL,#0                 ; [CPU_] |1519| 
        B         $C$L600,GEQ           ; [CPU_] |1519| 
        ; branchcc occurs ; [] |1519| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1519| 
        MOVL      XAR0,#88              ; [CPU_] |1519| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1519| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1519| 
        B         $C$L601,UNC           ; [CPU_] |1519| 
        ; branch occurs ; [] |1519| 
$C$L600:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1519| 
        MOVL      XAR0,#88              ; [CPU_] |1519| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1519| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1519| 
$C$L601:    
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1519| 
        ; call occurs [#FS$$MPY] ; [] |1519| 
        MOVL      XAR0,#88              ; [CPU_] |1519| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1519| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1519| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1519| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1519| 
        ; call occurs [#FS$$ADD] ; [] |1519| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1519| 
        ; call occurs [#FS$$TOLL] ; [] |1519| 
	.dwpsn	file "../Source/prod.c",line 1525,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1525| 
	.dwpsn	file "../Source/prod.c",line 1519,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1519| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1519| 
	.dwpsn	file "../Source/prod.c",line 1525,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1525| 
        CMP64     ACC:P                 ; [CPU_] |1525| 
        B         $C$L603,LEQ           ; [CPU_] |1525| 
        ; branchcc occurs ; [] |1525| 
	.dwpsn	file "../Source/prod.c",line 1527,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1527| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1527| 
        MOV       *-SP[2],#0            ; [CPU_] |1527| 
        MOV       *-SP[1],#0            ; [CPU_] |1527| 
        MOVL      P,*-SP[32]            ; [CPU_] |1527| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1527| 
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1325, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1527| 
        ; call occurs [#LL$$CMP] ; [] |1527| 
        CMPB      AL,#0                 ; [CPU_] |1527| 
        B         $C$L602,GEQ           ; [CPU_] |1527| 
        ; branchcc occurs ; [] |1527| 
	.dwpsn	file "../Source/prod.c",line 1530,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1530| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1530| 
        MOV       AL,*-SP[32]           ; [CPU_] |1530| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1530| 
        B         $C$L604,UNC           ; [CPU_] |1530| 
        ; branch occurs ; [] |1530| 
$C$L602:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1528,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1528| 
	.dwpsn	file "../Source/prod.c",line 1529,column 7,is_stmt,isa 0
        B         $C$L604,UNC           ; [CPU_] |1529| 
        ; branch occurs ; [] |1529| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1526,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1526| 
$C$L604:    
	.dwpsn	file "../Source/prod.c",line 1533,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1533| 
        MOVL      XAR0,#44              ; [CPU_] |1533| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1533| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1533| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1533| 
        MOVL      XAR4,XAR1             ; [CPU_] |1533| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_sprintf")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1533| 
        ; call occurs [#_sprintf] ; [] |1533| 
        MOVL      XAR4,XAR1             ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1534,column 7,is_stmt,isa 0
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1534| 
        ; call occurs [#_scia_puts] ; [] |1534| 
	.dwpsn	file "../Source/prod.c",line 1535,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1535| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1535| 
$C$L605:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1538,column 8,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1538| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |1538| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1538| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1538| 
        ; call occurs [#_mcbsp_xmit] ; [] |1538| 
	.dwpsn	file "../Source/prod.c",line 1539,column 8,is_stmt,isa 0
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1539| 
        ; call occurs [#_latch_dac] ; [] |1539| 
	.dwpsn	file "../Source/prod.c",line 1542,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1542| 
        MOVL      XAR4,XAR1             ; [CPU_] |1542| 
        MOVL      XAR5,XAR1             ; [CPU_] |1542| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1542| 
        ; call occurs [#_scia_getparam] ; [] |1542| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1544,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1544| 
        CMPB      AL,#45                ; [CPU_] |1544| 
        B         $C$L606,EQ            ; [CPU_] |1544| 
        ; branchcc occurs ; [] |1544| 
        CMPB      AL,#83                ; [CPU_] |1544| 
        B         $C$L611,EQ            ; [CPU_] |1544| 
        ; branchcc occurs ; [] |1544| 
$C$L606:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1551,column 8,is_stmt,isa 0
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_atoi")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1551| 
        ; call occurs [#_atoi] ; [] |1551| 
        CMPB      AL,#0                 ; [CPU_] |1551| 
	.dwpsn	file "../Source/prod.c",line 1553,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1553| 
	.dwpsn	file "../Source/prod.c",line 1556,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1556| 
        CMPB      AH,#43                ; [CPU_] |1556| 
        B         $C$L607,EQ            ; [CPU_] |1556| 
        ; branchcc occurs ; [] |1556| 
	.dwpsn	file "../Source/prod.c",line 1563,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1563| 
        B         $C$L610,NEQ           ; [CPU_] |1563| 
        ; branchcc occurs ; [] |1563| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1565,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1565| 
        B         $C$L608,HI            ; [CPU_] |1565| 
        ; branchcc occurs ; [] |1565| 
	.dwpsn	file "../Source/prod.c",line 1566,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1566| 
	.dwpsn	file "../Source/prod.c",line 1567,column 9,is_stmt,isa 0
        B         $C$L610,UNC           ; [CPU_] |1567| 
        ; branch occurs ; [] |1567| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1558,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1558| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1558| 
        MOV       AH,#65535             ; [CPU_] |1558| 
        SUB       AH,AL                 ; [CPU_] |1558| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1558| 
        B         $C$L609,HIS           ; [CPU_] |1558| 
        ; branchcc occurs ; [] |1558| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1561,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1561| 
        B         $C$L610,UNC           ; [CPU_] |1561| 
        ; branch occurs ; [] |1561| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1559,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1559| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1537,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1537| 
        B         $C$L605,NEQ           ; [CPU_] |1537| 
        ; branchcc occurs ; [] |1537| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1573,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1573| 
        MOVL      XAR0,#86              ; [CPU_] |1573| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1573| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1573| 
        MOVL      XAR0,#86              ; [CPU_] |1573| 
        MOV       AL,*XAR7              ; [CPU_] |1573| 
        MOV       *-SP[3],AL            ; [CPU_] |1573| 
        ADDB      XAR7,#1               ; [CPU_] |1573| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1573| 
        MOVL      XAR0,#44              ; [CPU_] |1573| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1573| 
        MOVL      XAR4,XAR1             ; [CPU_] |1573| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_sprintf")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1573| 
        ; call occurs [#_sprintf] ; [] |1573| 
        MOVL      XAR4,XAR1             ; [CPU_] |1573| 
	.dwpsn	file "../Source/prod.c",line 1574,column 7,is_stmt,isa 0
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1574| 
        ; call occurs [#_scia_puts] ; [] |1574| 
	.dwpsn	file "../Source/prod.c",line 1517,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[63]          ; [CPU_] |1517| 
	.dwpsn	file "../Source/prod.c",line 1574,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1574| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1574| 
	.dwpsn	file "../Source/prod.c",line 1517,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1517| 
        SUBB      XAR6,#1               ; [CPU_U] |1517| 
        ADDB      ACC,#2                ; [CPU_] |1517| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1517| 
        MOVZ      AR0,AR6               ; [CPU_] |1517| 
        MOV       *-SP[63],AR6          ; [CPU_] |1517| 
        CMP       AR0,#-1               ; [CPU_] |1517| 
        B         $C$L599,NEQ           ; [CPU_] |1517| 
        ; branchcc occurs ; [] |1517| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1577,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1577| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1577| 
        ; call occurs [#FS$$TOU] ; [] |1577| 
        MOV       *-SP[33],AL           ; [CPU_] |1577| 
	.dwpsn	file "../Source/prod.c",line 1579,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1579| 
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1579| 
        ; call occurs [#_scia_puts] ; [] |1579| 
	.dwpsn	file "../Source/prod.c",line 1580,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1580| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1580| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1580| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1580| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1583,column 7,is_stmt,isa 0
        MOVL      XAR0,#104             ; [CPU_] |1583| 
        MOV       AL,*-SP[33]           ; [CPU_] |1583| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |1583| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1583| 
        ; call occurs [#_mcbsp_xmit] ; [] |1583| 
	.dwpsn	file "../Source/prod.c",line 1584,column 7,is_stmt,isa 0
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1584| 
        ; call occurs [#_latch_dac] ; [] |1584| 
        MOVL      XAR0,#86              ; [CPU_] |1584| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1584| 
	.dwpsn	file "../Source/prod.c",line 1587,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1587| 
        MOVL      XAR4,XAR5             ; [CPU_] |1587| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1587| 
        ; call occurs [#_scia_getparam] ; [] |1587| 
	.dwpsn	file "../Source/prod.c",line 1592,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1592| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1592| 
        CMPB      AL,#83                ; [CPU_] |1592| 
        B         $C$L617,EQ            ; [CPU_] |1592| 
        ; branchcc occurs ; [] |1592| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1595,column 7,is_stmt,isa 0
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_atoi")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1595| 
        ; call occurs [#_atoi] ; [] |1595| 
        CMPB      AL,#0                 ; [CPU_] |1595| 
	.dwpsn	file "../Source/prod.c",line 1600,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1600| 
	.dwpsn	file "../Source/prod.c",line 1597,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1597| 
	.dwpsn	file "../Source/prod.c",line 1600,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1600| 
        CMPB      AH,#43                ; [CPU_] |1600| 
        B         $C$L613,EQ            ; [CPU_] |1600| 
        ; branchcc occurs ; [] |1600| 
	.dwpsn	file "../Source/prod.c",line 1607,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1607| 
        B         $C$L616,NEQ           ; [CPU_] |1607| 
        ; branchcc occurs ; [] |1607| 
	.dwpsn	file "../Source/prod.c",line 1609,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1609| 
        B         $C$L614,HI            ; [CPU_] |1609| 
        ; branchcc occurs ; [] |1609| 
	.dwpsn	file "../Source/prod.c",line 1610,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1610| 
	.dwpsn	file "../Source/prod.c",line 1611,column 8,is_stmt,isa 0
        B         $C$L616,UNC           ; [CPU_] |1611| 
        ; branch occurs ; [] |1611| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1602,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1602| 
        SUB       AH,AL                 ; [CPU_] |1602| 
        CMP       AH,*-SP[33]           ; [CPU_] |1602| 
        B         $C$L615,HIS           ; [CPU_] |1602| 
        ; branchcc occurs ; [] |1602| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1605,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1605| 
        B         $C$L616,UNC           ; [CPU_] |1605| 
        ; branch occurs ; [] |1605| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1603,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1603| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1582,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1582| 
        B         $C$L612,NEQ           ; [CPU_] |1582| 
        ; branchcc occurs ; [] |1582| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1617,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1617| 
        MOV       AL,*-SP[33]           ; [CPU_] |1617| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1617| 
        MOV       *-SP[3],AL            ; [CPU_] |1617| 
        MOVL      XAR4,XAR1             ; [CPU_] |1617| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("_sprintf")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1617| 
        ; call occurs [#_sprintf] ; [] |1617| 
        MOVL      XAR4,XAR1             ; [CPU_] |1617| 
	.dwpsn	file "../Source/prod.c",line 1618,column 6,is_stmt,isa 0
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1618| 
        ; call occurs [#_scia_puts] ; [] |1618| 
	.dwpsn	file "../Source/prod.c",line 1621,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1621| 
        MOV       AH,#0                 ; [CPU_] |1621| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1621| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1621| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1621| 
        ; call occurs [#FS$$CMP] ; [] |1621| 
        CMPB      AL,#0                 ; [CPU_] |1621| 
        B         $C$L618,LT            ; [CPU_] |1621| 
        ; branchcc occurs ; [] |1621| 
	.dwpsn	file "../Source/prod.c",line 1627,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1627| 
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1627| 
        ; call occurs [#U$$TOFS] ; [] |1627| 
        MOVL      XAR1,ACC              ; [CPU_] |1627| 
        MOV       AL,*-SP[35]           ; [CPU_] |1627| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1627| 
        ; call occurs [#U$$TOFS] ; [] |1627| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1627| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1627| 
        ; call occurs [#FS$$SUB] ; [] |1627| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1627| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1627| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1627| 
        ; call occurs [#FS$$DIV] ; [] |1627| 
        MOVL      XAR0,#88              ; [CPU_] |1627| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1627| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1627| 
	.dwpsn	file "../Source/prod.c",line 1629,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1629| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1629| 
        ; call occurs [#U$$TOFS] ; [] |1629| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1629| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1629| 
        ; call occurs [#FS$$SUB] ; [] |1629| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1629| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1629| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1629| 
        ; call occurs [#FS$$DIV] ; [] |1629| 
        MOVL      XAR0,#88              ; [CPU_] |1629| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1629| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1629| 
        B         $C$L619,UNC           ; [CPU_] |1629| 
        ; branch occurs ; [] |1629| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1622,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1622| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1622| 
        ; call occurs [#U$$TOFS] ; [] |1622| 
        MOVL      XAR1,ACC              ; [CPU_] |1622| 
        MOV       AL,*-SP[35]           ; [CPU_] |1622| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1622| 
        ; call occurs [#U$$TOFS] ; [] |1622| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1622| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1622| 
        ; call occurs [#FS$$SUB] ; [] |1622| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1622| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1622| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1622| 
        ; call occurs [#FS$$DIV] ; [] |1622| 
        MOVL      XAR0,#88              ; [CPU_] |1622| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1622| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1622| 
	.dwpsn	file "../Source/prod.c",line 1624,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1624| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1624| 
        ; call occurs [#U$$TOFS] ; [] |1624| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1624| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1624| 
        ; call occurs [#FS$$SUB] ; [] |1624| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1624| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1624| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1624| 
        ; call occurs [#FS$$DIV] ; [] |1624| 
        MOVL      XAR0,#88              ; [CPU_] |1624| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1624| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1624| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1632,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1632| 
	.dwpsn	file "../Source/prod.c",line 1634,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1634| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1634| 
        ; call occurs [#_dac_setmode] ; [] |1634| 
	.dwpsn	file "../Source/prod.c",line 1636,column 6,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |1636| 
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1636| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1636| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1636| 
        MOVL      XAR0,#88              ; [CPU_] |1636| 
        MOV       *-SP[3],AL            ; [CPU_] |1636| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1636| 
        MOVL      XAR0,#44              ; [CPU_] |1636| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1636| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1636| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1636| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1636| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1636| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1636| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1636| 
        MOVL      XAR4,XAR1             ; [CPU_] |1636| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_sprintf")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1636| 
        ; call occurs [#_sprintf] ; [] |1636| 
        MOVL      XAR4,XAR1             ; [CPU_] |1636| 
	.dwpsn	file "../Source/prod.c",line 1640,column 6,is_stmt,isa 0
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1640| 
        ; call occurs [#_scia_puts] ; [] |1640| 
	.dwpsn	file "../Source/prod.c",line 1642,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1642| 
	.dwpsn	file "../Source/prod.c",line 1643,column 6,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1643| 
        ; branch occurs ; [] |1643| 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1502,column 7,is_stmt,isa 0
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1502| 
        ; call occurs [#_lcd_clear] ; [] |1502| 
	.dwpsn	file "../Source/prod.c",line 1503,column 7,is_stmt,isa 0
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_update_units")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1503| 
        ; call occurs [#_update_units] ; [] |1503| 
	.dwpsn	file "../Source/prod.c",line 1504,column 7,is_stmt,isa 0
        B         $C$L627,UNC           ; [CPU_] |1504| 
        ; branch occurs ; [] |1504| 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1452,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1452| 
        MOVB      AL,#0                 ; [CPU_] |1452| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1452| 
        ; call occurs [#_lcd_puts] ; [] |1452| 
	.dwpsn	file "../Source/prod.c",line 1454,column 6,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |1454| 
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1454| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1454| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1454| 
        MOVL      XAR0,#44              ; [CPU_] |1454| 
        MOV       *-SP[3],AL            ; [CPU_] |1454| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1454| 
        MOVL      XAR4,XAR1             ; [CPU_] |1454| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_sprintf")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1454| 
        ; call occurs [#_sprintf] ; [] |1454| 
        MOVL      XAR4,XAR1             ; [CPU_] |1454| 
	.dwpsn	file "../Source/prod.c",line 1457,column 6,is_stmt,isa 0
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1457| 
        ; call occurs [#_scia_puts] ; [] |1457| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[63],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1470,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1470| 
        MOVL      XAR0,#42              ; [CPU_] |1470| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1470| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1470| 
        MOVL      XAR0,#44              ; [CPU_] |1470| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1470| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1470| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1470| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_sprintf")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1470| 
        ; call occurs [#_sprintf] ; [] |1470| 
        MOVL      XAR0,#44              ; [CPU_] |1470| 
	.dwpsn	file "../Source/prod.c",line 1473,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1473| 
	.dwpsn	file "../Source/prod.c",line 1470,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1470| 
	.dwpsn	file "../Source/prod.c",line 1473,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1473| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1473| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1473| 
        ; call occurs [#_scia_getparam] ; [] |1473| 
	.dwpsn	file "../Source/prod.c",line 1474,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1474| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1474| 
        ; call occurs [#_scia_puts] ; [] |1474| 
	.dwpsn	file "../Source/prod.c",line 1477,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1477| 
	.dwpsn	file "../Source/prod.c",line 1476,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1476| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1476| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1476| 
	.dwpsn	file "../Source/prod.c",line 1478,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1478| 
	.dwpsn	file "../Source/prod.c",line 1477,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1477| 
	.dwpsn	file "../Source/prod.c",line 1478,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1478| 
        MOVB      ACC,#0                ; [CPU_] |1478| 
        SUBB      ACC,#1                ; [CPU_] |1478| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1478| 
        B         $C$L624,EQ            ; [CPU_] |1478| 
        ; branchcc occurs ; [] |1478| 
        MOVL      XAR0,#94              ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L623:    
	.dwpsn	file "../Source/prod.c",line 1479,column 15,is_stmt,isa 0
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1479| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1479| 
        CMPB      AL,#0                 ; [CPU_] |1479| 
        B         $C$L626,EQ            ; [CPU_] |1479| 
        ; branchcc occurs ; [] |1479| 
	.dwpsn	file "../Source/prod.c",line 1482,column 8,is_stmt,isa 0
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1482| 
        ; call occurs [#_ad7738_getraw] ; [] |1482| 
	.dwpsn	file "../Source/prod.c",line 1483,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1483| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1483| 
        ADDL      XAR4,ACC              ; [CPU_] |1483| 
        MOVL      XAR0,#10              ; [CPU_] |1483| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1483| 
        MOVL      XAR0,#10              ; [CPU_] |1483| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1483| 
        ASR64     ACC:P,16              ; [CPU_] |1483| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1483| 
        MOVL      XAR0,#10              ; [CPU_] |1483| 
        ASR64     ACC:P,16              ; [CPU_] |1483| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1483| 
        MOVL      XAR0,#10              ; [CPU_] |1483| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1483| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1483| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1483| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1483| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1483| 
	.dwpsn	file "../Source/prod.c",line 1478,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1478| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1478| 
        MOVB      ACC,#0                ; [CPU_] |1478| 
        SUBB      ACC,#1                ; [CPU_] |1478| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1478| 
        B         $C$L623,NEQ           ; [CPU_] |1478| 
        ; branchcc occurs ; [] |1478| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1486,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1486| 
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1486| 
        ; call occurs [#_scia_puts] ; [] |1486| 
	.dwpsn	file "../Source/prod.c",line 1469,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[63]          ; [CPU_] |1469| 
        MOVL      XAR0,#42              ; [CPU_] |1469| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1469| 
        MOVL      XAR0,#42              ; [CPU_] |1469| 
        SUBB      XAR6,#1               ; [CPU_U] |1469| 
        ADDB      ACC,#2                ; [CPU_] |1469| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1469| 
        MOVZ      AR0,AR6               ; [CPU_] |1469| 
        MOV       *-SP[63],AR6          ; [CPU_] |1469| 
        ADDB      XAR1,#4               ; [CPU_] |1469| 
        CMP       AR0,#-1               ; [CPU_] |1469| 
        B         $C$L622,NEQ           ; [CPU_] |1469| 
        ; branchcc occurs ; [] |1469| 
	.dwpsn	file "../Source/prod.c",line 1489,column 6,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1489| 
        MOV       T,*+FP[AR0]           ; [CPU_] |1489| 
        MOVL      XAR0,#40              ; [CPU_] |1489| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1489| 
        MOVB      AL,#10                ; [CPU_] |1489| 
        MPYU      ACC,T,AL              ; [CPU_] |1489| 
        ADDL      ACC,XAR6              ; [CPU_] |1489| 
        MOVL      XAR1,ACC              ; [CPU_] |1489| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1489| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1489| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1489| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1489| 
        ; call occurs [#FS$$SUB] ; [] |1489| 
        MOVL      XAR6,ACC              ; [CPU_] |1489| 
        MOV       AL,#16384             ; [CPU_] |1489| 
        MOV       AH,#17948             ; [CPU_] |1489| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1489| 
        MOVL      ACC,XAR6              ; [CPU_] |1489| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1489| 
        ; call occurs [#FS$$MPY] ; [] |1489| 
        MOVL      XAR0,#88              ; [CPU_] |1489| 
        MOVL      P,*-SP[28]            ; [CPU_] |1489| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1489| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1489| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1489| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1489| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1489| 
        ; call occurs [#LL$$TOFS] ; [] |1489| 
        MOVL      XAR0,#88              ; [CPU_] |1489| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1489| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1489| 
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1489| 
        ; call occurs [#FS$$DIV] ; [] |1489| 
        MOVB      XAR0,#44              ; [CPU_] |1489| 
	.dwpsn	file "../Source/prod.c",line 1492,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1492| 
	.dwpsn	file "../Source/prod.c",line 1489,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1489| 
	.dwpsn	file "../Source/prod.c",line 1492,column 6,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |1492| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1492| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |1492| 
        MOVB      XAR0,#44              ; [CPU_] |1492| 
        MOV       *-SP[3],AL            ; [CPU_] |1492| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1492| 
        MOVL      XAR0,#44              ; [CPU_] |1492| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1492| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1492| 
        MOVL      XAR4,XAR1             ; [CPU_] |1492| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_sprintf")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1492| 
        ; call occurs [#_sprintf] ; [] |1492| 
        MOVL      XAR4,XAR1             ; [CPU_] |1492| 
	.dwpsn	file "../Source/prod.c",line 1494,column 6,is_stmt,isa 0
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1494| 
        ; call occurs [#_scia_puts] ; [] |1494| 
	.dwpsn	file "../Source/prod.c",line 1495,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1495| 
$C$L625:    
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1495| 
        ; call occurs [#_scia_puts] ; [] |1495| 
	.dwpsn	file "../Source/prod.c",line 1650,column 5,is_stmt,isa 0
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1650| 
        ; call occurs [#_lcd_clear] ; [] |1650| 
	.dwpsn	file "../Source/prod.c",line 1651,column 5,is_stmt,isa 0
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_update_units")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1651| 
        ; call occurs [#_update_units] ; [] |1651| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1654,column 5,is_stmt,isa 0
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1654| 
        ; call occurs [#_ad7738_setcal] ; [] |1654| 
        MOVL      XAR0,#78              ; [CPU_] |1654| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1654| 
	.dwpsn	file "../Source/prod.c",line 1655,column 5,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |1655| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |1655| 
        MOVL      XAR1,ACC              ; [CPU_] |1655| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1655| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1655| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1655| 
	.dwpsn	file "../Source/prod.c",line 1656,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1656| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1656| 
        ; call occurs [#_ad7738_resetvall] ; [] |1656| 
	.dwpsn	file "../Source/prod.c",line 1658,column 5,is_stmt,isa 0
        B         $C$L513,UNC           ; [CPU_] |1658| 
        ; branch occurs ; [] |1658| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 1480,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1480| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_delay_us")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1480| 
        ; call occurs [#_delay_us] ; [] |1480| 
	.dwpsn	file "../Source/prod.c",line 1479,column 15,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1479| 
        ; branch occurs ; [] |1479| 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3609,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3609| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3609| 
        ; call occurs [#_scia_puts] ; [] |3609| 
        MOVL      XAR0,#86              ; [CPU_] |3609| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3609| 
	.dwpsn	file "../Source/prod.c",line 3610,column 5,is_stmt,isa 0
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3610| 
        ; call occurs [#_scia_puts] ; [] |3610| 
	.dwpsn	file "../Source/prod.c",line 3611,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3611| 
	.dwpsn	file "../Source/prod.c",line 3612,column 5,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3612| 
        ; branch occurs ; [] |3612| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3570,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3570| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3570| 
        ; call occurs [#_scia_puts] ; [] |3570| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3574,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3574| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_delay_us")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3574| 
        ; call occurs [#_delay_us] ; [] |3574| 
	.dwpsn	file "../Source/prod.c",line 3572,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3572| 
        ; branchcc occurs ; [] |3572| 
	.dwpsn	file "../Source/prod.c",line 3577,column 5,is_stmt,isa 0
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_reboot")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3577| 
        ; call occurs [#_reboot] ; [] |3577| 
	.dwpsn	file "../Source/prod.c",line 3578,column 5,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3578| 
        ; branch occurs ; [] |3578| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3554,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3554| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3554| 
        ; call occurs [#_scia_puts] ; [] |3554| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L631:    
	.dwpsn	file "../Source/prod.c",line 3558,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3558| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_delay_us")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3558| 
        ; call occurs [#_delay_us] ; [] |3558| 
	.dwpsn	file "../Source/prod.c",line 3556,column 17,is_stmt,isa 0
        BANZ      $C$L631,AR3--         ; [CPU_] |3556| 
        ; branchcc occurs ; [] |3556| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3562,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3562| 
	.dwpsn	file "../Source/prod.c",line 3561,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3561| 
	.dwpsn	file "../Source/prod.c",line 3562,column 5,is_stmt,isa 0
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3562| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3562| 
	.dwpsn	file "../Source/prod.c",line 3566,column 5,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3566| 
        ; branch occurs ; [] |3566| 
$C$L632:    
	.dwpsn	file "../Source/prod.c",line 3465,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3465| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3465| 
        ; call occurs [#_scia_puts] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3467,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3467| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3467| 
        ; call occurs [#_scia_puts] ; [] |3467| 
	.dwpsn	file "../Source/prod.c",line 3468,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3468| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3468| 
        ; call occurs [#_scia_puts] ; [] |3468| 
	.dwpsn	file "../Source/prod.c",line 3470,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3470| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3470| 
        ; call occurs [#_scia_puts] ; [] |3470| 
	.dwpsn	file "../Source/prod.c",line 3471,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3471| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3471| 
        ; call occurs [#_scia_puts] ; [] |3471| 
	.dwpsn	file "../Source/prod.c",line 3472,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3472| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3472| 
        ; call occurs [#_scia_puts] ; [] |3472| 
	.dwpsn	file "../Source/prod.c",line 3473,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3473| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3473| 
        ; call occurs [#_scia_puts] ; [] |3473| 
	.dwpsn	file "../Source/prod.c",line 3475,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3475| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3475| 
        ; call occurs [#_scia_puts] ; [] |3475| 
	.dwpsn	file "../Source/prod.c",line 3476,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3476| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3476| 
        ; call occurs [#_scia_puts] ; [] |3476| 
	.dwpsn	file "../Source/prod.c",line 3477,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3477| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3477| 
        ; call occurs [#_scia_puts] ; [] |3477| 
	.dwpsn	file "../Source/prod.c",line 3478,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3478| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3478| 
        ; call occurs [#_scia_puts] ; [] |3478| 
	.dwpsn	file "../Source/prod.c",line 3479,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3479| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3479| 
        ; call occurs [#_scia_puts] ; [] |3479| 
	.dwpsn	file "../Source/prod.c",line 3480,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3480| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3480| 
        ; call occurs [#_scia_puts] ; [] |3480| 
	.dwpsn	file "../Source/prod.c",line 3481,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3481| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3481| 
        ; call occurs [#_scia_puts] ; [] |3481| 
	.dwpsn	file "../Source/prod.c",line 3483,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3483| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3483| 
        ; call occurs [#_scia_puts] ; [] |3483| 
	.dwpsn	file "../Source/prod.c",line 3485,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3485| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3485| 
        ; call occurs [#_scia_puts] ; [] |3485| 
	.dwpsn	file "../Source/prod.c",line 3487,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3487| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3487| 
        ; call occurs [#_scia_puts] ; [] |3487| 
	.dwpsn	file "../Source/prod.c",line 3489,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3489| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3489| 
        ; call occurs [#_scia_puts] ; [] |3489| 
	.dwpsn	file "../Source/prod.c",line 3490,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3490| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3490| 
        ; call occurs [#_scia_puts] ; [] |3490| 
	.dwpsn	file "../Source/prod.c",line 3491,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3491| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3491| 
        ; call occurs [#_scia_puts] ; [] |3491| 
	.dwpsn	file "../Source/prod.c",line 3492,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3492| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3492| 
        ; call occurs [#_scia_puts] ; [] |3492| 
	.dwpsn	file "../Source/prod.c",line 3494,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3494| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3494| 
        ; call occurs [#_scia_puts] ; [] |3494| 
	.dwpsn	file "../Source/prod.c",line 3495,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3495| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3495| 
        ; call occurs [#_scia_puts] ; [] |3495| 
	.dwpsn	file "../Source/prod.c",line 3496,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3496| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3496| 
        ; call occurs [#_scia_puts] ; [] |3496| 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3497| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3497| 
        ; call occurs [#_scia_puts] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3498,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3498| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3498| 
        ; call occurs [#_scia_puts] ; [] |3498| 
	.dwpsn	file "../Source/prod.c",line 3500,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3500| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3500| 
        ; call occurs [#_scia_puts] ; [] |3500| 
	.dwpsn	file "../Source/prod.c",line 3501,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3501| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3501| 
        ; call occurs [#_scia_puts] ; [] |3501| 
	.dwpsn	file "../Source/prod.c",line 3503,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3503| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3503| 
        ; call occurs [#_scia_puts] ; [] |3503| 
	.dwpsn	file "../Source/prod.c",line 3505,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3505| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3505| 
        ; call occurs [#_scia_puts] ; [] |3505| 
	.dwpsn	file "../Source/prod.c",line 3506,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3506| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3506| 
        ; call occurs [#_scia_puts] ; [] |3506| 
	.dwpsn	file "../Source/prod.c",line 3508,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3508| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3508| 
        ; call occurs [#_scia_puts] ; [] |3508| 
	.dwpsn	file "../Source/prod.c",line 3510,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3510| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3510| 
        ; call occurs [#_scia_puts] ; [] |3510| 
	.dwpsn	file "../Source/prod.c",line 3512,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3512| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3512| 
        ; call occurs [#_scia_puts] ; [] |3512| 
	.dwpsn	file "../Source/prod.c",line 3514,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3514| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3514| 
        ; call occurs [#_scia_puts] ; [] |3514| 
	.dwpsn	file "../Source/prod.c",line 3515,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3515| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3515| 
        ; call occurs [#_scia_puts] ; [] |3515| 
	.dwpsn	file "../Source/prod.c",line 3517,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3517| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3517| 
        ; call occurs [#_scia_puts] ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3518,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3518| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3518| 
        ; call occurs [#_scia_puts] ; [] |3518| 
	.dwpsn	file "../Source/prod.c",line 3519,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3519| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3519| 
        ; call occurs [#_scia_puts] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3520,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3520| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3520| 
        ; call occurs [#_scia_puts] ; [] |3520| 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3521| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3521| 
        ; call occurs [#_scia_puts] ; [] |3521| 
	.dwpsn	file "../Source/prod.c",line 3522,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3522| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3522| 
        ; call occurs [#_scia_puts] ; [] |3522| 
	.dwpsn	file "../Source/prod.c",line 3523,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3523| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3523| 
        ; call occurs [#_scia_puts] ; [] |3523| 
	.dwpsn	file "../Source/prod.c",line 3524,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3524| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3524| 
        ; call occurs [#_scia_puts] ; [] |3524| 
	.dwpsn	file "../Source/prod.c",line 3535,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3535| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3535| 
        ; call occurs [#_scia_puts] ; [] |3535| 
	.dwpsn	file "../Source/prod.c",line 3537,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3537| 
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3537| 
        ; call occurs [#_scia_puts] ; [] |3537| 
	.dwpsn	file "../Source/prod.c",line 3539,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3539| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3539| 
        ; call occurs [#_scia_puts] ; [] |3539| 
	.dwpsn	file "../Source/prod.c",line 3541,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3541| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3541| 
        ; call occurs [#_scia_puts] ; [] |3541| 
	.dwpsn	file "../Source/prod.c",line 3543,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3543| 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3543| 
        ; call occurs [#_scia_puts] ; [] |3543| 
	.dwpsn	file "../Source/prod.c",line 3548,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3548| 
$C$L633:    
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3548| 
        ; call occurs [#_scia_puts] ; [] |3548| 
$C$L634:    
        MOVL      XAR0,#104             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3616,column 4,is_stmt,isa 0
        B         $C$L636,EQ            ; [CPU_] |3616| 
        ; branchcc occurs ; [] |3616| 
$C$L635:    
	.dwpsn	file "../Source/prod.c",line 3617,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3617| 
        SPM       #0                    ; [CPU_] 
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3617| 
        ; call occurs [#_scia_puts] ; [] |3617| 
$C$L636:    
	.dwpsn	file "../Source/prod.c",line 641,column 3,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |641| 
        MOVZ      AR5,SP                ; [CPU_] |641| 
        SPM       #0                    ; [CPU_] 
        SUBB      XAR4,#54              ; [CPU_U] |641| 
        SUBB      XAR5,#62              ; [CPU_U] |641| 
        MOVZ      AR4,AR4               ; [CPU_] |641| 
        MOVZ      AR5,AR5               ; [CPU_] |641| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_SPICANReadBufs")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_SPICANReadBufs      ; [CPU_] |641| 
        ; call occurs [#_SPICANReadBufs] ; [] |641| 
	.dwpsn	file "../Source/prod.c",line 643,column 3,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |643| 
	.dwpsn	file "../Source/prod.c",line 641,column 3,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |641| 
	.dwpsn	file "../Source/prod.c",line 643,column 3,is_stmt,isa 0
        B         $C$L637,HI            ; [CPU_] |643| 
        ; branchcc occurs ; [] |643| 
	.dwpsn	file "../Source/prod.c",line 650,column 8,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |650| 
        B         $C$L639,EQ            ; [CPU_] |650| 
        ; branchcc occurs ; [] |650| 
	.dwpsn	file "../Source/prod.c",line 652,column 4,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |652| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |652| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |652| 
	.dwpsn	file "../Source/prod.c",line 653,column 4,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |653| 
        MOVB      AL,#163               ; [CPU_] |653| 
        SUBB      XAR4,#62              ; [CPU_U] |653| 
	.dwpsn	file "../Source/prod.c",line 655,column 4,is_stmt,isa 0
        B         $C$L638,UNC           ; [CPU_] |655| 
        ; branch occurs ; [] |655| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 645,column 4,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |645| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |645| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |645| 
	.dwpsn	file "../Source/prod.c",line 646,column 4,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |646| 
        MOVB      AL,#162               ; [CPU_] |646| 
        SUBB      XAR4,#54              ; [CPU_U] |646| 
$C$L638:    
        MOVB      AH,#8                 ; [CPU_] |646| 
        MOVZ      AR4,AR4               ; [CPU_] |646| 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |646| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |646| 
	.dwpsn	file "../Source/prod.c",line 647,column 4,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |647| 
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |647| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |647| 
	.dwpsn	file "../Source/prod.c",line 648,column 4,is_stmt,isa 0
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_SPICAN_T0_RTS       ; [CPU_] |648| 
        ; call occurs [#_SPICAN_T0_RTS] ; [] |648| 
$C$L639:    
	.dwpsn	file "../Source/prod.c",line 659,column 3,is_stmt,isa 0
        MOVB      AL,#45                ; [CPU_] |659| 
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |659| 
        ; call occurs [#_SPICANRead] ; [] |659| 
        MOV       *-SP[40],AL           ; [CPU_] |659| 
	.dwpsn	file "../Source/prod.c",line 662,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |662| 
        TBIT      AL,#4                 ; [CPU_] |662| 
        B         $C$L640,TC            ; [CPU_] |662| 
        ; branchcc occurs ; [] |662| 
	.dwpsn	file "../Source/prod.c",line 664,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |664| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |664| 
        ; call occurs [#_ad7738_resettare] ; [] |664| 
	.dwpsn	file "../Source/prod.c",line 665,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |665| 
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |665| 
        ; call occurs [#_ad7738_resetpeak] ; [] |665| 
	.dwpsn	file "../Source/prod.c",line 666,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |666| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |666| 
        ; call occurs [#_ad7738_resetvall] ; [] |666| 
$C$L640:    
	.dwpsn	file "../Source/prod.c",line 744,column 3,is_stmt,isa 0
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |744| 
        ; call occurs [#_ad7738_monrdy] ; [] |744| 
        CMPB      AL,#0                 ; [CPU_] |744| 
        B         $C$L665,EQ            ; [CPU_] |744| 
        ; branchcc occurs ; [] |744| 
	.dwpsn	file "../Source/prod.c",line 746,column 4,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |746| 
        ; call occurs [#_ad7738_monclr] ; [] |746| 
        MOVL      XAR0,#84              ; [CPU_] |746| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |746| 
	.dwpsn	file "../Source/prod.c",line 749,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |749| 
        CMPB      AL,#3                 ; [CPU_] |749| 
        B         $C$L641,GT            ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
        CMPB      AL,#3                 ; [CPU_] |749| 
        B         $C$L647,EQ            ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
        CMPB      AL,#0                 ; [CPU_] |749| 
        B         $C$L651,EQ            ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
        CMPB      AL,#1                 ; [CPU_] |749| 
        B         $C$L650,EQ            ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
        CMPB      AL,#2                 ; [CPU_] |749| 
        B         $C$L649,EQ            ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
        B         $C$L663,UNC           ; [CPU_] |749| 
        ; branch occurs ; [] |749| 
$C$L641:    
        CMPB      AL,#4                 ; [CPU_] |749| 
        B         $C$L646,EQ            ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
        CMPB      AL,#5                 ; [CPU_] |749| 
        B         $C$L642,EQ            ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
        CMPB      AL,#6                 ; [CPU_] |749| 
        B         $C$L663,NEQ           ; [CPU_] |749| 
        ; branchcc occurs ; [] |749| 
	.dwpsn	file "../Source/prod.c",line 804,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |804| 
        MOVL      XAR0,#46              ; [CPU_] |804| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |804| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |804| 
	.dwpsn	file "../Source/prod.c",line 805,column 5,is_stmt,isa 0
        B         $C$L661,UNC           ; [CPU_] |805| 
        ; branch occurs ; [] |805| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 799,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |799| 
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |799| 
        ; call occurs [#_ad7738_getlimitst] ; [] |799| 
	.dwpsn	file "../Source/prod.c",line 800,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |800| 
        B         $C$L644,NTC           ; [CPU_] |800| 
        ; branchcc occurs ; [] |800| 
        TBIT      AL,#0                 ; [CPU_] |800| 
        B         $C$L643,NTC           ; [CPU_] |800| 
        ; branchcc occurs ; [] |800| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |800| 
        B         $C$L645,UNC           ; [CPU_] |800| 
        ; branch occurs ; [] |800| 
$C$L643:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |800| 
        B         $C$L645,UNC           ; [CPU_] |800| 
        ; branch occurs ; [] |800| 
$C$L644:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |800| 
$C$L645:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |800| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |800| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |800| 
	.dwpsn	file "../Source/prod.c",line 802,column 5,is_stmt,isa 0
        B         $C$L662,UNC           ; [CPU_] |802| 
        ; branch occurs ; [] |802| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 771,column 5,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |771| 
        ; call occurs [#_ad7738_getmon] ; [] |771| 
        MOVL      XAR0,#84              ; [CPU_] |771| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |771| 
	.dwpsn	file "../Source/prod.c",line 773,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |773| 
        B         $C$L648,UNC           ; [CPU_] |773| 
        ; branch occurs ; [] |773| 
$C$L647:    
	.dwpsn	file "../Source/prod.c",line 766,column 5,is_stmt,isa 0
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |766| 
        ; call occurs [#_ad7738_getmon] ; [] |766| 
        MOVL      XAR0,#84              ; [CPU_] |766| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |766| 
	.dwpsn	file "../Source/prod.c",line 767,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |767| 
$C$L648:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |767| 
        ADDL      XAR4,ACC              ; [CPU_] |767| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |767| 
	.dwpsn	file "../Source/prod.c",line 768,column 5,is_stmt,isa 0
        B         $C$L653,UNC           ; [CPU_] |768| 
        ; branch occurs ; [] |768| 
$C$L649:    
	.dwpsn	file "../Source/prod.c",line 761,column 5,is_stmt,isa 0
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |761| 
        ; call occurs [#_ad7738_getvall] ; [] |761| 
	.dwpsn	file "../Source/prod.c",line 763,column 5,is_stmt,isa 0
        B         $C$L652,UNC           ; [CPU_] |763| 
        ; branch occurs ; [] |763| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 756,column 5,is_stmt,isa 0
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |756| 
        ; call occurs [#_ad7738_getpeak] ; [] |756| 
	.dwpsn	file "../Source/prod.c",line 758,column 5,is_stmt,isa 0
        B         $C$L652,UNC           ; [CPU_] |758| 
        ; branch occurs ; [] |758| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 751,column 5,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |751| 
        ; call occurs [#_ad7738_getmon] ; [] |751| 
$C$L652:    
        MOVL      XAR0,#84              ; [CPU_] |751| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |751| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 752,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |752| 
        ADDL      XAR4,ACC              ; [CPU_] |752| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |752| 
$C$L653:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |752| 
	.dwpsn	file "../Source/prod.c",line 776,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |776| 
        CMPB      AL,#3                 ; [CPU_] |776| 
        B         $C$L654,GT            ; [CPU_] |776| 
        ; branchcc occurs ; [] |776| 
        CMPB      AL,#3                 ; [CPU_] |776| 
        B         $C$L656,EQ            ; [CPU_] |776| 
        ; branchcc occurs ; [] |776| 
        CMPB      AL,#0                 ; [CPU_] |776| 
        B         $C$L659,EQ            ; [CPU_] |776| 
        ; branchcc occurs ; [] |776| 
        CMPB      AL,#1                 ; [CPU_] |776| 
        B         $C$L658,EQ            ; [CPU_] |776| 
        ; branchcc occurs ; [] |776| 
        CMPB      AL,#2                 ; [CPU_] |776| 
        B         $C$L657,EQ            ; [CPU_] |776| 
        ; branchcc occurs ; [] |776| 
        B         $C$L663,UNC           ; [CPU_] |776| 
        ; branch occurs ; [] |776| 
$C$L654:    
        CMPB      AL,#4                 ; [CPU_] |776| 
        B         $C$L655,EQ            ; [CPU_] |776| 
        ; branchcc occurs ; [] |776| 
        CMPB      AL,#5                 ; [CPU_] |776| 
        B         $C$L663,NEQ           ; [CPU_] |776| 
        ; branchcc occurs ; [] |776| 
	.dwpsn	file "../Source/prod.c",line 793,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |793| 
	.dwpsn	file "../Source/prod.c",line 794,column 6,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |794| 
        ; branch occurs ; [] |794| 
$C$L655:    
	.dwpsn	file "../Source/prod.c",line 790,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |790| 
	.dwpsn	file "../Source/prod.c",line 791,column 6,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |791| 
        ; branch occurs ; [] |791| 
$C$L656:    
	.dwpsn	file "../Source/prod.c",line 787,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |787| 
	.dwpsn	file "../Source/prod.c",line 788,column 6,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |788| 
        ; branch occurs ; [] |788| 
$C$L657:    
	.dwpsn	file "../Source/prod.c",line 784,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |784| 
	.dwpsn	file "../Source/prod.c",line 785,column 6,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |785| 
        ; branch occurs ; [] |785| 
$C$L658:    
	.dwpsn	file "../Source/prod.c",line 781,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |781| 
	.dwpsn	file "../Source/prod.c",line 782,column 6,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |782| 
        ; branch occurs ; [] |782| 
$C$L659:    
	.dwpsn	file "../Source/prod.c",line 778,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |778| 
$C$L660:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |778| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |778| 
$C$L661:    
        MOVL      *-SP[4],ACC           ; [CPU_] |778| 
$C$L662:    
        MOVL      XAR0,#44              ; [CPU_] |778| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |778| 
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_sprintf")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |778| 
        ; call occurs [#_sprintf] ; [] |778| 
$C$L663:    
        MOVL      XAR0,#97              ; [CPU_] 
        MOV       T,*+FP[AR0]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 809,column 4,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |809| 
        MOVL      XAR0,#44              ; [CPU_] |809| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |809| 
        ADDB      AL,#7                 ; [CPU_] |809| 
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |809| 
        ; call occurs [#_lcd_puts] ; [] |809| 
        MOVL      XAR0,#97              ; [CPU_] |809| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |809| 
	.dwpsn	file "../Source/prod.c",line 812,column 4,is_stmt,isa 0
        MOVL      XAR0,#97              ; [CPU_] |812| 
        ADDB      AL,#1                 ; [CPU_] |812| 
        MOV       *+FP[AR0],AL          ; [CPU_] |812| 
        CMPB      AL,#4                 ; [CPU_] |812| 
        B         $C$L664,HIS           ; [CPU_] |812| 
        ; branchcc occurs ; [] |812| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] |812| 
        ADDB      ACC,#3                ; [CPU_] |812| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |812| 
        B         $C$L665,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L664:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#84              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 813,column 5,is_stmt,isa 0
        MOVL      XAR0,#97              ; [CPU_] |813| 
        MOV       *+FP[AR0],#0          ; [CPU_] |813| 
$C$L665:    
	.dwpsn	file "../Source/prod.c",line 822,column 3,is_stmt,isa 0
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |822| 
        ; call occurs [#_ad7738_tempstart] ; [] |822| 
        CMPB      AL,#0                 ; [CPU_] |822| 
        B         $C$L666,NEQ           ; [CPU_] |822| 
        ; branchcc occurs ; [] |822| 
	.dwpsn	file "../Source/prod.c",line 827,column 8,is_stmt,isa 0
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |827| 
        ; call occurs [#_ad7738_tempread] ; [] |827| 
        CMPB      AL,#0                 ; [CPU_] |827| 
        B         $C$L667,EQ            ; [CPU_] |827| 
        ; branchcc occurs ; [] |827| 
	.dwpsn	file "../Source/prod.c",line 828,column 4,is_stmt,isa 0
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |828| 
        ; call occurs [#_ds1820read] ; [] |828| 
        MOVL      XAR0,#46              ; [CPU_] |828| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |828| 
	.dwpsn	file "../Source/prod.c",line 829,column 4,is_stmt,isa 0
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |829| 
        ; call occurs [#_ad7738_settemp] ; [] |829| 
        B         $C$L667,UNC           ; [CPU_] |829| 
        ; branch occurs ; [] |829| 
$C$L666:    
	.dwpsn	file "../Source/prod.c",line 823,column 4,is_stmt,isa 0
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |823| 
        ; call occurs [#_ds1820start] ; [] |823| 
$C$L667:    
	.dwpsn	file "../Source/prod.c",line 836,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |836| 
        MOVB      XAR0,#36              ; [CPU_] |836| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |836| 
        B         $C$L672,EQ            ; [CPU_] |836| 
        ; branchcc occurs ; [] |836| 
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |836| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |836| 
        CMPB      AL,#0                 ; [CPU_] |836| 
        B         $C$L672,EQ            ; [CPU_] |836| 
        ; branchcc occurs ; [] |836| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 837,column 4,is_stmt,isa 0
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |837| 
        ; call occurs [#_tagdetect] ; [] |837| 
        CMPB      AL,#0                 ; [CPU_] |837| 
        B         $C$L668,NEQ           ; [CPU_] |837| 
        ; branchcc occurs ; [] |837| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 860,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |860| 
        MOV       *+XAR4[0],#0          ; [CPU_] |860| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |860| 
	.dwpsn	file "../Source/prod.c",line 862,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |862| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |862| 
        MOVL      XAR4,ACC              ; [CPU_] |862| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |862| 
        B         $C$L670,EQ            ; [CPU_] |862| 
        ; branchcc occurs ; [] |862| 
	.dwpsn	file "../Source/prod.c",line 863,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |863| 
	.dwpsn	file "../Source/prod.c",line 864,column 6,is_stmt,isa 0
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |864| 
        ; call occurs [#_lcd_clear] ; [] |864| 
	.dwpsn	file "../Source/prod.c",line 865,column 6,is_stmt,isa 0
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_update_units")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |865| 
        ; call occurs [#_update_units] ; [] |865| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 866,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |866| 
        B         $C$L670,UNC           ; [CPU_] |866| 
        ; branch occurs ; [] |866| 
$C$L668:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 839,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |839| 
        B         $C$L669,NEQ           ; [CPU_] |839| 
        ; branchcc occurs ; [] |839| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 842,column 6,is_stmt,isa 0
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("_matchTag")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |842| 
        ; call occurs [#_matchTag] ; [] |842| 
        MOVL      XAR0,#80              ; [CPU_] |842| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |842| 
        MOVL      XAR0,#9               ; [CPU_] |842| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |842| 
	.dwpsn	file "../Source/prod.c",line 843,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |843| 
        B         $C$L669,EQ            ; [CPU_] |843| 
        ; branchcc occurs ; [] |843| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 846,column 7,is_stmt,isa 0
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |846| 
        ; call occurs [#_maf_rst] ; [] |846| 
	.dwpsn	file "../Source/prod.c",line 847,column 7,is_stmt,isa 0
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |847| 
        ; call occurs [#_ad7738_setcal] ; [] |847| 
        MOVL      XAR0,#78              ; [CPU_] |847| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |847| 
	.dwpsn	file "../Source/prod.c",line 848,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |848| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |848| 
        MOVL      XAR1,ACC              ; [CPU_] |848| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |848| 
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |848| 
        ; call occurs [#_ad7738_resetpeak] ; [] |848| 
	.dwpsn	file "../Source/prod.c",line 849,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |849| 
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |849| 
        ; call occurs [#_ad7738_resetvall] ; [] |849| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 852,column 7,is_stmt,isa 0
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |852| 
        ; call occurs [#_lcd_clear] ; [] |852| 
	.dwpsn	file "../Source/prod.c",line 853,column 7,is_stmt,isa 0
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_update_units")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |853| 
        ; call occurs [#_update_units] ; [] |853| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 854,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |854| 
$C$L669:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 857,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |857| 
$C$L670:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 871,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |871| 
        ADDB      AL,#1                 ; [CPU_] |871| 
        MOV       *+FP[AR0],AL          ; [CPU_] |871| 
        CMPB      AL,#4                 ; [CPU_] |871| 
        B         $C$L671,HIS           ; [CPU_] |871| 
        ; branchcc occurs ; [] |871| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |871| 
        ADDB      ACC,#1                ; [CPU_] |871| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |871| 
        B         $C$L672,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L671:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 872,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |872| 
        MOV       *+FP[AR0],#0          ; [CPU_] |872| 
$C$L672:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 880,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |880| 
        CMPB      AL,#1                 ; [CPU_] |880| 
        B         $C$L690,NEQ           ; [CPU_] |880| 
        ; branchcc occurs ; [] |880| 
        MOVL      XAR0,#98              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        B         $C$L690,EQ            ; [CPU_] |880| 
        ; branchcc occurs ; [] |880| 
	.dwpsn	file "../Source/prod.c",line 883,column 4,is_stmt,isa 0
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |883| 
        ; call occurs [#_prod_getavail] ; [] |883| 
        MOVL      XAR0,#101             ; [CPU_] |883| 
        MOV       T,*+FP[AR0]           ; [CPU_] |883| 
        MOVL      XAR6,ACC              ; [CPU_] |883| 
        MOVL      XAR0,#100             ; [CPU_] |883| 
        MPY       P,T,*+FP[AR0]         ; [CPU_] |883| 
        MOVU      ACC,PL                ; [CPU_] |883| 
        CMPL      ACC,XAR6              ; [CPU_] |883| 
        B         $C$L675,LOS           ; [CPU_] |883| 
        ; branchcc occurs ; [] |883| 
        MOVL      XAR0,#99              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        B         $C$L675,NEQ           ; [CPU_] |883| 
        ; branchcc occurs ; [] |883| 
	.dwpsn	file "../Source/prod.c",line 953,column 11,is_stmt,isa 0
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |953| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |953| 
        CMPB      AL,#0                 ; [CPU_] |953| 
        B         $C$L673,NEQ           ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 961,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |961| 
        B         $C$L690,EQ            ; [CPU_] |961| 
        ; branchcc occurs ; [] |961| 
	.dwpsn	file "../Source/prod.c",line 962,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |962| 
	.dwpsn	file "../Source/prod.c",line 965,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |965| 
	.dwpsn	file "../Source/prod.c",line 967,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |967| 
        MOVB      XAR0,#36              ; [CPU_] |967| 
	.dwpsn	file "../Source/prod.c",line 965,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |965| 
	.dwpsn	file "../Source/prod.c",line 966,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |966| 
	.dwpsn	file "../Source/prod.c",line 967,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |967| 
        MOVL      XAR0,#80              ; [CPU_] |967| 
        MOV       *+XAR4[2],AL          ; [CPU_] |967| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |967| 
	.dwpsn	file "../Source/prod.c",line 971,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |971| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 969,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |969| 
	.dwpsn	file "../Source/prod.c",line 971,column 5,is_stmt,isa 0
        B         $C$L689,UNC           ; [CPU_] |971| 
        ; branch occurs ; [] |971| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 955,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |955| 
        MOV       *+XAR4[0],#0          ; [CPU_] |955| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 957,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |957| 
	.dwpsn	file "../Source/prod.c",line 956,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |956| 
	.dwpsn	file "../Source/prod.c",line 957,column 10,is_stmt,isa 0
        MOV       *-SP[63],AL           ; [CPU_] |957| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 958,column 6,is_stmt,isa 0
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |958| 
        ; call occurs [#_ad7738_getlimitst] ; [] |958| 
        MOV       *XAR1++,AL            ; [CPU_] |958| 
	.dwpsn	file "../Source/prod.c",line 957,column 17,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |957| 
	.dwpsn	file "../Source/prod.c",line 958,column 6,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |958| 
	.dwpsn	file "../Source/prod.c",line 957,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |957| 
        B         $C$L674,LT            ; [CPU_] |957| 
        ; branchcc occurs ; [] |957| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 960,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |960| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 961,column 4,is_stmt,isa 0
        B         $C$L689,UNC           ; [CPU_] |961| 
        ; branch occurs ; [] |961| 
$C$L675:    
        MOVL      XAR0,#101             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 890,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |890| 
	.dwpsn	file "../Source/prod.c",line 888,column 5,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |888| 
        MOV       *+FP[AR0],AL          ; [CPU_] |888| 
	.dwpsn	file "../Source/prod.c",line 890,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |890| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |890| 
	.dwpsn	file "../Source/prod.c",line 896,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |896| 
	.dwpsn	file "../Source/prod.c",line 891,column 5,is_stmt,isa 0
        MOVL      XAR0,#100             ; [CPU_] |891| 
	.dwpsn	file "../Source/prod.c",line 890,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |890| 
	.dwpsn	file "../Source/prod.c",line 891,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |891| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |891| 
	.dwpsn	file "../Source/prod.c",line 894,column 5,is_stmt,isa 0
        MOVL      XAR0,#102             ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 892,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |892| 
	.dwpsn	file "../Source/prod.c",line 893,column 5,is_stmt,isa 0
        AND       AH,AL,#0x00ff         ; [CPU_] |893| 
	.dwpsn	file "../Source/prod.c",line 894,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 893,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |893| 
	.dwpsn	file "../Source/prod.c",line 894,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |894| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 895,column 5,is_stmt,isa 0
        MOVL      XAR0,#103             ; [CPU_] |895| 
        MOV       *+XAR4[5],AL          ; [CPU_] |895| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |895| 
	.dwpsn	file "../Source/prod.c",line 896,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |896| 
        MOVL      XAR0,#103             ; [CPU_] |896| 
        MOV       *+XAR4[6],AL          ; [CPU_] |896| 
        MOV       AL,AH                 ; [CPU_] |896| 
        ADDB      AL,#1                 ; [CPU_] |896| 
	.dwpsn	file "../Source/prod.c",line 887,column 5,is_stmt,isa 0
        MOV       *-SP[63],#0           ; [CPU_] |887| 
	.dwpsn	file "../Source/prod.c",line 896,column 5,is_stmt,isa 0
        MOV       *+FP[AR0],AL          ; [CPU_] |896| 
	.dwpsn	file "../Source/prod.c",line 898,column 5,is_stmt,isa 0
        B         $C$L686,UNC           ; [CPU_] |898| 
        ; branch occurs ; [] |898| 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 899,column 6,is_stmt,isa 0
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |899| 
        ; call occurs [#_prod_getnext] ; [] |899| 
        MOVL      XAR0,#93              ; [CPU_] |899| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |899| 
	.dwpsn	file "../Source/prod.c",line 901,column 7,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |901| 
        ADDB      AL,#-1                ; [CPU_] |901| 
        MOV       *+FP[AR0],AL          ; [CPU_] |901| 
        B         $C$L686,NEQ           ; [CPU_] |901| 
        ; branchcc occurs ; [] |901| 
        MOVL      XAR0,#101             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 907,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |907| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 903,column 6,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |903| 
        MOV       *+FP[AR0],AL          ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 906,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |906| 
        MOVL      XAR0,#94              ; [CPU_] |906| 
        MOV       *+FP[AR0],AL          ; [CPU_] |906| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 908,column 7,is_stmt,isa 0
        MOVL      XAR0,#102             ; [CPU_] |908| 
        AND       AL,*+FP[AR0]          ; [CPU_] |908| 
        B         $C$L679,EQ            ; [CPU_] |908| 
        ; branchcc occurs ; [] |908| 
	.dwpsn	file "../Source/prod.c",line 909,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |909| 
        MOVL      XAR0,#88              ; [CPU_] |909| 
        ADDL      ACC,XAR4              ; [CPU_] |909| 
        MOVL      XAR3,ACC              ; [CPU_] |909| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |909| 
	.dwpsn	file "../Source/prod.c",line 910,column 21,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |910| 
        MOV       *+FP[AR0],#2          ; [CPU_] |910| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 912,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |912| 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 911,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |911| 
        ANDB      AL,#0xff              ; [CPU_] |911| 
        MOV       *XAR5++,AL            ; [CPU_] |911| 
	.dwpsn	file "../Source/prod.c",line 912,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |912| 
        LSR       AL,8                  ; [CPU_] |912| 
        MOV       *XAR5++,AL            ; [CPU_] |912| 
	.dwpsn	file "../Source/prod.c",line 910,column 21,is_stmt,isa 0
        BANZ      $C$L678,AR0--         ; [CPU_] |910| 
        ; branchcc occurs ; [] |910| 
$C$L679:    
	.dwpsn	file "../Source/prod.c",line 907,column 18,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |907| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |907| 
        ADDB      XAR7,#1               ; [CPU_] |907| 
	.dwpsn	file "../Source/prod.c",line 916,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |916| 
        LSL       AL,1                  ; [CPU_] |916| 
        MOV       *+FP[AR0],AL          ; [CPU_] |916| 
	.dwpsn	file "../Source/prod.c",line 907,column 18,is_stmt,isa 0
        BANZ      $C$L677,AR6--         ; [CPU_] |907| 
        ; branchcc occurs ; [] |907| 
	.dwpsn	file "../Source/prod.c",line 919,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |919| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 920,column 7,is_stmt,isa 0
        MOVL      XAR0,#102             ; [CPU_] |920| 
        AND       AL,*+FP[AR0]          ; [CPU_] |920| 
        B         $C$L682,EQ            ; [CPU_] |920| 
        ; branchcc occurs ; [] |920| 
	.dwpsn	file "../Source/prod.c",line 921,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |921| 
        MOVL      XAR0,#88              ; [CPU_] |921| 
        ADDL      ACC,XAR4              ; [CPU_] |921| 
        ADDB      ACC,#8                ; [CPU_] |921| 
        MOVL      XAR3,ACC              ; [CPU_] |921| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |921| 
	.dwpsn	file "../Source/prod.c",line 922,column 21,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |922| 
        MOV       *+FP[AR0],#2          ; [CPU_] |922| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 924,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |924| 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L681:    
	.dwpsn	file "../Source/prod.c",line 923,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |923| 
        ANDB      AL,#0xff              ; [CPU_] |923| 
        MOV       *XAR5++,AL            ; [CPU_] |923| 
	.dwpsn	file "../Source/prod.c",line 924,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |924| 
        LSR       AL,8                  ; [CPU_] |924| 
        MOV       *XAR5++,AL            ; [CPU_] |924| 
	.dwpsn	file "../Source/prod.c",line 922,column 21,is_stmt,isa 0
        BANZ      $C$L681,AR0--         ; [CPU_] |922| 
        ; branchcc occurs ; [] |922| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 919,column 18,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |919| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |919| 
        ADDB      XAR7,#1               ; [CPU_] |919| 
	.dwpsn	file "../Source/prod.c",line 928,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |928| 
        LSL       AL,1                  ; [CPU_] |928| 
        MOV       *+FP[AR0],AL          ; [CPU_] |928| 
	.dwpsn	file "../Source/prod.c",line 919,column 18,is_stmt,isa 0
        BANZ      $C$L680,AR6--         ; [CPU_] |919| 
        ; branchcc occurs ; [] |919| 
	.dwpsn	file "../Source/prod.c",line 904,column 6,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |904| 
	.dwpsn	file "../Source/prod.c",line 931,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |931| 
        SETC      SXM                   ; [CPU_] 
$C$L683:    
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 932,column 7,is_stmt,isa 0
        MOVL      XAR0,#102             ; [CPU_] |932| 
        AND       AL,*+FP[AR0]          ; [CPU_] |932| 
        B         $C$L685,EQ            ; [CPU_] |932| 
        ; branchcc occurs ; [] |932| 
	.dwpsn	file "../Source/prod.c",line 933,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |933| 
        MOVL      XAR0,#88              ; [CPU_] |933| 
        ADDL      ACC,XAR4              ; [CPU_] |933| 
        ADDB      ACC,#12               ; [CPU_] |933| 
        MOVL      XAR6,ACC              ; [CPU_] |933| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |933| 
	.dwpsn	file "../Source/prod.c",line 934,column 21,is_stmt,isa 0
        MOVL      XAR0,#95              ; [CPU_] |934| 
        MOV       *+FP[AR0],#2          ; [CPU_] |934| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 936,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |936| 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 935,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |935| 
        ANDB      AL,#0xff              ; [CPU_] |935| 
        MOV       *XAR5++,AL            ; [CPU_] |935| 
	.dwpsn	file "../Source/prod.c",line 936,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |936| 
        LSR       AL,8                  ; [CPU_] |936| 
        MOV       *XAR5++,AL            ; [CPU_] |936| 
	.dwpsn	file "../Source/prod.c",line 934,column 21,is_stmt,isa 0
        BANZ      $C$L684,AR0--         ; [CPU_] |934| 
        ; branchcc occurs ; [] |934| 
$C$L685:    
        MOVL      XAR0,#94              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 931,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |931| 
	.dwpsn	file "../Source/prod.c",line 940,column 7,is_stmt,isa 0
        MOVL      XAR0,#94              ; [CPU_] |940| 
        LSL       AL,1                  ; [CPU_] |940| 
        MOV       *+FP[AR0],AL          ; [CPU_] |940| 
	.dwpsn	file "../Source/prod.c",line 931,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |931| 
        CMPB      AL,#2                 ; [CPU_] |931| 
        B         $C$L683,LT            ; [CPU_] |931| 
        ; branchcc occurs ; [] |931| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 898,column 12,is_stmt,isa 0
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |898| 
        ; call occurs [#_prod_getavail] ; [] |898| 
        TEST      ACC                   ; [CPU_] |898| 
        B         $C$L687,EQ            ; [CPU_] |898| 
        ; branchcc occurs ; [] |898| 
        MOVL      XAR0,#100             ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMP       AL,*-SP[63]           ; [CPU_] |898| 
        B         $C$L676,HI            ; [CPU_] |898| 
        ; branchcc occurs ; [] |898| 
$C$L687:    
	.dwpsn	file "../Source/prod.c",line 944,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |944| 
        MOV       AL,*-SP[63]           ; [CPU_] |944| 
        MOVL      XAR0,#99              ; [CPU_] |944| 
        MOV       *+XAR4[2],AL          ; [CPU_] |944| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |944| 
	.dwpsn	file "../Source/prod.c",line 946,column 5,is_stmt,isa 0
        B         $C$L688,EQ            ; [CPU_] |946| 
        ; branchcc occurs ; [] |946| 
	.dwpsn	file "../Source/prod.c",line 947,column 6,is_stmt,isa 0
        MOVL      XAR0,#98              ; [CPU_] |947| 
        MOV       *+FP[AR0],#0          ; [CPU_] |947| 
$C$L688:    
	.dwpsn	file "../Source/prod.c",line 950,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |950| 
$C$L689:    
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |950| 
        ; call occurs [#_scia_send_bin] ; [] |950| 
$C$L690:    
	.dwpsn	file "../Source/prod.c",line 985,column 4,is_stmt,isa 0
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |985| 
        ; call occurs [#_scia_rx_getcmds] ; [] |985| 
        CMPB      AL,#0                 ; [CPU_] |985| 
        B         $C$L636,EQ            ; [CPU_] |985| 
        ; branchcc occurs ; [] |985| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 991,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |991| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |991| 
        ; call occurs [#_scia_rx_getcmd] ; [] |991| 
        MOVL      XAR0,#93              ; [CPU_] |991| 
        CMPB      AL,#0                 ; [CPU_] |991| 
        MOV       *+FP[AR0],AL          ; [CPU_] |991| 
        B         $C$L636,EQ            ; [CPU_] |991| 
        ; branchcc occurs ; [] |991| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1008,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |1008| 
        B         $C$L324,EQ            ; [CPU_] |1008| 
        ; branchcc occurs ; [] |1008| 
	.dwpsn	file "../Source/prod.c",line 3621,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3621| 
        B         $C$L636,NEQ           ; [CPU_] |3621| 
        ; branchcc occurs ; [] |3621| 
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3621| 
        B         $C$L636,LO            ; [CPU_] |3621| 
        ; branchcc occurs ; [] |3621| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3647,column 4,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3647| 
	.dwpsn	file "../Source/prod.c",line 3644,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3644| 
	.dwpsn	file "../Source/prod.c",line 3647,column 4,is_stmt,isa 0
        MOV       *+FP[AR0],#2          ; [CPU_] |3647| 
	.dwpsn	file "../Source/prod.c",line 3648,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3648| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3648| 
	.dwpsn	file "../Source/prod.c",line 3655,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3655| 
	.dwpsn	file "../Source/prod.c",line 3648,column 4,is_stmt,isa 0
        MOV       *-SP[63],#1           ; [CPU_] |3648| 
	.dwpsn	file "../Source/prod.c",line 3655,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3655| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |3655| 
        CMPB      AL,#146               ; [CPU_] |3655| 
        B         $C$L698,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#146               ; [CPU_] |3655| 
        B         $C$L232,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#54                ; [CPU_] |3655| 
        B         $C$L694,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#54                ; [CPU_] |3655| 
        B         $C$L729,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#36                ; [CPU_] |3655| 
        B         $C$L692,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#36                ; [CPU_] |3655| 
        B         $C$L288,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#33                ; [CPU_] |3655| 
        B         $C$L691,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#33                ; [CPU_] |3655| 
        B         $C$L304,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#16                ; [CPU_] |3655| 
        B         $C$L745,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        MOV       AH,AL                 ; [CPU_] |3655| 
        ADDB      AH,#-17               ; [CPU_] |3655| 
        CMPB      AH,#1                 ; [CPU_] |3655| 
        B         $C$L744,LOS           ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#32                ; [CPU_] |3655| 
        B         $C$L740,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L691:    
        CMPB      AL,#34                ; [CPU_] |3655| 
        B         $C$L299,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#35                ; [CPU_] |3655| 
        B         $C$L296,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L692:    
        CMPB      AL,#51                ; [CPU_] |3655| 
        B         $C$L693,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#51                ; [CPU_] |3655| 
        B         $C$L734,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#48                ; [CPU_] |3655| 
        B         $C$L282,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#49                ; [CPU_] |3655| 
        B         $C$L257,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#50                ; [CPU_] |3655| 
        B         $C$L736,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L693:    
        CMPB      AL,#52                ; [CPU_] |3655| 
        B         $C$L732,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#53                ; [CPU_] |3655| 
        B         $C$L731,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L694:    
        CMPB      AL,#71                ; [CPU_] |3655| 
        B         $C$L696,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#71                ; [CPU_] |3655| 
        B         $C$L253,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#68                ; [CPU_] |3655| 
        B         $C$L695,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#65                ; [CPU_] |3655| 
        B         $C$L714,GEQ           ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#55                ; [CPU_] |3655| 
        B         $C$L722,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#56                ; [CPU_] |3655| 
        B         $C$L718,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#57                ; [CPU_] |3655| 
        B         $C$L716,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L695:    
        CMPB      AL,#69                ; [CPU_] |3655| 
        B         $C$L713,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#70                ; [CPU_] |3655| 
        B         $C$L706,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L696:    
        CMPB      AL,#132               ; [CPU_] |3655| 
        B         $C$L697,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#132               ; [CPU_] |3655| 
        B         $C$L312,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#72                ; [CPU_] |3655| 
        B         $C$L246,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#130               ; [CPU_] |3655| 
        B         $C$L241,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#131               ; [CPU_] |3655| 
        B         $C$L313,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L697:    
        CMPB      AL,#144               ; [CPU_] |3655| 
        B         $C$L237,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#145               ; [CPU_] |3655| 
        B         $C$L236,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L698:    
        CMPB      AL,#169               ; [CPU_] |3655| 
        B         $C$L702,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#169               ; [CPU_] |3655| 
        B         $C$L168,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#161               ; [CPU_] |3655| 
        B         $C$L700,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#161               ; [CPU_] |3655| 
        B         $C$L195,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#150               ; [CPU_] |3655| 
        B         $C$L699,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#150               ; [CPU_] |3655| 
        B         $C$L225,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#147               ; [CPU_] |3655| 
        B         $C$L231,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#148               ; [CPU_] |3655| 
        B         $C$L230,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#149               ; [CPU_] |3655| 
        B         $C$L229,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L699:    
        CMPB      AL,#153               ; [CPU_] |3655| 
        B         $C$L216,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#160               ; [CPU_] |3655| 
        B         $C$L211,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L700:    
        CMPB      AL,#166               ; [CPU_] |3655| 
        B         $C$L701,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#166               ; [CPU_] |3655| 
        B         $C$L182,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#162               ; [CPU_] |3655| 
        B         $C$L190,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#163               ; [CPU_] |3655| 
        B         $C$L186,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#165               ; [CPU_] |3655| 
        B         $C$L184,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L701:    
        CMPB      AL,#167               ; [CPU_] |3655| 
        B         $C$L179,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#168               ; [CPU_] |3655| 
        B         $C$L177,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L702:    
        CMPB      AL,#195               ; [CPU_] |3655| 
        B         $C$L704,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#195               ; [CPU_] |3655| 
        B         $C$L143,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#192               ; [CPU_] |3655| 
        B         $C$L703,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#192               ; [CPU_] |3655| 
        B         $C$L160,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#170               ; [CPU_] |3655| 
        B         $C$L164,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#186               ; [CPU_] |3655| 
        B         $C$L310,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#187               ; [CPU_] |3655| 
        B         $C$L309,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L703:    
        CMPB      AL,#193               ; [CPU_] |3655| 
        B         $C$L153,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#194               ; [CPU_] |3655| 
        B         $C$L150,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L704:    
        CMPB      AL,#210               ; [CPU_] |3655| 
        B         $C$L705,GT            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#210               ; [CPU_] |3655| 
        B         $C$L79,EQ             ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#196               ; [CPU_] |3655| 
        B         $C$L115,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#197               ; [CPU_] |3655| 
        B         $C$L91,EQ             ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#198               ; [CPU_] |3655| 
        B         $C$L80,EQ             ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L705:    
        CMPB      AL,#211               ; [CPU_] |3655| 
        B         $C$L308,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        CMPB      AL,#240               ; [CPU_] |3655| 
        B         $C$L307,EQ            ; [CPU_] |3655| 
        ; branchcc occurs ; [] |3655| 
        B         $C$L319,UNC           ; [CPU_] |3655| 
        ; branch occurs ; [] |3655| 
$C$L706:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4319,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4319| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4319| 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4321,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4321| 
        ANDB      AL,#0xff              ; [CPU_] |4321| 
        MOV       *XAR1++,AL            ; [CPU_] |4321| 
	.dwpsn	file "../Source/prod.c",line 4322,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4322| 
        LSR       AL,8                  ; [CPU_] |4322| 
        MOV       *XAR1++,AL            ; [CPU_] |4322| 
	.dwpsn	file "../Source/prod.c",line 4320,column 17,is_stmt,isa 0
        BANZ      $C$L707,AR6--         ; [CPU_] |4320| 
        ; branchcc occurs ; [] |4320| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       *-SP[63],#3           ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4322,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4322| 
        ADDB      AL,#8                 ; [CPU_] |4322| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4322| 
$C$L708:    
	.dwpsn	file "../Source/prod.c",line 4328,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4328| 
        MOV       AH,#0                 ; [CPU_] |4328| 
        MOVL      XAR0,#88              ; [CPU_] |4328| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4328| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4328| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4328| 
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4328| 
        ; call occurs [#FS$$CMP] ; [] |4328| 
        CMPB      AL,#0                 ; [CPU_] |4328| 
        B         $C$L709,NEQ           ; [CPU_] |4328| 
        ; branchcc occurs ; [] |4328| 
	.dwpsn	file "../Source/prod.c",line 4327,column 6,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4327| 
        MOV       *+FP[AR0],#128        ; [CPU_] |4327| 
        B         $C$L710,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4329,column 7,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4329| 
        MOV       *+FP[AR0],#129        ; [CPU_] |4329| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4331,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4331| 
        MOV       AH,#0                 ; [CPU_] |4331| 
        MOVL      XAR0,#88              ; [CPU_] |4331| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4331| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4331| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4331| 
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4331| 
        ; call occurs [#FS$$CMP] ; [] |4331| 
        CMPB      AL,#0                 ; [CPU_] |4331| 
        B         $C$L711,EQ            ; [CPU_] |4331| 
        ; branchcc occurs ; [] |4331| 
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4332,column 7,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4332| 
        ORB       AL,#0x02              ; [CPU_] |4332| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4332| 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4334,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4334| 
        MOVL      XAR0,#88              ; [CPU_] |4334| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4334| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4334| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4334| 
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4334| 
        ; call occurs [#FS$$CMP] ; [] |4334| 
        CMPB      AL,#0                 ; [CPU_] |4334| 
        B         $C$L712,EQ            ; [CPU_] |4334| 
        ; branchcc occurs ; [] |4334| 
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4335,column 7,is_stmt,isa 0
        MOVL      XAR0,#93              ; [CPU_] |4335| 
        ORB       AL,#0x04              ; [CPU_] |4335| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4335| 
$C$L712:    
        MOVL      XAR0,#93              ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4337,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4337| 
        MOV       *XAR1++,AL            ; [CPU_] |4337| 
	.dwpsn	file "../Source/prod.c",line 4326,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[63]          ; [CPU_] |4326| 
	.dwpsn	file "../Source/prod.c",line 4337,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4337| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4337| 
	.dwpsn	file "../Source/prod.c",line 4326,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4326| 
        SUBB      XAR6,#1               ; [CPU_U] |4326| 
        ADDB      ACC,#10               ; [CPU_] |4326| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4326| 
        MOVZ      AR0,AR6               ; [CPU_] |4326| 
        MOV       *-SP[63],AR6          ; [CPU_] |4326| 
        CMP       AR0,#-1               ; [CPU_] |4326| 
        B         $C$L708,NEQ           ; [CPU_] |4326| 
        ; branchcc occurs ; [] |4326| 
        B         $C$L747,UNC           ; [CPU_] |4326| 
        ; branch occurs ; [] |4326| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4312,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4312| 
        MOV       AH,#16672             ; [CPU_] |4312| 
        MOVL      XAR0,#46              ; [CPU_] |4312| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4312| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4312| 
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4312| 
        ; call occurs [#FS$$MPY] ; [] |4312| 
$C$DW$1491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1491, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4312| 
        ; call occurs [#FS$$TOU] ; [] |4312| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4312| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4312| 
	.dwpsn	file "../Source/prod.c",line 4313,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4313| 
	.dwpsn	file "../Source/prod.c",line 4312,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4312| 
	.dwpsn	file "../Source/prod.c",line 4313,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4313| 
	.dwpsn	file "../Source/prod.c",line 4315,column 5,is_stmt,isa 0
        B         $C$L185,UNC           ; [CPU_] |4315| 
        ; branch occurs ; [] |4315| 
$C$L714:    
	.dwpsn	file "../Source/prod.c",line 4294,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4294| 
        MOV       AH,#16672             ; [CPU_] |4294| 
        MOVL      XAR0,#46              ; [CPU_] |4294| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4294| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4294| 
$C$DW$1492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1492, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4294| 
        ; call occurs [#FS$$MPY] ; [] |4294| 
$C$DW$1493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1493, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1493, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4294| 
        ; call occurs [#FS$$TOU] ; [] |4294| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4294| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4294| 
	.dwpsn	file "../Source/prod.c",line 4295,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4294,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4294| 
	.dwpsn	file "../Source/prod.c",line 4295,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4297,column 5,is_stmt,isa 0
$C$DW$1494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1494, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1494, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4297| 
        ; call occurs [#_ad7738_getmon] ; [] |4297| 
	.dwpsn	file "../Source/prod.c",line 4298,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4298| 
        MOV       AH,#18371             ; [CPU_] |4298| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4298| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4298| 
        ADDL      ACC,XAR4              ; [CPU_] |4298| 
        SUBB      ACC,#130              ; [CPU_] |4298| 
        MOVL      XAR4,ACC              ; [CPU_] |4298| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4298| 
$C$DW$1495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1495, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1495, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4298| 
        ; call occurs [#FS$$MPY] ; [] |4298| 
$C$DW$1496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1496, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1496, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4298| 
        ; call occurs [#FS$$TOL] ; [] |4298| 
	.dwpsn	file "../Source/prod.c",line 4299,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4299| 
	.dwpsn	file "../Source/prod.c",line 4298,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4298| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4298| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4298| 
	.dwpsn	file "../Source/prod.c",line 4299,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4299| 
	.dwpsn	file "../Source/prod.c",line 4302,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4302| 
	.dwpsn	file "../Source/prod.c",line 4299,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4299| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4302,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],#8          ; [CPU_] |4302| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4301,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4301| 
        ANDB      AL,#0xff              ; [CPU_] |4301| 
        MOV       *XAR4++,AL            ; [CPU_] |4301| 
	.dwpsn	file "../Source/prod.c",line 4302,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4302| 
        LSR       AL,8                  ; [CPU_] |4302| 
        MOV       *XAR4++,AL            ; [CPU_] |4302| 
	.dwpsn	file "../Source/prod.c",line 4300,column 17,is_stmt,isa 0
        BANZ      $C$L715,AR6--         ; [CPU_] |4300| 
        ; branchcc occurs ; [] |4300| 
        B         $C$L747,UNC           ; [CPU_] |4300| 
        ; branch occurs ; [] |4300| 
$C$L716:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4281,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4281| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      AL,#4                 ; [CPU_] |4281| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4280,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4280| 
        MOV       *-SP[63],AL           ; [CPU_] |4280| 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4281,column 6,is_stmt,isa 0
$C$DW$1497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1497, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1497, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4281| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4281| 
        MOV       *XAR1++,AL            ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4280,column 17,is_stmt,isa 0
        INC       *-SP[63]              ; [CPU_] |4280| 
	.dwpsn	file "../Source/prod.c",line 4281,column 6,is_stmt,isa 0
        MOV       AL,*-SP[63]           ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4280,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4280| 
        B         $C$L717,LT            ; [CPU_] |4280| 
        ; branchcc occurs ; [] |4280| 
        B         $C$L747,UNC           ; [CPU_] |4280| 
        ; branch occurs ; [] |4280| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4258,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4258| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4258| 
        MOVL      XAR7,ACC              ; [CPU_] |4258| 
        MOV       AL,*+XAR7[0]          ; [CPU_] |4258| 
        MOV       *XAR4++,AL            ; [CPU_] |4258| 
	.dwpsn	file "../Source/prod.c",line 4259,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4259| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4259| 
        MOVL      XAR7,ACC              ; [CPU_] |4259| 
        MOV       AL,*+XAR7[0]          ; [CPU_] |4259| 
        MOV       *XAR4++,AL            ; [CPU_] |4259| 
	.dwpsn	file "../Source/prod.c",line 4260,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4260| 
        ADD       ACC,#199 << 4         ; [CPU_] |4260| 
        MOVL      XAR7,ACC              ; [CPU_] |4260| 
        MOV       AL,*+XAR7[0]          ; [CPU_] |4260| 
	.dwpsn	file "../Source/prod.c",line 4262,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4262| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4260,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4260| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4264,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4264| 
        ANDB      AL,#0xff              ; [CPU_] |4264| 
        MOV       *XAR4++,AL            ; [CPU_] |4264| 
	.dwpsn	file "../Source/prod.c",line 4265,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4265| 
        LSR       AL,8                  ; [CPU_] |4265| 
        MOV       *XAR4++,AL            ; [CPU_] |4265| 
	.dwpsn	file "../Source/prod.c",line 4263,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR0--         ; [CPU_] |4263| 
        ; branchcc occurs ; [] |4263| 
	.dwpsn	file "../Source/prod.c",line 4268,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR6             ; [CPU_] |4268| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4270,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4270| 
        ANDB      AL,#0xff              ; [CPU_] |4270| 
        MOV       *XAR4++,AL            ; [CPU_] |4270| 
	.dwpsn	file "../Source/prod.c",line 4271,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4271| 
        LSR       AL,8                  ; [CPU_] |4271| 
        MOV       *XAR4++,AL            ; [CPU_] |4271| 
	.dwpsn	file "../Source/prod.c",line 4269,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4269| 
        ; branchcc occurs ; [] |4269| 
	.dwpsn	file "../Source/prod.c",line 4257,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4257| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4259,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4259| 
        ADDB      AL,#11                ; [CPU_] |4259| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4259| 
        MOVZ      AR0,AR3               ; [CPU_] |4259| 
	.dwpsn	file "../Source/prod.c",line 4257,column 17,is_stmt,isa 0
        ADDB      XAR6,#8               ; [CPU_] |4257| 
        ADDB      XAR1,#8               ; [CPU_] |4257| 
        ADDB      XAR5,#8               ; [CPU_] |4257| 
        SUBB      XAR0,#1               ; [CPU_U] |4257| 
        MOVZ      AR3,AR0               ; [CPU_] |4257| 
        CMP       AR0,#-1               ; [CPU_] |4257| 
        B         $C$L719,NEQ           ; [CPU_] |4257| 
        ; branchcc occurs ; [] |4257| 
        B         $C$L747,UNC           ; [CPU_] |4257| 
        ; branch occurs ; [] |4257| 
$C$L722:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       *-SP[63],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4204,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4204| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4204| 
        MOVL      XAR6,ACC              ; [CPU_] |4204| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4204| 
        MOV       *XAR4++,AL            ; [CPU_] |4204| 
	.dwpsn	file "../Source/prod.c",line 4205,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4205| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4205| 
        MOVL      XAR6,ACC              ; [CPU_] |4205| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4205| 
	.dwpsn	file "../Source/prod.c",line 4209,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4209| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4205,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4205| 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4216,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4216| 
        ANDB      AL,#0xff              ; [CPU_] |4216| 
        MOV       *XAR4++,AL            ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4217,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4217| 
        LSR       AL,8                  ; [CPU_] |4217| 
        MOV       *XAR4++,AL            ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4215,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4215| 
        ; branchcc occurs ; [] |4215| 
	.dwpsn	file "../Source/prod.c",line 4222,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4222| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L725:    
	.dwpsn	file "../Source/prod.c",line 4229,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4229| 
        ANDB      AL,#0xff              ; [CPU_] |4229| 
        MOV       *XAR4++,AL            ; [CPU_] |4229| 
	.dwpsn	file "../Source/prod.c",line 4230,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4230| 
        LSR       AL,8                  ; [CPU_] |4230| 
        MOV       *XAR4++,AL            ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4228,column 18,is_stmt,isa 0
        BANZ      $C$L725,AR0--         ; [CPU_] |4228| 
        ; branchcc occurs ; [] |4228| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4235,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4235| 
        ANDB      AL,#0xff              ; [CPU_] |4235| 
        MOV       *XAR4++,AL            ; [CPU_] |4235| 
	.dwpsn	file "../Source/prod.c",line 4236,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4236| 
        LSR       AL,8                  ; [CPU_] |4236| 
        MOV       *XAR4++,AL            ; [CPU_] |4236| 
	.dwpsn	file "../Source/prod.c",line 4234,column 18,is_stmt,isa 0
        BANZ      $C$L726,AR0--         ; [CPU_] |4234| 
        ; branchcc occurs ; [] |4234| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4241,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4241| 
        ANDB      AL,#0xff              ; [CPU_] |4241| 
        MOV       *XAR4++,AL            ; [CPU_] |4241| 
	.dwpsn	file "../Source/prod.c",line 4242,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4242| 
        LSR       AL,8                  ; [CPU_] |4242| 
        MOV       *XAR4++,AL            ; [CPU_] |4242| 
	.dwpsn	file "../Source/prod.c",line 4240,column 18,is_stmt,isa 0
        BANZ      $C$L727,AR0--         ; [CPU_] |4240| 
        ; branchcc occurs ; [] |4240| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4247,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4247| 
        ANDB      AL,#0xff              ; [CPU_] |4247| 
        MOV       *XAR4++,AL            ; [CPU_] |4247| 
	.dwpsn	file "../Source/prod.c",line 4248,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4248| 
        LSR       AL,8                  ; [CPU_] |4248| 
        MOV       *XAR4++,AL            ; [CPU_] |4248| 
	.dwpsn	file "../Source/prod.c",line 4246,column 18,is_stmt,isa 0
        BANZ      $C$L728,AR0--         ; [CPU_] |4246| 
        ; branchcc occurs ; [] |4246| 
	.dwpsn	file "../Source/prod.c",line 4203,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4203| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4203| 
        MOVL      XAR0,#88              ; [CPU_] |4203| 
        ADDB      ACC,#12               ; [CPU_] |4203| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4203| 
        MOVL      ACC,XT                ; [CPU_] |4203| 
        MOVL      XAR0,#91              ; [CPU_] |4203| 
        ADDB      ACC,#12               ; [CPU_] |4203| 
        MOVL      XT,ACC                ; [CPU_] |4203| 
        MOVL      ACC,P                 ; [CPU_] |4203| 
        ADDB      ACC,#12               ; [CPU_] |4203| 
        MOVL      P,ACC                 ; [CPU_] |4203| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4203| 
	.dwpsn	file "../Source/prod.c",line 4205,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4205| 
        ADDB      AL,#22                ; [CPU_] |4205| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4205| 
        MOVZ      AR0,*-SP[63]          ; [CPU_] |4205| 
	.dwpsn	file "../Source/prod.c",line 4203,column 17,is_stmt,isa 0
        ADDB      XAR7,#12              ; [CPU_] |4203| 
        ADDB      XAR1,#12              ; [CPU_] |4203| 
        ADDB      XAR5,#12              ; [CPU_] |4203| 
        SUBB      XAR0,#1               ; [CPU_U] |4203| 
        MOV       *-SP[63],AR0          ; [CPU_] |4203| 
        CMP       AR0,#-1               ; [CPU_] |4203| 
        B         $C$L723,NEQ           ; [CPU_] |4203| 
        ; branchcc occurs ; [] |4203| 
        B         $C$L747,UNC           ; [CPU_] |4203| 
        ; branch occurs ; [] |4203| 
$C$L729:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4196,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4196| 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      AL,#12                ; [CPU_] |4196| 
        MOVB      XAR6,#3               ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4196| 
$C$L730:    
	.dwpsn	file "../Source/prod.c",line 4194,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4194| 
        MOV       *XAR4++,AL            ; [CPU_] |4194| 
	.dwpsn	file "../Source/prod.c",line 4195,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4195| 
        MOV       *XAR4++,AL            ; [CPU_] |4195| 
	.dwpsn	file "../Source/prod.c",line 4196,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4196| 
	.dwpsn	file "../Source/prod.c",line 4193,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4193| 
	.dwpsn	file "../Source/prod.c",line 4196,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4196| 
	.dwpsn	file "../Source/prod.c",line 4193,column 17,is_stmt,isa 0
        BANZ      $C$L730,AR6--         ; [CPU_] |4193| 
        ; branchcc occurs ; [] |4193| 
        B         $C$L747,UNC           ; [CPU_] |4193| 
        ; branch occurs ; [] |4193| 
$C$L731:    
	.dwpsn	file "../Source/prod.c",line 4184,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4184| 
        MOVB      XAR0,#36              ; [CPU_] |4184| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4184| 
        MOVL      XAR0,#80              ; [CPU_] |4184| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4184| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4184| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4184| 
	.dwpsn	file "../Source/prod.c",line 4186,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4186| 
        MOV       *+FP[AR0],#7          ; [CPU_] |4186| 
        NOP       ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4186| 
	.dwpsn	file "../Source/prod.c",line 4185,column 17,is_stmt,isa 0
        B         $C$L747,UNC           ; [CPU_] |4185| 
        ; branch occurs ; [] |4185| 
$C$L732:    
	.dwpsn	file "../Source/prod.c",line 4170,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4170| 
        MOVB      XAR0,#38              ; [CPU_] |4170| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4170| 
        MOVB      XAR6,#1               ; [CPU_] 
        AND       AH,AL,#0x00ff         ; [CPU_] |4170| 
	.dwpsn	file "../Source/prod.c",line 4171,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4171| 
	.dwpsn	file "../Source/prod.c",line 4170,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4170| 
	.dwpsn	file "../Source/prod.c",line 4171,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4171| 
	.dwpsn	file "../Source/prod.c",line 4170,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4170| 
	.dwpsn	file "../Source/prod.c",line 4171,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4171| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4171| 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4176| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOV       *+FP[AR0],#8          ; [CPU_] |4176| 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4175,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4175| 
        ANDB      AL,#0xff              ; [CPU_] |4175| 
        MOV       *XAR4++,AL            ; [CPU_] |4175| 
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4176| 
        LSR       AL,8                  ; [CPU_] |4176| 
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4174,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4174| 
        ; branchcc occurs ; [] |4174| 
        B         $C$L747,UNC           ; [CPU_] |4174| 
        ; branch occurs ; [] |4174| 
$C$L734:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        MOVZ      AR6,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4160,column 6,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4160| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR4,#42              ; [CPU_] 
        ADDB      AL,#4                 ; [CPU_] |4160| 
        MOVB      XAR6,#3               ; [CPU_] 
        MOV       *+FP[AR0],AL          ; [CPU_] |4160| 
$C$L735:    
        MOV       AL,*+XAR4[0]          ; [CPU_] |4160| 
	.dwpsn	file "../Source/prod.c",line 4159,column 17,is_stmt,isa 0
        ADDB      XAR4,#10              ; [CPU_] |4159| 
	.dwpsn	file "../Source/prod.c",line 4160,column 6,is_stmt,isa 0
        MOV       *XAR5++,AL            ; [CPU_] |4160| 
	.dwpsn	file "../Source/prod.c",line 4159,column 17,is_stmt,isa 0
        BANZ      $C$L735,AR6--         ; [CPU_] |4159| 
        ; branchcc occurs ; [] |4159| 
        B         $C$L747,UNC           ; [CPU_] |4159| 
        ; branch occurs ; [] |4159| 
$C$L736:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 4143,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4143| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 4145,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4145| 
        ANDB      AL,#0xff              ; [CPU_] |4145| 
        MOV       *XAR4++,AL            ; [CPU_] |4145| 
	.dwpsn	file "../Source/prod.c",line 4146,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4146| 
        LSR       AL,8                  ; [CPU_] |4146| 
        MOV       *XAR4++,AL            ; [CPU_] |4146| 
	.dwpsn	file "../Source/prod.c",line 4144,column 18,is_stmt,isa 0
        BANZ      $C$L738,AR0--         ; [CPU_] |4144| 
        ; branchcc occurs ; [] |4144| 
	.dwpsn	file "../Source/prod.c",line 4142,column 17,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4142| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4142| 
        ADDB      XAR5,#2               ; [CPU_] |4142| 
	.dwpsn	file "../Source/prod.c",line 4146,column 7,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |4146| 
        ADDB      AL,#4                 ; [CPU_] |4146| 
        MOV       *+FP[AR0],AL          ; [CPU_] |4146| 
	.dwpsn	file "../Source/prod.c",line 4142,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |4142| 
        ; branchcc occurs ; [] |4142| 
	.dwpsn	file "../Source/prod.c",line 4151,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4151| 
        MOVL      ACC,XAR5              ; [CPU_] |4151| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4151| 
        MOVL      XAR6,ACC              ; [CPU_] |4151| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4151| 
        ANDB      AL,#0xff              ; [CPU_] |4151| 
        MOV       *XAR4++,AL            ; [CPU_] |4151| 
	.dwpsn	file "../Source/prod.c",line 4152,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4152| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4152| 
        MOVL      XAR5,ACC              ; [CPU_] |4152| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4152| 
        LSR       AL,8                  ; [CPU_] |4152| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4152| 
$C$L739:    
        MOVL      XAR0,#91              ; [CPU_] |4152| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |4152| 
        ADDB      AL,#2                 ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4155,column 5,is_stmt,isa 0
        B         $C$L306,UNC           ; [CPU_] |4155| 
        ; branch occurs ; [] |4155| 
$C$L740:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3797,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3797| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#91              ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3797| 
        MOVZ      AR4,AR4               ; [CPU_] |3797| 
        ADD       ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3799,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3799| 
        ANDB      AL,#0xff              ; [CPU_] |3799| 
        MOV       *XAR1++,AL            ; [CPU_] |3799| 
	.dwpsn	file "../Source/prod.c",line 3800,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3800| 
        LSR       AL,8                  ; [CPU_] |3800| 
        MOV       *XAR1++,AL            ; [CPU_] |3800| 
	.dwpsn	file "../Source/prod.c",line 3798,column 17,is_stmt,isa 0
        BANZ      $C$L741,AR6--         ; [CPU_] |3798| 
        ; branchcc occurs ; [] |3798| 
	.dwpsn	file "../Source/prod.c",line 3804,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3804| 
        ANDB      AL,#0xff              ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3805,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3805| 
	.dwpsn	file "../Source/prod.c",line 3804,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3804| 
	.dwpsn	file "../Source/prod.c",line 3805,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3805| 
        LSR       AL,8                  ; [CPU_] |3805| 
        MOV       *XAR1++,AL            ; [CPU_] |3805| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3805| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L742:    
	.dwpsn	file "../Source/prod.c",line 3809,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3809| 
        ANDB      AL,#0xff              ; [CPU_] |3809| 
        MOV       *XAR1++,AL            ; [CPU_] |3809| 
	.dwpsn	file "../Source/prod.c",line 3810,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3810| 
        LSR       AL,8                  ; [CPU_] |3810| 
        MOV       *XAR1++,AL            ; [CPU_] |3810| 
	.dwpsn	file "../Source/prod.c",line 3808,column 17,is_stmt,isa 0
        BANZ      $C$L742,AR6--         ; [CPU_] |3808| 
        ; branchcc occurs ; [] |3808| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3814,column 5,is_stmt,isa 0
$C$DW$1498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1498, DW_AT_name("_strlen")
	.dwattr $C$DW$1498, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3814| 
        ; call occurs [#_strlen] ; [] |3814| 
	.dwpsn	file "../Source/prod.c",line 3815,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |3815| 
        MOV       *+XAR1[0],AL          ; [CPU_] |3815| 
        MOV       AH,*+FP[AR0]          ; [CPU_] |3815| 
	.dwpsn	file "../Source/prod.c",line 3800,column 6,is_stmt,isa 0
        ADDB      AH,#11                ; [CPU_] |3800| 
        MOVL      XAR0,#91              ; [CPU_] |3800| 
	.dwpsn	file "../Source/prod.c",line 3816,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3816| 
	.dwpsn	file "../Source/prod.c",line 3800,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |3800| 
	.dwpsn	file "../Source/prod.c",line 3816,column 17,is_stmt,isa 0
        B         $C$L747,EQ            ; [CPU_] |3816| 
        ; branchcc occurs ; [] |3816| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3815,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3815| 
	.dwpsn	file "../Source/prod.c",line 3816,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3816| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L743:    
	.dwpsn	file "../Source/prod.c",line 3817,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3817| 
        MOVL      XAR0,#91              ; [CPU_] |3817| 
        MOV       *XAR1++,AH            ; [CPU_] |3817| 
	.dwpsn	file "../Source/prod.c",line 3816,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3816| 
	.dwpsn	file "../Source/prod.c",line 3817,column 6,is_stmt,isa 0
        MOV       AH,*+FP[AR0]          ; [CPU_] |3817| 
        ADDB      AH,#1                 ; [CPU_] |3817| 
        MOVL      XAR0,#91              ; [CPU_] |3817| 
	.dwpsn	file "../Source/prod.c",line 3816,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3816| 
	.dwpsn	file "../Source/prod.c",line 3817,column 6,is_stmt,isa 0
        MOV       *+FP[AR0],AH          ; [CPU_] |3817| 
	.dwpsn	file "../Source/prod.c",line 3816,column 17,is_stmt,isa 0
        B         $C$L743,HI            ; [CPU_] |3816| 
        ; branchcc occurs ; [] |3816| 
        B         $C$L747,UNC           ; [CPU_] |3816| 
        ; branch occurs ; [] |3816| 
$C$L744:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3783,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3783| 
        MOVL      XAR0,#66              ; [CPU_] |3783| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3783| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3783| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3783| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3783| 
	.dwpsn	file "../Source/prod.c",line 3786,column 5,is_stmt,isa 0
        B         $C$L746,UNC           ; [CPU_] |3786| 
        ; branch occurs ; [] |3786| 
$C$L745:    
	.dwpsn	file "../Source/prod.c",line 3777,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3777| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3777| 
$C$L746:    
        MOVL      XAR0,#91              ; [CPU_] |3777| 
        MOV       *+FP[AR0],#3          ; [CPU_] |3777| 
$C$L747:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5768,column 5,is_stmt,isa 0
        MOVL      XAR0,#91              ; [CPU_] |5768| 
        MOV       AL,*+FP[AR0]          ; [CPU_] |5768| 
$C$DW$1499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1499, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1499, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5768| 
        ; call occurs [#_scia_send_bin] ; [] |5768| 
	.dwpsn	file "../Source/prod.c",line 5770,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5770| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5770| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5770| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5770| 
        CMPB      AL,#240               ; [CPU_] |5770| 
        B         $C$L636,NEQ           ; [CPU_] |5770| 
        ; branchcc occurs ; [] |5770| 
	.dwpsn	file "../Source/prod.c",line 5771,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5771| 
$C$DW$1500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1500, DW_AT_name("_delay_us")
	.dwattr $C$DW$1500, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5771| 
        ; call occurs [#_delay_us] ; [] |5771| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5772,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5772| 
$C$DW$1501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1501, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1501, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5772| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5772| 
        B         $C$L636,UNC           ; [CPU_] |5772| 
        ; branch occurs ; [] |5772| 
	.dwattr $C$DW$282, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$282, DW_AT_TI_end_line(0x16ab)
	.dwattr $C$DW$282, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$282

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1502	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1502, DW_AT_name("get_fattime")
	.dwattr $C$DW$1502, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1502, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1502, DW_AT_external
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1502, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1502, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1502, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1502, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1503, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1502, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1502, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1502, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1502

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec 18 2019",0
	.align	2
$C$FSL62:	.string	"08:17:32",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resetvall
	.global	_ad7738_resettare
	.global	_ad7738_monclr
	.global	_ad7738_resetpeak
	.global	_ad7738_settemp
	.global	_mcbsp_xmit
	.global	_ad7738_resetlimit
	.global	_ad7738_setcal
	.global	_SPICANWaitForTXBuf
	.global	_conf_default
	.global	_SPICANReadSetT0Message
	.global	_SPICAN_T0_RTS
	.global	_velf_rst
	.global	_dac_setmode
	.global	_ad7738_init
	.global	_maf_rst
	.global	_SPICANInit
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_latch_dac
	.global	_reboot
	.global	_delay_us
	.global	_lcd_init
	.global	_sys_init
	.global	_InitPieCtrl
	.global	_InitECan
	.global	_lcd_clear
	.global	_InitPieVectTable
	.global	_shunt_switch
	.global	_flash_init
	.global	_uart_set_dir
	.global	_ssr_set
	.global	_led_init
	.global	_led_set
	.global	_extio_init
	.global	_gpio_init
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_lcd_puts
	.global	_lcd_dputs
	.global	_secureRamFuncs_loadend
	.global	_Flash28_API_LoadStart
	.global	_port4004
	.global	_Flash28_API_RunStart
	.global	_secureRamFuncs_loadstart
	.global	_secureRamFuncs_runstart
	.global	_Flash28_API_LoadEnd
	.global	_port400e
	.global	_tagdetect
	.global	_sprintf
	.global	_scia_rx_getcmd
	.global	_ad7738_rawrdy
	.global	_SPICANReadBufs
	.global	_ad7738_monrdy
	.global	_scia_puts
	.global	_scia_rx_getcmds
	.global	_conf_read
	.global	_conf_write
	.global	_ad7738_tempstart
	.global	_ad7738_getlimitchgd
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_atoi
	.global	_SPICANRead
	.global	_scia_send_bin
	.global	_scia_getparam
	.global	_SPICANReadStat
	.global	_ad7738_getlimitst
	.global	_strtod
	.global	_atol
	.global	_ds1820read
	.global	_ad7738_getvall
	.global	_ad7738_getmon
	.global	_ad7738_getpeak
	.global	_ad7738_getraw
	.global	_prod_getavail
	.global	_prod_getnext
	.global	_Flash_CallbackPtr
	.global	_strlen
	.global	_Flash_CPUScaleFactor
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1504, DW_AT_name("fs_type")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1505, DW_AT_name("drv")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1506, DW_AT_name("csize")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1507, DW_AT_name("n_fats")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1508, DW_AT_name("wflag")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1509, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1510, DW_AT_name("id")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1511, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1512, DW_AT_name("last_clust")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1513, DW_AT_name("free_clust")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1514, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1515, DW_AT_name("cdir")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1516, DW_AT_name("n_fatent")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1517, DW_AT_name("fsize")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1518, DW_AT_name("fatbase")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1519, DW_AT_name("dirbase")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1520, DW_AT_name("database")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1521, DW_AT_name("winsect")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1522, DW_AT_name("win")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1523, DW_AT_name("fs")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1524, DW_AT_name("id")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1525, DW_AT_name("flag")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1526, DW_AT_name("pad1")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1527, DW_AT_name("fptr")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1528, DW_AT_name("fsize")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1529, DW_AT_name("org_clust")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1530, DW_AT_name("curr_clust")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1531, DW_AT_name("dsect")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1532, DW_AT_name("dir_sect")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1533, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1534, DW_AT_name("cltbl")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1535, DW_AT_name("buf")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1536, DW_AT_name("year")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1537, DW_AT_name("month")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1538, DW_AT_name("mday")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1539, DW_AT_name("wday")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1540, DW_AT_name("hour")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1541, DW_AT_name("min")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1542, DW_AT_name("sec")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1543, DW_AT_name("adc")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1544, DW_AT_name("adw")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1545, DW_AT_name("pos")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1546, DW_AT_name("vel")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1547, DW_AT_name("ci")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1548, DW_AT_name("bslope")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1549, DW_AT_name("tcx")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1550, DW_AT_name("tcy")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1551, DW_AT_name("tcz")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1552	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1552, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1553, DW_AT_name("what")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("ch")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1555, DW_AT_name("dslopep")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1556, DW_AT_name("dslopen")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1557, DW_AT_name("dint")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1558, DW_AT_name("gain")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1559, DW_AT_name("offset")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1560	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1560, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("what")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("ch")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("adec")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1564	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1564, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1574, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1574, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1575, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1575, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1575, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("all")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1582, DW_AT_name("bit")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("all")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1600, DW_AT_name("bit")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("all")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1618, DW_AT_name("bit")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("all")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1636, DW_AT_name("bit")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("all")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1654, DW_AT_name("bit")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("all")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1672, DW_AT_name("bit")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("all")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1690, DW_AT_name("bit")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("all")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1708, DW_AT_name("bit")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("rsvd1")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("rsvd2")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("all")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1716, DW_AT_name("bit")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("rsvd1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("rsvd2")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("all")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1724, DW_AT_name("bit")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("rsvd1")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("rsvd2")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("all")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1732, DW_AT_name("bit")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("rsvd1")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("rsvd2")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("all")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1740, DW_AT_name("bit")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1741, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1741, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("rsvd1")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("all")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1746, DW_AT_name("bit")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("rsvd1")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("all")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1752, DW_AT_name("bit")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("rsvd1")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1756, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1756, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("all")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1758, DW_AT_name("bit")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("rsvd1")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("all")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1764, DW_AT_name("bit")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("all")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1782, DW_AT_name("bit")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("all")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1800, DW_AT_name("bit")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("all")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1818, DW_AT_name("bit")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1824, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1824, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1825, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1825, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1825, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1826, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1826, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1831, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1831, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("all")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1836, DW_AT_name("bit")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("rsvd1")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1837, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1837, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1838, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1838, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1838, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("rsvd2")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1840, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1840, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1841, DW_AT_name("all")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1842, DW_AT_name("bit")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1843, DW_AT_name("rsvd1")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1843, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1843, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1844, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1844, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1844, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1845, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1845, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("rsvd2")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1846, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1846, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("all")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1848, DW_AT_name("bit")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("rsvd1")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1849, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1849, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1850, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1850, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1850, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1851, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1851, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1851, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1852, DW_AT_name("rsvd2")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1852, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1852, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1853, DW_AT_name("all")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1854, DW_AT_name("bit")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1855, DW_AT_name("rsvd1")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1855, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1855, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1856, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1856, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1856, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1857, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1857, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1857, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1858, DW_AT_name("rsvd2")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1858, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1858, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1859, DW_AT_name("all")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1860, DW_AT_name("bit")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1861, DW_AT_name("GPADAT")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1862, DW_AT_name("GPASET")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1863, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1864, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1865, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1866, DW_AT_name("GPBSET")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1867, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1868, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1869, DW_AT_name("rsvd1")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1870, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1871, DW_AT_name("GPDSET")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1872, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1873, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1874, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1875, DW_AT_name("GPESET")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1876, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1877, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1878, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1879, DW_AT_name("GPFSET")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1880, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1881, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1882, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1883, DW_AT_name("GPGSET")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1884, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1885, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1886, DW_AT_name("rsvd2")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1887	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1887)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1888, DW_AT_name("what")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1889, DW_AT_name("ch")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1890, DW_AT_name("limit")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1891, DW_AT_name("limits")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1892, DW_AT_name("limitr")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1893	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1893, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1894, DW_AT_name("usn")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1895, DW_AT_name("uname")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1896, DW_AT_name("rxdir")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1897, DW_AT_name("baud")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1898, DW_AT_name("tagiden")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1899, DW_AT_name("tarepersist")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1900, DW_AT_name("filter")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1901, DW_AT_name("diffwin")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1902, DW_AT_name("ch")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1903, DW_AT_name("sensor")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1904, DW_AT_name("vfd")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1905, DW_AT_name("dac")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1906, DW_AT_name("lim")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1907, DW_AT_name("velfilter")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1908, DW_AT_name("cntperin")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1909, DW_AT_name("magic")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1910	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1910)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1911, DW_AT_name("ssn")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1912, DW_AT_name("slbl")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1913, DW_AT_name("tagid")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1914, DW_AT_name("method")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1915, DW_AT_name("date")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1916, DW_AT_name("range")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1917, DW_AT_name("unit")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1918	.dwtag  DW_TAG_member
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1918, DW_AT_name("ounit")
	.dwattr $C$DW$1918, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1918, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1918, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1919, DW_AT_name("ufactor")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1920	.dwtag  DW_TAG_member
	.dwattr $C$DW$1920, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1920, DW_AT_name("points")
	.dwattr $C$DW$1920, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1920, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1920, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1921	.dwtag  DW_TAG_member
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1921, DW_AT_name("mass")
	.dwattr $C$DW$1921, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1921, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1921, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1922	.dwtag  DW_TAG_member
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1922, DW_AT_name("adc")
	.dwattr $C$DW$1922, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1922, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1922, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1923	.dwtag  DW_TAG_member
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1923, DW_AT_name("slope")
	.dwattr $C$DW$1923, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1923, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1923, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1924	.dwtag  DW_TAG_member
	.dwattr $C$DW$1924, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1924, DW_AT_name("intercept")
	.dwattr $C$DW$1924, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1924, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1924, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1925	.dwtag  DW_TAG_member
	.dwattr $C$DW$1925, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1925, DW_AT_name("shunt")
	.dwattr $C$DW$1925, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1925, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1925, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1926	.dwtag  DW_TAG_member
	.dwattr $C$DW$1926, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1926, DW_AT_name("base")
	.dwattr $C$DW$1926, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1926, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1926, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1927	.dwtag  DW_TAG_member
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1927, DW_AT_name("tare")
	.dwattr $C$DW$1927, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1927, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1927, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1928	.dwtag  DW_TAG_member
	.dwattr $C$DW$1928, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1928, DW_AT_name("dacgain")
	.dwattr $C$DW$1928, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1928, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1928, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1929	.dwtag  DW_TAG_member
	.dwattr $C$DW$1929, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1929, DW_AT_name("dacoff")
	.dwattr $C$DW$1929, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1929, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1929, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1930	.dwtag  DW_TAG_member
	.dwattr $C$DW$1930, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1930, DW_AT_name("ch")
	.dwattr $C$DW$1930, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1930, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1930, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1931	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1931, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1932	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1932, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1932)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1933	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1933, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1934	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1934, DW_AT_type(*$C$DW$T$6)

$C$DW$T$175	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$1934)


$C$DW$T$176	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_byte_size(0x101)
$C$DW$1935	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1935, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$176

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1936	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1936, DW_AT_type(*$C$DW$T$10)

$C$DW$T$198	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$1936)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1937	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1937, DW_AT_type(*$C$DW$T$36)

$C$DW$1938	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1938, DW_AT_type(*$C$DW$1937)

$C$DW$T$298	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1938)

$C$DW$1939	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1939, DW_AT_type(*$C$DW$T$36)

$C$DW$T$299	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$1939)


$C$DW$T$300	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$300, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$T$300, DW_AT_language(DW_LANG_C)
$C$DW$1940	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$300


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1941	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1941, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87

$C$DW$T$168	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$168, DW_AT_address_class(0x20)


$C$DW$T$308	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_byte_size(0x03)
$C$DW$1942	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1942, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$308


$C$DW$T$309	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$309, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$309, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$309, DW_AT_byte_size(0x08)
$C$DW$1943	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1943, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$309

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1944	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1944, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1945	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1945, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1946	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1946, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1947	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1947, DW_AT_type(*$C$DW$T$12)

$C$DW$T$338	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$338, DW_AT_type(*$C$DW$1947)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1948	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1948, DW_AT_type(*$C$DW$T$90)

$C$DW$T$341	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$341, DW_AT_type(*$C$DW$1948)


$C$DW$T$342	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$342, DW_AT_type(*$C$DW$T$341)
	.dwattr $C$DW$T$342, DW_AT_language(DW_LANG_C)
$C$DW$1949	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$342

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$357	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$357, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$357, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$357, DW_AT_byte_size(0x08)
$C$DW$1950	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1950, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$357

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1951	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1951, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1952	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1952, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1953	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1953, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1954	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1954, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$376	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$376, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$376, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$376, DW_AT_byte_size(0x06)
$C$DW$1955	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1955, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$376

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1956	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1956, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1957	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1957, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$362	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$362, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$362, DW_AT_address_class(0x20)

$C$DW$1958	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1958, DW_AT_type(*$C$DW$T$5)

$C$DW$T$179	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$1958)

$C$DW$T$180	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_address_class(0x20)


$C$DW$T$377	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$377, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$377, DW_AT_language(DW_LANG_C)
$C$DW$1959	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$377


$C$DW$T$378	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$378, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$378, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$378, DW_AT_byte_size(0x400)
$C$DW$1960	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1960, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$378


$C$DW$T$383	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$383, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$383, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$383, DW_AT_byte_size(0x08)
$C$DW$1961	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1961, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$383


$C$DW$T$384	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$384, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$384, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$384, DW_AT_byte_size(0x64)
$C$DW$1962	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1962, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$384


$C$DW$T$385	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$385, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$385, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$385, DW_AT_byte_size(0x40)
$C$DW$1963	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1963, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$385

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1964	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1964, DW_AT_name("AL")
	.dwattr $C$DW$1964, DW_AT_location[DW_OP_reg0]

$C$DW$1965	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1965, DW_AT_name("AH")
	.dwattr $C$DW$1965, DW_AT_location[DW_OP_reg1]

$C$DW$1966	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1966, DW_AT_name("PL")
	.dwattr $C$DW$1966, DW_AT_location[DW_OP_reg2]

$C$DW$1967	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1967, DW_AT_name("PH")
	.dwattr $C$DW$1967, DW_AT_location[DW_OP_reg3]

$C$DW$1968	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1968, DW_AT_name("SP")
	.dwattr $C$DW$1968, DW_AT_location[DW_OP_reg20]

$C$DW$1969	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1969, DW_AT_name("XT")
	.dwattr $C$DW$1969, DW_AT_location[DW_OP_reg21]

$C$DW$1970	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1970, DW_AT_name("T")
	.dwattr $C$DW$1970, DW_AT_location[DW_OP_reg22]

$C$DW$1971	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1971, DW_AT_name("ST0")
	.dwattr $C$DW$1971, DW_AT_location[DW_OP_reg23]

$C$DW$1972	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1972, DW_AT_name("ST1")
	.dwattr $C$DW$1972, DW_AT_location[DW_OP_reg24]

$C$DW$1973	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1973, DW_AT_name("PC")
	.dwattr $C$DW$1973, DW_AT_location[DW_OP_reg25]

$C$DW$1974	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1974, DW_AT_name("RPC")
	.dwattr $C$DW$1974, DW_AT_location[DW_OP_reg26]

$C$DW$1975	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1975, DW_AT_name("FP")
	.dwattr $C$DW$1975, DW_AT_location[DW_OP_reg28]

$C$DW$1976	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1976, DW_AT_name("DP")
	.dwattr $C$DW$1976, DW_AT_location[DW_OP_reg29]

$C$DW$1977	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1977, DW_AT_name("SXM")
	.dwattr $C$DW$1977, DW_AT_location[DW_OP_reg30]

$C$DW$1978	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1978, DW_AT_name("PM")
	.dwattr $C$DW$1978, DW_AT_location[DW_OP_reg31]

$C$DW$1979	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1979, DW_AT_name("OVM")
	.dwattr $C$DW$1979, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1980	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1980, DW_AT_name("PAGE0")
	.dwattr $C$DW$1980, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1981	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1981, DW_AT_name("AMODE")
	.dwattr $C$DW$1981, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1982	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1982, DW_AT_name("INTM")
	.dwattr $C$DW$1982, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1983	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1983, DW_AT_name("IFR")
	.dwattr $C$DW$1983, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1984	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1984, DW_AT_name("IER")
	.dwattr $C$DW$1984, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1985	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1985, DW_AT_name("V")
	.dwattr $C$DW$1985, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1986	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1986, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1986, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1987	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1987, DW_AT_name("VOL")
	.dwattr $C$DW$1987, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1988	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1988, DW_AT_name("AR0")
	.dwattr $C$DW$1988, DW_AT_location[DW_OP_reg4]

$C$DW$1989	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1989, DW_AT_name("XAR0")
	.dwattr $C$DW$1989, DW_AT_location[DW_OP_reg5]

$C$DW$1990	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1990, DW_AT_name("AR1")
	.dwattr $C$DW$1990, DW_AT_location[DW_OP_reg6]

$C$DW$1991	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1991, DW_AT_name("XAR1")
	.dwattr $C$DW$1991, DW_AT_location[DW_OP_reg7]

$C$DW$1992	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1992, DW_AT_name("AR2")
	.dwattr $C$DW$1992, DW_AT_location[DW_OP_reg8]

$C$DW$1993	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1993, DW_AT_name("XAR2")
	.dwattr $C$DW$1993, DW_AT_location[DW_OP_reg9]

$C$DW$1994	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1994, DW_AT_name("AR3")
	.dwattr $C$DW$1994, DW_AT_location[DW_OP_reg10]

$C$DW$1995	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1995, DW_AT_name("XAR3")
	.dwattr $C$DW$1995, DW_AT_location[DW_OP_reg11]

$C$DW$1996	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1996, DW_AT_name("AR4")
	.dwattr $C$DW$1996, DW_AT_location[DW_OP_reg12]

$C$DW$1997	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1997, DW_AT_name("XAR4")
	.dwattr $C$DW$1997, DW_AT_location[DW_OP_reg13]

$C$DW$1998	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1998, DW_AT_name("AR5")
	.dwattr $C$DW$1998, DW_AT_location[DW_OP_reg14]

$C$DW$1999	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1999, DW_AT_name("XAR5")
	.dwattr $C$DW$1999, DW_AT_location[DW_OP_reg15]

$C$DW$2000	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2000, DW_AT_name("AR6")
	.dwattr $C$DW$2000, DW_AT_location[DW_OP_reg16]

$C$DW$2001	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2001, DW_AT_name("XAR6")
	.dwattr $C$DW$2001, DW_AT_location[DW_OP_reg17]

$C$DW$2002	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2002, DW_AT_name("AR7")
	.dwattr $C$DW$2002, DW_AT_location[DW_OP_reg18]

$C$DW$2003	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2003, DW_AT_name("XAR7")
	.dwattr $C$DW$2003, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

