;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Tue Dec 17 09:51:21 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$5


$C$DW$7	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$7, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$7


$C$DW$9	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$9, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$11)

$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$9


$C$DW$12	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$12, DW_AT_name("latch_dac")
	.dwattr $C$DW$12, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$12, DW_AT_declaration
	.dwattr $C$DW$12, DW_AT_external
	.dwendtag $C$DW$12


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwendtag $C$DW$13


$C$DW$14	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$14, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$14, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$14, DW_AT_declaration
	.dwattr $C$DW$14, DW_AT_external
$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$14


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("conf_default")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwendtag $C$DW$16


$C$DW$17	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$17, DW_AT_name("ad7738_init")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwendtag $C$DW$17


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$36)

$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$18


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("SPICAN_T0_RTS")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("dac_setmode")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$23


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("maf_rst")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwendtag $C$DW$26


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("velf_rst")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwendtag $C$DW$27

$C$DW$28	.dwtag  DW_TAG_variable
	.dwattr $C$DW$28, DW_AT_name("UNITS")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external

$C$DW$29	.dwtag  DW_TAG_variable
	.dwattr $C$DW$29, DW_AT_name("METHOD")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external

$C$DW$30	.dwtag  DW_TAG_variable
	.dwattr $C$DW$30, DW_AT_name("BAUD")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$337)
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("BITMAP")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("LPV")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("INTERFACE")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external


$C$DW$34	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$34, DW_AT_name("ds1820start")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwendtag $C$DW$34


$C$DW$35	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$35, DW_AT_name("configCAN")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwendtag $C$DW$35


$C$DW$36	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$36, DW_AT_name("SPICANInit")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwendtag $C$DW$36


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("reboot")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("delay_us")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
$C$DW$39	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$38


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("lcd_init")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwendtag $C$DW$40


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("sys_init")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwendtag $C$DW$41


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwendtag $C$DW$42


$C$DW$43	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$43, DW_AT_name("InitECan")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
	.dwendtag $C$DW$43


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("lcd_clear")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwendtag $C$DW$44


$C$DW$45	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$45, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwendtag $C$DW$45


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("shunt_switch")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$46


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("flash_init")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
$C$DW$50	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$49


$C$DW$51	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$51, DW_AT_name("ssr_set")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$51


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("led_init")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("led_set")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$36)

$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$55


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("extio_init")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
	.dwendtag $C$DW$58


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("gpio_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwendtag $C$DW$59


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("scia_init")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$60


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
$C$DW$63	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$63, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$62


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("lcd_puts")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$163)

$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$64


$C$DW$67	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$67, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$163)

$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$67

$C$DW$70	.dwtag  DW_TAG_variable
	.dwattr $C$DW$70, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external

$C$DW$71	.dwtag  DW_TAG_variable
	.dwattr $C$DW$71, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$71, DW_AT_declaration
	.dwattr $C$DW$71, DW_AT_external

$C$DW$72	.dwtag  DW_TAG_variable
	.dwattr $C$DW$72, DW_AT_name("port4004")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external

$C$DW$73	.dwtag  DW_TAG_variable
	.dwattr $C$DW$73, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external

$C$DW$74	.dwtag  DW_TAG_variable
	.dwattr $C$DW$74, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external

$C$DW$75	.dwtag  DW_TAG_variable
	.dwattr $C$DW$75, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external

$C$DW$76	.dwtag  DW_TAG_variable
	.dwattr $C$DW$76, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$76, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$76, DW_AT_declaration
	.dwattr $C$DW$76, DW_AT_external

$C$DW$77	.dwtag  DW_TAG_variable
	.dwattr $C$DW$77, DW_AT_name("port400e")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external


$C$DW$78	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$78, DW_AT_name("tagdetect")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$78


$C$DW$80	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$80, DW_AT_name("sprintf")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external
$C$DW$81	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$163)

$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$179)

$C$DW$83	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$80


$C$DW$84	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$84, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$84, DW_AT_declaration
	.dwattr $C$DW$84, DW_AT_external
$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$163)

$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$84


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwendtag $C$DW$87


$C$DW$88	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$88, DW_AT_name("scia_puts")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external
$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$88


$C$DW$90	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$90, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwendtag $C$DW$90


$C$DW$91	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$91, DW_AT_name("SPICANRead")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external
$C$DW$92	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$91

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$93	.dwtag  DW_TAG_variable
	.dwattr $C$DW$93, DW_AT_name("cmd_mode")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$93, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_external


$C$DW$94	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$94, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external
	.dwendtag $C$DW$94


$C$DW$95	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$95, DW_AT_name("conf_read")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external
	.dwendtag $C$DW$95

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("autoidchanged")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$96, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_external


$C$DW$97	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$97, DW_AT_name("conf_write")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external
	.dwendtag $C$DW$97


$C$DW$98	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$98, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwendtag $C$DW$98


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwendtag $C$DW$101


$C$DW$102	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$102, DW_AT_name("atoi")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
$C$DW$103	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$102


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("SPICANRXStatus")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_SPICANRXStatus")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105


$C$DW$106	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$106, DW_AT_name("scia_getparam")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
$C$DW$107	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$163)

$C$DW$108	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$163)

$C$DW$109	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$106


$C$DW$110	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$110, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$163)

$C$DW$112	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$110


$C$DW$113	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$113, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$113, DW_AT_declaration
	.dwattr $C$DW$113, DW_AT_external
$C$DW$114	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$113


$C$DW$115	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$115, DW_AT_name("strtod")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$115, DW_AT_declaration
	.dwattr $C$DW$115, DW_AT_external
$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$179)

$C$DW$117	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$357)

	.dwendtag $C$DW$115


$C$DW$118	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$118, DW_AT_name("memcpy")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$118, DW_AT_declaration
	.dwattr $C$DW$118, DW_AT_external
$C$DW$119	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$3)

$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$148)

$C$DW$121	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$118


$C$DW$122	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$122, DW_AT_name("atol")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external
$C$DW$123	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$122

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$124	.dwtag  DW_TAG_variable
	.dwattr $C$DW$124, DW_AT_name("VEL_U")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$124, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$124, DW_AT_external


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
$C$DW$126	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$125

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$127	.dwtag  DW_TAG_variable
	.dwattr $C$DW$127, DW_AT_name("POS_U")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$127, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$127, DW_AT_external


$C$DW$128	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$128, DW_AT_name("ds1820read")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$128, DW_AT_declaration
	.dwattr $C$DW$128, DW_AT_external
	.dwendtag $C$DW$128


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
	.dwendtag $C$DW$129


$C$DW$130	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$130, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external
	.dwendtag $C$DW$130


$C$DW$131	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$131, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external
	.dwendtag $C$DW$131


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
	.dwendtag $C$DW$132


$C$DW$133	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$133, DW_AT_name("prod_getavail")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external
	.dwendtag $C$DW$133


$C$DW$134	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$134, DW_AT_name("prod_getnext")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
	.dwendtag $C$DW$134

$C$DW$135	.dwtag  DW_TAG_variable
	.dwattr $C$DW$135, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$135, DW_AT_declaration
	.dwattr $C$DW$135, DW_AT_external


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("strlen")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
$C$DW$137	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$136

$C$DW$138	.dwtag  DW_TAG_variable
	.dwattr $C$DW$138, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$138, DW_AT_declaration
	.dwattr $C$DW$138, DW_AT_external

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("autoid")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$139, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$139, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$140	.dwtag  DW_TAG_variable
	.dwattr $C$DW$140, DW_AT_name("tagwasthere")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$140, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$140, DW_AT_external


$C$DW$141	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$141, DW_AT_name("tagid")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$141, DW_AT_declaration
	.dwattr $C$DW$141, DW_AT_external
$C$DW$142	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$141

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$143	.dwtag  DW_TAG_variable
	.dwattr $C$DW$143, DW_AT_name("rtc")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$143, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$143, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$144	.dwtag  DW_TAG_variable
	.dwattr $C$DW$144, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$144, DW_AT_declaration
	.dwattr $C$DW$144, DW_AT_external

_buff$6:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$7:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$145	.dwtag  DW_TAG_variable
	.dwattr $C$DW$145, DW_AT_name("tsensor")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$145, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$145, DW_AT_external

$C$DW$146	.dwtag  DW_TAG_variable
	.dwattr $C$DW$146, DW_AT_name("_ctypes_")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$146, DW_AT_declaration
	.dwattr $C$DW$146, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("fileOb")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$147, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$147, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("Fatfs")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$148, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$148, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$149	.dwtag  DW_TAG_variable
	.dwattr $C$DW$149, DW_AT_name("conf_data")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$149, DW_AT_declaration
	.dwattr $C$DW$149, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\140922 C:\\Users\\ebenton\\AppData\\Local\\Temp\\140924 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\1409212 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$150	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$150, DW_AT_name("update_units")
	.dwattr $C$DW$150, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$150, DW_AT_high_pc(0x00)
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$150, DW_AT_external
	.dwattr $C$DW$150, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$150, DW_AT_TI_begin_line(0x17a9)
	.dwattr $C$DW$150, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$150, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6057,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$151	.dwtag  DW_TAG_variable
	.dwattr $C$DW$151, DW_AT_name("buff")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$151, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6057 | void update_units(void) {                                              
; 6059 | int l;                                                                 
; 6060 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6062,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6062 | lcd_clear();                                                           
; 6063 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$152, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6062| 
        ; call occurs [#_lcd_clear] ; [] |6062| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6064,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6064 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6064| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6064| 
        ADDL      XAR4,ACC              ; [CPU_] |6064| 
        MOV       AL,AR1                ; [CPU_] |6064| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6064| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$153, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6064| 
        ; call occurs [#_lcd_puts] ; [] |6064| 
	.dwpsn	file "../Source/prod.c",line 6065,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6065 | switch (conf_data.vfd[l].what) {                                       
; 6066 | case VFD_LOAD:                                                         
; 6067 | case VFD_PEAK:                                                         
; 6068 | case VFD_VALL:                                                         
; 6069 | case VFD_POSI:                                                         
; 6070 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6065| 
        CMPB      AL,#4                 ; [CPU_] |6065| 
        B         $C$L2,LOS             ; [CPU_] |6065| 
        ; branchcc occurs ; [] |6065| 
        CMPB      AL,#5                 ; [CPU_] |6065| 
        B         $C$L8,EQ              ; [CPU_] |6065| 
        ; branchcc occurs ; [] |6065| 
        CMPB      AL,#6                 ; [CPU_] |6065| 
        B         $C$L7,EQ              ; [CPU_] |6065| 
        ; branchcc occurs ; [] |6065| 
        B         $C$L10,UNC            ; [CPU_] |6065| 
        ; branch occurs ; [] |6065| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6071,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6071 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6071| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6071| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6071| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6071| 
        ADDB      AL,#1                 ; [CPU_] |6071| 
        MOVL      XAR4,XAR3             ; [CPU_] |6071| 
        MOV       *-SP[3],AL            ; [CPU_] |6071| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("_sprintf")
	.dwattr $C$DW$154, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6071| 
        ; call occurs [#_sprintf] ; [] |6071| 
	.dwpsn	file "../Source/prod.c",line 6072,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6072 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6072| 
        ADD       AL,AR1                ; [CPU_] |6072| 
        MOVL      XAR4,XAR3             ; [CPU_] |6072| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6072| 
        ; call occurs [#_lcd_puts] ; [] |6072| 
	.dwpsn	file "../Source/prod.c",line 6073,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6073 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6073| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6073| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6073| 
        B         $C$L3,EQ              ; [CPU_] |6073| 
        ; branchcc occurs ; [] |6073| 
	.dwpsn	file "../Source/prod.c",line 6074,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6074 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6074| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6074| 
        ADD       AL,AR1                ; [CPU_] |6074| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6074| 
        ; call occurs [#_lcd_puts] ; [] |6074| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6077,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6077 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6078 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6077| 
        CMPB      AL,#3                 ; [CPU_] |6077| 
        B         $C$L6,EQ              ; [CPU_] |6077| 
        ; branchcc occurs ; [] |6077| 
	.dwpsn	file "../Source/prod.c",line 6079,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6079 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6080 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6081 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6079| 
        CMPB      AL,#4                 ; [CPU_] |6079| 
        B         $C$L5,EQ              ; [CPU_] |6079| 
        ; branchcc occurs ; [] |6079| 
	.dwpsn	file "../Source/prod.c",line 6082,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6082 | lcd_puts(                                                              
; 6083 |                 (char*) UNITS[0x0f                                     
; 6084 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6085 |                 18 + 20 * l);                                          
; 6087 | break;                                                                 
; 6088 | case VFD_LIMIT:                                                        
; 6089 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6090 | lcd_puts(buff, 5 + 20 * l);                                            
; 6091 | break;                                                                 
; 6092 | case VFD_TEMP:                                                         
; 6093 | #if(VFD==1)                                                            
; 6094 | buff[0] = 0xb0;                                                        
; 6095 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6082| 
        MOV       T,#10                 ; [CPU_] |6082| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6082| 
        ADDL      ACC,XAR6              ; [CPU_] |6082| 
        MOVL      XAR4,ACC              ; [CPU_] |6082| 
        MOVB      XAR0,#42              ; [CPU_] |6082| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6082| 
        MPYB      ACC,T,#152            ; [CPU_] |6082| 
        ADDL      ACC,XAR6              ; [CPU_] |6082| 
        MOVL      XAR4,ACC              ; [CPU_] |6082| 
        MOVB      XAR0,#125             ; [CPU_] |6082| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6082| 
        ANDB      AL,#0x0f              ; [CPU_] |6082| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6082| 
        MOV       ACC,AL << 1           ; [CPU_] |6082| 
        ADDL      XAR4,ACC              ; [CPU_] |6082| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6082| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6082| 
        B         $C$L9,UNC             ; [CPU_] |6082| 
        ; branch occurs ; [] |6082| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6080,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6080| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6080| 
	.dwpsn	file "../Source/prod.c",line 6081,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6081| 
        ; branch occurs ; [] |6081| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6078,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6078| 
	.dwpsn	file "../Source/prod.c",line 6079,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6079| 
        ; branch occurs ; [] |6079| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6096,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6096 | buff[0] = 0xdf;                                                        
; 6097 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6096| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6096| 
	.dwpsn	file "../Source/prod.c",line 6098,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6098 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6098| 
	.dwpsn	file "../Source/prod.c",line 6099,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6099 | buff[2] = '\0';                                                        
; 6100 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6099| 
	.dwpsn	file "../Source/prod.c",line 6101,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6101 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6101| 
        ; branch occurs ; [] |6101| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6089,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6089| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6089| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6089| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6089| 
        ADDB      AL,#1                 ; [CPU_] |6089| 
        MOVL      XAR4,XAR3             ; [CPU_] |6089| 
        MOV       *-SP[3],AL            ; [CPU_] |6089| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_sprintf")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6089| 
        ; call occurs [#_sprintf] ; [] |6089| 
	.dwpsn	file "../Source/prod.c",line 6090,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6090| 
        MOVL      XAR4,XAR3             ; [CPU_] |6090| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6090| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6090| 
        ; call occurs [#_lcd_puts] ; [] |6090| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6063,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6063| 
        SUBB      XAR6,#1               ; [CPU_U] |6063| 
        MOVZ      AR0,AR6               ; [CPU_] |6063| 
        ADDB      XAR2,#3               ; [CPU_] |6063| 
        ADDB      XAR1,#20              ; [CPU_] |6063| 
        MOV       *-SP[4],AR6           ; [CPU_] |6063| 
        CMP       AR0,#-1               ; [CPU_] |6063| 
        B         $C$L1,NEQ             ; [CPU_] |6063| 
        ; branchcc occurs ; [] |6063| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$150, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$150, DW_AT_TI_end_line(0x17d8)
	.dwattr $C$DW$150, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$150

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$160	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$160, DW_AT_name("print_vfd")
	.dwattr $C$DW$160, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$160, DW_AT_high_pc(0x00)
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$160, DW_AT_external
	.dwattr $C$DW$160, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$160, DW_AT_TI_begin_line(0x1734)
	.dwattr $C$DW$160, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$160, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5940,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$161	.dwtag  DW_TAG_variable
	.dwattr $C$DW$161, DW_AT_name("buff")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5940 | void print_vfd(void) {                                                 
; 5941 | int l;                                                                 
; 5942 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$162	.dwtag  DW_TAG_variable
	.dwattr $C$DW$162, DW_AT_name("l")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$162, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5944,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5944 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5944| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("_scia_puts")
	.dwattr $C$DW$163, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5944| 
        ; call occurs [#_scia_puts] ; [] |5944| 
	.dwpsn	file "../Source/prod.c",line 5945,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5945| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5946,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5946 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5946| 
        MOVB      AL,#1                 ; [CPU_] |5946| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5946| 
        ADD       AL,AR1                ; [CPU_] |5946| 
        MOV       *-SP[3],AL            ; [CPU_] |5946| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5946| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5946| 
        ADDL      XAR4,ACC              ; [CPU_] |5946| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5946| 
        MOVL      XAR4,XAR3             ; [CPU_] |5946| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5946| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("_sprintf")
	.dwattr $C$DW$164, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5946| 
        ; call occurs [#_sprintf] ; [] |5946| 
	.dwpsn	file "../Source/prod.c",line 5947,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5947 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5947| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("_scia_puts")
	.dwattr $C$DW$165, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5947| 
        ; call occurs [#_scia_puts] ; [] |5947| 
	.dwpsn	file "../Source/prod.c",line 5949,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5949 | switch (conf_data.vfd[l].what) {                                       
; 5950 | case VFD_LOAD:                                                         
; 5951 | case VFD_PEAK:                                                         
; 5952 | case VFD_VALL:                                                         
; 5953 | case VFD_POSI:                                                         
; 5954 | case VFD_VELO:                                                         
; 5955 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5956 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5957 |         scia_puts(buff);                                               
; 5958 |         break;                                                         
; 5959 | case VFD_LIMIT:                                                        
; 5960 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5961 |         scia_puts(buff);                                               
; 5962 |         break;                                                         
; 5963 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5949| 
        CMPB      AL,#4                 ; [CPU_] |5949| 
        B         $C$L13,LOS            ; [CPU_] |5949| 
        ; branchcc occurs ; [] |5949| 
        CMPB      AL,#5                 ; [CPU_] |5949| 
        B         $C$L12,EQ             ; [CPU_] |5949| 
        ; branchcc occurs ; [] |5949| 
        CMPB      AL,#6                 ; [CPU_] |5949| 
        B         $C$L16,NEQ            ; [CPU_] |5949| 
        ; branchcc occurs ; [] |5949| 
	.dwpsn	file "../Source/prod.c",line 5964,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5964 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5964| 
	.dwpsn	file "../Source/prod.c",line 5965,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5965 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5965| 
        ; branch occurs ; [] |5965| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5960,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5960| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5960| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5960| 
        ADDB      AL,#1                 ; [CPU_] |5960| 
        MOV       *-SP[3],AL            ; [CPU_] |5960| 
	.dwpsn	file "../Source/prod.c",line 5962,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5962| 
        ; branch occurs ; [] |5962| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5955,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5955| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5955| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5955| 
        ADDB      AL,#1                 ; [CPU_] |5955| 
        MOV       *-SP[3],AL            ; [CPU_] |5955| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5955| 
        MOV       *-SP[4],AL            ; [CPU_] |5955| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5955| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_sprintf")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5955| 
        ; call occurs [#_sprintf] ; [] |5955| 
	.dwpsn	file "../Source/prod.c",line 5957,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5957| 
$C$L15:    
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5957| 
        ; call occurs [#_scia_puts] ; [] |5957| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5967,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5967 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5967| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5967| 
        ; call occurs [#_scia_puts] ; [] |5967| 
	.dwpsn	file "../Source/prod.c",line 5945,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5945| 
        ADDB      XAR2,#3               ; [CPU_] |5945| 
        MOV       AL,AR1                ; [CPU_] |5945| 
        CMPB      AL,#4                 ; [CPU_] |5945| 
        B         $C$L11,LT             ; [CPU_] |5945| 
        ; branchcc occurs ; [] |5945| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$160, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$160, DW_AT_TI_end_line(0x1751)
	.dwattr $C$DW$160, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$160

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$170	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$170, DW_AT_name("print_sensor")
	.dwattr $C$DW$170, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$170, DW_AT_high_pc(0x00)
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$170, DW_AT_external
	.dwattr $C$DW$170, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$170, DW_AT_TI_begin_line(0x16dd)
	.dwattr $C$DW$170, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$170, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5853,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$171	.dwtag  DW_TAG_variable
	.dwattr $C$DW$171, DW_AT_name("buff")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$379)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$172	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$172, DW_AT_name("ss")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$173	.dwtag  DW_TAG_variable
	.dwattr $C$DW$173, DW_AT_name("ss")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$197)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$174	.dwtag  DW_TAG_variable
	.dwattr $C$DW$174, DW_AT_name("j")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_reg0]

$C$DW$175	.dwtag  DW_TAG_variable
	.dwattr $C$DW$175, DW_AT_name("j")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_breg20 -7]

$C$DW$176	.dwtag  DW_TAG_variable
	.dwattr $C$DW$176, DW_AT_name("j")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_breg20 -7]

$C$DW$177	.dwtag  DW_TAG_variable
	.dwattr $C$DW$177, DW_AT_name("j")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_breg20 -7]

$C$DW$178	.dwtag  DW_TAG_variable
	.dwattr $C$DW$178, DW_AT_name("j")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5853 | void print_sensor(int ss) {                                            
; 5854 | int j;                                                                 
; 5855 | static char buff[100];                                                 
; 5857 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5853| 
	.dwpsn	file "../Source/prod.c",line 5858,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5858 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5859 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5860 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5858| 
        MPYB      P,T,#152              ; [CPU_] |5858| 
        MOVL      ACC,XAR3              ; [CPU_] |5858| 
        ADDL      ACC,P                 ; [CPU_] |5858| 
        MOVL      XAR2,ACC              ; [CPU_] |5858| 
        MOVB      XAR0,#118             ; [CPU_] |5858| 
        MOVL      *-SP[12],P            ; [CPU_] |5858| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5858| 
        B         $C$L28,EQ             ; [CPU_] |5858| 
        ; branchcc occurs ; [] |5858| 
	.dwpsn	file "../Source/prod.c",line 5861,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5861 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5861| 
        MOVL      ACC,XAR2              ; [CPU_] |5861| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5861| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5861| 
        ADDB      ACC,#82               ; [CPU_] |5861| 
        MOVL      XAR4,XAR1             ; [CPU_] |5861| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5861| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_sprintf")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5861| 
        ; call occurs [#_sprintf] ; [] |5861| 
	.dwpsn	file "../Source/prod.c",line 5862,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5862 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5862| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5863,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5863 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5863| 
        MOVL      ACC,XAR2              ; [CPU_] |5863| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5863| 
        ADDB      ACC,#98               ; [CPU_] |5863| 
        MOVL      XAR4,XAR1             ; [CPU_] |5863| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5863| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_sprintf")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5863| 
        ; call occurs [#_sprintf] ; [] |5863| 
	.dwpsn	file "../Source/prod.c",line 5864,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5864 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5864| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_scia_puts")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5864| 
        ; call occurs [#_scia_puts] ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5865,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5865 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5866 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5865| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5865| 
        MOVL      XAR4,XAR2             ; [CPU_] |5865| 
        ADDB      XAR4,#114             ; [CPU_] |5865| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5865| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5865| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5865| 
        MOVL      XAR4,XAR1             ; [CPU_] |5865| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5865| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_sprintf")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5865| 
        ; call occurs [#_sprintf] ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5867,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5867 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5867| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5867| 
        ; call occurs [#_scia_puts] ; [] |5867| 
	.dwpsn	file "../Source/prod.c",line 5868,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5868 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5869 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5868| 
        MOVB      XAR0,#118             ; [CPU_] |5868| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5868| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5868| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5868| 
        ADDL      XAR4,ACC              ; [CPU_] |5868| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5868| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5868| 
        MOVL      XAR4,XAR1             ; [CPU_] |5868| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_sprintf")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5868| 
        ; call occurs [#_sprintf] ; [] |5868| 
	.dwpsn	file "../Source/prod.c",line 5870,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5870 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5870| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5870| 
        ; call occurs [#_scia_puts] ; [] |5870| 
	.dwpsn	file "../Source/prod.c",line 5871,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5871 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5872 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5871| 
        MOVB      XAR0,#124             ; [CPU_] |5871| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5871| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5871| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5871| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5871| 
        ANDB      AL,#0x0f              ; [CPU_] |5871| 
        MOV       ACC,AL << 1           ; [CPU_] |5871| 
        ADDL      XAR4,ACC              ; [CPU_] |5871| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5871| 
        MOVL      XAR4,XAR1             ; [CPU_] |5871| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5871| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_sprintf")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5871| 
        ; call occurs [#_sprintf] ; [] |5871| 
	.dwpsn	file "../Source/prod.c",line 5873,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5873 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5873| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_scia_puts")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5873| 
        ; call occurs [#_scia_puts] ; [] |5873| 
	.dwpsn	file "../Source/prod.c",line 5874,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5874 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5875 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5874| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5874| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5874| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5874| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5874| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5874| 
        MOV       ACC,AL << 1           ; [CPU_] |5874| 
        ADDL      ACC,XAR6              ; [CPU_] |5874| 
        MOVL      XAR4,ACC              ; [CPU_] |5874| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5874| 
        MOVL      XAR4,XAR1             ; [CPU_] |5874| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5874| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_sprintf")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5874| 
        ; call occurs [#_sprintf] ; [] |5874| 
	.dwpsn	file "../Source/prod.c",line 5876,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5876 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5876| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5876| 
        ; call occurs [#_scia_puts] ; [] |5876| 
	.dwpsn	file "../Source/prod.c",line 5877,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5877 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5878 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5877| 
        MOVB      XAR0,#126             ; [CPU_] |5877| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5877| 
        MOVL      XAR4,XAR1             ; [CPU_] |5877| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5877| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5877| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_sprintf")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5877| 
        ; call occurs [#_sprintf] ; [] |5877| 
	.dwpsn	file "../Source/prod.c",line 5879,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5879 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5879| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_scia_puts")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5879| 
        ; call occurs [#_scia_puts] ; [] |5879| 
	.dwpsn	file "../Source/prod.c",line 5880,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5880 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5881 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5880| 
        MOVB      XAR0,#122             ; [CPU_] |5880| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5880| 
        MOVL      XAR4,XAR1             ; [CPU_] |5880| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5880| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5880| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_sprintf")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5880| 
        ; call occurs [#_sprintf] ; [] |5880| 
	.dwpsn	file "../Source/prod.c",line 5882,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5882 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5882| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_scia_puts")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5882| 
        ; call occurs [#_scia_puts] ; [] |5882| 
	.dwpsn	file "../Source/prod.c",line 5883,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5883 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5884 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5883| 
        MOVB      XAR0,#222             ; [CPU_] |5883| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5883| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5883| 
        MOVL      XAR4,XAR1             ; [CPU_] |5883| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5883| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_sprintf")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5883| 
        ; call occurs [#_sprintf] ; [] |5883| 
	.dwpsn	file "../Source/prod.c",line 5885,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5885 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5885| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5885| 
        ; call occurs [#_scia_puts] ; [] |5885| 
	.dwpsn	file "../Source/prod.c",line 5886,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5886 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5887 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5886| 
        MOVB      XAR0,#224             ; [CPU_] |5886| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5886| 
        MOVL      XAR4,XAR1             ; [CPU_] |5886| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5886| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5886| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_sprintf")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5886| 
        ; call occurs [#_sprintf] ; [] |5886| 
	.dwpsn	file "../Source/prod.c",line 5888,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5888 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5888| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5888| 
        ; call occurs [#_scia_puts] ; [] |5888| 
	.dwpsn	file "../Source/prod.c",line 5889,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5889 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5890 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5889| 
        MOVB      XAR0,#228             ; [CPU_] |5889| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5889| 
        MOVL      XAR4,XAR1             ; [CPU_] |5889| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5889| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5889| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_sprintf")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5889| 
        ; call occurs [#_sprintf] ; [] |5889| 
	.dwpsn	file "../Source/prod.c",line 5891,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5891 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5891| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5891| 
        ; call occurs [#_scia_puts] ; [] |5891| 
	.dwpsn	file "../Source/prod.c",line 5892,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5892 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5893 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5892| 
        MOVB      XAR0,#230             ; [CPU_] |5892| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5892| 
        MOVL      XAR4,XAR1             ; [CPU_] |5892| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5892| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5892| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_sprintf")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5892| 
        ; call occurs [#_sprintf] ; [] |5892| 
	.dwpsn	file "../Source/prod.c",line 5894,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5894 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5894| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5894| 
        ; call occurs [#_scia_puts] ; [] |5894| 
	.dwpsn	file "../Source/prod.c",line 5896,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5896 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5897 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5898 |                         conf_data.sensor[ss].points);                  
; 5899 |         scia_puts(buff);                                               
; 5901 |         scia_puts("  Point:");                                         
; 5902 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5903 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5904 |                 scia_puts(buff);                                       
; 5906 |         scia_puts("\r\n  Mass: ");                                     
; 5907 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5908 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5909 |                 scia_puts(buff);                                       
; 5911 |         scia_puts("\r\n  Count:");                                     
; 5912 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5913 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5914 |                 scia_puts(buff);                                       
; 5916 |         scia_puts("\r\n  Slope:    ");                                 
; 5917 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5918 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5919 |                 scia_puts(buff);                                       
; 5921 |         scia_puts("\r\n  Intercept:");                                 
; 5922 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5923 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5924 |                 scia_puts(buff);                                       
; 5926 |         scia_puts("\r\n");                                             
; 5927 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5896| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5896| 
        CMPB      AL,#2                 ; [CPU_] |5896| 
        B         $C$L17,EQ             ; [CPU_] |5896| 
        ; branchcc occurs ; [] |5896| 
	.dwpsn	file "../Source/prod.c",line 5928,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5929 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5928| 
        MOVB      XAR0,#178             ; [CPU_] |5928| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5928| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5928| 
        MOVL      XAR4,XAR1             ; [CPU_] |5928| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5928| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_sprintf")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5928| 
        ; call occurs [#_sprintf] ; [] |5928| 
	.dwpsn	file "../Source/prod.c",line 5930,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5930 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5930| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_scia_puts")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5930| 
        ; call occurs [#_scia_puts] ; [] |5930| 
	.dwpsn	file "../Source/prod.c",line 5931,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5931 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5932 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5931| 
        MOVB      XAR0,#200             ; [CPU_] |5931| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5931| 
        MOVL      XAR4,XAR1             ; [CPU_] |5931| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5931| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5931| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_sprintf")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5931| 
        ; call occurs [#_sprintf] ; [] |5931| 
	.dwpsn	file "../Source/prod.c",line 5933,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5933 | scia_puts(buff);                                                       
; 5936 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5933| 
        B         $C$L29,UNC            ; [CPU_] |5933| 
        ; branch occurs ; [] |5933| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5897,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5897| 
        MOVB      XAR0,#128             ; [CPU_] |5897| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5897| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5897| 
        MOVL      XAR4,XAR1             ; [CPU_] |5897| 
        MOV       *-SP[3],AL            ; [CPU_] |5897| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5897| 
        ; call occurs [#_sprintf] ; [] |5897| 
	.dwpsn	file "../Source/prod.c",line 5899,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5899| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5899| 
        ; call occurs [#_scia_puts] ; [] |5899| 
	.dwpsn	file "../Source/prod.c",line 5901,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5901| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5901| 
        ; call occurs [#_scia_puts] ; [] |5901| 
	.dwpsn	file "../Source/prod.c",line 5902,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5902| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5902,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5902| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5902| 
        B         $C$L27,LT             ; [CPU_] |5902| 
        ; branchcc occurs ; [] |5902| 
	.dwpsn	file "../Source/prod.c",line 5906,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5906| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5906| 
        ; call occurs [#_scia_puts] ; [] |5906| 
	.dwpsn	file "../Source/prod.c",line 5907,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5907| 
        MOV       *-SP[7],AL            ; [CPU_] |5907| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5907,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5907| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5907| 
        B         $C$L26,LT             ; [CPU_] |5907| 
        ; branchcc occurs ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5911,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5911| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5911| 
        ; call occurs [#_scia_puts] ; [] |5911| 
	.dwpsn	file "../Source/prod.c",line 5912,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5912| 
        MOV       *-SP[7],AL            ; [CPU_] |5912| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5912,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5912| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5912| 
        B         $C$L25,LT             ; [CPU_] |5912| 
        ; branchcc occurs ; [] |5912| 
	.dwpsn	file "../Source/prod.c",line 5916,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5916| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5916| 
        ; call occurs [#_scia_puts] ; [] |5916| 
	.dwpsn	file "../Source/prod.c",line 5917,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5917| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5917,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5917| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5917| 
        ADDB      AL,#-1                ; [CPU_] |5917| 
        CMP       AL,*-SP[7]            ; [CPU_] |5917| 
        B         $C$L24,GT             ; [CPU_] |5917| 
        ; branchcc occurs ; [] |5917| 
	.dwpsn	file "../Source/prod.c",line 5921,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5921| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5921| 
        ; call occurs [#_scia_puts] ; [] |5921| 
	.dwpsn	file "../Source/prod.c",line 5922,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5922| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5922,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5922| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5922| 
        ADDB      AL,#-1                ; [CPU_] |5922| 
        CMP       AL,*-SP[7]            ; [CPU_] |5922| 
        B         $C$L23,GT             ; [CPU_] |5922| 
        ; branchcc occurs ; [] |5922| 
	.dwpsn	file "../Source/prod.c",line 5926,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5926| 
	.dwpsn	file "../Source/prod.c",line 5927,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5927| 
        ; branch occurs ; [] |5927| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5923,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5923| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5923| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5923| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5923| 
        MOV       ACC,AL << 1           ; [CPU_] |5923| 
        ADDL      ACC,XAR6              ; [CPU_] |5923| 
        ADDL      ACC,XAR3              ; [CPU_] |5923| 
        MOVL      XAR4,ACC              ; [CPU_] |5923| 
        MOVB      XAR0,#200             ; [CPU_] |5923| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5923| 
        MOVL      XAR4,XAR1             ; [CPU_] |5923| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5923| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_sprintf")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5923| 
        ; call occurs [#_sprintf] ; [] |5923| 
	.dwpsn	file "../Source/prod.c",line 5924,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5924| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5924| 
        ; call occurs [#_scia_puts] ; [] |5924| 
	.dwpsn	file "../Source/prod.c",line 5922,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5922| 
        B         $C$L22,UNC            ; [CPU_] |5922| 
        ; branch occurs ; [] |5922| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5918,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5918| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5918| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5918| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5918| 
        MOV       ACC,AL << 1           ; [CPU_] |5918| 
        ADDL      ACC,XAR6              ; [CPU_] |5918| 
        ADDL      ACC,XAR3              ; [CPU_] |5918| 
        MOVL      XAR4,ACC              ; [CPU_] |5918| 
        MOVB      XAR0,#178             ; [CPU_] |5918| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5918| 
        MOVL      XAR4,XAR1             ; [CPU_] |5918| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5918| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_sprintf")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5918| 
        ; call occurs [#_sprintf] ; [] |5918| 
	.dwpsn	file "../Source/prod.c",line 5919,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5919| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_scia_puts")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5919| 
        ; call occurs [#_scia_puts] ; [] |5919| 
	.dwpsn	file "../Source/prod.c",line 5917,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5917| 
        B         $C$L21,UNC            ; [CPU_] |5917| 
        ; branch occurs ; [] |5917| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5913,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5913| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5913| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5913| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5913| 
        ADDL      ACC,XAR6              ; [CPU_] |5913| 
        ADDL      ACC,XAR3              ; [CPU_] |5913| 
        MOVL      XAR4,ACC              ; [CPU_] |5913| 
        MOVB      XAR0,#154             ; [CPU_] |5913| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5913| 
        MOVL      XAR4,XAR1             ; [CPU_] |5913| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5913| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_sprintf")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5913| 
        ; call occurs [#_sprintf] ; [] |5913| 
	.dwpsn	file "../Source/prod.c",line 5914,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5914| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5914| 
        ; call occurs [#_scia_puts] ; [] |5914| 
	.dwpsn	file "../Source/prod.c",line 5912,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5912| 
	.dwpsn	file "../Source/prod.c",line 5914,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5914| 
	.dwpsn	file "../Source/prod.c",line 5912,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5912| 
        ; branch occurs ; [] |5912| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5908,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5908| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5908| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5908| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5908| 
        ADDL      ACC,XAR6              ; [CPU_] |5908| 
        ADDL      ACC,XAR3              ; [CPU_] |5908| 
        MOVL      XAR4,ACC              ; [CPU_] |5908| 
        MOVB      XAR0,#130             ; [CPU_] |5908| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5908| 
        MOVL      XAR4,XAR1             ; [CPU_] |5908| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5908| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_sprintf")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5908| 
        ; call occurs [#_sprintf] ; [] |5908| 
	.dwpsn	file "../Source/prod.c",line 5909,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5909| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5909| 
        ; call occurs [#_scia_puts] ; [] |5909| 
	.dwpsn	file "../Source/prod.c",line 5907,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5907| 
	.dwpsn	file "../Source/prod.c",line 5909,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5909| 
	.dwpsn	file "../Source/prod.c",line 5907,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5907| 
        ; branch occurs ; [] |5907| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5903,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5903| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5903| 
        ADD       AH,AL                 ; [CPU_] |5903| 
        MOV       *-SP[7],AH            ; [CPU_] |5903| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5903| 
        MOVL      XAR4,XAR1             ; [CPU_] |5903| 
        MOV       *-SP[3],AH            ; [CPU_] |5903| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_sprintf")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5903| 
        ; call occurs [#_sprintf] ; [] |5903| 
	.dwpsn	file "../Source/prod.c",line 5904,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5904| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5904| 
        ; call occurs [#_scia_puts] ; [] |5904| 
        MOV       AL,*-SP[7]            ; [CPU_] |5904| 
	.dwpsn	file "../Source/prod.c",line 5902,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5902| 
        ; branch occurs ; [] |5902| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5859,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5859| 
$C$L29:    
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5859| 
        ; call occurs [#_scia_puts] ; [] |5859| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$170, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$170, DW_AT_TI_end_line(0x1731)
	.dwattr $C$DW$170, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$170

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$225	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$225, DW_AT_name("print_limits")
	.dwattr $C$DW$225, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$225, DW_AT_high_pc(0x00)
	.dwattr $C$DW$225, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$225, DW_AT_external
	.dwattr $C$DW$225, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$225, DW_AT_TI_begin_line(0x1778)
	.dwattr $C$DW$225, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$225, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6008,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$226	.dwtag  DW_TAG_variable
	.dwattr $C$DW$226, DW_AT_name("buff")
	.dwattr $C$DW$226, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$226, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$226, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6008 | void print_limits(void) {                                              
; 6009 | int ii;                                                                
; 6010 | static char buff[64];                                                  
; 6011 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$227	.dwtag  DW_TAG_variable
	.dwattr $C$DW$227, DW_AT_name("ii")
	.dwattr $C$DW$227, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$227, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$227, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$228	.dwtag  DW_TAG_variable
	.dwattr $C$DW$228, DW_AT_name("up")
	.dwattr $C$DW$228, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$228, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$228, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6013,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6013 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6013| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_scia_puts")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6013| 
        ; call occurs [#_scia_puts] ; [] |6013| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6015,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6015 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6015| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6016,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6016 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6016| 
        MOVB      AL,#1                 ; [CPU_] |6016| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6016| 
        ADD       AL,*-SP[9]            ; [CPU_] |6016| 
        MOVL      XAR4,XAR2             ; [CPU_] |6016| 
        MOV       *-SP[3],AL            ; [CPU_] |6016| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_sprintf")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6016| 
        ; call occurs [#_sprintf] ; [] |6016| 
	.dwpsn	file "../Source/prod.c",line 6017,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6017 | scia_puts(buff);                                                       
; 6019 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6017| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("_scia_puts")
	.dwattr $C$DW$231, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6017| 
        ; call occurs [#_scia_puts] ; [] |6017| 
	.dwpsn	file "../Source/prod.c",line 6021,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6021 | switch (conf_data.lim[ii].what) {                                      
; 6022 | case VFD_LOAD:                                                         
; 6023 | case VFD_PEAK:                                                         
; 6024 | case VFD_VALL:                                                         
; 6025 |         up =                                                           
; 6026 |                         UNITS[0x0f                                     
; 6027 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6028 |         break;                                                         
; 6029 | case VFD_POSI:                                                         
; 6030 |         up = POS_U;                                                    
; 6031 |         break;                                                         
; 6032 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6021| 
        B         $C$L40,NTC            ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6021| 
        CMPB      AL,#2                 ; [CPU_] |6021| 
        B         $C$L32,LOS            ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
        CMPB      AL,#3                 ; [CPU_] |6021| 
        B         $C$L31,EQ             ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
        CMPB      AL,#4                 ; [CPU_] |6021| 
        B         $C$L33,NEQ            ; [CPU_] |6021| 
        ; branchcc occurs ; [] |6021| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6033,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6033 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6033| 
	.dwpsn	file "../Source/prod.c",line 6034,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6034 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6034| 
        ; branch occurs ; [] |6034| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6030,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6030| 
	.dwpsn	file "../Source/prod.c",line 6031,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6031| 
        ; branch occurs ; [] |6031| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6025,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6025| 
        MOV       T,#10                 ; [CPU_] |6025| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6025| 
        ADDL      ACC,XAR6              ; [CPU_] |6025| 
        MOVL      XAR4,ACC              ; [CPU_] |6025| 
        MOVB      XAR0,#42              ; [CPU_] |6025| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6025| 
        MPYB      ACC,T,#152            ; [CPU_] |6025| 
        ADDL      ACC,XAR6              ; [CPU_] |6025| 
        MOVL      XAR4,ACC              ; [CPU_] |6025| 
        MOVB      XAR0,#125             ; [CPU_] |6025| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6025| 
        ANDB      AL,#0x0f              ; [CPU_] |6025| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6025| 
        MOV       ACC,AL << 1           ; [CPU_] |6025| 
        ADDL      XAR4,ACC              ; [CPU_] |6025| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6025| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6037,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6037 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6038 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6037| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6037| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6037| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6037| 
        ADDL      XAR4,ACC              ; [CPU_] |6037| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6037| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6037| 
        MOVL      XAR4,XAR2             ; [CPU_] |6037| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6037| 
        ADDB      AL,#1                 ; [CPU_] |6037| 
        MOV       *-SP[5],AL            ; [CPU_] |6037| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_sprintf")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6037| 
        ; call occurs [#_sprintf] ; [] |6037| 
	.dwpsn	file "../Source/prod.c",line 6039,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6039 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6039| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6039| 
        ; call occurs [#_scia_puts] ; [] |6039| 
	.dwpsn	file "../Source/prod.c",line 6040,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6040 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6041 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6042 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6043 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6040| 
        B         $C$L34,TC             ; [CPU_] |6040| 
        ; branchcc occurs ; [] |6040| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6040| 
        B         $C$L35,UNC            ; [CPU_] |6040| 
        ; branch occurs ; [] |6040| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6040| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6040| 
        B         $C$L36,TC             ; [CPU_] |6040| 
        ; branchcc occurs ; [] |6040| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6040| 
        B         $C$L37,UNC            ; [CPU_] |6040| 
        ; branch occurs ; [] |6040| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6040| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6040| 
        B         $C$L38,TC             ; [CPU_] |6040| 
        ; branchcc occurs ; [] |6040| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6040| 
        B         $C$L39,UNC            ; [CPU_] |6040| 
        ; branch occurs ; [] |6040| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6040| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6040| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6040| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6040| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6040| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6040| 
        MOVL      XAR4,XAR2             ; [CPU_] |6040| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_sprintf")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6040| 
        ; call occurs [#_sprintf] ; [] |6040| 
	.dwpsn	file "../Source/prod.c",line 6044,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6044 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6044| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6044| 
        ; call occurs [#_scia_puts] ; [] |6044| 
	.dwpsn	file "../Source/prod.c",line 6045,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6045 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6046 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6045| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6045| 
        MOVL      XAR4,XAR2             ; [CPU_] |6045| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6045| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6045| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6045| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_sprintf")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6045| 
        ; call occurs [#_sprintf] ; [] |6045| 
	.dwpsn	file "../Source/prod.c",line 6047,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6047 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6047| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_scia_puts")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6047| 
        ; call occurs [#_scia_puts] ; [] |6047| 
	.dwpsn	file "../Source/prod.c",line 6048,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6048 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6049 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6048| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6048| 
        MOVL      XAR4,XAR2             ; [CPU_] |6048| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6048| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6048| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6048| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_sprintf")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6048| 
        ; call occurs [#_sprintf] ; [] |6048| 
	.dwpsn	file "../Source/prod.c",line 6050,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6050 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6050| 
	.dwpsn	file "../Source/prod.c",line 6051,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6051 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6051| 
        ; branch occurs ; [] |6051| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6052,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6052 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6052| 
$C$L41:    
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_scia_puts")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6052| 
        ; call occurs [#_scia_puts] ; [] |6052| 
	.dwpsn	file "../Source/prod.c",line 6015,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6015| 
        INC       *-SP[9]               ; [CPU_] |6015| 
        MOV       AL,*-SP[9]            ; [CPU_] |6015| 
        CMPB      AL,#4                 ; [CPU_] |6015| 
        B         $C$L30,LT             ; [CPU_] |6015| 
        ; branchcc occurs ; [] |6015| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$225, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$225, DW_AT_TI_end_line(0x17a7)
	.dwattr $C$DW$225, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$225

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$241	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$241, DW_AT_name("print_dac")
	.dwattr $C$DW$241, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$241, DW_AT_high_pc(0x00)
	.dwattr $C$DW$241, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$241, DW_AT_external
	.dwattr $C$DW$241, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$241, DW_AT_TI_begin_line(0x1754)
	.dwattr $C$DW$241, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$241, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5972,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$242	.dwtag  DW_TAG_variable
	.dwattr $C$DW$242, DW_AT_name("buff")
	.dwattr $C$DW$242, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$242, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$242, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5972 | void print_dac(void) {                                                 
; 5973 | int l;                                                                 
; 5974 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$243	.dwtag  DW_TAG_variable
	.dwattr $C$DW$243, DW_AT_name("l")
	.dwattr $C$DW$243, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$243, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$243, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5976,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5976 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5976| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5976| 
        ; call occurs [#_scia_puts] ; [] |5976| 
	.dwpsn	file "../Source/prod.c",line 5978,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5978 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5978| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5979,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5979 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5979| 
        MOVB      AL,#1                 ; [CPU_] |5979| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5979| 
        ADD       AL,AR1                ; [CPU_] |5979| 
        MOV       *-SP[3],AL            ; [CPU_] |5979| 
        MOVL      XAR4,XAR3             ; [CPU_] |5979| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_sprintf")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5979| 
        ; call occurs [#_sprintf] ; [] |5979| 
	.dwpsn	file "../Source/prod.c",line 5980,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5980 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5980| 
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("_scia_puts")
	.dwattr $C$DW$246, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5980| 
        ; call occurs [#_scia_puts] ; [] |5980| 
	.dwpsn	file "../Source/prod.c",line 5982,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5982 | sprintf(buff,                                                          
; 5983 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 5984 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 5985 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |5982| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5982| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5982| 
        MOVL      XAR4,XAR3             ; [CPU_] |5982| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5982| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5982| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5982| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |5982| 
        MOVL      *-SP[8],ACC           ; [CPU_] |5982| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_sprintf")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5982| 
        ; call occurs [#_sprintf] ; [] |5982| 
	.dwpsn	file "../Source/prod.c",line 5986,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5986 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5986| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_scia_puts")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5986| 
        ; call occurs [#_scia_puts] ; [] |5986| 
	.dwpsn	file "../Source/prod.c",line 5988,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5988 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |5988| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5988| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5988| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5988| 
        ADDL      XAR4,ACC              ; [CPU_] |5988| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5988| 
        MOVL      XAR4,XAR3             ; [CPU_] |5988| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5988| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_sprintf")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5988| 
        ; call occurs [#_sprintf] ; [] |5988| 
	.dwpsn	file "../Source/prod.c",line 5989,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5989 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5989| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5989| 
        ; call occurs [#_scia_puts] ; [] |5989| 
	.dwpsn	file "../Source/prod.c",line 5991,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5991 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5991| 
        CMPB      AL,#7                 ; [CPU_] |5991| 
        B         $C$L43,EQ             ; [CPU_] |5991| 
        ; branchcc occurs ; [] |5991| 
	.dwpsn	file "../Source/prod.c",line 5992,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5992 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |5992| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5992| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5992| 
        ADDB      AL,#1                 ; [CPU_] |5992| 
        MOVL      XAR4,XAR3             ; [CPU_] |5992| 
        MOV       *-SP[3],AL            ; [CPU_] |5992| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_sprintf")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5992| 
        ; call occurs [#_sprintf] ; [] |5992| 
	.dwpsn	file "../Source/prod.c",line 5993,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5993 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5993| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_scia_puts")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5993| 
        ; call occurs [#_scia_puts] ; [] |5993| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 5996,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5996 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 5997 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 5998 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 5999 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 6000 |         scia_puts(buff);                                               
; 6001 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5996| 
        CMPB      AL,#3                 ; [CPU_] |5996| 
        B         $C$L44,EQ             ; [CPU_] |5996| 
        ; branchcc occurs ; [] |5996| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |5996| 
        CMPB      AL,#4                 ; [CPU_] |5996| 
        B         $C$L44,EQ             ; [CPU_] |5996| 
        ; branchcc occurs ; [] |5996| 
	.dwpsn	file "../Source/prod.c",line 6002,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6002 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6002| 
        B         $C$L45,UNC            ; [CPU_] |6002| 
        ; branch occurs ; [] |6002| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 5998,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |5998| 
        MOVB      XAR0,#8               ; [CPU_] |5998| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5998| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5998| 
        MOVB      XAR0,#10              ; [CPU_] |5998| 
        MOVL      XAR4,XAR3             ; [CPU_] |5998| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5998| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5998| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5998| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_sprintf")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5998| 
        ; call occurs [#_sprintf] ; [] |5998| 
	.dwpsn	file "../Source/prod.c",line 6000,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6000| 
$C$L45:    
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6000| 
        ; call occurs [#_scia_puts] ; [] |6000| 
	.dwpsn	file "../Source/prod.c",line 5978,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5978| 
        ADDB      XAR2,#12              ; [CPU_] |5978| 
        MOV       AL,AR1                ; [CPU_] |5978| 
        CMPB      AL,#4                 ; [CPU_] |5978| 
        B         $C$L42,LT             ; [CPU_] |5978| 
        ; branchcc occurs ; [] |5978| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$241, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$241, DW_AT_TI_end_line(0x1775)
	.dwattr $C$DW$241, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$241

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$256	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$256, DW_AT_name("print_channel")
	.dwattr $C$DW$256, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$256, DW_AT_high_pc(0x00)
	.dwattr $C$DW$256, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$256, DW_AT_external
	.dwattr $C$DW$256, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$256, DW_AT_TI_begin_line(0x16c2)
	.dwattr $C$DW$256, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$256, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5826,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$257	.dwtag  DW_TAG_variable
	.dwattr $C$DW$257, DW_AT_name("buff")
	.dwattr $C$DW$257, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$257, DW_AT_type(*$C$DW$T$379)
	.dwattr $C$DW$257, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$258	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$258, DW_AT_name("ch")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$258, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$259	.dwtag  DW_TAG_variable
	.dwattr $C$DW$259, DW_AT_name("ch")
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$259, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$259, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5826 | void print_channel(Uint16 ch) {                                        
; 5827 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5826| 
	.dwpsn	file "../Source/prod.c",line 5829,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5829 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5829| 
        MOVZ      AR1,AR2               ; [CPU_] |5829| 
        MOVB      AH,#1                 ; [CPU_] |5829| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5829| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5829| 
        ADD       AH,AR1                ; [CPU_] |5829| 
        MOVL      XAR4,XAR3             ; [CPU_] |5829| 
        MOV       *-SP[3],AH            ; [CPU_] |5829| 
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_name("_sprintf")
	.dwattr $C$DW$260, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5829| 
        ; call occurs [#_sprintf] ; [] |5829| 
	.dwpsn	file "../Source/prod.c",line 5830,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5830| 
$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("_scia_puts")
	.dwattr $C$DW$261, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5830| 
        ; call occurs [#_scia_puts] ; [] |5830| 
	.dwpsn	file "../Source/prod.c",line 5832,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5832 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5832| 
        MOV       T,AR1                 ; [CPU_] |5832| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5832| 
        MPYU      ACC,T,AL              ; [CPU_] |5832| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5832| 
        ADDL      XAR1,ACC              ; [CPU_] |5832| 
        MOVB      XAR0,#44              ; [CPU_] |5832| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5832| 
        MOVL      XAR4,XAR3             ; [CPU_] |5832| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5832| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5832| 
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("_sprintf")
	.dwattr $C$DW$262, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5832| 
        ; call occurs [#_sprintf] ; [] |5832| 
	.dwpsn	file "../Source/prod.c",line 5833,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5833 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5833| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5833| 
        ; call occurs [#_scia_puts] ; [] |5833| 
	.dwpsn	file "../Source/prod.c",line 5843,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5843 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5843| 
        MOVB      XAR0,#42              ; [CPU_] |5843| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5843| 
        MOVL      XAR4,XAR3             ; [CPU_] |5843| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5843| 
        ADDB      AL,#1                 ; [CPU_] |5843| 
        MOV       *-SP[3],AL            ; [CPU_] |5843| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_sprintf")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5843| 
        ; call occurs [#_sprintf] ; [] |5843| 
	.dwpsn	file "../Source/prod.c",line 5844,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5844 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5844| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5844| 
        ; call occurs [#_scia_puts] ; [] |5844| 
	.dwpsn	file "../Source/prod.c",line 5846,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5846 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5846| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5846| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5846| 
        B         $C$L46,EQ             ; [CPU_] |5846| 
        ; branchcc occurs ; [] |5846| 
	.dwpsn	file "../Source/prod.c",line 5847,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5847 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5847| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("_scia_puts")
	.dwattr $C$DW$266, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5847| 
        ; call occurs [#_scia_puts] ; [] |5847| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$256, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$256, DW_AT_TI_end_line(0x16d9)
	.dwattr $C$DW$256, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$256

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$268	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$268, DW_AT_name("matchTag")
	.dwattr $C$DW$268, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$268, DW_AT_high_pc(0x00)
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$268, DW_AT_external
	.dwattr $C$DW$268, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$268, DW_AT_TI_begin_line(0x169e)
	.dwattr $C$DW$268, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$268, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5790,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$269	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$269, DW_AT_name("ch")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$269, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5790 | void matchTag(Uint16 ch) {                                             
; 5791 | Uint16 sns;                                                            
; 5792 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("ch")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$271	.dwtag  DW_TAG_variable
	.dwattr $C$DW$271, DW_AT_name("sns")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$272	.dwtag  DW_TAG_variable
	.dwattr $C$DW$272, DW_AT_name("tag")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5794,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5794 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5794| 
	.dwpsn	file "../Source/prod.c",line 5790,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5790| 
	.dwpsn	file "../Source/prod.c",line 5794,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5794| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5794| 
        MOVL      XAR1,ACC              ; [CPU_] |5794| 
	.dwpsn	file "../Source/prod.c",line 5796,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5796 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5796| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5796| 
	.dwpsn	file "../Source/prod.c",line 5794,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5794| 
	.dwpsn	file "../Source/prod.c",line 5796,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5797 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5796| 
        B         $C$L50,EQ             ; [CPU_] |5796| 
        ; branchcc occurs ; [] |5796| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5796| 
        B         $C$L50,HIS            ; [CPU_] |5796| 
        ; branchcc occurs ; [] |5796| 
	.dwpsn	file "../Source/prod.c",line 5800,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5800 | tag = tagid(ch);                                                       
; 5801 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5802 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$273, DW_AT_name("_tagid")
	.dwattr $C$DW$273, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5800| 
        ; call occurs [#_tagid] ; [] |5800| 
        MOVB      XAR6,#0               ; [CPU_] |5800| 
        MOVL      XAR3,ACC              ; [CPU_] |5800| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5800| 
        MOV       *-SP[2],#0            ; [CPU_] |5800| 
        MOV       *-SP[1],#0            ; [CPU_] |5800| 
$C$DW$274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$274, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$274, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5800| 
        ; call occurs [#ULL$$CMP] ; [] |5800| 
        CMPB      AL,#0                 ; [CPU_] |5800| 
        B         $C$L50,EQ             ; [CPU_] |5800| 
        ; branchcc occurs ; [] |5800| 
        MOVB      ACC,#0                ; [CPU_] |5800| 
        SUBB      ACC,#1                ; [CPU_] |5800| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5800| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5800| 
        MOVL      ACC,XAR3              ; [CPU_] |5800| 
$C$DW$275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$275, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$275, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5800| 
        ; call occurs [#ULL$$CMP] ; [] |5800| 
        CMPB      AL,#0                 ; [CPU_] |5800| 
        B         $C$L50,EQ             ; [CPU_] |5800| 
        ; branchcc occurs ; [] |5800| 
	.dwpsn	file "../Source/prod.c",line 5803,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5803 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5803| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5803| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5803| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5805,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5805 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5807 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5805| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5808,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5808 | continue;                       // not calibrated                      
; 5811 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5808| 
        B         $C$L48,EQ             ; [CPU_] |5808| 
        ; branchcc occurs ; [] |5808| 
	.dwpsn	file "../Source/prod.c",line 5812,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5812 | continue;                       // doesn't match, skip                 
; 5815 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5812| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5812| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5812| 
        MOVL      ACC,XAR3              ; [CPU_] |5812| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5812| 
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$276, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5812| 
        ; call occurs [#ULL$$CMP] ; [] |5812| 
        CMPB      AL,#0                 ; [CPU_] |5812| 
        B         $C$L49,EQ             ; [CPU_] |5812| 
        ; branchcc occurs ; [] |5812| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5805,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5805| 
        MOVL      XAR0,ACC              ; [CPU_] |5805| 
        ADDB      XAR4,#1               ; [CPU_] |5805| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5805| 
        ; branchcc occurs ; [] |5805| 
        B         $C$L50,UNC            ; [CPU_] |5805| 
        ; branch occurs ; [] |5805| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5816,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5816 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5816| 
	.dwpsn	file "../Source/prod.c",line 5817,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5817 | conf_data.ch[ch].ci = sns;                                             
; 5819 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5817| 
        MOV       T,*-SP[5]             ; [CPU_] |5817| 
        MPYU      ACC,T,AL              ; [CPU_] |5817| 
        ADDL      ACC,XAR2              ; [CPU_] |5817| 
        MOVL      XAR5,ACC              ; [CPU_] |5817| 
        MOVB      XAR0,#42              ; [CPU_] |5817| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5817| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$268, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$268, DW_AT_TI_end_line(0x16be)
	.dwattr $C$DW$268, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$268

	.sect	".text"
	.clink
	.global	_main

$C$DW$278	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$278, DW_AT_name("main")
	.dwattr $C$DW$278, DW_AT_low_pc(_main)
	.dwattr $C$DW$278, DW_AT_high_pc(0x00)
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$278, DW_AT_external
	.dwattr $C$DW$278, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$278, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$278, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$278, DW_AT_TI_max_frame_size(-152)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$279	.dwtag  DW_TAG_variable
	.dwattr $C$DW$279, DW_AT_name("buff")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$279, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$280	.dwtag  DW_TAG_variable
	.dwattr $C$DW$280, DW_AT_name("cmdbuff")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 150           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 133 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U141
;* AR1   assigned to $O$U329
;* AR1   assigned to $O$U358
;* AR1   assigned to $O$U566
;* AR1   assigned to $O$U694
;* AR1   assigned to $O$U793
;* AR1   assigned to $O$U830
;* AR5   assigned to $O$U846
;* AL    assigned to $O$U1005
;* AR1   assigned to $O$U983
;* AR1   assigned to $O$U1073
;* AR1   assigned to $O$U973
;* AR6   assigned to $O$U1274
;* AR1   assigned to $O$U1300
;* AR7   assigned to $O$U1536
;* XT    assigned to $O$U1563
;* PL    assigned to $O$U1564
;* AR5   assigned to $O$U1588
;* PL    assigned to $O$U1593
;* PL    assigned to $O$U1600
;* AR7   assigned to $O$U1602
;* AR5   assigned to $O$U1603
;* AR5   assigned to $O$U1617
;* XT    assigned to $O$U1659
;* PL    assigned to $O$U1660
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("ccp")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg20 -104]

$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("tempft")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg20 -12]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("templg")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -14]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("ds_ct")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -47]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("ds_sn")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -49]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("ds_bm")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -50]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("ds_dec")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -51]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ds_dn")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -52]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ds_stop")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -53]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("ds_en")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -54]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("bincmdresult")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -47]

$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("line")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -55]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("daccbm")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -56]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("tempvalue")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -106]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("scale")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -16]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("unsaved")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -48]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("tagch")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -143]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("ss")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -57]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("ch")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -58]

$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("version")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U425
;* AR1   assigned to $O$U425
;* AR1   assigned to $O$U425
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR1   assigned to $O$U403
;* AR5   assigned to $O$U403
;* AR7   assigned to $O$U403
;* AR1   assigned to $O$U295
;* AR1   assigned to $O$U587
;* AR1   assigned to $O$U587
;* AR1   assigned to $O$U632
;* AR1   assigned to $O$U632
;* AR4   assigned to $O$K821
;* AR4   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR4   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR5   assigned to $O$K821
;* AR5   assigned to $O$K821
;* AR1   assigned to $O$K821
;* AR1   assigned to $O$U875
;* AR1   assigned to $O$U875
;* AR1   assigned to $O$U898
;* AR3   assigned to $O$U898
;* AR1   assigned to $O$U898
;* AR6   assigned to $O$U855
;* AL    assigned to $O$U855
;* AR1   assigned to $O$U924
;* AR1   assigned to $O$U924
;* AR1   assigned to $O$U1004
;* AR7   assigned to $O$U1004
;* AR5   assigned to $O$U1004
;* AR5   assigned to $O$U1004
;* AR5   assigned to $O$U1004
;* AR7   assigned to $O$U1004
;* AR7   assigned to $O$U1004
;* AR7   assigned to $O$U1004
;* AR7   assigned to $O$U1004
;* AR4   assigned to $O$U1004
;* AR4   assigned to $O$U1004
;* AR7   assigned to $O$U1004
;* AR7   assigned to $O$U1004
;* AR1   assigned to $O$K312
;* AR7   assigned to $O$U1139
;* AR7   assigned to $O$U1139
;* AR7   assigned to $O$U1139
;* AR7   assigned to $O$U1139
;* AR4   assigned to $O$U1141
;* AR4   assigned to $O$U1141
;* AR4   assigned to $O$U1141
;* AR4   assigned to $O$U1141
;* AR3   assigned to $O$U1175
;* AR1   assigned to $O$U1175
;* AR1   assigned to $O$U1175
;* AR1   assigned to $O$U1181
;* AR4   assigned to $O$U1193
;* AR4   assigned to $O$U1190
;* AR7   assigned to $O$U1190
;* PL    assigned to $O$U1190
;* AR7   assigned to $O$U1190
;* AR4   assigned to $O$U1190
;* AR5   assigned to $O$U1250
;* AR4   assigned to $O$U1250
;* AR5   assigned to $O$U1329
;* AR5   assigned to $O$U1329
;* AR4   assigned to $O$U1325
;* AR4   assigned to $O$U1325
;* AR5   assigned to $O$U1384
;* AR5   assigned to $O$U1384
;* PL    assigned to $O$U1390
;* AR0   assigned to $O$U1390
;* AR1   assigned to $O$U1391
;* AR7   assigned to $O$U1391
;* AR0   assigned to $O$U1427
;* AR5   assigned to $O$U1427
;* PL    assigned to $O$U1430
;* AR1   assigned to $O$U1430
;* AR1   assigned to $O$U1431
;* AR7   assigned to $O$U1431
;* AR5   assigned to $O$U1469
;* AR5   assigned to $O$U1469
;* AR0   assigned to $O$U1504
;* AR5   assigned to $O$U1504
;* AR4   assigned to $O$U1539
;* AR1   assigned to $O$U1539
;* AR5   assigned to $O$U1539
;* AR5   assigned to $O$U1539
;* AR4   assigned to $O$U1628
;* AR5   assigned to $O$U1628
;* AR4   assigned to $O$U1628
;* AR5   assigned to $O$U1637
;* AR3   assigned to _intp
$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("intp")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("intp")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("intp")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("tempint")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("tempint")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("temp16")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg10]

$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("temp16")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_breg20 -59]

$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("temp32")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _temp32
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("temp32")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("cmethod")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg6]

$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("cmethod")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("flash_ret")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("flash_ret")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("flash_ret")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("flash_ret")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("slen")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("slen")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("slen")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("slen")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("slen")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("slen")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("pt")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("pt")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg0]

$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("pt")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_breg20 -59]

$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("pt")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _pt
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("pt")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("pt")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("pt")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_reg12]

$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("pt")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("pt")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("wtp")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("wtp")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("wtp")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("wtp")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_reg12]

$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("cmdlen")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _cmdlen
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("cmdlen")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg0]

$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("cmdlen")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_breg20 -47]

$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("cmdlen")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("cmdlen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("cmdlen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("cmdlen")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_reg0]

$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("k")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_breg20 -59]

$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("k")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_breg20 -60]

$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("k")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_breg20 -60]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("k")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("k")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_reg16]

$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("k")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_breg20 -59]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("k")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("k")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_reg2]

$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("k")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("k")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("k")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("j")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_reg10]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("j")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -47]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("j")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -47]

$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_breg20 -47]

;* AR1   assigned to _j
$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_reg6]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -47]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -47]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -47]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -47]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -60]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -60]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -47]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -59]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -61]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -48]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -48]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -48]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -48]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -48]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -48]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -47]

$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("j")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_breg20 -61]

;* AR1   assigned to _i
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("i")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("i")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("i")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_reg0]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -47]

;* AR7   assigned to _i
$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_reg18]

$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg0]

$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_breg20 -47]

$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_breg20 -47]

$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg16]

$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_reg16]

$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("volt")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_breg20 -24]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("dsum")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$352)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -32]

$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("dacc")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$306)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_breg20 -35]

$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("sampcnt")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$333)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_breg20 -38]

$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("data")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#144               ; [CPU_] 
	.dwcfi	cfa_offset, -152
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$473, DW_AT_name("_sys_init")
	.dwattr $C$DW$473, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$474, DW_AT_name("_delay_us")
	.dwattr $C$DW$474, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$475, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$475, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_gpio_init")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_extio_init")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_InitECan")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
; 243 | // Set SD select output as appropriate (Usually high)                  
; 244 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 257 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_configCAN")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 258,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 258 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 259 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 261 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |258| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |258| 
        MOVL      ACC,XAR5              ; [CPU_] |258| 
        SUBL      XAR4,ACC              ; [CPU_] |258| 
        MOVL      ACC,XAR4              ; [CPU_] |258| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |258| 
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_memcpy")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |258| 
        ; call occurs [#_memcpy] ; [] |258| 
	.dwpsn	file "../Source/prod.c",line 262,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 263 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |262| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |262| 
        MOVL      ACC,XAR5              ; [CPU_] |262| 
        SUBL      XAR4,ACC              ; [CPU_] |262| 
        MOVL      ACC,XAR4              ; [CPU_] |262| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |262| 
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_memcpy")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |262| 
        ; call occurs [#_memcpy] ; [] |262| 
	.dwpsn	file "../Source/prod.c",line 280,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |280| 
        MOV       AH,#479               ; [CPU_] |280| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |280| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 290,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | Flash_CallbackPtr = NULL;                                              
; 292 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |290| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |290| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_flash_init")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |293| 
        ; call occurs [#_flash_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_led_init")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |295| 
        ; call occurs [#_led_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | lcd_init();                             // lcd/vfd display             
; 298 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_lcd_init")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |296| 
        ; call occurs [#_lcd_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_ssr_set")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_ssr_set")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_ssr_set")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(3, 0);                  // indicate gui not connected          
; 305 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_ssr_set")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_conf_read")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |318| 
        ; call occurs [#_conf_read] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |319| 
        MOV       AH,#21930             ; [CPU_] |319| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |319| 
        B         $C$L51,EQ             ; [CPU_] |319| 
        ; branchcc occurs ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_conf_default")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |320| 
        ; call occurs [#_conf_default] ; [] |320| 
	.dwpsn	file "../Source/prod.c",line 321,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 321 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_conf_write")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |321| 
        ; call occurs [#_conf_write] ; [] |321| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |324| 
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |324| 
        ; call occurs [#_shunt_switch] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |326| 
        ; call occurs [#_ad7738_init] ; [] |326| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | ad7738_setcal();                                                       
; 329 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |327| 
        ; call occurs [#_ad7738_setcal] ; [] |327| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | tagwasthere[i] = 0;                                                    
; 333 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 329,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |335| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_delay_us")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |335| 
        ; call occurs [#_delay_us] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | lcd_clear();                                                           
; 338 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |337| 
        ; call occurs [#_lcd_clear] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |339| 
        MOVL      XAR0,#44              ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      *-SP[4],ACC           ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |339| 
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_sprintf")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |341| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |341| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_sprintf")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |341| 
        ; call occurs [#_sprintf] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |342| 
        MOVL      XAR4,XAR1             ; [CPU_] |342| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |343| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |343| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |343| 
        ; call occurs [#_lcd_dputs] ; [] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 346,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |346| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 348,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |348| 
        TBIT      AL,#4                 ; [CPU_] |348| 
        B         $C$L54,TC             ; [CPU_] |348| 
        ; branchcc occurs ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |349| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 352,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | if (1 & i) {                                                           
; 353 |         led_set( LED1, LED_RED);                                       
; 354 |         led_set( LED2, LED_RED);                                       
; 355 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |352| 
        B         $C$L55,TC             ; [CPU_] |352| 
        ; branchcc occurs ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |356| 
        MOVB      AH,#2                 ; [CPU_] |356| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_led_set")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |356| 
        ; call occurs [#_led_set] ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 357,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |357| 
        B         $C$L56,UNC            ; [CPU_] |357| 
        ; branch occurs ; [] |357| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |353| 
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_led_set")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |354| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |354| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_led_set")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 359,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |359| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_delay_us")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |359| 
        ; call occurs [#_delay_us] ; [] |359| 
	.dwpsn	file "../Source/prod.c",line 346,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |346| 
        MOV       AL,AR1                ; [CPU_] |346| 
        CMPB      AL,#100               ; [CPU_] |346| 
        B         $C$L53,LT             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_led_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |363| 
        MOVB      AH,#0                 ; [CPU_] |363| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_led_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
        MOV       AL,AR1                ; [CPU_] |363| 
	.dwpsn	file "../Source/prod.c",line 365,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |365| 
        CMPB      AL,#20                ; [CPU_] |365| 
        B         $C$L58,GEQ            ; [CPU_] |365| 
        ; branchcc occurs ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |366| 
        MOVL      XAR4,XAR5             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |366| 
        INC       *+XAR4[0]             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |368| 
        CMPB      AL,#4                 ; [CPU_] |368| 
        B         $C$L57,LT             ; [CPU_] |368| 
        ; branchcc occurs ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 369,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |369| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |369| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |372| 
        MOVB      AL,#40                ; [CPU_] |372| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |372| 
        ; call occurs [#_lcd_dputs] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_conf_write")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |374| 
        ; call occurs [#_conf_write] ; [] |374| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |377| 
        MOVL      XAR0,#74              ; [CPU_] |377| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |377| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |377| 
        MOVB      XAR0,#35              ; [CPU_] |377| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |377| 
        ADDL      XAR4,ACC              ; [CPU_] |377| 
        MOVL      XAR0,#88              ; [CPU_] |377| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[52],#60          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[50],#15          ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 379,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | switch (conf_data.rxdir) {                                             
; 380 | case SDIR_RS232:                        // RS232, 0                    
; 381 |         led_set( LED1, LED_RED);                                       
; 382 |         led_set( LED2, LED_RED);                                       
; 383 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 384 |         scia_init(temp32);                                             
; 385 |         break;                                                         
; 386 | case SDIR_RS485:                        // RS485, 1                    
; 387 |         led_set( LED1, LED_GREEN);                                     
; 388 |         led_set( LED2, LED_RED);                                       
; 389 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 390 |         scia_init(temp32);                                             
; 391 |         break;                                                         
; 392 | case SDIR_ENET:                 // Ethernet, 2                         
; 393 |         led_set( LED1, LED_RED);                                       
; 394 |         led_set( LED2, LED_GREEN);                                     
; 395 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 396 |         scia_init(921600L);                                            
; 397 |         //scia_init( 460800L );                                        
; 398 |         break;                                                         
; 399 | case SDIR_USB:                  // USB, 3                              
; 400 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 401 |         led_set( LED1, LED_GREEN);                                     
; 402 |         led_set( LED2, LED_GREEN);                                     
; 403 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 404 |         // the USB chip can't handle 921600bps without dropping bytes  
; 405 |         // it seems 460800bps is fine so far.                          
; 406 |         // the client (PC Host) side can use any baudrate.             
; 407 |         scia_init(460800L);                                            
; 408 |         break;                                                         
; 409 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |379| 
        B         $C$L64,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#1                 ; [CPU_] |379| 
        B         $C$L63,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#2                 ; [CPU_] |379| 
        B         $C$L60,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#3                 ; [CPU_] |379| 
        B         $C$L59,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#1                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_led_set")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_led_set")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 414 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |413| 
        MOVL      XAR0,#72              ; [CPU_] |413| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        MOVB      XAR0,#34              ; [CPU_] |413| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |413| 
	.dwpsn	file "../Source/prod.c",line 415,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |415| 
        ; branch occurs ; [] |415| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_led_set")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |402| 
        MOVB      AH,#2                 ; [CPU_] |402| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_led_set")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |403| 
        MOVL      XAR0,#72              ; [CPU_] |403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |403| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |403| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |403| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |403| 
        ADDL      XAR4,ACC              ; [CPU_] |403| 
        MOVL      XAR0,#44              ; [CPU_] |403| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |403| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_sprintf")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |403| 
        ; call occurs [#_sprintf] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |407| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |393| 
        MOVB      AH,#1                 ; [CPU_] |393| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_led_set")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |394| 
        MOVB      AH,#2                 ; [CPU_] |394| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_led_set")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |394| 
        ; call occurs [#_led_set] ; [] |394| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |395| 
        MOVL      XAR0,#72              ; [CPU_] |395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |395| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |395| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |395| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |395| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |395| 
        MOVL      XAR0,#44              ; [CPU_] |395| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |395| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_sprintf")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |395| 
        ; call occurs [#_sprintf] ; [] |395| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |396| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |398| 
        ; branch occurs ; [] |398| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 387,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |391| 
        ; branch occurs ; [] |391| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |381| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_led_set")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |382| 
        MOVB      AH,#1                 ; [CPU_] |382| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_led_set")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |382| 
        ; call occurs [#_led_set] ; [] |382| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |383| 
        MOVL      XAR0,#72              ; [CPU_] |383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |383| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |383| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |383| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |383| 
        ADDL      XAR4,ACC              ; [CPU_] |383| 
        MOVL      XAR0,#88              ; [CPU_] |383| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |383| 
        MOVL      *-SP[4],ACC           ; [CPU_] |383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |383| 
        MOVL      XAR0,#44              ; [CPU_] |383| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |383| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_sprintf")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |383| 
        ; call occurs [#_sprintf] ; [] |383| 
        MOVL      ACC,XAR1              ; [CPU_] |383| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_scia_init")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |384| 
        ; call occurs [#_scia_init] ; [] |384| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |417| 
        ; call occurs [#_lcd_clear] ; [] |417| 
        MOVL      XAR0,#44              ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |418| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |418| 
        ; call occurs [#_lcd_dputs] ; [] |418| 
	.dwpsn	file "../Source/prod.c",line 421,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | uart_set_dir(conf_data.rxdir);                                         
; 423 | // initalize hardware and SFCLIB buffers                               
; 424 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 426 | // Enable global Interrupts and higher priority real-time debug events:
; 427 | EINT;                                                                  
; 428 | // Enable Global interrupt INTM                                        
; 429 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |421| 
        MOVL      XAR0,#40              ; [CPU_] |421| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |421| 
        MOVB      XAR0,#34              ; [CPU_] |421| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |421| 
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |421| 
        ; call occurs [#_uart_set_dir] ; [] |421| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 433 |         for (i = 0; i < 50; i++)                // 1s                  
; 435 |                 delay_us(20000);                // delay for 20ms      
; 437 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
        CMPB      AL,#3                 ; [CPU_] |431| 
        B         $C$L76,NEQ            ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |439| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 441,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 443 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |441| 
        ; branch occurs ; [] |441| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L70,EQ             ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |443| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |445| 
        ; call occurs [#_scia_rx_getcmd] ; [] |445| 
        MOV       T,*-SP[47]            ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | lcd_puts(cmdbuff, 20 * j);                                             
; 447 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |446| 
        MOVL      XAR4,XAR1             ; [CPU_] |446| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |446| 
        ; call occurs [#_lcd_puts] ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |448| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |448| 
        B         $C$L69,LT             ; [CPU_] |448| 
        ; branchcc occurs ; [] |448| 
	.dwpsn	file "../Source/prod.c",line 449,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |449| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L68,NEQ            ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 441,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |441| 
        TBIT      AL,#5                 ; [CPU_] |441| 
        B         $C$L67,NTC            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
        SPM       #0                    ; [CPU_] 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_scia_puts")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |454| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_delay_us")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |454| 
        ; call occurs [#_delay_us] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_puts("E\r");                                                      
; 456 | j = 0;                                                                 
; 457 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |455| 
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_puts")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |455| 
        ; call occurs [#_scia_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 458,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | for (i = 0; i < WTT; i++)               // 10s                         
; 460 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |456| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 461,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmds] ; [] |461| 
        CMPB      AL,#0                 ; [CPU_] |461| 
        B         $C$L72,EQ             ; [CPU_] |461| 
        ; branchcc occurs ; [] |461| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |462| 
        ; call occurs [#_scia_rx_getcmd] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |463| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |465| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_delay_us")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |465| 
        ; call occurs [#_delay_us] ; [] |465| 
        MOV       AL,*-SP[47]           ; [CPU_] |465| 
	.dwpsn	file "../Source/prod.c",line 466,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |466| 
        B         $C$L73,LT             ; [CPU_] |466| 
        ; branchcc occurs ; [] |466| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 469,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 469 | i = WTT - 10;                                                          
; 473 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |469| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 458,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |458| 
        CMP       AR1,#500              ; [CPU_] |458| 
        B         $C$L71,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |474| 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_scia_puts")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_delay_us")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |476| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_scia_puts")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_delay_us")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |478| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_scia_puts")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |479| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_delay_us")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |479| 
        ; call occurs [#_delay_us] ; [] |479| 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |480| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_scia_puts")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |480| 
        ; call occurs [#_scia_puts] ; [] |480| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 482,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 482 | j = 0;                                                                 
; 483 | for (i = 0; i < 100; i++)               // 2s                          
; 485 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |482| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 486,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmds] ; [] |486| 
        CMPB      AL,#0                 ; [CPU_] |486| 
        B         $C$L75,EQ             ; [CPU_] |486| 
        ; branchcc occurs ; [] |486| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |487| 
        ; call occurs [#_scia_rx_getcmd] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       T,*-SP[47]            ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |488| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |488| 
        ; call occurs [#_lcd_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |489| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |489| 
        B         $C$L75,LT             ; [CPU_] |489| 
        ; branchcc occurs ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |490| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 493,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 493 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |493| 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_delay_us")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |493| 
        ; call occurs [#_delay_us] ; [] |493| 
	.dwpsn	file "../Source/prod.c",line 483,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |483| 
        ; branchcc occurs ; [] |483| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 496,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |496| 
        B         $C$L78,UNC            ; [CPU_] |496| 
        ; branch occurs ; [] |496| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 435,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |435| 
        SPM       #0                    ; [CPU_] 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_delay_us")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |435| 
        ; call occurs [#_delay_us] ; [] |435| 
	.dwpsn	file "../Source/prod.c",line 433,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |433| 
        ; branchcc occurs ; [] |433| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 499,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 501 | #ifdef SDHCCARD                                                        
; 503 | // check SD card                                                       
; 504 | lcd_puts( "SD Card Testing...", 0 );                                   
; 505 | sd_write = 0;                                                          
; 506 | sd_close = 0;                                                          
; 507 | sd_cnt = 0;                                                            
; 508 | fp = NULL;                                                             
; 510 | f_mount( 0, &Fatfs );                                                  
; 512 | res = f_getfree( "0:", &fsize, &fs );                                  
; 514 | sprintf( buff, "%02X", res );                                          
; 515 | lcd_puts( buff, 18 );                                                  
; 517 | if( !res )                                                             
; 519 |         switch( fs->fs_type & 3 )                                      
; 521 |                 case 1:                                                
; 522 |                 lcd_puts( "FAT12", 20 );                               
; 523 |                 break;                                                 
; 524 |                 case 2:                                                
; 525 |                 lcd_puts( "FAT16", 20 );                               
; 526 |                 break;                                                 
; 527 |                 case 3:                                                
; 528 |                 lcd_puts( "FAT32", 20 );                               
; 529 |                 break;                                                 
; 532 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 533 |         lcd_puts( buff, 40 );                                          
; 535 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 536 |         lcd_puts( buff, 60 );                                          
; 538 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 540 |                 switch( res )                                          
; 542 |                         case CT_MMC:                                   
; 543 |                         lcd_puts( "on MMC", 26 );                      
; 544 |                         break;                                         
; 545 |                         case CT_SD1:                                   
; 546 |                         lcd_puts( "on SDV1", 26 );                     
; 547 |                         break;                                         
; 548 |                         case CT_SD2:                                   
; 549 |                         lcd_puts( "on SDV2", 26 );                     
; 550 |                         break;                                         
; 551 |                         case CT_SD2|CT_BLOCK:                          
; 552 |                         lcd_puts( "on SDHC", 26 );                     
; 553 |                         break;                                         
; 554 |                         default:                                       
; 555 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 556 |                         break;                                         
; 561 | else                                                                   
; 563 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 579 | for( i = 0; i < 100; i++ )                      // 2s                  
; 581 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 583 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |499| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |499| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |585| 
        MOVB      AH,#2                 ; [CPU_] |585| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_led_set")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |586| 
        MOVB      AH,#0                 ; [CPU_] |586| 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_led_set")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |586| 
        ; call occurs [#_led_set] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_update_units")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |588| 
        ; call occurs [#_update_units] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |590| 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | ad7738_resetvall( BM_ALL);              // reset valley                
; 592 | line = 0;                                                              
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | // main loop                                                           
; 596 | //=====================================================================
;     | =====//                                                                
; 597 | char data[8];                                                          
; 598 | int n;                                                                 
; 599 | Uint16 res;                                                            
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |591| 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |591| 
        ; call occurs [#_ad7738_resetvall] ; [] |591| 
	.dwpsn	file "../Source/prod.c",line 601,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 601 | SPICANInit();                                                          
; 602 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |601| 
        ; call occurs [#_SPICANInit] ; [] |601| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 604,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 604 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |604| 
	.dwpsn	file "../Source/prod.c",line 607,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 607 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |607| 
        ; call occurs [#_SPICANReadStat] ; [] |607| 
        MOV       *-SP[46],AL           ; [CPU_] |607| 
	.dwpsn	file "../Source/prod.c",line 608,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 608 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |608| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |608| 
        ; call occurs [#_SPICANRead] ; [] |608| 
        MOV       *-SP[45],AL           ; [CPU_] |608| 
	.dwpsn	file "../Source/prod.c",line 609,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 609 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |609| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |609| 
        ; call occurs [#_SPICANRead] ; [] |609| 
        MOV       *-SP[44],AL           ; [CPU_] |609| 
	.dwpsn	file "../Source/prod.c",line 610,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 610 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |610| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |610| 
        ; call occurs [#_SPICANRead] ; [] |610| 
        MOV       *-SP[43],AL           ; [CPU_] |610| 
	.dwpsn	file "../Source/prod.c",line 611,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 611 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |611| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |611| 
        ; call occurs [#_SPICANRead] ; [] |611| 
        MOV       *-SP[42],AL           ; [CPU_] |611| 
	.dwpsn	file "../Source/prod.c",line 612,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 612 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |612| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |612| 
        ; call occurs [#_SPICANRead] ; [] |612| 
        MOV       *-SP[41],AL           ; [CPU_] |612| 
	.dwpsn	file "../Source/prod.c",line 613,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 613 | data[6] = SPICANRead(0x70);                                            
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |613| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |613| 
        ; call occurs [#_SPICANRead] ; [] |613| 
        MOV       *-SP[40],AL           ; [CPU_] |613| 
	.dwpsn	file "../Source/prod.c",line 614,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 614 | data[7] = SPICANRead(0x0F);                                            
;----------------------------------------------------------------------
        MOVB      AL,#15                ; [CPU_] |614| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |614| 
        ; call occurs [#_SPICANRead] ; [] |614| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |616| 
	.dwpsn	file "../Source/prod.c",line 614,column 2,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |614| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |616| 
        MOVB      AL,#161               ; [CPU_] |616| 
        SUBB      XAR4,#46              ; [CPU_U] |616| 
        MOVZ      AR4,AR4               ; [CPU_] |616| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |616| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |616| 
	.dwpsn	file "../Source/prod.c",line 617,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 617 | delay_us(10);                                                          
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |617| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_delay_us")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |617| 
        ; call occurs [#_delay_us] ; [] |617| 
	.dwpsn	file "../Source/prod.c",line 618,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 618 | SPICAN_T0_RTS();                                                       
;----------------------------------------------------------------------
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_SPICAN_T0_RTS       ; [CPU_] |618| 
        ; call occurs [#_SPICAN_T0_RTS] ; [] |618| 
	.dwpsn	file "../Source/prod.c",line 620,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 620 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[46]              ; [CPU_] |620| 
	.dwpsn	file "../Source/prod.c",line 621,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 621 | data[1] = data[1] + 1;                                                 
; 622 | data[2] = data[2] + 1;                                                 
; 623 | data[3] = data[3] + 1;                                                 
; 624 | data[4] = data[4] + 1;                                                 
; 625 | data[5] = data[5] + 1;                                                 
; 626 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |621| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 628 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 622,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |622| 
	.dwpsn	file "../Source/prod.c",line 623,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |623| 
	.dwpsn	file "../Source/prod.c",line 624,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |624| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 626,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |626| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |628| 
        ; call occurs [#_SPICANRead] ; [] |628| 
        MOV       *-SP[46],AL           ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 629 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |629| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |629| 
        ; call occurs [#_SPICANRead] ; [] |629| 
        MOV       *-SP[45],AL           ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 630,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 630 | data[2] = SPICANRead(SPICAN_TXB0D0 + 2);                               
;----------------------------------------------------------------------
        MOVB      AL,#56                ; [CPU_] |630| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |630| 
        ; call occurs [#_SPICANRead] ; [] |630| 
        MOV       *-SP[44],AL           ; [CPU_] |630| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 631 | data[3] = SPICANRead(SPICAN_TXB0D0 + 3);                               
;----------------------------------------------------------------------
        MOVB      AL,#57                ; [CPU_] |631| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |631| 
        ; call occurs [#_SPICANRead] ; [] |631| 
        MOV       *-SP[43],AL           ; [CPU_] |631| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 632 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |632| 
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |632| 
        ; call occurs [#_SPICANRead] ; [] |632| 
        MOV       *-SP[42],AL           ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 633,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 633 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |633| 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |633| 
        ; call occurs [#_SPICANRead] ; [] |633| 
        MOV       *-SP[41],AL           ; [CPU_] |633| 
	.dwpsn	file "../Source/prod.c",line 634,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 634 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 636 | for (;;) {                                                             
; 638 |         data[7] = SPICANRXStatus();                                    
; 639 |         delay_us(10);                                                  
; 640 |         data[6] = SPICANRead(0x2D);                                    
; 643 |         // check SW2 for reset command                                 
; 644 |         if (!(0x0010 & INBTTN)) {                                      
; 646 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 647 |                 ad7738_resetpeak(0x0f);                                
; 648 |                 ad7738_resetvall(0x0f);                                
; 650 | #if(0)                                                                 
; 651 |                 // DEBUG: tagid                                        
; 652 |                 lcd_clear();                                           
; 653 |                 for( i = 0; i < 4; i++ )                               
; 655 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 656 |                         lcd_puts( buff, i * 20 );                      
; 658 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 660 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 662 |                 // DEBUG: tagid                                        
; 663 |                 update_units();                                        
; 664 | #endif                                                                 
; 668 | #ifdef SDHCCARD                                                        
; 669 |         // write to SD card file if flag set                           
; 670 |         if( sd_write && fp )                                           
; 672 |                 if( prod_getavail() > 31 || sd_close )                 
; 674 |                         led_set( LED2, LED_RED );                      
; 676 |                         k = 32;                                        
; 678 |                         while( prod_getavail() && k-- )                
; 680 |                                 wtp = prod_getnext();                  
; 682 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 684 |                                         intp = (Uint16*)&wtp->adw[i];  
; 686 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 688 |                                         for( j = 0; j < 2; j++ )       
; 690 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 691 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 692 |                                                 intp++;                
; 695 |                                 sd_cnt++;                              
; 698 |                         if( sd_close )                                 
; 700 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 701 |                                 if( res )                              
; 703 |                                         sprintf( buff, "%02X ", res ); 
; 704 |                                         scia_puts( buff );             
; 707 |                                 res = f_close( fp );                   
; 708 |                                 fp = NULL;                             
; 710 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 711 |                                 scia_puts( buff );                     
; 713 |                                 sd_write = 0;                          
; 714 |                                 sd_close = 0;                          
; 717 |                         led_set( LED2, LED_OFF );                      
; 720 | #endif                                                                 
; 722 |         //=============================================================
;     | =====================//                                                
; 723 |         // update the vfd
;     |                          //                                            
; 724 |         //=============================================================
;     | =====================//                                                
; 725 |         // if there is new "monitor data" ready                        
; 726 |         if (ad7738_monrdy()) {                                         
; 727 |                 // clear the ready flag                                
; 728 |                 ad7738_monclr();                                       
; 730 |                 // display the appropriate data                        
; 731 |                 switch (conf_data.vfd[line].what) {                    
; 732 |                 case VFD_LOAD:                                         
; 733 |                         wtp = ad7738_getmon();                         
; 734 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 735 |                         goto VFD_LINE_BUFF;                            
; 737 |                 case VFD_PEAK:                                         
; 738 |                         wtp = ad7738_getpeak();                        
; 739 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 740 |                         goto VFD_LINE_BUFF;                            
; 742 |                 case VFD_VALL:                                         
; 743 |                         wtp = ad7738_getvall();                        
; 744 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 745 |                         goto VFD_LINE_BUFF;                            
; 747 |                 case VFD_POSI:                                         
; 748 |                         wtp = ad7738_getmon();                         
; 749 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 750 |                         goto VFD_LINE_BUFF;                            
; 752 |                 case VFD_VELO:                                         
; 753 |                         wtp = ad7738_getmon();                         
; 754 |                         //wtp = ad7738_getpeak();                      
; 755 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 757 |                         // display appropriate decimal points          
; 758 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 759 |                         case 0:                                        
; 760 |                                 sprintf(buff, "%10.0f", tempft);       
; 761 |                                 break;                                 
; 762 |                         case 1:                                        
; 763 |                                 sprintf(buff, "%10.1f", tempft);       
; 764 |                                 break;                                 
; 765 |                         case 2:                                        
; 766 |                                 sprintf(buff, "%10.2f", tempft);       
; 767 |                                 break;                                 
; 768 |                         case 3:                                        
; 769 |                                 sprintf(buff, "%10.3f", tempft);       
; 770 |                                 break;                                 
; 771 |                         case 4:                                        
; 772 |                                 sprintf(buff, "%10.4f", tempft);       
; 773 |                                 break;                                 
; 774 |                         case 5:                                        
; 775 |                                 sprintf(buff, "%10.5f", tempft);       
; 776 |                                 break;                                 
; 778 |                         break;                                         
; 780 |                 case VFD_LIMIT:                                        
; 781 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 782 |                         sprintf(buff, "  %s",                          
; 783 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 784 |                         break;                                         
; 785 |                 case VFD_TEMP:                                         
; 786 |                         sprintf(buff, "%10.1f", tempvalue);            
; 787 |                         break;                                         
; 790 |                 // print to LCD                                        
; 791 |                 lcd_puts(buff, 7 + 20 * line);                         
; 793 |                 line++;                                                
; 794 |                 if (line >= VFD_MAX) {                                 
; 795 |                         line = 0;                                      
; 799 |         //=============================================================
;     | =====================//                                                
; 800 |         // temperature sensor reading
;     |                  //                                                    
; 801 |         //=============================================================
;     | =====================//                                                
; 803 |         // if its time to start a temp conversion...                   
; 804 |         if (ad7738_tempstart()) {                                      
; 805 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 808 |         // if its time to start a temp reading...                      
; 809 |         else if (ad7738_tempread()) {                                  
; 810 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 811 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 814 |         //=============================================================
;     | =====================//                                                
; 815 |         // Auto ID detection
;     |                  //                                                    
; 816 |         //=============================================================
;     | =====================//                                                
; 817 |         // check for changes in the load cells connected by "TAG ID"   
; 818 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 819 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 821 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 823 |                                 // new loadcell just plugged in        
; 824 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 825 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 827 |                                         DINT;                          
; 828 |                                         maf_rst();                     
; 829 |                                         ad7738_setcal();               
; 830 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 831 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 832 |                                         EINT;                          
; 834 |                                         lcd_clear();                   
; 835 |                                         update_units();                
; 836 |                                         autoidchanged = 1;             
; 839 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 840 |                 } else {                                               
; 842 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 844 |                         if (autoid[tagch]) {                           
; 845 |                                 autoid[tagch] = 0;                     
; 846 |                                 lcd_clear();                           
; 847 |                                 update_units();                        
; 848 |                                 autoidchanged = 1;                     
; 852 |                 tagch++;                                               
; 853 |                 if (tagch >= CHS_MAX) {                                
; 854 |                         tagch = 0;                                     
; 858 |         //=============================================================
;     | =====================//                                                
; 859 |         // Data streamming
;     |                          //                                            
; 860 |         //=============================================================
;     | =====================//                                                
; 861 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 862 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 863 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 864 |                 //      taking into account decimation, etc.           
; 865 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 867 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 869 |                         ds_ct = 0;                                     
; 870 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 871 |                         j = 0;                                         
; 872 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 873 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 874 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 875 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 876 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 877 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 878 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 880 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 881 |                                 wtp = prod_getnext();                  
; 882 |                                 if (--k) {                             
; 883 |                                         continue;
;     |          // decimation                                                 
; 885 |                                 k = ds_dec;                            
; 886 |                                 ds_ct++;                               
; 888 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 889 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 890 |                                         if (ds_bm & ch) {              
; 891 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 892 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 893 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 894 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 895 |                                                         intp++;        
; 898 |                                         ch <<= 1;
;     |          // next channel                                               
; 901 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 902 |                                         if (ds_bm & ch) {              
; 903 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 904 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 905 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 906 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 907 |                                                         intp++;        
; 910 |                                         ch <<= 1;
;     |          // next channel                                               
; 913 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 914 |                                         if (ds_bm & ch) {              
; 915 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 916 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 917 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 918 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 919 |                                                         intp++;        
; 922 |                                         ch <<= 1;
;     |          // next channel                                               
; 926 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 928 |                         if (ds_stop) {                                 
; 929 |                                 ds_en = 0;                             
; 932 |                         scia_send_bin(buff, j);         // send data   
; 934 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 935 |                 } else if (ad7738_getlimitchgd()) {                    
; 936 |                         j = 0;                                         
; 937 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 938 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 939 |                         for (i = 0; i < LIM_MAX; i++) {                
; 940 |                                 buff[j++] = ad7738_getlimitst(i);      
; 942 |                         scia_send_bin(buff, j);         // send data   
; 943 |                 } else if (autoidchanged) {                            
; 944 |                         autoidchanged = 0;                             
; 946 |                         j = 0;                                         
; 947 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 948 |                         buff[j++] = GetAutoId;                  // 1,  
; 949 |                         buff[j++] = conf_data.tagiden;                 
; 950 |                         for (i = 0; i < CHS_MAX; i++) {                
; 951 |                                 buff[j++] = autoid[i];                 
; 953 |                         scia_send_bin(buff, j);         // send data   
; 959 |         //=============================================================
;     | =====================//                                                
; 960 |         // serial command processing
;     |                  //                                                    
; 961 |         //=============================================================
;     | =====================//                                                
; 963 |         //=============================================================
;     | =====================//                                                
; 964 |         // Check for available command in the command buffer
;     |                  //                                                    
; 965 |         //=============================================================
;     | =====================//                                                
; 966 |         if (0 == scia_rx_getcmds()) {                                  
; 967 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 970 |         //=============================================================
;     | =====================//                                                
; 971 |         // Read one command from command buffer
;     |                  //                                                    
; 972 |         //=============================================================
;     | =====================//                                                
; 973 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 975 |         //=============================================================
;     | =====================//                                                
; 976 |         // Empty command
;     |                          //                                            
; 977 |         //=============================================================
;     | =====================//                                                
; 978 |         if (0 == cmdlen) {                                             
; 979 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 980 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 981 |                 continue;                                              
; 984 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 986 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 987 |                 // ASCII command mode processing
;     |                                  //                                    
; 988 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 990 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 993 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 994 |                 // Current configuration print out
;     |                          //                                            
; 995 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 997 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1061 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1063 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1065 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1068 |                         case 'A':                               // all 
; 1070 |                                 version = VERSION;                     
; 1071 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1072 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1073 |                                 scia_puts(buff);                       
; 1074 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1075 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1076 |                                 scia_puts(buff);                       
; 1077 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1078 |                                 scia_puts(buff);                       
; 1079 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1080 |                                                 conf_data.uname);      
; 1081 |                                 scia_puts(buff);                       
; 1083 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1084 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1085 |                                 scia_puts(buff);                       
; 1086 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1087 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1088 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1089 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1090 |                                         scia_puts(buff);               
; 1092 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1093 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1094 |                                 scia_puts(buff);                       
; 1096 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1097 |                                                 conf_data.filter);     
; 1098 |                                 scia_puts(buff);                       
; 1100 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1101 |                                         scia_puts("\r\n");             
; 1102 |                                         print_channel(ch);
;     |          // channel info                                               
; 1103 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1106 |                                 scia_puts("\r\n");                     
; 1107 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1108 |                                                 conf_data.velfilter);  
; 1109 |                                 scia_puts(buff);                       
; 1110 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1111 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1112 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1113 |                                         scia_puts(buff);               
; 1115 |                                 print_vfd();                           
; 1116 |                                 print_dac();                           
; 1117 |                                 print_limits();                        
; 1118 |                                 break;                                 
; 1120 |                         case 'S':
;     |  // sensor list                                                        
; 1122 |                                 scia_puts("\r\n");                     
; 1124 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1125 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1126 |                                         scia_puts(buff);               
; 1127 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1129 |                                 break;                                 
; 1131 |                         case 'D':
;     |  // Display settings                                                   
; 1133 |                                 print_vfd();                           
; 1134 |                                 break;                                 
; 1136 |                         case 'O':
;     |  // DAC settings                                                       
; 1138 |                                 print_dac();                           
; 1139 |                                 break;                                 
; 1141 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1143 |                                 print_limits();                        
; 1144 |                                 break;                                 
; 1146 |                         default:                                       
; 1147 |                                 goto INVALIDCMD;                       
; 1150 |                         break;                                         
; 1152 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1153 |                         // Unit config commands
;     |                                  //                                    
; 1154 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1155 |                 case 'U':                                       // Unit
; 1157 |                         if (cmdlen < 2) {                              
; 1158 |                                 goto INVALIDCMD;                       
; 1161 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1164 |                         case 'S':
;     |  // unit serial number                                                 
; 1166 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1167 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1168 |                                 conf_data.usn = atol(cmdbuff);         
; 1170 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1171 |                                 scia_puts(buff);                       
; 1172 |                                 unsaved = 1;                           
; 1173 |                                 break;                                 
; 1175 |                         case 'N':
;     |  // unit name                                                          
; 1177 |                                 j = sizeof(conf_data.uname) - 1;       
; 1178 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1179 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1180 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1182 |                                         cmdlen = j;                    
; 1183 |                                         cmdbuff[j] = '\0';             
; 1185 |                                 // also copy the null terminater       
; 1186 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1187 |                                                 cmdlen + 1);           
; 1188 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1190 |                                 scia_puts(cmdbuff);                    
; 1191 |                                 scia_puts("\r\n");                     
; 1192 |                                 unsaved = 1;                           
; 1193 |                                 break;                                 
; 1195 |                         case 'C':
;     |  // current sensor                                                     
; 1197 |                                 // channel number                      
; 1198 |                                 j = CHS_MAX;                           
; 1199 |                                 do {                                   
; 1200 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1201 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1202 |                                         ch = atoi(cmdbuff);            
; 1203 |                                         scia_puts(cmdbuff);            
; 1204 |                                         if (ch > 0 && ch <= j) {       
; 1205 |                                                 break;
;     |          // valid input channel number                                 
; 1207 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1208 |                                 } while (j);                           
; 1209 |                                 scia_puts("\r\n");                     
; 1210 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1212 |                                 // sensor number                       
; 1213 |                                 j = SENSPCH;                           
; 1214 |                                 do {                                   
; 1215 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1216 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1217 |                                         ss = atoi(cmdbuff);            
; 1218 |                                         scia_puts(cmdbuff);            
; 1219 |                                         if (ss > 0 && ss <= j) {       
; 1220 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1222 |                                                 break;                 
; 1224 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1225 |                                 } while (j);                           
; 1226 |                                 scia_puts("\r\n");                     
; 1227 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1229 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1230 |                                                 ch + 1, ss + 1);       
; 1231 |                                 scia_puts(buff);                       
; 1232 |                                 print_sensor(ss);                      
; 1233 |                                 unsaved = 1;                           
; 1235 |                                 DINT;                                  
; 1236 |                                 conf_data.ch[ch].ci = ss;              
; 1237 |                                 ad7738_setcal();                       
; 1239 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1240 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1241 |                                 EINT;                                  
; 1243 |                                 update_units();                        
; 1244 |                                 break;                                 
; 1246 |                         case 'I':
;     |  // interface                                                          
; 1248 |                                 for (j = 0; j < 4; j++) {              
; 1249 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1250 |                                         scia_puts(buff);               
; 1251 |                                         if (j < 3) {                   
; 1252 |                                                 scia_puts(", ");       
; 1255 |                                 scia_puts("\r\n");                     
; 1256 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1257 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1258 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1259 |                                 scia_puts(cmdbuff);                    
; 1260 |                                 scia_puts("\r\n");                     
; 1261 |                                 if (cmdlen == 0) {                     
; 1262 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1263 |                                         break;                         
; 1265 |                                 pt = atoi(cmdbuff);                    
; 1266 |                                 if (pt > 3) {                          
; 1267 |                                         scia_puts(                     
; 1268 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1269 |                                         break;                         
; 1271 |                                 conf_data.rxdir = pt;                  
; 1272 |                                 sprintf(buff,                          
; 1273 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1274 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1275 |                                 scia_puts(buff);                       
; 1276 |                                 scia_puts(                             
; 1277 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1278 |                                 unsaved = 1;                           
; 1279 |                                 break;                                 
; 1281 |                         case 'B':
;     |  // baudrate                                                           
; 1283 |                                 if (conf_data.rxdir == SDIR_USB        
; 1284 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1285 |                                         scia_puts(                     
; 1286 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1287 |                                         break;                         
; 1290 |                                 for (j = 0; j < 8; j++) {              
; 1291 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1292 |                                         scia_puts(buff);               
; 1293 |                                         if (j < 7) {                   
; 1294 |                                                 scia_puts(", ");       
; 1297 |                                 scia_puts("\r\n");                     
; 1298 |                                 cmdlen = sprintf(buff,                 
; 1299 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1300 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1301 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1302 |                                 scia_puts(cmdbuff);                    
; 1303 |                                 scia_puts("\r\n");                     
; 1304 |                                 if (cmdlen == 0) {                     
; 1305 |                                         scia_puts(                     
; 1306 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1307 |                                         break;                         
; 1309 |                                 pt = atoi(cmdbuff);                    
; 1310 |                                 if (pt > 7) {                          
; 1311 |                                         scia_puts(                     
; 1312 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1313 |                                         break;                         
; 1315 |                                 conf_data.baud = pt;                   
; 1316 |                                 sprintf(buff,                          
; 1317 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1318 |                                                 BAUD[conf_data.baud]); 
; 1319 |                                 scia_puts(buff);                       
; 1320 |                                 scia_puts(                             
; 1321 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1322 |                                 unsaved = 1;                           
; 1323 |                                 break;                                 
; 1325 |                         case 'F':
;     |  // averaging filter size                                              
; 1327 |                                 j = MAF_MAX;                           
; 1328 |                                 do {                                   
; 1329 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1330 |                                                         j);            
; 1331 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1332 |                                         i = atoi(cmdbuff);             
; 1333 |                                         scia_puts(cmdbuff);            
; 1334 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1335 |                                                 break;
;     |          // valid number input                                         
; 1337 |                                         scia_puts(                     
; 1338 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1339 |                                 } while (j);                           
; 1340 |                                 scia_puts("\r\n");                     
; 1342 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1343 |                                                 i);                    
; 1344 |                                 scia_puts(buff);                       
; 1345 |                                 unsaved = 1;                           
; 1347 |                                 // update new value                    
; 1348 |                                 DINT;                                  
; 1349 |                                 conf_data.filter = i;                  
; 1350 |                                 maf_rst();                             
; 1351 |                                 EINT;                                  
; 1352 |                                 break;                                 
; 1354 |                         case 'W':
;     |  // diff window ratio                                                  
; 1356 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1357 |                                                 conf_data.diffwin);    
; 1358 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1359 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1360 |                                 scia_puts(cmdbuff);                    
; 1361 |                                 scia_puts("\r\n");                     
; 1363 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1364 |                                                 conf_data.diffwin);    
; 1365 |                                 scia_puts(buff);                       
; 1366 |                                 unsaved = 1;                           
; 1368 |                                 DINT;                                  
; 1369 |                                 ad7738_setcal();                       
; 1370 |                                 maf_rst();                             
; 1371 |                                 EINT;                                  
; 1372 |                                 break;                                 
; 1374 |                         default:                                       
; 1375 |                                 goto INVALIDCMD;                       
; 1378 |                         break;                                         
; 1380 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1381 |                         // Board calibration
;     |                                  //                                    
; 1382 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1383 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1385 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1386 |                                 goto INVALIDCMD;                       
; 1389 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1390 |                                 goto INVALIDCMD;                       
; 1391 |                                 // invalid calibration method          
; 1394 |                         // channel index                               
; 1395 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1396 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1397 |                                 goto INVALIDCMD;                       
; 1398 |                                 // invalid channel number              
; 1400 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1402 |                         volt[0] = 0;                                   
; 1403 |                         volt[1] = 0;                                   
; 1404 |                         for (j = 3; j < cmdlen; j++) {                 
; 1405 |                                 if (cmdbuff[j] == 'X') {               
; 1406 |                                         j++;                           
; 1407 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1410 |                                 if (cmdbuff[j] == 'Y') {               
; 1411 |                                         j++;                           
; 1412 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1416 |                         if (volt[0] == volt[1]) {                      
; 1417 |                                 goto INVALIDCMD;                       
; 1418 |                                 // invalid parameters                  
; 1421 |                         lcd_clear();                                   
; 1422 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1423 |                         lcd_puts(buff, 20);                            
; 1424 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1425 |                         lcd_puts(buff, 40);                            
; 1426 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1427 |                         lcd_puts(buff, 60);                            
; 1429 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1432 |                         case 'C':
;     |  // board ADC calibration                                              
; 1434 |                                 lcd_puts("Board Calibration...", 0);   
; 1436 |                                 sprintf(buff,                          
; 1437 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1438 |                                                 ch + 1);               
; 1439 |                                 scia_puts(buff);                       
; 1451 |                                 for (j = 0; j < 2; j++) {              
; 1452 |                                         sprintf(buff,                  
; 1453 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1454 |                                                         volt[j]);      
; 1455 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1456 |                                         scia_puts("Reading ... ");     
; 1458 |                                         dsum[j] = 0;                   
; 1459 |                                         sampcnt = CAL_SAMPLES;         
; 1460 |                                         while (sampcnt--) {            
; 1461 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1462 |                                                         delay_us(1);
;     |                  // wait                                               
; 1464 |                                                 cntp = ad7738_getraw();
; 1465 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1468 |                                         scia_puts("done\r\n");         
; 1471 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1472 |                                                 / (dsum[1] - dsum[0]); 
; 1474 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1475 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1476 |                                 scia_puts(buff);                       
; 1477 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1478 |                                 break;                                 
; 1480 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1482 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1483 |                                                 || volt[1] < -10) {    
; 1484 |                                         lcd_clear();                   
; 1485 |                                         update_units();                
; 1486 |                                         goto INVALIDCMD;               
; 1487 |                                         // invalid parameters          
; 1490 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1492 |                                 sprintf(buff,                          
; 1493 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1494 |                                                 ch + 1);               
; 1495 |                                 scia_puts(buff);                       
; 1496 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1497 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1499 |                                 for (j = 0; j < 2; j++) {              
; 1500 |                                         if (volt[j] < 0) {             
; 1501 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1502 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1503 |                                         } else {                       
; 1504 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1505 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1507 |                                         if (dsum[0] <= 0) {            
; 1508 |                                                 dacc[j] = 0;           
; 1509 |                                         } else if (dsum[0] >= 0xffff) {
; 1510 |                                                 dacc[j] = 0xffff;      
; 1511 |                                         } else {                       
; 1512 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1515 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1516 |                                         scia_puts(buff);               
; 1517 |                                         cmdbuff[0] = '\0';             
; 1519 |                                         do {                           
; 1520 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1521 |                                                 latch_dac();           
; 1523 |                                                 do {                   
; 1524 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1525 | 
;     |  sizeof(cmdbuff));                                                     
; 1526 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1527 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1529 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1530 |                                                         break;
;     |                  // done                                               
; 1533 |                                                 i = atoi(cmdbuff + 1); 
; 1534 |                                                 if (i == 0) {          
; 1535 |                                                         i = 1;         
; 1538 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1540 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1541 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1542 |                                                         } else {       
; 1543 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1545 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1547 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1548 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1549 |                                                         } else {       
; 1550 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1553 |                                         } while (i);                   
; 1555 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1556 |                                         scia_puts(buff);               
; 1559 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1561 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1562 |                                 cmdbuff[0] = '\0';                     
; 1564 |                                 do {                                   
; 1565 |                                         mcbsp_xmit(dacc[2], ch);       
; 1566 |                                         latch_dac();                   
; 1568 |                                         do {                           
; 1569 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1570 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1571 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1573 |                                         if ('S' == cmdbuff[0]) {       
; 1574 |                                                 break;
;     |          // done                                                       
; 1577 |                                         i = atoi(cmdbuff + 1);         
; 1578 |                                         if (i == 0) {                  
; 1579 |                                                 i = 1;                 
; 1582 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1584 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1585 |                                                         dacc[2] += i;  
; 1586 |                                                 } else {               
; 1587 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1589 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1591 |                                                 if (dacc[2] >= i) {    
; 1592 |                                                         dacc[2] -= i;  
; 1593 |                                                 } else {               
; 1594 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1597 |                                 } while (i);                           
; 1599 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1600 |                                 scia_puts(buff);                       
; 1602 |                                 // do the calculations                 
; 1603 |                                 if (volt[0] < 0) {                     
; 1604 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1605 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1606 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1607 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1608 |                                 } else {                               
; 1609 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1610 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1611 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1612 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1614 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1616 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1618 |                                 sprintf(buff,                          
; 1619 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1620 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1621 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1622 |                                 scia_puts(buff);                       
; 1624 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1625 |                                 break;                                 
; 1627 |                         default:                                       
; 1628 |                                 goto INVALIDCMD;                       
; 1631 |                         unsaved = 1;                                   
; 1632 |                         lcd_clear();                                   
; 1633 |                         update_units();                                
; 1635 |                         DINT;                                          
; 1636 |                         ad7738_setcal();                               
; 1637 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1638 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1639 |                         EINT;                                          
; 1640 |                         break;                                         
; 1642 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1643 |                         // Channel sensor calibration
;     |                                  //                                    
; 1644 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1645 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1647 |                         if (cmdlen < 2) {                              
; 1648 |                                 goto INVALIDCMD;                       
; 1651 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1652 |                                         && 'S' != cmdbuff[1]) {        
; 1653 |                                 goto INVALIDCMD;                       
; 1654 |                                 // invalid calibration method          
; 1656 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1658 |                         lcd_clear();                                   
; 1659 |                         lcd_puts("Sensor Calibration..", 0);           
; 1661 |                         // === read informations ====                  
; 1662 |                         // channel number                              
; 1663 |                         j = CHS_MAX;                                   
; 1664 |                         do {                                           
; 1665 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1666 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1667 |                                 ch = atoi(cmdbuff);                    
; 1668 |                                 scia_puts(cmdbuff);                    
; 1669 |                                 if (ch > 0 && ch <= j) {               
; 1670 |                                         break;
;     |  // valid input channel number                                         
; 1672 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1673 |                         } while (j);                                   
; 1674 |                         scia_puts("\r\n");                             
; 1675 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1677 |                         // sensor number                               
; 1678 |                         j = SENSPCH;                                   
; 1679 |                         do {                                           
; 1680 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1681 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1682 |                                 ss = atoi(cmdbuff);                    
; 1683 |                                 scia_puts(cmdbuff);                    
; 1684 |                                 if (ss > 0 && ss <= j) {               
; 1685 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1687 |                                         break;                         
; 1689 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1690 |                         } while (j);                                   
; 1691 |                         scia_puts("\r\n");                             
; 1692 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1694 |                         // put on the vfd                              
; 1695 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1696 |                         lcd_puts(buff, 20);                            
; 1698 |                         // sensor serial number                        
; 1699 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1700 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1701 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1702 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1704 |                                 cmdlen = j;                            
; 1705 |                                 cmdbuff[j] = '\0';                     
; 1707 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1708 |                         scia_puts(cmdbuff);                            
; 1709 |                         scia_puts("\r\n");                             
; 1711 |                         // sensor label                                
; 1712 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1713 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1714 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1715 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1717 |                                 cmdlen = j;                            
; 1718 |                                 cmdbuff[j] = '\0';                     
; 1720 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1721 |                         scia_puts(cmdbuff);                            
; 1722 |                         scia_puts("\r\n");                             
; 1724 |                         // unit                                        
; 1725 |                         for (j = 0; j < 7; j++) {                      
; 1726 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1728 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1729 |                         scia_puts(buff);                               
; 1730 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1731 |                                         sizeof(cmdbuff));              
; 1732 |                         tsensor.unit = atoi(cmdbuff);                  
; 1734 |                         switch (tsensor.unit) {                        
; 1735 |                         case 0:                                 // lb  
; 1736 |                         case 1:                                 // kg  
; 1737 |                                 tsensor.unit |= 0x10;                  
; 1738 |                                 break;                                 
; 1739 |                         case 2:                                 // in  
; 1740 |                         case 3:                                 // cm  
; 1741 |                         case 4:                                 // mm  
; 1742 |                                 tsensor.unit |= 0x20;                  
; 1743 |                                 break;                                 
; 1744 |                         case 5:                                 // ps  
; 1745 |                                 tsensor.unit |= 0x30;                  
; 1746 |                                 break;                                 
; 1747 |                         case 6:                                 // nm  
; 1748 |                                 tsensor.unit |= 0x40;                  
; 1749 |                                 break;                                 
; 1750 |                         case 7:                                        
; 1751 |                         case 8:                                        
; 1752 |                         case 15:                                       
; 1753 |                                 tsensor.unit |= 0xf0;                  
; 1754 |                                 break;                                 
; 1755 |                         default:                                       
; 1756 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1757 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1758 |                                 break;                                 
; 1760 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1761 |                         tsensor.ufactor = 1;                    // 1:1 
; 1763 |                         scia_puts(cmdbuff);                            
; 1764 |                         scia_puts("\r\n");                             
; 1766 |                         // range                                       
; 1767 |                         j = 1;                                         
; 1768 |                         do {                                           
; 1769 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1770 |                                 tsensor.range = atof(cmdbuff);         
; 1771 |                                 if (tsensor.range != 0) {              
; 1772 |                                         break;                         
; 1774 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1775 |                         } while (j);                                   
; 1776 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1777 |                         scia_puts(cmdbuff);                            
; 1778 |                         scia_puts("\r\n");                             
; 1780 |                         tsensor.tagid = tagid(ch);                     
; 1782 |                         if (tsensor.tagid == 0) {                      
; 1783 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1784 |                         } else {                                       
; 1785 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1787 |                         scia_puts(buff);                               
; 1789 |                         switch (cmethod)
;     |  // on method code                                                     
; 1792 |                         case 'V':
;     |  // mv/v cal                                                           
; 1794 |                                 lcd_puts("Method: mv/v", 40);          
; 1796 |                                 tsensor.method = MD_RUN_MVV;           
; 1797 |                                 tsensor.points = 1;                    
; 1799 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1800 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1801 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1802 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1803 |                                 if (tsensor.slope[0] == 0) {           
; 1804 |                                         tsensor.slope[0] = 1;          
; 1806 |                                 scia_puts(cmdbuff);                    
; 1807 |                                 scia_puts("\r\n");                     
; 1809 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1810 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1812 |                                 scia_puts("Reading ... ");             
; 1814 |                                 dsum[0] = 0;                           
; 1815 |                                 sampcnt = CAL_SAMPLES;                 
; 1816 |                                 while (sampcnt--) {                    
; 1817 |                                         while (0 == ad7738_rawrdy()) { 
; 1818 |                                                 delay_us(1);
;     |          // wait                                                       
; 1821 |                                         cntp = ad7738_getraw();        
; 1822 |                                         dsum[0] += cntp->adc[ch];      
; 1824 |                                 scia_puts("done\r\n");                 
; 1826 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1827 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1828 |                                 break;                                 
; 1830 |                         case 'M':
;     |  // mass cal                                                           
; 1832 |                                 tsensor.method = MD_RUN_MAS;           
; 1834 |                                 // calibration points for mass cal only
; 1835 |                                 j = PNT_MAX;                           
; 1836 |                                 do {                                   
; 1837 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1838 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1839 |                                         tsensor.points = atoi(cmdbuff);
; 1840 |                                         scia_puts(cmdbuff);            
; 1841 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1842 |                                                 break;                 
; 1844 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1846 |                                 } while (j);                           
; 1847 |                                 scia_puts("\r\n");                     
; 1849 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1850 |                                 lcd_puts(buff, 40);                    
; 1852 |                                 // calculate the default point values  
; 1853 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1854 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1855 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1858 |                                 // read in value with default provided 
; 1859 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1860 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1861 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1862 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1864 |                                         // zero length response set the
;     |  default                                                               
; 1865 |                                         if (cmdlen > 0) {              
; 1866 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1868 |                                         scia_puts(cmdbuff);            
; 1869 |                                         scia_puts("\r\n");             
; 1872 |                                 // TODO: sort the list of points       
; 1874 |                                 // read adc count for each point       
; 1875 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1876 |                                         sprintf(buff,                  
; 1877 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1878 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1879 |                                                         j + 1);        
; 1880 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1881 |                                         scia_puts("Reading ... ");     
; 1883 |                                         dsum[0] = 0;                   
; 1884 |                                         sampcnt = CAL_SAMPLES;         
; 1885 |                                         while (sampcnt--) {            
; 1886 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1887 |                                                         delay_us(1);
;     |                  // wait                                               
; 1890 |                                                 cntp = ad7738_getraw();
; 1891 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1893 |                                         scia_puts("done\r\n");         
; 1894 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1897 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1898 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1899 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1900 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1901 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1902 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1903 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1904 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1905 | 
;     |  * tsensor.adc[j];                                                     
; 1907 |                                 break;                                 
; 1909 |                         case 'S':
;     |  // shunt cal                                                          
; 1911 |                                 lcd_puts("Method: shunt", 40);         
; 1913 |                                 tsensor.method = MD_RUN_SHT;           
; 1914 |                                 tsensor.points = 1;                    
; 1916 |                                 sprintf(buff,                          
; 1917 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1918 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1919 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1920 |                                 scia_puts(cmdbuff);                    
; 1921 |                                 scale = atof(cmdbuff);                 
; 1922 |                                 if (scale == 0) {                      
; 1923 |                                         scale = 1.46;                  
; 1924 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1926 |                                 scia_puts("\r\n");                     
; 1928 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1929 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1931 |                                 scia_puts("Reading ... ");             
; 1933 |                                 for (j = 0; j < 2; j++) {              
; 1934 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1936 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1937 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1938 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1940 |                                                 DINT;                  
; 1941 |                                                 maf_rst();             
; 1942 |                                                 EINT;                  
; 1943 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1946 |                                         dsum[j] = 0;                   
; 1947 |                                         sampcnt = CAL_SAMPLES;         
; 1948 |                                         while (sampcnt--) {            
; 1949 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1950 |                                                         delay_us(1);
;     |                  // wait                                               
; 1953 |                                                 cntp = ad7738_getraw();
; 1954 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1958 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1959 |                                 DINT;                                  
; 1960 |                                 maf_rst();                             
; 1961 |                                 EINT;                                  
; 1963 |                                 scia_puts("done\r\n");                 
; 1965 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1966 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1967 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1968 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1969 |                                 break;                                 
; 1971 |                         default:                                       
; 1972 |                                 lcd_clear();                           
; 1973 |                                 update_units();                        
; 1974 |                                 goto INVALIDCMD;                       
; 1977 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1978 |                         scia_getparam(                                 
; 1979 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1980 |                                         cmdbuff, sizeof(cmdbuff));     
; 1981 |                         scia_puts("Reading ... ");                     
; 1983 |                         for (j = 0; j < 2; j++) {                      
; 1984 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 1986 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 1987 |                                         for (i = 0; i < 50; i++) {     
; 1988 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 1990 |                                         DINT;                          
; 1991 |                                         maf_rst();                     
; 1992 |                                         EINT;                          
; 1993 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 1996 |                                 dsum[j] = 0;                           
; 1997 |                                 sampcnt = CAL_SAMPLES;                 
; 1998 |                                 while (sampcnt--) {                    
; 1999 |                                         while (0 == ad7738_rawrdy()) { 
; 2000 |                                                 delay_us(1);
;     |          // wait                                                       
; 2003 |                                         cntp = ad7738_getraw();        
; 2004 |                                         dsum[j] += cntp->adc[ch];      
; 2006 |                                 dsum[j] /= CAL_SAMPLES;                
; 2008 |                                 pt = 0;                                
; 2009 |                                 if (tsensor.points > 2) {              
; 2010 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2011 |                                                 pt++;                  
; 2014 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2015 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2018 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2019 |                         DINT;                                          
; 2020 |                         maf_rst();                                     
; 2021 |                         EINT;                                          
; 2023 |                         scia_puts("done\r\n");                         
; 2025 |                         tsensor.shunt = volt[1] - volt[0];             
; 2027 |                         // setup some other members of the structure   
; 2028 |                         tsensor.tare = 0;                              
; 2029 |                         tsensor.dacgain = 1;                           
; 2030 |                         tsensor.dacoff = 0;                            
; 2031 |                         tsensor.ch = ch;                               
; 2033 |                         DINT;                                          
; 2034 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2035 |                                         sizeof(sconf_t));              
; 2037 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2039 |                         ad7738_setcal();                               
; 2040 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2041 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2042 |                         EINT;                                          
; 2044 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2045 |                                         ch + 1, ss + 1);               
; 2046 |                         scia_puts(buff);                               
; 2047 |                         print_sensor(ss);                              
; 2049 |                         unsaved = 1;                                   
; 2050 |                         lcd_clear();                                   
; 2051 |                         update_units();                                
; 2052 |                         break;                                         
; 2054 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2055 |                         // sensor config commands
;     |                                          //                            
; 2056 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2057 |                 case 'S':                               // sensor      
; 2059 |                         if (cmdlen < 2) {                              
; 2060 |                                 goto INVALIDCMD;                       
; 2063 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2064 |                                         && 'D' != cmdbuff[1]) {        
; 2065 |                                 goto INVALIDCMD;                       
; 2066 |                                 // invalid command                     
; 2068 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2088 |                         // sensor number                               
; 2089 |                         j = SENSPCH;                                   
; 2090 |                         do {                                           
; 2091 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2092 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2093 |                                 ss = atoi(cmdbuff);                    
; 2094 |                                 scia_puts(cmdbuff);                    
; 2095 |                                 if (ss > 0 && ss <= j) {               
; 2096 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2098 |                                         break;                         
; 2100 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2101 |                         } while (j);                                   
; 2102 |                         scia_puts("\r\n");                             
; 2103 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2105 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2108 |                         case 'N':
;     |  // change sensor label                                                
; 2110 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2111 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2112 |                                                 ss + 1, j);            
; 2113 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2114 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2116 |                                         cmdlen = j;                    
; 2117 |                                         cmdbuff[j] = '\0';             
; 2119 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2120 |                                                 cmdlen + 1);           
; 2121 |                                 scia_puts(cmdbuff);                    
; 2122 |                                 scia_puts("\r\n");                     
; 2123 |                                 unsaved = 1;                           
; 2125 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2126 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2127 |                                 scia_puts(buff);                       
; 2128 |                                 break;                                 
; 2130 |                         case 'U':
;     |  // change the output unit                                             
; 2132 |                                 scale = 0;                             
; 2134 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2135 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2137 |                                         do {                           
; 2138 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2139 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2140 |                                                 j = atoi(cmdbuff);     
; 2141 |                                                 scia_puts(cmdbuff);    
; 2142 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2143 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2145 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2146 |                                         scia_puts("\r\n");             
; 2148 |                                         switch (j) {                   
; 2149 |                                         case 0:                        
; 2150 |                                                 scale = 1;             
; 2151 |                                                 j |= 0x10;             
; 2152 |                                                 break;                 
; 2153 |                                         case 1:                        
; 2154 |                                                 scale = LB_TO_KG;      
; 2155 |                                                 j |= 0x10;             
; 2156 |                                                 break;                 
; 2157 |                                         case 7:                        
; 2158 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2159 |                                                 j |= 0xf0;             
; 2160 |                                                 break;                 
; 2162 |                                         break;                         
; 2164 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2166 |                                         do {                           
; 2167 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2168 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2169 |                                                 j = atoi(cmdbuff);     
; 2170 |                                                 scia_puts(cmdbuff);    
; 2171 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2172 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2174 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2175 |                                         scia_puts("\r\n");             
; 2177 |                                         switch (j) {                   
; 2178 |                                         case 0:                        
; 2179 |                                                 scale = 1.0 / LB_TO_KG;
; 2180 |                                                 j |= 0x10;             
; 2181 |                                                 break;                 
; 2182 |                                         case 1:                        
; 2183 |                                                 scale = 1;             
; 2184 |                                                 j |= 0x10;             
; 2185 |                                                 break;                 
; 2186 |                                         case 7:                        
; 2187 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2188 |                                                 j |= 0xf0;             
; 2189 |                                                 break;                 
; 2191 |                                         break;                         
; 2193 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2195 |                                         do {                           
; 2196 |                                                 scia_getparam(         
; 2197 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2198 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2199 |                                                 j = atoi(cmdbuff);     
; 2200 |                                                 scia_puts(cmdbuff);    
; 2201 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2202 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2204 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2205 |                                         scia_puts("\r\n");             
; 2207 |                                         switch (j) {                   
; 2208 |                                         case 2:                        
; 2209 |                                                 scale = 1;             
; 2210 |                                                 j |= 0x20;             
; 2211 |                                                 break;                 
; 2212 |                                         case 3:                        
; 2213 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2214 |                                                 j |= 0x20;             
; 2215 |                                                 break;                 
; 2216 |                                         case 4:                        
; 2217 |                                                 scale = IN_TO_MM;      
; 2218 |                                                 j |= 0x20;             
; 2219 |                                                 break;                 
; 2220 |                                         case 7:                        
; 2221 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2222 |                                                 j |= 0xf0;             
; 2223 |                                                 break;                 
; 2225 |                                         break;                         
; 2227 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2229 |                                         do {                           
; 2230 |                                                 scia_getparam(         
; 2231 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2232 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2233 |                                                 j = atoi(cmdbuff);     
; 2234 |                                                 scia_puts(cmdbuff);    
; 2235 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2236 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2238 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2239 |                                         scia_puts("\r\n");             
; 2241 |                                         switch (j) {                   
; 2242 |                                         case 2:                        
; 2243 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2244 |                                                 j |= 0x20;             
; 2245 |                                                 break;                 
; 2246 |                                         case 3:                        
; 2247 |                                                 scale = 1;             
; 2248 |                                                 j |= 0x20;             
; 2249 |                                                 break;                 
; 2250 |                                         case 4:                        
; 2251 |                                                 scale = 10;            
; 2252 |                                                 j |= 0x20;             
; 2253 |                                                 break;                 
; 2254 |                                         case 7:                        
; 2255 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2256 |                                                 j |= 0xf0;             
; 2257 |                                                 break;                 
; 2259 |                                         break;                         
; 2261 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2263 |                                         do {                           
; 2264 |                                                 scia_getparam(         
; 2265 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2266 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2267 |                                                 j = atoi(cmdbuff);     
; 2268 |                                                 scia_puts(cmdbuff);    
; 2269 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2270 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2272 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2273 |                                         scia_puts("\r\n");             
; 2275 |                                         switch (j) {                   
; 2276 |                                         case 2:                        
; 2277 |                                                 scale = 1.0 / IN_TO_MM;
; 2278 |                                                 j |= 0x20;             
; 2279 |                                                 break;                 
; 2280 |                                         case 3:                        
; 2281 |                                                 scale = 0.1;           
; 2282 |                                                 j |= 0x20;             
; 2283 |                                                 break;                 
; 2284 |                                         case 4:                        
; 2285 |                                                 scale = 1;             
; 2286 |                                                 j |= 0x20;             
; 2287 |                                                 break;                 
; 2288 |                                         case 7:                        
; 2289 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2290 |                                                 j |= 0xf0;             
; 2291 |                                                 break;                 
; 2293 |                                         break;                         
; 2295 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2297 |                                         do {                           
; 2298 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2299 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2300 |                                                 j = atoi(cmdbuff);     
; 2301 |                                                 scia_puts(cmdbuff);    
; 2302 |                                                 if (j != 5 && j != 7) {
; 2303 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2305 |                                         } while (j != 5 && j != 7);    
; 2306 |                                         scia_puts("\r\n");             
; 2308 |                                         switch (j) {                   
; 2309 |                                         case 5:                        
; 2310 |                                                 scale = 1;             
; 2311 |                                                 j |= 0x30;             
; 2312 |                                                 break;                 
; 2313 |                                         case 7:                        
; 2314 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2315 |                                                 j |= 0xf0;             
; 2316 |                                                 break;                 
; 2318 |                                         break;                         
; 2320 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2322 |                                         do {                           
; 2323 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2324 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2325 |                                                 j = atoi(cmdbuff);     
; 2326 |                                                 scia_puts(cmdbuff);    
; 2327 |                                                 if (j != 6 && j != 7) {
; 2328 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2330 |                                         } while (j != 6 && j != 7);    
; 2331 |                                         scia_puts("\r\n");             
; 2333 |                                         switch (j) {                   
; 2334 |                                         case 6:                        
; 2335 |                                                 scale = 1;             
; 2336 |                                                 j |= 0x40;             
; 2337 |                                                 break;                 
; 2338 |                                         case 7:                        
; 2339 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2340 |                                                 j |= 0xf0;             
; 2341 |                                                 break;                 
; 2343 |                                         break;                         
; 2345 |                                 default:                               
; 2346 |                                         break;                         
; 2349 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2350 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2351 |                                         break;                         
; 2354 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2355 |                                         scia_puts(                     
; 2356 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2357 |                                         break;                         
; 2360 |                                 conf_data.sensor[ss].ounit = j;        
; 2361 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2362 |                                 unsaved = 1;                           
; 2364 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2365 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2366 |                                 scia_puts(buff);                       
; 2368 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2369 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2370 |                                                 update_units();        
; 2371 |                                                 DINT;                  
; 2372 |                                                 ad7738_setcal();       
; 2373 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2374 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2375 |                                                 EINT;                  
; 2378 |                                 break;                                 
; 2380 |                         case 'B':
;     |  // change percent base                                                
; 2382 |                                 // base                                
; 2383 |                                 j = 1;                                 
; 2384 |                                 do {                                   
; 2385 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2386 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2387 |                                         scale = atof(cmdbuff);         
; 2388 |                                         scia_puts(cmdbuff);            
; 2389 |                                         if (scale != 0) {              
; 2390 |                                                 break;                 
; 2392 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2393 |                                 } while (j);                           
; 2394 |                                 scia_puts("\r\n");                     
; 2395 |                                 conf_data.sensor[ss].base = scale;     
; 2396 |                                 unsaved = 1;                           
; 2398 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2399 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2400 |                                 scia_puts(buff);                       
; 2402 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2403 |                                         // output unit is percent      
; 2404 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2405 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2407 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2408 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2409 |                                                         // changed is f
;     | or the current sensor                                                  
; 2410 |                                                         DINT;          
; 2411 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2412 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2413 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2414 |                                                         EINT;          
; 2418 |                                 break;                                 
; 2420 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2422 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2423 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2424 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2425 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2426 |                                 scia_puts(cmdbuff);                    
; 2427 |                                 scia_puts("\r\n");                     
; 2429 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2430 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2431 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2432 |                                 scia_puts(cmdbuff);                    
; 2433 |                                 scia_puts("\r\n");                     
; 2434 |                                 unsaved = 1;                           
; 2436 |                                 sprintf(buff,                          
; 2437 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2438 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2439 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2440 |                                 scia_puts(buff);                       
; 2442 |                                 DINT;                                  
; 2443 |                                 ad7738_setcal();                       
; 2444 |                                 EINT;                                  
; 2445 |                                 break;                                 
; 2447 |                         default:                                       
; 2448 |                                 goto INVALIDCMD;                       
; 2451 |                         break;                                         
; 2453 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2454 |                         // Encoder config commands
;     |                                  //                                    
; 2455 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2456 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2458 |                         if (cmdlen < 2) {                              
; 2459 |                                 goto INVALIDCMD;                       
; 2462 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2465 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2467 |                                 j = MAF_MAX;                           
; 2468 |                                 do {                                   
; 2469 |                                         sprintf(buff,                  
; 2470 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2471 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2472 |                                         i = atoi(cmdbuff);             
; 2473 |                                         scia_puts(cmdbuff);            
; 2474 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2475 |                                                 break;
;     |          // valid number input                                         
; 2477 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2478 |                                 } while (j);                           
; 2479 |                                 scia_puts("\r\n");                     
; 2481 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2482 |                                                 i);                    
; 2483 |                                 scia_puts(buff);                       
; 2484 |                                 unsaved = 1;                           
; 2486 |                                 // update new value                    
; 2487 |                                 DINT;                                  
; 2488 |                                 conf_data.velfilter = i;               
; 2489 |                                 ad7738_setcal();                       
; 2490 |                                 velf_rst();                            
; 2491 |                                 EINT;                                  
; 2492 |                                 break;                                 
; 2494 |                         case 'P':
;     |  // count per inch                                                     
; 2496 |                                 // channel number                      
; 2497 |                                 j = ENC_MAX;                           
; 2498 |                                 do {                                   
; 2499 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2500 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2501 |                                         ss = atoi(cmdbuff);            
; 2502 |                                         scia_puts(cmdbuff);            
; 2503 |                                         if (ss > 0 && ss <= j) {       
; 2504 |                                                 break;
;     |          // valid input line number                                    
; 2506 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2507 |                                 } while (j);                           
; 2508 |                                 scia_puts("\r\n");                     
; 2509 |                                 ss--;
;     |  // line number, convert to index                                      
; 2511 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2512 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2513 |                                 templg = atol(cmdbuff);                
; 2514 |                                 scia_puts(cmdbuff);                    
; 2515 |                                 scia_puts("\r\n");                     
; 2516 |                                 if (templg == 0) {                     
; 2517 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2518 |                                         break;                         
; 2520 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2521 |                                                 ss + 1, templg);       
; 2522 |                                 scia_puts(buff);                       
; 2523 |                                 unsaved = 1;                           
; 2525 |                                 // update new value                    
; 2526 |                                 DINT;                                  
; 2527 |                                 conf_data.cntperin[ss] = templg;       
; 2528 |                                 ad7738_setcal();                       
; 2529 |                                 velf_rst();                            
; 2530 |                                 EINT;                                  
; 2531 |                                 break;                                 
; 2533 |                         break;                                         
; 2535 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2536 |                         // Display command
;     |                                  //                                    
; 2537 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2538 |                 case 'D':                                              
; 2540 |                         if (cmdlen < 2) {                              
; 2541 |                                 goto INVALIDCMD;                       
; 2544 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2546 |                         case 'S':
;     |  // selection                                                          
; 2548 |                                 // line number                         
; 2549 |                                 j = VFD_MAX;                           
; 2550 |                                 do {                                   
; 2551 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2552 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2553 |                                         ss = atoi(cmdbuff);            
; 2554 |                                         scia_puts(cmdbuff);            
; 2555 |                                         if (ss > 0 && ss <= j) {       
; 2556 |                                                 break;
;     |          // valid input line number                                    
; 2558 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2559 |                                 } while (j);                           
; 2560 |                                 scia_puts("\r\n");                     
; 2561 |                                 ss--;
;     |  // line number, convert to index                                      
; 2563 |                                 // what                                
; 2564 |                                 for (j = 0; j < 7; j++) {              
; 2565 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2566 |                                         scia_puts(buff);               
; 2567 |                                         if (j < 6) {                   
; 2568 |                                                 scia_puts(", ");       
; 2571 |                                 scia_puts("\r\n");                     
; 2572 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2573 |                                                 ss + 1);               
; 2574 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2575 |                                 pt = atoi(cmdbuff);                    
; 2576 |                                 if (pt >= 7) {                         
; 2577 |                                         pt = 0;                        
; 2578 |                                         scia_puts(                     
; 2579 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2581 |                                 scia_puts(cmdbuff);                    
; 2582 |                                 scia_puts("\r\n");                     
; 2583 |                                 conf_data.vfd[ss].what = pt;           
; 2585 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2587 |                                 case VFD_LOAD:                         
; 2588 |                                 case VFD_PEAK:                         
; 2589 |                                 case VFD_VALL:                         
; 2591 |                                         j = CHS_MAX;                   
; 2592 |                                         goto VFD_CHANNEL;              
; 2594 |                                 case VFD_POSI:                         
; 2595 |                                 case VFD_VELO:                         
; 2597 |                                         j = ENC_MAX;                   
; 2599 |                                         VFD_CHANNEL:                   
; 2600 |                                         // channel number              
; 2601 |                                         do {                           
; 2602 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2603 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2604 |                                                 ch = atoi(cmdbuff);    
; 2605 |                                                 scia_puts(cmdbuff);    
; 2606 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2607 |                                                         break;
;     |          // valid input channel number                                 
; 2609 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2610 |                                         } while (j);                   
; 2611 |                                         scia_puts("\r\n");             
; 2612 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2613 |                                         conf_data.vfd[ss].ch = ch;     
; 2615 |                                         // digits after decimal point  
; 2616 |                                         j = 1;                         
; 2617 |                                         do {                           
; 2618 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2619 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2620 |                                                 i = atoi(cmdbuff);     
; 2621 |                                                 if (i >= 0 && i <= 5) {
; 2622 |                                                         break;         
; 2624 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2625 |                                         } while (j);                   
; 2626 |                                         scia_puts(cmdbuff);            
; 2627 |                                         scia_puts("\r\n");             
; 2628 |                                         conf_data.vfd[ss].adec = i;    
; 2630 |                                         sprintf(buff,                  
; 2631 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2632 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2633 |                                         scia_puts(buff);               
; 2634 |                                         break;                         
; 2636 |                                 case VFD_LIMIT:                        
; 2637 |                                         // channel number              
; 2638 |                                         j = CHS_MAX;                   
; 2639 |                                         do {                           
; 2640 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2641 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2642 |                                                 ch = atoi(cmdbuff);    
; 2643 |                                                 scia_puts(cmdbuff);    
; 2644 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2645 |                                                         break;
;     |          // valid input channel number                                 
; 2647 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2648 |                                         } while (j);                   
; 2649 |                                         scia_puts("\r\n");             
; 2650 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2651 |                                         conf_data.vfd[ss].ch = ch;     
; 2653 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2654 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2655 |                                         scia_puts(buff);               
; 2656 |                                         break;                         
; 2657 |                                 case VFD_TEMP:                         
; 2658 |                                         // no more info                
; 2659 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2660 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2661 |                                         scia_puts(buff);               
; 2662 |                                         break;                         
; 2665 |                                 lcd_clear();                           
; 2666 |                                 update_units();                        
; 2667 |                                 unsaved = 1;                           
; 2668 |                                 break;                                 
; 2670 |                         default:                                       
; 2671 |                                 goto INVALIDCMD;                       
; 2674 |                         break;                                         
; 2676 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2677 |                         // DAC out command
;     |                                  //                                    
; 2678 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2679 |                 case 'O':                                              
; 2681 |                         if (cmdlen < 2) {                              
; 2682 |                                 goto INVALIDCMD;                       
; 2685 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2687 |                         case 'S':
;     |  // selection                                                          
; 2689 |                                 // DAC channel number                  
; 2690 |                                 j = DAC_MAX;                           
; 2691 |                                 do {                                   
; 2692 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2693 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2694 |                                         ss = atoi(cmdbuff);            
; 2695 |                                         scia_puts(cmdbuff);            
; 2696 |                                         if (ss > 0 && ss <= j) {       
; 2697 |                                                 break;
;     |          // valid input channel number                                 
; 2699 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2700 |                                 } while (j);                           
; 2701 |                                 scia_puts("\r\n");                     
; 2702 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2704 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2705 |                                 for (j = 0; j < 5; j++) {              
; 2706 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2707 |                                         scia_puts(buff);               
; 2708 |                                         scia_puts(", ");               
; 2710 |                                 j = 7;                                 
; 2711 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2712 |                                 scia_puts(buff);                       
; 2713 |                                 scia_puts("\r\n");                     
; 2714 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2715 |                                                 ss + 1);               
; 2716 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2717 |                                 pt = atoi(cmdbuff);                    
; 2718 |                                 if (pt >= 5 && pt != 7) {              
; 2719 |                                         pt = 0;                        
; 2720 |                                         scia_puts(                     
; 2721 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2723 |                                 scia_puts(cmdbuff);                    
; 2724 |                                 scia_puts("\r\n");                     
; 2725 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2727 |                                 if ( VFD_VOLT != pt) {                 
; 2729 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2730 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2731 |                                                 j = CHS_MAX;           
; 2732 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2733 |                                                 j = ENC_MAX;           
; 2736 |                                         // linked load/... channel numb
;     | er                                                                     
; 2737 |                                         do {                           
; 2738 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2739 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2740 |                                                 ch = atoi(cmdbuff);    
; 2741 |                                                 scia_puts(cmdbuff);    
; 2742 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2743 |                                                         break;
;     |          // valid input channel number                                 
; 2745 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2746 |                                         } while (j);                   
; 2747 |                                         scia_puts("\r\n");             
; 2748 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2749 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2751 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2752 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2753 |                                                 // gain                
; 2754 |                                                 if ( VFD_POSI == pt) { 
; 2755 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2756 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2757 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2759 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2760 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2761 |                                                 scia_puts(cmdbuff);    
; 2762 |                                                 scia_puts("\r\n");     
; 2764 |                                                 // offset              
; 2765 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2766 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2767 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2768 |                                                 scia_puts(cmdbuff);    
; 2769 |                                                 scia_puts("\r\n");     
; 2773 |                                 unsaved = 1;                           
; 2775 |                                 // print result                        
; 2776 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2777 |                                                 LPV[pt]);              
; 2778 |                                 scia_puts(buff);                       
; 2780 |                                 if ( VFD_VOLT == pt) {                 
; 2781 |                                         scia_puts("\r\n");             
; 2782 |                                 } else {                               
; 2783 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2784 |                                         scia_puts(buff);               
; 2786 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2787 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2788 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2789 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2790 |                                                 scia_puts(buff);       
; 2794 |                                 DINT;                                  
; 2795 |                                 ad7738_setcal();                       
; 2796 |                                 EINT;                                  
; 2797 |                                 break;                                 
; 2799 |                         case 'D':
;     |  // direct voltage output                                              
; 2801 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2802 |                                                 || 'V' != cmdbuff[3]) {
; 2803 |                                         goto INVALIDCMD;               
; 2806 |                                 // channel index                       
; 2807 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2808 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2809 |                                         goto INVALIDCMD;               
; 2810 |                                         // invalid channel number      
; 2812 |                                 ss--;
;     |  // change to zero based index                                         
; 2814 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2815 |                                         goto INVALIDCMD;               
; 2816 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2819 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2820 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2821 |                                         goto INVALIDCMD;               
; 2822 |                                         // invalid voltage             
; 2825 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2826 |                                 if (volt[0] < 0) {                     
; 2827 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2828 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2829 |                                 } else {                               
; 2830 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2831 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2834 |                                 if (dsum[0] <= 0) {                    
; 2835 |                                         dacc[0] = 0;                   
; 2836 |                                 } else if (dsum[0] >= 0xffff) {        
; 2837 |                                         dacc[0] = 0xffff;              
; 2838 |                                 } else {                               
; 2839 |                                         dacc[0] = (Uint16) dsum[0];    
; 2842 |                                 mcbsp_xmit(dacc[0], ss);               
; 2843 |                                 latch_dac();                           
; 2845 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2846 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2847 |                                 scia_puts(buff);                       
; 2849 |                                 break;                                 
; 2851 |                         default:                                       
; 2852 |                                 goto INVALIDCMD;                       
; 2855 |                         break;                                         
; 2857 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2858 |                         // LIMIT command
;     |                                          //                            
; 2859 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2860 |                 case 'L':                                              
; 2862 |                         if (cmdlen < 2) {                              
; 2863 |                                 goto INVALIDCMD;                       
; 2866 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2868 |                         case 'S':
;     |  // selection                                                          
; 2870 |                                 // LIMIT channel number                
; 2871 |                                 j = LIM_MAX;                           
; 2872 |                                 do {                                   
; 2873 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2874 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2875 |                                         ss = atoi(cmdbuff);            
; 2876 |                                         scia_puts(cmdbuff);            
; 2877 |                                         if (ss > 0 && ss <= j) {       
; 2878 |                                                 break;
;     |          // valid input channel number                                 
; 2880 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2881 |                                 } while (j);                           
; 2882 |                                 scia_puts("\r\n");                     
; 2883 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2885 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2886 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2887 |                                 scia_puts(cmdbuff);                    
; 2888 |                                 scia_puts("\r\n");                     
; 2890 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2892 |                                         // set on flag                 
; 2893 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2895 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2896 |                                         for (j = 0; j < 5; j++) {      
; 2897 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2898 |                                                 scia_puts(buff);       
; 2899 |                                                 if (j < 4) {           
; 2900 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2903 |                                         scia_puts("\r\n");             
; 2904 |                                         sprintf(buff,                  
; 2905 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2906 |                                                         ss + 1);       
; 2907 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2908 |                                         pt = atoi(cmdbuff);            
; 2909 |                                         if (pt >= 5) {                 
; 2910 |                                                 pt = 0;                
; 2911 |                                                 scia_puts(             
; 2912 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2914 |                                         scia_puts(cmdbuff);            
; 2915 |                                         scia_puts("\r\n");             
; 2916 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2918 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2919 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2920 |                                                 j = CHS_MAX;           
; 2921 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2922 |                                                 j = ENC_MAX;           
; 2925 |                                         // linked load/... channel numb
;     | er                                                                     
; 2926 |                                         do {                           
; 2927 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2928 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2929 |                                                 ch = atoi(cmdbuff);    
; 2930 |                                                 scia_puts(cmdbuff);    
; 2931 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2932 |                                                         break;
;     |          // valid input channel number                                 
; 2934 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2935 |                                         } while (j);                   
; 2936 |                                         scia_puts("\r\n");             
; 2937 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2938 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2940 |                                         // NO/NC                       
; 2941 |                                         scia_getparam(                 
; 2942 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2943 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2944 |                                         scia_puts(cmdbuff);            
; 2945 |                                         scia_puts("\r\n");             
; 2947 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2949 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2950 |                                         } else {                       
; 2951 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2954 |                                         scia_getparam(                 
; 2955 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2956 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2957 |                                         scia_puts(cmdbuff);            
; 2958 |                                         scia_puts("\r\n");             
; 2960 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2962 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2963 |                                         } else {                       
; 2964 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2967 |                                         scia_getparam(                 
; 2968 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2969 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2970 |                                         scia_puts(cmdbuff);            
; 2971 |                                         scia_puts("\r\n");             
; 2973 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2975 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2976 |                                         } else {                       
; 2977 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2980 |                                         // unit (output)               
; 2981 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 2982 |                                         case VFD_LOAD:                 
; 2983 |                                         case VFD_PEAK:                 
; 2984 |                                         case VFD_VALL:                 
; 2985 |                                                 ccp =                  
; 2986 |                                                                 UNITS[0
;     | x0f                                                                    
; 2987 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 2988 |                                                 break;                 
; 2989 |                                         case VFD_POSI:                 
; 2990 |                                                 ccp = POS_U;           
; 2991 |                                                 break;                 
; 2992 |                                         case VFD_VELO:                 
; 2993 |                                                 ccp = VEL_U;           
; 2994 |                                                 break;                 
; 2997 |                                         // set value                   
; 2998 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 2999 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3000 |                                         scia_puts(cmdbuff);            
; 3001 |                                         scia_puts("\r\n");             
; 3003 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3004 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3005 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3007 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3008 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3009 |                                         scia_puts(cmdbuff);            
; 3010 |                                         scia_puts("\r\n");             
; 3012 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3013 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3014 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3015 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3017 |                                         // print result                
; 3018 |                                         sprintf(buff,                  
; 3019 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3020 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3021 |                                         scia_puts(buff);               
; 3023 |                                         sprintf(buff,                  
; 3024 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3025 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3026 | 
;     |  "NC" : "NO",                                                          
; 3027 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3028 | 
;     |  "ON" : "OFF",                                                         
; 3029 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3030 |                                         scia_puts(buff);               
; 3031 |                                         sprintf(buff,                  
; 3032 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3033 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3034 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3035 |                                         scia_puts(buff);               
; 3037 |                                 } else
;     |  // turn off                                                           
; 3039 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3040 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3043 |                                 unsaved = 1;                           
; 3045 |                                 DINT;                                  
; 3046 |                                 ad7738_setcal();                       
; 3047 |                                 EINT;                                  
; 3048 |                                 break;                                 
; 3050 |                         default:                                       
; 3051 |                                 goto INVALIDCMD;                       
; 3054 |                         break;                                         
; 3056 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3057 |                         // reset commands
;     |                                          //                            
; 3058 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3059 |                 case 'R':                                              
; 3061 |                         if (cmdlen < 2) {                              
; 3062 |                                 goto INVALIDCMD;                       
; 3065 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3067 |                         case 'T':
;     |  // tare                                                               
; 3069 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3070 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3071 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3072 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3073 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3074 |                                 } else {                               
; 3075 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3076 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3077 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3079 |                                 break;                                 
; 3081 |                         case 'P':
;     |  // peak                                                               
; 3083 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3084 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3085 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3086 |                                 } else {                               
; 3087 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3089 |                                 break;                                 
; 3091 |                         case 'V':
;     |  // valley                                                             
; 3093 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3094 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3095 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3096 |                                 } else {                               
; 3097 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3099 |                                 break;                                 
; 3101 |                         case 'S':
;     |  // shunt switch                                                       
; 3103 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3104 |                                         shunt_switch(1);               
; 3105 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3106 |                                 } else {                               
; 3107 |                                         shunt_switch(0);               
; 3108 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3110 |                                 break;                                 
; 3112 |                         case 'L':
;     |  // limit                                                              
; 3114 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3115 |                                 ch--;                                  
; 3117 |                                 ad7738_resetlimit(ch);                 
; 3118 |                                 break;                                 
; 3120 |                         case 'I':
;     |  // posItion                                                           
; 3122 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3123 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3124 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3125 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3126 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3127 |                                 } else {                               
; 3128 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3129 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3130 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3132 |                                 break;                                 
; 3134 |                         default:                                       
; 3135 |                                 goto INVALIDCMD;                       
; 3137 |                         break;                                         
; 3139 | #ifdef SDHCCARD                                                        
; 3141 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3142 |                         // Stream to SD Card
;     |                                  //                                    
; 3143 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3144 |                         case 'W':// Write control                      
; 3146 |                         if( cmdlen < 2 )                               
; 3148 |                                 goto INVALIDCMD;                       
; 3151 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3153 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3155 |                                 if( cmdlen < 3 )                       
; 3157 |                                         goto INVALIDCMD;               
; 3160 |                                 if( sd_write )                         
; 3162 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3163 |                                         break;                         
; 3166 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3167 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3169 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3171 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3172 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3174 |                                 if( !res )                             
; 3176 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3177 |                                         if( res || cmdlen != temp16 )  
; 3179 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3180 |                                                 scia_puts( buff );     
; 3181 |                                                 f_close( fp );         
; 3182 |                                                 fp = NULL;             
; 3183 |                                                 break;                 
; 3200 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3202 |                                         if( res )                      
; 3204 |                                                 f_close( fp );         
; 3205 |                                                 fp = NULL;             
; 3206 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3207 |                                                 break;                 
; 3210 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3211 |                                         scia_puts( buff );             
; 3213 |                                         prod_init();                   
; 3214 |                                         sd_write = 1;                  
; 3215 |                                         sd_cnt = 0;                    
; 3216 |                                         break;                         
; 3219 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3220 |                                 scia_puts( buff );                     
; 3221 |                                 break;                                 
; 3223 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3225 |                                 if( sd_write )                         
; 3227 |                                         sd_close = 1;                  
; 3228 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3229 |                                         break;                         
; 3231 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3232 |                                 break;                                 
; 3234 |                                 case 'L':
;     |          // list files                                                 
; 3236 |                                 if( sd_write )                         
; 3238 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3239 |                                         break;                         
; 3242 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3243 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3245 |                                 res = f_opendir(&dir, "0:");           
; 3246 |                                 if (res)                               
; 3248 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3249 |                                         scia_puts( buff );             
; 3250 |                                         break;                         
; 3253 |                                 p1 = s1 = s2 = 0;                      
; 3254 |                                 for(;;)                                
; 3256 |                                         res = f_readdir(&dir, &Finfo); 
; 3257 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3258 |                                         break;                         
; 3259 |                                         if (Finfo.fattrib & AM_DIR)    
; 3261 |                                                 s2++;                  
; 3263 |                                         else                           
; 3265 |                                                 s1++;                  
; 3266 |                                                 p1 += Finfo.fsize;     
; 3268 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3269 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3270 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3271 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3272 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3273 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3274 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3275 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3276 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3277 |                                         scia_puts( buff );             
; 3279 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3280 |                                 scia_puts( buff );                     
; 3281 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3283 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3284 |                                         scia_puts( buff );             
; 3286 |                                 break;                                 
; 3288 |                                 case 'G':
;     |          // get a file                                                 
; 3290 |                                 if( sd_write )                         
; 3292 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3293 |                                         break;                         
; 3296 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3297 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3299 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3301 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3302 |                                 res = f_open( fp, buff, FA_READ );     
; 3303 |                                 if (res)                               
; 3305 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3306 |                                         scia_puts( buff );             
; 3307 |                                         break;                         
; 3310 |                                 do                                     
; 3312 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3313 |                                         scia_send( buff, temp16 );     
; 3314 |                                 }while( !res && temp16 == 512 );       
; 3316 |                                 f_close( fp );                         
; 3317 |                                 fp = NULL;                             
; 3318 |                                 break;                                 
; 3320 |                                 case 'R':
;     |          // remove a file                                              
; 3322 |                                 if( sd_write )                         
; 3324 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3325 |                                         break;                         
; 3328 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3329 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3331 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3333 |                                 res = f_unlink( buff );                
; 3335 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3336 |                                 scia_puts( buff );                     
; 3337 |                                 break;                                 
; 3339 |                                 default:                               
; 3340 |                                 goto INVALIDCMD;                       
; 3343 |                         break;                                         
; 3344 | #endif                                                                 
; 3346 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3347 |                         // Flash memory access commands
;     |                                    //                                  
; 3348 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3349 |                 case 'F':                                       // flas
;     | h access                                                               
; 3351 |                         if (cmdlen < 2) {                              
; 3352 |                                 goto INVALIDCMD;                       
; 3355 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3357 |                         case 'W':
;     |  // write flash                                                        
; 3359 |                                 if (unsaved) {                         
; 3360 |                                         // flash writing               
; 3361 |                                         lcd_clear();                   
; 3362 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3363 |                                         scia_puts("Flash writing..."); 
; 3365 |                                         for (i = 0; i < 50; i++) {     
; 3366 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3369 |                                         DINT;                          
; 3370 |                                         flash_ret = conf_write();      
; 3371 |                                         EINT;                          
; 3373 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3374 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3375 |                                                 unsaved = 0;           
; 3376 |                                         } else {                       
; 3377 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3379 |                                         lcd_clear();                   
; 3380 |                                         update_units();                
; 3381 |                                         break;                         
; 3383 |                                 scia_puts(                             
; 3384 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3385 |                                 break;                                 
; 3387 |                         case 'R':
;     |  // read flash                                                         
; 3389 |                                 // flash reading                       
; 3390 |                                 conf_read();                           
; 3392 |                                 DINT;                                  
; 3393 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3394 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3395 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3396 |                                 EINT;                                  
; 3398 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3399 |                                 unsaved = 0;                           
; 3401 |                                 update_units();                        
; 3403 |                                 break;                                 
; 3405 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3407 |                                 conf_default();                        
; 3409 |                                 // flash writing                       
; 3410 |                                 lcd_clear();                           
; 3411 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3412 |                                 scia_puts("Flash write...");           
; 3414 |                                 for (i = 0; i < 50; i++) {             
; 3415 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3418 |                                 DINT;                                  
; 3419 |                                 flash_ret = conf_write();              
; 3420 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3421 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3422 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3423 |                                 EINT;                                  
; 3425 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3426 |                                         scia_puts(                     
; 3427 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3428 |                                         unsaved = 0;                   
; 3429 |                                 } else {                               
; 3430 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3432 |                                 lcd_clear();                           
; 3433 |                                 update_units();                        
; 3434 |                                 break;                                 
; 3436 |                         default:                                       
; 3437 |                                 goto INVALIDCMD;                       
; 3440 |                         break;                                         
; 3442 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3443 |                         // Help manu
;     |                                  //                                    
; 3444 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3445 |                 case 'H':                               // help menu   
; 3447 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3449 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3450 |                         scia_puts(                                     
; 3451 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3452 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3453 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3454 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3455 |                         scia_puts("\r\n");                             
; 3457 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3458 |                         scia_puts("UN          Set unit name.\r\n");   
; 3459 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3460 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3461 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3462 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3463 |                         scia_puts("\r\n");                             
; 3465 |                         scia_puts(                                     
; 3466 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3467 |                         scia_puts(                                     
; 3468 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3469 |                         scia_puts("\r\n");                             
; 3471 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3472 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3473 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3474 |                         scia_puts("\r\n");                             
; 3476 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3477 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3478 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3479 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3480 |                         scia_puts("\r\n");                             
; 3482 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3483 |                         scia_puts(                                     
; 3484 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3485 |                         scia_puts("\r\n");                             
; 3487 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3488 |                         scia_puts("\r\n");                             
; 3490 |                         scia_puts(                                     
; 3491 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3492 |                         scia_puts(                                     
; 3493 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3494 |                         scia_puts("\r\n");                             
; 3496 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3497 |                         scia_puts("\r\n");                             
; 3499 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3500 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3501 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3502 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3503 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3504 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3505 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3506 |                         scia_puts("\r\n");                             
; 3508 | #ifdef SDHCCARD                                                        
; 3509 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3510 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3511 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3512 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3513 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3514 |                         scia_puts( "\r\n" );                           
; 3515 | #endif                                                                 
; 3517 |                         scia_puts(                                     
; 3518 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3519 |                         scia_puts(                                     
; 3520 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3521 |                         scia_puts(                                     
; 3522 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3523 |                         scia_puts("\r\n");                             
; 3525 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3527 |                         // not implemented                             
; 3528 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3530 |                         scia_puts("\r\n");                             
; 3532 |                         break;                                         
; 3534 |                 case 'X':                                              
; 3536 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3538 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3540 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3543 |                         cmd_mode = SCI_MODE_BIN;                       
; 3544 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3546 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3548 |                         break;                                         
; 3550 |                 case 'Z':                                              
; 3552 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3554 |                         for (i = 0; i < 100; i++)       // 2s          
; 3556 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3559 |                         reboot();                                      
; 3560 |                         break;                                         
; 3584 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3585 |                         // Invalid commands
;     |                                  //                                    
; 3586 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3587 |                 default:                                               
; 3589 |                         INVALIDCMD:                                    
; 3591 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3592 |                         scia_puts(cmdbuff);                            
; 3593 |                         scia_puts("\", ignored.\r\n");                 
; 3594 |                         break;                                         
; 3596 |                 } // switch on 1st byte                                
; 3598 |                 if (unsaved) {                                         
; 3599 |                         scia_puts(                                     
; 3600 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3603 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3604 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3605 |                 // BIN command mode processing
;     |                          //                                            
; 3606 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3608 |                 // ------------------------------------------------    
; 3609 |                 // DEBUG: put received command on LCD                  
; 3618 |                 // ------------------------------------------------    
; 3619 |                 if (cmdlen < 2) {                                      
; 3620 |                         // INVALID COMMAND, less than 2 byte           
; 3621 |                         // may need to send NACK back                  
; 3622 |                         continue;                                      
; 3625 |                 for (i = 0; i < 2; i++) {                              
; 3626 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3629 |                 j = 2;                                  // buff length 
; 3630 |                 bincmdresult = Error_UnImpl;                           
; 3632 |                 // DEBUG, sending the command back                     
; 3633 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3635 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3637 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3640 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3755 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3757 |                 case CheckAddress:                                     
; 3759 |                         buff[j++] = 0;                                 
; 3760 |                         bincmdresult = OK_SendResult;                  
; 3761 |                         break;                                         
; 3763 |                 case SetAddress:                                       
; 3765 |                         buff[j] = cmdbuff[j];                          
; 3766 |                         j++;                                           
; 3767 |                         bincmdresult = OK_SendResult;                  
; 3768 |                         break;                                         
; 3770 |                 case RemoveAddress:                                    
; 3772 |                         buff[j] = cmdbuff[j];                          
; 3773 |                         j++;                                           
; 3774 |                         bincmdresult = OK_SendResult;                  
; 3775 |                         break;                                         
; 3777 |                 case GetUnitInfo:                                      
; 3779 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3780 |                         for (i = 0; i < 2; i++) {                      
; 3781 |                                 buff[j++] = 0xff & *intp;              
; 3782 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3783 |                                 intp++;                                
; 3786 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3787 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3789 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3790 |                         for (i = 0; i < 2; i++) {                      
; 3791 |                                 buff[j++] = 0xff & *intp;              
; 3792 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3793 |                                 intp++;                                
; 3796 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3797 |                         buff[j++] = slen;                              
; 3798 |                         for (i = 0; i < slen; i++) {                   
; 3799 |                                 buff[j++] = conf_data.uname[i]; // name
; 3801 |                         bincmdresult = OK_SendResult;                  
; 3803 |                         break;                                         
; 3805 |                 case SetUnitSN:                                        
; 3807 |                         if (cmdlen < 6) {                              
; 3808 |                                 bincmdresult = Error_Invalid;          
; 3809 |                                 break;                                 
; 3812 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3813 |                         for (i = 0; i < 2; i++) {                      
; 3814 |                                 *intp = cmdbuff[j];                    
; 3815 |                                 buff[j++] = 0xff & *intp;              
; 3816 |                                 *intp += cmdbuff[j] << 8;              
; 3817 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3818 |                                 intp++;                                
; 3820 |                         unsaved = 1;                                   
; 3822 |                         bincmdresult = OK_SendResult;                  
; 3823 |                         break;                                         
; 3825 |                 case SetUnitName:                                      
; 3827 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3828 |                                 bincmdresult = Error_Invalid;          
; 3829 |                                 break;                                 
; 3832 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3833 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3835 |                         conf_data.uname[i] = '\0';                     
; 3836 |                         unsaved = 1;                                   
; 3838 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3839 |                         buff[j++] = slen;                              
; 3840 |                         for (i = 0; i < slen; i++) {                   
; 3841 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3843 |                         bincmdresult = OK_SendResult;                  
; 3844 |                         break;                                         
; 3846 |                 case GetInterface:                                     
; 3848 |                         buff[j++] = conf_data.rxdir;                   
; 3850 |                         if (conf_data.rxdir == SDIR_RS485              
; 3851 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3852 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3853 |                                 for (i = 0; i < 2; i++) {              
; 3854 |                                         buff[j++] = 0xff & *intp;      
; 3855 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3856 |                                         intp++;                        
; 3859 |                         bincmdresult = OK_SendResult;                  
; 3860 |                         break;                                         
; 3862 |                 case SetInterface:                                     
; 3864 |                         if (cmdlen < 3) {                              
; 3865 |                                 bincmdresult = Error_Invalid;          
; 3866 |                                 break;                                 
; 3868 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3869 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3870 |                                 bincmdresult = Error_Invalid;          
; 3871 |                                 break;                                 
; 3874 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3875 |                                 if (cmdlen < 7) {                      
; 3876 |                                         bincmdresult = Error_Invalid;  
; 3877 |                                         break;                         
; 3880 |                                 temp32 = 0;                            
; 3881 |                                 for (k = 6; k > 2; k--) {              
; 3882 |                                         temp32 += cmdbuff[k];          
; 3883 |                                         temp32 <<= 8;                  
; 3886 |                                 for (i = 0; i < 8; i++) {              
; 3887 |                                         if (temp32 == BAUD[i]) {       
; 3888 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3889 |                                                 break;                 
; 3892 |                                 if (i == 8) {                          
; 3893 |                                         bincmdresult = Error_Invalid;  
; 3894 |                                         break;                         
; 3898 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3900 |                         while (j < cmdlen) {                           
; 3901 |                                 buff[j] = cmdbuff[j];                  
; 3902 |                                 j++;                                   
; 3904 |                         unsaved = 1;                                   
; 3905 |                         bincmdresult = OK_SendResult;                  
; 3906 |                         break;                                         
; 3908 |                 case GetChannel:                                       
; 3910 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3911 |                                 bincmdresult = Error_Invalid;          
; 3912 |                                 break;                                 
; 3914 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3916 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3918 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3920 |                                 buff[j++] = 0;                         
; 3923 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3924 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3926 |                                 buff[j++] = 0xff & *intp;              
; 3927 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3928 |                                 intp++;                                
; 3931 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3932 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3934 |                                 buff[j++] = 0xff & *intp;              
; 3935 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3936 |                                 intp++;                                
; 3939 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3940 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3942 |                                 buff[j++] = 0xff & *intp;              
; 3943 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3944 |                                 intp++;                                
; 3947 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3948 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3950 |                                 buff[j++] = 0xff & *intp;              
; 3951 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3952 |                                 intp++;                                
; 3955 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3956 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3958 |                                 buff[j++] = 0xff & *intp;              
; 3959 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3960 |                                 intp++;                                
; 3963 |                         bincmdresult = OK_SendResult;                  
; 3964 |                         break;                                         
; 3966 |                 case GetSensor:                                        
; 3968 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3969 |                                 bincmdresult = Error_Invalid;          
; 3970 |                                 break;                                 
; 3972 |                         ss = cmdbuff[2];                               
; 3973 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3975 |                         // sensor serial name                          
; 3976 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3977 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3978 |                         for (i = 0; i < slen; i++) {                   
; 3979 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 3982 |                         // sensor name/label                           
; 3983 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 3984 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3985 |                         for (i = 0; i < slen; i++) {                   
; 3986 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 3989 |                         // TAGID                                       
; 3990 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 3991 |                         for (i = 0; i < 4; i++) {                      
; 3992 |                                 buff[j++] = 0xff & *intp;              
; 3993 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3994 |                                 intp++;                                
; 3997 |                         // Method                                      
; 3998 |                         buff[j++] = conf_data.sensor[ss].method;       
; 4000 |                         // Date                                        
; 4001 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4002 |                         for (i = 0; i < 2; i++) {                      
; 4003 |                                 buff[j++] = 0xff & *intp;              
; 4004 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4005 |                                 intp++;                                
; 4008 |                         // Range                                       
; 4009 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4010 |                         for (i = 0; i < 2; i++) {                      
; 4011 |                                 buff[j++] = 0xff & *intp;              
; 4012 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4013 |                                 intp++;                                
; 4016 |                         // Unit                                        
; 4017 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4019 |                         // Output Unit                                 
; 4020 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4022 |                         // Unit Factor                                 
; 4023 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4024 |                         for (i = 0; i < 2; i++) {                      
; 4025 |                                 buff[j++] = 0xff & *intp;              
; 4026 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4027 |                                 intp++;                                
; 4030 |                         // calibration points.                         
; 4031 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4032 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4033 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4034 |                                         // mass point                  
; 4035 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4036 |                                         for (i = 0; i < 2; i++) {      
; 4037 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4038 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4039 |                                                 intp++;                
; 4041 |                                         // adc counts point            
; 4042 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4043 |                                         for (i = 0; i < 2; i++) {      
; 4044 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4045 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4046 |                                                 intp++;                
; 4050 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4051 |                                         // slope point                 
; 4052 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4053 |                                         for (i = 0; i < 2; i++) {      
; 4054 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4055 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4056 |                                                 intp++;                
; 4058 |                                         // intercept point             
; 4059 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4060 |                                         for (i = 0; i < 2; i++) {      
; 4061 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4062 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4063 |                                                 intp++;                
; 4066 |                         } else {                                       
; 4067 |                                 buff[j++] = 0;                         
; 4068 |                                 // slope                               
; 4069 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4070 |                                 for (i = 0; i < 2; i++) {              
; 4071 |                                         buff[j++] = 0xff & *intp;      
; 4072 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4073 |                                         intp++;                        
; 4075 |                                 // intercept                           
; 4076 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4077 |                                 for (i = 0; i < 2; i++) {              
; 4078 |                                         buff[j++] = 0xff & *intp;      
; 4079 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4080 |                                         intp++;                        
; 4084 |                         // shunt                                       
; 4085 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4086 |                         for (i = 0; i < 2; i++) {                      
; 4087 |                                 buff[j++] = 0xff & *intp;              
; 4088 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4089 |                                 intp++;                                
; 4092 |                         // base                                        
; 4093 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4094 |                         for (i = 0; i < 2; i++) {                      
; 4095 |                                 buff[j++] = 0xff & *intp;              
; 4096 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4097 |                                 intp++;                                
; 4100 |                         // DAC calibration gain                        
; 4101 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4102 |                         for (i = 0; i < 2; i++) {                      
; 4103 |                                 buff[j++] = 0xff & *intp;              
; 4104 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4105 |                                 intp++;                                
; 4108 |                         // DAC calibration offset                      
; 4109 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4110 |                         for (i = 0; i < 2; i++) {                      
; 4111 |                                 buff[j++] = 0xff & *intp;              
; 4112 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4113 |                                 intp++;                                
; 4116 |                         // channel calibrated on                       
; 4117 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4119 |                         bincmdresult = OK_SendResult;                  
; 4120 |                         break;                                         
; 4122 |                 case GetQEPChannels:                                   
; 4124 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4125 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4126 |                                 for (i = 0; i < 2; i++) {              
; 4127 |                                         buff[j++] = 0xff & *intp;      
; 4128 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4129 |                                         intp++;                        
; 4133 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4134 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4136 |                         bincmdresult = OK_SendResult;                  
; 4137 |                         break;                                         
; 4139 |                 case GetCurSensor:                                     
; 4141 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4142 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4145 |                         bincmdresult = OK_SendResult;                  
; 4146 |                         break;                                         
; 4148 |                 case GetAFilterSize:                                   
; 4150 |                         // filter size                                 
; 4151 |                         intp = (Uint16*) &conf_data.filter;            
; 4152 |                         buff[j++] = 0xff & *intp;                      
; 4153 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4154 |                         // filter window                               
; 4155 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4156 |                         for (i = 0; i < 2; i++) {                      
; 4157 |                                 buff[j++] = 0xff & *intp;              
; 4158 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4159 |                                 intp++;                                
; 4161 |                         bincmdresult = OK_SendResult;                  
; 4162 |                         break;                                         
; 4164 |                 case GetAutoId:                                        
; 4166 |                         buff[j++] = conf_data.tagiden;                 
; 4167 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4168 |                                 buff[j++] = autoid[i];                 
; 4170 |                         bincmdresult = OK_SendResult;                  
; 4171 |                         break;                                         
; 4173 |                 case GetDisplay:                                       
; 4175 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4176 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4177 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4178 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4180 |                         bincmdresult = OK_SendResult;                  
; 4181 |                         break;                                         
; 4183 |                 case GetDAC:                                           
; 4185 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4186 |                                 buff[j++] = conf_data.dac[i].what;     
; 4187 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4189 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4190 |                                 //{                                    
; 4191 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4192 |                                 //}                                    
; 4193 |                                 //else                                 
; 4194 |                                 //{                                    
; 4195 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4196 |                                 //}                                    
; 4197 |                                 for (k = 0; k < 2; k++) {              
; 4198 |                                         buff[j++] = 0xff & *intp;      
; 4199 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4200 |                                         intp++;                        
; 4202 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4203 |                                 //{                                    
; 4204 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4205 |                                 //}                                    
; 4206 |                                 //else                                 
; 4207 |                                 //{                                    
; 4208 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4209 |                                 //}                                    
; 4210 |                                 for (k = 0; k < 2; k++) {              
; 4211 |                                         buff[j++] = 0xff & *intp;      
; 4212 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4213 |                                         intp++;                        
; 4215 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4216 |                                 for (k = 0; k < 2; k++) {              
; 4217 |                                         buff[j++] = 0xff & *intp;      
; 4218 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4219 |                                         intp++;                        
; 4221 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4222 |                                 for (k = 0; k < 2; k++) {              
; 4223 |                                         buff[j++] = 0xff & *intp;      
; 4224 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4225 |                                         intp++;                        
; 4227 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4228 |                                 for (k = 0; k < 2; k++) {              
; 4229 |                                         buff[j++] = 0xff & *intp;      
; 4230 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4231 |                                         intp++;                        
; 4234 |                         bincmdresult = OK_SendResult;                  
; 4235 |                         break;                                         
; 4237 |                 case GetLIMIT:                                         
; 4239 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4240 |                                 buff[j++] = conf_data.lim[i].what;     
; 4241 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4242 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4244 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4245 |                                 for (k = 0; k < 2; k++) {              
; 4246 |                                         buff[j++] = 0xff & *intp;      
; 4247 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4248 |                                         intp++;                        
; 4250 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4251 |                                 for (k = 0; k < 2; k++) {              
; 4252 |                                         buff[j++] = 0xff & *intp;      
; 4253 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4254 |                                         intp++;                        
; 4257 |                         bincmdresult = OK_SendResult;                  
; 4258 |                         break;                                         
; 4260 |                 case GetLIMITStatus:                                   
; 4262 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4263 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4265 |                         bincmdresult = OK_SendResult;                  
; 4266 |                         break;                                         
; 4268 |                         // Heat Cal commands.                          
; 4269 |                 case GetTCLoadA:                                       
; 4270 |                 case GetTCLoadB:                                       
; 4271 |                 case GetTCLoadC:                                       
; 4272 |                 case GetTCLoadD:                                       
; 4274 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4275 |                         intp = (Uint16*) &temp16;                      
; 4276 |                         buff[j++] = 0xff & *intp;                      
; 4277 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4279 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4280 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4281 |                         intp = (Uint16*) &templg;                      
; 4282 |                         for (i = 0; i < 2; i++) {                      
; 4283 |                                 buff[j++] = 0xff & *intp;              
; 4284 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4285 |                                 intp++;                                
; 4287 |                         bincmdresult = OK_SendResult;                  
; 4288 |                         break;                                         
; 4290 |                 case GetTCTemp:                                        
; 4292 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4293 |                         intp = (Uint16*) &temp16;                      
; 4294 |                         buff[j++] = 0xff & *intp;                      
; 4295 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4296 |                         bincmdresult = OK_SendResult;                  
; 4297 |                         break;                                         
; 4299 |                 case GetTCStatus:                                      
; 4301 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4302 |                         for (i = 0; i < 2; i++) {                      
; 4303 |                                 buff[j++] = 0xff & *intp;              
; 4304 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4305 |                                 intp++;                                
; 4308 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4309 |                                 temp16 = 0x80;                         
; 4310 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4311 |                                         temp16 |= 0x01;                
; 4313 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4314 |                                         temp16 |= 0x02;                
; 4316 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4317 |                                         temp16 |= 0x04;                
; 4319 |                                 buff[j++] = 0xff & temp16;             
; 4321 |                         bincmdresult = OK_SendResult;                  
; 4322 |                         break;                                         
; 4324 |                 case GetTCParam:                                       
; 4326 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4327 |                                 bincmdresult = Error_Invalid;          
; 4328 |                                 break;                                 
; 4331 |                         ch = cmdbuff[2];                               
; 4332 |                         buff[j++] = ch;                                
; 4334 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4335 |                         for (k = 0; k < 2; k++) {                      
; 4336 |                                 buff[j++] = 0xff & *intp;              
; 4337 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4338 |                                 intp++;                                
; 4340 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4341 |                         for (k = 0; k < 2; k++) {                      
; 4342 |                                 buff[j++] = 0xff & *intp;              
; 4343 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4344 |                                 intp++;                                
; 4346 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4347 |                         for (k = 0; k < 2; k++) {                      
; 4348 |                                 buff[j++] = 0xff & *intp;              
; 4349 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4350 |                                 intp++;                                
; 4352 |                         bincmdresult = OK_SendResult;                  
; 4353 |                         break;                                         
; 4355 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4356 | #if 1                                                                  
; 4357 |                 case Open_SSR_IN1:                                     
; 4358 |                         ssr_set(0, SSR_OPEN);                          
; 4359 |                         break;                                         
; 4361 |                 case Close_SSR_IN1:                                    
; 4362 |                         ssr_set(0, SSR_CLOSE);                         
; 4363 |                         break;                                         
; 4364 | #endif                                                                 
; 4366 |                 case SetTCParam:                                       
; 4368 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4369 |                                 bincmdresult = Error_Invalid;          
; 4370 |                                 break;                                 
; 4373 |                         ch = cmdbuff[2];                               
; 4374 |                         buff[j++] = ch;                                
; 4376 |                         k = 3;                                         
; 4377 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4378 |                         for (i = 0; i < 2; i++) {                      
; 4379 |                                 *intp = cmdbuff[k++];                  
; 4380 |                                 *intp += cmdbuff[k++] << 8;            
; 4381 |                                 intp++;                                
; 4383 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4384 |                         for (i = 0; i < 2; i++) {                      
; 4385 |                                 *intp = cmdbuff[k++];                  
; 4386 |                                 *intp += cmdbuff[k++] << 8;            
; 4387 |                                 intp++;                                
; 4389 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4390 |                         for (i = 0; i < 2; i++) {                      
; 4391 |                                 *intp = cmdbuff[k++];                  
; 4392 |                                 *intp += cmdbuff[k++] << 8;            
; 4393 |                                 intp++;                                
; 4396 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4397 |                         for (k = 0; k < 2; k++) {                      
; 4398 |                                 buff[j++] = 0xff & *intp;              
; 4399 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4400 |                                 intp++;                                
; 4402 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4403 |                         for (k = 0; k < 2; k++) {                      
; 4404 |                                 buff[j++] = 0xff & *intp;              
; 4405 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4406 |                                 intp++;                                
; 4408 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4409 |                         for (k = 0; k < 2; k++) {                      
; 4410 |                                 buff[j++] = 0xff & *intp;              
; 4411 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4412 |                                 intp++;                                
; 4414 |                         unsaved = 1;                                   
; 4415 |                         bincmdresult = OK_SendResult;                  
; 4416 |                         break;                                         
; 4418 |                 case SetBCalParam:                                     
; 4420 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4421 |                                         || cmdbuff[3] != 2) {          
; 4422 |                                 bincmdresult = Error_Invalid;          
; 4423 |                                 break;                                 
; 4426 |                         ch = cmdbuff[2];                               
; 4427 |                         buff[j++] = ch;                                
; 4428 |                         buff[j] = cmdbuff[j++];                        
; 4430 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4431 |                                 intp = (Uint16*) &volt[k];             
; 4432 |                                 for (i = 0; i < 2; i++) {              
; 4433 |                                         *intp = cmdbuff[j];            
; 4434 |                                         buff[j++] = 0xff & *intp;      
; 4435 |                                         *intp += cmdbuff[j] << 8;      
; 4436 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4437 |                                         intp++;                        
; 4440 |                         bincmdresult = OK_SendResult;                  
; 4441 |                         break;                                         
; 4443 |                 case StartBCRead:                                      
; 4445 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4446 |                                         || cmdbuff[3] >= 2) {          
; 4447 |                                 bincmdresult = Error_Invalid;          
; 4448 |                                 break;                                 
; 4451 |                         k = cmdbuff[3];                                
; 4452 |                         intp = (Uint16*) &tempft;                      
; 4453 |                         for (i = 0; i < 2; i++) {                      
; 4454 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4455 |                                 intp++;                                
; 4457 |                         if (volt[k] != tempft) {                       
; 4458 |                                 bincmdresult = Error_Invalid;          
; 4459 |                                 break;                                 
; 4461 |                         lcd_clear();                                   
; 4462 |                         lcd_puts("Board Calibration...", 0);           
; 4463 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4464 |                         lcd_puts(buff, 20);                            
; 4465 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4466 |                         lcd_puts(buff, 40);                            
; 4467 |                         lcd_puts("Reading ... ", 60);                  
; 4469 |                         dsum[k] = 0;                                   
; 4470 |                         sampcnt = CAL_SAMPLES;                         
; 4471 |                         while (sampcnt--) {                            
; 4472 |                                 while (0 == ad7738_rawrdy()) {         
; 4473 |                                         delay_us(1);
;     |  // wait                                                               
; 4475 |                                 cntp = ad7738_getraw();                
; 4476 |                                 dsum[k] += cntp->adc[ch];              
; 4478 |                         if (1 == k) {                                  
; 4479 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4480 |                                                 / (dsum[1] - dsum[0]); 
; 4482 |                                 unsaved = 1;                           
; 4483 |                                 DINT;                                  
; 4484 |                                 ad7738_setcal();                       
; 4485 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4486 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4487 |                                 EINT;                                  
; 4489 |                         for (i = 0; i < cmdlen; i++) {                 
; 4490 |                                 buff[i] = cmdbuff[i];                  
; 4492 |                         j = cmdlen;                                    
; 4493 |                         bincmdresult = OK_SendResult;                  
; 4495 |                         lcd_clear();                                   
; 4496 |                         update_units();                                
; 4497 |                         break;                                         
; 4499 |                 case SetDCalParam:                                     
; 4501 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4502 |                                         || (0x07 | daccbm) != 0x07) {  
; 4503 |                                 bincmdresult = Error_Invalid;          
; 4504 |                                 break;                                 
; 4506 |                         ch = cmdbuff[2];                               
; 4507 |                         buff[j++] = ch;                                
; 4509 |                         for (k = 0; k < 3; k++) {                      
; 4510 |                                 intp = (Uint16*) &volt[k];             
; 4511 |                                 for (i = 0; i < 2; i++) {              
; 4512 |                                         *intp = cmdbuff[j];            
; 4513 |                                         buff[j++] = 0xff & *intp;      
; 4514 |                                         *intp += cmdbuff[j] << 8;      
; 4515 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4516 |                                         intp++;                        
; 4520 |                         // order: - o +                                
; 4521 |                         // do the calculations                         
; 4522 |                         conf_data.dac[ch].dslopen =                    
; 4523 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4524 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4525 |                         conf_data.dac[ch].dslopep =                    
; 4526 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4527 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4528 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4529 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4531 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4532 |                         daccbm = 0;                                    
; 4534 |                         unsaved = 1;                                   
; 4536 |                         DINT;                                          
; 4537 |                         ad7738_setcal();                               
; 4538 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4539 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4540 |                         EINT;                                          
; 4542 |                         bincmdresult = OK_SendResult;                  
; 4543 |                         break;                                         
; 4545 |                 case StartDCRead:                                      
; 4547 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4548 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4549 |                                 bincmdresult = Error_Invalid;          
; 4550 |                                 break;                                 
; 4553 |                         if (daccbm == 0) {                             
; 4554 |                                 ch = cmdbuff[2];                       
; 4555 |                         } else {                                       
; 4556 |                                 if (ch != cmdbuff[2]) {                
; 4557 |                                         bincmdresult = Error_Invalid;  
; 4558 |                                         break;                         
; 4561 |                         buff[j++] = ch;                                
; 4562 |                         k = cmdbuff[j];                                
; 4563 |                         buff[j++] = k;                                 
; 4565 |                         intp = (Uint16*) &volt[k];                     
; 4566 |                         for (i = 0; i < 2; i++) {                      
; 4567 |                                 *intp = cmdbuff[j];                    
; 4568 |                                 buff[j++] = 0xff & *intp;              
; 4569 |                                 *intp += cmdbuff[j] << 8;              
; 4570 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4571 |                                 intp++;                                
; 4573 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4574 |                                 bincmdresult = Error_Invalid;          
; 4575 |                                 break;                                 
; 4578 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4579 |                         if (dsum[0] <= 0) {                            
; 4580 |                                 dacc[k] = 0;                           
; 4581 |                         } else if (dsum[0] >= 0xffff) {                
; 4582 |                                 dacc[k] = 0xffff;                      
; 4583 |                         } else {                                       
; 4584 |                                 dacc[k] = (Uint16) dsum[0];            
; 4587 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4589 |                         mcbsp_xmit(dacc[k], ch);                       
; 4590 |                         latch_dac();                                   
; 4592 |                         daccbm |= (0x1 << k);                          
; 4594 |                         bincmdresult = OK_SendResult;                  
; 4595 |                         break;                                         
; 4597 |                 case SetSensorCalPa:                                   
; 4599 |                         if (cmdlen < 20) {                             
; 4600 |                                 bincmdresult = Error_Invalid;          
; 4601 |                                 break;                                 
; 4603 |                         k = 2;                                         
; 4604 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4605 |                         ss = cmdbuff[k++];              // sensor index
; 4606 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4607 |                                 bincmdresult = Error_Invalid;          
; 4608 |                                 break;                                 
; 4611 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4612 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4613 |                                 bincmdresult = Error_Invalid;          
; 4614 |                                 break;                                 
; 4616 |                         for (i = 0; i < tempint; i++) {                
; 4617 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4619 |                         tsensor.ssn[i] = '\0';                         
; 4621 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4622 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4623 |                                 bincmdresult = Error_Invalid;          
; 4624 |                                 break;                                 
; 4626 |                         for (i = 0; i < tempint; i++) {                
; 4627 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4629 |                         tsensor.slbl[i] = '\0';                        
; 4631 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4633 |                         intp = (Uint16*) &tsensor.date; // date        
; 4634 |                         for (i = 0; i < 2; i++) {                      
; 4635 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4636 |                                 k += 2;                                
; 4637 |                                 intp++;                                
; 4640 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4641 |                         for (i = 0; i < 2; i++) {                      
; 4642 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4643 |                                 k += 2;                                
; 4644 |                                 intp++;                                
; 4646 |                         tsensor.base = tsensor.range;                  
; 4648 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4649 |                         switch (tsensor.unit) {                        
; 4650 |                         case 0:                                 // lb  
; 4651 |                         case 1:                                 // kg  
; 4652 |                                 tsensor.unit |= UNIT_WT;               
; 4653 |                                 break;                                 
; 4654 |                         case 2:                                 // in  
; 4655 |                         case 3:                                 // cm  
; 4656 |                         case 4:                                 // mm  
; 4657 |                                 tsensor.unit |= UNIT_LT;               
; 4658 |                                 break;                                 
; 4659 |                         case 5:                                 // ps  
; 4660 |                                 tsensor.unit |= UNIT_PR;               
; 4661 |                                 break;                                 
; 4662 |                         case 6:                                 // nm  
; 4663 |                                 tsensor.unit |= UNIT_TQ;               
; 4664 |                                 break;                                 
; 4665 |                         case 7:                                        
; 4666 |                         case 8:                                        
; 4667 |                         case 15:                                       
; 4668 |                                 tsensor.unit |= 0xf0;                  
; 4669 |                                 break;                                 
; 4670 |                         default:                                       
; 4671 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4672 |                                 break;                                 
; 4674 |                         tsensor.ounit = tsensor.unit;                  
; 4675 |                         tsensor.ufactor = 1;                           
; 4677 |                         switch (tsensor.method) {                      
; 4678 |                         case MD_RUN_MVV:                               
; 4680 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4681 |                                 for (i = 0; i < 2; i++) {              
; 4682 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4683 |                                         k += 2;                        
; 4684 |                                         intp++;                        
; 4686 |                                 if (tsensor.slope[0] == 0) {           
; 4687 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4689 |                                 tsensor.points = 1;                    
; 4690 |                                 break;                                 
; 4692 |                         case MD_RUN_MAS:                               
; 4694 |                                 tsensor.points = cmdbuff[k++];         
; 4695 |                                 if (tsensor.points > PNT_MAX) {        
; 4696 |                                         tsensor.method = MD_UNCALED;   
; 4697 |                                         break;                         
; 4700 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4701 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4702 |                                         for (i = 0; i < 2; i++) {      
; 4703 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4704 |                                                 k += 2;                
; 4705 |                                                 intp++;                
; 4708 |                                 break;                                 
; 4710 |                         case MD_RUN_SHT:                               
; 4712 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4713 |                                 for (i = 0; i < 2; i++) {              
; 4714 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4715 |                                         k += 2;                        
; 4716 |                                         intp++;                        
; 4718 |                                 if (scale == 0) {                      
; 4719 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4721 |                                 tsensor.points = 1;                    
; 4722 |                                 break;                                 
; 4724 |                         default:                                       
; 4726 |                                 tsensor.method = MD_UNCALED;           
; 4727 |                                 break;                                 
; 4730 |                         if (tsensor.method == MD_UNCALED) {            
; 4731 |                                 bincmdresult = Error_Invalid;          
; 4732 |                                 break;                                 
; 4734 |                         tsensor.tare = 0;                              
; 4735 |                         tsensor.dacgain = 1;                           
; 4736 |                         tsensor.dacoff = 0;                            
; 4737 |                         tsensor.ch = ch;                               
; 4739 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4740 |                                 buff[j] = cmdbuff[j++];                
; 4742 |                         bincmdresult = OK_SendResult;                  
; 4743 |                         break;                                         
; 4745 |                 case StartSCRead:                                      
; 4747 |                         if (cmdlen < 5) {                              
; 4748 |                                 bincmdresult = Error_Invalid;          
; 4749 |                                 break;                                 
; 4751 |                         k = 2;                                         
; 4752 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4753 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4754 |                                 bincmdresult = Error_Invalid;          
; 4755 |                                 break;                                 
; 4758 |                         lcd_clear();                                   
; 4759 |                         lcd_puts("Sensor Calibration..", 0);           
; 4760 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4761 |                         lcd_puts(buff, 20);                            
; 4762 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4763 |                         lcd_puts(buff, 40);                            
; 4765 |                         switch (tsensor.method) {                      
; 4767 |                         case MD_RUN_MVV:                               
; 4769 |                                 lcd_puts("Reading zero point...", 60); 
; 4771 |                                 dsum[0] = 0;                           
; 4772 |                                 sampcnt = CAL_SAMPLES;                 
; 4773 |                                 while (sampcnt--) {                    
; 4774 |                                         while (0 == ad7738_rawrdy()) { 
; 4775 |                                                 delay_us(1);
;     |          // wait                                                       
; 4778 |                                         cntp = ad7738_getraw();        
; 4779 |                                         dsum[0] += cntp->adc[ch];      
; 4781 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4782 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4784 |                                 bincmdresult = OK_SendResult;          
; 4785 |                                 break;                                 
; 4787 |                         case MD_RUN_MAS:                               
; 4789 |                                 pt = cmdbuff[k++];                     
; 4790 |                                 intp = (Uint16*) &scale;               
; 4791 |                                 for (i = 0; i < 2; i++) {              
; 4792 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4793 |                                         k += 2;                        
; 4794 |                                         intp++;                        
; 4796 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4797 |                                         bincmdresult = Error_Invalid;  
; 4798 |                                         break;                         
; 4800 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4801 |                                 lcd_puts(buff, 60);                    
; 4803 |                                 dsum[0] = 0;                           
; 4804 |                                 sampcnt = CAL_SAMPLES;                 
; 4805 |                                 while (sampcnt--) {                    
; 4806 |                                         while (0 == ad7738_rawrdy()) { 
; 4807 |                                                 delay_us(1);
;     |          // wait                                                       
; 4810 |                                         cntp = ad7738_getraw();        
; 4811 |                                         dsum[0] += cntp->adc[ch];      
; 4813 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4815 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4817 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4818 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4819 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4820 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4821 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4822 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4823 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4824 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4825 | 
;     |          * tsensor.adc[k];                                             
; 4829 |                                 bincmdresult = OK_SendResult;          
; 4830 |                                 break;                                 
; 4832 |                         case MD_RUN_SHT:                               
; 4834 |                                 lcd_puts("Reading zero point...", 60); 
; 4836 |                                 for (k = 0; k < 2; k++) {              
; 4837 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4839 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4840 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4841 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4843 |                                                 DINT;                  
; 4844 |                                                 maf_rst();             
; 4845 |                                                 EINT;                  
; 4846 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4849 |                                         dsum[k] = 0;                   
; 4850 |                                         sampcnt = CAL_SAMPLES;         
; 4851 |                                         while (sampcnt--) {            
; 4852 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4853 |                                                         delay_us(1);
;     |                  // wait                                               
; 4856 |                                                 cntp = ad7738_getraw();
; 4857 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4861 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4862 |                                 DINT;                                  
; 4863 |                                 maf_rst();                             
; 4864 |                                 EINT;                                  
; 4866 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4867 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4868 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4869 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4871 |                                 bincmdresult = OK_SendResult;          
; 4872 |                                 break;                                 
; 4874 |                         default:                                       
; 4876 |                                 bincmdresult = Error_Invalid;          
; 4877 |                                 break;                                 
; 4879 |                         lcd_clear();                                   
; 4880 |                         update_units();                                
; 4882 |                         if (bincmdresult != OK_SendResult) {           
; 4883 |                                 break;                                 
; 4885 |                         for (i = 0; i < cmdlen; i++) {                 
; 4886 |                                 buff[i] = cmdbuff[i];                  
; 4888 |                         j = cmdlen;                                    
; 4889 |                         break;                                         
; 4891 |                 case StartSCShuntRd:                                   
; 4893 |                         if (cmdlen < 5) {                              
; 4894 |                                 bincmdresult = Error_Invalid;          
; 4895 |                                 break;                                 
; 4897 |                         k = 2;                                         
; 4898 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4899 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4900 |                                 bincmdresult = Error_Invalid;          
; 4901 |                                 break;                                 
; 4904 |                         lcd_clear();                                   
; 4905 |                         lcd_puts("Sensor Calibration..", 0);           
; 4906 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4907 |                         lcd_puts(buff, 20);                            
; 4908 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4909 |                         lcd_puts(buff, 40);                            
; 4910 |                         lcd_puts("Reading shunt value...", 60);        
; 4912 |                         for (k = 0; k < 2; k++) {                      
; 4913 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4915 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4916 |                                         for (i = 0; i < 50; i++) {     
; 4917 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4919 |                                         DINT;                          
; 4920 |                                         maf_rst();                     
; 4921 |                                         EINT;                          
; 4922 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4925 |                                 dsum[k] = 0;                           
; 4926 |                                 sampcnt = CAL_SAMPLES;                 
; 4927 |                                 while (sampcnt--) {                    
; 4928 |                                         while (0 == ad7738_rawrdy()) { 
; 4929 |                                                 delay_us(1);
;     |          // wait                                                       
; 4932 |                                         cntp = ad7738_getraw();        
; 4933 |                                         dsum[k] += cntp->adc[ch];      
; 4935 |                                 dsum[k] /= CAL_SAMPLES;                
; 4937 |                                 pt = 0;                                
; 4938 |                                 if (tsensor.points > 2) {              
; 4939 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4940 |                                                 pt++;                  
; 4943 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4944 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4947 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4948 |                         DINT;                                          
; 4949 |                         maf_rst();                                     
; 4950 |                         EINT;                                          
; 4952 |                         tsensor.shunt = volt[1] - volt[0];             
; 4954 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4956 |                         DINT;                                          
; 4957 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4958 |                                         sizeof(sconf_t));              
; 4960 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4962 |                         ad7738_setcal();                               
; 4963 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4964 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4965 |                         EINT;                                          
; 4967 |                         unsaved = 1;                                   
; 4969 |                         lcd_clear();                                   
; 4970 |                         update_units();                                
; 4972 |                         for (i = 0; i < cmdlen; i++) {                 
; 4973 |                                 buff[i] = cmdbuff[i];                  
; 4975 |                         j = cmdlen;                                    
; 4976 |                         bincmdresult = OK_SendResult;                  
; 4977 |                         break;                                         
; 4979 |                 case SetSensorName:                                    
; 4981 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 4982 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 4983 |                                 bincmdresult = Error_Invalid;          
; 4984 |                                 break;                                 
; 4986 |                         ss = cmdbuff[2];                               
; 4987 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4989 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 4990 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 4991 |                         for (i = 0; i < slen; i++) {                   
; 4992 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 4994 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 4995 |                         unsaved = 1;                                   
; 4997 |                         // sensor name/label                           
; 4998 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4999 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 5000 |                         for (i = 0; i < slen; i++) {                   
; 5001 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5004 |                         bincmdresult = OK_SendResult;                  
; 5005 |                         break;                                         
; 5007 |                 case SetSensorOUnit:                                   
; 5009 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5010 |                                 bincmdresult = Error_Invalid;          
; 5011 |                                 break;                                 
; 5014 |                         ss = cmdbuff[2];                               
; 5015 |                         pt = cmdbuff[3];                               
; 5017 |                         if (pt != UNIT_PC                              
; 5018 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5019 |                                 bincmdresult = Error_Invalid;          
; 5020 |                                 break;                                 
; 5023 |                         conf_data.sensor[ss].ounit = pt;               
; 5024 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5025 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5027 |                         if (pt == UNIT_PC) {                           
; 5028 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5029 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5030 |                         } else if (conf_data.sensor[ss].ounit          
; 5031 |                                         == conf_data.sensor[ss].unit) {
; 5032 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5033 |                         } else {                                       
; 5034 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5035 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5037 |                                         if (pt == UNIT_KG) {           
; 5038 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5040 |                                         break;                         
; 5042 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5044 |                                         if (pt == UNIT_LB) {           
; 5045 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5047 |                                         break;                         
; 5049 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5051 |                                         switch (pt) {                  
; 5052 |                                         case UNIT_CM:                  
; 5053 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5054 |                                                 break;                 
; 5055 |                                         case UNIT_MM:                  
; 5056 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5057 |                                                 break;                 
; 5059 |                                         break;                         
; 5061 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5063 |                                         switch (pt) {                  
; 5064 |                                         case UNIT_IN:                  
; 5065 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5066 |                                                 break;                 
; 5067 |                                         case UNIT_MM:                  
; 5068 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5069 |                                                 break;                 
; 5071 |                                         break;                         
; 5073 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5075 |                                         switch (pt) {                  
; 5076 |                                         case UNIT_IN:                  
; 5077 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5078 |                                                 break;                 
; 5079 |                                         case UNIT_CM:                  
; 5080 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5081 |                                                 break;                 
; 5083 |                                         break;                         
; 5085 |                                 default:                               
; 5087 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5088 |                                         break;                         
; 5092 |                         unsaved = 1;                                   
; 5094 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5095 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5096 |                                         update_units();                
; 5097 |                                         DINT;                          
; 5098 |                                         ad7738_setcal();               
; 5099 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5100 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5101 |                                         EINT;                          
; 5105 |                         bincmdresult = OK_SendResult;                  
; 5106 |                         break;                                         
; 5108 |                 case SetSensorBase:                                    
; 5110 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5111 |                                 bincmdresult = Error_Invalid;          
; 5112 |                                 break;                                 
; 5114 |                         ss = cmdbuff[2];                               
; 5115 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5117 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5118 |                         for (i = 0; i < 2; i++) {                      
; 5119 |                                 *intp = cmdbuff[j];                    
; 5120 |                                 buff[j++] = 0xff & *intp;              
; 5121 |                                 *intp += cmdbuff[j] << 8;              
; 5122 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5123 |                                 intp++;                                
; 5125 |                         unsaved = 1;                                   
; 5127 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5128 |                                 // output unit is percent              
; 5129 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5130 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5132 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5133 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5134 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5135 |                                                 DINT;                  
; 5136 |                                                 ad7738_setcal();       
; 5137 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5138 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5139 |                                                 EINT;                  
; 5144 |                         bincmdresult = OK_SendResult;                  
; 5145 |                         break;                                         
; 5147 |                 case SetQEPChannels:                                   
; 5149 |                         if (cmdlen < 6) {                              
; 5150 |                                 bincmdresult = Error_Invalid;          
; 5151 |                                 break;                                 
; 5154 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5155 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5156 |                                 for (i = 0; i < 2; i++) {              
; 5157 |                                         *intp = cmdbuff[j];            
; 5158 |                                         buff[j++] = 0xff & *intp;      
; 5159 |                                         *intp += cmdbuff[j] << 8;      
; 5160 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5161 |                                         intp++;                        
; 5165 |                         conf_data.velfilter = cmdbuff[j];              
; 5166 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5167 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5168 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5170 |                         unsaved = 1;                                   
; 5172 |                         DINT;                                          
; 5173 |                         ad7738_setcal();                               
; 5174 |                         velf_rst();                                    
; 5175 |                         EINT;                                          
; 5177 |                         bincmdresult = OK_SendResult;                  
; 5178 |                         break;                                         
; 5180 |                         //case SetEnCntperin: // not needed            
; 5181 |                         //break;                                       
; 5183 |                 case SetCurSensor:                                     
; 5185 |                         if (cmdlen < 4||                               
; 5186 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5187 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5188 |                                 bincmdresult = Error_Invalid;          
; 5189 |                                 break;                                 
; 5192 |                         ch = cmdbuff[2];                               
; 5193 |                         ss = cmdbuff[3];                               
; 5195 |                         if (autoid[ch]) {                              
; 5196 |                                 bincmdresult = Error_Exe;              
; 5197 |                                 break;                                 
; 5200 |                         DINT;                                          
; 5201 |                         conf_data.ch[ch].ci = ss;                      
; 5202 |                         ad7738_setcal();                               
; 5204 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5205 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5206 |                         EINT;                                          
; 5208 |                         update_units();                                
; 5209 |                         unsaved = 1;                                   
; 5211 |                         buff[j++] = ch;                                
; 5212 |                         buff[j++] = ss;                                
; 5213 |                         bincmdresult = OK_SendResult;                  
; 5214 |                         break;                                         
; 5216 |                 case SetAFilterSize:                                   
; 5218 |                         if (cmdlen < 4) {                              
; 5219 |                                 bincmdresult = Error_Invalid;          
; 5220 |                                 break;                                 
; 5223 |                         // filter length                               
; 5224 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5225 |                         if (temp16 > MAF_MAX) {                        
; 5226 |                                 bincmdresult = Error_Invalid;          
; 5227 |                                 break;                                 
; 5230 |                         // filter diff window                          
; 5231 |                         intp = (Uint16*) &tempft;                      
; 5232 |                         for (i = 0; i < 2; i++) {                      
; 5233 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5234 |                                 intp++;                                
; 5237 |                         DINT;                                          
; 5238 |                         conf_data.filter = temp16;                     
; 5239 |                         conf_data.diffwin = tempft;                    
; 5240 |                         maf_rst();                                     
; 5241 |                         EINT;                                          
; 5243 |                         unsaved = 1;                                   
; 5245 |                         buff[j++] = 0xff & temp16;                     
; 5246 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5248 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5249 |                         buff[j++] = 0xff & intp[0];                    
; 5250 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5251 |                         buff[j++] = 0xff & intp[1];                    
; 5252 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5254 |                         bincmdresult = OK_SendResult;                  
; 5255 |                         break;                                         
; 5257 |                 case SetAutoId:                                        
; 5259 |                         if (cmdlen < 3) {                              
; 5260 |                                 bincmdresult = Error_Invalid;          
; 5261 |                                 break;                                 
; 5264 |                         conf_data.tagiden = cmdbuff[2];                
; 5265 |                         if (!conf_data.tagiden) {                      
; 5266 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5267 |                                         tagwasthere[i] = 0;            
; 5268 |                                         autoid[i] = 0;                 
; 5270 |                                 update_units();                        
; 5272 |                         unsaved = 1;                                   
; 5274 |                         buff[j] = cmdbuff[j++];                        
; 5275 |                         bincmdresult = OK_SendResult;                  
; 5276 |                         break;                                         
; 5278 |                 case SetDisplayLine:                                   
; 5280 |                         if (cmdlen < 14) {                             
; 5281 |                                 bincmdresult = Error_Invalid;          
; 5282 |                                 break;                                 
; 5285 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5286 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5287 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5288 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5289 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5290 |                                         || cmdbuff[13] > 5) {          
; 5291 |                                 bincmdresult = Error_Invalid;          
; 5292 |                                 break;                                 
; 5295 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5296 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5297 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5298 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5299 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5300 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5301 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5303 |                         unsaved = 1;                                   
; 5305 |                         lcd_clear();                                   
; 5306 |                         update_units();                                
; 5307 |                         bincmdresult = OK_SendResult;                  
; 5308 |                         break;                                         
; 5310 |                 case SetDACCh:                                         
; 5312 |                         if (cmdlen < 42) {                             
; 5313 |                                 bincmdresult = Error_Invalid;          
; 5314 |                                 break;                                 
; 5317 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5318 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5319 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5320 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5321 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5322 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5323 |                                 bincmdresult = Error_Invalid;          
; 5324 |                                 break;                                 
; 5327 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5328 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5329 |                                 buff[j++] = conf_data.dac[i].what;     
; 5330 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5331 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5333 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5334 |                                 //{                                    
; 5335 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5336 |                                 //}                                    
; 5337 |                                 //else                                 
; 5338 |                                 //{                                    
; 5339 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5340 |                                 //}                                    
; 5341 |                                 for (k = 0; k < 2; k++) {              
; 5342 |                                         *intp = cmdbuff[j];            
; 5343 |                                         buff[j++] = 0xff & *intp;      
; 5344 |                                         *intp += cmdbuff[j] << 8;      
; 5345 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5346 |                                         intp++;                        
; 5349 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5350 |                                 //{                                    
; 5351 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5352 |                                 //}                                    
; 5353 |                                 //else                                 
; 5354 |                                 //{                                    
; 5355 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5356 |                                 //}                                    
; 5357 |                                 for (k = 0; k < 2; k++) {              
; 5358 |                                         *intp = cmdbuff[j];            
; 5359 |                                         buff[j++] = 0xff & *intp;      
; 5360 |                                         *intp += cmdbuff[j] << 8;      
; 5361 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5362 |                                         intp++;                        
; 5365 |                         unsaved = 1;                                   
; 5367 |                         DINT;                                          
; 5368 |                         ad7738_setcal();                               
; 5369 |                         EINT;                                          
; 5370 |                         bincmdresult = OK_SendResult;                  
; 5371 |                         break;                                         
; 5373 |                 case SetLIMITCh:                                       
; 5375 |                         if (cmdlen < 46) {                             
; 5376 |                                 bincmdresult = Error_Invalid;          
; 5377 |                                 break;                                 
; 5380 |                         if (cmdbuff[2]                                 
; 5381 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5382 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5383 |                                 bincmdresult = Error_Invalid;          
; 5384 |                                 break;                                 
; 5387 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5388 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5389 |                                 buff[j++] = conf_data.lim[i].what;     
; 5390 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5391 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5392 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5393 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5395 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5396 |                                 for (k = 0; k < 2; k++) {              
; 5397 |                                         *intp = cmdbuff[j];            
; 5398 |                                         buff[j++] = 0xff & *intp;      
; 5399 |                                         *intp += cmdbuff[j] << 8;      
; 5400 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5401 |                                         intp++;                        
; 5403 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5404 |                                 for (k = 0; k < 2; k++) {              
; 5405 |                                         *intp = cmdbuff[j];            
; 5406 |                                         buff[j++] = 0xff & *intp;      
; 5407 |                                         *intp += cmdbuff[j] << 8;      
; 5408 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5409 |                                         intp++;                        
; 5412 |                         unsaved = 1;                                   
; 5414 |                         DINT;                                          
; 5415 |                         ad7738_setcal();                               
; 5416 |                         EINT;                                          
; 5418 |                         bincmdresult = OK_SendResult;                  
; 5419 |                         break;                                         
; 5421 |                 case Tare:                                             
; 5423 |                         if (cmdlen < 3) {                              
; 5424 |                                 //bincmdresult = Error_Invalid;        
; 5425 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5426 |                                 ad7738_resetpeak(0xff);                
; 5427 |                                 ad7738_resetvall(0xff);                
; 5428 |                                 unsaved = 1;                           
; 5430 |                                 buff[j++] = 0xff;                      
; 5431 |                                 bincmdresult = OK_SendResult;          
; 5432 |                                 break;                                 
; 5435 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5436 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5437 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5438 |                         unsaved = 1;                                   
; 5440 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5441 |                         bincmdresult = OK_SendResult;                  
; 5442 |                         break;                                         
; 5444 |                 case ResetPkVly:                                       
; 5446 |                         if (cmdlen < 3) {                              
; 5447 |                                 bincmdresult = Error_Invalid;          
; 5448 |                                 break;                                 
; 5451 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5452 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5453 |                         unsaved = 1;                                   
; 5455 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5456 |                         bincmdresult = OK_SendResult;                  
; 5457 |                         break;                                         
; 5459 |                 case ResetPk:                                          
; 5461 |                         if (cmdlen < 3) {                              
; 5462 |                                 bincmdresult = Error_Invalid;          
; 5463 |                                 break;                                 
; 5466 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5467 |                         unsaved = 1;                                   
; 5469 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5470 |                         bincmdresult = OK_SendResult;                  
; 5471 |                         break;                                         
; 5473 |                 case ResetVly:                                         
; 5475 |                         if (cmdlen < 3) {                              
; 5476 |                                 bincmdresult = Error_Invalid;          
; 5477 |                                 break;                                 
; 5480 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5481 |                         unsaved = 1;                                   
; 5483 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5484 |                         bincmdresult = OK_SendResult;                  
; 5485 |                         break;                                         
; 5487 |                 case ResetLIMIT:                                       
; 5489 |                         if (cmdlen < 3) {                              
; 5490 |                                 bincmdresult = Error_Invalid;          
; 5491 |                                 break;                                 
; 5494 |                         k = 0x01;                                      
; 5495 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5496 |                                 if (k & cmdbuff[2]) {                  
; 5497 |                                         ad7738_resetlimit(i);          
; 5499 |                                 k <<= 1;                               
; 5501 |                         unsaved = 1;                                   
; 5503 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5504 |                         bincmdresult = OK_SendResult;                  
; 5505 |                         break;                                         
; 5507 |                 case ResetPosition:                                    
; 5509 |                         if (cmdlen < 3) {                              
; 5510 |                                 bincmdresult = Error_Invalid;          
; 5511 |                                 break;                                 
; 5514 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5515 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5516 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5517 |                         unsaved = 1;                                   
; 5519 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5520 |                         bincmdresult = OK_SendResult;                  
; 5521 |                         break;                                         
; 5523 |                 case SetShuntSwitch:                                   
; 5525 |                         if (cmdlen < 3) {                              
; 5526 |                                 bincmdresult = Error_Invalid;          
; 5527 |                                 break;                                 
; 5530 |                         shunt_switch(cmdbuff[2]);                      
; 5531 |                         unsaved = 1;                                   
; 5533 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5534 |                         bincmdresult = OK_SendResult;                  
; 5535 |                         break;                                         
; 5537 |                 case SetDirectVolt:                                    
; 5539 |                         if (cmdlen < 7) {                              
; 5540 |                                 bincmdresult = Error_Invalid;          
; 5541 |                                 break;                                 
; 5544 |                         ss = cmdbuff[j];                               
; 5545 |                         buff[j++] = ss;                                
; 5547 |                         intp = (Uint16*) &volt[0];                     
; 5548 |                         for (k = 0; k < 2; k++) {                      
; 5549 |                                 *intp = cmdbuff[j];                    
; 5550 |                                 buff[j++] = 0xff & *intp;              
; 5551 |                                 *intp += cmdbuff[j] << 8;              
; 5552 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5553 |                                 intp++;                                
; 5556 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5557 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5558 |                                 bincmdresult = Error_Invalid;          
; 5559 |                                 break;                                 
; 5562 |                         if (volt[0] < 0) {                             
; 5563 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5564 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5565 |                         } else {                                       
; 5566 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5567 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5570 |                         if (dsum[0] <= 0) {                            
; 5571 |                                 dacc[0] = 0;                           
; 5572 |                         } else if (dsum[0] >= 0xffff) {                
; 5573 |                                 dacc[0] = 0xffff;                      
; 5574 |                         } else {                                       
; 5575 |                                 dacc[0] = (Uint16) dsum[0];            
; 5578 |                         mcbsp_xmit(dacc[0], ss);                       
; 5579 |                         latch_dac();                                   
; 5581 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5582 |                         buff[j++] = 0xff & dacc[0];                    
; 5583 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5585 |                         bincmdresult = OK_SendResult;                  
; 5586 |                         break;                                         
; 5588 |                 case GetAllFlash:                                      
; 5590 |                         break;                                         
; 5592 |                 case SetAllFlash:                                      
; 5594 |                         break;                                         
; 5596 |                 case FlashMemWrite:                                    
; 5598 |                         bincmdresult = OK_SendResult;                  
; 5599 |                         if (unsaved) {                                 
; 5600 |                                 // flash writing                       
; 5601 |                                 lcd_clear();                           
; 5602 |                                 lcd_puts("Flash writing...", 0);       
; 5604 |                                 for (i = 0; i < 50; i++) {             
; 5605 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5608 |                                 DINT;                                  
; 5609 |                                 flash_ret = conf_write();              
; 5610 |                                 EINT;                                  
; 5612 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5613 |                                         lcd_puts("Done", 16);          
; 5614 |                                         unsaved = 0;                   
; 5615 |                                 } else {                               
; 5616 |                                         lcd_puts("Fail", 16);          
; 5617 |                                         bincmdresult = Error_Exe;      
; 5620 |                                 for (i = 0; i < 50; i++) {             
; 5621 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5623 |                                 lcd_clear();                           
; 5624 |                                 update_units();                        
; 5626 |                         break;                                         
; 5628 |                 case FlashMemDefault:                                  
; 5630 |                         conf_default();                                
; 5632 |                         // flash writing                               
; 5633 |                         lcd_clear();                                   
; 5634 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5636 |                         for (i = 0; i < 50; i++) {                     
; 5637 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5640 |                         DINT;                                          
; 5641 |                         flash_ret = conf_write();                      
; 5642 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5643 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5644 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5645 |                         EINT;                                          
; 5647 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5648 |                                 lcd_puts("Done", 31);                  
; 5649 |                                 unsaved = 0;                           
; 5650 |                                 bincmdresult = OK_SendResult;          
; 5651 |                         } else {                                       
; 5652 |                                 lcd_puts("Fail", 31);                  
; 5653 |                                 bincmdresult = Error_Exe;              
; 5655 |                         for (i = 0; i < 50; i++) {                     
; 5656 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5658 |                         lcd_clear();                                   
; 5659 |                         update_units();                                
; 5661 |                         break;                                         
; 5663 |                 case FlashMemRead:                                     
; 5665 |                         // flash reading                               
; 5666 |                         conf_read();                                   
; 5668 |                         DINT;                                          
; 5669 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5670 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5671 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5672 |                         EINT;                                          
; 5674 |                         unsaved = 0;                                   
; 5675 |                         update_units();                                
; 5676 |                         bincmdresult = OK_SendResult;                  
; 5677 |                         break;                                         
; 5679 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |634| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |634| 
        ; call occurs [#_SPICANRead] ; [] |634| 
        MOVL      XAR0,#40              ; [CPU_] |634| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |634| 
        MOV       *-SP[40],AL           ; [CPU_] |634| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 592,column 2,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |592| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5681,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5681 | if (cmdlen < 6) {                                                      
; 5682 |         bincmdresult = Error_Invalid;                                  
; 5683 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5681| 
        B         $C$L320,LO            ; [CPU_] |5681| 
        ; branchcc occurs ; [] |5681| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5686 | ds_dn = cmdbuff[2];                                                    
; 5687 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5688 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5686| 
        ADDB      ACC,#2                ; [CPU_] |5686| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5689 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5686| 
        MOV       *-SP[52],AL           ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5688| 
        ADDB      ACC,#4                ; [CPU_] |5688| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5690,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5690 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5690| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5688| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5688| 
        MOV       *-SP[51],AL           ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5690,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5692 | tempint = 0;                                                           
; 5693 | k = 0x01;                                                              
; 5694 | for (i = 0; i < 8; i++) {                                              
; 5695 |         if (ds_bm & k) {                                               
; 5696 |                 tempint++;                                             
; 5698 |         k <<= 1;                                                       
; 5701 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5702 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5703 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5704 | //                                      ds_en = 0;                     
; 5705 | //                                      bincmdresult = Error_Invalid;  
; 5706 | //                                      break;                         
; 5707 | //                              }                                      
; 5709 | ds_en = 1;                                                             
; 5710 | ds_stop = 0;                                                           
; 5711 | ds_sn = 0;                                                             
; 5713 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5714 | //                              ad7738_setlimitchgd();                 
; 5716 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5690| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5690| 
        MOV       *-SP[50],AL           ; [CPU_] |5690| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5717,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5717 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5717| 
	.dwpsn	file "../Source/prod.c",line 5709,column 5,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |5709| 
	.dwpsn	file "../Source/prod.c",line 5710,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5710| 
	.dwpsn	file "../Source/prod.c",line 5711,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |5711| 
	.dwpsn	file "../Source/prod.c",line 5718,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5718 | j++;                                                                   
; 5720 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[61],#6           ; [CPU_] |5718| 
	.dwpsn	file "../Source/prod.c",line 5721,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5721 | break;                                                                 
; 5723 | case StopStream:                                                       
; 5725 | ds_stop = 1;                                                           
; 5726 | bincmdresult = OK_SendResult;                                          
; 5727 | break;                                                                 
; 5729 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5731 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5721| 
        ; branch occurs ; [] |5721| 
$C$L80:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4893,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4893| 
        B         $C$L320,LO            ; [CPU_] |4893| 
        ; branchcc occurs ; [] |4893| 
	.dwpsn	file "../Source/prod.c",line 4898,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4898| 
        MOVL      ACC,XAR4              ; [CPU_] |4898| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4898| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4898| 
        MOVL      XAR0,#66              ; [CPU_] |4898| 
        ADDB      ACC,#2                ; [CPU_] |4898| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4898| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4898| 
        CMPL      ACC,XAR6              ; [CPU_] |4898| 
        B         $C$L320,NEQ           ; [CPU_] |4898| 
        ; branchcc occurs ; [] |4898| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4898| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4898| 
        CMPL      ACC,XAR6              ; [CPU_] |4898| 
        B         $C$L320,NEQ           ; [CPU_] |4898| 
        ; branchcc occurs ; [] |4898| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4898| 
        MOVL      XAR0,#64              ; [CPU_] |4898| 
        MOVL      ACC,XAR5              ; [CPU_] |4898| 
        ADDB      ACC,#4                ; [CPU_] |4898| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4898| 
        MOVB      XAR0,#36              ; [CPU_] |4898| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4898| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4898| 
        B         $C$L320,NEQ           ; [CPU_] |4898| 
        ; branchcc occurs ; [] |4898| 
	.dwpsn	file "../Source/prod.c",line 4904,column 5,is_stmt,isa 0
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4904| 
        ; call occurs [#_lcd_clear] ; [] |4904| 
	.dwpsn	file "../Source/prod.c",line 4905,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4905| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4905| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4905| 
        ; call occurs [#_lcd_puts] ; [] |4905| 
	.dwpsn	file "../Source/prod.c",line 4906,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4906| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4906| 
        MOVL      XAR0,#44              ; [CPU_] |4906| 
        ADD       AL,*-SP[58]           ; [CPU_] |4906| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4906| 
        MOV       *-SP[3],AL            ; [CPU_] |4906| 
        MOVB      AL,#1                 ; [CPU_] |4906| 
        ADD       AL,*-SP[57]           ; [CPU_] |4906| 
        MOV       *-SP[4],AL            ; [CPU_] |4906| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4906| 
        MOVL      XAR4,XAR3             ; [CPU_] |4906| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_sprintf")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4906| 
        ; call occurs [#_sprintf] ; [] |4906| 
	.dwpsn	file "../Source/prod.c",line 4907,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4907| 
        MOVL      XAR4,XAR3             ; [CPU_] |4907| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4907| 
        ; call occurs [#_lcd_puts] ; [] |4907| 
	.dwpsn	file "../Source/prod.c",line 4908,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4908| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4908| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4908| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4908| 
        MOVL      XAR0,#58              ; [CPU_] |4908| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4908| 
        MOVB      XAR1,#36              ; [CPU_] |4908| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4908| 
        ADDL      ACC,XAR6              ; [CPU_] |4908| 
        MOVL      XAR4,ACC              ; [CPU_] |4908| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4908| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4908| 
        MOVL      XAR4,XAR3             ; [CPU_] |4908| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_sprintf")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4908| 
        ; call occurs [#_sprintf] ; [] |4908| 
	.dwpsn	file "../Source/prod.c",line 4909,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4909| 
        MOVL      XAR4,XAR3             ; [CPU_] |4909| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4909| 
        ; call occurs [#_lcd_puts] ; [] |4909| 
	.dwpsn	file "../Source/prod.c",line 4910,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4910| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4910| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4910| 
        ; call occurs [#_lcd_puts] ; [] |4910| 
        MOVL      XAR0,#78              ; [CPU_] |4910| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4910| 
        MOVZ      AR0,*-SP[58]          ; [CPU_] |4910| 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[57]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4912,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4912| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *-SP[60],AL           ; [CPU_] |4912| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4913,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4913| 
        B         $C$L83,LEQ            ; [CPU_] |4913| 
        ; branchcc occurs ; [] |4913| 
	.dwpsn	file "../Source/prod.c",line 4915,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4915| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4915| 
        ; call occurs [#_shunt_switch] ; [] |4915| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4917,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4917| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_delay_us")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4917| 
        ; call occurs [#_delay_us] ; [] |4917| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |4917| 
	.dwpsn	file "../Source/prod.c",line 4916,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4916| 
        MOVZ      AR0,AR6               ; [CPU_] |4916| 
        MOV       *-SP[48],AR6          ; [CPU_] |4916| 
        CMP       AR0,#-1               ; [CPU_] |4916| 
        B         $C$L82,NEQ            ; [CPU_] |4916| 
        ; branchcc occurs ; [] |4916| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4920,column 7,is_stmt,isa 0
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_maf_rst")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4920| 
        ; call occurs [#_maf_rst] ; [] |4920| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4922,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4922| 
        SPM       #0                    ; [CPU_] 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_delay_us")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4922| 
        ; call occurs [#_delay_us] ; [] |4922| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4925,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4925| 
	.dwpsn	file "../Source/prod.c",line 4926,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4926| 
	.dwpsn	file "../Source/prod.c",line 4925,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4925| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4925| 
	.dwpsn	file "../Source/prod.c",line 4927,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4927| 
	.dwpsn	file "../Source/prod.c",line 4926,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4926| 
	.dwpsn	file "../Source/prod.c",line 4927,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4927| 
        MOVB      ACC,#0                ; [CPU_] |4927| 
        SUBB      ACC,#1                ; [CPU_] |4927| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4927| 
        B         $C$L86,EQ             ; [CPU_] |4927| 
        ; branchcc occurs ; [] |4927| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4928,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4928| 
        ; branch occurs ; [] |4928| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4929,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4929| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_delay_us")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4929| 
        ; call occurs [#_delay_us] ; [] |4929| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4928,column 14,is_stmt,isa 0
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4928| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4928| 
        CMPB      AL,#0                 ; [CPU_] |4928| 
        B         $C$L84,EQ             ; [CPU_] |4928| 
        ; branchcc occurs ; [] |4928| 
	.dwpsn	file "../Source/prod.c",line 4932,column 7,is_stmt,isa 0
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4932| 
        ; call occurs [#_ad7738_getraw] ; [] |4932| 
	.dwpsn	file "../Source/prod.c",line 4933,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4933| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4933| 
        ADDL      XAR4,ACC              ; [CPU_] |4933| 
        MOVL      XAR0,#34              ; [CPU_] |4933| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4933| 
        MOVL      XAR0,#34              ; [CPU_] |4933| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4933| 
        ASR64     ACC:P,16              ; [CPU_] |4933| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4933| 
        MOVL      XAR0,#34              ; [CPU_] |4933| 
        ASR64     ACC:P,16              ; [CPU_] |4933| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4933| 
        MOVL      XAR0,#34              ; [CPU_] |4933| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4933| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4933| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4933| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4933| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4933| 
	.dwpsn	file "../Source/prod.c",line 4927,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4927| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4927| 
        MOVB      ACC,#0                ; [CPU_] |4927| 
        SUBB      ACC,#1                ; [CPU_] |4927| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4927| 
        B         $C$L85,NEQ            ; [CPU_] |4927| 
        ; branchcc occurs ; [] |4927| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4935| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4935| 
        MOV       *-SP[2],#0            ; [CPU_] |4935| 
        MOV       *-SP[1],#0            ; [CPU_] |4935| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4935| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4935| 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4935| 
        ; call occurs [#LL$$DIV] ; [] |4935| 
	.dwpsn	file "../Source/prod.c",line 4938,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4938| 
        MOVB      XAR0,#46              ; [CPU_] |4938| 
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4937,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4937| 
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4938,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4938| 
        CMPB      AL,#2                 ; [CPU_] |4938| 
        B         $C$L89,LEQ            ; [CPU_] |4938| 
        ; branchcc occurs ; [] |4938| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4939,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4939| 
        ; branch occurs ; [] |4939| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4940,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4940| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4939,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4939| 
        B         $C$L89,HIS            ; [CPU_] |4939| 
        ; branchcc occurs ; [] |4939| 
        MOVB      AL,#1                 ; [CPU_] |4939| 
        ADD       AL,AR4                ; [CPU_] |4939| 
        MOVZ      AR5,AL                ; [CPU_] |4939| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4939| 
        ADDL      ACC,XAR1              ; [CPU_] |4939| 
        MOVL      XAR6,ACC              ; [CPU_] |4939| 
        MOVB      XAR0,#72              ; [CPU_] |4939| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4939| 
        MOVL      XAR0,#32              ; [CPU_] |4939| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4939| 
        MOVL      XAR0,#32              ; [CPU_] |4939| 
        ASR64     ACC:P,16              ; [CPU_] |4939| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4939| 
        MOVL      XAR0,#32              ; [CPU_] |4939| 
        ASR64     ACC:P,16              ; [CPU_] |4939| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4939| 
        MOVL      *-SP[4],P             ; [CPU_] |4939| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4939| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4939| 
        MOVL      P,*-SP[32]            ; [CPU_] |4939| 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$588, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4939| 
        ; call occurs [#LL$$CMP] ; [] |4939| 
        CMPB      AL,#0                 ; [CPU_] |4939| 
        B         $C$L87,GT             ; [CPU_] |4939| 
        ; branchcc occurs ; [] |4939| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4943,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4943| 
        ADDL      ACC,XAR1              ; [CPU_] |4943| 
        MOVL      XAR4,ACC              ; [CPU_] |4943| 
        MOVL      XAR0,#88              ; [CPU_] |4943| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4943| 
        MOVB      XAR0,#96              ; [CPU_] |4943| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4943| 
        MOVL      XAR0,#38              ; [CPU_] |4943| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4943| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4943| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4943| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4943| 
        ; call occurs [#FS$$MPY] ; [] |4943| 
        MOVL      XAR0,#30              ; [CPU_] |4943| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4943| 
        MOVL      P,*XAR3++             ; [CPU_] |4943| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4943| 
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4943| 
        ; call occurs [#LL$$TOFS] ; [] |4943| 
        MOVL      XAR0,#30              ; [CPU_] |4943| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4943| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4943| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4943| 
        ; call occurs [#FS$$MPY] ; [] |4943| 
        MOVL      XAR0,#88              ; [CPU_] |4943| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4943| 
        MOVB      XAR1,#118             ; [CPU_] |4943| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4943| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4943| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4943| 
        ; call occurs [#FS$$ADD] ; [] |4943| 
        MOVL      XAR0,#36              ; [CPU_] |4943| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4943| 
        MOVL      XAR0,#36              ; [CPU_] |4943| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4943| 
	.dwpsn	file "../Source/prod.c",line 4912,column 17,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4912| 
	.dwpsn	file "../Source/prod.c",line 4943,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4943| 
        MOV       AL,*-SP[60]           ; [CPU_] |4943| 
	.dwpsn	file "../Source/prod.c",line 4912,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4912| 
        B         $C$L81,LT             ; [CPU_] |4912| 
        ; branchcc occurs ; [] |4912| 
	.dwpsn	file "../Source/prod.c",line 4947,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4947| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4947| 
        ; call occurs [#_shunt_switch] ; [] |4947| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4949,column 5,is_stmt,isa 0
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("_maf_rst")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4949| 
        ; call occurs [#_maf_rst] ; [] |4949| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4952| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4952| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4952| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4952| 
        ; call occurs [#FS$$SUB] ; [] |4952| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4952| 
        MOVL      XAR0,#36              ; [CPU_] |4952| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4952| 
        MOVB      XAR0,#140             ; [CPU_] |4952| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4952| 
        MOV       AL,*-SP[58]           ; [CPU_] |4952| 
	.dwpsn	file "../Source/prod.c",line 4954,column 5,is_stmt,isa 0
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("_tagid")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4954| 
        ; call occurs [#_tagid] ; [] |4954| 
        MOVL      XAR4,XAR1             ; [CPU_] |4954| 
        ADDB      XAR4,#32              ; [CPU_] |4954| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4954| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4954| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4957,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4957| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4957| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4957| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4957| 
        MOV       AL,*-SP[57]           ; [CPU_] |4957| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4960,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4960| 
	.dwpsn	file "../Source/prod.c",line 4962,column 5,is_stmt,isa 0
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4962| 
        ; call occurs [#_ad7738_setcal] ; [] |4962| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |4962| 
	.dwpsn	file "../Source/prod.c",line 4963,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4963| 
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4963| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4963| 
        MOV       AL,AR1                ; [CPU_] |4963| 
	.dwpsn	file "../Source/prod.c",line 4964,column 5,is_stmt,isa 0
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4964| 
        ; call occurs [#_ad7738_resetvall] ; [] |4964| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4969,column 5,is_stmt,isa 0
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4969| 
        ; call occurs [#_lcd_clear] ; [] |4969| 
	.dwpsn	file "../Source/prod.c",line 4970,column 5,is_stmt,isa 0
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_update_units")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4970| 
        ; call occurs [#_update_units] ; [] |4970| 
        MOVL      XAR0,#42              ; [CPU_] |4970| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4970| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4972,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4972| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 4973,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4973| 
	.dwpsn	file "../Source/prod.c",line 4972,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4972| 
	.dwpsn	file "../Source/prod.c",line 4973,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4973| 
	.dwpsn	file "../Source/prod.c",line 4972,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4972| 
	.dwpsn	file "../Source/prod.c",line 4973,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4973| 
	.dwpsn	file "../Source/prod.c",line 4972,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4972| 
        B         $C$L90,HI             ; [CPU_] |4972| 
        ; branchcc occurs ; [] |4972| 
	.dwpsn	file "../Source/prod.c",line 4975,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4975| 
	.dwpsn	file "../Source/prod.c",line 4977,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4977| 
        ; branch occurs ; [] |4977| 
$C$L91:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4747,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4747| 
        B         $C$L320,LO            ; [CPU_] |4747| 
        ; branchcc occurs ; [] |4747| 
	.dwpsn	file "../Source/prod.c",line 4752,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4752| 
        MOVL      XAR0,#66              ; [CPU_] |4752| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4752| 
        ADDB      ACC,#2                ; [CPU_] |4752| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4752| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4752| 
        CMPL      ACC,XAR6              ; [CPU_] |4752| 
        B         $C$L320,NEQ           ; [CPU_] |4752| 
        ; branchcc occurs ; [] |4752| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4752| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4752| 
        CMPL      ACC,XAR6              ; [CPU_] |4752| 
        B         $C$L320,NEQ           ; [CPU_] |4752| 
        ; branchcc occurs ; [] |4752| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4752| 
        MOVL      XAR0,#64              ; [CPU_] |4752| 
        MOVL      ACC,XAR5              ; [CPU_] |4752| 
        ADDB      ACC,#4                ; [CPU_] |4752| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4752| 
        MOVB      XAR0,#36              ; [CPU_] |4752| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4752| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4752| 
        B         $C$L320,NEQ           ; [CPU_] |4752| 
        ; branchcc occurs ; [] |4752| 
	.dwpsn	file "../Source/prod.c",line 4758,column 5,is_stmt,isa 0
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4758| 
        ; call occurs [#_lcd_clear] ; [] |4758| 
	.dwpsn	file "../Source/prod.c",line 4759,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4759| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4759| 
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4759| 
        ; call occurs [#_lcd_puts] ; [] |4759| 
	.dwpsn	file "../Source/prod.c",line 4760,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4760| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4760| 
        MOVL      XAR0,#44              ; [CPU_] |4760| 
        ADD       AL,*-SP[58]           ; [CPU_] |4760| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4760| 
        MOV       *-SP[3],AL            ; [CPU_] |4760| 
        MOVB      AL,#1                 ; [CPU_] |4760| 
        ADD       AL,*-SP[57]           ; [CPU_] |4760| 
        MOV       *-SP[4],AL            ; [CPU_] |4760| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4760| 
        MOVL      XAR4,XAR1             ; [CPU_] |4760| 
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_sprintf")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4760| 
        ; call occurs [#_sprintf] ; [] |4760| 
	.dwpsn	file "../Source/prod.c",line 4761,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4761| 
	.dwpsn	file "../Source/prod.c",line 4760,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4760| 
	.dwpsn	file "../Source/prod.c",line 4761,column 5,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4761| 
        ; call occurs [#_lcd_puts] ; [] |4761| 
	.dwpsn	file "../Source/prod.c",line 4762,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4762| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4762| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4762| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4762| 
        MOVL      XAR0,#58              ; [CPU_] |4762| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4762| 
        MOVB      XAR1,#36              ; [CPU_] |4762| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4762| 
        ADDL      ACC,XAR6              ; [CPU_] |4762| 
        MOVL      XAR4,ACC              ; [CPU_] |4762| 
        MOVL      XAR0,#44              ; [CPU_] |4762| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4762| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4762| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4762| 
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_sprintf")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4762| 
        ; call occurs [#_sprintf] ; [] |4762| 
        MOVL      XAR0,#44              ; [CPU_] |4762| 
	.dwpsn	file "../Source/prod.c",line 4763,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4763| 
	.dwpsn	file "../Source/prod.c",line 4762,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4762| 
	.dwpsn	file "../Source/prod.c",line 4763,column 5,is_stmt,isa 0
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4763| 
        ; call occurs [#_lcd_puts] ; [] |4763| 
	.dwpsn	file "../Source/prod.c",line 4765,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4765| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4765| 
        MOVB      XAR1,#36              ; [CPU_] |4765| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4765| 
        CMPB      AL,#1                 ; [CPU_] |4765| 
        B         $C$L92,EQ             ; [CPU_] |4765| 
        ; branchcc occurs ; [] |4765| 
        CMPB      AL,#2                 ; [CPU_] |4765| 
        B         $C$L105,EQ            ; [CPU_] |4765| 
        ; branchcc occurs ; [] |4765| 
        CMPB      AL,#3                 ; [CPU_] |4765| 
        B         $C$L96,EQ             ; [CPU_] |4765| 
        ; branchcc occurs ; [] |4765| 
        B         $C$L112,UNC           ; [CPU_] |4765| 
        ; branch occurs ; [] |4765| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4769,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4769| 
        MOVB      AL,#60                ; [CPU_] |4769| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4769| 
        ; call occurs [#_lcd_puts] ; [] |4769| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4771| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4772,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4772| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4771| 
	.dwpsn	file "../Source/prod.c",line 4773,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4773| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4772,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4772| 
        MOV       T,*-SP[58]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4771| 
	.dwpsn	file "../Source/prod.c",line 4773,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4773| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4773| 
	.dwpsn	file "../Source/prod.c",line 4771,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4771| 
	.dwpsn	file "../Source/prod.c",line 4773,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4773| 
        SUBB      ACC,#1                ; [CPU_] |4773| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4773| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4773| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4773| 
        ; branchcc occurs ; [] |4773| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4774,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4774| 
        ; branch occurs ; [] |4774| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4775,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4775| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_delay_us")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4775| 
        ; call occurs [#_delay_us] ; [] |4775| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4774,column 14,is_stmt,isa 0
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4774| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4774| 
        CMPB      AL,#0                 ; [CPU_] |4774| 
        B         $C$L93,EQ             ; [CPU_] |4774| 
        ; branchcc occurs ; [] |4774| 
	.dwpsn	file "../Source/prod.c",line 4778,column 7,is_stmt,isa 0
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4778| 
        ; call occurs [#_ad7738_getraw] ; [] |4778| 
	.dwpsn	file "../Source/prod.c",line 4779,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4779| 
        ADDL      XAR4,ACC              ; [CPU_] |4779| 
        MOVL      XAR0,#28              ; [CPU_] |4779| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4779| 
        MOVL      XAR0,#28              ; [CPU_] |4779| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4779| 
        ASR64     ACC:P,16              ; [CPU_] |4779| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4779| 
        MOVL      XAR0,#28              ; [CPU_] |4779| 
        ASR64     ACC:P,16              ; [CPU_] |4779| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4779| 
        MOVL      XAR0,#28              ; [CPU_] |4779| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4779| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4779| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4779| 
        MOVL      *-SP[32],P            ; [CPU_] |4779| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4779| 
	.dwpsn	file "../Source/prod.c",line 4773,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4773| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4773| 
        MOVB      ACC,#0                ; [CPU_] |4773| 
        SUBB      ACC,#1                ; [CPU_] |4773| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4773| 
        B         $C$L94,NEQ            ; [CPU_] |4773| 
        ; branchcc occurs ; [] |4773| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4781,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4781| 
	.dwpsn	file "../Source/prod.c",line 4785,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4785| 
        ; branch occurs ; [] |4785| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4834,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4834| 
        MOVB      AL,#60                ; [CPU_] |4834| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4834| 
        ; call occurs [#_lcd_puts] ; [] |4834| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4836,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4836| 
        MOV       *-SP[60],AL           ; [CPU_] |4836| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4837,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4837| 
        B         $C$L99,LEQ            ; [CPU_] |4837| 
        ; branchcc occurs ; [] |4837| 
	.dwpsn	file "../Source/prod.c",line 4839,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4839| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4839| 
        ; call occurs [#_shunt_switch] ; [] |4839| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4841,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4841| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_delay_us")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4841| 
        ; call occurs [#_delay_us] ; [] |4841| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4841| 
	.dwpsn	file "../Source/prod.c",line 4840,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4840| 
        MOVZ      AR0,AR6               ; [CPU_] |4840| 
        MOV       *-SP[47],AR6          ; [CPU_] |4840| 
        CMP       AR0,#-1               ; [CPU_] |4840| 
        B         $C$L98,NEQ            ; [CPU_] |4840| 
        ; branchcc occurs ; [] |4840| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4844,column 8,is_stmt,isa 0
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_maf_rst")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4844| 
        ; call occurs [#_maf_rst] ; [] |4844| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4846,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4846| 
        SPM       #0                    ; [CPU_] 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_delay_us")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4846| 
        ; call occurs [#_delay_us] ; [] |4846| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4849,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4850,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4850| 
	.dwpsn	file "../Source/prod.c",line 4849,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4849| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4851,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4851| 
	.dwpsn	file "../Source/prod.c",line 4850,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4850| 
	.dwpsn	file "../Source/prod.c",line 4851,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4851| 
        MOVB      ACC,#0                ; [CPU_] |4851| 
        SUBB      ACC,#1                ; [CPU_] |4851| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4851| 
        B         $C$L101,EQ            ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4852,column 15,is_stmt,isa 0
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4852| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4852| 
        CMPB      AL,#0                 ; [CPU_] |4852| 
        B         $C$L104,EQ            ; [CPU_] |4852| 
        ; branchcc occurs ; [] |4852| 
	.dwpsn	file "../Source/prod.c",line 4856,column 8,is_stmt,isa 0
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4856| 
        ; call occurs [#_ad7738_getraw] ; [] |4856| 
	.dwpsn	file "../Source/prod.c",line 4857,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4857| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4857| 
        ADDL      XAR4,ACC              ; [CPU_] |4857| 
        MOVL      XAR0,#26              ; [CPU_] |4857| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4857| 
        MOVL      XAR0,#26              ; [CPU_] |4857| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4857| 
        ASR64     ACC:P,16              ; [CPU_] |4857| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4857| 
        MOVL      XAR0,#26              ; [CPU_] |4857| 
        ASR64     ACC:P,16              ; [CPU_] |4857| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4857| 
        MOVL      XAR0,#26              ; [CPU_] |4857| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4857| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4857| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4857| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4857| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4857| 
	.dwpsn	file "../Source/prod.c",line 4851,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4851| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4851| 
        MOVB      ACC,#0                ; [CPU_] |4851| 
        SUBB      ACC,#1                ; [CPU_] |4851| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4851| 
        B         $C$L100,NEQ           ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4836,column 18,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4836| 
        ADDB      XAR1,#4               ; [CPU_] |4836| 
        MOV       AL,*-SP[60]           ; [CPU_] |4836| 
        CMPB      AL,#2                 ; [CPU_] |4836| 
        B         $C$L97,LT             ; [CPU_] |4836| 
        ; branchcc occurs ; [] |4836| 
	.dwpsn	file "../Source/prod.c",line 4861,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4861| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4861| 
        ; call occurs [#_shunt_switch] ; [] |4861| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4863,column 6,is_stmt,isa 0
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_maf_rst")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4863| 
        ; call occurs [#_maf_rst] ; [] |4863| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4866,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4866| 
        MOV       AH,#17948             ; [CPU_] |4866| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4866| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4866| 
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4866| 
        ; call occurs [#FS$$MPY] ; [] |4866| 
        MOVL      XAR1,ACC              ; [CPU_] |4866| 
        MOVL      P,*-SP[28]            ; [CPU_] |4866| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4866| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4866| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4866| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4866| 
        ; call occurs [#LL$$TOFS] ; [] |4866| 
        MOVL      XAR0,#88              ; [CPU_] |4866| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4866| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4866| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4866| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4866| 
        ; call occurs [#FS$$MPY] ; [] |4866| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4866| 
        MOVL      ACC,XAR1              ; [CPU_] |4866| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4866| 
        ; call occurs [#FS$$DIV] ; [] |4866| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4866| 
        MOVB      XAR0,#96              ; [CPU_] |4866| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4866| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4868,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4868| 
        MOVL      XAR0,#52              ; [CPU_] |4868| 
        ADDB      ACC,#96               ; [CPU_] |4868| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4868| 
        MOVL      XAR0,#88              ; [CPU_] |4868| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4868| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4868| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4868| 
        ; call occurs [#FS$$NEG] ; [] |4868| 
        MOVB      XAR0,#96              ; [CPU_] |4868| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4868| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4868| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4868| 
        ; call occurs [#FS$$MPY] ; [] |4868| 
        MOVL      XAR1,ACC              ; [CPU_] |4868| 
        MOVL      P,*-SP[32]            ; [CPU_] |4868| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4868| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4868| 
        ; call occurs [#LL$$TOFS] ; [] |4868| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4868| 
        MOVL      ACC,XAR1              ; [CPU_] |4868| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4868| 
        ; call occurs [#FS$$MPY] ; [] |4868| 
        MOVL      XAR6,ACC              ; [CPU_] |4868| 
        MOV       AL,#16384             ; [CPU_] |4868| 
        MOV       AH,#17948             ; [CPU_] |4868| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4868| 
        MOVL      ACC,XAR6              ; [CPU_] |4868| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4868| 
        ; call occurs [#FS$$DIV] ; [] |4868| 
        MOVL      XAR0,#36              ; [CPU_] |4868| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4868| 
        MOVB      XAR1,#118             ; [CPU_] |4868| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4868| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4871,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4871| 
	.dwpsn	file "../Source/prod.c",line 4872,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4872| 
        ; branch occurs ; [] |4872| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4853,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4853| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("_delay_us")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4853| 
        ; call occurs [#_delay_us] ; [] |4853| 
	.dwpsn	file "../Source/prod.c",line 4852,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4852| 
        ; branch occurs ; [] |4852| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4789| 
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4790| 
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4789| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4789| 
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4790| 
        MOVZ      AR5,AR5               ; [CPU_] |4790| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4792,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4792| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4792| 
        MOV       *XAR5++,AL            ; [CPU_] |4792| 
	.dwpsn	file "../Source/prod.c",line 4793,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4793| 
	.dwpsn	file "../Source/prod.c",line 4791,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4791| 
        ; branchcc occurs ; [] |4791| 
	.dwpsn	file "../Source/prod.c",line 4796,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4796| 
        MOVB      XAR0,#46              ; [CPU_] |4796| 
        MOV       AL,*-SP[47]           ; [CPU_] |4796| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4796| 
        B         $C$L112,HIS           ; [CPU_] |4796| 
        ; branchcc occurs ; [] |4796| 
        MOVL      XAR0,#36              ; [CPU_] |4796| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4796| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4796| 
        ADDL      ACC,XAR6              ; [CPU_] |4796| 
        ADDB      ACC,#48               ; [CPU_] |4796| 
        MOVL      XAR1,ACC              ; [CPU_] |4796| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4796| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4796| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4796| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4796| 
        ; call occurs [#FS$$CMP] ; [] |4796| 
        CMPB      AL,#0                 ; [CPU_] |4796| 
        B         $C$L112,NEQ           ; [CPU_] |4796| 
        ; branchcc occurs ; [] |4796| 
	.dwpsn	file "../Source/prod.c",line 4800,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4800| 
        MOVB      AL,#1                 ; [CPU_] |4800| 
        MOVL      XAR0,#44              ; [CPU_] |4800| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4800| 
        ADD       AL,*-SP[47]           ; [CPU_] |4800| 
        MOV       *-SP[3],AL            ; [CPU_] |4800| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4800| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("_sprintf")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4800| 
        ; call occurs [#_sprintf] ; [] |4800| 
        MOVL      XAR0,#44              ; [CPU_] |4800| 
	.dwpsn	file "../Source/prod.c",line 4801,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4801| 
	.dwpsn	file "../Source/prod.c",line 4800,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4800| 
	.dwpsn	file "../Source/prod.c",line 4801,column 6,is_stmt,isa 0
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4801| 
        ; call occurs [#_lcd_puts] ; [] |4801| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4804,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4804| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4804,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4804| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4805| 
	.dwpsn	file "../Source/prod.c",line 4803,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4805| 
        MOVB      ACC,#0                ; [CPU_] |4805| 
        SUBB      ACC,#1                ; [CPU_] |4805| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4805| 
        B         $C$L108,EQ            ; [CPU_] |4805| 
        ; branchcc occurs ; [] |4805| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4806,column 14,is_stmt,isa 0
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4806| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4806| 
        CMPB      AL,#0                 ; [CPU_] |4806| 
        B         $C$L111,EQ            ; [CPU_] |4806| 
        ; branchcc occurs ; [] |4806| 
	.dwpsn	file "../Source/prod.c",line 4810,column 7,is_stmt,isa 0
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4810| 
        ; call occurs [#_ad7738_getraw] ; [] |4810| 
	.dwpsn	file "../Source/prod.c",line 4811,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4811| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4811| 
        ADDL      XAR4,ACC              ; [CPU_] |4811| 
        MOVL      XAR0,#24              ; [CPU_] |4811| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4811| 
        MOVL      XAR0,#24              ; [CPU_] |4811| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4811| 
        ASR64     ACC:P,16              ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      XAR0,#24              ; [CPU_] |4811| 
        ASR64     ACC:P,16              ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      XAR0,#24              ; [CPU_] |4811| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4811| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4811| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4811| 
        MOVL      *-SP[32],P            ; [CPU_] |4811| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4805,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4805| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4805| 
        MOVB      ACC,#0                ; [CPU_] |4805| 
        SUBB      ACC,#1                ; [CPU_] |4805| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4805| 
        B         $C$L107,NEQ           ; [CPU_] |4805| 
        ; branchcc occurs ; [] |4805| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4813,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4813| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4813| 
        MOV       *-SP[2],#0            ; [CPU_] |4813| 
        MOV       *-SP[1],#0            ; [CPU_] |4813| 
        MOVL      P,*-SP[32]            ; [CPU_] |4813| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4813| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4813| 
        ; call occurs [#LL$$DIV] ; [] |4813| 
        ADDB      XAR1,#24              ; [CPU_] |4813| 
	.dwpsn	file "../Source/prod.c",line 4815,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4815| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4815| 
	.dwpsn	file "../Source/prod.c",line 4813,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4813| 
	.dwpsn	file "../Source/prod.c",line 4815,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4815| 
        MOV       AL,*-SP[47]           ; [CPU_] |4815| 
        SUB       AL,AR6                ; [CPU_] |4815| 
        MOVZ      AR7,AL                ; [CPU_] |4815| 
        MOVL      XAR4,#65535           ; [CPU_U] |4815| 
        MOVL      ACC,XAR4              ; [CPU_] |4815| 
        CMPL      ACC,XAR7              ; [CPU_] |4815| 
        B         $C$L103,NEQ           ; [CPU_] |4815| 
        ; branchcc occurs ; [] |4815| 
	.dwpsn	file "../Source/prod.c",line 4818,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4818| 
        B         $C$L110,UNC           ; [CPU_] |4818| 
        ; branch occurs ; [] |4818| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4819,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4819| 
        MOVB      AL,#10                ; [CPU_] |4819| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4819| 
        MOV       T,*-SP[58]            ; [CPU_] |4819| 
        MPYU      ACC,T,AL              ; [CPU_] |4819| 
        MOVL      XAR0,#88              ; [CPU_] |4819| 
        ADDL      ACC,XAR6              ; [CPU_] |4819| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4819| 
        MOVL      XAR0,#36              ; [CPU_] |4819| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4819| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[47]           ; [CPU_] |4819| 
        MOV       ACC,AL << 1           ; [CPU_] |4819| 
        ADDL      ACC,XAR6              ; [CPU_] |4819| 
        MOVL      XAR3,ACC              ; [CPU_] |4819| 
        MOVB      XAR0,#48              ; [CPU_] |4819| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4819| 
        MOVB      XAR0,#50              ; [CPU_] |4819| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4819| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4819| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4819| 
        ; call occurs [#FS$$SUB] ; [] |4819| 
        MOVL      XAR0,#42              ; [CPU_] |4819| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4819| 
        MOVB      XAR0,#74              ; [CPU_] |4819| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4819| 
        MOVB      XAR0,#72              ; [CPU_] |4819| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4819| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4819| 
        ; call occurs [#L$$TOFS] ; [] |4819| 
        MOVL      XAR0,#42              ; [CPU_] |4819| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4819| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4819| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4819| 
        ; call occurs [#FS$$DIV] ; [] |4819| 
        MOVL      XAR0,#88              ; [CPU_] |4819| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4819| 
        MOVB      XAR1,#44              ; [CPU_] |4819| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4819| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4819| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4819| 
        ; call occurs [#FS$$DIV] ; [] |4819| 
        MOVB      XAR0,#96              ; [CPU_] |4819| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4819| 
	.dwpsn	file "../Source/prod.c",line 4823,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4823| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4823| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4823| 
        MOVB      XAR1,#44              ; [CPU_] |4823| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4823| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4823| 
        ; call occurs [#FS$$MPY] ; [] |4823| 
        MOVL      XAR0,#88              ; [CPU_] |4823| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4823| 
        MOVB      XAR0,#72              ; [CPU_] |4823| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4823| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4823| 
        ; call occurs [#L$$TOFS] ; [] |4823| 
        MOVL      XAR0,#88              ; [CPU_] |4823| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4823| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4823| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4823| 
        ; call occurs [#FS$$MPY] ; [] |4823| 
        MOVB      XAR0,#48              ; [CPU_] |4823| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4823| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4823| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4823| 
        ; call occurs [#FS$$SUB] ; [] |4823| 
        MOVB      XAR0,#118             ; [CPU_] |4823| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4823| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4818,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4818| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4818,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4818| 
        ADDB      AL,#-1                ; [CPU_] |4818| 
        CMP       AL,*-SP[47]           ; [CPU_] |4818| 
        B         $C$L109,GT            ; [CPU_] |4818| 
        ; branchcc occurs ; [] |4818| 
	.dwpsn	file "../Source/prod.c",line 4830,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4830| 
        ; branch occurs ; [] |4830| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4807,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4807| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("_delay_us")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4807| 
        ; call occurs [#_delay_us] ; [] |4807| 
	.dwpsn	file "../Source/prod.c",line 4806,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4806| 
        ; branch occurs ; [] |4806| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4797,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4797| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4879,column 5,is_stmt,isa 0
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4879| 
        ; call occurs [#_lcd_clear] ; [] |4879| 
	.dwpsn	file "../Source/prod.c",line 4880,column 5,is_stmt,isa 0
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("_update_units")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4880| 
        ; call occurs [#_update_units] ; [] |4880| 
        MOV       AL,*-SP[47]           ; [CPU_] |4880| 
	.dwpsn	file "../Source/prod.c",line 4883,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4883| 
        ; branchcc occurs ; [] |4883| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4885,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4885| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4886,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4886| 
	.dwpsn	file "../Source/prod.c",line 4885,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4885| 
	.dwpsn	file "../Source/prod.c",line 4886,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4886| 
	.dwpsn	file "../Source/prod.c",line 4885,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4885| 
	.dwpsn	file "../Source/prod.c",line 4886,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4886| 
	.dwpsn	file "../Source/prod.c",line 4885,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4885| 
        B         $C$L114,HI            ; [CPU_] |4885| 
        ; branchcc occurs ; [] |4885| 
	.dwpsn	file "../Source/prod.c",line 4888,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4888| 
	.dwpsn	file "../Source/prod.c",line 4889,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4889| 
        ; branch occurs ; [] |4889| 
$C$L115:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4599,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4599| 
        B         $C$L320,LO            ; [CPU_] |4599| 
        ; branchcc occurs ; [] |4599| 
	.dwpsn	file "../Source/prod.c",line 4604,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4604| 
        MOV       *-SP[58],AL           ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4606,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4606| 
	.dwpsn	file "../Source/prod.c",line 4605,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4605| 
        MOV       *-SP[57],AL           ; [CPU_] |4605| 
	.dwpsn	file "../Source/prod.c",line 4606,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4606| 
        MOV       AL,*-SP[58]           ; [CPU_] |4606| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4606| 
        CMPB      AL,#4                 ; [CPU_] |4606| 
        B         $C$L320,HIS           ; [CPU_] |4606| 
        ; branchcc occurs ; [] |4606| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4606| 
        B         $C$L320,HIS           ; [CPU_] |4606| 
        ; branchcc occurs ; [] |4606| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4612,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4612| 
        MOVL      ACC,XAR4              ; [CPU_] |4612| 
        ADDB      ACC,#4                ; [CPU_] |4612| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4612| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4612| 
        CMPB      AL,#16                ; [CPU_] |4612| 
        B         $C$L320,HIS           ; [CPU_] |4612| 
        ; branchcc occurs ; [] |4612| 
	.dwpsn	file "../Source/prod.c",line 4616,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4616| 
        MOVL      XAR0,#64              ; [CPU_] |4616| 
        CMPB      AL,#0                 ; [CPU_] |4616| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4616| 
        B         $C$L116,LEQ           ; [CPU_] |4616| 
        ; branchcc occurs ; [] |4616| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4616| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4616| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4616| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4616| 
        MOVL      XAR0,ACC              ; [CPU_] |4616| 
	.dwpsn	file "../Source/prod.c",line 4617,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4617| 
        ADD       AL,AR4                ; [CPU_] |4617| 
        MOVZ      AR6,AL                ; [CPU_] |4617| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4617| 
	.dwpsn	file "../Source/prod.c",line 4616,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4616| 
        ; branch occurs ; [] |4616| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4616,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4616| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4619,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4619| 
        MOVL      XAR0,#86              ; [CPU_] |4619| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4619| 
	.dwpsn	file "../Source/prod.c",line 4621,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4621| 
        MOVL      XAR4,ACC              ; [CPU_] |4621| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4621| 
        CMPB      AL,#16                ; [CPU_] |4621| 
        B         $C$L320,HIS           ; [CPU_] |4621| 
        ; branchcc occurs ; [] |4621| 
        ADDB      XAR4,#1               ; [CPU_] |4621| 
	.dwpsn	file "../Source/prod.c",line 4626,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4626| 
	.dwpsn	file "../Source/prod.c",line 4621,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4621| 
        MOVL      P,XAR4                ; [CPU_] |4621| 
	.dwpsn	file "../Source/prod.c",line 4626,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        MOVZ      AR5,AL                ; [CPU_] |4626| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4627,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4627| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4627| 
        MOV       *XAR4++,AL            ; [CPU_] |4627| 
        ADDB      XAR7,#1               ; [CPU_] |4627| 
        MOVL      P,XAR7                ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4626,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        B         $C$L120,UNC           ; [CPU_] |4626| 
        ; branch occurs ; [] |4626| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4626,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4626| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4629,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4629| 
        ADD       ACC,AR5               ; [CPU_] |4629| 
        MOVL      XAR4,ACC              ; [CPU_] |4629| 
        MOVB      XAR0,#16              ; [CPU_] |4629| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4629| 
	.dwpsn	file "../Source/prod.c",line 4631,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4631| 
        MOV       AL,*XAR7              ; [CPU_] |4631| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4631| 
        ADDB      XAR7,#1               ; [CPU_] |4631| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4631| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4631| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4635,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4635| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4635| 
	.dwpsn	file "../Source/prod.c",line 4636,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4635,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4635| 
        MOV       *XAR5++,AL            ; [CPU_] |4635| 
	.dwpsn	file "../Source/prod.c",line 4636,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4636| 
        MOVL      P,XAR7                ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4634,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4634| 
        ; branchcc occurs ; [] |4634| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4642,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4642| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4642| 
	.dwpsn	file "../Source/prod.c",line 4643,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4643| 
	.dwpsn	file "../Source/prod.c",line 4642,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4642| 
        MOV       *XAR0++,AL            ; [CPU_] |4642| 
	.dwpsn	file "../Source/prod.c",line 4643,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4643| 
        MOVL      P,XAR5                ; [CPU_] |4643| 
	.dwpsn	file "../Source/prod.c",line 4641,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4641| 
        ; branchcc occurs ; [] |4641| 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4646| 
        MOVB      XAR0,#40              ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4648,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4646| 
        MOVB      XAR0,#142             ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4648,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4646,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4646| 
	.dwpsn	file "../Source/prod.c",line 4648,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4648| 
        MOV       AL,*XAR7              ; [CPU_] |4648| 
        ADDB      XAR7,#1               ; [CPU_] |4648| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4649,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4649| 
	.dwpsn	file "../Source/prod.c",line 4648,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4649,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4649| 
        CMPB      AL,#6                 ; [CPU_] |4649| 
        B         $C$L123,GT            ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
        CMPB      AL,#6                 ; [CPU_] |4649| 
        B         $C$L126,EQ            ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
        CMPB      AL,#1                 ; [CPU_] |4649| 
        B         $C$L129,LOS           ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
        MOV       AH,AL                 ; [CPU_] |4649| 
        ADDB      AH,#-2                ; [CPU_] |4649| 
        CMPB      AH,#2                 ; [CPU_] |4649| 
        B         $C$L128,LOS           ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
        CMPB      AL,#5                 ; [CPU_] |4649| 
        B         $C$L127,EQ            ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
        B         $C$L124,UNC           ; [CPU_] |4649| 
        ; branch occurs ; [] |4649| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4649| 
        ADDB      AH,#-7                ; [CPU_] |4649| 
        CMPB      AH,#1                 ; [CPU_] |4649| 
        B         $C$L125,LOS           ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
        CMPB      AL,#15                ; [CPU_] |4649| 
        B         $C$L125,EQ            ; [CPU_] |4649| 
        ; branchcc occurs ; [] |4649| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4671,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4671| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4671| 
	.dwpsn	file "../Source/prod.c",line 4672,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4672| 
        ; branch occurs ; [] |4672| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4668,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4669,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4669| 
        ; branch occurs ; [] |4669| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4663,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4663| 
	.dwpsn	file "../Source/prod.c",line 4664,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4664| 
        ; branch occurs ; [] |4664| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4660,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4661,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4661| 
        ; branch occurs ; [] |4661| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4657,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4658,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4658| 
        ; branch occurs ; [] |4658| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4652,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4652| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4674,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4674| 
        MOVB      XAR0,#43              ; [CPU_] |4674| 
        ADDB      XAR7,#42              ; [CPU_] |4674| 
        MOV       AL,*XAR7              ; [CPU_] |4674| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4674| 
	.dwpsn	file "../Source/prod.c",line 4675,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4675| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4675| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4675| 
	.dwpsn	file "../Source/prod.c",line 4677,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4677| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4677| 
        CMPB      AL,#1                 ; [CPU_] |4677| 
        B         $C$L137,EQ            ; [CPU_] |4677| 
        ; branchcc occurs ; [] |4677| 
        CMPB      AL,#2                 ; [CPU_] |4677| 
        B         $C$L131,EQ            ; [CPU_] |4677| 
        ; branchcc occurs ; [] |4677| 
        CMPB      AL,#3                 ; [CPU_] |4677| 
        B         $C$L135,EQ            ; [CPU_] |4677| 
        ; branchcc occurs ; [] |4677| 
        B         $C$L134,UNC           ; [CPU_] |4677| 
        ; branch occurs ; [] |4677| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4694,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4694| 
        MOVB      XAR0,#46              ; [CPU_] |4694| 
        MOV       AL,*XAR7              ; [CPU_] |4694| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4694| 
	.dwpsn	file "../Source/prod.c",line 4695,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4695| 
	.dwpsn	file "../Source/prod.c",line 4694,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4694| 
	.dwpsn	file "../Source/prod.c",line 4695,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4695| 
        CMPB      AL,#12                ; [CPU_] |4695| 
        B         $C$L134,GT            ; [CPU_] |4695| 
        ; branchcc occurs ; [] |4695| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4694,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4694| 
	.dwpsn	file "../Source/prod.c",line 4700,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4700| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4694,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4694| 
        MOVL      P,XAR6                ; [CPU_] |4694| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4708,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4708| 
        B         $C$L140,LEQ           ; [CPU_] |4708| 
        ; branchcc occurs ; [] |4708| 
	.dwpsn	file "../Source/prod.c",line 4701,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4701| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4701| 
        ADDB      ACC,#48               ; [CPU_] |4701| 
        MOVL      XAR0,ACC              ; [CPU_] |4701| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4703,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4703| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4703| 
	.dwpsn	file "../Source/prod.c",line 4704,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4704| 
	.dwpsn	file "../Source/prod.c",line 4703,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4703| 
        MOV       *XAR0++,AL            ; [CPU_] |4703| 
	.dwpsn	file "../Source/prod.c",line 4704,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4704| 
        MOVL      P,XAR5                ; [CPU_] |4704| 
	.dwpsn	file "../Source/prod.c",line 4702,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4702| 
        ; branchcc occurs ; [] |4702| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4700,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4700| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4700| 
        ; branch occurs ; [] |4700| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4727,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4727| 
        ; branch occurs ; [] |4727| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4712,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4712| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4712| 
        MOVZ      AR0,AR5               ; [CPU_] |4712| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4714,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4714| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4714,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4714| 
        MOV       *XAR0++,AL            ; [CPU_] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4715| 
        MOVL      P,XAR5                ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4713,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4713| 
        ; branchcc occurs ; [] |4713| 
	.dwpsn	file "../Source/prod.c",line 4718,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4718| 
        MOV       AH,#0                 ; [CPU_] |4718| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4718| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4718| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4718| 
        ; call occurs [#FS$$CMP] ; [] |4718| 
        CMPB      AL,#0                 ; [CPU_] |4718| 
        B         $C$L139,NEQ           ; [CPU_] |4718| 
        ; branchcc occurs ; [] |4718| 
	.dwpsn	file "../Source/prod.c",line 4719,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4719| 
        MOV       AH,#16314             ; [CPU_] |4719| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4719| 
        B         $C$L139,UNC           ; [CPU_] |4719| 
        ; branch occurs ; [] |4719| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4682,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4682| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4682| 
	.dwpsn	file "../Source/prod.c",line 4683,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4683| 
	.dwpsn	file "../Source/prod.c",line 4682,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4682| 
        MOV       *XAR0++,AL            ; [CPU_] |4682| 
	.dwpsn	file "../Source/prod.c",line 4683,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4683| 
        MOVL      P,XAR5                ; [CPU_] |4683| 
	.dwpsn	file "../Source/prod.c",line 4681,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4681| 
        ; branchcc occurs ; [] |4681| 
	.dwpsn	file "../Source/prod.c",line 4686,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4686| 
        MOVL      XAR0,#88              ; [CPU_] |4686| 
        MOVL      ACC,XAR1              ; [CPU_] |4686| 
        ADDB      ACC,#96               ; [CPU_] |4686| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4686| 
        MOVL      XAR0,#52              ; [CPU_] |4686| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4686| 
        MOV       AL,#0                 ; [CPU_] |4686| 
        MOV       AH,#0                 ; [CPU_] |4686| 
        MOVB      XAR0,#96              ; [CPU_] |4686| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4686| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4686| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4686| 
        ; call occurs [#FS$$CMP] ; [] |4686| 
        CMPB      AL,#0                 ; [CPU_] |4686| 
        B         $C$L139,NEQ           ; [CPU_] |4686| 
        ; branchcc occurs ; [] |4686| 
	.dwpsn	file "../Source/prod.c",line 4687,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4687| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4687| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4687| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4689,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4689| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4730,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4730| 
        MOVB      XAR0,#36              ; [CPU_] |4730| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4730| 
        B         $C$L320,EQ            ; [CPU_] |4730| 
        ; branchcc occurs ; [] |4730| 
	.dwpsn	file "../Source/prod.c",line 4734,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4734| 
        MOV       AL,#0                 ; [CPU_] |4734| 
        MOV       AH,#0                 ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4735,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4734,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4734| 
	.dwpsn	file "../Source/prod.c",line 4735,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4735| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4735| 
	.dwpsn	file "../Source/prod.c",line 4736,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4736| 
        MOV       AL,#0                 ; [CPU_] |4736| 
        MOV       AH,#0                 ; [CPU_] |4736| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4736| 
	.dwpsn	file "../Source/prod.c",line 4737,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4737| 
        MOV       AL,*-SP[58]           ; [CPU_] |4737| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4737| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] |4737| 
	.dwpsn	file "../Source/prod.c",line 4739,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4739| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4739| 
        ; branch occurs ; [] |4739| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4740,column 6,is_stmt,isa 0
        MOV       PL,*-SP[61]           ; [CPU_] |4740| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |4740| 
        ADD       ACC,PL                ; [CPU_] |4740| 
        MOVL      XAR7,ACC              ; [CPU_] |4740| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4740| 
        ADD       ACC,PL                ; [CPU_] |4740| 
        MOVL      XAR4,ACC              ; [CPU_] |4740| 
	.dwpsn	file "../Source/prod.c",line 4739,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4739| 
	.dwpsn	file "../Source/prod.c",line 4740,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4740| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4740| 
        MOV       AL,PL                 ; [CPU_] |4740| 
        ADDB      AL,#1                 ; [CPU_] |4740| 
        MOV       *-SP[61],AL           ; [CPU_] |4740| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4739,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4739| 
        B         $C$L141,HI            ; [CPU_] |4739| 
        ; branchcc occurs ; [] |4739| 
        B         $C$L743,UNC           ; [CPU_] |4739| 
        ; branch occurs ; [] |4739| 
$C$L143:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4547,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4547| 
        B         $C$L320,LO            ; [CPU_] |4547| 
        ; branchcc occurs ; [] |4547| 
        MOVL      ACC,XAR4              ; [CPU_] |4547| 
        MOVL      XAR0,#66              ; [CPU_] |4547| 
        ADDB      ACC,#2                ; [CPU_] |4547| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4547| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4547| 
        B         $C$L320,LT            ; [CPU_] |4547| 
        ; branchcc occurs ; [] |4547| 
        MOVL      XAR5,XAR4             ; [CPU_] |4547| 
        MOVL      XAR0,#66              ; [CPU_] |4547| 
        CMPB      AL,#4                 ; [CPU_] |4547| 
        ADDB      XAR5,#2               ; [CPU_] |4547| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4547| 
        B         $C$L320,GEQ           ; [CPU_] |4547| 
        ; branchcc occurs ; [] |4547| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4547| 
        B         $C$L320,LT            ; [CPU_] |4547| 
        ; branchcc occurs ; [] |4547| 
        CMPB      AH,#2                 ; [CPU_] |4547| 
        B         $C$L320,GT            ; [CPU_] |4547| 
        ; branchcc occurs ; [] |4547| 
        MOV       AH,*-SP[56]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4553,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4553| 
        ; branchcc occurs ; [] |4553| 
	.dwpsn	file "../Source/prod.c",line 4556,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4556| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4556| 
        MOVL      XAR0,#66              ; [CPU_] |4556| 
        MOVU      ACC,AL                ; [CPU_] |4556| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4556| 
        CMPL      ACC,XAR6              ; [CPU_] |4556| 
        B         $C$L145,EQ            ; [CPU_] |4556| 
        ; branchcc occurs ; [] |4556| 
        B         $C$L320,UNC           ; [CPU_] |4556| 
        ; branch occurs ; [] |4556| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4554,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4554| 
        MOVL      XAR0,#66              ; [CPU_] |4554| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4554| 
        MOV       *-SP[58],AL           ; [CPU_] |4554| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4554| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4562| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4561,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4561| 
        MOV       *-SP[47],AL           ; [CPU_] |4561| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4561| 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4562| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4565| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4562,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4565| 
        MOVZ      AR4,AR4               ; [CPU_] |4565| 
	.dwpsn	file "../Source/prod.c",line 4563,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4563| 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4565| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4565| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4567,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4567| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4567| 
	.dwpsn	file "../Source/prod.c",line 4568,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4568| 
        MOV       *XAR7++,AL            ; [CPU_] |4568| 
	.dwpsn	file "../Source/prod.c",line 4569,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4569| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4569| 
        MOV       *XAR4++,AL            ; [CPU_] |4569| 
	.dwpsn	file "../Source/prod.c",line 4570,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4570| 
        MOV       *XAR7++,AL            ; [CPU_] |4570| 
	.dwpsn	file "../Source/prod.c",line 4566,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4566| 
        ; branchcc occurs ; [] |4566| 
	.dwpsn	file "../Source/prod.c",line 4573,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4573| 
        SUBB      XAR4,#24              ; [CPU_U] |4573| 
        MOVZ      AR4,AR4               ; [CPU_] |4573| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4573| 
        ADDL      XAR4,ACC              ; [CPU_] |4573| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4573| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4573| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4573| 
        MOVL      ACC,XAR1              ; [CPU_] |4573| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4573| 
        ; call occurs [#FS$$CMP] ; [] |4573| 
        CMPB      AL,#0                 ; [CPU_] |4573| 
        B         $C$L320,LT            ; [CPU_] |4573| 
        ; branchcc occurs ; [] |4573| 
        MOV       AL,#0                 ; [CPU_] |4573| 
        MOV       AH,#16672             ; [CPU_] |4573| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4573| 
        MOVL      ACC,XAR1              ; [CPU_] |4573| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4573| 
        ; call occurs [#FS$$CMP] ; [] |4573| 
        CMPB      AL,#0                 ; [CPU_] |4573| 
        B         $C$L320,GT            ; [CPU_] |4573| 
        ; branchcc occurs ; [] |4573| 
	.dwpsn	file "../Source/prod.c",line 4578,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4578| 
        MOV       AH,#16672             ; [CPU_] |4578| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4578| 
        MOVL      ACC,XAR1              ; [CPU_] |4578| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4578| 
        ; call occurs [#FS$$ADD] ; [] |4578| 
        MOVL      XAR6,ACC              ; [CPU_] |4578| 
        MOV       AL,#65024             ; [CPU_] |4578| 
        MOV       AH,#18175             ; [CPU_] |4578| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4578| 
        MOVL      ACC,XAR6              ; [CPU_] |4578| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4578| 
        ; call occurs [#FS$$MPY] ; [] |4578| 
        MOVL      XAR6,ACC              ; [CPU_] |4578| 
        MOV       AL,#0                 ; [CPU_] |4578| 
        MOV       AH,#16672             ; [CPU_] |4578| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4578| 
        MOVL      ACC,XAR6              ; [CPU_] |4578| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4578| 
        ; call occurs [#FS$$DIV] ; [] |4578| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4578| 
        ; call occurs [#FS$$TOLL] ; [] |4578| 
	.dwpsn	file "../Source/prod.c",line 4579,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4579| 
	.dwpsn	file "../Source/prod.c",line 4578,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4578| 
	.dwpsn	file "../Source/prod.c",line 4569,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4569| 
	.dwpsn	file "../Source/prod.c",line 4578,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4578| 
	.dwpsn	file "../Source/prod.c",line 4579,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4579| 
        CMP64     ACC:P                 ; [CPU_] |4579| 
        B         $C$L148,LEQ           ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
	.dwpsn	file "../Source/prod.c",line 4581,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4581| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4581| 
        MOV       *-SP[2],#0            ; [CPU_] |4581| 
        MOV       *-SP[1],#0            ; [CPU_] |4581| 
        MOVL      P,*-SP[32]            ; [CPU_] |4581| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4581| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$656, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4581| 
        ; call occurs [#LL$$CMP] ; [] |4581| 
        CMPB      AL,#0                 ; [CPU_] |4581| 
        B         $C$L147,GEQ           ; [CPU_] |4581| 
        ; branchcc occurs ; [] |4581| 
	.dwpsn	file "../Source/prod.c",line 4584,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4584| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4584| 
        MOVU      ACC,AR4               ; [CPU_] |4584| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4584| 
        MOVL      XAR1,ACC              ; [CPU_] |4584| 
        MOV       AL,*-SP[32]           ; [CPU_] |4584| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4584| 
        B         $C$L149,UNC           ; [CPU_] |4584| 
        ; branch occurs ; [] |4584| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4582,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4582| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4582| 
        MOVU      ACC,AR4               ; [CPU_] |4582| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4582| 
        MOVL      XAR1,ACC              ; [CPU_] |4582| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4582| 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4583| 
        ; branch occurs ; [] |4583| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4580,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4580| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4580| 
        MOVU      ACC,AR4               ; [CPU_] |4580| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4580| 
        MOVL      XAR1,ACC              ; [CPU_] |4580| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4580| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4587,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4587| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4587| 
        ; call occurs [#_dac_setmode] ; [] |4587| 
	.dwpsn	file "../Source/prod.c",line 4589,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4589| 
        MOV       AH,*-SP[47]           ; [CPU_] |4589| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4589| 
        ; call occurs [#_mcbsp_xmit] ; [] |4589| 
	.dwpsn	file "../Source/prod.c",line 4590,column 5,is_stmt,isa 0
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("_latch_dac")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4590| 
        ; call occurs [#_latch_dac] ; [] |4590| 
	.dwpsn	file "../Source/prod.c",line 4592,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4592| 
        MOV       T,*-SP[59]            ; [CPU_] |4592| 
        LSL       AL,T                  ; [CPU_] |4592| 
        OR        *-SP[56],AL           ; [CPU_] |4592| 
	.dwpsn	file "../Source/prod.c",line 4595,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4595| 
        ; branch occurs ; [] |4595| 
$C$L150:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4501| 
        B         $C$L320,LO            ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4501| 
        MOVL      XAR0,#66              ; [CPU_] |4501| 
        MOVL      ACC,XAR5              ; [CPU_] |4501| 
        ADDB      ACC,#2                ; [CPU_] |4501| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4501| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4501| 
        MOVZ      AR7,AR6               ; [CPU_] |4501| 
        MOV       AL,*-SP[58]           ; [CPU_] |4501| 
        MOVU      ACC,AL                ; [CPU_] |4501| 
        CMPL      ACC,XAR7              ; [CPU_] |4501| 
        B         $C$L320,NEQ           ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4501| 
        CMPB      AL,#7                 ; [CPU_] |4501| 
        B         $C$L320,NEQ           ; [CPU_] |4501| 
        ; branchcc occurs ; [] |4501| 
	.dwpsn	file "../Source/prod.c",line 4507,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4507| 
        MOVL      ACC,XAR5              ; [CPU_] |4507| 
        MOVL      XAR0,#66              ; [CPU_] |4507| 
	.dwpsn	file "../Source/prod.c",line 4506,column 5,is_stmt,isa 0
        MOV       *-SP[58],AR6          ; [CPU_] |4506| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4507,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4507| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4507| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4507| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[61],#3           ; [CPU_] |4507| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4510,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4510| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4512,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4512| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4512| 
	.dwpsn	file "../Source/prod.c",line 4513,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4513| 
        MOV       *XAR7++,AL            ; [CPU_] |4513| 
	.dwpsn	file "../Source/prod.c",line 4514,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4514| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4514| 
        MOV       *XAR0++,AL            ; [CPU_] |4514| 
	.dwpsn	file "../Source/prod.c",line 4515,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4515| 
        MOV       *XAR7++,AL            ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4511,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4511| 
        ; branchcc occurs ; [] |4511| 
	.dwpsn	file "../Source/prod.c",line 4509,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4509| 
	.dwpsn	file "../Source/prod.c",line 4515,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4509,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
	.dwpsn	file "../Source/prod.c",line 4522,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4522| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4522| 
        ; call occurs [#U$$TOFS] ; [] |4522| 
        MOVL      XAR1,ACC              ; [CPU_] |4522| 
        MOV       AL,*-SP[35]           ; [CPU_] |4522| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4522| 
        ; call occurs [#U$$TOFS] ; [] |4522| 
        MOVL      XAR0,#86              ; [CPU_] |4522| 
        MOV       T,*-SP[58]            ; [CPU_] |4522| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4522| 
        MOVL      XAR0,#40              ; [CPU_] |4522| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4522| 
        MOVB      AL,#12                ; [CPU_] |4522| 
        MPYU      ACC,T,AL              ; [CPU_] |4522| 
        MOVL      XAR0,#88              ; [CPU_] |4522| 
        ADDL      ACC,XAR6              ; [CPU_] |4522| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4522| 
        MOVL      XAR0,#86              ; [CPU_] |4522| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4522| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4522| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4522| 
        ; call occurs [#FS$$SUB] ; [] |4522| 
        MOVL      XAR0,#42              ; [CPU_] |4522| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4522| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4522| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4522| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4522| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4522| 
        ; call occurs [#FS$$SUB] ; [] |4522| 
        MOVL      XAR0,#42              ; [CPU_] |4522| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4522| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4522| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4522| 
        ; call occurs [#FS$$DIV] ; [] |4522| 
        MOVL      XAR0,#88              ; [CPU_] |4522| 
        MOVL      XAR6,ACC              ; [CPU_] |4522| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4522| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4522| 
        MOVL      XAR4,ACC              ; [CPU_] |4522| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4522| 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4525| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4525| 
        ; call occurs [#U$$TOFS] ; [] |4525| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4525| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4525| 
        ; call occurs [#FS$$SUB] ; [] |4525| 
        MOVL      XAR1,ACC              ; [CPU_] |4525| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4525| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4525| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4525| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4525| 
        ; call occurs [#FS$$SUB] ; [] |4525| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4525| 
        MOVL      ACC,XAR1              ; [CPU_] |4525| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4525| 
        ; call occurs [#FS$$DIV] ; [] |4525| 
        MOVL      XAR0,#88              ; [CPU_] |4525| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4525| 
        MOVL      XAR6,ACC              ; [CPU_] |4525| 
        MOVL      ACC,XAR1              ; [CPU_] |4525| 
        ADD       ACC,#49 << 6          ; [CPU_] |4525| 
        MOVL      XAR4,ACC              ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4528| 
	.dwpsn	file "../Source/prod.c",line 4525,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4528| 
        MOVL      XAR4,ACC              ; [CPU_] |4528| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4528| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4528| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4528| 
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4528| 
        ; call occurs [#FS$$MPY] ; [] |4528| 
        MOVL      XAR0,#86              ; [CPU_] |4528| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4528| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4528| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4528| 
        ; call occurs [#FS$$SUB] ; [] |4528| 
        MOVL      XAR6,ACC              ; [CPU_] |4528| 
        MOVL      ACC,XAR1              ; [CPU_] |4528| 
        ADD       ACC,#785 << 2         ; [CPU_] |4528| 
        MOVL      XAR4,ACC              ; [CPU_] |4528| 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4531| 
	.dwpsn	file "../Source/prod.c",line 4528,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4528| 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4531| 
        ; call occurs [#_dac_setmode] ; [] |4531| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4537,column 5,is_stmt,isa 0
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4537| 
        ; call occurs [#_ad7738_setcal] ; [] |4537| 
        MOVL      XAR0,#78              ; [CPU_] |4537| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4537| 
	.dwpsn	file "../Source/prod.c",line 4538,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4538| 
        MOVL      XAR1,ACC              ; [CPU_] |4538| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4538| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4538| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4538| 
	.dwpsn	file "../Source/prod.c",line 4539,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4539| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4539| 
        ; call occurs [#_ad7738_resetvall] ; [] |4539| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4532,column 5,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4543,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4543| 
        ; branch occurs ; [] |4543| 
$C$L153:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4445| 
        B         $C$L320,LO            ; [CPU_] |4445| 
        ; branchcc occurs ; [] |4445| 
        MOVL      XAR0,#88              ; [CPU_] |4445| 
        MOVL      ACC,XAR4              ; [CPU_] |4445| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4445| 
        MOVL      XAR0,#66              ; [CPU_] |4445| 
        ADDB      ACC,#2                ; [CPU_] |4445| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4445| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4445| 
        MOV       AL,*-SP[58]           ; [CPU_] |4445| 
        MOVU      ACC,AL                ; [CPU_] |4445| 
        CMPL      ACC,XAR6              ; [CPU_] |4445| 
        B         $C$L320,NEQ           ; [CPU_] |4445| 
        ; branchcc occurs ; [] |4445| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4445| 
        B         $C$L320,LT            ; [CPU_] |4445| 
        ; branchcc occurs ; [] |4445| 
        CMPB      AL,#2                 ; [CPU_] |4445| 
        B         $C$L320,GEQ           ; [CPU_] |4445| 
        ; branchcc occurs ; [] |4445| 
	.dwpsn	file "../Source/prod.c",line 4451,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4451| 
	.dwpsn	file "../Source/prod.c",line 4452,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4452| 
	.dwpsn	file "../Source/prod.c",line 4451,column 5,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |4451| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4451| 
	.dwpsn	file "../Source/prod.c",line 4452,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4452| 
        MOVZ      AR7,AR6               ; [CPU_] |4452| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4454,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4454| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4454| 
	.dwpsn	file "../Source/prod.c",line 4453,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4453| 
        ADDB      XAR4,#2               ; [CPU_] |4453| 
	.dwpsn	file "../Source/prod.c",line 4454,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4454| 
	.dwpsn	file "../Source/prod.c",line 4453,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4453| 
        ; branchcc occurs ; [] |4453| 
	.dwpsn	file "../Source/prod.c",line 4457,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4457| 
        SUBB      XAR4,#24              ; [CPU_U] |4457| 
        MOVZ      AR1,AR4               ; [CPU_] |4457| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4457| 
        ADDL      XAR1,ACC              ; [CPU_] |4457| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4457| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4457| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4457| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4457| 
        ; call occurs [#FS$$CMP] ; [] |4457| 
        CMPB      AL,#0                 ; [CPU_] |4457| 
        B         $C$L320,NEQ           ; [CPU_] |4457| 
        ; branchcc occurs ; [] |4457| 
	.dwpsn	file "../Source/prod.c",line 4461,column 5,is_stmt,isa 0
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4461| 
        ; call occurs [#_lcd_clear] ; [] |4461| 
	.dwpsn	file "../Source/prod.c",line 4462,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4462| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4462| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4462| 
        ; call occurs [#_lcd_puts] ; [] |4462| 
	.dwpsn	file "../Source/prod.c",line 4463,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4463| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4463| 
        MOVL      XAR0,#44              ; [CPU_] |4463| 
        ADD       AL,*-SP[58]           ; [CPU_] |4463| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4463| 
        MOV       *-SP[3],AL            ; [CPU_] |4463| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4463| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_sprintf")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4463| 
        ; call occurs [#_sprintf] ; [] |4463| 
        MOVL      XAR0,#44              ; [CPU_] |4463| 
	.dwpsn	file "../Source/prod.c",line 4464,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4464| 
	.dwpsn	file "../Source/prod.c",line 4463,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4463| 
	.dwpsn	file "../Source/prod.c",line 4464,column 5,is_stmt,isa 0
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4464| 
        ; call occurs [#_lcd_puts] ; [] |4464| 
	.dwpsn	file "../Source/prod.c",line 4465,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4465| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4465| 
        MOVL      XAR0,#44              ; [CPU_] |4465| 
        ADD       AL,*-SP[47]           ; [CPU_] |4465| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4465| 
        MOV       *-SP[3],AL            ; [CPU_] |4465| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4465| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4465| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4465| 
        MOVL      XAR4,XAR1             ; [CPU_] |4465| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_sprintf")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4465| 
        ; call occurs [#_sprintf] ; [] |4465| 
	.dwpsn	file "../Source/prod.c",line 4466,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4466| 
	.dwpsn	file "../Source/prod.c",line 4465,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4465| 
	.dwpsn	file "../Source/prod.c",line 4466,column 5,is_stmt,isa 0
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4466| 
        ; call occurs [#_lcd_puts] ; [] |4466| 
	.dwpsn	file "../Source/prod.c",line 4467,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4467| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4467| 
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4467| 
        ; call occurs [#_lcd_puts] ; [] |4467| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4469| 
        SUBB      XAR4,#32              ; [CPU_U] |4469| 
        MOVZ      AR1,AR4               ; [CPU_] |4469| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4467,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4469| 
        ADDL      XAR1,ACC              ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4470,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4470| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4469| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4469| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4469| 
	.dwpsn	file "../Source/prod.c",line 4471,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4471| 
	.dwpsn	file "../Source/prod.c",line 4470,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4470| 
	.dwpsn	file "../Source/prod.c",line 4471,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4471| 
        MOVB      ACC,#0                ; [CPU_] |4471| 
        SUBB      ACC,#1                ; [CPU_] |4471| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4471| 
        B         $C$L157,EQ            ; [CPU_] |4471| 
        ; branchcc occurs ; [] |4471| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4472,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4472| 
        ; branch occurs ; [] |4472| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4473,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4473| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_delay_us")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4473| 
        ; call occurs [#_delay_us] ; [] |4473| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4472,column 13,is_stmt,isa 0
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4472| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4472| 
        CMPB      AL,#0                 ; [CPU_] |4472| 
        B         $C$L155,EQ            ; [CPU_] |4472| 
        ; branchcc occurs ; [] |4472| 
	.dwpsn	file "../Source/prod.c",line 4475,column 6,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4475| 
        ; call occurs [#_ad7738_getraw] ; [] |4475| 
	.dwpsn	file "../Source/prod.c",line 4476,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4476| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4476| 
        ADDL      XAR4,ACC              ; [CPU_] |4476| 
        MOVL      XAR0,#22              ; [CPU_] |4476| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4476| 
        MOVL      XAR0,#22              ; [CPU_] |4476| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4476| 
        ASR64     ACC:P,16              ; [CPU_] |4476| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4476| 
        MOVL      XAR0,#22              ; [CPU_] |4476| 
        ASR64     ACC:P,16              ; [CPU_] |4476| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4476| 
        MOVL      XAR0,#22              ; [CPU_] |4476| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4476| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4476| 
        MOVL      XAR0,#22              ; [CPU_] |4476| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4476| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4476| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4476| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4476| 
	.dwpsn	file "../Source/prod.c",line 4471,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4471| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4471| 
        MOVB      ACC,#0                ; [CPU_] |4471| 
        SUBB      ACC,#1                ; [CPU_] |4471| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4471| 
        B         $C$L156,NEQ           ; [CPU_] |4471| 
        ; branchcc occurs ; [] |4471| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4478,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4478| 
        B         $C$L158,NEQ           ; [CPU_] |4478| 
        ; branchcc occurs ; [] |4478| 
	.dwpsn	file "../Source/prod.c",line 4479,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4479| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4479| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4479| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4479| 
        ; call occurs [#FS$$SUB] ; [] |4479| 
        MOVL      XAR6,ACC              ; [CPU_] |4479| 
        MOV       AL,#16384             ; [CPU_] |4479| 
        MOV       AH,#17948             ; [CPU_] |4479| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4479| 
        MOVL      ACC,XAR6              ; [CPU_] |4479| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4479| 
        ; call occurs [#FS$$MPY] ; [] |4479| 
        MOVL      XAR1,ACC              ; [CPU_] |4479| 
        MOVL      P,*-SP[28]            ; [CPU_] |4479| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4479| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4479| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4479| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4479| 
        ; call occurs [#LL$$TOFS] ; [] |4479| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4479| 
        MOVL      ACC,XAR1              ; [CPU_] |4479| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4479| 
        ; call occurs [#FS$$DIV] ; [] |4479| 
        MOVL      XAR0,#40              ; [CPU_] |4479| 
        MOV       T,*-SP[58]            ; [CPU_] |4479| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4479| 
        MOVL      XAR6,ACC              ; [CPU_] |4479| 
        MOVB      AL,#10                ; [CPU_] |4479| 
        MPYU      ACC,T,AL              ; [CPU_] |4479| 
        ADDL      ACC,XAR7              ; [CPU_] |4479| 
        MOVL      XAR4,ACC              ; [CPU_] |4479| 
        MOVB      XAR0,#44              ; [CPU_] |4479| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4479| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4484,column 6,is_stmt,isa 0
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4484| 
        ; call occurs [#_ad7738_setcal] ; [] |4484| 
        MOVL      XAR0,#78              ; [CPU_] |4484| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4485,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4485| 
        MOVL      XAR1,ACC              ; [CPU_] |4485| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4485| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4485| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4485| 
	.dwpsn	file "../Source/prod.c",line 4486,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4486| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4486| 
        ; call occurs [#_ad7738_resetvall] ; [] |4486| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4482,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4482| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4489,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4489| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4490,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4490| 
	.dwpsn	file "../Source/prod.c",line 4489,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4489| 
	.dwpsn	file "../Source/prod.c",line 4490,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4490| 
	.dwpsn	file "../Source/prod.c",line 4489,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4489| 
	.dwpsn	file "../Source/prod.c",line 4490,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4490| 
	.dwpsn	file "../Source/prod.c",line 4489,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4489| 
        B         $C$L159,HI            ; [CPU_] |4489| 
        ; branchcc occurs ; [] |4489| 
	.dwpsn	file "../Source/prod.c",line 4492,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4492| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4495,column 5,is_stmt,isa 0
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4495| 
        ; call occurs [#_lcd_clear] ; [] |4495| 
	.dwpsn	file "../Source/prod.c",line 4496,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_update_units")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4496| 
        ; call occurs [#_update_units] ; [] |4496| 
	.dwpsn	file "../Source/prod.c",line 4497,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4497| 
        ; branch occurs ; [] |4497| 
$C$L160:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4420| 
        B         $C$L320,LO            ; [CPU_] |4420| 
        ; branchcc occurs ; [] |4420| 
        MOVL      ACC,XAR4              ; [CPU_] |4420| 
        MOVL      XAR0,#66              ; [CPU_] |4420| 
        ADDB      ACC,#2                ; [CPU_] |4420| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4420| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4420| 
        B         $C$L320,LT            ; [CPU_] |4420| 
        ; branchcc occurs ; [] |4420| 
        MOVL      XAR5,XAR4             ; [CPU_] |4420| 
        MOVL      XAR0,#66              ; [CPU_] |4420| 
        CMPB      AL,#4                 ; [CPU_] |4420| 
        ADDB      XAR5,#2               ; [CPU_] |4420| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4420| 
        B         $C$L320,GEQ           ; [CPU_] |4420| 
        ; branchcc occurs ; [] |4420| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4420| 
        CMPB      AH,#2                 ; [CPU_] |4420| 
        B         $C$L320,NEQ           ; [CPU_] |4420| 
        ; branchcc occurs ; [] |4420| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4427| 
        MOVL      XAR0,#66              ; [CPU_] |4427| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4426| 
	.dwpsn	file "../Source/prod.c",line 4430,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4430| 
	.dwpsn	file "../Source/prod.c",line 4427,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4427| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4427| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4427| 
	.dwpsn	file "../Source/prod.c",line 4428,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4428| 
        MOV       *-SP[61],#4           ; [CPU_] |4428| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4430,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4430| 
        ; branch occurs ; [] |4430| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4431,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4431| 
        SUBB      XAR4,#24              ; [CPU_U] |4431| 
        MOVZ      AR4,AR4               ; [CPU_] |4431| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4431| 
        MOVL      XAR0,#44              ; [CPU_] |4431| 
        ADDL      XAR4,ACC              ; [CPU_] |4431| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4431| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4433,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4433| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4433| 
	.dwpsn	file "../Source/prod.c",line 4434,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4434| 
        MOV       *XAR7++,AL            ; [CPU_] |4434| 
	.dwpsn	file "../Source/prod.c",line 4435,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4435| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4435| 
        MOV       *XAR4++,AL            ; [CPU_] |4435| 
	.dwpsn	file "../Source/prod.c",line 4436,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4436| 
        MOV       *XAR7++,AL            ; [CPU_] |4436| 
	.dwpsn	file "../Source/prod.c",line 4432,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4432| 
        ; branchcc occurs ; [] |4432| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4436,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4436| 
	.dwpsn	file "../Source/prod.c",line 4430,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4430| 
        MOV       PL,AL                 ; [CPU_] |4430| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4430,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4430| 
        MOV       AL,PL                 ; [CPU_] |4430| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4430| 
        B         $C$L161,LT            ; [CPU_] |4430| 
        ; branchcc occurs ; [] |4430| 
        B         $C$L743,UNC           ; [CPU_] |4430| 
        ; branch occurs ; [] |4430| 
$C$L164:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5375,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5375| 
        B         $C$L320,LO            ; [CPU_] |5375| 
        ; branchcc occurs ; [] |5375| 
	.dwpsn	file "../Source/prod.c",line 5380,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5380| 
        MOVL      XAR0,#66              ; [CPU_] |5380| 
        MOVL      ACC,XAR7              ; [CPU_] |5380| 
        ADDB      ACC,#2                ; [CPU_] |5380| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5380| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GT            ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOVB      XAR0,#13              ; [CPU_] |5380| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GT            ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOVB      XAR0,#24              ; [CPU_] |5380| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GT            ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOVB      XAR0,#35              ; [CPU_] |5380| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GT            ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GEQ           ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOVB      XAR0,#14              ; [CPU_] |5380| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GEQ           ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOVB      XAR0,#25              ; [CPU_] |5380| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GEQ           ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOVB      XAR0,#36              ; [CPU_] |5380| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5380| 
        CMPB      AL,#4                 ; [CPU_] |5380| 
        B         $C$L320,GEQ           ; [CPU_] |5380| 
        ; branchcc occurs ; [] |5380| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5388| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5388| 
        MOVL      XAR6,ACC              ; [CPU_] |5388| 
        MOV       AL,*XAR7              ; [CPU_] |5388| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5388| 
	.dwpsn	file "../Source/prod.c",line 5389,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5389| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5389| 
        MOVL      XAR6,ACC              ; [CPU_] |5389| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5389| 
        MOV       *XAR4++,AL            ; [CPU_] |5389| 
	.dwpsn	file "../Source/prod.c",line 5390,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5390| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5390| 
        MOVL      XAR6,ACC              ; [CPU_] |5390| 
	.dwpsn	file "../Source/prod.c",line 5388,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5388| 
	.dwpsn	file "../Source/prod.c",line 5390,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5390| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5390| 
	.dwpsn	file "../Source/prod.c",line 5391,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5391| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5391| 
        MOVL      XAR6,ACC              ; [CPU_] |5391| 
	.dwpsn	file "../Source/prod.c",line 5390,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5390| 
	.dwpsn	file "../Source/prod.c",line 5391,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5391| 
        MOV       *XAR4++,AL            ; [CPU_] |5391| 
	.dwpsn	file "../Source/prod.c",line 5392,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5392| 
        ANDB      AL,#0xfe              ; [CPU_] |5392| 
        MOVZ      AR0,AL                ; [CPU_] |5392| 
        MOVL      ACC,XAR5              ; [CPU_] |5392| 
        ADD       ACC,#199 << 4         ; [CPU_] |5392| 
        MOVL      XAR6,ACC              ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5393,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5393| 
        ADD       ACC,#199 << 4         ; [CPU_] |5393| 
	.dwpsn	file "../Source/prod.c",line 5392,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5393,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5393| 
        MOVL      XAR0,P                ; [CPU_] |5393| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5393| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5393| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5397,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5397| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5397| 
	.dwpsn	file "../Source/prod.c",line 5398,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5398| 
        MOV       *XAR4++,AL            ; [CPU_] |5398| 
	.dwpsn	file "../Source/prod.c",line 5399,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5399| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5399| 
        MOV       *XAR0++,AL            ; [CPU_] |5399| 
	.dwpsn	file "../Source/prod.c",line 5400,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5400| 
        MOV       *XAR4++,AL            ; [CPU_] |5400| 
	.dwpsn	file "../Source/prod.c",line 5396,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5396| 
        ; branchcc occurs ; [] |5396| 
	.dwpsn	file "../Source/prod.c",line 5403,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5403| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5405,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5405| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5405| 
	.dwpsn	file "../Source/prod.c",line 5406,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5406| 
        MOV       *XAR4++,AL            ; [CPU_] |5406| 
	.dwpsn	file "../Source/prod.c",line 5407,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5407| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5407| 
        MOV       *XAR0++,AL            ; [CPU_] |5407| 
	.dwpsn	file "../Source/prod.c",line 5408,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5408| 
        MOV       *XAR4++,AL            ; [CPU_] |5408| 
	.dwpsn	file "../Source/prod.c",line 5404,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5404| 
        ; branchcc occurs ; [] |5404| 
	.dwpsn	file "../Source/prod.c",line 5387,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5387| 
	.dwpsn	file "../Source/prod.c",line 5390,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5390| 
        ADD       *-SP[61],#11          ; [CPU_] |5390| 
	.dwpsn	file "../Source/prod.c",line 5387,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5387| 
        ADDB      XAR1,#8               ; [CPU_] |5387| 
        ADDB      ACC,#8                ; [CPU_] |5387| 
        SUBB      XAR6,#1               ; [CPU_U] |5387| 
        MOVZ      AR3,AR6               ; [CPU_] |5387| 
        MOVL      P,ACC                 ; [CPU_] |5387| 
        CMP       AR6,#-1               ; [CPU_] |5387| 
        B         $C$L165,NEQ           ; [CPU_] |5387| 
        ; branchcc occurs ; [] |5387| 
        B         $C$L176,UNC           ; [CPU_] |5387| 
        ; branch occurs ; [] |5387| 
$C$L168:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5312,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5312| 
        B         $C$L320,LO            ; [CPU_] |5312| 
        ; branchcc occurs ; [] |5312| 
	.dwpsn	file "../Source/prod.c",line 5317,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5317| 
        MOVL      XAR0,#66              ; [CPU_] |5317| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5317| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L169,LEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        CMPB      AL,#7                 ; [CPU_] |5317| 
        B         $C$L320,NEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5317| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L170,LEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        CMPB      AL,#7                 ; [CPU_] |5317| 
        B         $C$L320,NEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5317| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L171,LEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        CMPB      AL,#7                 ; [CPU_] |5317| 
        B         $C$L320,NEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5317| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L172,LEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        CMPB      AL,#7                 ; [CPU_] |5317| 
        B         $C$L320,NEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5317| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#13              ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#23              ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVB      XAR0,#33              ; [CPU_] |5317| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5317| 
        CMPB      AL,#4                 ; [CPU_] |5317| 
        B         $C$L320,GEQ           ; [CPU_] |5317| 
        ; branchcc occurs ; [] |5317| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5328| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5328| 
        MOVL      XAR5,ACC              ; [CPU_] |5328| 
        MOV       AL,*XAR7              ; [CPU_] |5328| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5329,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5329| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5329| 
        MOVL      XAR5,ACC              ; [CPU_] |5329| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5329| 
        MOV       *XAR4++,AL            ; [CPU_] |5329| 
	.dwpsn	file "../Source/prod.c",line 5330,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5330| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5330| 
        MOVL      XAR5,ACC              ; [CPU_] |5330| 
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5328| 
	.dwpsn	file "../Source/prod.c",line 5330,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5330| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5330| 
	.dwpsn	file "../Source/prod.c",line 5331,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5331| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5331| 
        MOVL      XAR5,ACC              ; [CPU_] |5331| 
	.dwpsn	file "../Source/prod.c",line 5330,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5330| 
	.dwpsn	file "../Source/prod.c",line 5331,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5331| 
        MOVL      XAR5,P                ; [CPU_] |5331| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5331| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5342,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5342| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5342| 
	.dwpsn	file "../Source/prod.c",line 5343,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5343| 
        MOV       *XAR4++,AL            ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5344,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5344| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5344| 
        MOV       *XAR5++,AL            ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5345,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5345| 
        MOV       *XAR4++,AL            ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5341,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5341| 
        ; branchcc occurs ; [] |5341| 
	.dwpsn	file "../Source/prod.c",line 5351,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5351| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5358,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5358| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5358| 
	.dwpsn	file "../Source/prod.c",line 5359,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5359| 
        MOV       *XAR4++,AL            ; [CPU_] |5359| 
	.dwpsn	file "../Source/prod.c",line 5360,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5360| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5360| 
        MOV       *XAR5++,AL            ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5361| 
        MOV       *XAR4++,AL            ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5357,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
	.dwpsn	file "../Source/prod.c",line 5327,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5327| 
	.dwpsn	file "../Source/prod.c",line 5330,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5330| 
        ADD       *-SP[61],#10          ; [CPU_] |5330| 
	.dwpsn	file "../Source/prod.c",line 5327,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5327| 
        ADDB      XAR1,#12              ; [CPU_] |5327| 
        ADDB      ACC,#12               ; [CPU_] |5327| 
        SUBB      XAR6,#1               ; [CPU_U] |5327| 
        MOVZ      AR3,AR6               ; [CPU_] |5327| 
        MOVL      P,ACC                 ; [CPU_] |5327| 
        CMP       AR6,#-1               ; [CPU_] |5327| 
        B         $C$L173,NEQ           ; [CPU_] |5327| 
        ; branchcc occurs ; [] |5327| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5368,column 5,is_stmt,isa 0
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5368| 
        ; call occurs [#_ad7738_setcal] ; [] |5368| 
	.dwpsn	file "../Source/prod.c",line 5371,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5371| 
        ; branch occurs ; [] |5371| 
$C$L177:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5280,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5280| 
        B         $C$L320,LO            ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
	.dwpsn	file "../Source/prod.c",line 5285,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5285| 
        MOVL      XAR0,#66              ; [CPU_] |5285| 
        MOVL      ACC,XAR7              ; [CPU_] |5285| 
        ADDB      ACC,#2                ; [CPU_] |5285| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5285| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GT            ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GT            ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVB      XAR0,#8               ; [CPU_] |5285| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GT            ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVB      XAR0,#11              ; [CPU_] |5285| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GT            ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5285| 
        CMPB      AL,#4                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5285| 
        CMPB      AL,#4                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVB      XAR0,#9               ; [CPU_] |5285| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5285| 
        CMPB      AL,#4                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVB      XAR0,#12              ; [CPU_] |5285| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5285| 
        CMPB      AL,#4                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVL      ACC,XAR7              ; [CPU_] |5285| 
        MOVL      XAR0,#64              ; [CPU_] |5285| 
        ADDB      ACC,#4                ; [CPU_] |5285| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5285| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVB      XAR0,#10              ; [CPU_] |5285| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVB      XAR0,#13              ; [CPU_] |5285| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5285| 
        CMPB      AL,#6                 ; [CPU_] |5285| 
        B         $C$L320,GEQ           ; [CPU_] |5285| 
        ; branchcc occurs ; [] |5285| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5296,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5296| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5296| 
	.dwpsn	file "../Source/prod.c",line 5297,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5297| 
	.dwpsn	file "../Source/prod.c",line 5296,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5296| 
	.dwpsn	file "../Source/prod.c",line 5297,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5297| 
	.dwpsn	file "../Source/prod.c",line 5298,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5298| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5298| 
        ADDB      XAR7,#1               ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5299| 
        MOV       *XAR4++,AL            ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5300,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5300| 
        ADDB      XAR7,#1               ; [CPU_] |5300| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5300| 
	.dwpsn	file "../Source/prod.c",line 5301,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5295,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5295| 
	.dwpsn	file "../Source/prod.c",line 5301,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5295,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5295| 
        ; branchcc occurs ; [] |5295| 
	.dwpsn	file "../Source/prod.c",line 5305,column 5,is_stmt,isa 0
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5305| 
        ; call occurs [#_lcd_clear] ; [] |5305| 
	.dwpsn	file "../Source/prod.c",line 5306,column 5,is_stmt,isa 0
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_update_units")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5306| 
        ; call occurs [#_update_units] ; [] |5306| 
	.dwpsn	file "../Source/prod.c",line 5301,column 6,is_stmt,isa 0
        ADD       *-SP[61],#12          ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5308,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5308| 
        ; branch occurs ; [] |5308| 
$C$L179:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5259,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5259| 
        B         $C$L320,LO            ; [CPU_] |5259| 
        ; branchcc occurs ; [] |5259| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5264,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5264| 
        MOVB      XAR0,#36              ; [CPU_] |5264| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5264| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5264| 
	.dwpsn	file "../Source/prod.c",line 5265,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5265| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5265| 
        B         $C$L181,NEQ           ; [CPU_] |5265| 
        ; branchcc occurs ; [] |5265| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5267,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5267| 
	.dwpsn	file "../Source/prod.c",line 5268,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5268| 
	.dwpsn	file "../Source/prod.c",line 5266,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5266| 
        ; branchcc occurs ; [] |5266| 
	.dwpsn	file "../Source/prod.c",line 5270,column 6,is_stmt,isa 0
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_update_units")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5270| 
        ; call occurs [#_update_units] ; [] |5270| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5274,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5274| 
	.dwpsn	file "../Source/prod.c",line 5276,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5276| 
        ; branch occurs ; [] |5276| 
$C$L182:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5218,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5218| 
        B         $C$L320,LO            ; [CPU_] |5218| 
        ; branchcc occurs ; [] |5218| 
	.dwpsn	file "../Source/prod.c",line 5224,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5224| 
        ADDB      XAR4,#2               ; [CPU_] |5224| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5224| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5224| 
        MOVZ      AR3,AL                ; [CPU_] |5224| 
	.dwpsn	file "../Source/prod.c",line 5225,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5225| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5225| 
        CMP       AR3,#4096             ; [CPU_] |5225| 
        B         $C$L320,HI            ; [CPU_] |5225| 
        ; branchcc occurs ; [] |5225| 
	.dwpsn	file "../Source/prod.c",line 5231,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5231| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5231| 
        MOVZ      AR7,AR6               ; [CPU_] |5231| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5233,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5233| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5233| 
	.dwpsn	file "../Source/prod.c",line 5232,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5232| 
        ADDB      XAR4,#2               ; [CPU_] |5232| 
	.dwpsn	file "../Source/prod.c",line 5233,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5233| 
	.dwpsn	file "../Source/prod.c",line 5232,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5232| 
        ; branchcc occurs ; [] |5232| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5238,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5238| 
        MOVB      XAR1,#38              ; [CPU_] |5238| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5238| 
	.dwpsn	file "../Source/prod.c",line 5239,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5239| 
        MOVB      XAR1,#40              ; [CPU_] |5239| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5239| 
	.dwpsn	file "../Source/prod.c",line 5240,column 5,is_stmt,isa 0
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_maf_rst")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5240| 
        ; call occurs [#_maf_rst] ; [] |5240| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5245,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5245| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5245| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5245,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5245| 
	.dwpsn	file "../Source/prod.c",line 5246,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5246| 
        LSR       AL,8                  ; [CPU_] |5246| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5246| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5249| 
        MOVB      XAR1,#40              ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5250| 
        MOVL      XAR0,#50              ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5249| 
        ANDB      AL,#0xff              ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5249,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5251,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5250| 
        LSR       AL,8                  ; [CPU_] |5250| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5251,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5251| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5252,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5252| 
	.dwpsn	file "../Source/prod.c",line 5251,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5252,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5252| 
        MOV       *-SP[61],#8           ; [CPU_] |5252| 
	.dwpsn	file "../Source/prod.c",line 5255,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5255| 
        ; branch occurs ; [] |5255| 
$C$L184:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5185,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5185| 
        B         $C$L320,LO            ; [CPU_] |5185| 
        ; branchcc occurs ; [] |5185| 
        MOVL      ACC,XAR4              ; [CPU_] |5185| 
        MOVL      XAR0,#66              ; [CPU_] |5185| 
        ADDB      ACC,#2                ; [CPU_] |5185| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5185| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5185| 
        B         $C$L320,LT            ; [CPU_] |5185| 
        ; branchcc occurs ; [] |5185| 
        MOVL      XAR5,XAR4             ; [CPU_] |5185| 
        MOVL      XAR0,#66              ; [CPU_] |5185| 
        CMPB      AL,#4                 ; [CPU_] |5185| 
        ADDB      XAR5,#2               ; [CPU_] |5185| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5185| 
        B         $C$L320,GEQ           ; [CPU_] |5185| 
        ; branchcc occurs ; [] |5185| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5185| 
        B         $C$L320,LT            ; [CPU_] |5185| 
        ; branchcc occurs ; [] |5185| 
        CMPB      AH,#20                ; [CPU_] |5185| 
        B         $C$L320,GEQ           ; [CPU_] |5185| 
        ; branchcc occurs ; [] |5185| 
	.dwpsn	file "../Source/prod.c",line 5195,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5195| 
        MOVL      XAR0,#66              ; [CPU_] |5195| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5195| 
        MOVL      XAR0,#80              ; [CPU_] |5195| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5195| 
	.dwpsn	file "../Source/prod.c",line 5193,column 5,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |5193| 
	.dwpsn	file "../Source/prod.c",line 5195,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[58]          ; [CPU_] |5195| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5195| 
        B         $C$L318,NEQ           ; [CPU_] |5195| 
        ; branchcc occurs ; [] |5195| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5201| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5201| 
        MOVB      AL,#10                ; [CPU_] |5201| 
        MOV       T,*-SP[58]            ; [CPU_] |5201| 
        MPYU      ACC,T,AL              ; [CPU_] |5201| 
        ADDL      ACC,XAR6              ; [CPU_] |5201| 
        MOVL      XAR4,ACC              ; [CPU_] |5201| 
        MOVB      XAR0,#42              ; [CPU_] |5201| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |5201| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5201| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5202| 
        ; call occurs [#_ad7738_setcal] ; [] |5202| 
        MOVL      XAR0,#78              ; [CPU_] |5202| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5204| 
        MOVL      XAR1,ACC              ; [CPU_] |5204| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5204| 
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5204| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5204| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5205| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5205| 
        ; call occurs [#_ad7738_resetvall] ; [] |5205| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_update_units")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5208| 
        ; call occurs [#_update_units] ; [] |5208| 
	.dwpsn	file "../Source/prod.c",line 5211,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5211| 
        MOV       AL,*-SP[58]           ; [CPU_] |5211| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5211| 
        MOV       AL,*-SP[57]           ; [CPU_] |5211| 
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5212| 
        MOV       *-SP[61],#4           ; [CPU_] |5212| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5214| 
        ; branch occurs ; [] |5214| 
$C$L185:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5149,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5149| 
        B         $C$L320,LO            ; [CPU_] |5149| 
        ; branchcc occurs ; [] |5149| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5155,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5155| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5157,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5157| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5157| 
	.dwpsn	file "../Source/prod.c",line 5158,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5158| 
        MOV       *XAR5++,AL            ; [CPU_] |5158| 
	.dwpsn	file "../Source/prod.c",line 5159,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5159| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5159| 
        MOV       *XAR1++,AL            ; [CPU_] |5159| 
	.dwpsn	file "../Source/prod.c",line 5160,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5160| 
        MOV       *XAR5++,AL            ; [CPU_] |5160| 
	.dwpsn	file "../Source/prod.c",line 5156,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5156| 
        ; branchcc occurs ; [] |5156| 
	.dwpsn	file "../Source/prod.c",line 5154,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5154| 
	.dwpsn	file "../Source/prod.c",line 5160,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |5160| 
	.dwpsn	file "../Source/prod.c",line 5154,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5154| 
        ; branchcc occurs ; [] |5154| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5165| 
        MOVL      ACC,XAR4              ; [CPU_] |5165| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5165| 
        MOVL      XAR6,ACC              ; [CPU_] |5165| 
        MOV       AL,*XAR7              ; [CPU_] |5165| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5165| 
	.dwpsn	file "../Source/prod.c",line 5166,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5166| 
        MOVL      XAR6,XAR4             ; [CPU_] |5166| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5166| 
        MOVL      XAR4,ACC              ; [CPU_] |5166| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5166| 
        ANDB      AL,#0xff              ; [CPU_] |5166| 
        MOV       *XAR5++,AL            ; [CPU_] |5166| 
	.dwpsn	file "../Source/prod.c",line 5167,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5167| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5167| 
        MOVL      XAR4,ACC              ; [CPU_] |5167| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5165| 
	.dwpsn	file "../Source/prod.c",line 5167,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5167| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5167| 
	.dwpsn	file "../Source/prod.c",line 5168,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5168| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5168| 
        MOVL      XAR4,ACC              ; [CPU_] |5168| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5168| 
        LSR       AL,8                  ; [CPU_] |5168| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5168| 
	.dwpsn	file "../Source/prod.c",line 5167,column 5,is_stmt,isa 0
        ADD       *-SP[61],#2           ; [CPU_] |5167| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5173,column 5,is_stmt,isa 0
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5173| 
        ; call occurs [#_ad7738_setcal] ; [] |5173| 
	.dwpsn	file "../Source/prod.c",line 5174,column 5,is_stmt,isa 0
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_velf_rst")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5174| 
        ; call occurs [#_velf_rst] ; [] |5174| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5178,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5178| 
        ; branch occurs ; [] |5178| 
$C$L189:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5110,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5110| 
        B         $C$L320,LO            ; [CPU_] |5110| 
        ; branchcc occurs ; [] |5110| 
        MOVL      ACC,XAR4              ; [CPU_] |5110| 
        MOVL      XAR0,#66              ; [CPU_] |5110| 
        ADDB      ACC,#2                ; [CPU_] |5110| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5110| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5110| 
        B         $C$L320,LT            ; [CPU_] |5110| 
        ; branchcc occurs ; [] |5110| 
        MOVL      XAR5,XAR4             ; [CPU_] |5110| 
        MOVL      XAR0,#66              ; [CPU_] |5110| 
        CMPB      AL,#20                ; [CPU_] |5110| 
        ADDB      XAR5,#2               ; [CPU_] |5110| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5110| 
        B         $C$L320,GEQ           ; [CPU_] |5110| 
        ; branchcc occurs ; [] |5110| 
	.dwpsn	file "../Source/prod.c",line 5114,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5114| 
	.dwpsn	file "../Source/prod.c",line 5115,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5115| 
	.dwpsn	file "../Source/prod.c",line 5117,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5117| 
	.dwpsn	file "../Source/prod.c",line 5115,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5115| 
	.dwpsn	file "../Source/prod.c",line 5117,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5117| 
        ADDB      ACC,#2                ; [CPU_] |5117| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5117| 
        MOVL      XAR0,#40              ; [CPU_] |5117| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5117| 
        MOV       T,*-SP[57]            ; [CPU_] |5117| 
        MOVB      AL,#152               ; [CPU_] |5117| 
        MPYU      ACC,T,AL              ; [CPU_] |5117| 
        ADDL      ACC,XAR6              ; [CPU_] |5117| 
        ADDB      ACC,#224              ; [CPU_] |5117| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5117| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5119,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5119| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5119| 
	.dwpsn	file "../Source/prod.c",line 5120,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5120| 
        MOV       *XAR5++,AL            ; [CPU_] |5120| 
	.dwpsn	file "../Source/prod.c",line 5121,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5121| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5121| 
        MOV       *XAR7++,AL            ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5122,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5122| 
        MOV       *XAR5++,AL            ; [CPU_] |5122| 
	.dwpsn	file "../Source/prod.c",line 5118,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5118| 
        ; branchcc occurs ; [] |5118| 
	.dwpsn	file "../Source/prod.c",line 5127,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5127| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5127| 
        MOVB      AL,#152               ; [CPU_] |5127| 
        MPYU      ACC,T,AL              ; [CPU_] |5127| 
        ADDL      ACC,XAR6              ; [CPU_] |5127| 
        MOVL      XAR1,ACC              ; [CPU_] |5127| 
        MOVB      XAR0,#125             ; [CPU_] |5127| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5127| 
        CMPB      AL,#247               ; [CPU_] |5127| 
        B         $C$L193,NEQ           ; [CPU_] |5127| 
        ; branchcc occurs ; [] |5127| 
	.dwpsn	file "../Source/prod.c",line 5129,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5129| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5129| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5129| 
        MOV       AL,#0                 ; [CPU_] |5129| 
        MOV       AH,#17096             ; [CPU_] |5129| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5129| 
        ; call occurs [#FS$$DIV] ; [] |5129| 
        MOVB      XAR0,#126             ; [CPU_] |5129| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5129| 
        MOVL      XAR0,#40              ; [CPU_] |5129| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5129| 
	.dwpsn	file "../Source/prod.c",line 5132,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5132| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5133,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5133| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5133| 
        CMPL      ACC,XAR6              ; [CPU_] |5133| 
        B         $C$L192,NEQ           ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5136,column 8,is_stmt,isa 0
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5136| 
        ; call occurs [#_ad7738_setcal] ; [] |5136| 
        MOVL      XAR0,#78              ; [CPU_] |5136| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5136| 
	.dwpsn	file "../Source/prod.c",line 5137,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5137| 
        MOVL      XAR4,ACC              ; [CPU_] |5137| 
        MOVL      XAR0,#88              ; [CPU_] |5137| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5137| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5137| 
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5137| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5137| 
        MOVL      XAR0,#88              ; [CPU_] |5137| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5137| 
	.dwpsn	file "../Source/prod.c",line 5138,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5138| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5138| 
        ; call occurs [#_ad7738_resetvall] ; [] |5138| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5132,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5132| 
        ADDB      XAR1,#10              ; [CPU_] |5132| 
        MOV       AL,*-SP[58]           ; [CPU_] |5132| 
        CMPB      AL,#4                 ; [CPU_] |5132| 
        B         $C$L191,LO            ; [CPU_] |5132| 
        ; branchcc occurs ; [] |5132| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5121,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5145,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5145| 
        ; branch occurs ; [] |5145| 
$C$L194:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5009,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5009| 
        B         $C$L320,LO            ; [CPU_] |5009| 
        ; branchcc occurs ; [] |5009| 
        MOVL      ACC,XAR4              ; [CPU_] |5009| 
        MOVL      XAR0,#66              ; [CPU_] |5009| 
        ADDB      ACC,#2                ; [CPU_] |5009| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5009| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5009| 
        B         $C$L320,LT            ; [CPU_] |5009| 
        ; branchcc occurs ; [] |5009| 
        MOVL      XAR5,XAR4             ; [CPU_] |5009| 
        MOVL      XAR0,#66              ; [CPU_] |5009| 
        CMPB      AL,#20                ; [CPU_] |5009| 
        ADDB      XAR5,#2               ; [CPU_] |5009| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5009| 
        B         $C$L320,GEQ           ; [CPU_] |5009| 
        ; branchcc occurs ; [] |5009| 
	.dwpsn	file "../Source/prod.c",line 5014,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5014| 
        MOVL      XAR0,#66              ; [CPU_] |5014| 
        MOV       *-SP[57],AL           ; [CPU_] |5014| 
        ADDB      XAR5,#2               ; [CPU_] |5014| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5014| 
	.dwpsn	file "../Source/prod.c",line 5015,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5015| 
        MOV       AL,AR6                ; [CPU_] |5015| 
        CMPB      AL,#247               ; [CPU_] |5015| 
        B         $C$L195,EQ            ; [CPU_] |5015| 
        ; branchcc occurs ; [] |5015| 
	.dwpsn	file "../Source/prod.c",line 5017,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5017| 
        MOVL      XAR0,#66              ; [CPU_] |5017| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5017| 
        MOVL      XAR0,#40              ; [CPU_] |5017| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5017| 
        MOVB      AL,#152               ; [CPU_] |5017| 
        MOV       T,*-SP[57]            ; [CPU_] |5017| 
        MPYU      ACC,T,AL              ; [CPU_] |5017| 
        ADDL      ACC,XAR7              ; [CPU_] |5017| 
        MOVL      XAR4,ACC              ; [CPU_] |5017| 
        MOVB      XAR0,#124             ; [CPU_] |5017| 
        MOV       PH,#0                 ; [CPU_] |5017| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5017| 
        ANDB      AL,#0xf0              ; [CPU_] |5017| 
        MOVU      ACC,AL                ; [CPU_] |5017| 
        MOVL      XAR7,ACC              ; [CPU_] |5017| 
        MOV       AL,AR6                ; [CPU_] |5017| 
        ANDB      AL,#240               ; [CPU_] |5017| 
        MOV       PL,AL                 ; [CPU_] |5017| 
        MOVL      ACC,XAR7              ; [CPU_] |5017| 
        CMPL      ACC,P                 ; [CPU_] |5017| 
        B         $C$L320,NEQ           ; [CPU_] |5017| 
        ; branchcc occurs ; [] |5017| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5023,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5023| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5023| 
        MOVB      AL,#152               ; [CPU_] |5023| 
        MOV       T,*-SP[57]            ; [CPU_] |5023| 
        MPYU      ACC,T,AL              ; [CPU_] |5023| 
        ADDL      ACC,XAR7              ; [CPU_] |5023| 
        MOVL      XAR1,ACC              ; [CPU_] |5023| 
        MOVB      XAR0,#125             ; [CPU_] |5023| 
	.dwpsn	file "../Source/prod.c",line 5024,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5024| 
	.dwpsn	file "../Source/prod.c",line 5023,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5023| 
	.dwpsn	file "../Source/prod.c",line 5024,column 5,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5024| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5025,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5025| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5025| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5025| 
        MOV       AL,AR6                ; [CPU_] |5025| 
        MOV       *-SP[61],#4           ; [CPU_] |5025| 
	.dwpsn	file "../Source/prod.c",line 5027,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5027| 
        B         $C$L205,EQ            ; [CPU_] |5027| 
        ; branchcc occurs ; [] |5027| 
	.dwpsn	file "../Source/prod.c",line 5030,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5030| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5030| 
        B         $C$L204,EQ            ; [CPU_] |5030| 
        ; branchcc occurs ; [] |5030| 
	.dwpsn	file "../Source/prod.c",line 5034,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5034| 
        CMPB      AL,#34                ; [CPU_] |5034| 
        B         $C$L196,GT            ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        CMPB      AL,#34                ; [CPU_] |5034| 
        B         $C$L200,EQ            ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        CMPB      AL,#16                ; [CPU_] |5034| 
        B         $C$L203,EQ            ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        CMPB      AL,#17                ; [CPU_] |5034| 
        B         $C$L202,EQ            ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        B         $C$L204,UNC           ; [CPU_] |5034| 
        ; branch occurs ; [] |5034| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5034| 
        B         $C$L198,EQ            ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        CMPB      AL,#36                ; [CPU_] |5034| 
        B         $C$L204,NEQ           ; [CPU_] |5034| 
        ; branchcc occurs ; [] |5034| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5075,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5075| 
        B         $C$L197,EQ            ; [CPU_] |5075| 
        ; branchcc occurs ; [] |5075| 
        CMPB      AL,#35                ; [CPU_] |5075| 
        B         $C$L207,NEQ           ; [CPU_] |5075| 
        ; branchcc occurs ; [] |5075| 
	.dwpsn	file "../Source/prod.c",line 5080,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5080| 
        MOV       AH,#15820             ; [CPU_] |5080| 
	.dwpsn	file "../Source/prod.c",line 5081,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5081| 
        ; branch occurs ; [] |5081| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5077,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5077| 
        MOV       AH,#15649             ; [CPU_] |5077| 
	.dwpsn	file "../Source/prod.c",line 5078,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5078| 
        ; branch occurs ; [] |5078| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5063,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5063| 
        B         $C$L199,EQ            ; [CPU_] |5063| 
        ; branchcc occurs ; [] |5063| 
        CMPB      AL,#36                ; [CPU_] |5063| 
        B         $C$L207,NEQ           ; [CPU_] |5063| 
        ; branchcc occurs ; [] |5063| 
	.dwpsn	file "../Source/prod.c",line 5068,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5068| 
        MOV       AH,#16672             ; [CPU_] |5068| 
	.dwpsn	file "../Source/prod.c",line 5069,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5069| 
        ; branch occurs ; [] |5069| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5065,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5065| 
        MOV       AH,#16073             ; [CPU_] |5065| 
	.dwpsn	file "../Source/prod.c",line 5066,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5066| 
        ; branch occurs ; [] |5066| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5051,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5051| 
        B         $C$L201,EQ            ; [CPU_] |5051| 
        ; branchcc occurs ; [] |5051| 
        CMPB      AL,#36                ; [CPU_] |5051| 
        B         $C$L207,NEQ           ; [CPU_] |5051| 
        ; branchcc occurs ; [] |5051| 
	.dwpsn	file "../Source/prod.c",line 5056,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5056| 
        MOV       AH,#16843             ; [CPU_] |5056| 
	.dwpsn	file "../Source/prod.c",line 5057,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5057| 
        ; branch occurs ; [] |5057| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5053,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5053| 
        MOV       AH,#16418             ; [CPU_] |5053| 
	.dwpsn	file "../Source/prod.c",line 5054,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5054| 
        ; branch occurs ; [] |5054| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5044,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5044| 
        B         $C$L207,NEQ           ; [CPU_] |5044| 
        ; branchcc occurs ; [] |5044| 
	.dwpsn	file "../Source/prod.c",line 5045,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5045| 
        MOV       AH,#16397             ; [CPU_] |5045| 
        B         $C$L206,UNC           ; [CPU_] |5045| 
        ; branch occurs ; [] |5045| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5037,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5037| 
        B         $C$L207,NEQ           ; [CPU_] |5037| 
        ; branchcc occurs ; [] |5037| 
	.dwpsn	file "../Source/prod.c",line 5038,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5038| 
        MOV       AH,#16104             ; [CPU_] |5038| 
        B         $C$L206,UNC           ; [CPU_] |5038| 
        ; branch occurs ; [] |5038| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5032,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5032| 
	.dwpsn	file "../Source/prod.c",line 5033,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5033| 
        ; branch occurs ; [] |5033| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5028,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5028| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5028| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5028| 
        MOV       AL,#0                 ; [CPU_] |5028| 
        MOV       AH,#17096             ; [CPU_] |5028| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5028| 
        ; call occurs [#FS$$DIV] ; [] |5028| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5028| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5094,column 10,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5094| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5095,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5095| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5095| 
        CMPL      ACC,XAR6              ; [CPU_] |5095| 
        B         $C$L209,NEQ           ; [CPU_] |5095| 
        ; branchcc occurs ; [] |5095| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5096,column 7,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_update_units")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5096| 
        ; call occurs [#_update_units] ; [] |5096| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5098,column 7,is_stmt,isa 0
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5098| 
        ; call occurs [#_ad7738_setcal] ; [] |5098| 
        MOVL      XAR0,#78              ; [CPU_] |5098| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5098| 
	.dwpsn	file "../Source/prod.c",line 5099,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5099| 
        MOVL      XAR4,ACC              ; [CPU_] |5099| 
        MOVL      XAR0,#88              ; [CPU_] |5099| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5099| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5099| 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5099| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5099| 
        MOVL      XAR0,#88              ; [CPU_] |5099| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5099| 
	.dwpsn	file "../Source/prod.c",line 5100,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5100| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5100| 
        ; call occurs [#_ad7738_resetvall] ; [] |5100| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5094,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5094| 
        ADDB      XAR1,#10              ; [CPU_] |5094| 
        MOV       AL,*-SP[58]           ; [CPU_] |5094| 
        CMPB      AL,#4                 ; [CPU_] |5094| 
        B         $C$L208,LO            ; [CPU_] |5094| 
        ; branchcc occurs ; [] |5094| 
        B         $C$L304,UNC           ; [CPU_] |5094| 
        ; branch occurs ; [] |5094| 
$C$L210:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4981,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4981| 
        B         $C$L320,LO            ; [CPU_] |4981| 
        ; branchcc occurs ; [] |4981| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4981| 
        MOVL      XAR0,#66              ; [CPU_] |4981| 
        MOVL      ACC,XAR7              ; [CPU_] |4981| 
        ADDB      ACC,#2                ; [CPU_] |4981| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4981| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4981| 
        B         $C$L320,LT            ; [CPU_] |4981| 
        ; branchcc occurs ; [] |4981| 
        ADDB      XAR4,#2               ; [CPU_] |4981| 
        MOVL      XAR0,#66              ; [CPU_] |4981| 
        CMPB      AL,#20                ; [CPU_] |4981| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4981| 
        B         $C$L320,GEQ           ; [CPU_] |4981| 
        ; branchcc occurs ; [] |4981| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4981| 
        MOVB      AH,#4                 ; [CPU_] |4981| 
        ADD       AH,AR6                ; [CPU_] |4981| 
        CMP       AH,*-SP[59]           ; [CPU_] |4981| 
        B         $C$L320,HI            ; [CPU_] |4981| 
        ; branchcc occurs ; [] |4981| 
	.dwpsn	file "../Source/prod.c",line 4986,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4986| 
	.dwpsn	file "../Source/prod.c",line 4987,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4987| 
        MOVL      XAR0,#66              ; [CPU_] |4987| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |4987| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4987| 
        MOV       AL,*-SP[57]           ; [CPU_] |4987| 
        MOV       @_buff$1+2,AL         ; [CPU_] |4987| 
        MOV       AL,AR6                ; [CPU_] |4987| 
	.dwpsn	file "../Source/prod.c",line 4989,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4989| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |4989| 
        B         $C$L211,HIS           ; [CPU_] |4989| 
        ; branchcc occurs ; [] |4989| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4989| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 4991,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4991| 
        MOVB      XAR5,#0               ; [CPU_] |4991| 
	.dwpsn	file "../Source/prod.c",line 4991,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |4991| 
        ; branchcc occurs ; [] |4991| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 4992,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4991,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4991| 
	.dwpsn	file "../Source/prod.c",line 4992,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4991,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4991| 
	.dwpsn	file "../Source/prod.c",line 4992,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4991,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4991| 
        B         $C$L212,HI            ; [CPU_] |4991| 
        ; branchcc occurs ; [] |4991| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 4994,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4994| 
        MOVB      AL,#152               ; [CPU_] |4994| 
        MOV       T,*-SP[57]            ; [CPU_] |4994| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4994| 
        MPYU      P,T,AL                ; [CPU_] |4994| 
        MOVL      ACC,P                 ; [CPU_] |4994| 
        ADD       ACC,AR5               ; [CPU_] |4994| 
        ADDL      ACC,XAR6              ; [CPU_] |4994| 
        MOVL      XAR4,ACC              ; [CPU_] |4994| 
        MOVB      XAR0,#98              ; [CPU_] |4994| 
	.dwpsn	file "../Source/prod.c",line 4998,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |4998| 
	.dwpsn	file "../Source/prod.c",line 4994,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4994| 
	.dwpsn	file "../Source/prod.c",line 4998,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |4998| 
        MOVL      XAR4,ACC              ; [CPU_] |4998| 
        MOVL      XAR1,ACC              ; [CPU_] |4998| 
        ADDB      XAR4,#98              ; [CPU_] |4998| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_strlen")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4998| 
        ; call occurs [#_strlen] ; [] |4998| 
	.dwpsn	file "../Source/prod.c",line 4999,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4999| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4999| 
	.dwpsn	file "../Source/prod.c",line 5000,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5000| 
	.dwpsn	file "../Source/prod.c",line 4999,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |4999| 
	.dwpsn	file "../Source/prod.c",line 5000,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |5000| 
        ; branchcc occurs ; [] |5000| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5000,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |5000| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5001,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |5001| 
	.dwpsn	file "../Source/prod.c",line 5000,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |5000| 
	.dwpsn	file "../Source/prod.c",line 5001,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |5001| 
        INC       *-SP[61]              ; [CPU_] |5001| 
	.dwpsn	file "../Source/prod.c",line 5000,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |5000| 
        B         $C$L214,HI            ; [CPU_] |5000| 
        ; branchcc occurs ; [] |5000| 
        B         $C$L304,UNC           ; [CPU_] |5000| 
        ; branch occurs ; [] |5000| 
$C$L215:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5539,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5539| 
        B         $C$L320,LO            ; [CPU_] |5539| 
        ; branchcc occurs ; [] |5539| 
	.dwpsn	file "../Source/prod.c",line 5544,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5544| 
	.dwpsn	file "../Source/prod.c",line 5545,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5545| 
	.dwpsn	file "../Source/prod.c",line 5544,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5544| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5544| 
        MOV       *-SP[57],AL           ; [CPU_] |5544| 
	.dwpsn	file "../Source/prod.c",line 5545,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5545| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5545| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5545| 
	.dwpsn	file "../Source/prod.c",line 5547,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5547| 
        SUBB      XAR5,#24              ; [CPU_U] |5547| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5547| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5549,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5549| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5549| 
	.dwpsn	file "../Source/prod.c",line 5550,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5550| 
        MOV       *XAR1++,AL            ; [CPU_] |5550| 
	.dwpsn	file "../Source/prod.c",line 5551,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5551| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5551| 
        MOV       *XAR5++,AL            ; [CPU_] |5551| 
	.dwpsn	file "../Source/prod.c",line 5552,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5552| 
        MOV       *XAR1++,AL            ; [CPU_] |5552| 
	.dwpsn	file "../Source/prod.c",line 5548,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5548| 
        ; branchcc occurs ; [] |5548| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5556,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5556| 
        B         $C$L320,HIS           ; [CPU_] |5556| 
        ; branchcc occurs ; [] |5556| 
        MOVL      XAR0,#40              ; [CPU_] |5556| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5556| 
        MOVB      AL,#12                ; [CPU_] |5556| 
        MOV       T,*-SP[57]            ; [CPU_] |5556| 
        MPYU      ACC,T,AL              ; [CPU_] |5556| 
        ADDL      ACC,XAR6              ; [CPU_] |5556| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5556| 
        MOVL      XAR4,ACC              ; [CPU_] |5556| 
        MOVL      XAR0,#88              ; [CPU_] |5556| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5556| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5556| 
        CMPB      AL,#7                 ; [CPU_] |5556| 
        B         $C$L320,NEQ           ; [CPU_] |5556| 
        ; branchcc occurs ; [] |5556| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5556| 
        MOV       *-SP[47],#0           ; [CPU_] |5556| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5556| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5556| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5556| 
        ; call occurs [#FS$$CMP] ; [] |5556| 
        CMPB      AL,#0                 ; [CPU_] |5556| 
        B         $C$L217,GEQ           ; [CPU_] |5556| 
        ; branchcc occurs ; [] |5556| 
        MOV       *-SP[47],#1           ; [CPU_] |5556| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5556| 
        ; branchcc occurs ; [] |5556| 
        MOV       AL,#0                 ; [CPU_] |5556| 
        MOV       AH,#16672             ; [CPU_] |5556| 
        MOV       *-SP[47],#0           ; [CPU_] |5556| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5556| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5556| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5556| 
        ; call occurs [#FS$$CMP] ; [] |5556| 
        CMPB      AL,#0                 ; [CPU_] |5556| 
        B         $C$L218,LEQ           ; [CPU_] |5556| 
        ; branchcc occurs ; [] |5556| 
        MOV       *-SP[47],#1           ; [CPU_] |5556| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5556| 
        ; branchcc occurs ; [] |5556| 
	.dwpsn	file "../Source/prod.c",line 5563,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5563| 
        MOV       AH,#0                 ; [CPU_] |5563| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5563| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5563| 
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5563| 
        ; call occurs [#FS$$CMP] ; [] |5563| 
        CMPB      AL,#0                 ; [CPU_] |5563| 
        B         $C$L219,GEQ           ; [CPU_] |5563| 
        ; branchcc occurs ; [] |5563| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5563| 
        MOVL      XAR0,#88              ; [CPU_] |5563| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5563| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5563| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5563| 
        B         $C$L220,UNC           ; [CPU_] |5563| 
        ; branch occurs ; [] |5563| 
$C$L219:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5563| 
        MOVL      XAR0,#88              ; [CPU_] |5563| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5563| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5563| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5563| 
$C$L220:    
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5563| 
        ; call occurs [#FS$$MPY] ; [] |5563| 
        MOVL      XAR0,#88              ; [CPU_] |5563| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5563| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5563| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5563| 
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5563| 
        ; call occurs [#FS$$ADD] ; [] |5563| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5563| 
        ; call occurs [#FS$$TOLL] ; [] |5563| 
	.dwpsn	file "../Source/prod.c",line 5570,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5570| 
	.dwpsn	file "../Source/prod.c",line 5563,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5563| 
	.dwpsn	file "../Source/prod.c",line 5551,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5551| 
	.dwpsn	file "../Source/prod.c",line 5563,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5563| 
	.dwpsn	file "../Source/prod.c",line 5570,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5570| 
        CMP64     ACC:P                 ; [CPU_] |5570| 
        B         $C$L222,LEQ           ; [CPU_] |5570| 
        ; branchcc occurs ; [] |5570| 
	.dwpsn	file "../Source/prod.c",line 5572,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5572| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5572| 
        MOV       *-SP[2],#0            ; [CPU_] |5572| 
        MOV       *-SP[1],#0            ; [CPU_] |5572| 
        MOVL      P,*-SP[32]            ; [CPU_] |5572| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5572| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$722, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5572| 
        ; call occurs [#LL$$CMP] ; [] |5572| 
        CMPB      AL,#0                 ; [CPU_] |5572| 
        B         $C$L221,GEQ           ; [CPU_] |5572| 
        ; branchcc occurs ; [] |5572| 
	.dwpsn	file "../Source/prod.c",line 5575,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5575| 
        MOV       *-SP[35],AL           ; [CPU_] |5575| 
        B         $C$L223,UNC           ; [CPU_] |5575| 
        ; branch occurs ; [] |5575| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5573,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5573| 
	.dwpsn	file "../Source/prod.c",line 5574,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5574| 
        ; branch occurs ; [] |5574| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5571,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5571| 
$C$L223:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5578,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5578| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5578| 
        ; call occurs [#_mcbsp_xmit] ; [] |5578| 
	.dwpsn	file "../Source/prod.c",line 5579,column 5,is_stmt,isa 0
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_latch_dac")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5579| 
        ; call occurs [#_latch_dac] ; [] |5579| 
	.dwpsn	file "../Source/prod.c",line 5582,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5582| 
        ANDB      AL,#0xff              ; [CPU_] |5582| 
        MOV       *XAR1++,AL            ; [CPU_] |5582| 
	.dwpsn	file "../Source/prod.c",line 5583,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5583| 
        LSR       AL,8                  ; [CPU_] |5583| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5583| 
	.dwpsn	file "../Source/prod.c",line 5586,column 5,is_stmt,isa 0
        B         $C$L735,UNC           ; [CPU_] |5586| 
        ; branch occurs ; [] |5586| 
$C$L224:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5475,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5475| 
        B         $C$L320,LO            ; [CPU_] |5475| 
        ; branchcc occurs ; [] |5475| 
	.dwpsn	file "../Source/prod.c",line 5480,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5480| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5480| 
$C$L226:    
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5480| 
        ; call occurs [#_ad7738_resetvall] ; [] |5480| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5483,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5483| 
        MOVL      XAR0,#66              ; [CPU_] |5483| 
        ADDB      ACC,#2                ; [CPU_] |5483| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5483| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5483| 
        ANDB      AL,#0x0f              ; [CPU_] |5483| 
	.dwpsn	file "../Source/prod.c",line 5485,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5485| 
        ; branch occurs ; [] |5485| 
$C$L228:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5461,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5461| 
        B         $C$L320,LO            ; [CPU_] |5461| 
        ; branchcc occurs ; [] |5461| 
	.dwpsn	file "../Source/prod.c",line 5466,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5466| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5466| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5466| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5466| 
	.dwpsn	file "../Source/prod.c",line 5471,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5471| 
        ; branch occurs ; [] |5471| 
$C$L229:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5525,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5525| 
        B         $C$L320,LO            ; [CPU_] |5525| 
        ; branchcc occurs ; [] |5525| 
	.dwpsn	file "../Source/prod.c",line 5530,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5530| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5530| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5530| 
        ; call occurs [#_shunt_switch] ; [] |5530| 
	.dwpsn	file "../Source/prod.c",line 5535,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5535| 
        ; branch occurs ; [] |5535| 
$C$L230:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5509,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5509| 
        B         $C$L320,LO            ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
	.dwpsn	file "../Source/prod.c",line 5514,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5514| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5514| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5514| 
        ; call occurs [#_ad7738_resettare] ; [] |5514| 
	.dwpsn	file "../Source/prod.c",line 5515,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5515| 
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5515| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5515| 
	.dwpsn	file "../Source/prod.c",line 5516,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5516| 
	.dwpsn	file "../Source/prod.c",line 5521,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5521| 
        ; branch occurs ; [] |5521| 
$C$L231:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5489,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5489| 
        B         $C$L320,LO            ; [CPU_] |5489| 
        ; branchcc occurs ; [] |5489| 
	.dwpsn	file "../Source/prod.c",line 5494,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5494| 
	.dwpsn	file "../Source/prod.c",line 5495,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5495| 
$C$L232:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5496,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5496| 
        B         $C$L233,EQ            ; [CPU_] |5496| 
        ; branchcc occurs ; [] |5496| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5497,column 7,is_stmt,isa 0
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5497| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5497| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5495,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5495| 
	.dwpsn	file "../Source/prod.c",line 5499,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5499| 
        MOV       *-SP[47],AL           ; [CPU_] |5499| 
	.dwpsn	file "../Source/prod.c",line 5495,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5495| 
        CMPB      AL,#4                 ; [CPU_] |5495| 
        B         $C$L232,LT            ; [CPU_] |5495| 
        ; branchcc occurs ; [] |5495| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5503,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5503| 
        ANDB      AL,#0x0f              ; [CPU_] |5503| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5503| 
        MOVL      XAR0,#66              ; [CPU_] |5503| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5503| 
	.dwpsn	file "../Source/prod.c",line 5505,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5505| 
        ; branch occurs ; [] |5505| 
$C$L235:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5446,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5446| 
        B         $C$L320,LO            ; [CPU_] |5446| 
        ; branchcc occurs ; [] |5446| 
	.dwpsn	file "../Source/prod.c",line 5451,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5451| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5451| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5451| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5451| 
	.dwpsn	file "../Source/prod.c",line 5457,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5457| 
        ; branch occurs ; [] |5457| 
$C$L236:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5423,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5423| 
        B         $C$L239,LO            ; [CPU_] |5423| 
        ; branchcc occurs ; [] |5423| 
	.dwpsn	file "../Source/prod.c",line 5435,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5435| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5435| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5435| 
        ; call occurs [#_ad7738_resettare] ; [] |5435| 
	.dwpsn	file "../Source/prod.c",line 5436,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5436| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5436| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5436| 
	.dwpsn	file "../Source/prod.c",line 5437,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5437| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5437| 
        ; call occurs [#_ad7738_resetvall] ; [] |5437| 
	.dwpsn	file "../Source/prod.c",line 5440,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5440| 
        MOVL      ACC,XAR1              ; [CPU_] |5440| 
        ADDB      ACC,#2                ; [CPU_] |5440| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5440| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5440| 
        ANDB      AL,#0xff              ; [CPU_] |5440| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5440| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5440| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5438,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5438| 
	.dwpsn	file "../Source/prod.c",line 5442,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5442| 
        ; branch occurs ; [] |5442| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5425,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5425| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5425| 
        ; call occurs [#_ad7738_resettare] ; [] |5425| 
	.dwpsn	file "../Source/prod.c",line 5426,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5426| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5426| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5426| 
	.dwpsn	file "../Source/prod.c",line 5427,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5427| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5427| 
        ; call occurs [#_ad7738_resetvall] ; [] |5427| 
	.dwpsn	file "../Source/prod.c",line 5430,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5430| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5430| 
	.dwpsn	file "../Source/prod.c",line 5432,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5432| 
        ; branch occurs ; [] |5432| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5598,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5598| 
        MOV       *-SP[47],#0           ; [CPU_] |5598| 
	.dwpsn	file "../Source/prod.c",line 5599,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5599| 
        ; branchcc occurs ; [] |5599| 
	.dwpsn	file "../Source/prod.c",line 5601,column 6,is_stmt,isa 0
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5601| 
        ; call occurs [#_lcd_clear] ; [] |5601| 
	.dwpsn	file "../Source/prod.c",line 5602,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5602| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5602| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5602| 
        ; call occurs [#_lcd_puts] ; [] |5602| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5605,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5605| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_delay_us")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5605| 
        ; call occurs [#_delay_us] ; [] |5605| 
	.dwpsn	file "../Source/prod.c",line 5604,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5604| 
        ; branchcc occurs ; [] |5604| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5609,column 6,is_stmt,isa 0
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_conf_write")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5609| 
        ; call occurs [#_conf_write] ; [] |5609| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5612,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5612| 
        B         $C$L242,NEQ           ; [CPU_] |5612| 
        ; branchcc occurs ; [] |5612| 
	.dwpsn	file "../Source/prod.c",line 5613,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5613| 
        MOVB      AL,#16                ; [CPU_] |5613| 
        SPM       #0                    ; [CPU_] 
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5613| 
        ; call occurs [#_lcd_puts] ; [] |5613| 
	.dwpsn	file "../Source/prod.c",line 5614,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5614| 
	.dwpsn	file "../Source/prod.c",line 5615,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5615| 
        ; branch occurs ; [] |5615| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5616,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5616| 
        MOVB      AL,#16                ; [CPU_] |5616| 
        SPM       #0                    ; [CPU_] 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5616| 
        ; call occurs [#_lcd_puts] ; [] |5616| 
	.dwpsn	file "../Source/prod.c",line 5617,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5617| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5621,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5621| 
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_delay_us")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5621| 
        ; call occurs [#_delay_us] ; [] |5621| 
	.dwpsn	file "../Source/prod.c",line 5620,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5620| 
        ; branchcc occurs ; [] |5620| 
        B         $C$L316,UNC           ; [CPU_] |5620| 
        ; branch occurs ; [] |5620| 
$C$L245:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4368,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4368| 
        B         $C$L320,LO            ; [CPU_] |4368| 
        ; branchcc occurs ; [] |4368| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4368| 
        MOVL      XAR0,#66              ; [CPU_] |4368| 
        MOVL      ACC,XAR7              ; [CPU_] |4368| 
        ADDB      ACC,#2                ; [CPU_] |4368| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4368| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4368| 
        B         $C$L320,LT            ; [CPU_] |4368| 
        ; branchcc occurs ; [] |4368| 
        ADDB      XAR4,#2               ; [CPU_] |4368| 
        MOVL      XAR0,#66              ; [CPU_] |4368| 
        CMPB      AL,#4                 ; [CPU_] |4368| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4368| 
        B         $C$L320,GEQ           ; [CPU_] |4368| 
        ; branchcc occurs ; [] |4368| 
	.dwpsn	file "../Source/prod.c",line 4373,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4373| 
	.dwpsn	file "../Source/prod.c",line 4374,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4374| 
	.dwpsn	file "../Source/prod.c",line 4377,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4377| 
	.dwpsn	file "../Source/prod.c",line 4374,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4374| 
	.dwpsn	file "../Source/prod.c",line 4377,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4377| 
        ADDB      ACC,#2                ; [CPU_] |4377| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4377| 
        MOVL      XAR0,#40              ; [CPU_] |4377| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4377| 
        MOV       T,*-SP[58]            ; [CPU_] |4377| 
        MOVB      AL,#10                ; [CPU_] |4377| 
        MPYU      ACC,T,AL              ; [CPU_] |4377| 
        ADDL      ACC,XAR6              ; [CPU_] |4377| 
        ADDB      ACC,#46               ; [CPU_] |4377| 
        MOVL      XAR4,ACC              ; [CPU_] |4377| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4379,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4379| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4379| 
        ADDB      XAR7,#1               ; [CPU_] |4379| 
	.dwpsn	file "../Source/prod.c",line 4380,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4380| 
        ADD       *XAR4++,AL            ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4378,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4378| 
        ; branchcc occurs ; [] |4378| 
	.dwpsn	file "../Source/prod.c",line 4383,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4383| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4383| 
        MOVB      AL,#10                ; [CPU_] |4383| 
        MPYU      ACC,T,AL              ; [CPU_] |4383| 
        ADDL      ACC,XAR6              ; [CPU_] |4383| 
        MOVL      XAR5,ACC              ; [CPU_] |4383| 
        ADDB      ACC,#48               ; [CPU_] |4383| 
        MOVL      XAR4,ACC              ; [CPU_] |4383| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4383| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4385,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4385| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4385| 
        ADDB      XAR7,#1               ; [CPU_] |4385| 
	.dwpsn	file "../Source/prod.c",line 4386,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4386| 
        ADD       *XAR4++,AL            ; [CPU_] |4386| 
	.dwpsn	file "../Source/prod.c",line 4384,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4384| 
        ; branchcc occurs ; [] |4384| 
	.dwpsn	file "../Source/prod.c",line 4389,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4389| 
        ADDB      ACC,#50               ; [CPU_] |4389| 
        MOVL      XAR4,ACC              ; [CPU_] |4389| 
        MOVL      P,ACC                 ; [CPU_] |4389| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4391,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4391| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4391| 
        ADDB      XAR7,#1               ; [CPU_] |4391| 
	.dwpsn	file "../Source/prod.c",line 4392,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4392| 
        ADD       *XAR4++,AL            ; [CPU_] |4392| 
	.dwpsn	file "../Source/prod.c",line 4390,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4390| 
        ; branchcc occurs ; [] |4390| 
	.dwpsn	file "../Source/prod.c",line 4396,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4396| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4396| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4396| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4398,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4398| 
        ANDB      AL,#0xff              ; [CPU_] |4398| 
        MOV       *XAR4++,AL            ; [CPU_] |4398| 
	.dwpsn	file "../Source/prod.c",line 4399,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4399| 
        LSR       AL,8                  ; [CPU_] |4399| 
        MOV       *XAR4++,AL            ; [CPU_] |4399| 
	.dwpsn	file "../Source/prod.c",line 4397,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4397| 
        ; branchcc occurs ; [] |4397| 
	.dwpsn	file "../Source/prod.c",line 4402,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4402| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4404,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4404| 
        ANDB      AL,#0xff              ; [CPU_] |4404| 
        MOV       *XAR4++,AL            ; [CPU_] |4404| 
	.dwpsn	file "../Source/prod.c",line 4405,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4405| 
        LSR       AL,8                  ; [CPU_] |4405| 
        MOV       *XAR4++,AL            ; [CPU_] |4405| 
	.dwpsn	file "../Source/prod.c",line 4403,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4403| 
        ; branchcc occurs ; [] |4403| 
	.dwpsn	file "../Source/prod.c",line 4408,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4408| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4410,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4410| 
        ANDB      AL,#0xff              ; [CPU_] |4410| 
        MOV       *XAR4++,AL            ; [CPU_] |4410| 
	.dwpsn	file "../Source/prod.c",line 4411,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4411| 
        LSR       AL,8                  ; [CPU_] |4411| 
        MOV       *XAR4++,AL            ; [CPU_] |4411| 
	.dwpsn	file "../Source/prod.c",line 4409,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4409| 
        ; branchcc occurs ; [] |4409| 
	.dwpsn	file "../Source/prod.c",line 4399,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4399| 
	.dwpsn	file "../Source/prod.c",line 4416,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4416| 
        ; branch occurs ; [] |4416| 
$C$L252:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4326,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4326| 
        B         $C$L320,LO            ; [CPU_] |4326| 
        ; branchcc occurs ; [] |4326| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4326| 
        MOVL      XAR0,#66              ; [CPU_] |4326| 
        MOVL      ACC,XAR5              ; [CPU_] |4326| 
        ADDB      ACC,#2                ; [CPU_] |4326| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4326| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4326| 
        B         $C$L320,LT            ; [CPU_] |4326| 
        ; branchcc occurs ; [] |4326| 
        ADDB      XAR4,#2               ; [CPU_] |4326| 
        MOVL      XAR0,#66              ; [CPU_] |4326| 
        CMPB      AL,#4                 ; [CPU_] |4326| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4326| 
        B         $C$L320,GEQ           ; [CPU_] |4326| 
        ; branchcc occurs ; [] |4326| 
	.dwpsn	file "../Source/prod.c",line 4331,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4331| 
	.dwpsn	file "../Source/prod.c",line 4332,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4332| 
	.dwpsn	file "../Source/prod.c",line 4334,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4334| 
        MOVL      XAR0,#66              ; [CPU_] |4334| 
	.dwpsn	file "../Source/prod.c",line 4332,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4332| 
	.dwpsn	file "../Source/prod.c",line 4334,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4334| 
        MOVL      XAR0,#40              ; [CPU_] |4334| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4334| 
        MOVB      AL,#10                ; [CPU_] |4334| 
        MOV       T,*-SP[58]            ; [CPU_] |4334| 
        MPYU      ACC,T,AL              ; [CPU_] |4334| 
        ADDL      ACC,XAR6              ; [CPU_] |4334| 
        ADDB      ACC,#46               ; [CPU_] |4334| 
        MOVL      XAR5,ACC              ; [CPU_] |4334| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4336,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4336| 
        ANDB      AL,#0xff              ; [CPU_] |4336| 
        MOV       *XAR4++,AL            ; [CPU_] |4336| 
	.dwpsn	file "../Source/prod.c",line 4337,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4337| 
        LSR       AL,8                  ; [CPU_] |4337| 
        MOV       *XAR4++,AL            ; [CPU_] |4337| 
	.dwpsn	file "../Source/prod.c",line 4335,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4335| 
        ; branchcc occurs ; [] |4335| 
	.dwpsn	file "../Source/prod.c",line 4340,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4340| 
        MPYU      ACC,T,AL              ; [CPU_] |4340| 
        ADDL      ACC,XAR6              ; [CPU_] |4340| 
        MOVL      XAR5,ACC              ; [CPU_] |4340| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4340| 
        ADDB      XAR5,#48              ; [CPU_] |4340| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4342,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4342| 
        ANDB      AL,#0xff              ; [CPU_] |4342| 
        MOV       *XAR4++,AL            ; [CPU_] |4342| 
	.dwpsn	file "../Source/prod.c",line 4343,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4343| 
        LSR       AL,8                  ; [CPU_] |4343| 
        MOV       *XAR4++,AL            ; [CPU_] |4343| 
	.dwpsn	file "../Source/prod.c",line 4341,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4341| 
        ; branchcc occurs ; [] |4341| 
	.dwpsn	file "../Source/prod.c",line 4346,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4346| 
	.dwpsn	file "../Source/prod.c",line 4337,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4337| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4346,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4346| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4348,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4348| 
        ANDB      AL,#0xff              ; [CPU_] |4348| 
        MOV       *XAR4++,AL            ; [CPU_] |4348| 
	.dwpsn	file "../Source/prod.c",line 4349,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4349| 
        LSR       AL,8                  ; [CPU_] |4349| 
        MOV       *XAR4++,AL            ; [CPU_] |4349| 
	.dwpsn	file "../Source/prod.c",line 4347,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4347| 
        ; branchcc occurs ; [] |4347| 
        B         $C$L743,UNC           ; [CPU_] |4347| 
        ; branch occurs ; [] |4347| 
$C$L256:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3968,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3968| 
        B         $C$L320,LO            ; [CPU_] |3968| 
        ; branchcc occurs ; [] |3968| 
        MOVL      ACC,XAR4              ; [CPU_] |3968| 
        MOVL      XAR0,#66              ; [CPU_] |3968| 
        ADDB      ACC,#2                ; [CPU_] |3968| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3968| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3968| 
        B         $C$L320,LT            ; [CPU_] |3968| 
        ; branchcc occurs ; [] |3968| 
        MOVL      XAR5,XAR4             ; [CPU_] |3968| 
        MOVL      XAR0,#66              ; [CPU_] |3968| 
        CMPB      AL,#20                ; [CPU_] |3968| 
        ADDB      XAR5,#2               ; [CPU_] |3968| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3968| 
        B         $C$L320,GEQ           ; [CPU_] |3968| 
        ; branchcc occurs ; [] |3968| 
	.dwpsn	file "../Source/prod.c",line 3972,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |3972| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3973| 
	.dwpsn	file "../Source/prod.c",line 3976,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3976| 
        MOVL      XAR0,#66              ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3973| 
	.dwpsn	file "../Source/prod.c",line 3976,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3976| 
        MOVL      XAR0,#40              ; [CPU_] |3976| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3976| 
        MOVB      AL,#152               ; [CPU_] |3976| 
        MOV       T,*-SP[57]            ; [CPU_] |3976| 
        MPYU      ACC,T,AL              ; [CPU_] |3976| 
        ADDL      ACC,XAR6              ; [CPU_] |3976| 
        ADDB      ACC,#82               ; [CPU_] |3976| 
        MOVL      XAR4,ACC              ; [CPU_] |3976| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_strlen")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3976| 
        ; call occurs [#_strlen] ; [] |3976| 
        MOVZ      AR6,AL                ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3977,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3978,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3978| 
	.dwpsn	file "../Source/prod.c",line 3977,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |3977| 
	.dwpsn	file "../Source/prod.c",line 3978,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |3978| 
        ; branchcc occurs ; [] |3978| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3978,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3978| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 3979,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3979| 
	.dwpsn	file "../Source/prod.c",line 3978,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3978| 
	.dwpsn	file "../Source/prod.c",line 3979,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3979| 
	.dwpsn	file "../Source/prod.c",line 3978,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3978| 
	.dwpsn	file "../Source/prod.c",line 3979,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3979| 
	.dwpsn	file "../Source/prod.c",line 3978,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3978| 
        B         $C$L257,HI            ; [CPU_] |3978| 
        ; branchcc occurs ; [] |3978| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 3983,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3983| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3983| 
        MOVB      AL,#152               ; [CPU_] |3983| 
        MOV       T,*-SP[57]            ; [CPU_] |3983| 
        MPYU      ACC,T,AL              ; [CPU_] |3983| 
        ADDL      ACC,XAR6              ; [CPU_] |3983| 
        MOVL      XAR4,ACC              ; [CPU_] |3983| 
        MOVL      XAR1,ACC              ; [CPU_] |3983| 
        ADDB      XAR4,#98              ; [CPU_] |3983| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_strlen")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3983| 
        ; call occurs [#_strlen] ; [] |3983| 
        MOVL      XAR0,#44              ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3984,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[61]          ; [CPU_] |3984| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3983,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |3983| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3984,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |3984| 
        MOVL      XAR4,ACC              ; [CPU_] |3984| 
        MOV       AL,AR7                ; [CPU_] |3984| 
        ADDB      AL,#1                 ; [CPU_] |3984| 
        MOV       *XAR4++,AR6           ; [CPU_] |3984| 
        MOV       *-SP[61],AL           ; [CPU_] |3984| 
        MOV       AL,AR6                ; [CPU_] |3984| 
	.dwpsn	file "../Source/prod.c",line 3985,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |3985| 
        ; branchcc occurs ; [] |3985| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3985,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3985| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 3986,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3986| 
	.dwpsn	file "../Source/prod.c",line 3985,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3985| 
	.dwpsn	file "../Source/prod.c",line 3986,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3986| 
	.dwpsn	file "../Source/prod.c",line 3985,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3985| 
	.dwpsn	file "../Source/prod.c",line 3986,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3986| 
	.dwpsn	file "../Source/prod.c",line 3985,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3985| 
        B         $C$L259,HI            ; [CPU_] |3985| 
        ; branchcc occurs ; [] |3985| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 3990,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3990| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |3990| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 3992,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3992| 
        ANDB      AL,#0xff              ; [CPU_] |3992| 
        MOV       *XAR4++,AL            ; [CPU_] |3992| 
	.dwpsn	file "../Source/prod.c",line 3993,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3993| 
        LSR       AL,8                  ; [CPU_] |3993| 
        MOV       *XAR4++,AL            ; [CPU_] |3993| 
	.dwpsn	file "../Source/prod.c",line 3991,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |3991| 
        ; branchcc occurs ; [] |3991| 
	.dwpsn	file "../Source/prod.c",line 3998,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3998| 
	.dwpsn	file "../Source/prod.c",line 4001,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4001| 
	.dwpsn	file "../Source/prod.c",line 3998,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3998| 
        MOV       *XAR4++,AL            ; [CPU_] |3998| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4001,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |4001| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4003,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4003| 
        ANDB      AL,#0xff              ; [CPU_] |4003| 
        MOV       *XAR4++,AL            ; [CPU_] |4003| 
	.dwpsn	file "../Source/prod.c",line 4004,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4004| 
        LSR       AL,8                  ; [CPU_] |4004| 
        MOV       *XAR4++,AL            ; [CPU_] |4004| 
	.dwpsn	file "../Source/prod.c",line 4002,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4002| 
        ; branchcc occurs ; [] |4002| 
	.dwpsn	file "../Source/prod.c",line 4009,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4009| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4009| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4011,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4011| 
        ANDB      AL,#0xff              ; [CPU_] |4011| 
        MOV       *XAR4++,AL            ; [CPU_] |4011| 
	.dwpsn	file "../Source/prod.c",line 4012,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4012| 
        LSR       AL,8                  ; [CPU_] |4012| 
        MOV       *XAR4++,AL            ; [CPU_] |4012| 
	.dwpsn	file "../Source/prod.c",line 4010,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4010| 
        ; branchcc occurs ; [] |4010| 
	.dwpsn	file "../Source/prod.c",line 4017,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4017| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4023,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4023| 
	.dwpsn	file "../Source/prod.c",line 4017,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4020,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4020| 
	.dwpsn	file "../Source/prod.c",line 4017,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4017| 
	.dwpsn	file "../Source/prod.c",line 4020,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4020| 
	.dwpsn	file "../Source/prod.c",line 4023,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4023| 
	.dwpsn	file "../Source/prod.c",line 4020,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4020| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4020| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4025,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4025| 
        ANDB      AL,#0xff              ; [CPU_] |4025| 
        MOV       *XAR4++,AL            ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4026,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4026| 
        LSR       AL,8                  ; [CPU_] |4026| 
        MOV       *XAR4++,AL            ; [CPU_] |4026| 
	.dwpsn	file "../Source/prod.c",line 4024,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4024| 
        ; branchcc occurs ; [] |4024| 
	.dwpsn	file "../Source/prod.c",line 3993,column 6,is_stmt,isa 0
        ADD       *-SP[61],#23          ; [CPU_] |3993| 
	.dwpsn	file "../Source/prod.c",line 4031,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4031| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4031| 
        CMPB      AL,#2                 ; [CPU_] |4031| 
        B         $C$L267,EQ            ; [CPU_] |4031| 
        ; branchcc occurs ; [] |4031| 
	.dwpsn	file "../Source/prod.c",line 4069,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4069| 
        ADDB      ACC,#178              ; [CPU_] |4069| 
        MOVL      XAR5,ACC              ; [CPU_] |4069| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4067,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4067| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4071,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4071| 
        ANDB      AL,#0xff              ; [CPU_] |4071| 
        MOV       *XAR4++,AL            ; [CPU_] |4071| 
	.dwpsn	file "../Source/prod.c",line 4072,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4072| 
        LSR       AL,8                  ; [CPU_] |4072| 
        MOV       *XAR4++,AL            ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4070,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4070| 
        ; branchcc occurs ; [] |4070| 
	.dwpsn	file "../Source/prod.c",line 4076,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4076| 
        ADDB      ACC,#200              ; [CPU_] |4076| 
        MOVL      XAR5,ACC              ; [CPU_] |4076| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4067,column 6,is_stmt,isa 0
        ADD       *-SP[61],#9           ; [CPU_] |4067| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4078,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4078| 
        ANDB      AL,#0xff              ; [CPU_] |4078| 
        MOV       *XAR4++,AL            ; [CPU_] |4078| 
	.dwpsn	file "../Source/prod.c",line 4079,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4079| 
        LSR       AL,8                  ; [CPU_] |4079| 
        MOV       *XAR4++,AL            ; [CPU_] |4079| 
	.dwpsn	file "../Source/prod.c",line 4077,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4077| 
        ; branchcc occurs ; [] |4077| 
        B         $C$L276,UNC           ; [CPU_] |4077| 
        ; branch occurs ; [] |4077| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4032,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4032| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4032| 
	.dwpsn	file "../Source/prod.c",line 4033,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4033| 
	.dwpsn	file "../Source/prod.c",line 4032,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4032| 
        INC       *-SP[61]              ; [CPU_] |4032| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4033,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |4033| 
        ; branch occurs ; [] |4033| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4035,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4035| 
        MOVL      XAR0,#40              ; [CPU_] |4035| 
        MOV       T,*-SP[57]            ; [CPU_] |4035| 
        MOVL      XAR6,ACC              ; [CPU_] |4035| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4035| 
        MOVB      AL,#76                ; [CPU_] |4035| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4035| 
        ADDL      ACC,XAR6              ; [CPU_] |4035| 
        LSL       ACC,1                 ; [CPU_] |4035| 
        ADDL      ACC,XAR7              ; [CPU_] |4035| 
        ADDB      ACC,#130              ; [CPU_] |4035| 
        MOVL      XAR7,ACC              ; [CPU_] |4035| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4037,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4037| 
        ANDB      AL,#0xff              ; [CPU_] |4037| 
        MOV       *XAR4++,AL            ; [CPU_] |4037| 
	.dwpsn	file "../Source/prod.c",line 4038,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4038| 
        LSR       AL,8                  ; [CPU_] |4038| 
        MOV       *XAR4++,AL            ; [CPU_] |4038| 
	.dwpsn	file "../Source/prod.c",line 4036,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |4036| 
        ; branchcc occurs ; [] |4036| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4044,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4044| 
        ANDB      AL,#0xff              ; [CPU_] |4044| 
        MOV       *XAR4++,AL            ; [CPU_] |4044| 
	.dwpsn	file "../Source/prod.c",line 4045,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4045| 
        LSR       AL,8                  ; [CPU_] |4045| 
        MOV       *XAR4++,AL            ; [CPU_] |4045| 
	.dwpsn	file "../Source/prod.c",line 4043,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |4043| 
        ; branchcc occurs ; [] |4043| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4038,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4038| 
	.dwpsn	file "../Source/prod.c",line 4033,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4033| 
        MOV       PL,AL                 ; [CPU_] |4033| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4033,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4033| 
        MOV       AL,PL                 ; [CPU_] |4033| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4033| 
        B         $C$L268,LT            ; [CPU_] |4033| 
        ; branchcc occurs ; [] |4033| 
	.dwpsn	file "../Source/prod.c",line 4050,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4050| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4050| 
        ; branch occurs ; [] |4050| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4052,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4052| 
        MOVL      XAR0,#40              ; [CPU_] |4052| 
        MOV       T,*-SP[57]            ; [CPU_] |4052| 
        MOVL      P,ACC                 ; [CPU_] |4052| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4052| 
        MOVB      AL,#76                ; [CPU_] |4052| 
        MPYU      ACC,T,AL              ; [CPU_] |4052| 
        ADDL      ACC,P                 ; [CPU_] |4052| 
        LSL       ACC,1                 ; [CPU_] |4052| 
        ADDL      ACC,XAR6              ; [CPU_] |4052| 
        ADDB      ACC,#178              ; [CPU_] |4052| 
        MOVL      XAR7,ACC              ; [CPU_] |4052| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4054,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4054| 
        ANDB      AL,#0xff              ; [CPU_] |4054| 
        MOV       *XAR4++,AL            ; [CPU_] |4054| 
	.dwpsn	file "../Source/prod.c",line 4055,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4055| 
        LSR       AL,8                  ; [CPU_] |4055| 
        MOV       *XAR4++,AL            ; [CPU_] |4055| 
	.dwpsn	file "../Source/prod.c",line 4053,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4053| 
        ; branchcc occurs ; [] |4053| 
	.dwpsn	file "../Source/prod.c",line 4059,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4059| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4061,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4061| 
        ANDB      AL,#0xff              ; [CPU_] |4061| 
        MOV       *XAR4++,AL            ; [CPU_] |4061| 
	.dwpsn	file "../Source/prod.c",line 4062,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4062| 
        LSR       AL,8                  ; [CPU_] |4062| 
        MOV       *XAR4++,AL            ; [CPU_] |4062| 
	.dwpsn	file "../Source/prod.c",line 4060,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4060| 
        ; branchcc occurs ; [] |4060| 
	.dwpsn	file "../Source/prod.c",line 4050,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4055,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4055| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4066,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4066| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4066| 
        ADDB      AL,#-1                ; [CPU_] |4066| 
        CMP       AL,AR5                ; [CPU_] |4066| 
        B         $C$L272,GT            ; [CPU_] |4066| 
        ; branchcc occurs ; [] |4066| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4085,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4085| 
        ADDB      ACC,#222              ; [CPU_] |4085| 
        MOVL      XAR5,ACC              ; [CPU_] |4085| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4087,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4087| 
        ANDB      AL,#0xff              ; [CPU_] |4087| 
        MOV       *XAR4++,AL            ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4088,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4088| 
        LSR       AL,8                  ; [CPU_] |4088| 
        MOV       *XAR4++,AL            ; [CPU_] |4088| 
	.dwpsn	file "../Source/prod.c",line 4086,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4086| 
        ; branchcc occurs ; [] |4086| 
	.dwpsn	file "../Source/prod.c",line 4093,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4093| 
        ADDB      ACC,#224              ; [CPU_] |4093| 
        MOVL      XAR5,ACC              ; [CPU_] |4093| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4095,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4095| 
        ANDB      AL,#0xff              ; [CPU_] |4095| 
        MOV       *XAR4++,AL            ; [CPU_] |4095| 
	.dwpsn	file "../Source/prod.c",line 4096,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4096| 
        LSR       AL,8                  ; [CPU_] |4096| 
        MOV       *XAR4++,AL            ; [CPU_] |4096| 
	.dwpsn	file "../Source/prod.c",line 4094,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4094| 
        ; branchcc occurs ; [] |4094| 
	.dwpsn	file "../Source/prod.c",line 4101,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4101| 
        ADDB      ACC,#228              ; [CPU_] |4101| 
        MOVL      XAR5,ACC              ; [CPU_] |4101| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4103,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4103| 
        ANDB      AL,#0xff              ; [CPU_] |4103| 
        MOV       *XAR4++,AL            ; [CPU_] |4103| 
	.dwpsn	file "../Source/prod.c",line 4104,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4104| 
        LSR       AL,8                  ; [CPU_] |4104| 
        MOV       *XAR4++,AL            ; [CPU_] |4104| 
	.dwpsn	file "../Source/prod.c",line 4102,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4102| 
        ; branchcc occurs ; [] |4102| 
	.dwpsn	file "../Source/prod.c",line 4109,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4109| 
        ADDB      ACC,#230              ; [CPU_] |4109| 
        MOVL      XAR5,ACC              ; [CPU_] |4109| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4111,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4111| 
        ANDB      AL,#0xff              ; [CPU_] |4111| 
        MOV       *XAR4++,AL            ; [CPU_] |4111| 
	.dwpsn	file "../Source/prod.c",line 4112,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4112| 
        LSR       AL,8                  ; [CPU_] |4112| 
        MOV       *XAR4++,AL            ; [CPU_] |4112| 
	.dwpsn	file "../Source/prod.c",line 4110,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4110| 
        ; branchcc occurs ; [] |4110| 
	.dwpsn	file "../Source/prod.c",line 4117,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4117| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4117| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4117| 
	.dwpsn	file "../Source/prod.c",line 4088,column 6,is_stmt,isa 0
        ADD       *-SP[61],#17          ; [CPU_] |4088| 
	.dwpsn	file "../Source/prod.c",line 4120,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4120| 
        ; branch occurs ; [] |4120| 
$C$L281:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3910,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3910| 
        B         $C$L320,LO            ; [CPU_] |3910| 
        ; branchcc occurs ; [] |3910| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3910| 
        MOVL      XAR0,#66              ; [CPU_] |3910| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3910| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3910| 
        B         $C$L320,LT            ; [CPU_] |3910| 
        ; branchcc occurs ; [] |3910| 
        CMPB      AL,#4                 ; [CPU_] |3910| 
        B         $C$L320,GEQ           ; [CPU_] |3910| 
        ; branchcc occurs ; [] |3910| 
	.dwpsn	file "../Source/prod.c",line 3914,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3914| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3914| 
	.dwpsn	file "../Source/prod.c",line 3916,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3916| 
        MOVL      XAR0,#40              ; [CPU_] |3916| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3916| 
        MPYB      ACC,T,#10             ; [CPU_] |3916| 
        ADDL      ACC,XAR6              ; [CPU_] |3916| 
        MOVL      XAR4,ACC              ; [CPU_] |3916| 
        MOVL      XAR7,ACC              ; [CPU_] |3916| 
        MOVB      XAR0,#42              ; [CPU_] |3916| 
        MOVL      P,ACC                 ; [CPU_] |3916| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3916| 
	.dwpsn	file "../Source/prod.c",line 3923,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3923| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3923| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3916,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3916| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3920,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3920| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3926,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3926| 
        ANDB      AL,#0xff              ; [CPU_] |3926| 
        MOV       *XAR4++,AL            ; [CPU_] |3926| 
	.dwpsn	file "../Source/prod.c",line 3927,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3927| 
        LSR       AL,8                  ; [CPU_] |3927| 
        MOV       *XAR4++,AL            ; [CPU_] |3927| 
	.dwpsn	file "../Source/prod.c",line 3924,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3924| 
        ; branchcc occurs ; [] |3924| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3934,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3934| 
        ANDB      AL,#0xff              ; [CPU_] |3934| 
        MOV       *XAR4++,AL            ; [CPU_] |3934| 
	.dwpsn	file "../Source/prod.c",line 3935,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3935| 
        LSR       AL,8                  ; [CPU_] |3935| 
        MOV       *XAR4++,AL            ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3932,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3932| 
        ; branchcc occurs ; [] |3932| 
	.dwpsn	file "../Source/prod.c",line 3939,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3939| 
        ADDB      XAR5,#46              ; [CPU_] |3939| 
        MOVL      XAR7,XAR5             ; [CPU_] |3939| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3942,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3942| 
        ANDB      AL,#0xff              ; [CPU_] |3942| 
        MOV       *XAR4++,AL            ; [CPU_] |3942| 
	.dwpsn	file "../Source/prod.c",line 3943,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3943| 
        LSR       AL,8                  ; [CPU_] |3943| 
        MOV       *XAR4++,AL            ; [CPU_] |3943| 
	.dwpsn	file "../Source/prod.c",line 3940,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3940| 
        ; branchcc occurs ; [] |3940| 
	.dwpsn	file "../Source/prod.c",line 3947,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3947| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3950,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3950| 
        ANDB      AL,#0xff              ; [CPU_] |3950| 
        MOV       *XAR4++,AL            ; [CPU_] |3950| 
	.dwpsn	file "../Source/prod.c",line 3951,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3951| 
        LSR       AL,8                  ; [CPU_] |3951| 
        MOV       *XAR4++,AL            ; [CPU_] |3951| 
	.dwpsn	file "../Source/prod.c",line 3948,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3948| 
        ; branchcc occurs ; [] |3948| 
	.dwpsn	file "../Source/prod.c",line 3920,column 6,is_stmt,isa 0
        MOV       *-SP[61],#28          ; [CPU_] |3920| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3958,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3958| 
        ANDB      AL,#0xff              ; [CPU_] |3958| 
        MOV       *XAR4++,AL            ; [CPU_] |3958| 
	.dwpsn	file "../Source/prod.c",line 3959,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3959| 
        LSR       AL,8                  ; [CPU_] |3959| 
        MOV       *XAR4++,AL            ; [CPU_] |3959| 
	.dwpsn	file "../Source/prod.c",line 3956,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3956| 
        ; branchcc occurs ; [] |3956| 
        B         $C$L743,UNC           ; [CPU_] |3956| 
        ; branch occurs ; [] |3956| 
$C$L287:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3864,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3864| 
        B         $C$L320,LO            ; [CPU_] |3864| 
        ; branchcc occurs ; [] |3864| 
	.dwpsn	file "../Source/prod.c",line 3868,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3868| 
        B         $C$L288,EQ            ; [CPU_] |3868| 
        ; branchcc occurs ; [] |3868| 
        CMPB      AL,#1                 ; [CPU_] |3868| 
        B         $C$L288,EQ            ; [CPU_] |3868| 
        ; branchcc occurs ; [] |3868| 
        CMPB      AL,#2                 ; [CPU_] |3868| 
        B         $C$L288,EQ            ; [CPU_] |3868| 
        ; branchcc occurs ; [] |3868| 
        ADDB      XAR4,#2               ; [CPU_] |3868| 
        MOVL      XAR0,#66              ; [CPU_] |3868| 
        CMPB      AL,#3                 ; [CPU_] |3868| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3868| 
        B         $C$L320,NEQ           ; [CPU_] |3868| 
        ; branchcc occurs ; [] |3868| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3874,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3874| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3874| 
        MOVL      XAR4,XAR5             ; [CPU_] |3874| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3874| 
        ADDB      XAR5,#2               ; [CPU_] |3874| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3874| 
        ADDB      XAR4,#6               ; [CPU_] |3874| 
        B         $C$L293,NEQ           ; [CPU_] |3874| 
        ; branchcc occurs ; [] |3874| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3875,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3875| 
        B         $C$L320,LO            ; [CPU_] |3875| 
        ; branchcc occurs ; [] |3875| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3880,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3880| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3882,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3882| 
        ADDL      ACC,XT                ; [CPU_] |3882| 
	.dwpsn	file "../Source/prod.c",line 3883,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3883| 
	.dwpsn	file "../Source/prod.c",line 3881,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3881| 
        ; branchcc occurs ; [] |3881| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3886,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3886| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3887,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3887| 
        B         $C$L291,EQ            ; [CPU_] |3887| 
        ; branchcc occurs ; [] |3887| 
	.dwpsn	file "../Source/prod.c",line 3886,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3886| 
        ADDB      XAR4,#1               ; [CPU_] |3886| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3886| 
        ; branchcc occurs ; [] |3886| 
        B         $C$L292,UNC           ; [CPU_] |3886| 
        ; branch occurs ; [] |3886| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3888,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3888| 
        MOVB      XAR0,#35              ; [CPU_] |3888| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3888| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3892,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3892| 
        B         $C$L320,EQ            ; [CPU_] |3892| 
        ; branchcc occurs ; [] |3892| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3898,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3898| 
        MOVL      XAR0,#66              ; [CPU_] |3898| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3898| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3898| 
        ADDB      ACC,#2                ; [CPU_] |3898| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3898| 
        MOVB      XAR0,#34              ; [CPU_] |3898| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3898| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3898| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3898| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3898| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3901,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3901| 
        MOV       *XAR4++,AL            ; [CPU_] |3901| 
	.dwpsn	file "../Source/prod.c",line 3900,column 12,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3900| 
        MOV       AL,*-SP[59]           ; [CPU_] |3900| 
	.dwpsn	file "../Source/prod.c",line 3901,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3901| 
	.dwpsn	file "../Source/prod.c",line 3900,column 12,is_stmt,isa 0
        CMP       AL,*-SP[61]           ; [CPU_] |3900| 
        B         $C$L294,HI            ; [CPU_] |3900| 
        ; branchcc occurs ; [] |3900| 
        B         $C$L304,UNC           ; [CPU_] |3900| 
        ; branch occurs ; [] |3900| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3848,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3848| 
        MOVB      XAR0,#34              ; [CPU_] |3848| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3848| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3848| 
	.dwpsn	file "../Source/prod.c",line 3850,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3850| 
	.dwpsn	file "../Source/prod.c",line 3848,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3848| 
        MOV       *-SP[61],#3           ; [CPU_] |3848| 
	.dwpsn	file "../Source/prod.c",line 3850,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3850| 
        CMPB      AL,#1                 ; [CPU_] |3850| 
        B         $C$L296,EQ            ; [CPU_] |3850| 
        ; branchcc occurs ; [] |3850| 
        MOVB      XAR1,#34              ; [CPU_] |3850| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3850| 
        B         $C$L743,NEQ           ; [CPU_] |3850| 
        ; branchcc occurs ; [] |3850| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3852,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3852| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3852| 
        MOVL      XAR0,#74              ; [CPU_] |3852| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3852| 
        MOVL      XAR0,#44              ; [CPU_] |3852| 
        ADDL      ACC,XAR6              ; [CPU_] |3852| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3852| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3852| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3855,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3855| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |3855| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3854,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3854| 
        ANDB      AL,#0xff              ; [CPU_] |3854| 
        MOV       *XAR4++,AL            ; [CPU_] |3854| 
	.dwpsn	file "../Source/prod.c",line 3855,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3855| 
        LSR       AL,8                  ; [CPU_] |3855| 
        MOV       *XAR4++,AL            ; [CPU_] |3855| 
	.dwpsn	file "../Source/prod.c",line 3853,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3853| 
        ; branchcc occurs ; [] |3853| 
        B         $C$L743,UNC           ; [CPU_] |3853| 
        ; branch occurs ; [] |3853| 
$C$L298:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3827,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3827| 
        B         $C$L320,LO            ; [CPU_] |3827| 
        ; branchcc occurs ; [] |3827| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3827| 
        MOVL      XAR0,#66              ; [CPU_] |3827| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3827| 
        ADDB      AL,#3                 ; [CPU_] |3827| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3827| 
        CMP       AL,*-SP[59]           ; [CPU_] |3827| 
        B         $C$L320,HI            ; [CPU_] |3827| 
        ; branchcc occurs ; [] |3827| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3832,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3832| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3832| 
        ; branch occurs ; [] |3832| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3833,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3833| 
        ADD       PL,AL                 ; [CPU_] |3833| 
        MOVL      ACC,XAR7              ; [CPU_] |3833| 
        ADD       ACC,PL                ; [CPU_] |3833| 
        MOVL      XAR7,ACC              ; [CPU_] |3833| 
	.dwpsn	file "../Source/prod.c",line 3832,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3832| 
	.dwpsn	file "../Source/prod.c",line 3833,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3833| 
        MOV       *XAR4++,AL            ; [CPU_] |3833| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3832,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3832| 
        MOVL      XAR0,#66              ; [CPU_] |3832| 
        MOVL      ACC,XAR7              ; [CPU_] |3832| 
        ADDB      ACC,#2                ; [CPU_] |3832| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3832| 
        MOV       AL,AR6                ; [CPU_] |3832| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3832| 
        B         $C$L299,LT            ; [CPU_] |3832| 
        ; branchcc occurs ; [] |3832| 
	.dwpsn	file "../Source/prod.c",line 3835,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3835| 
        MOVL      XAR0,#76              ; [CPU_] |3835| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3835| 
	.dwpsn	file "../Source/prod.c",line 3838,column 5,is_stmt,isa 0
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_strlen")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3838| 
        ; call occurs [#_strlen] ; [] |3838| 
	.dwpsn	file "../Source/prod.c",line 3839,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3839| 
	.dwpsn	file "../Source/prod.c",line 3840,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3840| 
	.dwpsn	file "../Source/prod.c",line 3839,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3839| 
        MOV       *-SP[61],#3           ; [CPU_] |3839| 
	.dwpsn	file "../Source/prod.c",line 3840,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3840| 
        ; branchcc occurs ; [] |3840| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3840,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3840| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3841,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3841| 
	.dwpsn	file "../Source/prod.c",line 3840,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3840| 
	.dwpsn	file "../Source/prod.c",line 3841,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3841| 
        INC       *-SP[61]              ; [CPU_] |3841| 
	.dwpsn	file "../Source/prod.c",line 3840,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3840| 
        B         $C$L301,HI            ; [CPU_] |3840| 
        ; branchcc occurs ; [] |3840| 
	.dwpsn	file "../Source/prod.c",line 3844,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3844| 
        ; branch occurs ; [] |3844| 
$C$L302:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3807,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3807| 
        B         $C$L320,LO            ; [CPU_] |3807| 
        ; branchcc occurs ; [] |3807| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3812,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3812| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3812| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3814,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3814| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3814| 
	.dwpsn	file "../Source/prod.c",line 3815,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3815| 
        MOV       *XAR5++,AL            ; [CPU_] |3815| 
	.dwpsn	file "../Source/prod.c",line 3816,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3816| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3816| 
        MOV       *XAR4++,AL            ; [CPU_] |3816| 
	.dwpsn	file "../Source/prod.c",line 3817,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3817| 
        MOV       *XAR5++,AL            ; [CPU_] |3817| 
	.dwpsn	file "../Source/prod.c",line 3813,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3813| 
        ; branchcc occurs ; [] |3813| 
	.dwpsn	file "../Source/prod.c",line 3817,column 6,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |3817| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3820,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3820| 
	.dwpsn	file "../Source/prod.c",line 3823,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3823| 
        ; branch occurs ; [] |3823| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5732,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5732 | cmd_mode = SCI_MODE_ASCII;                                             
; 5733 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5734 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5735 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5732| 
	.dwpsn	file "../Source/prod.c",line 5738,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5738 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_update_units")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5738| 
        ; call occurs [#_update_units] ; [] |5738| 
	.dwpsn	file "../Source/prod.c",line 5731,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |5731| 
	.dwpsn	file "../Source/prod.c",line 5739,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5739 | break;                                                                 
; 5741 | default:                                                               
; 5743 | // send back NACK?                                                     
; 5745 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5739| 
        ; branch occurs ; [] |5739| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5725,column 5,is_stmt,isa 0
        MOV       *-SP[53],#1           ; [CPU_] |5725| 
	.dwpsn	file "../Source/prod.c",line 5727,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5727| 
        ; branch occurs ; [] |5727| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4362,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4362| 
	.dwpsn	file "../Source/prod.c",line 4363,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4363| 
        ; branch occurs ; [] |4363| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4358,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4358| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4358| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_ssr_set")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4358| 
        ; call occurs [#_ssr_set] ; [] |4358| 
	.dwpsn	file "../Source/prod.c",line 4359,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4359| 
        ; branch occurs ; [] |4359| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5666,column 5,is_stmt,isa 0
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_conf_read")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5666| 
        ; call occurs [#_conf_read] ; [] |5666| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5669,column 5,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5669| 
        ; call occurs [#_ad7738_setcal] ; [] |5669| 
	.dwpsn	file "../Source/prod.c",line 5670,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5670| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5670| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5670| 
	.dwpsn	file "../Source/prod.c",line 5671,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5671| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5671| 
        ; call occurs [#_ad7738_resetvall] ; [] |5671| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5675,column 5,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_update_units")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5675| 
        ; call occurs [#_update_units] ; [] |5675| 
	.dwpsn	file "../Source/prod.c",line 5674,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5674| 
	.dwpsn	file "../Source/prod.c",line 5677,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5677| 
        ; branch occurs ; [] |5677| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5630,column 5,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_conf_default")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5630| 
        ; call occurs [#_conf_default] ; [] |5630| 
	.dwpsn	file "../Source/prod.c",line 5633,column 5,is_stmt,isa 0
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5633| 
        ; call occurs [#_lcd_clear] ; [] |5633| 
	.dwpsn	file "../Source/prod.c",line 5634,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5634| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5634| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5634| 
        ; call occurs [#_lcd_puts] ; [] |5634| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5637,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5637| 
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_delay_us")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5637| 
        ; call occurs [#_delay_us] ; [] |5637| 
	.dwpsn	file "../Source/prod.c",line 5636,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5636| 
        ; branchcc occurs ; [] |5636| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5641,column 5,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_conf_write")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5641| 
        ; call occurs [#_conf_write] ; [] |5641| 
        MOVZ      AR1,AL                ; [CPU_] |5641| 
	.dwpsn	file "../Source/prod.c",line 5642,column 5,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5642| 
        ; call occurs [#_ad7738_setcal] ; [] |5642| 
	.dwpsn	file "../Source/prod.c",line 5643,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5643| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5643| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5643| 
	.dwpsn	file "../Source/prod.c",line 5644,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5644| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5644| 
        ; call occurs [#_ad7738_resetvall] ; [] |5644| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5647,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5647| 
        ; branchcc occurs ; [] |5647| 
	.dwpsn	file "../Source/prod.c",line 5648,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5648| 
        MOVB      AL,#31                ; [CPU_] |5648| 
        SPM       #0                    ; [CPU_] 
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5648| 
        ; call occurs [#_lcd_puts] ; [] |5648| 
	.dwpsn	file "../Source/prod.c",line 5649,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5649| 
	.dwpsn	file "../Source/prod.c",line 5650,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5650| 
	.dwpsn	file "../Source/prod.c",line 5651,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5651| 
        ; branch occurs ; [] |5651| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5652,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5652| 
        MOVB      AL,#31                ; [CPU_] |5652| 
        SPM       #0                    ; [CPU_] 
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5652| 
        ; call occurs [#_lcd_puts] ; [] |5652| 
	.dwpsn	file "../Source/prod.c",line 5653,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5653| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5656,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5656| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_delay_us")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5656| 
        ; call occurs [#_delay_us] ; [] |5656| 
	.dwpsn	file "../Source/prod.c",line 5655,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5655| 
        ; branchcc occurs ; [] |5655| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5658,column 5,is_stmt,isa 0
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5658| 
        ; call occurs [#_lcd_clear] ; [] |5658| 
	.dwpsn	file "../Source/prod.c",line 5659,column 5,is_stmt,isa 0
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_update_units")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5659| 
        ; call occurs [#_update_units] ; [] |5659| 
$C$L317:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5748,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5748 | switch (bincmdresult) {                                                
; 5749 | case OK_SendResult:                                                    
; 5750 |         scia_send_bin(buff, j);         // send back                   
; 5752 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5753 |                 delay_us(2000);                 // 2ms                 
; 5754 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5756 |         break;                                                         
; 5758 | case Error_UnImpl:                                                     
; 5760 |         buff[1] = CmdUnImpl;                                           
; 5761 |         buff[2] = cmdbuff[1];                                          
; 5762 |         scia_send_bin(buff, 3);         // send back                   
; 5763 |         break;                                                         
; 5765 | case Error_Invalid:                                                    
; 5767 |         buff[1] = CmdInvalid;                                          
; 5768 |         buff[2] = cmdbuff[1];                                          
; 5769 |         scia_send_bin(buff, 3);         // send back                   
; 5770 |         break;                                                         
; 5772 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5748| 
        ; branchcc occurs ; [] |5748| 
        CMPB      AL,#1                 ; [CPU_] |5748| 
        B         $C$L321,EQ            ; [CPU_] |5748| 
        ; branchcc occurs ; [] |5748| 
        CMPB      AL,#2                 ; [CPU_] |5748| 
        B         $C$L320,EQ            ; [CPU_] |5748| 
        ; branchcc occurs ; [] |5748| 
        CMPB      AL,#3                 ; [CPU_] |5748| 
        B         $C$L634,NEQ           ; [CPU_] |5748| 
        ; branchcc occurs ; [] |5748| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5774,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5774 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5774| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5774| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5775,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5775 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5775| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5775| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5775| 
	.dwpsn	file "../Source/prod.c",line 5776,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5776 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5776| 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5776| 
        ; call occurs [#_scia_send_bin] ; [] |5776| 
	.dwpsn	file "../Source/prod.c",line 5777,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5777 | break;                                                                 
; 5779 | default:                                                               
; 5781 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5777| 
        ; branch occurs ; [] |5777| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5767,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5767| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5767| 
	.dwpsn	file "../Source/prod.c",line 5770,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5770| 
        ; branch occurs ; [] |5770| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5760,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5760| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5760| 
	.dwpsn	file "../Source/prod.c",line 5763,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5763| 
        ; branch occurs ; [] |5763| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 990,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |990| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |990| 
        CMPB      AL,#79                ; [CPU_] |990| 
        B         $C$L324,GT            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#79                ; [CPU_] |990| 
        B         $C$L443,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#69                ; [CPU_] |990| 
        B         $C$L323,GT            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#69                ; [CPU_] |990| 
        B         $C$L507,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#66                ; [CPU_] |990| 
        B         $C$L591,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#67                ; [CPU_] |990| 
        B         $C$L530,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#68                ; [CPU_] |990| 
        B         $C$L514,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        B         $C$L625,UNC           ; [CPU_] |990| 
        ; branch occurs ; [] |990| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |990| 
        B         $C$L498,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#72                ; [CPU_] |990| 
        B         $C$L630,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#76                ; [CPU_] |990| 
        B         $C$L466,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        B         $C$L625,UNC           ; [CPU_] |990| 
        ; branch occurs ; [] |990| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |990| 
        B         $C$L325,GT            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#85                ; [CPU_] |990| 
        B         $C$L326,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#80                ; [CPU_] |990| 
        B         $C$L429,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#82                ; [CPU_] |990| 
        B         $C$L414,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#83                ; [CPU_] |990| 
        B         $C$L351,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        B         $C$L625,UNC           ; [CPU_] |990| 
        ; branch occurs ; [] |990| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |990| 
        B         $C$L628,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        CMPB      AL,#90                ; [CPU_] |990| 
        B         $C$L626,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
        B         $C$L625,UNC           ; [CPU_] |990| 
        ; branch occurs ; [] |990| 
$C$L326:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1158,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1158| 
        B         $C$L625,LO            ; [CPU_] |1158| 
        ; branchcc occurs ; [] |1158| 
	.dwpsn	file "../Source/prod.c",line 1161,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1161| 
        CMPB      AL,#73                ; [CPU_] |1161| 
        B         $C$L327,GT            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        CMPB      AL,#73                ; [CPU_] |1161| 
        B         $C$L338,EQ            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        CMPB      AL,#66                ; [CPU_] |1161| 
        B         $C$L330,EQ            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        CMPB      AL,#67                ; [CPU_] |1161| 
        B         $C$L347,EQ            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        CMPB      AL,#70                ; [CPU_] |1161| 
        B         $C$L344,EQ            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        B         $C$L625,UNC           ; [CPU_] |1161| 
        ; branch occurs ; [] |1161| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1161| 
        B         $C$L328,EQ            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        CMPB      AL,#83                ; [CPU_] |1161| 
        B         $C$L337,EQ            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        CMPB      AL,#87                ; [CPU_] |1161| 
        B         $C$L336,EQ            ; [CPU_] |1161| 
        ; branchcc occurs ; [] |1161| 
        B         $C$L625,UNC           ; [CPU_] |1161| 
        ; branch occurs ; [] |1161| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1178,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1178| 
        MOVL      XAR0,#44              ; [CPU_] |1178| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1178| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1178| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1178| 
        MOVL      XAR4,XAR1             ; [CPU_] |1178| 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_sprintf")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1178| 
        ; call occurs [#_sprintf] ; [] |1178| 
	.dwpsn	file "../Source/prod.c",line 1179,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1179| 
        MOV       AL,#1024              ; [CPU_] |1179| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1179| 
	.dwpsn	file "../Source/prod.c",line 1178,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1178| 
	.dwpsn	file "../Source/prod.c",line 1179,column 6,is_stmt,isa 0
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1179| 
        ; call occurs [#_scia_getparam] ; [] |1179| 
        CMPB      AL,#31                ; [CPU_] |1179| 
        B         $C$L329,LOS           ; [CPU_] |1179| 
        ; branchcc occurs ; [] |1179| 
	.dwpsn	file "../Source/prod.c",line 1183,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1183| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1183| 
	.dwpsn	file "../Source/prod.c",line 1182,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1182| 
	.dwpsn	file "../Source/prod.c",line 1183,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1183| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1183| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1186,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1186| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1186| 
        MOVL      XAR0,#86              ; [CPU_] |1186| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1186| 
        MOVB      AH,#1                 ; [CPU_] |1186| 
        ADD       AH,AL                 ; [CPU_] |1186| 
        MOVU      ACC,AH                ; [CPU_] |1186| 
        MOVL      XAR5,XAR1             ; [CPU_] |1186| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_memcpy")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1186| 
        ; call occurs [#_memcpy] ; [] |1186| 
        MOVL      XAR4,XAR1             ; [CPU_] |1186| 
	.dwpsn	file "../Source/prod.c",line 1190,column 6,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_scia_puts")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1190| 
        ; call occurs [#_scia_puts] ; [] |1190| 
	.dwpsn	file "../Source/prod.c",line 1191,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1191| 
	.dwpsn	file "../Source/prod.c",line 1193,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1193| 
        ; branch occurs ; [] |1193| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1283,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1283| 
        MOVB      XAR0,#34              ; [CPU_] |1283| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1283| 
        CMPB      AL,#3                 ; [CPU_] |1283| 
        B         $C$L335,EQ            ; [CPU_] |1283| 
        ; branchcc occurs ; [] |1283| 
        MOVB      XAR1,#34              ; [CPU_] |1283| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1283| 
        CMPB      AL,#2                 ; [CPU_] |1283| 
        B         $C$L335,EQ            ; [CPU_] |1283| 
        ; branchcc occurs ; [] |1283| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1290,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1290| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1290| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1291,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1291| 
        MOVL      XAR0,#44              ; [CPU_] |1291| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1291| 
        MOV       *-SP[3],AL            ; [CPU_] |1291| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1291| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1291| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1291| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_sprintf")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1291| 
        ; call occurs [#_sprintf] ; [] |1291| 
        MOVL      XAR0,#44              ; [CPU_] |1291| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1291| 
	.dwpsn	file "../Source/prod.c",line 1292,column 7,is_stmt,isa 0
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_puts")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1292| 
        ; call occurs [#_scia_puts] ; [] |1292| 
        MOV       AL,*-SP[47]           ; [CPU_] |1292| 
	.dwpsn	file "../Source/prod.c",line 1293,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1293| 
        B         $C$L332,GEQ           ; [CPU_] |1293| 
        ; branchcc occurs ; [] |1293| 
	.dwpsn	file "../Source/prod.c",line 1294,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1294| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_scia_puts")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1294| 
        ; call occurs [#_scia_puts] ; [] |1294| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1290,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1290| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1290| 
        B         $C$L331,LT            ; [CPU_] |1290| 
        ; branchcc occurs ; [] |1290| 
	.dwpsn	file "../Source/prod.c",line 1297,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1297| 
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1297| 
        ; call occurs [#_scia_puts] ; [] |1297| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1298,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1298| 
        MOVB      XAR0,#35              ; [CPU_] |1298| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1298| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1298| 
        MOV       *-SP[3],AL            ; [CPU_] |1298| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1298| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1298| 
        MOVL      XAR0,#74              ; [CPU_] |1298| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1298| 
        ADDL      ACC,XAR6              ; [CPU_] |1298| 
        MOVL      XAR4,ACC              ; [CPU_] |1298| 
        MOVL      XAR0,#44              ; [CPU_] |1298| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1298| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1298| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1298| 
        MOVL      XAR4,XAR1             ; [CPU_] |1298| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_sprintf")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1298| 
        ; call occurs [#_sprintf] ; [] |1298| 
	.dwpsn	file "../Source/prod.c",line 1301,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1301| 
	.dwpsn	file "../Source/prod.c",line 1298,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1298| 
	.dwpsn	file "../Source/prod.c",line 1301,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1301| 
	.dwpsn	file "../Source/prod.c",line 1298,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1298| 
	.dwpsn	file "../Source/prod.c",line 1301,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1301| 
        MOVL      XAR5,XAR1             ; [CPU_] |1301| 
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1301| 
        ; call occurs [#_scia_getparam] ; [] |1301| 
        MOVL      XAR4,XAR1             ; [CPU_] |1301| 
	.dwpsn	file "../Source/prod.c",line 1302,column 6,is_stmt,isa 0
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_scia_puts")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1302| 
        ; call occurs [#_scia_puts] ; [] |1302| 
	.dwpsn	file "../Source/prod.c",line 1303,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1303| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_scia_puts")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1303| 
        ; call occurs [#_scia_puts] ; [] |1303| 
        MOV       AL,*-SP[47]           ; [CPU_] |1303| 
	.dwpsn	file "../Source/prod.c",line 1304,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1304| 
        ; branchcc occurs ; [] |1304| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1309,column 6,is_stmt,isa 0
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_atoi")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1309| 
        ; call occurs [#_atoi] ; [] |1309| 
        CMPB      AL,#7                 ; [CPU_] |1309| 
        B         $C$L333,HI            ; [CPU_] |1309| 
        ; branchcc occurs ; [] |1309| 
	.dwpsn	file "../Source/prod.c",line 1315,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1315| 
        MOVB      XAR1,#35              ; [CPU_] |1315| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1315| 
	.dwpsn	file "../Source/prod.c",line 1316,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1316| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1316| 
	.dwpsn	file "../Source/prod.c",line 1315,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1315| 
	.dwpsn	file "../Source/prod.c",line 1316,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1316| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1316| 
        MOVL      XAR0,#74              ; [CPU_] |1316| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1316| 
	.dwpsn	file "../Source/prod.c",line 1323,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1323| 
        ; branch occurs ; [] |1323| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1311,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1311| 
	.dwpsn	file "../Source/prod.c",line 1313,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1313| 
        ; branch occurs ; [] |1313| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1305,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1305| 
	.dwpsn	file "../Source/prod.c",line 1307,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1307| 
        ; branch occurs ; [] |1307| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1285,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1285| 
	.dwpsn	file "../Source/prod.c",line 1287,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1287| 
        ; branch occurs ; [] |1287| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1356,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1356| 
        MOVB      XAR0,#40              ; [CPU_] |1356| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1356| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1356| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1356| 
        MOVL      XAR0,#44              ; [CPU_] |1356| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1356| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1356| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_sprintf")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1356| 
        ; call occurs [#_sprintf] ; [] |1356| 
        MOVL      XAR0,#44              ; [CPU_] |1356| 
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1358| 
	.dwpsn	file "../Source/prod.c",line 1356,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1356| 
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1358| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1358| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1358| 
        ; call occurs [#_scia_getparam] ; [] |1358| 
        MOVL      XAR0,#86              ; [CPU_] |1358| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1358| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_strtod")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1359,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1359| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1359| 
        MOVB      XAR1,#40              ; [CPU_] |1359| 
        MOVL      XAR0,#86              ; [CPU_] |1359| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1359| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1359| 
	.dwpsn	file "../Source/prod.c",line 1360,column 6,is_stmt,isa 0
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_puts")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1360| 
        ; call occurs [#_scia_puts] ; [] |1360| 
	.dwpsn	file "../Source/prod.c",line 1361,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1361| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1361| 
        ; call occurs [#_scia_puts] ; [] |1361| 
	.dwpsn	file "../Source/prod.c",line 1363,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1363| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1363| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1363| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1363| 
        MOVB      XAR1,#40              ; [CPU_] |1363| 
        MOVL      XAR0,#44              ; [CPU_] |1363| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1363| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1363| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1363| 
        MOVL      XAR4,XAR1             ; [CPU_] |1363| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_sprintf")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1363| 
        ; call occurs [#_sprintf] ; [] |1363| 
        MOVL      XAR4,XAR1             ; [CPU_] |1363| 
	.dwpsn	file "../Source/prod.c",line 1365,column 6,is_stmt,isa 0
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_scia_puts")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1365| 
        ; call occurs [#_scia_puts] ; [] |1365| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1369,column 6,is_stmt,isa 0
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1369| 
        ; call occurs [#_ad7738_setcal] ; [] |1369| 
	.dwpsn	file "../Source/prod.c",line 1372,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1372| 
        ; branch occurs ; [] |1372| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1166,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1166| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1166| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1166| 
        MOV       AL,#1024              ; [CPU_] |1166| 
        MOVL      XAR5,XAR1             ; [CPU_] |1166| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1166| 
        ; call occurs [#_scia_getparam] ; [] |1166| 
        MOVL      XAR4,XAR1             ; [CPU_] |1166| 
	.dwpsn	file "../Source/prod.c",line 1168,column 6,is_stmt,isa 0
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_atol")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1168| 
        ; call occurs [#_atol] ; [] |1168| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1168| 
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1170| 
	.dwpsn	file "../Source/prod.c",line 1168,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1168| 
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1170| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1170| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1170| 
	.dwpsn	file "../Source/prod.c",line 1173,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1173| 
        ; branch occurs ; [] |1173| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1248,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1248| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1248| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1249| 
        MOVL      XAR0,#44              ; [CPU_] |1249| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1249| 
        MOV       *-SP[3],AL            ; [CPU_] |1249| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1249| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1249| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1249| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_sprintf")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1249| 
        ; call occurs [#_sprintf] ; [] |1249| 
        MOVL      XAR0,#44              ; [CPU_] |1249| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 7,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_scia_puts")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1250| 
        ; call occurs [#_scia_puts] ; [] |1250| 
        MOV       AL,*-SP[47]           ; [CPU_] |1250| 
	.dwpsn	file "../Source/prod.c",line 1251,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1251| 
        B         $C$L340,GEQ           ; [CPU_] |1251| 
        ; branchcc occurs ; [] |1251| 
	.dwpsn	file "../Source/prod.c",line 1252,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1252| 
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_puts")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1252| 
        ; call occurs [#_scia_puts] ; [] |1252| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1248,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1248| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1248| 
        B         $C$L339,LT            ; [CPU_] |1248| 
        ; branchcc occurs ; [] |1248| 
	.dwpsn	file "../Source/prod.c",line 1255,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1255| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_scia_puts")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1255| 
        ; call occurs [#_scia_puts] ; [] |1255| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1256,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1256| 
        MOVB      XAR0,#34              ; [CPU_] |1256| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1256| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1256| 
        MOV       *-SP[3],AL            ; [CPU_] |1256| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1256| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1256| 
        MOVL      XAR0,#72              ; [CPU_] |1256| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1256| 
        ADDL      ACC,XAR6              ; [CPU_] |1256| 
        MOVL      XAR4,ACC              ; [CPU_] |1256| 
        MOVL      XAR0,#44              ; [CPU_] |1256| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1256| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1256| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1256| 
        MOVL      XAR4,XAR1             ; [CPU_] |1256| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_sprintf")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1256| 
        ; call occurs [#_sprintf] ; [] |1256| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1258| 
	.dwpsn	file "../Source/prod.c",line 1256,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1256| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1258| 
        MOV       AL,#1024              ; [CPU_] |1258| 
        MOVL      XAR5,XAR1             ; [CPU_] |1258| 
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1258| 
        ; call occurs [#_scia_getparam] ; [] |1258| 
        MOV       *-SP[47],AL           ; [CPU_] |1258| 
        MOVL      XAR4,XAR1             ; [CPU_] |1258| 
	.dwpsn	file "../Source/prod.c",line 1259,column 6,is_stmt,isa 0
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1259| 
        ; call occurs [#_scia_puts] ; [] |1259| 
	.dwpsn	file "../Source/prod.c",line 1260,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1260| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1260| 
        ; call occurs [#_scia_puts] ; [] |1260| 
        MOV       AL,*-SP[47]           ; [CPU_] |1260| 
	.dwpsn	file "../Source/prod.c",line 1261,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1261| 
        ; branchcc occurs ; [] |1261| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1265,column 6,is_stmt,isa 0
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_atoi")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1265| 
        ; call occurs [#_atoi] ; [] |1265| 
        CMPB      AL,#3                 ; [CPU_] |1265| 
        B         $C$L342,HI            ; [CPU_] |1265| 
        ; branchcc occurs ; [] |1265| 
	.dwpsn	file "../Source/prod.c",line 1271,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1271| 
        MOVB      XAR1,#34              ; [CPU_] |1271| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1271| 
	.dwpsn	file "../Source/prod.c",line 1272,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1272| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1272| 
	.dwpsn	file "../Source/prod.c",line 1271,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1271| 
	.dwpsn	file "../Source/prod.c",line 1272,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1272| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1272| 
        MOVL      XAR0,#72              ; [CPU_] |1272| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1272| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1272| 
        MOVL      XAR4,ACC              ; [CPU_] |1272| 
        MOVL      XAR0,#44              ; [CPU_] |1272| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1272| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1272| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1272| 
        MOVL      XAR4,XAR1             ; [CPU_] |1272| 
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_sprintf")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1272| 
        ; call occurs [#_sprintf] ; [] |1272| 
        MOVL      XAR4,XAR1             ; [CPU_] |1272| 
	.dwpsn	file "../Source/prod.c",line 1275,column 6,is_stmt,isa 0
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_scia_puts")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1275| 
        ; call occurs [#_scia_puts] ; [] |1275| 
	.dwpsn	file "../Source/prod.c",line 1276,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1276| 
	.dwpsn	file "../Source/prod.c",line 1279,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1279| 
        ; branch occurs ; [] |1279| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1267,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1267| 
	.dwpsn	file "../Source/prod.c",line 1269,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1269| 
        ; branch occurs ; [] |1269| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1262,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1262| 
	.dwpsn	file "../Source/prod.c",line 1263,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1263| 
        ; branch occurs ; [] |1263| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1329,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1329| 
        MOVL      XAR0,#44              ; [CPU_] |1329| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1329| 
        MOV       *-SP[3],#4096         ; [CPU_] |1329| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1329| 
        MOVL      XAR4,XAR1             ; [CPU_] |1329| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_sprintf")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1329| 
        ; call occurs [#_sprintf] ; [] |1329| 
	.dwpsn	file "../Source/prod.c",line 1331,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1331| 
	.dwpsn	file "../Source/prod.c",line 1329,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1329| 
	.dwpsn	file "../Source/prod.c",line 1331,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1331| 
        MOV       AL,#1024              ; [CPU_] |1331| 
        MOVL      XAR5,XAR1             ; [CPU_] |1331| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1331| 
        ; call occurs [#_scia_getparam] ; [] |1331| 
	.dwpsn	file "../Source/prod.c",line 1332,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1332| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_atoi")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1332| 
        ; call occurs [#_atoi] ; [] |1332| 
        MOV       *-SP[47],AL           ; [CPU_] |1332| 
	.dwpsn	file "../Source/prod.c",line 1333,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1333| 
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1333| 
        ; call occurs [#_scia_puts] ; [] |1333| 
        MOV       AL,*-SP[47]           ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1335,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1335| 
        ; branchcc occurs ; [] |1335| 
        CMP       AL,#4096              ; [CPU_] |1335| 
        B         $C$L346,GT            ; [CPU_] |1335| 
        ; branchcc occurs ; [] |1335| 
	.dwpsn	file "../Source/prod.c",line 1340,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1340| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1340| 
        ; call occurs [#_scia_puts] ; [] |1340| 
	.dwpsn	file "../Source/prod.c",line 1342,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1342| 
        MOVL      XAR0,#44              ; [CPU_] |1342| 
        MOV       AL,*-SP[47]           ; [CPU_] |1342| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1342| 
        MOV       *-SP[3],AL            ; [CPU_] |1342| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1342| 
        MOVL      XAR4,XAR1             ; [CPU_] |1342| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_sprintf")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1342| 
        ; call occurs [#_sprintf] ; [] |1342| 
        MOVL      XAR4,XAR1             ; [CPU_] |1342| 
	.dwpsn	file "../Source/prod.c",line 1344,column 6,is_stmt,isa 0
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_puts")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1344| 
        ; call occurs [#_scia_puts] ; [] |1344| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1349,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1349| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1349| 
        MOV       AL,*-SP[47]           ; [CPU_] |1349| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1349| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1350,column 6,is_stmt,isa 0
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_maf_rst")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1350| 
        ; call occurs [#_maf_rst] ; [] |1350| 
	.dwpsn	file "../Source/prod.c",line 1352,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1352| 
        ; branch occurs ; [] |1352| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1337,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1337| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_puts")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1337| 
        ; call occurs [#_scia_puts] ; [] |1337| 
	.dwpsn	file "../Source/prod.c",line 1328,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1328| 
        ; branch occurs ; [] |1328| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1200,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1200| 
        MOVL      XAR0,#44              ; [CPU_] |1200| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1200| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1200| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1200| 
        MOVL      XAR4,XAR1             ; [CPU_] |1200| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_sprintf")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1200| 
        ; call occurs [#_sprintf] ; [] |1200| 
	.dwpsn	file "../Source/prod.c",line 1201,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1201| 
	.dwpsn	file "../Source/prod.c",line 1200,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1200| 
	.dwpsn	file "../Source/prod.c",line 1201,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1201| 
        MOV       AL,#1024              ; [CPU_] |1201| 
        MOVL      XAR5,XAR1             ; [CPU_] |1201| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1201| 
        ; call occurs [#_scia_getparam] ; [] |1201| 
	.dwpsn	file "../Source/prod.c",line 1202,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1202| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_atoi")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1202| 
        ; call occurs [#_atoi] ; [] |1202| 
        MOV       *-SP[58],AL           ; [CPU_] |1202| 
	.dwpsn	file "../Source/prod.c",line 1203,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1203| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_scia_puts")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1203| 
        ; call occurs [#_scia_puts] ; [] |1203| 
        MOV       AL,*-SP[58]           ; [CPU_] |1203| 
	.dwpsn	file "../Source/prod.c",line 1205,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1205| 
        CMPB      AL,#4                 ; [CPU_] |1205| 
        B         $C$L350,HIS           ; [CPU_] |1205| 
        ; branchcc occurs ; [] |1205| 
	.dwpsn	file "../Source/prod.c",line 1209,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1209| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_scia_puts")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1209| 
        ; call occurs [#_scia_puts] ; [] |1209| 
	.dwpsn	file "../Source/prod.c",line 1210,column 6,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1210| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1215,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1215| 
        MOVL      XAR0,#44              ; [CPU_] |1215| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1215| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1215| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1215| 
        MOVL      XAR4,XAR1             ; [CPU_] |1215| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_sprintf")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1215| 
        ; call occurs [#_sprintf] ; [] |1215| 
	.dwpsn	file "../Source/prod.c",line 1216,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1216| 
	.dwpsn	file "../Source/prod.c",line 1215,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1215| 
	.dwpsn	file "../Source/prod.c",line 1216,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1216| 
        MOV       AL,#1024              ; [CPU_] |1216| 
        MOVL      XAR5,XAR1             ; [CPU_] |1216| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1216| 
        ; call occurs [#_scia_getparam] ; [] |1216| 
	.dwpsn	file "../Source/prod.c",line 1217,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1217| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_atoi")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1217| 
        ; call occurs [#_atoi] ; [] |1217| 
        MOV       *-SP[57],AL           ; [CPU_] |1217| 
	.dwpsn	file "../Source/prod.c",line 1218,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1218| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_scia_puts")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1218| 
        ; call occurs [#_scia_puts] ; [] |1218| 
        MOV       AL,*-SP[57]           ; [CPU_] |1218| 
	.dwpsn	file "../Source/prod.c",line 1222,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1222| 
        CMPB      AL,#20                ; [CPU_] |1222| 
        B         $C$L349,HIS           ; [CPU_] |1222| 
        ; branchcc occurs ; [] |1222| 
	.dwpsn	file "../Source/prod.c",line 1226,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1226| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_scia_puts")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1226| 
        ; call occurs [#_scia_puts] ; [] |1226| 
	.dwpsn	file "../Source/prod.c",line 1229,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1229| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1229| 
        MOVL      XAR0,#44              ; [CPU_] |1229| 
        MOV       AH,*-SP[57]           ; [CPU_] |1229| 
        ADD       AL,*-SP[58]           ; [CPU_] |1229| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1229| 
        MOV       *-SP[3],AL            ; [CPU_] |1229| 
        MOV       *-SP[4],AH            ; [CPU_] |1229| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1229| 
        DEC       *-SP[57]              ; [CPU_] |1229| 
        MOVL      XAR4,XAR1             ; [CPU_] |1229| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_sprintf")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1229| 
        ; call occurs [#_sprintf] ; [] |1229| 
        MOVL      XAR4,XAR1             ; [CPU_] |1229| 
	.dwpsn	file "../Source/prod.c",line 1231,column 6,is_stmt,isa 0
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_puts")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1231| 
        ; call occurs [#_scia_puts] ; [] |1231| 
        MOV       AL,*-SP[57]           ; [CPU_] |1231| 
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_print_sensor")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1232| 
        ; call occurs [#_print_sensor] ; [] |1232| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1236,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1236| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1236| 
        MOVB      AL,#10                ; [CPU_] |1236| 
        MOV       T,*-SP[58]            ; [CPU_] |1236| 
        MPYU      ACC,T,AL              ; [CPU_] |1236| 
        ADDL      ACC,XAR6              ; [CPU_] |1236| 
        MOVL      XAR4,ACC              ; [CPU_] |1236| 
        MOVB      XAR0,#42              ; [CPU_] |1236| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |1236| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1236| 
	.dwpsn	file "../Source/prod.c",line 1237,column 6,is_stmt,isa 0
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1237| 
        ; call occurs [#_ad7738_setcal] ; [] |1237| 
        MOVL      XAR0,#78              ; [CPU_] |1237| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1237| 
	.dwpsn	file "../Source/prod.c",line 1239,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1239| 
        MOVL      XAR1,ACC              ; [CPU_] |1239| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1239| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1239| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1239| 
	.dwpsn	file "../Source/prod.c",line 1240,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1240| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1240| 
        ; call occurs [#_ad7738_resetvall] ; [] |1240| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1244,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1244| 
        ; branch occurs ; [] |1244| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1224,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1224| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_puts")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1224| 
        ; call occurs [#_scia_puts] ; [] |1224| 
	.dwpsn	file "../Source/prod.c",line 1214,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1214| 
        ; branch occurs ; [] |1214| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1207,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1207| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_scia_puts")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1207| 
        ; call occurs [#_scia_puts] ; [] |1207| 
	.dwpsn	file "../Source/prod.c",line 1199,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1199| 
        ; branch occurs ; [] |1199| 
$C$L351:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2060,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2060| 
        B         $C$L625,LO            ; [CPU_] |2060| 
        ; branchcc occurs ; [] |2060| 
	.dwpsn	file "../Source/prod.c",line 2065,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2065| 
        CMPB      AL,#78                ; [CPU_] |2065| 
        B         $C$L352,EQ            ; [CPU_] |2065| 
        ; branchcc occurs ; [] |2065| 
        CMPB      AL,#85                ; [CPU_] |2065| 
        B         $C$L352,EQ            ; [CPU_] |2065| 
        ; branchcc occurs ; [] |2065| 
        CMPB      AL,#66                ; [CPU_] |2065| 
        B         $C$L352,EQ            ; [CPU_] |2065| 
        ; branchcc occurs ; [] |2065| 
        CMPB      AL,#68                ; [CPU_] |2065| 
        B         $C$L625,NEQ           ; [CPU_] |2065| 
        ; branchcc occurs ; [] |2065| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2068,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2068| 
	.dwpsn	file "../Source/prod.c",line 2089,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2089| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2091,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2091| 
        MOVL      XAR0,#44              ; [CPU_] |2091| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2091| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2091| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2091| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_sprintf")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2091| 
        ; call occurs [#_sprintf] ; [] |2091| 
        MOVL      XAR0,#44              ; [CPU_] |2091| 
	.dwpsn	file "../Source/prod.c",line 2092,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2092| 
	.dwpsn	file "../Source/prod.c",line 2091,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2091| 
	.dwpsn	file "../Source/prod.c",line 2092,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2092| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2092| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2092| 
        ; call occurs [#_scia_getparam] ; [] |2092| 
        MOVL      XAR0,#86              ; [CPU_] |2092| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2092| 
	.dwpsn	file "../Source/prod.c",line 2093,column 6,is_stmt,isa 0
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_atoi")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2093| 
        ; call occurs [#_atoi] ; [] |2093| 
        MOVL      XAR0,#86              ; [CPU_] |2093| 
        MOV       *-SP[57],AL           ; [CPU_] |2093| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2093| 
	.dwpsn	file "../Source/prod.c",line 2094,column 6,is_stmt,isa 0
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_puts")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2094| 
        ; call occurs [#_scia_puts] ; [] |2094| 
        MOV       AL,*-SP[57]           ; [CPU_] |2094| 
	.dwpsn	file "../Source/prod.c",line 2098,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2098| 
        CMPB      AL,#20                ; [CPU_] |2098| 
        B         $C$L413,HIS           ; [CPU_] |2098| 
        ; branchcc occurs ; [] |2098| 
	.dwpsn	file "../Source/prod.c",line 2102,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2102| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2102| 
        ; call occurs [#_scia_puts] ; [] |2102| 
	.dwpsn	file "../Source/prod.c",line 2103,column 5,is_stmt,isa 0
        DEC       *-SP[57]              ; [CPU_] |2103| 
	.dwpsn	file "../Source/prod.c",line 2105,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2105| 
        CMPB      AL,#66                ; [CPU_] |2105| 
        B         $C$L408,EQ            ; [CPU_] |2105| 
        ; branchcc occurs ; [] |2105| 
        CMPB      AL,#68                ; [CPU_] |2105| 
        B         $C$L407,EQ            ; [CPU_] |2105| 
        ; branchcc occurs ; [] |2105| 
        CMPB      AL,#78                ; [CPU_] |2105| 
        B         $C$L403,EQ            ; [CPU_] |2105| 
        ; branchcc occurs ; [] |2105| 
        CMPB      AL,#85                ; [CPU_] |2105| 
        B         $C$L625,NEQ           ; [CPU_] |2105| 
        ; branchcc occurs ; [] |2105| 
	.dwpsn	file "../Source/prod.c",line 2134,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2134| 
	.dwpsn	file "../Source/prod.c",line 2132,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2132| 
        MOV       AH,#0                 ; [CPU_] |2132| 
	.dwpsn	file "../Source/prod.c",line 2134,column 6,is_stmt,isa 0
        MOV       T,*-SP[57]            ; [CPU_] |2134| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2134| 
	.dwpsn	file "../Source/prod.c",line 2132,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2132| 
	.dwpsn	file "../Source/prod.c",line 2134,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2134| 
        MPYU      ACC,T,AL              ; [CPU_] |2134| 
        ADDL      ACC,XAR6              ; [CPU_] |2134| 
        ADDB      ACC,#124              ; [CPU_] |2134| 
        MOVL      XAR1,ACC              ; [CPU_] |2134| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2134| 
        CMPB      AL,#35                ; [CPU_] |2134| 
        B         $C$L354,GT            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        CMPB      AL,#35                ; [CPU_] |2134| 
        B         $C$L370,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        CMPB      AL,#16                ; [CPU_] |2134| 
        B         $C$L390,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        CMPB      AL,#17                ; [CPU_] |2134| 
        B         $C$L386,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        CMPB      AL,#34                ; [CPU_] |2134| 
        B         $C$L377,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        B         $C$L394,UNC           ; [CPU_] |2134| 
        ; branch occurs ; [] |2134| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2134| 
        B         $C$L363,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        CMPB      AL,#53                ; [CPU_] |2134| 
        B         $C$L359,EQ            ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
        CMPB      AL,#70                ; [CPU_] |2134| 
        B         $C$L394,NEQ           ; [CPU_] |2134| 
        ; branchcc occurs ; [] |2134| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2323,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2323| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2323| 
        MOV       AL,#1024              ; [CPU_] |2323| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2323| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2323| 
        ; call occurs [#_scia_getparam] ; [] |2323| 
        MOVL      XAR0,#86              ; [CPU_] |2323| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2323| 
	.dwpsn	file "../Source/prod.c",line 2325,column 8,is_stmt,isa 0
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_atoi")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2325| 
        ; call occurs [#_atoi] ; [] |2325| 
        MOVL      XAR0,#86              ; [CPU_] |2325| 
        MOV       *-SP[47],AL           ; [CPU_] |2325| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2325| 
	.dwpsn	file "../Source/prod.c",line 2326,column 8,is_stmt,isa 0
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_puts")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2326| 
        ; call occurs [#_scia_puts] ; [] |2326| 
        MOV       AL,*-SP[47]           ; [CPU_] |2326| 
	.dwpsn	file "../Source/prod.c",line 2327,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2327| 
        B         $C$L356,EQ            ; [CPU_] |2327| 
        ; branchcc occurs ; [] |2327| 
        CMPB      AL,#7                 ; [CPU_] |2327| 
        B         $C$L357,EQ            ; [CPU_] |2327| 
        ; branchcc occurs ; [] |2327| 
	.dwpsn	file "../Source/prod.c",line 2328,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2328| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_puts")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2328| 
        ; call occurs [#_scia_puts] ; [] |2328| 
$C$L356:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2330,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2330| 
        B         $C$L357,EQ            ; [CPU_] |2330| 
        ; branchcc occurs ; [] |2330| 
        CMPB      AL,#7                 ; [CPU_] |2330| 
        B         $C$L355,NEQ           ; [CPU_] |2330| 
        ; branchcc occurs ; [] |2330| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2331,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2331| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_puts")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2331| 
        ; call occurs [#_scia_puts] ; [] |2331| 
        MOV       AL,*-SP[47]           ; [CPU_] |2331| 
	.dwpsn	file "../Source/prod.c",line 2333,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2333| 
        B         $C$L358,EQ            ; [CPU_] |2333| 
        ; branchcc occurs ; [] |2333| 
        CMPB      AL,#7                 ; [CPU_] |2333| 
        B         $C$L393,EQ            ; [CPU_] |2333| 
        ; branchcc occurs ; [] |2333| 
        B         $C$L394,UNC           ; [CPU_] |2333| 
        ; branch occurs ; [] |2333| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2335,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2335| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2335| 
        MOV       AL,*-SP[47]           ; [CPU_] |2335| 
	.dwpsn	file "../Source/prod.c",line 2336,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2336| 
	.dwpsn	file "../Source/prod.c",line 2337,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2337| 
        ; branch occurs ; [] |2337| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2298,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2298| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2298| 
        MOV       AL,#1024              ; [CPU_] |2298| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2298| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2298| 
        ; call occurs [#_scia_getparam] ; [] |2298| 
        MOVL      XAR0,#86              ; [CPU_] |2298| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2298| 
	.dwpsn	file "../Source/prod.c",line 2300,column 8,is_stmt,isa 0
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_atoi")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2300| 
        ; call occurs [#_atoi] ; [] |2300| 
        MOVL      XAR0,#86              ; [CPU_] |2300| 
        MOV       *-SP[47],AL           ; [CPU_] |2300| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2300| 
	.dwpsn	file "../Source/prod.c",line 2301,column 8,is_stmt,isa 0
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_puts")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2301| 
        ; call occurs [#_scia_puts] ; [] |2301| 
        MOV       AL,*-SP[47]           ; [CPU_] |2301| 
	.dwpsn	file "../Source/prod.c",line 2302,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2302| 
        B         $C$L360,EQ            ; [CPU_] |2302| 
        ; branchcc occurs ; [] |2302| 
        CMPB      AL,#7                 ; [CPU_] |2302| 
        B         $C$L361,EQ            ; [CPU_] |2302| 
        ; branchcc occurs ; [] |2302| 
	.dwpsn	file "../Source/prod.c",line 2303,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2303| 
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_scia_puts")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2303| 
        ; call occurs [#_scia_puts] ; [] |2303| 
$C$L360:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2305,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2305| 
        B         $C$L361,EQ            ; [CPU_] |2305| 
        ; branchcc occurs ; [] |2305| 
        CMPB      AL,#7                 ; [CPU_] |2305| 
        B         $C$L359,NEQ           ; [CPU_] |2305| 
        ; branchcc occurs ; [] |2305| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2306,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2306| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_puts")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2306| 
        ; call occurs [#_scia_puts] ; [] |2306| 
        MOV       AL,*-SP[47]           ; [CPU_] |2306| 
	.dwpsn	file "../Source/prod.c",line 2308,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2308| 
        B         $C$L362,EQ            ; [CPU_] |2308| 
        ; branchcc occurs ; [] |2308| 
        CMPB      AL,#7                 ; [CPU_] |2308| 
        B         $C$L393,EQ            ; [CPU_] |2308| 
        ; branchcc occurs ; [] |2308| 
        B         $C$L394,UNC           ; [CPU_] |2308| 
        ; branch occurs ; [] |2308| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2310,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2310| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2310| 
        MOV       AL,*-SP[47]           ; [CPU_] |2310| 
	.dwpsn	file "../Source/prod.c",line 2311,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2311| 
	.dwpsn	file "../Source/prod.c",line 2312,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2312| 
        ; branch occurs ; [] |2312| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2264,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2264| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2264| 
        MOV       AL,#1024              ; [CPU_] |2264| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2264| 
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2264| 
        ; call occurs [#_scia_getparam] ; [] |2264| 
        MOVL      XAR0,#86              ; [CPU_] |2264| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2264| 
	.dwpsn	file "../Source/prod.c",line 2267,column 8,is_stmt,isa 0
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_atoi")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2267| 
        ; call occurs [#_atoi] ; [] |2267| 
        MOVL      XAR0,#86              ; [CPU_] |2267| 
        MOV       *-SP[47],AL           ; [CPU_] |2267| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2267| 
	.dwpsn	file "../Source/prod.c",line 2268,column 8,is_stmt,isa 0
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_puts")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2268| 
        ; call occurs [#_scia_puts] ; [] |2268| 
        MOV       AL,*-SP[47]           ; [CPU_] |2268| 
	.dwpsn	file "../Source/prod.c",line 2269,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2269| 
        B         $C$L364,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
        CMPB      AL,#3                 ; [CPU_] |2269| 
        B         $C$L365,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
        CMPB      AL,#4                 ; [CPU_] |2269| 
        B         $C$L366,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
        CMPB      AL,#7                 ; [CPU_] |2269| 
        B         $C$L367,EQ            ; [CPU_] |2269| 
        ; branchcc occurs ; [] |2269| 
	.dwpsn	file "../Source/prod.c",line 2270,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2270| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_scia_puts")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2270| 
        ; call occurs [#_scia_puts] ; [] |2270| 
$C$L364:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2272,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2272| 
        B         $C$L367,EQ            ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2272| 
        B         $C$L367,EQ            ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2272| 
        B         $C$L367,EQ            ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
        CMPB      AL,#7                 ; [CPU_] |2272| 
        B         $C$L363,NEQ           ; [CPU_] |2272| 
        ; branchcc occurs ; [] |2272| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2273,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2273| 
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_puts")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2273| 
        ; call occurs [#_scia_puts] ; [] |2273| 
        MOV       AL,*-SP[47]           ; [CPU_] |2273| 
	.dwpsn	file "../Source/prod.c",line 2275,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2275| 
        B         $C$L369,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        CMPB      AL,#3                 ; [CPU_] |2275| 
        B         $C$L368,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        CMPB      AL,#4                 ; [CPU_] |2275| 
        B         $C$L385,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        CMPB      AL,#7                 ; [CPU_] |2275| 
        B         $C$L393,EQ            ; [CPU_] |2275| 
        ; branchcc occurs ; [] |2275| 
        B         $C$L394,UNC           ; [CPU_] |2275| 
        ; branch occurs ; [] |2275| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2281,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2281| 
        MOV       AH,#15820             ; [CPU_] |2281| 
	.dwpsn	file "../Source/prod.c",line 2283,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2283| 
        ; branch occurs ; [] |2283| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2277,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2277| 
        MOV       AH,#15649             ; [CPU_] |2277| 
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2279| 
        ; branch occurs ; [] |2279| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2230,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2230| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2230| 
        MOV       AL,#1024              ; [CPU_] |2230| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2230| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2230| 
        ; call occurs [#_scia_getparam] ; [] |2230| 
        MOVL      XAR0,#86              ; [CPU_] |2230| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2230| 
	.dwpsn	file "../Source/prod.c",line 2233,column 8,is_stmt,isa 0
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_atoi")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2233| 
        ; call occurs [#_atoi] ; [] |2233| 
        MOVL      XAR0,#86              ; [CPU_] |2233| 
        MOV       *-SP[47],AL           ; [CPU_] |2233| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2233| 
	.dwpsn	file "../Source/prod.c",line 2234,column 8,is_stmt,isa 0
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2234| 
        ; call occurs [#_scia_puts] ; [] |2234| 
        MOV       AL,*-SP[47]           ; [CPU_] |2234| 
	.dwpsn	file "../Source/prod.c",line 2235,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2235| 
        B         $C$L371,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        CMPB      AL,#3                 ; [CPU_] |2235| 
        B         $C$L372,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        CMPB      AL,#4                 ; [CPU_] |2235| 
        B         $C$L373,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
        CMPB      AL,#7                 ; [CPU_] |2235| 
        B         $C$L374,EQ            ; [CPU_] |2235| 
        ; branchcc occurs ; [] |2235| 
	.dwpsn	file "../Source/prod.c",line 2236,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2236| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_puts")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2236| 
        ; call occurs [#_scia_puts] ; [] |2236| 
$C$L371:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2238,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2238| 
        B         $C$L374,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2238| 
        B         $C$L374,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2238| 
        B         $C$L374,EQ            ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
        CMPB      AL,#7                 ; [CPU_] |2238| 
        B         $C$L370,NEQ           ; [CPU_] |2238| 
        ; branchcc occurs ; [] |2238| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2239,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2239| 
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2239| 
        ; call occurs [#_scia_puts] ; [] |2239| 
        MOV       AL,*-SP[47]           ; [CPU_] |2239| 
	.dwpsn	file "../Source/prod.c",line 2241,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2241| 
        B         $C$L376,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#3                 ; [CPU_] |2241| 
        B         $C$L385,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#4                 ; [CPU_] |2241| 
        B         $C$L375,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        CMPB      AL,#7                 ; [CPU_] |2241| 
        B         $C$L393,EQ            ; [CPU_] |2241| 
        ; branchcc occurs ; [] |2241| 
        B         $C$L394,UNC           ; [CPU_] |2241| 
        ; branch occurs ; [] |2241| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2251,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2251| 
        MOV       AH,#16672             ; [CPU_] |2251| 
	.dwpsn	file "../Source/prod.c",line 2253,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2253| 
        ; branch occurs ; [] |2253| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2243,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2243| 
        MOV       AH,#16073             ; [CPU_] |2243| 
	.dwpsn	file "../Source/prod.c",line 2245,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2245| 
        ; branch occurs ; [] |2245| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2196,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2196| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2196| 
        MOV       AL,#1024              ; [CPU_] |2196| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2196| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2196| 
        ; call occurs [#_scia_getparam] ; [] |2196| 
        MOVL      XAR0,#86              ; [CPU_] |2196| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2196| 
	.dwpsn	file "../Source/prod.c",line 2199,column 8,is_stmt,isa 0
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_atoi")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2199| 
        ; call occurs [#_atoi] ; [] |2199| 
        MOVL      XAR0,#86              ; [CPU_] |2199| 
        MOV       *-SP[47],AL           ; [CPU_] |2199| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2199| 
	.dwpsn	file "../Source/prod.c",line 2200,column 8,is_stmt,isa 0
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_puts")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2200| 
        ; call occurs [#_scia_puts] ; [] |2200| 
        MOV       AL,*-SP[47]           ; [CPU_] |2200| 
	.dwpsn	file "../Source/prod.c",line 2201,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2201| 
        B         $C$L378,EQ            ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
        CMPB      AL,#3                 ; [CPU_] |2201| 
        B         $C$L379,EQ            ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
        CMPB      AL,#4                 ; [CPU_] |2201| 
        B         $C$L380,EQ            ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
        CMPB      AL,#7                 ; [CPU_] |2201| 
        B         $C$L381,EQ            ; [CPU_] |2201| 
        ; branchcc occurs ; [] |2201| 
	.dwpsn	file "../Source/prod.c",line 2202,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2202| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2202| 
        ; call occurs [#_scia_puts] ; [] |2202| 
$C$L378:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2204,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2204| 
        B         $C$L381,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2204| 
        B         $C$L381,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2204| 
        B         $C$L381,EQ            ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
        CMPB      AL,#7                 ; [CPU_] |2204| 
        B         $C$L377,NEQ           ; [CPU_] |2204| 
        ; branchcc occurs ; [] |2204| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2205,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2205| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_puts")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2205| 
        ; call occurs [#_scia_puts] ; [] |2205| 
        MOV       AL,*-SP[47]           ; [CPU_] |2205| 
	.dwpsn	file "../Source/prod.c",line 2207,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2207| 
        B         $C$L385,EQ            ; [CPU_] |2207| 
        ; branchcc occurs ; [] |2207| 
        CMPB      AL,#3                 ; [CPU_] |2207| 
        B         $C$L384,EQ            ; [CPU_] |2207| 
        ; branchcc occurs ; [] |2207| 
        CMPB      AL,#4                 ; [CPU_] |2207| 
        B         $C$L382,EQ            ; [CPU_] |2207| 
        ; branchcc occurs ; [] |2207| 
        CMPB      AL,#7                 ; [CPU_] |2207| 
        B         $C$L393,EQ            ; [CPU_] |2207| 
        ; branchcc occurs ; [] |2207| 
        B         $C$L394,UNC           ; [CPU_] |2207| 
        ; branch occurs ; [] |2207| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2217,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2217| 
        MOV       AH,#16843             ; [CPU_] |2217| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2217| 
        MOV       AL,*-SP[47]           ; [CPU_] |2217| 
	.dwpsn	file "../Source/prod.c",line 2218,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2218| 
	.dwpsn	file "../Source/prod.c",line 2219,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2219| 
        ; branch occurs ; [] |2219| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2213,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2213| 
        MOV       AH,#16418             ; [CPU_] |2213| 
	.dwpsn	file "../Source/prod.c",line 2215,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2215| 
        ; branch occurs ; [] |2215| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2209,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2209| 
	.dwpsn	file "../Source/prod.c",line 2211,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2211| 
        ; branch occurs ; [] |2211| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2167,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2167| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2167| 
        MOV       AL,#1024              ; [CPU_] |2167| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2167| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2167| 
        ; call occurs [#_scia_getparam] ; [] |2167| 
        MOVL      XAR0,#86              ; [CPU_] |2167| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2167| 
	.dwpsn	file "../Source/prod.c",line 2169,column 8,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_atoi")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2169| 
        ; call occurs [#_atoi] ; [] |2169| 
        MOVL      XAR0,#86              ; [CPU_] |2169| 
        MOV       *-SP[47],AL           ; [CPU_] |2169| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2169| 
	.dwpsn	file "../Source/prod.c",line 2170,column 8,is_stmt,isa 0
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_puts")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2170| 
        ; call occurs [#_scia_puts] ; [] |2170| 
        MOV       AL,*-SP[47]           ; [CPU_] |2170| 
	.dwpsn	file "../Source/prod.c",line 2171,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2171| 
        B         $C$L388,EQ            ; [CPU_] |2171| 
        ; branchcc occurs ; [] |2171| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2171| 
        B         $C$L387,EQ            ; [CPU_] |2171| 
        ; branchcc occurs ; [] |2171| 
	.dwpsn	file "../Source/prod.c",line 2172,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2172| 
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2172| 
        ; call occurs [#_scia_puts] ; [] |2172| 
$C$L387:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2174,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2174| 
        B         $C$L388,EQ            ; [CPU_] |2174| 
        ; branchcc occurs ; [] |2174| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2174| 
        B         $C$L386,NEQ           ; [CPU_] |2174| 
        ; branchcc occurs ; [] |2174| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2175,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2175| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_puts")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2175| 
        ; call occurs [#_scia_puts] ; [] |2175| 
        MOV       AL,*-SP[47]           ; [CPU_] |2175| 
	.dwpsn	file "../Source/prod.c",line 2177,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2177| 
        ; branchcc occurs ; [] |2177| 
        CMPB      AL,#1                 ; [CPU_] |2177| 
        B         $C$L396,EQ            ; [CPU_] |2177| 
        ; branchcc occurs ; [] |2177| 
        CMPB      AL,#7                 ; [CPU_] |2177| 
        B         $C$L393,EQ            ; [CPU_] |2177| 
        ; branchcc occurs ; [] |2177| 
        B         $C$L394,UNC           ; [CPU_] |2177| 
        ; branch occurs ; [] |2177| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2179,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2179| 
        MOV       AH,#16397             ; [CPU_] |2179| 
	.dwpsn	file "../Source/prod.c",line 2181,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2181| 
        ; branch occurs ; [] |2181| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2138,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2138| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2138| 
        MOV       AL,#1024              ; [CPU_] |2138| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2138| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2138| 
        ; call occurs [#_scia_getparam] ; [] |2138| 
        MOVL      XAR0,#86              ; [CPU_] |2138| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2138| 
	.dwpsn	file "../Source/prod.c",line 2140,column 8,is_stmt,isa 0
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_atoi")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2140| 
        ; call occurs [#_atoi] ; [] |2140| 
        MOVL      XAR0,#86              ; [CPU_] |2140| 
        MOV       *-SP[47],AL           ; [CPU_] |2140| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2140| 
	.dwpsn	file "../Source/prod.c",line 2141,column 8,is_stmt,isa 0
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_puts")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2141| 
        ; call occurs [#_scia_puts] ; [] |2141| 
        MOV       AL,*-SP[47]           ; [CPU_] |2141| 
	.dwpsn	file "../Source/prod.c",line 2142,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2142| 
        B         $C$L392,EQ            ; [CPU_] |2142| 
        ; branchcc occurs ; [] |2142| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2142| 
        B         $C$L391,EQ            ; [CPU_] |2142| 
        ; branchcc occurs ; [] |2142| 
	.dwpsn	file "../Source/prod.c",line 2143,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2143| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2143| 
        ; call occurs [#_scia_puts] ; [] |2143| 
$C$L391:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2145,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2145| 
        B         $C$L392,EQ            ; [CPU_] |2145| 
        ; branchcc occurs ; [] |2145| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2145| 
        B         $C$L390,NEQ           ; [CPU_] |2145| 
        ; branchcc occurs ; [] |2145| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2146,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2146| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_puts")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2146| 
        ; call occurs [#_scia_puts] ; [] |2146| 
        MOV       AL,*-SP[47]           ; [CPU_] |2146| 
	.dwpsn	file "../Source/prod.c",line 2148,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2148| 
        ; branchcc occurs ; [] |2148| 
        CMPB      AL,#1                 ; [CPU_] |2148| 
        B         $C$L395,EQ            ; [CPU_] |2148| 
        ; branchcc occurs ; [] |2148| 
        CMPB      AL,#7                 ; [CPU_] |2148| 
        B         $C$L394,NEQ           ; [CPU_] |2148| 
        ; branchcc occurs ; [] |2148| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2158,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2158| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2158| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2158| 
        MOV       AL,#0                 ; [CPU_] |2158| 
        MOV       AH,#17096             ; [CPU_] |2158| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2158| 
        ; call occurs [#FS$$DIV] ; [] |2158| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2158| 
        MOV       AL,*-SP[47]           ; [CPU_] |2158| 
	.dwpsn	file "../Source/prod.c",line 2159,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2159| 
        MOV       *-SP[47],AL           ; [CPU_] |2159| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2349,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2349| 
        MOV       AH,#0                 ; [CPU_] |2349| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2349| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2349| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2349| 
        ; call occurs [#FS$$CMP] ; [] |2349| 
        CMPB      AL,#0                 ; [CPU_] |2349| 
        B         $C$L399,NEQ           ; [CPU_] |2349| 
        ; branchcc occurs ; [] |2349| 
	.dwpsn	file "../Source/prod.c",line 2350,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2350| 
	.dwpsn	file "../Source/prod.c",line 2351,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2351| 
        ; branch occurs ; [] |2351| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2154,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2154| 
        MOV       AH,#16104             ; [CPU_] |2154| 
	.dwpsn	file "../Source/prod.c",line 2156,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2156| 
        ; branch occurs ; [] |2156| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2150,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2150| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2150| 
        MOV       AL,*-SP[47]           ; [CPU_] |2150| 
	.dwpsn	file "../Source/prod.c",line 2151,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2151| 
$C$L398:    
        MOV       *-SP[47],AL           ; [CPU_] |2151| 
$C$L399:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2354,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2354| 
        B         $C$L402,EQ            ; [CPU_] |2354| 
        ; branchcc occurs ; [] |2354| 
	.dwpsn	file "../Source/prod.c",line 2360,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2360| 
	.dwpsn	file "../Source/prod.c",line 2364,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2364| 
	.dwpsn	file "../Source/prod.c",line 2361,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2361| 
	.dwpsn	file "../Source/prod.c",line 2364,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2364| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2361,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2361| 
	.dwpsn	file "../Source/prod.c",line 2364,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2364| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2364| 
        ADD       AL,*-SP[57]           ; [CPU_] |2364| 
        MOV       *-SP[3],AL            ; [CPU_] |2364| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2364| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2364| 
        ANDB      AL,#0x0f              ; [CPU_] |2364| 
        MOV       ACC,AL << 1           ; [CPU_] |2364| 
        ADDL      ACC,XAR6              ; [CPU_] |2364| 
        MOVL      XAR4,ACC              ; [CPU_] |2364| 
        MOVL      XAR0,#44              ; [CPU_] |2364| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2364| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2364| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2364| 
        MOVL      XAR4,XAR1             ; [CPU_] |2364| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_sprintf")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2364| 
        ; call occurs [#_sprintf] ; [] |2364| 
        MOVL      XAR4,XAR1             ; [CPU_] |2364| 
	.dwpsn	file "../Source/prod.c",line 2366,column 6,is_stmt,isa 0
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_puts")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2366| 
        ; call occurs [#_scia_puts] ; [] |2366| 
        MOVL      XAR0,#40              ; [CPU_] |2366| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2366| 
	.dwpsn	file "../Source/prod.c",line 2368,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2368| 
	.dwpsn	file "../Source/prod.c",line 2362,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2362| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2369,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2369| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2369| 
        CMPL      ACC,XAR6              ; [CPU_] |2369| 
        B         $C$L401,NEQ           ; [CPU_] |2369| 
        ; branchcc occurs ; [] |2369| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2370,column 8,is_stmt,isa 0
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_update_units")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2370| 
        ; call occurs [#_update_units] ; [] |2370| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2372,column 8,is_stmt,isa 0
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2372| 
        ; call occurs [#_ad7738_setcal] ; [] |2372| 
        MOVL      XAR0,#78              ; [CPU_] |2372| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2372| 
	.dwpsn	file "../Source/prod.c",line 2373,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2373| 
        MOVL      XAR4,ACC              ; [CPU_] |2373| 
        MOVL      XAR0,#88              ; [CPU_] |2373| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2373| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2373| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2373| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2373| 
        MOVL      XAR0,#88              ; [CPU_] |2373| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2373| 
	.dwpsn	file "../Source/prod.c",line 2374,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2374| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2374| 
        ; call occurs [#_ad7738_resetvall] ; [] |2374| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2368,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2368| 
        ADDB      XAR1,#10              ; [CPU_] |2368| 
        MOV       AL,*-SP[58]           ; [CPU_] |2368| 
        CMPB      AL,#4                 ; [CPU_] |2368| 
        B         $C$L400,LO            ; [CPU_] |2368| 
        ; branchcc occurs ; [] |2368| 
        B         $C$L632,UNC           ; [CPU_] |2368| 
        ; branch occurs ; [] |2368| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2355,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2355| 
	.dwpsn	file "../Source/prod.c",line 2357,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2357| 
        ; branch occurs ; [] |2357| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2111| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2111| 
        MOVL      XAR0,#44              ; [CPU_] |2111| 
        ADD       AL,*-SP[57]           ; [CPU_] |2111| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2111| 
        MOV       *-SP[3],AL            ; [CPU_] |2111| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2111| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2111| 
        MOV       *-SP[47],AL           ; [CPU_] |2111| 
        MOVL      XAR4,XAR1             ; [CPU_] |2111| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_sprintf")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2111| 
        ; call occurs [#_sprintf] ; [] |2111| 
	.dwpsn	file "../Source/prod.c",line 2113,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2113| 
        MOV       AL,#1024              ; [CPU_] |2113| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2113| 
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2111| 
	.dwpsn	file "../Source/prod.c",line 2113,column 6,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2113| 
        ; call occurs [#_scia_getparam] ; [] |2113| 
        MOVZ      AR6,AL                ; [CPU_] |2113| 
        CMPB      AL,#15                ; [CPU_] |2113| 
        B         $C$L404,LOS           ; [CPU_] |2113| 
        ; branchcc occurs ; [] |2113| 
	.dwpsn	file "../Source/prod.c",line 2117,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2117| 
        MOVB      XAR0,#15              ; [CPU_] |2117| 
	.dwpsn	file "../Source/prod.c",line 2116,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2116| 
	.dwpsn	file "../Source/prod.c",line 2117,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2117| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2119,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2119| 
        MOVB      AL,#152               ; [CPU_] |2119| 
        MOV       T,*-SP[57]            ; [CPU_] |2119| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2119| 
        MOVL      XAR0,#86              ; [CPU_] |2119| 
        MPYU      ACC,T,AL              ; [CPU_] |2119| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2119| 
        ADDL      ACC,XAR7              ; [CPU_] |2119| 
        ADDB      ACC,#98               ; [CPU_] |2119| 
        MOVL      XAR1,ACC              ; [CPU_] |2119| 
        MOVL      XAR4,ACC              ; [CPU_] |2119| 
        MOVB      AH,#1                 ; [CPU_] |2119| 
        ADD       AH,AR6                ; [CPU_] |2119| 
        MOVU      ACC,AH                ; [CPU_] |2119| 
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_memcpy")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2119| 
        ; call occurs [#_memcpy] ; [] |2119| 
        MOVL      XAR0,#86              ; [CPU_] |2119| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2119| 
	.dwpsn	file "../Source/prod.c",line 2121,column 6,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_scia_puts")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2121| 
        ; call occurs [#_scia_puts] ; [] |2121| 
	.dwpsn	file "../Source/prod.c",line 2122,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2122| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_scia_puts")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2122| 
        ; call occurs [#_scia_puts] ; [] |2122| 
	.dwpsn	file "../Source/prod.c",line 2125,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2125| 
        MOV       AL,*-SP[47]           ; [CPU_] |2125| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2125| 
        MOV       *-SP[3],AL            ; [CPU_] |2125| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2125| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2125| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2125| 
        MOVL      XAR4,XAR1             ; [CPU_] |2125| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_sprintf")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2125| 
        ; call occurs [#_sprintf] ; [] |2125| 
        MOVL      XAR4,XAR1             ; [CPU_] |2125| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2127,column 6,is_stmt,isa 0
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_scia_puts")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2127| 
        ; call occurs [#_scia_puts] ; [] |2127| 
	.dwpsn	file "../Source/prod.c",line 2128,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2128| 
        ; branch occurs ; [] |2128| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2422| 
        MOVB      AL,#152               ; [CPU_] |2422| 
        MOV       T,*-SP[57]            ; [CPU_] |2422| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2422| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2422| 
        MPYU      ACC,T,AL              ; [CPU_] |2422| 
        MOVB      XAR0,#124             ; [CPU_] |2422| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2422| 
        ADDL      ACC,XAR6              ; [CPU_] |2422| 
        MOVL      XAR1,ACC              ; [CPU_] |2422| 
        MOVB      AL,#1                 ; [CPU_] |2422| 
        ADD       AL,*-SP[57]           ; [CPU_] |2422| 
        MOV       *-SP[47],AL           ; [CPU_] |2422| 
        MOV       *-SP[3],AL            ; [CPU_] |2422| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2422| 
        MOVL      XAR0,#70              ; [CPU_] |2422| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2422| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2422| 
        MOV       ACC,AL << 1           ; [CPU_] |2422| 
        ADDL      ACC,XAR6              ; [CPU_] |2422| 
        MOVL      XAR4,ACC              ; [CPU_] |2422| 
        MOVL      XAR0,#44              ; [CPU_] |2422| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2422| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2422| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2422| 
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_sprintf")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2422| 
        ; call occurs [#_sprintf] ; [] |2422| 
        MOVL      XAR0,#44              ; [CPU_] |2422| 
	.dwpsn	file "../Source/prod.c",line 2424,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2424| 
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2422| 
	.dwpsn	file "../Source/prod.c",line 2424,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2424| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2424| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2424| 
        ; call occurs [#_scia_getparam] ; [] |2424| 
        MOVL      XAR0,#86              ; [CPU_] |2424| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2424,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2424| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_strtod")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2425,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2425| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2425| 
        MOVL      XAR0,#86              ; [CPU_] |2425| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2425| 
	.dwpsn	file "../Source/prod.c",line 2426,column 6,is_stmt,isa 0
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_puts")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2426| 
        ; call occurs [#_scia_puts] ; [] |2426| 
	.dwpsn	file "../Source/prod.c",line 2427,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2427| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_scia_puts")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2427| 
        ; call occurs [#_scia_puts] ; [] |2427| 
	.dwpsn	file "../Source/prod.c",line 2429,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2429| 
        MOVL      XAR0,#44              ; [CPU_] |2429| 
        MOV       AL,*-SP[47]           ; [CPU_] |2429| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2429| 
        MOV       *-SP[3],AL            ; [CPU_] |2429| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2429| 
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_sprintf")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2429| 
        ; call occurs [#_sprintf] ; [] |2429| 
        MOVL      XAR0,#44              ; [CPU_] |2429| 
	.dwpsn	file "../Source/prod.c",line 2430,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2430| 
	.dwpsn	file "../Source/prod.c",line 2429,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2429| 
	.dwpsn	file "../Source/prod.c",line 2430,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2430| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2430| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2430| 
        ; call occurs [#_scia_getparam] ; [] |2430| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_strtod")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2431,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2431| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2431| 
        MOVL      XAR0,#86              ; [CPU_] |2431| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2431| 
	.dwpsn	file "../Source/prod.c",line 2432,column 6,is_stmt,isa 0
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_scia_puts")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2432| 
        ; call occurs [#_scia_puts] ; [] |2432| 
	.dwpsn	file "../Source/prod.c",line 2433,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2433| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_scia_puts")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2433| 
        ; call occurs [#_scia_puts] ; [] |2433| 
	.dwpsn	file "../Source/prod.c",line 2436,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2436| 
        MOVB      XAR0,#228             ; [CPU_] |2436| 
        MOV       AL,*-SP[47]           ; [CPU_] |2436| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2436| 
        MOV       *-SP[3],AL            ; [CPU_] |2436| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2436| 
        MOVB      XAR0,#230             ; [CPU_] |2436| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2436| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2436| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2436| 
	.dwpsn	file "../Source/prod.c",line 2445,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2445| 
        ; branch occurs ; [] |2445| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[57]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2385,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2385| 
        MOV       AL,*-SP[47]           ; [CPU_] |2385| 
        MOVL      XAR0,#44              ; [CPU_] |2385| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2385| 
        MOV       *-SP[3],AL            ; [CPU_] |2385| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2385| 
        MOVL      XAR4,XAR1             ; [CPU_] |2385| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_sprintf")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2385| 
        ; call occurs [#_sprintf] ; [] |2385| 
	.dwpsn	file "../Source/prod.c",line 2386,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2386| 
	.dwpsn	file "../Source/prod.c",line 2385,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2385| 
	.dwpsn	file "../Source/prod.c",line 2386,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2386| 
        MOV       AL,#1024              ; [CPU_] |2386| 
        MOVL      XAR5,XAR1             ; [CPU_] |2386| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2386| 
        ; call occurs [#_scia_getparam] ; [] |2386| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_strtod")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2388,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2388| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_scia_puts")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2388| 
        ; call occurs [#_scia_puts] ; [] |2388| 
	.dwpsn	file "../Source/prod.c",line 2390,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2390| 
        MOV       AH,#0                 ; [CPU_] |2390| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2390| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2390| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2390| 
        ; call occurs [#FS$$CMP] ; [] |2390| 
        CMPB      AL,#0                 ; [CPU_] |2390| 
        B         $C$L412,EQ            ; [CPU_] |2390| 
        ; branchcc occurs ; [] |2390| 
	.dwpsn	file "../Source/prod.c",line 2394,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2394| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_puts")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2394| 
        ; call occurs [#_scia_puts] ; [] |2394| 
	.dwpsn	file "../Source/prod.c",line 2395,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2395| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2395| 
        MOVB      AL,#152               ; [CPU_] |2395| 
        MOV       T,*-SP[57]            ; [CPU_] |2395| 
        MPYU      ACC,T,AL              ; [CPU_] |2395| 
        ADDL      ACC,XAR6              ; [CPU_] |2395| 
        MOVL      XAR1,ACC              ; [CPU_] |2395| 
        MOVB      XAR0,#224             ; [CPU_] |2395| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2398| 
	.dwpsn	file "../Source/prod.c",line 2395,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2395| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2395| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2398| 
        MOV       AL,*-SP[47]           ; [CPU_] |2398| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2398| 
        MOV       *-SP[3],AL            ; [CPU_] |2398| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2398| 
        MOVL      XAR0,#44              ; [CPU_] |2398| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2398| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2398| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_sprintf")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2398| 
        ; call occurs [#_sprintf] ; [] |2398| 
        MOVL      XAR0,#44              ; [CPU_] |2398| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2398| 
	.dwpsn	file "../Source/prod.c",line 2400,column 6,is_stmt,isa 0
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2400| 
        ; call occurs [#_scia_puts] ; [] |2400| 
	.dwpsn	file "../Source/prod.c",line 2396,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2396| 
	.dwpsn	file "../Source/prod.c",line 2402,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2402| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2402| 
        CMPB      AL,#247               ; [CPU_] |2402| 
        B         $C$L632,NEQ           ; [CPU_] |2402| 
        ; branchcc occurs ; [] |2402| 
	.dwpsn	file "../Source/prod.c",line 2404,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2404| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2404| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2404| 
        MOV       AL,#0                 ; [CPU_] |2404| 
        MOV       AH,#17096             ; [CPU_] |2404| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2404| 
        ; call occurs [#FS$$DIV] ; [] |2404| 
        MOVB      XAR0,#126             ; [CPU_] |2404| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2404| 
        MOVL      XAR0,#40              ; [CPU_] |2404| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2404| 
	.dwpsn	file "../Source/prod.c",line 2407,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2407| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2408,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2408| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2408| 
        CMPL      ACC,XAR6              ; [CPU_] |2408| 
        B         $C$L411,NEQ           ; [CPU_] |2408| 
        ; branchcc occurs ; [] |2408| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2411,column 9,is_stmt,isa 0
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2411| 
        ; call occurs [#_ad7738_setcal] ; [] |2411| 
        MOVL      XAR0,#78              ; [CPU_] |2411| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2411| 
	.dwpsn	file "../Source/prod.c",line 2412,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2412| 
        MOVL      XAR4,ACC              ; [CPU_] |2412| 
        MOVL      XAR0,#88              ; [CPU_] |2412| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2412| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2412| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2412| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2412| 
        MOVL      XAR0,#88              ; [CPU_] |2412| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2412| 
	.dwpsn	file "../Source/prod.c",line 2413,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2413| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2413| 
        ; call occurs [#_ad7738_resetvall] ; [] |2413| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2407,column 20,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2407| 
        ADDB      XAR1,#10              ; [CPU_] |2407| 
        MOV       AL,*-SP[58]           ; [CPU_] |2407| 
        CMPB      AL,#4                 ; [CPU_] |2407| 
        B         $C$L410,LO            ; [CPU_] |2407| 
        ; branchcc occurs ; [] |2407| 
        B         $C$L632,UNC           ; [CPU_] |2407| 
        ; branch occurs ; [] |2407| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2392,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2392| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_scia_puts")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2392| 
        ; call occurs [#_scia_puts] ; [] |2392| 
	.dwpsn	file "../Source/prod.c",line 2384,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2384| 
        ; branch occurs ; [] |2384| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2100,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2100| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_scia_puts")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2100| 
        ; call occurs [#_scia_puts] ; [] |2100| 
	.dwpsn	file "../Source/prod.c",line 2090,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2090| 
        ; branch occurs ; [] |2090| 
$C$L414:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3062,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3062| 
        B         $C$L625,LO            ; [CPU_] |3062| 
        ; branchcc occurs ; [] |3062| 
	.dwpsn	file "../Source/prod.c",line 3065,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3065| 
        CMPB      AL,#83                ; [CPU_] |3065| 
        B         $C$L415,GT            ; [CPU_] |3065| 
        ; branchcc occurs ; [] |3065| 
        CMPB      AL,#83                ; [CPU_] |3065| 
        B         $C$L419,EQ            ; [CPU_] |3065| 
        ; branchcc occurs ; [] |3065| 
        CMPB      AL,#73                ; [CPU_] |3065| 
        B         $C$L424,EQ            ; [CPU_] |3065| 
        ; branchcc occurs ; [] |3065| 
        CMPB      AL,#76                ; [CPU_] |3065| 
        B         $C$L428,EQ            ; [CPU_] |3065| 
        ; branchcc occurs ; [] |3065| 
        CMPB      AL,#80                ; [CPU_] |3065| 
        B         $C$L421,EQ            ; [CPU_] |3065| 
        ; branchcc occurs ; [] |3065| 
        B         $C$L625,UNC           ; [CPU_] |3065| 
        ; branch occurs ; [] |3065| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3065| 
        B         $C$L417,EQ            ; [CPU_] |3065| 
        ; branchcc occurs ; [] |3065| 
        CMPB      AL,#86                ; [CPU_] |3065| 
        B         $C$L625,NEQ           ; [CPU_] |3065| 
        ; branchcc occurs ; [] |3065| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3093,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3093| 
        B         $C$L416,LOS           ; [CPU_] |3093| 
        ; branchcc occurs ; [] |3093| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3093,column 6,is_stmt,isa 0
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_atoi")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3093| 
        ; call occurs [#_atoi] ; [] |3093| 
        CMPB      AL,#4                 ; [CPU_] |3093| 
        B         $C$L416,GT            ; [CPU_] |3093| 
        ; branchcc occurs ; [] |3093| 
        CMPB      AL,#0                 ; [CPU_] |3093| 
        B         $C$L416,LEQ           ; [CPU_] |3093| 
        ; branchcc occurs ; [] |3093| 
	.dwpsn	file "../Source/prod.c",line 3095,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3095| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3095| 
        ADD       ACC,AR5               ; [CPU_] |3095| 
        MOVL      XAR4,ACC              ; [CPU_] |3095| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3095| 
	.dwpsn	file "../Source/prod.c",line 3096,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3096| 
        ; branch occurs ; [] |3096| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3097,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3097| 
        B         $C$L426,UNC           ; [CPU_] |3097| 
        ; branch occurs ; [] |3097| 
$C$L417:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3069,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3069| 
        B         $C$L418,LOS           ; [CPU_] |3069| 
        ; branchcc occurs ; [] |3069| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3069,column 6,is_stmt,isa 0
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_atoi")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3069| 
        ; call occurs [#_atoi] ; [] |3069| 
        CMPB      AL,#4                 ; [CPU_] |3069| 
        MOVZ      AR4,AL                ; [CPU_] |3069| 
        B         $C$L418,GT            ; [CPU_] |3069| 
        ; branchcc occurs ; [] |3069| 
        CMPB      AL,#0                 ; [CPU_] |3069| 
        B         $C$L418,LEQ           ; [CPU_] |3069| 
        ; branchcc occurs ; [] |3069| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3071,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3071| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3071| 
	.dwpsn	file "../Source/prod.c",line 3074,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3074| 
        ; branch occurs ; [] |3074| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3075,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3075| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3075| 
        ; call occurs [#_ad7738_resettare] ; [] |3075| 
	.dwpsn	file "../Source/prod.c",line 3076,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3076| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3076| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3076| 
	.dwpsn	file "../Source/prod.c",line 3077,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3077| 
        B         $C$L426,UNC           ; [CPU_] |3077| 
        ; branch occurs ; [] |3077| 
$C$L419:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3103,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3103| 
        B         $C$L420,LOS           ; [CPU_] |3103| 
        ; branchcc occurs ; [] |3103| 
        MOVL      ACC,XAR4              ; [CPU_] |3103| 
        MOVL      XAR0,#66              ; [CPU_] |3103| 
        ADDB      ACC,#2                ; [CPU_] |3103| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3103| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3103| 
        CMPB      AL,#67                ; [CPU_] |3103| 
        B         $C$L420,NEQ           ; [CPU_] |3103| 
        ; branchcc occurs ; [] |3103| 
	.dwpsn	file "../Source/prod.c",line 3104,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3104| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3104| 
        ; call occurs [#_shunt_switch] ; [] |3104| 
	.dwpsn	file "../Source/prod.c",line 3105,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3105| 
	.dwpsn	file "../Source/prod.c",line 3106,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3106| 
        ; branch occurs ; [] |3106| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3107,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3107| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3107| 
        ; call occurs [#_shunt_switch] ; [] |3107| 
	.dwpsn	file "../Source/prod.c",line 3108,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3108| 
        B         $C$L631,UNC           ; [CPU_] |3108| 
        ; branch occurs ; [] |3108| 
$C$L421:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3083,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3083| 
        B         $C$L423,LOS           ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3083,column 6,is_stmt,isa 0
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_atoi")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3083| 
        ; call occurs [#_atoi] ; [] |3083| 
        CMPB      AL,#4                 ; [CPU_] |3083| 
        B         $C$L423,GT            ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
        CMPB      AL,#0                 ; [CPU_] |3083| 
        B         $C$L423,LEQ           ; [CPU_] |3083| 
        ; branchcc occurs ; [] |3083| 
	.dwpsn	file "../Source/prod.c",line 3085,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3085| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3085| 
        ADD       ACC,AR5               ; [CPU_] |3085| 
        MOVL      XAR4,ACC              ; [CPU_] |3085| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3085| 
$C$L422:    
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3085| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3085| 
	.dwpsn	file "../Source/prod.c",line 3086,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3086| 
        ; branch occurs ; [] |3086| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3087,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3087| 
        B         $C$L422,UNC           ; [CPU_] |3087| 
        ; branch occurs ; [] |3087| 
$C$L424:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3122,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3122| 
        B         $C$L427,LOS           ; [CPU_] |3122| 
        ; branchcc occurs ; [] |3122| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3122,column 6,is_stmt,isa 0
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_atoi")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3122| 
        ; call occurs [#_atoi] ; [] |3122| 
        CMPB      AL,#2                 ; [CPU_] |3122| 
        B         $C$L427,GT            ; [CPU_] |3122| 
        ; branchcc occurs ; [] |3122| 
        CMPB      AL,#0                 ; [CPU_] |3122| 
        B         $C$L427,LEQ           ; [CPU_] |3122| 
        ; branchcc occurs ; [] |3122| 
	.dwpsn	file "../Source/prod.c",line 3124,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3124| 
        ADD       AR6,AL                ; [CPU_] |3124| 
        MOVL      XAR0,#78              ; [CPU_] |3124| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3124| 
        ADD       ACC,AR6               ; [CPU_] |3124| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3124| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3124| 
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3124| 
        ; call occurs [#_ad7738_resettare] ; [] |3124| 
	.dwpsn	file "../Source/prod.c",line 3125,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3125| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3125| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3125| 
	.dwpsn	file "../Source/prod.c",line 3126,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3126| 
$C$L426:    
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3126| 
        ; call occurs [#_ad7738_resetvall] ; [] |3126| 
	.dwpsn	file "../Source/prod.c",line 3127,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3127| 
        ; branch occurs ; [] |3127| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3128,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3128| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3128| 
        ; call occurs [#_ad7738_resettare] ; [] |3128| 
	.dwpsn	file "../Source/prod.c",line 3129,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3129| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3129| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3129| 
	.dwpsn	file "../Source/prod.c",line 3130,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3130| 
        B         $C$L426,UNC           ; [CPU_] |3130| 
        ; branch occurs ; [] |3130| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3114,column 6,is_stmt,isa 0
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_atoi")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3114| 
        ; call occurs [#_atoi] ; [] |3114| 
	.dwpsn	file "../Source/prod.c",line 3117,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3117| 
        MOV       *-SP[58],AL           ; [CPU_] |3117| 
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3117| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3117| 
	.dwpsn	file "../Source/prod.c",line 3118,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3118| 
        ; branch occurs ; [] |3118| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1065,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1065| 
        CMPB      AL,#76                ; [CPU_] |1065| 
        B         $C$L430,GT            ; [CPU_] |1065| 
        ; branchcc occurs ; [] |1065| 
        CMPB      AL,#76                ; [CPU_] |1065| 
        B         $C$L438,EQ            ; [CPU_] |1065| 
        ; branchcc occurs ; [] |1065| 
        CMPB      AL,#65                ; [CPU_] |1065| 
        B         $C$L431,EQ            ; [CPU_] |1065| 
        ; branchcc occurs ; [] |1065| 
        CMPB      AL,#68                ; [CPU_] |1065| 
        B         $C$L442,EQ            ; [CPU_] |1065| 
        ; branchcc occurs ; [] |1065| 
        B         $C$L625,UNC           ; [CPU_] |1065| 
        ; branch occurs ; [] |1065| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1065| 
        B         $C$L441,EQ            ; [CPU_] |1065| 
        ; branchcc occurs ; [] |1065| 
        CMPB      AL,#83                ; [CPU_] |1065| 
        B         $C$L439,EQ            ; [CPU_] |1065| 
        ; branchcc occurs ; [] |1065| 
        B         $C$L625,UNC           ; [CPU_] |1065| 
        ; branch occurs ; [] |1065| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1070,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1070| 
	.dwpsn	file "../Source/prod.c",line 1071,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1071| 
	.dwpsn	file "../Source/prod.c",line 1070,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1070| 
	.dwpsn	file "../Source/prod.c",line 1071,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1071| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1071| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1071| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1071| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1071| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1071| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1071| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1071| 
        MOVL      XAR4,XAR1             ; [CPU_] |1071| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_sprintf")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1071| 
        ; call occurs [#_sprintf] ; [] |1071| 
	.dwpsn	file "../Source/prod.c",line 1073,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1073| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_scia_puts")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1073| 
        ; call occurs [#_scia_puts] ; [] |1073| 
	.dwpsn	file "../Source/prod.c",line 1074,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1074| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1074| 
        LSR       AL,8                  ; [CPU_] |1074| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1074| 
        MOV       *-SP[3],AL            ; [CPU_] |1074| 
        IN        AL,*(04004H)          ; [CPU_] |1074| 
        MOVL      XAR4,XAR1             ; [CPU_] |1074| 
        ANDB      AL,#0xff              ; [CPU_] |1074| 
        MOV       *-SP[4],AL            ; [CPU_] |1074| 
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_sprintf")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1074| 
        ; call occurs [#_sprintf] ; [] |1074| 
	.dwpsn	file "../Source/prod.c",line 1076,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1076| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_scia_puts")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1076| 
        ; call occurs [#_scia_puts] ; [] |1076| 
	.dwpsn	file "../Source/prod.c",line 1077,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1077| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1077| 
        MOVL      XAR0,#44              ; [CPU_] |1077| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1077| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1077| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1077| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1077| 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_sprintf")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1077| 
        ; call occurs [#_sprintf] ; [] |1077| 
        MOVL      XAR0,#44              ; [CPU_] |1077| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1077| 
	.dwpsn	file "../Source/prod.c",line 1078,column 6,is_stmt,isa 0
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_scia_puts")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1078| 
        ; call occurs [#_scia_puts] ; [] |1078| 
	.dwpsn	file "../Source/prod.c",line 1079,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1079| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1079| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1079| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1079| 
        MOVL      XAR0,#44              ; [CPU_] |1079| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1079| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1079| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_sprintf")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1079| 
        ; call occurs [#_sprintf] ; [] |1079| 
        MOVL      XAR0,#44              ; [CPU_] |1079| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1079| 
	.dwpsn	file "../Source/prod.c",line 1081,column 6,is_stmt,isa 0
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_scia_puts")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1081| 
        ; call occurs [#_scia_puts] ; [] |1081| 
	.dwpsn	file "../Source/prod.c",line 1083,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1083| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1083| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1083| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1083| 
        MOVL      XAR0,#72              ; [CPU_] |1083| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1083| 
        ADDL      ACC,XAR6              ; [CPU_] |1083| 
        MOVL      XAR4,ACC              ; [CPU_] |1083| 
        MOVL      XAR0,#44              ; [CPU_] |1083| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1083| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1083| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1083| 
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_sprintf")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1083| 
        ; call occurs [#_sprintf] ; [] |1083| 
        MOVL      XAR0,#44              ; [CPU_] |1083| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1083| 
	.dwpsn	file "../Source/prod.c",line 1085,column 6,is_stmt,isa 0
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_scia_puts")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1085| 
        ; call occurs [#_scia_puts] ; [] |1085| 
	.dwpsn	file "../Source/prod.c",line 1086,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1086| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1086| 
        B         $C$L432,EQ            ; [CPU_] |1086| 
        ; branchcc occurs ; [] |1086| 
        MOVB      XAR0,#34              ; [CPU_] |1086| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1086| 
        CMPB      AL,#1                 ; [CPU_] |1086| 
        B         $C$L433,NEQ           ; [CPU_] |1086| 
        ; branchcc occurs ; [] |1086| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1088,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1088| 
        MOVL      XAR0,#74              ; [CPU_] |1088| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1088| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1088| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1088| 
        ADDL      ACC,XAR6              ; [CPU_] |1088| 
        MOVL      XAR4,ACC              ; [CPU_] |1088| 
        MOVL      XAR0,#44              ; [CPU_] |1088| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1088| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1088| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1088| 
        MOVL      XAR4,XAR1             ; [CPU_] |1088| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_sprintf")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1088| 
        ; call occurs [#_sprintf] ; [] |1088| 
        MOVL      XAR4,XAR1             ; [CPU_] |1088| 
	.dwpsn	file "../Source/prod.c",line 1090,column 7,is_stmt,isa 0
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_scia_puts")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1090| 
        ; call occurs [#_scia_puts] ; [] |1090| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1092,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1092| 
        B         $C$L434,NEQ           ; [CPU_] |1092| 
        ; branchcc occurs ; [] |1092| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1092| 
        B         $C$L435,UNC           ; [CPU_] |1092| 
        ; branch occurs ; [] |1092| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1092| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1092| 
        MOVL      XAR0,#44              ; [CPU_] |1092| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1092| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1092| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1092| 
        MOVL      XAR4,XAR1             ; [CPU_] |1092| 
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_sprintf")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1092| 
        ; call occurs [#_sprintf] ; [] |1092| 
        MOVL      XAR4,XAR1             ; [CPU_] |1092| 
	.dwpsn	file "../Source/prod.c",line 1094,column 6,is_stmt,isa 0
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_scia_puts")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1094| 
        ; call occurs [#_scia_puts] ; [] |1094| 
	.dwpsn	file "../Source/prod.c",line 1096,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1096| 
        MOVB      XAR0,#38              ; [CPU_] |1096| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1096| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1096| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1096| 
        MOVL      XAR0,#44              ; [CPU_] |1096| 
        MOV       *-SP[3],AL            ; [CPU_] |1096| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1096| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_sprintf")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1096| 
        ; call occurs [#_sprintf] ; [] |1096| 
        MOVL      XAR0,#44              ; [CPU_] |1096| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1096| 
	.dwpsn	file "../Source/prod.c",line 1098,column 6,is_stmt,isa 0
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_scia_puts")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1098| 
        ; call occurs [#_scia_puts] ; [] |1098| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1100,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |1100| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1101,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1101| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_puts")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1101| 
        ; call occurs [#_scia_puts] ; [] |1101| 
        MOV       AL,*-SP[58]           ; [CPU_] |1101| 
	.dwpsn	file "../Source/prod.c",line 1102,column 7,is_stmt,isa 0
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_print_channel")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1102| 
        ; call occurs [#_print_channel] ; [] |1102| 
	.dwpsn	file "../Source/prod.c",line 1103,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1103| 
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_print_sensor")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1103| 
        ; call occurs [#_print_sensor] ; [] |1103| 
	.dwpsn	file "../Source/prod.c",line 1100,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1100| 
        INC       *-SP[58]              ; [CPU_] |1100| 
        MOV       AL,*-SP[58]           ; [CPU_] |1100| 
        CMPB      AL,#4                 ; [CPU_] |1100| 
        B         $C$L436,LO            ; [CPU_] |1100| 
        ; branchcc occurs ; [] |1100| 
	.dwpsn	file "../Source/prod.c",line 1106,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1106| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_scia_puts")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1106| 
        ; call occurs [#_scia_puts] ; [] |1106| 
	.dwpsn	file "../Source/prod.c",line 1107,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1107| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1107| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1107| 
        MOVL      ACC,XAR4              ; [CPU_] |1107| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1107| 
        MOVL      XAR4,ACC              ; [CPU_] |1107| 
        MOVL      XAR0,#44              ; [CPU_] |1107| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1107| 
        MOV       *-SP[3],AL            ; [CPU_] |1107| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1107| 
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_sprintf")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1107| 
        ; call occurs [#_sprintf] ; [] |1107| 
        MOVL      XAR0,#44              ; [CPU_] |1107| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1107| 
	.dwpsn	file "../Source/prod.c",line 1109,column 6,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_scia_puts")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1109| 
        ; call occurs [#_scia_puts] ; [] |1109| 
        MOVL      XAR0,#40              ; [CPU_] |1109| 
	.dwpsn	file "../Source/prod.c",line 1110,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1110| 
	.dwpsn	file "../Source/prod.c",line 1109,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1109| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1111,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1111| 
        MOVB      AL,#65                ; [CPU_] |1111| 
        MOVL      XAR0,#44              ; [CPU_] |1111| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1111| 
        ADD       AL,*-SP[47]           ; [CPU_] |1111| 
        MOV       *-SP[3],AL            ; [CPU_] |1111| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1111| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1111| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1111| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_sprintf")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1111| 
        ; call occurs [#_sprintf] ; [] |1111| 
        MOVL      XAR0,#44              ; [CPU_] |1111| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1111| 
	.dwpsn	file "../Source/prod.c",line 1113,column 7,is_stmt,isa 0
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_scia_puts")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1113| 
        ; call occurs [#_scia_puts] ; [] |1113| 
	.dwpsn	file "../Source/prod.c",line 1110,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1110| 
	.dwpsn	file "../Source/prod.c",line 1113,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1113| 
	.dwpsn	file "../Source/prod.c",line 1110,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1110| 
        B         $C$L437,LT            ; [CPU_] |1110| 
        ; branchcc occurs ; [] |1110| 
	.dwpsn	file "../Source/prod.c",line 1115,column 6,is_stmt,isa 0
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_print_vfd")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1115| 
        ; call occurs [#_print_vfd] ; [] |1115| 
	.dwpsn	file "../Source/prod.c",line 1116,column 6,is_stmt,isa 0
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_print_dac")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1116| 
        ; call occurs [#_print_dac] ; [] |1116| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1117,column 6,is_stmt,isa 0
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_print_limits")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1117| 
        ; call occurs [#_print_limits] ; [] |1117| 
	.dwpsn	file "../Source/prod.c",line 1118,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1118| 
        ; branch occurs ; [] |1118| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1122,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1122| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_scia_puts")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1122| 
        ; call occurs [#_scia_puts] ; [] |1122| 
	.dwpsn	file "../Source/prod.c",line 1124,column 11,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |1124| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1125,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1125| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1125| 
        MOVL      XAR0,#44              ; [CPU_] |1125| 
        ADD       AL,*-SP[57]           ; [CPU_] |1125| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1125| 
        MOVZ      AR1,AL                ; [CPU_] |1125| 
        MOV       *-SP[3],AL            ; [CPU_] |1125| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1125| 
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_sprintf")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1125| 
        ; call occurs [#_sprintf] ; [] |1125| 
        MOVL      XAR0,#44              ; [CPU_] |1125| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1125| 
	.dwpsn	file "../Source/prod.c",line 1126,column 7,is_stmt,isa 0
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_scia_puts")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1126| 
        ; call occurs [#_scia_puts] ; [] |1126| 
        MOV       AL,*-SP[57]           ; [CPU_] |1126| 
	.dwpsn	file "../Source/prod.c",line 1127,column 7,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_print_sensor")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1127| 
        ; call occurs [#_print_sensor] ; [] |1127| 
	.dwpsn	file "../Source/prod.c",line 1124,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1124| 
        MOV       *-SP[57],AR1          ; [CPU_] |1124| 
        CMPB      AL,#20                ; [CPU_] |1124| 
        B         $C$L440,LO            ; [CPU_] |1124| 
        ; branchcc occurs ; [] |1124| 
        B         $C$L632,UNC           ; [CPU_] |1124| 
        ; branch occurs ; [] |1124| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1138,column 6,is_stmt,isa 0
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_print_dac")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1138| 
        ; call occurs [#_print_dac] ; [] |1138| 
	.dwpsn	file "../Source/prod.c",line 1139,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1139| 
        ; branch occurs ; [] |1139| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1133,column 6,is_stmt,isa 0
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_print_vfd")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1133| 
        ; call occurs [#_print_vfd] ; [] |1133| 
	.dwpsn	file "../Source/prod.c",line 1134,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1134| 
        ; branch occurs ; [] |1134| 
$C$L443:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2682,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2682| 
        B         $C$L625,LO            ; [CPU_] |2682| 
        ; branchcc occurs ; [] |2682| 
	.dwpsn	file "../Source/prod.c",line 2685,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2685| 
        CMPB      AL,#68                ; [CPU_] |2685| 
        B         $C$L444,EQ            ; [CPU_] |2685| 
        ; branchcc occurs ; [] |2685| 
        CMPB      AL,#83                ; [CPU_] |2685| 
        B         $C$L450,EQ            ; [CPU_] |2685| 
        ; branchcc occurs ; [] |2685| 
        B         $C$L625,UNC           ; [CPU_] |2685| 
        ; branch occurs ; [] |2685| 
$C$L444:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2803,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2803| 
        B         $C$L625,LO            ; [CPU_] |2803| 
        ; branchcc occurs ; [] |2803| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2807,column 6,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_atoi")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2807| 
        ; call occurs [#_atoi] ; [] |2807| 
        MOV       *-SP[57],AL           ; [CPU_] |2807| 
	.dwpsn	file "../Source/prod.c",line 2809,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2809| 
        CMPB      AL,#4                 ; [CPU_] |2809| 
        B         $C$L625,HIS           ; [CPU_] |2809| 
        ; branchcc occurs ; [] |2809| 
	.dwpsn	file "../Source/prod.c",line 2815,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2815| 
        MOV       *-SP[57],AL           ; [CPU_] |2815| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2815| 
        MOV       T,AL                  ; [CPU_] |2815| 
        MOVB      AL,#12                ; [CPU_] |2815| 
        MPYU      ACC,T,AL              ; [CPU_] |2815| 
        ADDL      ACC,XAR6              ; [CPU_] |2815| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2815| 
        MOVL      XAR1,ACC              ; [CPU_] |2815| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2815| 
        CMPB      AL,#7                 ; [CPU_] |2815| 
        B         $C$L625,NEQ           ; [CPU_] |2815| 
        ; branchcc occurs ; [] |2815| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_strtod")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2819,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2819| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2821,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2821| 
        MOVL      ACC,XAR6              ; [CPU_] |2821| 
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2821| 
        ; call occurs [#FS$$CMP] ; [] |2821| 
        CMPB      AL,#0                 ; [CPU_] |2821| 
        B         $C$L625,LT            ; [CPU_] |2821| 
        ; branchcc occurs ; [] |2821| 
        MOV       AL,#0                 ; [CPU_] |2821| 
        MOV       AH,#16672             ; [CPU_] |2821| 
        MOVL      XAR0,#88              ; [CPU_] |2821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2821| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2821| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2821| 
        ; call occurs [#FS$$CMP] ; [] |2821| 
        CMPB      AL,#0                 ; [CPU_] |2821| 
        B         $C$L625,GT            ; [CPU_] |2821| 
        ; branchcc occurs ; [] |2821| 
	.dwpsn	file "../Source/prod.c",line 2827,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2827| 
        MOV       AH,#0                 ; [CPU_] |2827| 
        MOVL      XAR0,#88              ; [CPU_] |2827| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2827| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2827| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2827| 
        ; call occurs [#FS$$CMP] ; [] |2827| 
        CMPB      AL,#0                 ; [CPU_] |2827| 
        B         $C$L445,GEQ           ; [CPU_] |2827| 
        ; branchcc occurs ; [] |2827| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2827| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2827| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2827| 
        B         $C$L446,UNC           ; [CPU_] |2827| 
        ; branch occurs ; [] |2827| 
$C$L445:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2827| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2827| 
$C$L446:    
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2827| 
        ; call occurs [#FS$$MPY] ; [] |2827| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2827| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2827| 
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2827| 
        ; call occurs [#FS$$ADD] ; [] |2827| 
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2827| 
        ; call occurs [#FS$$TOLL] ; [] |2827| 
	.dwpsn	file "../Source/prod.c",line 2834,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2834| 
	.dwpsn	file "../Source/prod.c",line 2827,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2827| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2827| 
	.dwpsn	file "../Source/prod.c",line 2834,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2834| 
        CMP64     ACC:P                 ; [CPU_] |2834| 
        B         $C$L448,LEQ           ; [CPU_] |2834| 
        ; branchcc occurs ; [] |2834| 
	.dwpsn	file "../Source/prod.c",line 2836,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2836| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2836| 
        MOV       *-SP[2],#0            ; [CPU_] |2836| 
        MOV       *-SP[1],#0            ; [CPU_] |2836| 
        MOVL      P,*-SP[32]            ; [CPU_] |2836| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2836| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$966, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2836| 
        ; call occurs [#LL$$CMP] ; [] |2836| 
        CMPB      AL,#0                 ; [CPU_] |2836| 
        B         $C$L447,GEQ           ; [CPU_] |2836| 
        ; branchcc occurs ; [] |2836| 
	.dwpsn	file "../Source/prod.c",line 2839,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2839| 
        MOV       *-SP[35],AL           ; [CPU_] |2839| 
        B         $C$L449,UNC           ; [CPU_] |2839| 
        ; branch occurs ; [] |2839| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2837,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2837| 
	.dwpsn	file "../Source/prod.c",line 2838,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2838| 
        ; branch occurs ; [] |2838| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2835,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2835| 
$C$L449:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2842,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2842| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2842| 
        ; call occurs [#_mcbsp_xmit] ; [] |2842| 
	.dwpsn	file "../Source/prod.c",line 2843,column 6,is_stmt,isa 0
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_latch_dac")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2843| 
        ; call occurs [#_latch_dac] ; [] |2843| 
	.dwpsn	file "../Source/prod.c",line 2845,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2845| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2845| 
        MOVL      XAR0,#44              ; [CPU_] |2845| 
        ADD       AL,*-SP[57]           ; [CPU_] |2845| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2845| 
        MOV       *-SP[3],AL            ; [CPU_] |2845| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2845| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2845| 
        MOV       AL,*-SP[35]           ; [CPU_] |2845| 
        MOV       *-SP[7],AL            ; [CPU_] |2845| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2845| 
        MOVL      XAR4,XAR1             ; [CPU_] |2845| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_sprintf")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2845| 
        ; call occurs [#_sprintf] ; [] |2845| 
        MOVL      XAR4,XAR1             ; [CPU_] |2845| 
	.dwpsn	file "../Source/prod.c",line 2849,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2849| 
        ; branch occurs ; [] |2849| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2692,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2692| 
        MOVL      XAR0,#44              ; [CPU_] |2692| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2692| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2692| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2692| 
        MOVL      XAR4,XAR1             ; [CPU_] |2692| 
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_sprintf")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2692| 
        ; call occurs [#_sprintf] ; [] |2692| 
	.dwpsn	file "../Source/prod.c",line 2693,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2693| 
	.dwpsn	file "../Source/prod.c",line 2692,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2693,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2693| 
        MOV       AL,#1024              ; [CPU_] |2693| 
        MOVL      XAR5,XAR1             ; [CPU_] |2693| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2693| 
        ; call occurs [#_scia_getparam] ; [] |2693| 
	.dwpsn	file "../Source/prod.c",line 2694,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2694| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_atoi")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2694| 
        ; call occurs [#_atoi] ; [] |2694| 
        MOV       *-SP[57],AL           ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2695,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2695| 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_puts")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2695| 
        ; call occurs [#_scia_puts] ; [] |2695| 
        MOV       AL,*-SP[57]           ; [CPU_] |2695| 
	.dwpsn	file "../Source/prod.c",line 2697,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2697| 
        CMPB      AL,#4                 ; [CPU_] |2697| 
        B         $C$L465,HIS           ; [CPU_] |2697| 
        ; branchcc occurs ; [] |2697| 
	.dwpsn	file "../Source/prod.c",line 2701,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2701| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_scia_puts")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2701| 
        ; call occurs [#_scia_puts] ; [] |2701| 
        MOVL      XAR0,#62              ; [CPU_] |2701| 
	.dwpsn	file "../Source/prod.c",line 2705,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2705| 
	.dwpsn	file "../Source/prod.c",line 2701,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2701| 
	.dwpsn	file "../Source/prod.c",line 2705,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2705| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2706,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2706| 
        MOVL      XAR0,#44              ; [CPU_] |2706| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2706| 
        MOV       *-SP[3],AL            ; [CPU_] |2706| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2706| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2706| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2706| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_sprintf")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2706| 
        ; call occurs [#_sprintf] ; [] |2706| 
        MOVL      XAR0,#44              ; [CPU_] |2706| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2706| 
	.dwpsn	file "../Source/prod.c",line 2707,column 7,is_stmt,isa 0
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_scia_puts")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2707| 
        ; call occurs [#_scia_puts] ; [] |2707| 
	.dwpsn	file "../Source/prod.c",line 2708,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2708| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_scia_puts")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2708| 
        ; call occurs [#_scia_puts] ; [] |2708| 
	.dwpsn	file "../Source/prod.c",line 2705,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2705| 
	.dwpsn	file "../Source/prod.c",line 2708,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2708| 
	.dwpsn	file "../Source/prod.c",line 2705,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2705| 
        B         $C$L451,LT            ; [CPU_] |2705| 
        ; branchcc occurs ; [] |2705| 
	.dwpsn	file "../Source/prod.c",line 2711,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2711| 
        MOVB      XAR0,#14              ; [CPU_] |2711| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2711| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2711| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2711| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2711| 
        MOVL      XAR0,#44              ; [CPU_] |2711| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2711| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2711| 
        MOVL      XAR4,XAR1             ; [CPU_] |2711| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_sprintf")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2711| 
        ; call occurs [#_sprintf] ; [] |2711| 
	.dwpsn	file "../Source/prod.c",line 2712,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2712| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_scia_puts")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2712| 
        ; call occurs [#_scia_puts] ; [] |2712| 
	.dwpsn	file "../Source/prod.c",line 2713,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2713| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_puts")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2713| 
        ; call occurs [#_scia_puts] ; [] |2713| 
	.dwpsn	file "../Source/prod.c",line 2714,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2714| 
	.dwpsn	file "../Source/prod.c",line 2713,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2713| 
	.dwpsn	file "../Source/prod.c",line 2714,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2714| 
        DEC       *-SP[57]              ; [CPU_] |2714| 
        MOV       *-SP[47],AH           ; [CPU_] |2714| 
        MOV       *-SP[3],AH            ; [CPU_] |2714| 
        MOVL      XAR4,XAR1             ; [CPU_] |2714| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_sprintf")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2714| 
        ; call occurs [#_sprintf] ; [] |2714| 
	.dwpsn	file "../Source/prod.c",line 2716,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2716| 
        MOVL      XAR4,XAR1             ; [CPU_] |2716| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2716| 
        MOV       AL,#1024              ; [CPU_] |2716| 
        MOVL      XAR5,XAR1             ; [CPU_] |2716| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2716| 
        ; call occurs [#_scia_getparam] ; [] |2716| 
        MOVL      XAR4,XAR1             ; [CPU_] |2716| 
	.dwpsn	file "../Source/prod.c",line 2717,column 6,is_stmt,isa 0
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_atoi")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2717| 
        ; call occurs [#_atoi] ; [] |2717| 
	.dwpsn	file "../Source/prod.c",line 2710,column 6,is_stmt,isa 0
        MOV       *-SP[60],#7           ; [CPU_] |2710| 
	.dwpsn	file "../Source/prod.c",line 2717,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |2717| 
	.dwpsn	file "../Source/prod.c",line 2718,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2718| 
        B         $C$L452,LO            ; [CPU_] |2718| 
        ; branchcc occurs ; [] |2718| 
        CMPB      AL,#7                 ; [CPU_] |2718| 
        B         $C$L452,EQ            ; [CPU_] |2718| 
        ; branchcc occurs ; [] |2718| 
	.dwpsn	file "../Source/prod.c",line 2720,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2720| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2720| 
        ; call occurs [#_scia_puts] ; [] |2720| 
	.dwpsn	file "../Source/prod.c",line 2719,column 7,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2719| 
$C$L452:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2723,column 6,is_stmt,isa 0
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_scia_puts")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2723| 
        ; call occurs [#_scia_puts] ; [] |2723| 
	.dwpsn	file "../Source/prod.c",line 2724,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2724| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_puts")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2724| 
        ; call occurs [#_scia_puts] ; [] |2724| 
	.dwpsn	file "../Source/prod.c",line 2725,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2725| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2725| 
        MOVB      AL,#12                ; [CPU_] |2725| 
        MOV       T,*-SP[57]            ; [CPU_] |2725| 
        MPYU      ACC,T,AL              ; [CPU_] |2725| 
        ADDL      ACC,XAR6              ; [CPU_] |2725| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2725| 
        MOVL      XAR1,ACC              ; [CPU_] |2725| 
        MOV       AL,*-SP[59]           ; [CPU_] |2725| 
	.dwpsn	file "../Source/prod.c",line 2727,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2727| 
	.dwpsn	file "../Source/prod.c",line 2725,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2725| 
	.dwpsn	file "../Source/prod.c",line 2727,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2727| 
        ; branchcc occurs ; [] |2727| 
	.dwpsn	file "../Source/prod.c",line 2729,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2729| 
        B         $C$L454,EQ            ; [CPU_] |2729| 
        ; branchcc occurs ; [] |2729| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2729| 
        B         $C$L454,EQ            ; [CPU_] |2729| 
        ; branchcc occurs ; [] |2729| 
	.dwpsn	file "../Source/prod.c",line 2732,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2732| 
        B         $C$L453,EQ            ; [CPU_] |2732| 
        ; branchcc occurs ; [] |2732| 
        CMPB      AL,#4                 ; [CPU_] |2732| 
        B         $C$L455,NEQ           ; [CPU_] |2732| 
        ; branchcc occurs ; [] |2732| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2733,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2733| 
        B         $C$L455,UNC           ; [CPU_] |2733| 
        ; branch occurs ; [] |2733| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2731,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2731| 
$C$L455:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2738,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2738| 
        MOV       AL,*-SP[60]           ; [CPU_] |2738| 
        MOVL      XAR0,#44              ; [CPU_] |2738| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2738| 
        MOV       *-SP[3],AL            ; [CPU_] |2738| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2738| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_sprintf")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2738| 
        ; call occurs [#_sprintf] ; [] |2738| 
        MOVL      XAR0,#44              ; [CPU_] |2738| 
	.dwpsn	file "../Source/prod.c",line 2739,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2738,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2738| 
	.dwpsn	file "../Source/prod.c",line 2739,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2739| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2739| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2739| 
        ; call occurs [#_scia_getparam] ; [] |2739| 
        MOVL      XAR0,#86              ; [CPU_] |2739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2739| 
	.dwpsn	file "../Source/prod.c",line 2740,column 8,is_stmt,isa 0
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_atoi")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2740| 
        ; call occurs [#_atoi] ; [] |2740| 
        MOVL      XAR0,#86              ; [CPU_] |2740| 
        MOV       *-SP[58],AL           ; [CPU_] |2740| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2740| 
	.dwpsn	file "../Source/prod.c",line 2741,column 8,is_stmt,isa 0
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_scia_puts")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2741| 
        ; call occurs [#_scia_puts] ; [] |2741| 
        MOV       AL,*-SP[58]           ; [CPU_] |2741| 
	.dwpsn	file "../Source/prod.c",line 2743,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2743| 
        ; branchcc occurs ; [] |2743| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2743| 
        B         $C$L464,LO            ; [CPU_] |2743| 
        ; branchcc occurs ; [] |2743| 
	.dwpsn	file "../Source/prod.c",line 2747,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2747| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_scia_puts")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2747| 
        ; call occurs [#_scia_puts] ; [] |2747| 
	.dwpsn	file "../Source/prod.c",line 2749,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2749| 
	.dwpsn	file "../Source/prod.c",line 2747,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2747| 
	.dwpsn	file "../Source/prod.c",line 2749,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2749| 
        MOV       AL,*-SP[59]           ; [CPU_] |2749| 
	.dwpsn	file "../Source/prod.c",line 2752,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2752| 
        B         $C$L457,EQ            ; [CPU_] |2752| 
        ; branchcc occurs ; [] |2752| 
        CMPB      AL,#4                 ; [CPU_] |2752| 
        B         $C$L459,NEQ           ; [CPU_] |2752| 
        ; branchcc occurs ; [] |2752| 
	.dwpsn	file "../Source/prod.c",line 2757,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2757| 
        B         $C$L458,UNC           ; [CPU_] |2757| 
        ; branch occurs ; [] |2757| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2755,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2755| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2755| 
        MOVL      XAR0,#44              ; [CPU_] |2755| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2755| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_sprintf")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2755| 
        ; call occurs [#_sprintf] ; [] |2755| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2759,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2759| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2759| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2759| 
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2759| 
        ; call occurs [#_scia_getparam] ; [] |2759| 
        MOVL      XAR0,#86              ; [CPU_] |2759| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2759,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2759| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_strtod")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2760,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2760| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2760| 
        MOVL      XAR0,#86              ; [CPU_] |2760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2760| 
	.dwpsn	file "../Source/prod.c",line 2761,column 8,is_stmt,isa 0
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_puts")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2761| 
        ; call occurs [#_scia_puts] ; [] |2761| 
	.dwpsn	file "../Source/prod.c",line 2762,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2762| 
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_scia_puts")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2762| 
        ; call occurs [#_scia_puts] ; [] |2762| 
	.dwpsn	file "../Source/prod.c",line 2765,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2765| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2765| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2765| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2765| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_sprintf")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2765| 
        ; call occurs [#_sprintf] ; [] |2765| 
        MOVL      XAR0,#44              ; [CPU_] |2765| 
	.dwpsn	file "../Source/prod.c",line 2766,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2766| 
	.dwpsn	file "../Source/prod.c",line 2765,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2765| 
	.dwpsn	file "../Source/prod.c",line 2766,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2766| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2766| 
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2766| 
        ; call occurs [#_scia_getparam] ; [] |2766| 
        MOVL      XAR0,#86              ; [CPU_] |2766| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2766,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2766| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_strtod")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2767,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2767| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2767| 
        MOVL      XAR0,#86              ; [CPU_] |2767| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2767| 
	.dwpsn	file "../Source/prod.c",line 2768,column 8,is_stmt,isa 0
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2768| 
        ; call occurs [#_scia_puts] ; [] |2768| 
	.dwpsn	file "../Source/prod.c",line 2769,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2769| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2769| 
        ; call occurs [#_scia_puts] ; [] |2769| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2776,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2776| 
        MOV       AL,*-SP[47]           ; [CPU_] |2776| 
        MOVL      XAR0,#62              ; [CPU_] |2776| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2776| 
        MOV       *-SP[3],AL            ; [CPU_] |2776| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2776| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2776| 
        MOV       ACC,AL << 1           ; [CPU_] |2776| 
        ADDL      ACC,XAR6              ; [CPU_] |2776| 
        MOVL      XAR4,ACC              ; [CPU_] |2776| 
        MOVL      XAR0,#44              ; [CPU_] |2776| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2776| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2776| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2776| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_sprintf")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2776| 
        ; call occurs [#_sprintf] ; [] |2776| 
        MOVL      XAR0,#44              ; [CPU_] |2776| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2776| 
	.dwpsn	file "../Source/prod.c",line 2778,column 6,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2778| 
        ; call occurs [#_scia_puts] ; [] |2778| 
	.dwpsn	file "../Source/prod.c",line 2773,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2773| 
        MOV       AL,*-SP[59]           ; [CPU_] |2773| 
	.dwpsn	file "../Source/prod.c",line 2780,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2780| 
        B         $C$L461,EQ            ; [CPU_] |2780| 
        ; branchcc occurs ; [] |2780| 
	.dwpsn	file "../Source/prod.c",line 2783,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2783| 
        MOVB      AL,#1                 ; [CPU_] |2783| 
        MOVL      XAR0,#44              ; [CPU_] |2783| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2783| 
        ADD       AL,*-SP[58]           ; [CPU_] |2783| 
        MOV       *-SP[3],AL            ; [CPU_] |2783| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2783| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_sprintf")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2783| 
        ; call occurs [#_sprintf] ; [] |2783| 
        MOVL      XAR0,#44              ; [CPU_] |2783| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2783| 
	.dwpsn	file "../Source/prod.c",line 2784,column 7,is_stmt,isa 0
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2784| 
        ; call occurs [#_scia_puts] ; [] |2784| 
        MOV       AL,*-SP[59]           ; [CPU_] |2784| 
	.dwpsn	file "../Source/prod.c",line 2786,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2786| 
        B         $C$L460,EQ            ; [CPU_] |2786| 
        ; branchcc occurs ; [] |2786| 
        CMPB      AL,#4                 ; [CPU_] |2786| 
        B         $C$L463,NEQ           ; [CPU_] |2786| 
        ; branchcc occurs ; [] |2786| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2787,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2787| 
        MOVB      XAR0,#8               ; [CPU_] |2787| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2787| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2787| 
        MOVB      XAR0,#10              ; [CPU_] |2787| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2787| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2787| 
        MOVL      XAR0,#44              ; [CPU_] |2787| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2787| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2787| 
        MOVL      XAR4,XAR1             ; [CPU_] |2787| 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_sprintf")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2787| 
        ; call occurs [#_sprintf] ; [] |2787| 
        MOVL      XAR4,XAR1             ; [CPU_] |2787| 
	.dwpsn	file "../Source/prod.c",line 2790,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2790| 
        ; branch occurs ; [] |2790| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2781,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2781| 
$C$L462:    
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2781| 
        ; call occurs [#_scia_puts] ; [] |2781| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2795,column 6,is_stmt,isa 0
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2795| 
        ; call occurs [#_ad7738_setcal] ; [] |2795| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2797,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2797| 
        ; branch occurs ; [] |2797| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2745,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2745| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2745| 
        ; call occurs [#_scia_puts] ; [] |2745| 
	.dwpsn	file "../Source/prod.c",line 2737,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2737| 
        ; branch occurs ; [] |2737| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2699,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2699| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2699| 
        ; call occurs [#_scia_puts] ; [] |2699| 
	.dwpsn	file "../Source/prod.c",line 2691,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2691| 
        ; branch occurs ; [] |2691| 
$C$L466:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2863,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2863| 
        B         $C$L625,LO            ; [CPU_] |2863| 
        ; branchcc occurs ; [] |2863| 
	.dwpsn	file "../Source/prod.c",line 2866,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2866| 
        CMPB      AL,#83                ; [CPU_] |2866| 
        B         $C$L625,NEQ           ; [CPU_] |2866| 
        ; branchcc occurs ; [] |2866| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2873,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2873| 
        MOVL      XAR0,#44              ; [CPU_] |2873| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2873| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2873| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2873| 
        MOVL      XAR4,XAR1             ; [CPU_] |2873| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_sprintf")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2873| 
        ; call occurs [#_sprintf] ; [] |2873| 
	.dwpsn	file "../Source/prod.c",line 2874,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2874| 
	.dwpsn	file "../Source/prod.c",line 2873,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2873| 
	.dwpsn	file "../Source/prod.c",line 2874,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2874| 
        MOV       AL,#1024              ; [CPU_] |2874| 
        MOVL      XAR5,XAR1             ; [CPU_] |2874| 
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2874| 
        ; call occurs [#_scia_getparam] ; [] |2874| 
	.dwpsn	file "../Source/prod.c",line 2875,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2875| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_atoi")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2875| 
        ; call occurs [#_atoi] ; [] |2875| 
        MOV       *-SP[57],AL           ; [CPU_] |2875| 
	.dwpsn	file "../Source/prod.c",line 2876,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2876| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2876| 
        ; call occurs [#_scia_puts] ; [] |2876| 
        MOV       AL,*-SP[57]           ; [CPU_] |2876| 
	.dwpsn	file "../Source/prod.c",line 2878,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2878| 
        CMPB      AL,#4                 ; [CPU_] |2878| 
        B         $C$L497,HIS           ; [CPU_] |2878| 
        ; branchcc occurs ; [] |2878| 
	.dwpsn	file "../Source/prod.c",line 2882,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2882| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2882| 
        ; call occurs [#_scia_puts] ; [] |2882| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2882| 
	.dwpsn	file "../Source/prod.c",line 2885,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2885| 
        MOVL      XAR0,#44              ; [CPU_] |2885| 
        DEC       *-SP[57]              ; [CPU_] |2885| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2885| 
        MOV       *-SP[47],AR1          ; [CPU_] |2885| 
        MOV       *-SP[3],AR1           ; [CPU_] |2885| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2885| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_sprintf")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2885| 
        ; call occurs [#_sprintf] ; [] |2885| 
        MOVL      XAR0,#44              ; [CPU_] |2885| 
	.dwpsn	file "../Source/prod.c",line 2886,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2886| 
	.dwpsn	file "../Source/prod.c",line 2885,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2885| 
	.dwpsn	file "../Source/prod.c",line 2886,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2886| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2886| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2886| 
        ; call occurs [#_scia_getparam] ; [] |2886| 
        MOVL      XAR0,#86              ; [CPU_] |2886| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2886| 
	.dwpsn	file "../Source/prod.c",line 2887,column 6,is_stmt,isa 0
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2887| 
        ; call occurs [#_scia_puts] ; [] |2887| 
	.dwpsn	file "../Source/prod.c",line 2888,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2888| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2888| 
        ; call occurs [#_scia_puts] ; [] |2888| 
        MOVL      XAR0,#86              ; [CPU_] |2888| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2888| 
	.dwpsn	file "../Source/prod.c",line 2890,column 6,is_stmt,isa 0
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_atoi")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2890| 
        ; call occurs [#_atoi] ; [] |2890| 
        CMPB      AL,#1                 ; [CPU_] |2890| 
        B         $C$L468,EQ            ; [CPU_] |2890| 
        ; branchcc occurs ; [] |2890| 
	.dwpsn	file "../Source/prod.c",line 3039,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3039| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3039| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3039| 
        ADDL      ACC,XAR6              ; [CPU_] |3039| 
        ADD       ACC,#199 << 4         ; [CPU_] |3039| 
        MOVL      XAR4,ACC              ; [CPU_] |3039| 
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3040| 
	.dwpsn	file "../Source/prod.c",line 3039,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3039| 
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3040| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3040| 
        MOV       *-SP[3],AR1           ; [CPU_] |3040| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3040| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_sprintf")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3040| 
        ; call occurs [#_sprintf] ; [] |3040| 
        B         $C$L493,UNC           ; [CPU_] |3040| 
        ; branch occurs ; [] |3040| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2893,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2893| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2893| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2893| 
        ADDL      ACC,XAR6              ; [CPU_] |2893| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2893| 
        MOVL      XAR1,ACC              ; [CPU_] |2893| 
        MOVL      XAR0,#62              ; [CPU_] |2893| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2893| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2893| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2896,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2896| 
        MOV       *-SP[60],AL           ; [CPU_] |2896| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2897,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2897| 
        MOVL      XAR0,#88              ; [CPU_] |2897| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2897| 
        MOV       *-SP[3],AL            ; [CPU_] |2897| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2897| 
        MOVL      XAR0,#88              ; [CPU_] |2897| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2897| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2897| 
        MOVL      XAR0,#44              ; [CPU_] |2897| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2897| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2897| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_sprintf")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2897| 
        ; call occurs [#_sprintf] ; [] |2897| 
        MOVL      XAR0,#44              ; [CPU_] |2897| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2897| 
	.dwpsn	file "../Source/prod.c",line 2898,column 8,is_stmt,isa 0
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2898| 
        ; call occurs [#_scia_puts] ; [] |2898| 
        MOV       AL,*-SP[60]           ; [CPU_] |2898| 
	.dwpsn	file "../Source/prod.c",line 2899,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2899| 
        B         $C$L470,GEQ           ; [CPU_] |2899| 
        ; branchcc occurs ; [] |2899| 
	.dwpsn	file "../Source/prod.c",line 2900,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2900| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2900| 
        ; call occurs [#_scia_puts] ; [] |2900| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2896,column 19,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |2896| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2896| 
        B         $C$L469,LT            ; [CPU_] |2896| 
        ; branchcc occurs ; [] |2896| 
	.dwpsn	file "../Source/prod.c",line 2903,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2903| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2903| 
        ; call occurs [#_scia_puts] ; [] |2903| 
	.dwpsn	file "../Source/prod.c",line 2904,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2904| 
        MOVL      XAR0,#44              ; [CPU_] |2904| 
        MOV       AL,*-SP[47]           ; [CPU_] |2904| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2904| 
        MOV       *-SP[3],AL            ; [CPU_] |2904| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2904| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_sprintf")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2904| 
        ; call occurs [#_sprintf] ; [] |2904| 
        MOVL      XAR0,#44              ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2907,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2907| 
	.dwpsn	file "../Source/prod.c",line 2904,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2907,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2907| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2907| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2907| 
        ; call occurs [#_scia_getparam] ; [] |2907| 
        MOVL      XAR0,#86              ; [CPU_] |2907| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2907| 
	.dwpsn	file "../Source/prod.c",line 2908,column 7,is_stmt,isa 0
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_atoi")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2908| 
        ; call occurs [#_atoi] ; [] |2908| 
        MOV       *-SP[59],AL           ; [CPU_] |2908| 
        CMPB      AL,#5                 ; [CPU_] |2908| 
        B         $C$L471,LO            ; [CPU_] |2908| 
        ; branchcc occurs ; [] |2908| 
	.dwpsn	file "../Source/prod.c",line 2911,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2911| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2911| 
        ; call occurs [#_scia_puts] ; [] |2911| 
	.dwpsn	file "../Source/prod.c",line 2910,column 8,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2910| 
$C$L471:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2914,column 7,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2914| 
        ; call occurs [#_scia_puts] ; [] |2914| 
	.dwpsn	file "../Source/prod.c",line 2915,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2915| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2915| 
        ; call occurs [#_scia_puts] ; [] |2915| 
        MOV       AL,*-SP[59]           ; [CPU_] |2915| 
	.dwpsn	file "../Source/prod.c",line 2916,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2916| 
	.dwpsn	file "../Source/prod.c",line 2918,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2918| 
        B         $C$L473,EQ            ; [CPU_] |2918| 
        ; branchcc occurs ; [] |2918| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2918| 
        B         $C$L473,EQ            ; [CPU_] |2918| 
        ; branchcc occurs ; [] |2918| 
	.dwpsn	file "../Source/prod.c",line 2921,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2921| 
        B         $C$L472,EQ            ; [CPU_] |2921| 
        ; branchcc occurs ; [] |2921| 
        CMPB      AL,#4                 ; [CPU_] |2921| 
        B         $C$L474,NEQ           ; [CPU_] |2921| 
        ; branchcc occurs ; [] |2921| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2922,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2922| 
        B         $C$L474,UNC           ; [CPU_] |2922| 
        ; branch occurs ; [] |2922| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2920,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2920| 
$C$L474:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2927,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2927| 
        MOV       AL,*-SP[60]           ; [CPU_] |2927| 
        MOVL      XAR0,#44              ; [CPU_] |2927| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2927| 
        MOV       *-SP[3],AL            ; [CPU_] |2927| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2927| 
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_sprintf")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2927| 
        ; call occurs [#_sprintf] ; [] |2927| 
        MOVL      XAR0,#44              ; [CPU_] |2927| 
	.dwpsn	file "../Source/prod.c",line 2928,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2928| 
	.dwpsn	file "../Source/prod.c",line 2927,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2927| 
	.dwpsn	file "../Source/prod.c",line 2928,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2928| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2928| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2928| 
        ; call occurs [#_scia_getparam] ; [] |2928| 
        MOVL      XAR0,#86              ; [CPU_] |2928| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2928| 
	.dwpsn	file "../Source/prod.c",line 2929,column 8,is_stmt,isa 0
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_atoi")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2929| 
        ; call occurs [#_atoi] ; [] |2929| 
        MOVL      XAR0,#86              ; [CPU_] |2929| 
        MOV       *-SP[58],AL           ; [CPU_] |2929| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2929| 
	.dwpsn	file "../Source/prod.c",line 2930,column 8,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2930| 
        ; call occurs [#_scia_puts] ; [] |2930| 
        MOV       AL,*-SP[58]           ; [CPU_] |2930| 
	.dwpsn	file "../Source/prod.c",line 2932,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2932| 
        ; branchcc occurs ; [] |2932| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2932| 
        B         $C$L496,LO            ; [CPU_] |2932| 
        ; branchcc occurs ; [] |2932| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2936| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2936| 
        ; call occurs [#_scia_puts] ; [] |2936| 
	.dwpsn	file "../Source/prod.c",line 2938,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2938| 
	.dwpsn	file "../Source/prod.c",line 2941,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2941| 
	.dwpsn	file "../Source/prod.c",line 2936,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2936| 
	.dwpsn	file "../Source/prod.c",line 2941,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2941| 
	.dwpsn	file "../Source/prod.c",line 2938,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2938| 
	.dwpsn	file "../Source/prod.c",line 2941,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2941| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2941| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2941| 
        ; call occurs [#_scia_getparam] ; [] |2941| 
        MOVL      XAR0,#86              ; [CPU_] |2941| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2941| 
	.dwpsn	file "../Source/prod.c",line 2944,column 7,is_stmt,isa 0
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2944| 
        ; call occurs [#_scia_puts] ; [] |2944| 
	.dwpsn	file "../Source/prod.c",line 2945,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2945| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2945| 
        ; call occurs [#_scia_puts] ; [] |2945| 
        MOVL      XAR0,#86              ; [CPU_] |2945| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2945| 
	.dwpsn	file "../Source/prod.c",line 2947,column 7,is_stmt,isa 0
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_atoi")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2947| 
        ; call occurs [#_atoi] ; [] |2947| 
        CMPB      AL,#1                 ; [CPU_] |2947| 
        B         $C$L476,EQ            ; [CPU_] |2947| 
        ; branchcc occurs ; [] |2947| 
	.dwpsn	file "../Source/prod.c",line 2951,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2951| 
        B         $C$L477,UNC           ; [CPU_] |2951| 
        ; branch occurs ; [] |2951| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2949,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2949| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2954,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2954| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2954| 
        MOV       AL,#1024              ; [CPU_] |2954| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2954| 
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2954| 
        ; call occurs [#_scia_getparam] ; [] |2954| 
        MOVL      XAR0,#86              ; [CPU_] |2954| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2954| 
	.dwpsn	file "../Source/prod.c",line 2957,column 7,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2957| 
        ; call occurs [#_scia_puts] ; [] |2957| 
	.dwpsn	file "../Source/prod.c",line 2958,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2958| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2958| 
        ; call occurs [#_scia_puts] ; [] |2958| 
        MOVL      XAR0,#86              ; [CPU_] |2958| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2958| 
	.dwpsn	file "../Source/prod.c",line 2960,column 7,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_atoi")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2960| 
        ; call occurs [#_atoi] ; [] |2960| 
        CMPB      AL,#1                 ; [CPU_] |2960| 
        B         $C$L478,EQ            ; [CPU_] |2960| 
        ; branchcc occurs ; [] |2960| 
	.dwpsn	file "../Source/prod.c",line 2964,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2964| 
        B         $C$L479,UNC           ; [CPU_] |2964| 
        ; branch occurs ; [] |2964| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2962,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2962| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2967,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2967| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2967| 
        MOV       AL,#1024              ; [CPU_] |2967| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2967| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2967| 
        ; call occurs [#_scia_getparam] ; [] |2967| 
        MOVL      XAR0,#86              ; [CPU_] |2967| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2967| 
	.dwpsn	file "../Source/prod.c",line 2970,column 7,is_stmt,isa 0
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2970| 
        ; call occurs [#_scia_puts] ; [] |2970| 
	.dwpsn	file "../Source/prod.c",line 2971,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2971| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2971| 
        ; call occurs [#_scia_puts] ; [] |2971| 
        MOVL      XAR0,#86              ; [CPU_] |2971| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2971| 
	.dwpsn	file "../Source/prod.c",line 2973,column 7,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_atoi")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2973| 
        ; call occurs [#_atoi] ; [] |2973| 
        CMPB      AL,#1                 ; [CPU_] |2973| 
        B         $C$L480,EQ            ; [CPU_] |2973| 
        ; branchcc occurs ; [] |2973| 
	.dwpsn	file "../Source/prod.c",line 2977,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2977| 
        B         $C$L481,UNC           ; [CPU_] |2977| 
        ; branch occurs ; [] |2977| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 2975,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2975| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2981,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2981| 
        CMPB      AL,#2                 ; [CPU_] |2981| 
        B         $C$L483,LOS           ; [CPU_] |2981| 
        ; branchcc occurs ; [] |2981| 
        CMPB      AL,#3                 ; [CPU_] |2981| 
        B         $C$L482,EQ            ; [CPU_] |2981| 
        ; branchcc occurs ; [] |2981| 
        CMPB      AL,#4                 ; [CPU_] |2981| 
        B         $C$L485,NEQ           ; [CPU_] |2981| 
        ; branchcc occurs ; [] |2981| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2993,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |2993| 
	.dwpsn	file "../Source/prod.c",line 2994,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2994| 
        ; branch occurs ; [] |2994| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2990,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |2990| 
	.dwpsn	file "../Source/prod.c",line 2991,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2991| 
        ; branch occurs ; [] |2991| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2985,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2985| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2985| 
        MOV       T,#10                 ; [CPU_] |2985| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |2985| 
        ADDL      ACC,XAR6              ; [CPU_] |2985| 
        MOVL      XAR4,ACC              ; [CPU_] |2985| 
        MOVB      XAR0,#42              ; [CPU_] |2985| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |2985| 
        MPYB      ACC,T,#152            ; [CPU_] |2985| 
        ADDL      ACC,XAR6              ; [CPU_] |2985| 
        MOVL      XAR4,ACC              ; [CPU_] |2985| 
        MOVB      XAR0,#125             ; [CPU_] |2985| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2985| 
        MOVL      XAR0,#70              ; [CPU_] |2985| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2985| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2985| 
        MOV       ACC,AL << 1           ; [CPU_] |2985| 
        ADDL      ACC,XAR6              ; [CPU_] |2985| 
        MOVL      XAR4,ACC              ; [CPU_] |2985| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2985| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |2985| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2985| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2998,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |2998| 
        MOVL      XAR0,#48              ; [CPU_] |2998| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2998| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2998| 
        MOVL      XAR0,#44              ; [CPU_] |2998| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2998| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2998| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_sprintf")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2998| 
        ; call occurs [#_sprintf] ; [] |2998| 
        MOVL      XAR0,#44              ; [CPU_] |2998| 
	.dwpsn	file "../Source/prod.c",line 2999,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2999| 
	.dwpsn	file "../Source/prod.c",line 2998,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2998| 
	.dwpsn	file "../Source/prod.c",line 2999,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2999| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2999| 
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2999| 
        ; call occurs [#_scia_getparam] ; [] |2999| 
        MOVL      XAR0,#86              ; [CPU_] |2999| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2999| 
	.dwpsn	file "../Source/prod.c",line 3000,column 7,is_stmt,isa 0
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3000| 
        ; call occurs [#_scia_puts] ; [] |3000| 
	.dwpsn	file "../Source/prod.c",line 3001,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3001| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3001| 
        ; call occurs [#_scia_puts] ; [] |3001| 
        MOVL      XAR0,#86              ; [CPU_] |3001| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3001,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3001| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_strtod")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3007,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |3007| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3007| 
	.dwpsn	file "../Source/prod.c",line 3003,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3003| 
	.dwpsn	file "../Source/prod.c",line 3007,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3007| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3007| 
        MOVL      XAR0,#44              ; [CPU_] |3007| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3007| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3007| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_sprintf")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3007| 
        ; call occurs [#_sprintf] ; [] |3007| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3008,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3008| 
        MOVL      XAR0,#86              ; [CPU_] |3008| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3008| 
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3008| 
        ; call occurs [#_scia_getparam] ; [] |3008| 
        MOVL      XAR0,#86              ; [CPU_] |3008| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3008| 
	.dwpsn	file "../Source/prod.c",line 3009,column 7,is_stmt,isa 0
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3009| 
        ; call occurs [#_scia_puts] ; [] |3009| 
	.dwpsn	file "../Source/prod.c",line 3010,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3010| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3010| 
        ; call occurs [#_scia_puts] ; [] |3010| 
        MOVL      XAR0,#86              ; [CPU_] |3010| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3010,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3010| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_strtod")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3018,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3018| 
        MOVL      XAR0,#62              ; [CPU_] |3018| 
	.dwpsn	file "../Source/prod.c",line 3012,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3012| 
	.dwpsn	file "../Source/prod.c",line 3018,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |3018| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3018| 
        MOV       *-SP[3],AL            ; [CPU_] |3018| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3018| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |3018| 
        MOV       ACC,AL << 1           ; [CPU_] |3018| 
        ADDL      ACC,XAR6              ; [CPU_] |3018| 
        MOVL      XAR4,ACC              ; [CPU_] |3018| 
        MOVL      XAR0,#44              ; [CPU_] |3018| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3018| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3018| 
        MOVB      AL,#1                 ; [CPU_] |3018| 
        ADD       AL,*-SP[58]           ; [CPU_] |3018| 
        MOV       *-SP[7],AL            ; [CPU_] |3018| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3018| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_sprintf")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3018| 
        ; call occurs [#_sprintf] ; [] |3018| 
        MOVL      XAR0,#44              ; [CPU_] |3018| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3018| 
	.dwpsn	file "../Source/prod.c",line 3021,column 7,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3021| 
        ; call occurs [#_scia_puts] ; [] |3021| 
	.dwpsn	file "../Source/prod.c",line 3023,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3023| 
        B         $C$L486,TC            ; [CPU_] |3023| 
        ; branchcc occurs ; [] |3023| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3023| 
        B         $C$L487,UNC           ; [CPU_] |3023| 
        ; branch occurs ; [] |3023| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3023| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3023| 
        B         $C$L488,TC            ; [CPU_] |3023| 
        ; branchcc occurs ; [] |3023| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3023| 
        B         $C$L489,UNC           ; [CPU_] |3023| 
        ; branch occurs ; [] |3023| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3023| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3023| 
        B         $C$L490,TC            ; [CPU_] |3023| 
        ; branchcc occurs ; [] |3023| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3023| 
        B         $C$L491,UNC           ; [CPU_] |3023| 
        ; branch occurs ; [] |3023| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3023| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3023| 
        MOVL      XAR0,#44              ; [CPU_] |3023| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3023| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3023| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3023| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3023| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3023| 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_sprintf")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3023| 
        ; call occurs [#_sprintf] ; [] |3023| 
        MOVL      XAR0,#44              ; [CPU_] |3023| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3023| 
	.dwpsn	file "../Source/prod.c",line 3030,column 7,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3030| 
        ; call occurs [#_scia_puts] ; [] |3030| 
	.dwpsn	file "../Source/prod.c",line 3031,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3031| 
        MOVL      XAR0,#48              ; [CPU_] |3031| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3031| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3031| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3031| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3031| 
        MOVL      XAR0,#48              ; [CPU_] |3031| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3031| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3031| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3031| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3031| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3031| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |3031| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |3031| 
        MOVL      XAR4,XAR1             ; [CPU_] |3031| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_sprintf")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3031| 
        ; call occurs [#_sprintf] ; [] |3031| 
        MOVL      XAR4,XAR1             ; [CPU_] |3031| 
	.dwpsn	file "../Source/prod.c",line 3035,column 7,is_stmt,isa 0
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3035| 
        ; call occurs [#_scia_puts] ; [] |3035| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3046| 
        ; call occurs [#_ad7738_setcal] ; [] |3046| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 3043,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3043| 
	.dwpsn	file "../Source/prod.c",line 3048,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3048| 
        ; branch occurs ; [] |3048| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2934,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2934| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2934| 
        ; call occurs [#_scia_puts] ; [] |2934| 
	.dwpsn	file "../Source/prod.c",line 2926,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2926| 
        ; branch occurs ; [] |2926| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2880,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2880| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2880| 
        ; call occurs [#_scia_puts] ; [] |2880| 
	.dwpsn	file "../Source/prod.c",line 2872,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2872| 
        ; branch occurs ; [] |2872| 
$C$L498:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3352,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3352| 
        B         $C$L625,LO            ; [CPU_] |3352| 
        ; branchcc occurs ; [] |3352| 
	.dwpsn	file "../Source/prod.c",line 3355,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3355| 
        CMPB      AL,#68                ; [CPU_] |3355| 
        B         $C$L502,EQ            ; [CPU_] |3355| 
        ; branchcc occurs ; [] |3355| 
        CMPB      AL,#82                ; [CPU_] |3355| 
        B         $C$L501,EQ            ; [CPU_] |3355| 
        ; branchcc occurs ; [] |3355| 
        CMPB      AL,#87                ; [CPU_] |3355| 
        B         $C$L625,NEQ           ; [CPU_] |3355| 
        ; branchcc occurs ; [] |3355| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3359,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3359| 
        ; branchcc occurs ; [] |3359| 
	.dwpsn	file "../Source/prod.c",line 3383,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3383| 
	.dwpsn	file "../Source/prod.c",line 3385,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3385| 
        ; branch occurs ; [] |3385| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3361,column 7,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3361| 
        ; call occurs [#_lcd_clear] ; [] |3361| 
	.dwpsn	file "../Source/prod.c",line 3362,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3362| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3362| 
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3362| 
        ; call occurs [#_lcd_puts] ; [] |3362| 
	.dwpsn	file "../Source/prod.c",line 3363,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3363| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3363| 
        ; call occurs [#_scia_puts] ; [] |3363| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3366,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3366| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_delay_us")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3366| 
        ; call occurs [#_delay_us] ; [] |3366| 
	.dwpsn	file "../Source/prod.c",line 3365,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3365| 
        ; branchcc occurs ; [] |3365| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3370,column 7,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_conf_write")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3370| 
        ; call occurs [#_conf_write] ; [] |3370| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3373,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3373| 
        B         $C$L505,NEQ           ; [CPU_] |3373| 
        ; branchcc occurs ; [] |3373| 
	.dwpsn	file "../Source/prod.c",line 3374,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3374| 
	.dwpsn	file "../Source/prod.c",line 3376,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3376| 
        ; branch occurs ; [] |3376| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3390,column 6,is_stmt,isa 0
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_conf_read")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3390| 
        ; call occurs [#_conf_read] ; [] |3390| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3393,column 6,is_stmt,isa 0
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3393| 
        ; call occurs [#_ad7738_setcal] ; [] |3393| 
	.dwpsn	file "../Source/prod.c",line 3394,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3394| 
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3394| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3394| 
	.dwpsn	file "../Source/prod.c",line 3395,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3395| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3395| 
        ; call occurs [#_ad7738_resetvall] ; [] |3395| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3398,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3398| 
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3398| 
        ; call occurs [#_scia_puts] ; [] |3398| 
	.dwpsn	file "../Source/prod.c",line 3401,column 6,is_stmt,isa 0
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_update_units")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3401| 
        ; call occurs [#_update_units] ; [] |3401| 
	.dwpsn	file "../Source/prod.c",line 3399,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3399| 
	.dwpsn	file "../Source/prod.c",line 3403,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3403| 
        ; branch occurs ; [] |3403| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3407,column 6,is_stmt,isa 0
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_conf_default")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3407| 
        ; call occurs [#_conf_default] ; [] |3407| 
	.dwpsn	file "../Source/prod.c",line 3410,column 6,is_stmt,isa 0
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3410| 
        ; call occurs [#_lcd_clear] ; [] |3410| 
	.dwpsn	file "../Source/prod.c",line 3411,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3411| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3411| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3411| 
        ; call occurs [#_lcd_puts] ; [] |3411| 
	.dwpsn	file "../Source/prod.c",line 3412,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3412| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3412| 
        ; call occurs [#_scia_puts] ; [] |3412| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3415,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3415| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_delay_us")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3415| 
        ; call occurs [#_delay_us] ; [] |3415| 
	.dwpsn	file "../Source/prod.c",line 3414,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3414| 
        ; branchcc occurs ; [] |3414| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3419,column 6,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_conf_write")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3419| 
        ; call occurs [#_conf_write] ; [] |3419| 
        MOVZ      AR1,AL                ; [CPU_] |3419| 
	.dwpsn	file "../Source/prod.c",line 3420,column 6,is_stmt,isa 0
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3420| 
        ; call occurs [#_ad7738_setcal] ; [] |3420| 
	.dwpsn	file "../Source/prod.c",line 3421,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3421| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3421| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3421| 
	.dwpsn	file "../Source/prod.c",line 3422,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3422| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3422| 
        ; call occurs [#_ad7738_resetvall] ; [] |3422| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3425,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3425| 
        ; branchcc occurs ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3426,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3426| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3426| 
        ; call occurs [#_scia_puts] ; [] |3426| 
	.dwpsn	file "../Source/prod.c",line 3428,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3428| 
	.dwpsn	file "../Source/prod.c",line 3429,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3429| 
        ; branch occurs ; [] |3429| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3430,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3430| 
        SPM       #0                    ; [CPU_] 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3432,column 6,is_stmt,isa 0
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3432| 
        ; call occurs [#_lcd_clear] ; [] |3432| 
	.dwpsn	file "../Source/prod.c",line 3433,column 6,is_stmt,isa 0
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_update_units")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3433| 
        ; call occurs [#_update_units] ; [] |3433| 
	.dwpsn	file "../Source/prod.c",line 3434,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3434| 
        ; branch occurs ; [] |3434| 
$C$L507:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2459,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2459| 
        B         $C$L625,LO            ; [CPU_] |2459| 
        ; branchcc occurs ; [] |2459| 
	.dwpsn	file "../Source/prod.c",line 2462,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2462| 
        CMPB      AL,#70                ; [CPU_] |2462| 
        B         $C$L512,EQ            ; [CPU_] |2462| 
        ; branchcc occurs ; [] |2462| 
        CMPB      AL,#80                ; [CPU_] |2462| 
        B         $C$L632,NEQ           ; [CPU_] |2462| 
        ; branchcc occurs ; [] |2462| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2499,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2499| 
        MOVL      XAR0,#44              ; [CPU_] |2499| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2499| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2499| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2499| 
        MOVL      XAR4,XAR1             ; [CPU_] |2499| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_sprintf")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2499| 
        ; call occurs [#_sprintf] ; [] |2499| 
	.dwpsn	file "../Source/prod.c",line 2500,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2500| 
	.dwpsn	file "../Source/prod.c",line 2499,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2499| 
	.dwpsn	file "../Source/prod.c",line 2500,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2500| 
        MOV       AL,#1024              ; [CPU_] |2500| 
        MOVL      XAR5,XAR1             ; [CPU_] |2500| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2500| 
        ; call occurs [#_scia_getparam] ; [] |2500| 
	.dwpsn	file "../Source/prod.c",line 2501,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2501| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_atoi")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2501| 
        ; call occurs [#_atoi] ; [] |2501| 
        MOV       *-SP[57],AL           ; [CPU_] |2501| 
	.dwpsn	file "../Source/prod.c",line 2502,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2502| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2502| 
        ; call occurs [#_scia_puts] ; [] |2502| 
        MOV       AL,*-SP[57]           ; [CPU_] |2502| 
	.dwpsn	file "../Source/prod.c",line 2504,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2504| 
        CMPB      AL,#2                 ; [CPU_] |2504| 
        B         $C$L511,HIS           ; [CPU_] |2504| 
        ; branchcc occurs ; [] |2504| 
	.dwpsn	file "../Source/prod.c",line 2508,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2508| 
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2508| 
        ; call occurs [#_scia_puts] ; [] |2508| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2508| 
	.dwpsn	file "../Source/prod.c",line 2511,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2511| 
        MOVL      XAR0,#44              ; [CPU_] |2511| 
        DEC       *-SP[57]              ; [CPU_] |2511| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2511| 
        MOV       *-SP[3],AR1           ; [CPU_] |2511| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2511| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_sprintf")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2511| 
        ; call occurs [#_sprintf] ; [] |2511| 
        MOVL      XAR0,#44              ; [CPU_] |2511| 
	.dwpsn	file "../Source/prod.c",line 2512,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2512| 
	.dwpsn	file "../Source/prod.c",line 2511,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2511| 
	.dwpsn	file "../Source/prod.c",line 2512,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2512| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2512| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2512| 
        ; call occurs [#_scia_getparam] ; [] |2512| 
        MOVL      XAR0,#86              ; [CPU_] |2512| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2512| 
	.dwpsn	file "../Source/prod.c",line 2513,column 6,is_stmt,isa 0
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_atol")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2513| 
        ; call occurs [#_atol] ; [] |2513| 
        MOVL      XAR0,#86              ; [CPU_] |2513| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2513| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2513| 
	.dwpsn	file "../Source/prod.c",line 2514,column 6,is_stmt,isa 0
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2514| 
        ; call occurs [#_scia_puts] ; [] |2514| 
	.dwpsn	file "../Source/prod.c",line 2515,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2515| 
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2515| 
        ; call occurs [#_scia_puts] ; [] |2515| 
	.dwpsn	file "../Source/prod.c",line 2516,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2516| 
        B         $C$L509,NEQ           ; [CPU_] |2516| 
        ; branchcc occurs ; [] |2516| 
	.dwpsn	file "../Source/prod.c",line 2517,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2517| 
	.dwpsn	file "../Source/prod.c",line 2518,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2518| 
        ; branch occurs ; [] |2518| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2520,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2520| 
        MOVL      XAR0,#44              ; [CPU_] |2520| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2520| 
        MOV       *-SP[3],AR1           ; [CPU_] |2520| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2520| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2520| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2520| 
        MOVL      XAR4,XAR1             ; [CPU_] |2520| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_sprintf")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2520| 
        ; call occurs [#_sprintf] ; [] |2520| 
        MOVL      XAR4,XAR1             ; [CPU_] |2520| 
	.dwpsn	file "../Source/prod.c",line 2522,column 6,is_stmt,isa 0
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2522| 
        ; call occurs [#_scia_puts] ; [] |2522| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2527,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2527| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2527| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2527| 
        ADDL      ACC,XAR6              ; [CPU_] |2527| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2527| 
        ADD       ACC,#201 << 4         ; [CPU_] |2527| 
        MOVL      XAR4,ACC              ; [CPU_] |2527| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2527| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2528| 
        ; call occurs [#_ad7738_setcal] ; [] |2528| 
	.dwpsn	file "../Source/prod.c",line 2529,column 6,is_stmt,isa 0
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2529| 
        ; call occurs [#_velf_rst] ; [] |2529| 
	.dwpsn	file "../Source/prod.c",line 2531,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2531| 
        ; branch occurs ; [] |2531| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2506,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2506| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2506| 
        ; call occurs [#_scia_puts] ; [] |2506| 
	.dwpsn	file "../Source/prod.c",line 2498,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2498| 
        ; branch occurs ; [] |2498| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2469,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2469| 
        MOVL      XAR0,#44              ; [CPU_] |2469| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2469| 
        MOV       *-SP[3],#4096         ; [CPU_] |2469| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2469| 
        MOVL      XAR4,XAR1             ; [CPU_] |2469| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_sprintf")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2469| 
        ; call occurs [#_sprintf] ; [] |2469| 
	.dwpsn	file "../Source/prod.c",line 2471,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2471| 
	.dwpsn	file "../Source/prod.c",line 2469,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2469| 
	.dwpsn	file "../Source/prod.c",line 2471,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2471| 
        MOV       AL,#1024              ; [CPU_] |2471| 
        MOVL      XAR5,XAR1             ; [CPU_] |2471| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2471| 
        ; call occurs [#_scia_getparam] ; [] |2471| 
	.dwpsn	file "../Source/prod.c",line 2472,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2472| 
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_atoi")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2472| 
        ; call occurs [#_atoi] ; [] |2472| 
        MOV       *-SP[47],AL           ; [CPU_] |2472| 
	.dwpsn	file "../Source/prod.c",line 2473,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2473| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2473| 
        ; call occurs [#_scia_puts] ; [] |2473| 
        MOV       AL,*-SP[47]           ; [CPU_] |2473| 
	.dwpsn	file "../Source/prod.c",line 2475,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2475| 
        ; branchcc occurs ; [] |2475| 
        CMP       AL,#4096              ; [CPU_] |2475| 
        B         $C$L513,GT            ; [CPU_] |2475| 
        ; branchcc occurs ; [] |2475| 
	.dwpsn	file "../Source/prod.c",line 2479,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2479| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2479| 
        ; call occurs [#_scia_puts] ; [] |2479| 
	.dwpsn	file "../Source/prod.c",line 2481,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2481| 
        MOVL      XAR0,#44              ; [CPU_] |2481| 
        MOV       AL,*-SP[47]           ; [CPU_] |2481| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2481| 
        MOV       *-SP[3],AL            ; [CPU_] |2481| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2481| 
        MOVL      XAR4,XAR1             ; [CPU_] |2481| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_sprintf")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2481| 
        ; call occurs [#_sprintf] ; [] |2481| 
        MOVL      XAR4,XAR1             ; [CPU_] |2481| 
	.dwpsn	file "../Source/prod.c",line 2483,column 6,is_stmt,isa 0
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2483| 
        ; call occurs [#_scia_puts] ; [] |2483| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2488,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2488| 
        MOVL      ACC,XAR4              ; [CPU_] |2488| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2488| 
        MOVL      XAR4,ACC              ; [CPU_] |2488| 
        MOV       AL,*-SP[47]           ; [CPU_] |2488| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2488| 
	.dwpsn	file "../Source/prod.c",line 2492,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2492| 
        ; branch occurs ; [] |2492| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2477,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2477| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2477| 
        ; call occurs [#_scia_puts] ; [] |2477| 
	.dwpsn	file "../Source/prod.c",line 2468,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2468| 
        ; branch occurs ; [] |2468| 
$C$L514:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2541,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2541| 
        B         $C$L625,LO            ; [CPU_] |2541| 
        ; branchcc occurs ; [] |2541| 
	.dwpsn	file "../Source/prod.c",line 2544,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2544| 
        CMPB      AL,#83                ; [CPU_] |2544| 
        B         $C$L625,NEQ           ; [CPU_] |2544| 
        ; branchcc occurs ; [] |2544| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2551,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2551| 
        MOVL      XAR0,#44              ; [CPU_] |2551| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2551| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2551| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2551| 
        MOVL      XAR4,XAR1             ; [CPU_] |2551| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_sprintf")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2551| 
        ; call occurs [#_sprintf] ; [] |2551| 
	.dwpsn	file "../Source/prod.c",line 2552,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2552| 
	.dwpsn	file "../Source/prod.c",line 2551,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2551| 
	.dwpsn	file "../Source/prod.c",line 2552,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2552| 
        MOV       AL,#1024              ; [CPU_] |2552| 
        MOVL      XAR5,XAR1             ; [CPU_] |2552| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2552| 
        ; call occurs [#_scia_getparam] ; [] |2552| 
	.dwpsn	file "../Source/prod.c",line 2553,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2553| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_atoi")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2553| 
        ; call occurs [#_atoi] ; [] |2553| 
        MOV       *-SP[57],AL           ; [CPU_] |2553| 
	.dwpsn	file "../Source/prod.c",line 2554,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2554| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2554| 
        ; call occurs [#_scia_puts] ; [] |2554| 
        MOV       AL,*-SP[57]           ; [CPU_] |2554| 
	.dwpsn	file "../Source/prod.c",line 2556,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2556| 
        CMPB      AL,#4                 ; [CPU_] |2556| 
        B         $C$L529,HIS           ; [CPU_] |2556| 
        ; branchcc occurs ; [] |2556| 
	.dwpsn	file "../Source/prod.c",line 2560,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2560| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2560| 
        ; call occurs [#_scia_puts] ; [] |2560| 
        MOVL      XAR0,#62              ; [CPU_] |2560| 
	.dwpsn	file "../Source/prod.c",line 2564,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2564| 
	.dwpsn	file "../Source/prod.c",line 2560,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2560| 
	.dwpsn	file "../Source/prod.c",line 2564,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2564| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2565,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2565| 
        MOVL      XAR0,#44              ; [CPU_] |2565| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2565| 
        MOV       *-SP[3],AL            ; [CPU_] |2565| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2565| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2565| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2565| 
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_sprintf")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2565| 
        ; call occurs [#_sprintf] ; [] |2565| 
        MOVL      XAR0,#44              ; [CPU_] |2565| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2565| 
	.dwpsn	file "../Source/prod.c",line 2566,column 7,is_stmt,isa 0
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2566| 
        ; call occurs [#_scia_puts] ; [] |2566| 
        MOV       AL,*-SP[47]           ; [CPU_] |2566| 
	.dwpsn	file "../Source/prod.c",line 2567,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2567| 
        B         $C$L517,GEQ           ; [CPU_] |2567| 
        ; branchcc occurs ; [] |2567| 
	.dwpsn	file "../Source/prod.c",line 2568,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2568| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2568| 
        ; call occurs [#_scia_puts] ; [] |2568| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2564,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2564| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2564| 
        B         $C$L516,LT            ; [CPU_] |2564| 
        ; branchcc occurs ; [] |2564| 
	.dwpsn	file "../Source/prod.c",line 2571,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2571| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2571| 
        ; call occurs [#_scia_puts] ; [] |2571| 
	.dwpsn	file "../Source/prod.c",line 2572,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2572| 
        MOVL      XAR0,#44              ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2571,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2571| 
	.dwpsn	file "../Source/prod.c",line 2572,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2572| 
        MOV       *-SP[3],AH            ; [CPU_] |2572| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2572| 
        DEC       *-SP[57]              ; [CPU_] |2572| 
        MOV       *-SP[47],AH           ; [CPU_] |2572| 
        MOVL      XAR4,XAR1             ; [CPU_] |2572| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_sprintf")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2572| 
        ; call occurs [#_sprintf] ; [] |2572| 
	.dwpsn	file "../Source/prod.c",line 2574,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2574| 
	.dwpsn	file "../Source/prod.c",line 2572,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2574,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2574| 
        MOV       AL,#1024              ; [CPU_] |2574| 
        MOVL      XAR5,XAR1             ; [CPU_] |2574| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2574| 
        ; call occurs [#_scia_getparam] ; [] |2574| 
        MOVL      XAR4,XAR1             ; [CPU_] |2574| 
	.dwpsn	file "../Source/prod.c",line 2575,column 6,is_stmt,isa 0
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_atoi")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2575| 
        ; call occurs [#_atoi] ; [] |2575| 
        MOVZ      AR1,AL                ; [CPU_] |2575| 
        CMPB      AL,#7                 ; [CPU_] |2575| 
        B         $C$L518,LO            ; [CPU_] |2575| 
        ; branchcc occurs ; [] |2575| 
	.dwpsn	file "../Source/prod.c",line 2578,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2578| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2578| 
        ; call occurs [#_scia_puts] ; [] |2578| 
	.dwpsn	file "../Source/prod.c",line 2577,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2577| 
$C$L518:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2581,column 6,is_stmt,isa 0
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2581| 
        ; call occurs [#_scia_puts] ; [] |2581| 
	.dwpsn	file "../Source/prod.c",line 2582,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2582| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2582| 
        ; call occurs [#_scia_puts] ; [] |2582| 
	.dwpsn	file "../Source/prod.c",line 2583,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2583| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2583| 
        MOVB      AL,#3                 ; [CPU_] |2583| 
        MOV       T,*-SP[57]            ; [CPU_] |2583| 
        MPYU      ACC,T,AL              ; [CPU_] |2583| 
        ADDL      ACC,XAR6              ; [CPU_] |2583| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2583| 
        MOVL      XAR4,ACC              ; [CPU_] |2583| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2583| 
	.dwpsn	file "../Source/prod.c",line 2585,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2585| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2585| 
        CMPB      AL,#2                 ; [CPU_] |2585| 
        B         $C$L522,LOS           ; [CPU_] |2585| 
        ; branchcc occurs ; [] |2585| 
        MOV       AH,AL                 ; [CPU_] |2585| 
        ADDB      AH,#-3                ; [CPU_] |2585| 
        CMPB      AH,#1                 ; [CPU_] |2585| 
        B         $C$L521,LOS           ; [CPU_] |2585| 
        ; branchcc occurs ; [] |2585| 
        CMPB      AL,#5                 ; [CPU_] |2585| 
        B         $C$L519,EQ            ; [CPU_] |2585| 
        ; branchcc occurs ; [] |2585| 
        CMPB      AL,#6                 ; [CPU_] |2585| 
        B         $C$L584,NEQ           ; [CPU_] |2585| 
        ; branchcc occurs ; [] |2585| 
	.dwpsn	file "../Source/prod.c",line 2659,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2659| 
        MOV       AL,*-SP[47]           ; [CPU_] |2659| 
        MOVL      XAR0,#62              ; [CPU_] |2659| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2659| 
        MOV       *-SP[3],AL            ; [CPU_] |2659| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2659| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2659| 
        ADDL      ACC,XAR6              ; [CPU_] |2659| 
        MOVL      XAR4,ACC              ; [CPU_] |2659| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2659| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2662| 
        ; branch occurs ; [] |2662| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2640,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2640| 
        MOVL      XAR0,#44              ; [CPU_] |2640| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2640| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2640| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2640| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_sprintf")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2640| 
        ; call occurs [#_sprintf] ; [] |2640| 
        MOVL      XAR0,#44              ; [CPU_] |2640| 
	.dwpsn	file "../Source/prod.c",line 2641,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2641| 
	.dwpsn	file "../Source/prod.c",line 2640,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2640| 
	.dwpsn	file "../Source/prod.c",line 2641,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2641| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2641| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2641| 
        ; call occurs [#_scia_getparam] ; [] |2641| 
        MOVL      XAR0,#86              ; [CPU_] |2641| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2641| 
	.dwpsn	file "../Source/prod.c",line 2642,column 8,is_stmt,isa 0
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_atoi")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2642| 
        ; call occurs [#_atoi] ; [] |2642| 
        MOVL      XAR0,#86              ; [CPU_] |2642| 
        MOV       *-SP[58],AL           ; [CPU_] |2642| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2642| 
	.dwpsn	file "../Source/prod.c",line 2643,column 8,is_stmt,isa 0
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2643| 
        ; call occurs [#_scia_puts] ; [] |2643| 
        MOV       AL,*-SP[58]           ; [CPU_] |2643| 
	.dwpsn	file "../Source/prod.c",line 2645,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2645| 
        CMPB      AL,#4                 ; [CPU_] |2645| 
        B         $C$L520,HIS           ; [CPU_] |2645| 
        ; branchcc occurs ; [] |2645| 
	.dwpsn	file "../Source/prod.c",line 2649,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2649| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2649| 
        ; call occurs [#_scia_puts] ; [] |2649| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2653,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2653| 
        MOVL      XAR0,#62              ; [CPU_] |2653| 
	.dwpsn	file "../Source/prod.c",line 2649,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2649| 
	.dwpsn	file "../Source/prod.c",line 2651,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2653,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2653| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2653| 
        MOV       *-SP[3],AL            ; [CPU_] |2653| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2653| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2653| 
        ADDL      ACC,XAR6              ; [CPU_] |2653| 
        MOVL      XAR4,ACC              ; [CPU_] |2653| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2653| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2653| 
        MOVB      AL,#1                 ; [CPU_] |2653| 
        ADD       AL,*-SP[58]           ; [CPU_] |2653| 
        MOV       *-SP[7],AL            ; [CPU_] |2653| 
	.dwpsn	file "../Source/prod.c",line 2656,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2656| 
        ; branch occurs ; [] |2656| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2647,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2647| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2647| 
        ; call occurs [#_scia_puts] ; [] |2647| 
	.dwpsn	file "../Source/prod.c",line 2639,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2639| 
        ; branch occurs ; [] |2639| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2597,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2597| 
        B         $C$L523,UNC           ; [CPU_] |2597| 
        ; branch occurs ; [] |2597| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2591,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2591| 
$C$L523:    
        MOV       *-SP[59],AL           ; [CPU_] |2591| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2602,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2602| 
        MOV       AL,*-SP[59]           ; [CPU_] |2602| 
        MOVL      XAR0,#44              ; [CPU_] |2602| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2602| 
        MOV       *-SP[3],AL            ; [CPU_] |2602| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2602| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_sprintf")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2602| 
        ; call occurs [#_sprintf] ; [] |2602| 
        MOVL      XAR0,#44              ; [CPU_] |2602| 
	.dwpsn	file "../Source/prod.c",line 2603,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2602,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2602| 
	.dwpsn	file "../Source/prod.c",line 2603,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2603| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2603| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2603| 
        ; call occurs [#_scia_getparam] ; [] |2603| 
        MOVL      XAR0,#86              ; [CPU_] |2603| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2604,column 8,is_stmt,isa 0
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_atoi")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2604| 
        ; call occurs [#_atoi] ; [] |2604| 
        MOVL      XAR0,#86              ; [CPU_] |2604| 
        MOV       *-SP[58],AL           ; [CPU_] |2604| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2605,column 8,is_stmt,isa 0
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2605| 
        ; call occurs [#_scia_puts] ; [] |2605| 
        MOV       AL,*-SP[58]           ; [CPU_] |2605| 
	.dwpsn	file "../Source/prod.c",line 2607,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2607| 
        ; branchcc occurs ; [] |2607| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2607| 
        B         $C$L528,LO            ; [CPU_] |2607| 
        ; branchcc occurs ; [] |2607| 
	.dwpsn	file "../Source/prod.c",line 2611,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2611| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2611| 
        ; call occurs [#_scia_puts] ; [] |2611| 
	.dwpsn	file "../Source/prod.c",line 2613,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2613| 
	.dwpsn	file "../Source/prod.c",line 2611,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2611| 
	.dwpsn	file "../Source/prod.c",line 2613,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2613| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2618,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2618| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2618| 
        MOV       AL,#1024              ; [CPU_] |2618| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2618| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2618| 
        ; call occurs [#_scia_getparam] ; [] |2618| 
        MOVL      XAR0,#86              ; [CPU_] |2618| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2618| 
	.dwpsn	file "../Source/prod.c",line 2620,column 8,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_atoi")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2620| 
        ; call occurs [#_atoi] ; [] |2620| 
        MOV       *-SP[48],AL           ; [CPU_] |2620| 
        CMPB      AL,#0                 ; [CPU_] |2620| 
        B         $C$L527,LT            ; [CPU_] |2620| 
        ; branchcc occurs ; [] |2620| 
        CMPB      AL,#6                 ; [CPU_] |2620| 
        B         $C$L527,GEQ           ; [CPU_] |2620| 
        ; branchcc occurs ; [] |2620| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2626,column 7,is_stmt,isa 0
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2626| 
        ; call occurs [#_scia_puts] ; [] |2626| 
	.dwpsn	file "../Source/prod.c",line 2627,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2627| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2627| 
        ; call occurs [#_scia_puts] ; [] |2627| 
        MOV       AL,*-SP[48]           ; [CPU_] |2627| 
	.dwpsn	file "../Source/prod.c",line 2630,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2630| 
        MOVL      XAR0,#62              ; [CPU_] |2630| 
	.dwpsn	file "../Source/prod.c",line 2628,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2628| 
	.dwpsn	file "../Source/prod.c",line 2630,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2630| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2630| 
        MOV       *-SP[3],AL            ; [CPU_] |2630| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2630| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2630| 
        ADDL      ACC,XAR6              ; [CPU_] |2630| 
        MOVL      XAR4,ACC              ; [CPU_] |2630| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2630| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2630| 
        MOVB      AL,#1                 ; [CPU_] |2630| 
        ADD       AL,*-SP[58]           ; [CPU_] |2630| 
        MOV       *-SP[7],AL            ; [CPU_] |2630| 
        MOV       AL,*-SP[48]           ; [CPU_] |2630| 
        MOV       *-SP[8],AL            ; [CPU_] |2630| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2630| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2630| 
        MOVL      XAR4,XAR1             ; [CPU_] |2630| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_sprintf")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2630| 
        ; call occurs [#_sprintf] ; [] |2630| 
        MOVL      XAR4,XAR1             ; [CPU_] |2630| 
	.dwpsn	file "../Source/prod.c",line 2633,column 7,is_stmt,isa 0
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2633| 
        ; call occurs [#_scia_puts] ; [] |2633| 
	.dwpsn	file "../Source/prod.c",line 2668,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2668| 
        ; branch occurs ; [] |2668| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2624,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2624| 
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2624| 
        ; call occurs [#_scia_puts] ; [] |2624| 
	.dwpsn	file "../Source/prod.c",line 2617,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2617| 
        ; branch occurs ; [] |2617| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2609,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2609| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2609| 
        ; call occurs [#_scia_puts] ; [] |2609| 
	.dwpsn	file "../Source/prod.c",line 2601,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2601| 
        ; branch occurs ; [] |2601| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2558,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2558| 
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2558| 
        ; call occurs [#_scia_puts] ; [] |2558| 
	.dwpsn	file "../Source/prod.c",line 2550,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2550| 
        ; branch occurs ; [] |2550| 
$C$L530:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1648,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1648| 
        B         $C$L625,LO            ; [CPU_] |1648| 
        ; branchcc occurs ; [] |1648| 
	.dwpsn	file "../Source/prod.c",line 1653,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1653| 
        CMPB      AL,#86                ; [CPU_] |1653| 
        B         $C$L531,EQ            ; [CPU_] |1653| 
        ; branchcc occurs ; [] |1653| 
        CMPB      AL,#77                ; [CPU_] |1653| 
        B         $C$L531,EQ            ; [CPU_] |1653| 
        ; branchcc occurs ; [] |1653| 
        CMPB      AL,#83                ; [CPU_] |1653| 
        B         $C$L625,NEQ           ; [CPU_] |1653| 
        ; branchcc occurs ; [] |1653| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1656,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1656| 
        MOV       *-SP[47],AL           ; [CPU_] |1656| 
	.dwpsn	file "../Source/prod.c",line 1658,column 5,is_stmt,isa 0
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1658| 
        ; call occurs [#_lcd_clear] ; [] |1658| 
	.dwpsn	file "../Source/prod.c",line 1659,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1659| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1659| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1659| 
        ; call occurs [#_lcd_puts] ; [] |1659| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1665,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1665| 
        MOVL      XAR0,#44              ; [CPU_] |1665| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1665| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1665| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1665| 
        MOVL      XAR4,XAR1             ; [CPU_] |1665| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_sprintf")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1665| 
        ; call occurs [#_sprintf] ; [] |1665| 
	.dwpsn	file "../Source/prod.c",line 1666,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1666| 
	.dwpsn	file "../Source/prod.c",line 1665,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1665| 
	.dwpsn	file "../Source/prod.c",line 1666,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1666| 
        MOV       AL,#1024              ; [CPU_] |1666| 
        MOVL      XAR5,XAR1             ; [CPU_] |1666| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1666| 
        ; call occurs [#_scia_getparam] ; [] |1666| 
	.dwpsn	file "../Source/prod.c",line 1667,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1667| 
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_atoi")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1667| 
        ; call occurs [#_atoi] ; [] |1667| 
        MOV       *-SP[58],AL           ; [CPU_] |1667| 
	.dwpsn	file "../Source/prod.c",line 1668,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1668| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1668| 
        ; call occurs [#_scia_puts] ; [] |1668| 
        MOV       AL,*-SP[58]           ; [CPU_] |1668| 
	.dwpsn	file "../Source/prod.c",line 1670,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1670| 
        CMPB      AL,#4                 ; [CPU_] |1670| 
        B         $C$L590,HIS           ; [CPU_] |1670| 
        ; branchcc occurs ; [] |1670| 
	.dwpsn	file "../Source/prod.c",line 1674,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1674| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1674| 
        ; call occurs [#_scia_puts] ; [] |1674| 
	.dwpsn	file "../Source/prod.c",line 1675,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1675| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1680,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1680| 
        MOVL      XAR0,#44              ; [CPU_] |1680| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1680| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1680| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1680| 
        MOVL      XAR4,XAR1             ; [CPU_] |1680| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_sprintf")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1680| 
        ; call occurs [#_sprintf] ; [] |1680| 
	.dwpsn	file "../Source/prod.c",line 1681,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1681| 
	.dwpsn	file "../Source/prod.c",line 1680,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1680| 
	.dwpsn	file "../Source/prod.c",line 1681,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1681| 
        MOV       AL,#1024              ; [CPU_] |1681| 
        MOVL      XAR5,XAR1             ; [CPU_] |1681| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1681| 
        ; call occurs [#_scia_getparam] ; [] |1681| 
	.dwpsn	file "../Source/prod.c",line 1682,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1682| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_atoi")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1682| 
        ; call occurs [#_atoi] ; [] |1682| 
        MOV       *-SP[57],AL           ; [CPU_] |1682| 
	.dwpsn	file "../Source/prod.c",line 1683,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1683| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1683| 
        ; call occurs [#_scia_puts] ; [] |1683| 
        MOV       AL,*-SP[57]           ; [CPU_] |1683| 
	.dwpsn	file "../Source/prod.c",line 1687,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1687| 
        CMPB      AL,#20                ; [CPU_] |1687| 
        B         $C$L589,HIS           ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
	.dwpsn	file "../Source/prod.c",line 1691,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1691| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1691| 
        ; call occurs [#_scia_puts] ; [] |1691| 
	.dwpsn	file "../Source/prod.c",line 1695,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1695| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1695| 
        MOVL      XAR0,#44              ; [CPU_] |1695| 
	.dwpsn	file "../Source/prod.c",line 1691,column 5,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |1691| 
	.dwpsn	file "../Source/prod.c",line 1695,column 5,is_stmt,isa 0
        ADD       AL,*-SP[58]           ; [CPU_] |1695| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1695| 
        MOV       *-SP[3],AL            ; [CPU_] |1695| 
        MOV       *-SP[4],AH            ; [CPU_] |1695| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1695| 
        DEC       *-SP[57]              ; [CPU_] |1695| 
        MOV       *-SP[59],AH           ; [CPU_] |1695| 
        MOV       *-SP[60],AL           ; [CPU_] |1695| 
        MOVL      XAR4,XAR1             ; [CPU_] |1695| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_sprintf")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1695| 
        ; call occurs [#_sprintf] ; [] |1695| 
	.dwpsn	file "../Source/prod.c",line 1696,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1696| 
        MOVL      XAR4,XAR1             ; [CPU_] |1696| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1696| 
        ; call occurs [#_lcd_puts] ; [] |1696| 
	.dwpsn	file "../Source/prod.c",line 1700,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1700| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1700| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1700| 
        MOVL      XAR4,XAR1             ; [CPU_] |1700| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_sprintf")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1700| 
        ; call occurs [#_sprintf] ; [] |1700| 
	.dwpsn	file "../Source/prod.c",line 1701,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1701| 
        MOV       AL,#1024              ; [CPU_] |1701| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1701| 
        MOVL      XAR4,XAR1             ; [CPU_] |1701| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1701| 
        ; call occurs [#_scia_getparam] ; [] |1701| 
        CMPB      AL,#15                ; [CPU_] |1701| 
        B         $C$L534,LOS           ; [CPU_] |1701| 
        ; branchcc occurs ; [] |1701| 
	.dwpsn	file "../Source/prod.c",line 1705,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1705| 
        MOVB      XAR0,#15              ; [CPU_] |1705| 
	.dwpsn	file "../Source/prod.c",line 1704,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1704| 
	.dwpsn	file "../Source/prod.c",line 1705,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1705| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1707,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1707| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1707| 
        MOVL      XAR0,#86              ; [CPU_] |1707| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1707| 
        MOVB      AH,#1                 ; [CPU_] |1707| 
        ADD       AH,AL                 ; [CPU_] |1707| 
        MOVU      ACC,AH                ; [CPU_] |1707| 
        MOVL      XAR5,XAR1             ; [CPU_] |1707| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_memcpy")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1707| 
        ; call occurs [#_memcpy] ; [] |1707| 
        MOVL      XAR4,XAR1             ; [CPU_] |1707| 
	.dwpsn	file "../Source/prod.c",line 1708,column 5,is_stmt,isa 0
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1708| 
        ; call occurs [#_scia_puts] ; [] |1708| 
	.dwpsn	file "../Source/prod.c",line 1709,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1709| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1709| 
        ; call occurs [#_scia_puts] ; [] |1709| 
	.dwpsn	file "../Source/prod.c",line 1713,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1713| 
        MOVL      XAR0,#44              ; [CPU_] |1713| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1713| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1713| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1713| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_sprintf")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1713| 
        ; call occurs [#_sprintf] ; [] |1713| 
        MOVL      XAR0,#44              ; [CPU_] |1713| 
	.dwpsn	file "../Source/prod.c",line 1714,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1714| 
	.dwpsn	file "../Source/prod.c",line 1713,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1713| 
	.dwpsn	file "../Source/prod.c",line 1714,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1714| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1714| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1714| 
        ; call occurs [#_scia_getparam] ; [] |1714| 
        CMPB      AL,#15                ; [CPU_] |1714| 
        B         $C$L535,LOS           ; [CPU_] |1714| 
        ; branchcc occurs ; [] |1714| 
	.dwpsn	file "../Source/prod.c",line 1718,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1718| 
        MOVB      XAR0,#15              ; [CPU_] |1718| 
	.dwpsn	file "../Source/prod.c",line 1717,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1717| 
	.dwpsn	file "../Source/prod.c",line 1718,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1718| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1720,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1720| 
        MOVL      XAR0,#60              ; [CPU_] |1720| 
        MOVL      XAR5,XAR1             ; [CPU_] |1720| 
        ADD       AH,AL                 ; [CPU_] |1720| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1720| 
        MOVU      ACC,AH                ; [CPU_] |1720| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_memcpy")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1720| 
        ; call occurs [#_memcpy] ; [] |1720| 
        MOVL      XAR4,XAR1             ; [CPU_] |1720| 
	.dwpsn	file "../Source/prod.c",line 1721,column 5,is_stmt,isa 0
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1721| 
        ; call occurs [#_scia_puts] ; [] |1721| 
	.dwpsn	file "../Source/prod.c",line 1722,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1722| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1722| 
        ; call occurs [#_scia_puts] ; [] |1722| 
        MOVL      XAR0,#70              ; [CPU_] |1722| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1722| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1725,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1725| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |1725| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1726,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1726| 
        MOVL      XAR0,#88              ; [CPU_] |1726| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1726| 
        MOV       *-SP[3],AL            ; [CPU_] |1726| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1726| 
        MOVL      XAR0,#88              ; [CPU_] |1726| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1726| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1726| 
        MOVL      XAR4,XAR1             ; [CPU_] |1726| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1726| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_sprintf")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1726| 
        ; call occurs [#_sprintf] ; [] |1726| 
	.dwpsn	file "../Source/prod.c",line 1725,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1725| 
        INC       *-SP[61]              ; [CPU_] |1725| 
        MOV       AL,*-SP[61]           ; [CPU_] |1725| 
        CMPB      AL,#7                 ; [CPU_] |1725| 
        B         $C$L536,LT            ; [CPU_] |1725| 
        ; branchcc occurs ; [] |1725| 
	.dwpsn	file "../Source/prod.c",line 1728,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1728| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1728| 
        MOVB      XAR1,#54              ; [CPU_] |1728| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1728| 
	.dwpsn	file "../Source/prod.c",line 1729,column 5,is_stmt,isa 0
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1729| 
        ; call occurs [#_scia_puts] ; [] |1729| 
	.dwpsn	file "../Source/prod.c",line 1730,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1730| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1730| 
        MOV       AL,#1024              ; [CPU_] |1730| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1730| 
        MOVL      XAR5,XAR1             ; [CPU_] |1730| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1730| 
        ; call occurs [#_scia_getparam] ; [] |1730| 
        MOVL      XAR4,XAR1             ; [CPU_] |1730| 
	.dwpsn	file "../Source/prod.c",line 1732,column 5,is_stmt,isa 0
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_atoi")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1732| 
        ; call occurs [#_atoi] ; [] |1732| 
        MOVB      XAR0,#42              ; [CPU_] |1732| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1732| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1732| 
	.dwpsn	file "../Source/prod.c",line 1734,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1734| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1734| 
        CMPB      AL,#6                 ; [CPU_] |1734| 
        B         $C$L537,GT            ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
        CMPB      AL,#6                 ; [CPU_] |1734| 
        B         $C$L540,EQ            ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
        CMPB      AL,#1                 ; [CPU_] |1734| 
        B         $C$L543,LOS           ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
        MOV       AH,AL                 ; [CPU_] |1734| 
        ADDB      AH,#-2                ; [CPU_] |1734| 
        CMPB      AH,#2                 ; [CPU_] |1734| 
        B         $C$L542,LOS           ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
        CMPB      AL,#5                 ; [CPU_] |1734| 
        B         $C$L541,EQ            ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
        B         $C$L538,UNC           ; [CPU_] |1734| 
        ; branch occurs ; [] |1734| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1734| 
        ADDB      AH,#-7                ; [CPU_] |1734| 
        CMPB      AH,#1                 ; [CPU_] |1734| 
        B         $C$L539,LOS           ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
        CMPB      AL,#15                ; [CPU_] |1734| 
        B         $C$L539,EQ            ; [CPU_] |1734| 
        ; branchcc occurs ; [] |1734| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1756,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1756| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1756| 
	.dwpsn	file "../Source/prod.c",line 1757,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1757| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1757| 
        ; call occurs [#_scia_puts] ; [] |1757| 
	.dwpsn	file "../Source/prod.c",line 1758,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1758| 
        ; branch occurs ; [] |1758| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1753,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1753| 
	.dwpsn	file "../Source/prod.c",line 1754,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1754| 
        ; branch occurs ; [] |1754| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1748,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1748| 
	.dwpsn	file "../Source/prod.c",line 1749,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1749| 
        ; branch occurs ; [] |1749| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1745,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1745| 
	.dwpsn	file "../Source/prod.c",line 1746,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1746| 
        ; branch occurs ; [] |1746| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1742,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1742| 
	.dwpsn	file "../Source/prod.c",line 1743,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1743| 
        ; branch occurs ; [] |1743| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1737,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1737| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1760,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1760| 
        MOVL      XAR4,XAR7             ; [CPU_] |1760| 
        MOVB      XAR0,#43              ; [CPU_] |1760| 
        ADDB      XAR7,#42              ; [CPU_] |1760| 
        MOV       AL,*XAR7              ; [CPU_] |1760| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1760| 
	.dwpsn	file "../Source/prod.c",line 1761,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1761| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1761| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1761| 
        MOVL      XAR0,#86              ; [CPU_] |1761| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1761| 
	.dwpsn	file "../Source/prod.c",line 1763,column 5,is_stmt,isa 0
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1763| 
        ; call occurs [#_scia_puts] ; [] |1763| 
	.dwpsn	file "../Source/prod.c",line 1764,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1764| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1764| 
        ; call occurs [#_scia_puts] ; [] |1764| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1769| 
        MOVL      XAR5,XAR1             ; [CPU_] |1769| 
        MOV       AL,#1024              ; [CPU_] |1769| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1769| 
        ; call occurs [#_scia_getparam] ; [] |1769| 
        MOVL      XAR4,XAR1             ; [CPU_] |1769| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_strtod")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1770| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1770| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1770,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1770| 
	.dwpsn	file "../Source/prod.c",line 1772,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1772| 
        MOV       AH,#0                 ; [CPU_] |1772| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1772| 
        MOVL      ACC,XAR3              ; [CPU_] |1772| 
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1772| 
        ; call occurs [#FS$$CMP] ; [] |1772| 
        CMPB      AL,#0                 ; [CPU_] |1772| 
        B         $C$L588,EQ            ; [CPU_] |1772| 
        ; branchcc occurs ; [] |1772| 
	.dwpsn	file "../Source/prod.c",line 1776,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1776| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1776| 
        MOVB      XAR1,#142             ; [CPU_] |1776| 
        MOVL      XAR0,#86              ; [CPU_] |1776| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1776| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1776| 
	.dwpsn	file "../Source/prod.c",line 1777,column 5,is_stmt,isa 0
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1777| 
        ; call occurs [#_scia_puts] ; [] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1778| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1778| 
        ; call occurs [#_scia_puts] ; [] |1778| 
        MOV       AL,*-SP[58]           ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1780,column 5,is_stmt,isa 0
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_tagid")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1780| 
        ; call occurs [#_tagid] ; [] |1780| 
        MOVL      XAR0,#36              ; [CPU_] |1780| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1780| 
        MOVL      XAR4,XAR5             ; [CPU_] |1780| 
        ADDB      XAR4,#32              ; [CPU_] |1780| 
	.dwpsn	file "../Source/prod.c",line 1782,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1782| 
	.dwpsn	file "../Source/prod.c",line 1780,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1780| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1780| 
	.dwpsn	file "../Source/prod.c",line 1782,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1782| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1782| 
        MOV       *-SP[2],#0            ; [CPU_] |1782| 
        MOV       *-SP[1],#0            ; [CPU_] |1782| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1782| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1782| 
        MOVL      P,XAR4                ; [CPU_] |1782| 
        MOVL      ACC,XAR5              ; [CPU_] |1782| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1187, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1782| 
        ; call occurs [#ULL$$CMP] ; [] |1782| 
        CMPB      AL,#0                 ; [CPU_] |1782| 
        B         $C$L546,NEQ           ; [CPU_] |1782| 
        ; branchcc occurs ; [] |1782| 
	.dwpsn	file "../Source/prod.c",line 1783,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1783| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1783| 
	.dwpsn	file "../Source/prod.c",line 1784,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1784| 
        ; branch occurs ; [] |1784| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1785,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1785| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1785| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1785| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1785| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1785| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1785| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_sprintf")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1785| 
        ; call occurs [#_sprintf] ; [] |1785| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1787,column 5,is_stmt,isa 0
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1787| 
        ; call occurs [#_scia_puts] ; [] |1787| 
        MOV       AL,*-SP[47]           ; [CPU_] |1787| 
	.dwpsn	file "../Source/prod.c",line 1789,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1789| 
        B         $C$L561,EQ            ; [CPU_] |1789| 
        ; branchcc occurs ; [] |1789| 
        CMPB      AL,#83                ; [CPU_] |1789| 
        B         $C$L552,EQ            ; [CPU_] |1789| 
        ; branchcc occurs ; [] |1789| 
        CMPB      AL,#86                ; [CPU_] |1789| 
        B         $C$L618,NEQ           ; [CPU_] |1789| 
        ; branchcc occurs ; [] |1789| 
	.dwpsn	file "../Source/prod.c",line 1794,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1794| 
        MOVB      AL,#40                ; [CPU_] |1794| 
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1794| 
        ; call occurs [#_lcd_puts] ; [] |1794| 
	.dwpsn	file "../Source/prod.c",line 1796,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1796| 
        MOVB      XAR0,#36              ; [CPU_] |1796| 
	.dwpsn	file "../Source/prod.c",line 1799,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1799| 
	.dwpsn	file "../Source/prod.c",line 1796,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1796| 
	.dwpsn	file "../Source/prod.c",line 1797,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1797| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1797| 
	.dwpsn	file "../Source/prod.c",line 1799,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1799| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1799| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1799| 
        MOVL      XAR0,#70              ; [CPU_] |1799| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1799| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1799| 
        MOV       ACC,AL << 1           ; [CPU_] |1799| 
        ADDL      ACC,XAR6              ; [CPU_] |1799| 
        MOVL      XAR4,ACC              ; [CPU_] |1799| 
        MOVL      XAR0,#44              ; [CPU_] |1799| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1799| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1799| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1799| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_sprintf")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1799| 
        ; call occurs [#_sprintf] ; [] |1799| 
        MOVL      XAR0,#44              ; [CPU_] |1799| 
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1801| 
	.dwpsn	file "../Source/prod.c",line 1799,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1799| 
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1801| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1801| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1801| 
        ; call occurs [#_scia_getparam] ; [] |1801| 
        MOVL      XAR0,#86              ; [CPU_] |1801| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1801| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_strtod")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1802,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1802| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1802,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1802| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1803| 
        MOV       AH,#0                 ; [CPU_] |1803| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1803| 
        MOVL      ACC,XAR6              ; [CPU_] |1803| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1803| 
        ; call occurs [#FS$$CMP] ; [] |1803| 
        CMPB      AL,#0                 ; [CPU_] |1803| 
        B         $C$L548,NEQ           ; [CPU_] |1803| 
        ; branchcc occurs ; [] |1803| 
	.dwpsn	file "../Source/prod.c",line 1804,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1804| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1804| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1804| 
$C$L548:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1806,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1806| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1806| 
        ; call occurs [#_scia_puts] ; [] |1806| 
	.dwpsn	file "../Source/prod.c",line 1807,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1807| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1807| 
        ; call occurs [#_scia_puts] ; [] |1807| 
	.dwpsn	file "../Source/prod.c",line 1809,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1809| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1809| 
        MOVL      XAR5,XAR1             ; [CPU_] |1809| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1809| 
        ; call occurs [#_scia_getparam] ; [] |1809| 
	.dwpsn	file "../Source/prod.c",line 1812,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1812| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1812| 
        ; call occurs [#_scia_puts] ; [] |1812| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1815,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1815| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1815,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1815| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1816,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1814,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1816,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1816| 
        MOVB      ACC,#0                ; [CPU_] |1816| 
        SUBB      ACC,#1                ; [CPU_] |1816| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1816| 
        B         $C$L551,EQ            ; [CPU_] |1816| 
        ; branchcc occurs ; [] |1816| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1817,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1817| 
        ; branch occurs ; [] |1817| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1818,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1818| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_delay_us")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1818| 
        ; call occurs [#_delay_us] ; [] |1818| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1817,column 14,is_stmt,isa 0
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1817| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1817| 
        CMPB      AL,#0                 ; [CPU_] |1817| 
        B         $C$L549,EQ            ; [CPU_] |1817| 
        ; branchcc occurs ; [] |1817| 
	.dwpsn	file "../Source/prod.c",line 1821,column 7,is_stmt,isa 0
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1821| 
        ; call occurs [#_ad7738_getraw] ; [] |1821| 
	.dwpsn	file "../Source/prod.c",line 1822,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1822| 
        ADDL      XAR4,ACC              ; [CPU_] |1822| 
        MOVL      XAR0,#20              ; [CPU_] |1822| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1822| 
        MOVL      XAR0,#20              ; [CPU_] |1822| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1822| 
        ASR64     ACC:P,16              ; [CPU_] |1822| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1822| 
        MOVL      XAR0,#20              ; [CPU_] |1822| 
        ASR64     ACC:P,16              ; [CPU_] |1822| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1822| 
        MOVL      XAR0,#20              ; [CPU_] |1822| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1822| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1822| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1822| 
        MOVL      *-SP[32],P            ; [CPU_] |1822| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1822| 
	.dwpsn	file "../Source/prod.c",line 1816,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1816| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1816| 
        MOVB      ACC,#0                ; [CPU_] |1816| 
        SUBB      ACC,#1                ; [CPU_] |1816| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1816| 
        B         $C$L550,NEQ           ; [CPU_] |1816| 
        ; branchcc occurs ; [] |1816| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1824,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1824| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1824| 
        ; call occurs [#_scia_puts] ; [] |1824| 
	.dwpsn	file "../Source/prod.c",line 1826,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1826| 
        MOVL      XAR0,#52              ; [CPU_] |1826| 
        MOVL      ACC,XAR1              ; [CPU_] |1826| 
        ADDB      ACC,#96               ; [CPU_] |1826| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1826| 
        MOVL      XAR0,#40              ; [CPU_] |1826| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1826| 
        MOV       T,*-SP[58]            ; [CPU_] |1826| 
        MOVB      AL,#10                ; [CPU_] |1826| 
        MPYU      ACC,T,AL              ; [CPU_] |1826| 
        ADDL      ACC,XAR6              ; [CPU_] |1826| 
        ADDB      ACC,#42               ; [CPU_] |1826| 
        MOVL      XAR4,ACC              ; [CPU_] |1826| 
        MOVL      XAR0,#42              ; [CPU_] |1826| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1826| 
	.dwpsn	file "../Source/prod.c",line 1828,column 6,is_stmt,isa 0
        B         $C$L559,UNC           ; [CPU_] |1828| 
        ; branch occurs ; [] |1828| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1911,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1911| 
        MOVB      AL,#40                ; [CPU_] |1911| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1911| 
        ; call occurs [#_lcd_puts] ; [] |1911| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1913| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1913| 
	.dwpsn	file "../Source/prod.c",line 1916,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1916| 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1913| 
	.dwpsn	file "../Source/prod.c",line 1914,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1914| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1914| 
	.dwpsn	file "../Source/prod.c",line 1916,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1916| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1916| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1916| 
        MOVL      XAR0,#70              ; [CPU_] |1916| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1916| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1916| 
        MOV       ACC,AL << 1           ; [CPU_] |1916| 
        ADDL      ACC,XAR6              ; [CPU_] |1916| 
        MOVL      XAR4,ACC              ; [CPU_] |1916| 
        MOVL      XAR0,#44              ; [CPU_] |1916| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1916| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1916| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1916| 
        MOVL      XAR4,XAR1             ; [CPU_] |1916| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_sprintf")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1916| 
        ; call occurs [#_sprintf] ; [] |1916| 
	.dwpsn	file "../Source/prod.c",line 1919,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1919| 
	.dwpsn	file "../Source/prod.c",line 1916,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1916| 
	.dwpsn	file "../Source/prod.c",line 1919,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1919| 
        MOV       AL,#1024              ; [CPU_] |1919| 
        MOVL      XAR5,XAR1             ; [CPU_] |1919| 
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1919| 
        ; call occurs [#_scia_getparam] ; [] |1919| 
	.dwpsn	file "../Source/prod.c",line 1920,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1920| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1920| 
        ; call occurs [#_scia_puts] ; [] |1920| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_strtod")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1922,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1922| 
        MOV       AH,#0                 ; [CPU_] |1922| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1922| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1922| 
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1922| 
        ; call occurs [#FS$$CMP] ; [] |1922| 
        CMPB      AL,#0                 ; [CPU_] |1922| 
        B         $C$L553,NEQ           ; [CPU_] |1922| 
        ; branchcc occurs ; [] |1922| 
	.dwpsn	file "../Source/prod.c",line 1923,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1923| 
        MOV       AH,#16314             ; [CPU_] |1923| 
	.dwpsn	file "../Source/prod.c",line 1924,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1924| 
	.dwpsn	file "../Source/prod.c",line 1923,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1923| 
	.dwpsn	file "../Source/prod.c",line 1924,column 7,is_stmt,isa 0
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1924| 
        ; call occurs [#_scia_puts] ; [] |1924| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1926,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1926| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1926| 
        ; call occurs [#_scia_puts] ; [] |1926| 
	.dwpsn	file "../Source/prod.c",line 1928,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1928| 
        MOV       AL,#1024              ; [CPU_] |1928| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1928| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1928| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1928| 
        ; call occurs [#_scia_getparam] ; [] |1928| 
	.dwpsn	file "../Source/prod.c",line 1931,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1931| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1931| 
        ; call occurs [#_scia_puts] ; [] |1931| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1933,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1933| 
        MOV       *-SP[48],AL           ; [CPU_] |1933| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1934,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1934| 
        B         $C$L556,LEQ           ; [CPU_] |1934| 
        ; branchcc occurs ; [] |1934| 
	.dwpsn	file "../Source/prod.c",line 1936,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1936| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1936| 
        ; call occurs [#_shunt_switch] ; [] |1936| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1938,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1938| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_delay_us")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1938| 
        ; call occurs [#_delay_us] ; [] |1938| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1938| 
	.dwpsn	file "../Source/prod.c",line 1937,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1937| 
        MOVZ      AR0,AR6               ; [CPU_] |1937| 
        MOV       *-SP[47],AR6          ; [CPU_] |1937| 
        CMP       AR0,#-1               ; [CPU_] |1937| 
        B         $C$L555,NEQ           ; [CPU_] |1937| 
        ; branchcc occurs ; [] |1937| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1941,column 8,is_stmt,isa 0
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1941| 
        ; call occurs [#_maf_rst] ; [] |1941| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1943,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1943| 
        SPM       #0                    ; [CPU_] 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_delay_us")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1943| 
        ; call occurs [#_delay_us] ; [] |1943| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1946,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1946| 
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1947| 
	.dwpsn	file "../Source/prod.c",line 1946,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1946| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1946| 
	.dwpsn	file "../Source/prod.c",line 1948,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1948| 
	.dwpsn	file "../Source/prod.c",line 1947,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1947| 
	.dwpsn	file "../Source/prod.c",line 1948,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1948| 
        MOVB      ACC,#0                ; [CPU_] |1948| 
        SUBB      ACC,#1                ; [CPU_] |1948| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1948| 
        B         $C$L558,EQ            ; [CPU_] |1948| 
        ; branchcc occurs ; [] |1948| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1949,column 15,is_stmt,isa 0
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1949| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1949| 
        CMPB      AL,#0                 ; [CPU_] |1949| 
        B         $C$L560,EQ            ; [CPU_] |1949| 
        ; branchcc occurs ; [] |1949| 
	.dwpsn	file "../Source/prod.c",line 1953,column 8,is_stmt,isa 0
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1953| 
        ; call occurs [#_ad7738_getraw] ; [] |1953| 
	.dwpsn	file "../Source/prod.c",line 1954,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1954| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1954| 
        ADDL      XAR4,ACC              ; [CPU_] |1954| 
        MOVL      XAR0,#18              ; [CPU_] |1954| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1954| 
        MOVL      XAR0,#18              ; [CPU_] |1954| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1954| 
        ASR64     ACC:P,16              ; [CPU_] |1954| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1954| 
        MOVL      XAR0,#18              ; [CPU_] |1954| 
        ASR64     ACC:P,16              ; [CPU_] |1954| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1954| 
        MOVL      XAR0,#18              ; [CPU_] |1954| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1954| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1954| 
        MOVL      XAR0,#18              ; [CPU_] |1954| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1954| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1954| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1954| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1954| 
	.dwpsn	file "../Source/prod.c",line 1948,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1948| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1948| 
        MOVB      ACC,#0                ; [CPU_] |1948| 
        SUBB      ACC,#1                ; [CPU_] |1948| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1948| 
        B         $C$L557,NEQ           ; [CPU_] |1948| 
        ; branchcc occurs ; [] |1948| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1933,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1933| 
        ADDB      XAR1,#4               ; [CPU_] |1933| 
        MOV       AL,*-SP[48]           ; [CPU_] |1933| 
        CMPB      AL,#2                 ; [CPU_] |1933| 
        B         $C$L554,LT            ; [CPU_] |1933| 
        ; branchcc occurs ; [] |1933| 
	.dwpsn	file "../Source/prod.c",line 1958,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1958| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1958| 
        ; call occurs [#_shunt_switch] ; [] |1958| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1960| 
        ; call occurs [#_maf_rst] ; [] |1960| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1963,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1963| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1963| 
        ; call occurs [#_scia_puts] ; [] |1963| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1965| 
        MOVB      AL,#10                ; [CPU_] |1965| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1965| 
        MOV       T,*-SP[58]            ; [CPU_] |1965| 
        MPYU      ACC,T,AL              ; [CPU_] |1965| 
        MOVL      XAR0,#88              ; [CPU_] |1965| 
        ADDL      ACC,XAR6              ; [CPU_] |1965| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1965| 
        MOV       AL,#16384             ; [CPU_] |1965| 
        MOV       AH,#17948             ; [CPU_] |1965| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1965| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1965| 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1965| 
        ; call occurs [#FS$$MPY] ; [] |1965| 
        MOVL      XAR3,ACC              ; [CPU_] |1965| 
        MOVL      P,*-SP[28]            ; [CPU_] |1965| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1965| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1965| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1965| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1965| 
        ; call occurs [#LL$$TOFS] ; [] |1965| 
        MOVL      XAR0,#88              ; [CPU_] |1965| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1965| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1965| 
        MOVB      XAR1,#44              ; [CPU_] |1965| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1965| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1965| 
        ; call occurs [#FS$$MPY] ; [] |1965| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1965| 
        MOVL      ACC,XAR3              ; [CPU_] |1965| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1965| 
        ; call occurs [#FS$$DIV] ; [] |1965| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1965| 
        MOVB      XAR0,#96              ; [CPU_] |1965| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1965| 
	.dwpsn	file "../Source/prod.c",line 1967,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1967| 
        MOVL      ACC,XAR1              ; [CPU_] |1967| 
        ADDB      ACC,#96               ; [CPU_] |1967| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1967| 
        MOVL      XAR0,#88              ; [CPU_] |1967| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1967| 
        MOVL      XAR0,#42              ; [CPU_] |1967| 
        ADDB      XAR4,#42              ; [CPU_] |1967| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1967| 
$C$L559:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1967| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1967| 
        ; call occurs [#FS$$NEG] ; [] |1967| 
        MOVB      XAR0,#96              ; [CPU_] |1967| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1967| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1967| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1967| 
        ; call occurs [#FS$$MPY] ; [] |1967| 
        MOVL      XAR0,#88              ; [CPU_] |1967| 
        MOVL      P,*-SP[32]            ; [CPU_] |1967| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1967| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1967| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1967| 
        ; call occurs [#LL$$TOFS] ; [] |1967| 
        MOVL      XAR0,#88              ; [CPU_] |1967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1967| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1967| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1967| 
        ; call occurs [#FS$$MPY] ; [] |1967| 
        MOVL      XAR6,ACC              ; [CPU_] |1967| 
        MOV       AL,#16384             ; [CPU_] |1967| 
        MOV       AH,#17948             ; [CPU_] |1967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1967| 
        MOVL      ACC,XAR6              ; [CPU_] |1967| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1967| 
        ; call occurs [#FS$$DIV] ; [] |1967| 
        MOVB      XAR0,#118             ; [CPU_] |1967| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1967| 
	.dwpsn	file "../Source/prod.c",line 1969,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |1969| 
        ; branch occurs ; [] |1969| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1950,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1950| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_delay_us")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1950| 
        ; call occurs [#_delay_us] ; [] |1950| 
	.dwpsn	file "../Source/prod.c",line 1949,column 15,is_stmt,isa 0
        B         $C$L557,UNC           ; [CPU_] |1949| 
        ; branch occurs ; [] |1949| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1832,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1832| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1837| 
        MOVL      XAR0,#44              ; [CPU_] |1837| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1837| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1837| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1837| 
        MOVL      XAR4,XAR1             ; [CPU_] |1837| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_sprintf")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1837| 
        ; call occurs [#_sprintf] ; [] |1837| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1838| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1838| 
        MOV       AL,#1024              ; [CPU_] |1838| 
        MOVL      XAR5,XAR1             ; [CPU_] |1838| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1838| 
        ; call occurs [#_scia_getparam] ; [] |1838| 
        MOVL      XAR4,XAR1             ; [CPU_] |1838| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_atoi")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1839| 
        ; call occurs [#_atoi] ; [] |1839| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1839| 
        MOVB      XAR0,#46              ; [CPU_] |1839| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1839| 
        MOVL      XAR0,#86              ; [CPU_] |1839| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1840,column 7,is_stmt,isa 0
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1840| 
        ; call occurs [#_scia_puts] ; [] |1840| 
	.dwpsn	file "../Source/prod.c",line 1842,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1842| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1842| 
        CMPB      AL,#2                 ; [CPU_] |1842| 
        B         $C$L587,LT            ; [CPU_] |1842| 
        ; branchcc occurs ; [] |1842| 
        CMPB      AL,#12                ; [CPU_] |1842| 
        B         $C$L587,GT            ; [CPU_] |1842| 
        ; branchcc occurs ; [] |1842| 
	.dwpsn	file "../Source/prod.c",line 1847,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1847| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1847| 
        ; call occurs [#_scia_puts] ; [] |1847| 
	.dwpsn	file "../Source/prod.c",line 1849,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1849| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1849| 
        MOVL      XAR0,#44              ; [CPU_] |1849| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1849| 
        ADDB      XAR7,#46              ; [CPU_] |1849| 
        MOV       AL,*XAR7              ; [CPU_] |1849| 
        MOV       *-SP[3],AL            ; [CPU_] |1849| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1849| 
        MOVL      XAR4,XAR1             ; [CPU_] |1849| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_sprintf")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1849| 
        ; call occurs [#_sprintf] ; [] |1849| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1850| 
	.dwpsn	file "../Source/prod.c",line 1849,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1849| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1850| 
        ; call occurs [#_lcd_puts] ; [] |1850| 
	.dwpsn	file "../Source/prod.c",line 1853,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1853| 
	.dwpsn	file "../Source/prod.c",line 1853,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1853| 
	.dwpsn	file "../Source/prod.c",line 1853,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1853| 
        ; branch occurs ; [] |1853| 
$C$L563:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1854,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1854| 
        SUB       AL,*-SP[47]           ; [CPU_] |1854| 
        ADDB      AL,#1                 ; [CPU_] |1854| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1854| 
        ; call occurs [#I$$TOFS] ; [] |1854| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1854| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1854| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1854| 
        ; call occurs [#FS$$MPY] ; [] |1854| 
        MOVL      XAR0,#88              ; [CPU_] |1854| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1854| 
        MOV       AL,*-SP[47]           ; [CPU_] |1854| 
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1854| 
        ; call occurs [#I$$TOFS] ; [] |1854| 
        MOVL      XAR0,#88              ; [CPU_] |1854| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1854| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1854| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1854| 
        ; call occurs [#FS$$DIV] ; [] |1854| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1854| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1854| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1854| 
        ADDL      ACC,XAR1              ; [CPU_] |1854| 
        MOVL      XAR4,ACC              ; [CPU_] |1854| 
        MOVB      XAR0,#48              ; [CPU_] |1854| 
	.dwpsn	file "../Source/prod.c",line 1853,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1853| 
	.dwpsn	file "../Source/prod.c",line 1854,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1854| 
	.dwpsn	file "../Source/prod.c",line 1853,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1853| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1853,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1853| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1853| 
        MOV       *-SP[47],AL           ; [CPU_] |1853| 
        CMP       AL,*-SP[48]           ; [CPU_] |1853| 
        B         $C$L563,GT            ; [CPU_] |1853| 
        ; branchcc occurs ; [] |1853| 
	.dwpsn	file "../Source/prod.c",line 1859,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1859| 
        B         $C$L567,UNC           ; [CPU_] |1859| 
        ; branch occurs ; [] |1859| 
$C$L565:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1860| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1860| 
        MOVL      XAR0,#44              ; [CPU_] |1860| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1860| 
        ADDL      ACC,XAR1              ; [CPU_] |1860| 
        ADDB      ACC,#48               ; [CPU_] |1860| 
        MOVL      XAR1,ACC              ; [CPU_] |1860| 
        MOVB      AL,#1                 ; [CPU_] |1860| 
        ADD       AL,AR6                ; [CPU_] |1860| 
        MOV       *-SP[3],AL            ; [CPU_] |1860| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1860| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1860| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1860| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_sprintf")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1860| 
        ; call occurs [#_sprintf] ; [] |1860| 
        MOVL      XAR0,#44              ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1862,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1862| 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1862,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1862| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1862| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1862| 
        ; call occurs [#_scia_getparam] ; [] |1862| 
        CMPB      AL,#0                 ; [CPU_] |1862| 
        B         $C$L566,EQ            ; [CPU_] |1862| 
        ; branchcc occurs ; [] |1862| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("_strtod")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1866,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1866| 
$C$L566:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1868,column 7,is_stmt,isa 0
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1868| 
        ; call occurs [#_scia_puts] ; [] |1868| 
	.dwpsn	file "../Source/prod.c",line 1869,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1869| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1869| 
        ; call occurs [#_scia_puts] ; [] |1869| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1859,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1859| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1859,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1859| 
        B         $C$L565,GT            ; [CPU_] |1859| 
        ; branchcc occurs ; [] |1859| 
	.dwpsn	file "../Source/prod.c",line 1875,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1875| 
        B         $C$L572,UNC           ; [CPU_] |1875| 
        ; branch occurs ; [] |1875| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1876,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1876| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1876| 
        ADDL      ACC,XAR1              ; [CPU_] |1876| 
        ADDB      ACC,#48               ; [CPU_] |1876| 
        MOVL      XAR1,ACC              ; [CPU_] |1876| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1876| 
        MOVL      XAR0,#70              ; [CPU_] |1876| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1876| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1876| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1876| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1876| 
        ANDB      AL,#0x0f              ; [CPU_] |1876| 
        MOV       ACC,AL << 1           ; [CPU_] |1876| 
        ADDL      ACC,XAR7              ; [CPU_] |1876| 
        MOVL      XAR4,ACC              ; [CPU_] |1876| 
        MOVL      XAR0,#44              ; [CPU_] |1876| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1876| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1876| 
        MOVB      AL,#1                 ; [CPU_] |1876| 
        ADD       AL,AR6                ; [CPU_] |1876| 
        MOV       *-SP[7],AL            ; [CPU_] |1876| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1876| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_sprintf")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1876| 
        ; call occurs [#_sprintf] ; [] |1876| 
        MOVL      XAR0,#44              ; [CPU_] |1876| 
	.dwpsn	file "../Source/prod.c",line 1880,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1880| 
	.dwpsn	file "../Source/prod.c",line 1876,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1876| 
	.dwpsn	file "../Source/prod.c",line 1880,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1880| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1880| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1880| 
        ; call occurs [#_scia_getparam] ; [] |1880| 
	.dwpsn	file "../Source/prod.c",line 1881,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1881| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1881| 
        ; call occurs [#_scia_puts] ; [] |1881| 
	.dwpsn	file "../Source/prod.c",line 1883,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1883| 
	.dwpsn	file "../Source/prod.c",line 1884,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1884| 
	.dwpsn	file "../Source/prod.c",line 1883,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1883| 
	.dwpsn	file "../Source/prod.c",line 1884,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1884| 
	.dwpsn	file "../Source/prod.c",line 1883,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1883| 
	.dwpsn	file "../Source/prod.c",line 1885,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1885| 
	.dwpsn	file "../Source/prod.c",line 1883,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1883| 
	.dwpsn	file "../Source/prod.c",line 1885,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1885| 
        MOVB      ACC,#0                ; [CPU_] |1885| 
        SUBB      ACC,#1                ; [CPU_] |1885| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1885| 
        B         $C$L571,EQ            ; [CPU_] |1885| 
        ; branchcc occurs ; [] |1885| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1886,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1886| 
        ; branch occurs ; [] |1886| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1887,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1887| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("_delay_us")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1887| 
        ; call occurs [#_delay_us] ; [] |1887| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1886,column 15,is_stmt,isa 0
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1886| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1886| 
        CMPB      AL,#0                 ; [CPU_] |1886| 
        B         $C$L569,EQ            ; [CPU_] |1886| 
        ; branchcc occurs ; [] |1886| 
	.dwpsn	file "../Source/prod.c",line 1890,column 8,is_stmt,isa 0
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1890| 
        ; call occurs [#_ad7738_getraw] ; [] |1890| 
	.dwpsn	file "../Source/prod.c",line 1891,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1891| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1891| 
        ADDL      XAR4,ACC              ; [CPU_] |1891| 
        MOVL      XAR0,#16              ; [CPU_] |1891| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1891| 
        MOVL      XAR0,#16              ; [CPU_] |1891| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1891| 
        ASR64     ACC:P,16              ; [CPU_] |1891| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1891| 
        MOVL      XAR0,#16              ; [CPU_] |1891| 
        ASR64     ACC:P,16              ; [CPU_] |1891| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1891| 
        MOVL      XAR0,#16              ; [CPU_] |1891| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1891| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1891| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1891| 
        MOVL      *-SP[32],P            ; [CPU_] |1891| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1891| 
	.dwpsn	file "../Source/prod.c",line 1885,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1885| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1885| 
        MOVB      ACC,#0                ; [CPU_] |1885| 
        SUBB      ACC,#1                ; [CPU_] |1885| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1885| 
        B         $C$L570,NEQ           ; [CPU_] |1885| 
        ; branchcc occurs ; [] |1885| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1893,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1893| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1893| 
        ; call occurs [#_scia_puts] ; [] |1893| 
	.dwpsn	file "../Source/prod.c",line 1894,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1894| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1894| 
        MOV       *-SP[2],#0            ; [CPU_] |1894| 
        MOV       *-SP[1],#0            ; [CPU_] |1894| 
        MOVL      P,*-SP[32]            ; [CPU_] |1894| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1894| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1894| 
        ; call occurs [#LL$$DIV] ; [] |1894| 
        ADDB      XAR1,#24              ; [CPU_] |1894| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1894| 
	.dwpsn	file "../Source/prod.c",line 1875,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1875| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1875,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1875| 
        B         $C$L568,GT            ; [CPU_] |1875| 
        ; branchcc occurs ; [] |1875| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1898,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1898| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1898| 
        ; branch occurs ; [] |1898| 
$C$L573:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1899,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1899| 
        ADDL      XAR1,ACC              ; [CPU_] |1899| 
        MOVB      XAR0,#48              ; [CPU_] |1899| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1899| 
        MOVB      XAR0,#50              ; [CPU_] |1899| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1899| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1899| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1899| 
        ; call occurs [#FS$$SUB] ; [] |1899| 
        MOVL      XAR0,#88              ; [CPU_] |1899| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1899| 
        MOVB      XAR0,#74              ; [CPU_] |1899| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1899| 
        MOVB      XAR0,#72              ; [CPU_] |1899| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1899| 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1899| 
        ; call occurs [#L$$TOFS] ; [] |1899| 
        MOVL      XAR0,#88              ; [CPU_] |1899| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1899| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1899| 
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1899| 
        ; call occurs [#FS$$DIV] ; [] |1899| 
        MOVL      XAR0,#42              ; [CPU_] |1899| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1899| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1899| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1899| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1899| 
        ; call occurs [#FS$$DIV] ; [] |1899| 
        MOVB      XAR0,#96              ; [CPU_] |1899| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1899| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1903| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1903| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1903| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1903| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1903| 
        ; call occurs [#FS$$MPY] ; [] |1903| 
        MOVL      XAR0,#88              ; [CPU_] |1903| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1903| 
        MOVB      XAR0,#72              ; [CPU_] |1903| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1903| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1903| 
        ; call occurs [#L$$TOFS] ; [] |1903| 
        MOVL      XAR0,#88              ; [CPU_] |1903| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1903| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1903| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1903| 
        ; call occurs [#FS$$MPY] ; [] |1903| 
        MOVB      XAR0,#48              ; [CPU_] |1903| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1903| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1903| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1903| 
        ; call occurs [#FS$$SUB] ; [] |1903| 
        MOVB      XAR0,#118             ; [CPU_] |1903| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1903| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1898,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1898| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1907,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1907| 
        CMP       AL,*-SP[48]           ; [CPU_] |1907| 
        B         $C$L573,GT            ; [CPU_] |1907| 
        ; branchcc occurs ; [] |1907| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 1978,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1978| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1978| 
        MOV       AL,#1024              ; [CPU_] |1978| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1978| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1978| 
        ; call occurs [#_scia_getparam] ; [] |1978| 
	.dwpsn	file "../Source/prod.c",line 1981,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1981| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1981| 
        ; call occurs [#_scia_puts] ; [] |1981| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1983,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1983| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |1983| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 1984,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1984| 
        B         $C$L578,LEQ           ; [CPU_] |1984| 
        ; branchcc occurs ; [] |1984| 
	.dwpsn	file "../Source/prod.c",line 1986,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1986| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1986| 
        ; call occurs [#_shunt_switch] ; [] |1986| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 1988,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1988| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_delay_us")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1988| 
        ; call occurs [#_delay_us] ; [] |1988| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1988| 
	.dwpsn	file "../Source/prod.c",line 1987,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1987| 
        MOVZ      AR0,AR6               ; [CPU_] |1987| 
        MOV       *-SP[47],AR6          ; [CPU_] |1987| 
        CMP       AR0,#-1               ; [CPU_] |1987| 
        B         $C$L577,NEQ           ; [CPU_] |1987| 
        ; branchcc occurs ; [] |1987| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1991,column 7,is_stmt,isa 0
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1991| 
        ; call occurs [#_maf_rst] ; [] |1991| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1993,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1993| 
        SPM       #0                    ; [CPU_] 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_delay_us")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1993| 
        ; call occurs [#_delay_us] ; [] |1993| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 1996,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |1996| 
	.dwpsn	file "../Source/prod.c",line 1997,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1997| 
	.dwpsn	file "../Source/prod.c",line 1996,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |1996| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1996| 
	.dwpsn	file "../Source/prod.c",line 1998,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1998| 
	.dwpsn	file "../Source/prod.c",line 1997,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1997| 
	.dwpsn	file "../Source/prod.c",line 1998,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1998| 
        MOVB      ACC,#0                ; [CPU_] |1998| 
        SUBB      ACC,#1                ; [CPU_] |1998| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1998| 
        B         $C$L580,EQ            ; [CPU_] |1998| 
        ; branchcc occurs ; [] |1998| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1999,column 14,is_stmt,isa 0
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1999| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1999| 
        CMPB      AL,#0                 ; [CPU_] |1999| 
        B         $C$L586,EQ            ; [CPU_] |1999| 
        ; branchcc occurs ; [] |1999| 
	.dwpsn	file "../Source/prod.c",line 2003,column 7,is_stmt,isa 0
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2003| 
        ; call occurs [#_ad7738_getraw] ; [] |2003| 
	.dwpsn	file "../Source/prod.c",line 2004,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2004| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2004| 
        ADDL      XAR4,ACC              ; [CPU_] |2004| 
        MOVL      XAR0,#14              ; [CPU_] |2004| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2004| 
        MOVL      XAR0,#14              ; [CPU_] |2004| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2004| 
        ASR64     ACC:P,16              ; [CPU_] |2004| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2004| 
        MOVL      XAR0,#14              ; [CPU_] |2004| 
        ASR64     ACC:P,16              ; [CPU_] |2004| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2004| 
        MOVL      XAR0,#14              ; [CPU_] |2004| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |2004| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2004| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |2004| 
        MOVL      *+XAR3[0],P           ; [CPU_] |2004| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2004| 
	.dwpsn	file "../Source/prod.c",line 1998,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1998| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1998| 
        MOVB      ACC,#0                ; [CPU_] |1998| 
        SUBB      ACC,#1                ; [CPU_] |1998| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1998| 
        B         $C$L579,NEQ           ; [CPU_] |1998| 
        ; branchcc occurs ; [] |1998| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2006,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2006| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2006| 
        MOV       *-SP[2],#0            ; [CPU_] |2006| 
        MOV       *-SP[1],#0            ; [CPU_] |2006| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |2006| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |2006| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2006| 
        ; call occurs [#LL$$DIV] ; [] |2006| 
	.dwpsn	file "../Source/prod.c",line 2009,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2009| 
        MOVB      XAR0,#46              ; [CPU_] |2009| 
	.dwpsn	file "../Source/prod.c",line 2006,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2006| 
	.dwpsn	file "../Source/prod.c",line 2008,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2008| 
	.dwpsn	file "../Source/prod.c",line 2006,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2006| 
	.dwpsn	file "../Source/prod.c",line 2009,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2009| 
        CMPB      AL,#2                 ; [CPU_] |2009| 
        B         $C$L583,LEQ           ; [CPU_] |2009| 
        ; branchcc occurs ; [] |2009| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2010,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |2010| 
        ; branch occurs ; [] |2010| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2011,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2011| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2010,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2010| 
        B         $C$L583,HIS           ; [CPU_] |2010| 
        ; branchcc occurs ; [] |2010| 
        MOVB      AL,#1                 ; [CPU_] |2010| 
        ADD       AL,AR4                ; [CPU_] |2010| 
        MOVZ      AR5,AL                ; [CPU_] |2010| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2010| 
        ADDL      ACC,XAR1              ; [CPU_] |2010| 
        MOVL      XAR6,ACC              ; [CPU_] |2010| 
        MOVB      XAR0,#72              ; [CPU_] |2010| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2010| 
        MOVL      XAR0,#12              ; [CPU_] |2010| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2010| 
        MOVL      XAR0,#12              ; [CPU_] |2010| 
        ASR64     ACC:P,16              ; [CPU_] |2010| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2010| 
        MOVL      XAR0,#12              ; [CPU_] |2010| 
        ASR64     ACC:P,16              ; [CPU_] |2010| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2010| 
        MOVL      *-SP[4],P             ; [CPU_] |2010| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2010| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2010| 
        MOVL      P,*-SP[32]            ; [CPU_] |2010| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1273, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2010| 
        ; call occurs [#LL$$CMP] ; [] |2010| 
        CMPB      AL,#0                 ; [CPU_] |2010| 
        B         $C$L581,GT            ; [CPU_] |2010| 
        ; branchcc occurs ; [] |2010| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2014,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2014| 
        ADDL      ACC,XAR1              ; [CPU_] |2014| 
        MOVL      XAR4,ACC              ; [CPU_] |2014| 
        MOVL      XAR0,#88              ; [CPU_] |2014| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2014| 
        MOVB      XAR0,#96              ; [CPU_] |2014| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2014| 
        MOVL      XAR0,#42              ; [CPU_] |2014| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2014| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2014| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2014| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2014| 
        ; call occurs [#FS$$MPY] ; [] |2014| 
        MOVL      XAR0,#36              ; [CPU_] |2014| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2014| 
        MOVL      P,*XAR3++             ; [CPU_] |2014| 
        MOVL      ACC,*XAR3++           ; [CPU_] |2014| 
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2014| 
        ; call occurs [#LL$$TOFS] ; [] |2014| 
        MOVL      XAR0,#36              ; [CPU_] |2014| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2014| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2014| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2014| 
        ; call occurs [#FS$$MPY] ; [] |2014| 
        MOVL      XAR0,#88              ; [CPU_] |2014| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2014| 
        MOVB      XAR1,#118             ; [CPU_] |2014| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |2014| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2014| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2014| 
        ; call occurs [#FS$$ADD] ; [] |2014| 
        MOVL      XAR0,#38              ; [CPU_] |2014| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2014| 
        MOVL      XAR0,#38              ; [CPU_] |2014| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2014| 
	.dwpsn	file "../Source/prod.c",line 1983,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 2014,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2014| 
        MOV       AL,*-SP[48]           ; [CPU_] |2014| 
	.dwpsn	file "../Source/prod.c",line 1983,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1983| 
        B         $C$L576,LT            ; [CPU_] |1983| 
        ; branchcc occurs ; [] |1983| 
	.dwpsn	file "../Source/prod.c",line 2018,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2018| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2018| 
        ; call occurs [#_shunt_switch] ; [] |2018| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2020,column 5,is_stmt,isa 0
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2020| 
        ; call occurs [#_maf_rst] ; [] |2020| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2023,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2023| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2023| 
        ; call occurs [#_scia_puts] ; [] |2023| 
	.dwpsn	file "../Source/prod.c",line 2025,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2025| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2025| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2025| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2025| 
        ; call occurs [#FS$$SUB] ; [] |2025| 
        MOVL      XAR0,#36              ; [CPU_] |2025| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2025| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2025| 
        MOVB      XAR0,#140             ; [CPU_] |2025| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2025| 
	.dwpsn	file "../Source/prod.c",line 2028,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2028| 
        MOV       AL,#0                 ; [CPU_] |2028| 
        MOV       AH,#0                 ; [CPU_] |2028| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2028| 
	.dwpsn	file "../Source/prod.c",line 2029,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2029| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2029| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2029| 
	.dwpsn	file "../Source/prod.c",line 2030,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2030| 
        MOV       AL,#0                 ; [CPU_] |2030| 
        MOV       AH,#0                 ; [CPU_] |2030| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2030| 
	.dwpsn	file "../Source/prod.c",line 2031,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2031| 
        MOV       AL,*-SP[58]           ; [CPU_] |2031| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2031| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2034,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2034| 
        MOVB      AL,#152               ; [CPU_] |2034| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2034| 
        MOV       T,*-SP[57]            ; [CPU_] |2034| 
        MOVL      XAR7,XAR4             ; [CPU_] |2034| 
        MPYU      ACC,T,AL              ; [CPU_] |2034| 
        ADDL      ACC,XAR6              ; [CPU_] |2034| 
        ADDB      ACC,#82               ; [CPU_] |2034| 
        MOVL      XAR5,ACC              ; [CPU_] |2034| 
        MOVL      XAR0,#42              ; [CPU_] |2034| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2034| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2034| 
        MOV       AL,*-SP[57]           ; [CPU_] |2034| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2037,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2037| 
	.dwpsn	file "../Source/prod.c",line 2039,column 5,is_stmt,isa 0
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2039| 
        ; call occurs [#_ad7738_setcal] ; [] |2039| 
        MOVL      XAR0,#78              ; [CPU_] |2039| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2039| 
	.dwpsn	file "../Source/prod.c",line 2040,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2040| 
        MOVL      XAR1,ACC              ; [CPU_] |2040| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2040| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2040| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2040| 
	.dwpsn	file "../Source/prod.c",line 2041,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2041| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2041| 
        ; call occurs [#_ad7738_resetvall] ; [] |2041| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2044,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2044| 
        MOV       AL,*-SP[60]           ; [CPU_] |2044| 
        MOVL      XAR0,#44              ; [CPU_] |2044| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2044| 
        MOV       *-SP[3],AL            ; [CPU_] |2044| 
        MOV       AL,*-SP[59]           ; [CPU_] |2044| 
        MOV       *-SP[4],AL            ; [CPU_] |2044| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2044| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2044| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("_sprintf")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2044| 
        ; call occurs [#_sprintf] ; [] |2044| 
        MOVL      XAR4,XAR1             ; [CPU_] |2044| 
	.dwpsn	file "../Source/prod.c",line 2046,column 5,is_stmt,isa 0
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2046| 
        ; call occurs [#_scia_puts] ; [] |2046| 
        MOV       AL,*-SP[57]           ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2047,column 5,is_stmt,isa 0
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2047| 
        ; call occurs [#_print_sensor] ; [] |2047| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2050,column 5,is_stmt,isa 0
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2050| 
        ; call occurs [#_lcd_clear] ; [] |2050| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2051,column 5,is_stmt,isa 0
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("_update_units")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2051| 
        ; call occurs [#_update_units] ; [] |2051| 
	.dwpsn	file "../Source/prod.c",line 2052,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2052| 
        ; branch occurs ; [] |2052| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 2000,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2000| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_delay_us")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2000| 
        ; call occurs [#_delay_us] ; [] |2000| 
	.dwpsn	file "../Source/prod.c",line 1999,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |1999| 
        ; branch occurs ; [] |1999| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1844,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1844| 
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1844| 
        ; call occurs [#_scia_puts] ; [] |1844| 
	.dwpsn	file "../Source/prod.c",line 1836,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1836| 
        ; branch occurs ; [] |1836| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1774,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1774| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1774| 
        ; call occurs [#_scia_puts] ; [] |1774| 
	.dwpsn	file "../Source/prod.c",line 1768,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1768| 
        ; branch occurs ; [] |1768| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1689,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1689| 
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1689| 
        ; call occurs [#_scia_puts] ; [] |1689| 
	.dwpsn	file "../Source/prod.c",line 1679,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1679| 
        ; branch occurs ; [] |1679| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1672,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1672| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1672| 
        ; call occurs [#_scia_puts] ; [] |1672| 
	.dwpsn	file "../Source/prod.c",line 1664,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1664| 
        ; branch occurs ; [] |1664| 
$C$L591:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1386,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1386| 
        B         $C$L625,LO            ; [CPU_] |1386| 
        ; branchcc occurs ; [] |1386| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1390,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1390| 
        CMPB      AL,#67                ; [CPU_] |1390| 
        B         $C$L592,EQ            ; [CPU_] |1390| 
        ; branchcc occurs ; [] |1390| 
        CMPB      AL,#68                ; [CPU_] |1390| 
        B         $C$L625,NEQ           ; [CPU_] |1390| 
        ; branchcc occurs ; [] |1390| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1395,column 5,is_stmt,isa 0
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_atoi")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1395| 
        ; call occurs [#_atoi] ; [] |1395| 
        MOV       *-SP[58],AL           ; [CPU_] |1395| 
	.dwpsn	file "../Source/prod.c",line 1397,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1397| 
        CMPB      AL,#4                 ; [CPU_] |1397| 
        B         $C$L625,HIS           ; [CPU_] |1397| 
        ; branchcc occurs ; [] |1397| 
	.dwpsn	file "../Source/prod.c",line 1402,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1402| 
        MOV       AH,#0                 ; [CPU_] |1402| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1402| 
	.dwpsn	file "../Source/prod.c",line 1403,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1403| 
        MOV       AH,#0                 ; [CPU_] |1403| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1403| 
        MOV       AL,*-SP[59]           ; [CPU_] |1403| 
	.dwpsn	file "../Source/prod.c",line 1404,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1404| 
        B         $C$L596,LOS           ; [CPU_] |1404| 
        ; branchcc occurs ; [] |1404| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1404,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1404| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1405,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1405| 
        CMPB      AL,#88                ; [CPU_] |1405| 
        B         $C$L594,NEQ           ; [CPU_] |1405| 
        ; branchcc occurs ; [] |1405| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_strtod")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1407,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1407| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1410,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1410| 
        B         $C$L595,NEQ           ; [CPU_] |1410| 
        ; branchcc occurs ; [] |1410| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_strtod")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1412,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1412| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1404,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1404| 
        MOV       AL,*-SP[59]           ; [CPU_] |1404| 
        ADDB      XAR1,#1               ; [CPU_] |1404| 
        CMP       AL,*-SP[47]           ; [CPU_] |1404| 
        B         $C$L593,HI            ; [CPU_] |1404| 
        ; branchcc occurs ; [] |1404| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1417,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1417| 
	.dwpsn	file "../Source/prod.c",line 1400,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1400| 
	.dwpsn	file "../Source/prod.c",line 1417,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1417| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1417| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1417| 
        ; call occurs [#FS$$CMP] ; [] |1417| 
        CMPB      AL,#0                 ; [CPU_] |1417| 
        B         $C$L625,EQ            ; [CPU_] |1417| 
        ; branchcc occurs ; [] |1417| 
	.dwpsn	file "../Source/prod.c",line 1421,column 5,is_stmt,isa 0
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1421| 
        ; call occurs [#_lcd_clear] ; [] |1421| 
	.dwpsn	file "../Source/prod.c",line 1422,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1422| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1422| 
        MOVL      XAR0,#44              ; [CPU_] |1422| 
        ADD       AL,*-SP[58]           ; [CPU_] |1422| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1422| 
        MOVZ      AR1,AL                ; [CPU_] |1422| 
        MOV       *-SP[59],AL           ; [CPU_] |1422| 
        MOV       *-SP[3],AL            ; [CPU_] |1422| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1422| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_sprintf")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1422| 
        ; call occurs [#_sprintf] ; [] |1422| 
        MOVL      XAR0,#44              ; [CPU_] |1422| 
	.dwpsn	file "../Source/prod.c",line 1423,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1423| 
	.dwpsn	file "../Source/prod.c",line 1422,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1422| 
	.dwpsn	file "../Source/prod.c",line 1423,column 5,is_stmt,isa 0
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1423| 
        ; call occurs [#_lcd_puts] ; [] |1423| 
	.dwpsn	file "../Source/prod.c",line 1424,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1424| 
        MOVL      XAR0,#44              ; [CPU_] |1424| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1424| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1424| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1424| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1424| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_sprintf")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1424| 
        ; call occurs [#_sprintf] ; [] |1424| 
        MOVL      XAR0,#44              ; [CPU_] |1424| 
	.dwpsn	file "../Source/prod.c",line 1425,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1425| 
	.dwpsn	file "../Source/prod.c",line 1424,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1424| 
	.dwpsn	file "../Source/prod.c",line 1425,column 5,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1425| 
        ; call occurs [#_lcd_puts] ; [] |1425| 
	.dwpsn	file "../Source/prod.c",line 1426,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1426| 
        MOVL      XAR0,#44              ; [CPU_] |1426| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1426| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1426| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1426| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1426| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_sprintf")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1426| 
        ; call occurs [#_sprintf] ; [] |1426| 
        MOVL      XAR0,#44              ; [CPU_] |1426| 
	.dwpsn	file "../Source/prod.c",line 1427,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1427| 
	.dwpsn	file "../Source/prod.c",line 1426,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1426| 
	.dwpsn	file "../Source/prod.c",line 1427,column 5,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1427| 
        ; call occurs [#_lcd_puts] ; [] |1427| 
	.dwpsn	file "../Source/prod.c",line 1429,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1429| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1429| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1429| 
        MOVL      XAR0,#38              ; [CPU_] |1429| 
        ADDB      ACC,#1                ; [CPU_] |1429| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1429| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1429| 
        CMPB      AL,#67                ; [CPU_] |1429| 
        B         $C$L619,EQ            ; [CPU_] |1429| 
        ; branchcc occurs ; [] |1429| 
        CMPB      AL,#68                ; [CPU_] |1429| 
        B         $C$L625,NEQ           ; [CPU_] |1429| 
        ; branchcc occurs ; [] |1429| 
	.dwpsn	file "../Source/prod.c",line 1482,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1482| 
        MOV       AH,#16672             ; [CPU_] |1482| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1482| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1482| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1482| 
        ; call occurs [#FS$$CMP] ; [] |1482| 
        CMPB      AL,#0                 ; [CPU_] |1482| 
        B         $C$L618,GT            ; [CPU_] |1482| 
        ; branchcc occurs ; [] |1482| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1482| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1482| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1482| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1482| 
        ; call occurs [#FS$$CMP] ; [] |1482| 
        CMPB      AL,#0                 ; [CPU_] |1482| 
        B         $C$L618,LT            ; [CPU_] |1482| 
        ; branchcc occurs ; [] |1482| 
        MOV       AL,#0                 ; [CPU_] |1482| 
        MOV       AH,#16672             ; [CPU_] |1482| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1482| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1482| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1482| 
        ; call occurs [#FS$$CMP] ; [] |1482| 
        CMPB      AL,#0                 ; [CPU_] |1482| 
        B         $C$L618,GT            ; [CPU_] |1482| 
        ; branchcc occurs ; [] |1482| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1482| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1482| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1482| 
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1482| 
        ; call occurs [#FS$$CMP] ; [] |1482| 
        CMPB      AL,#0                 ; [CPU_] |1482| 
        B         $C$L618,LT            ; [CPU_] |1482| 
        ; branchcc occurs ; [] |1482| 
	.dwpsn	file "../Source/prod.c",line 1490,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1490| 
        MOVB      AL,#0                 ; [CPU_] |1490| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1490| 
        ; call occurs [#_lcd_puts] ; [] |1490| 
	.dwpsn	file "../Source/prod.c",line 1492,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1492| 
        MOVL      XAR0,#44              ; [CPU_] |1492| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1492| 
        MOV       *-SP[3],AR1           ; [CPU_] |1492| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1492| 
        MOVL      XAR4,XAR1             ; [CPU_] |1492| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_sprintf")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1492| 
        ; call occurs [#_sprintf] ; [] |1492| 
        MOVL      XAR4,XAR1             ; [CPU_] |1492| 
	.dwpsn	file "../Source/prod.c",line 1495,column 6,is_stmt,isa 0
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1495| 
        ; call occurs [#_scia_puts] ; [] |1495| 
	.dwpsn	file "../Source/prod.c",line 1496,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1496| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1496| 
        ; call occurs [#_scia_puts] ; [] |1496| 
	.dwpsn	file "../Source/prod.c",line 1497,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1497| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1497| 
        ; call occurs [#_dac_setmode] ; [] |1497| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1500,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1500| 
	.dwpsn	file "../Source/prod.c",line 1501,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1501| 
        MOV       AH,#0                 ; [CPU_] |1501| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1501| 
        MOVL      ACC,XAR1              ; [CPU_] |1501| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1501| 
        ; call occurs [#FS$$CMP] ; [] |1501| 
        CMPB      AL,#0                 ; [CPU_] |1501| 
        B         $C$L598,GEQ           ; [CPU_] |1501| 
        ; branchcc occurs ; [] |1501| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1501| 
        MOVL      XAR0,#88              ; [CPU_] |1501| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1501| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1501| 
        B         $C$L599,UNC           ; [CPU_] |1501| 
        ; branch occurs ; [] |1501| 
$C$L598:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1501| 
        MOVL      XAR0,#88              ; [CPU_] |1501| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1501| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1501| 
$C$L599:    
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1501| 
        ; call occurs [#FS$$MPY] ; [] |1501| 
        MOVL      XAR0,#88              ; [CPU_] |1501| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1501| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1501| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1501| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1501| 
        ; call occurs [#FS$$ADD] ; [] |1501| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1501| 
        ; call occurs [#FS$$TOLL] ; [] |1501| 
	.dwpsn	file "../Source/prod.c",line 1507,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1507| 
	.dwpsn	file "../Source/prod.c",line 1501,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1501| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1501| 
	.dwpsn	file "../Source/prod.c",line 1507,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1507| 
        CMP64     ACC:P                 ; [CPU_] |1507| 
        B         $C$L601,LEQ           ; [CPU_] |1507| 
        ; branchcc occurs ; [] |1507| 
	.dwpsn	file "../Source/prod.c",line 1509,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1509| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1509| 
        MOV       *-SP[2],#0            ; [CPU_] |1509| 
        MOV       *-SP[1],#0            ; [CPU_] |1509| 
        MOVL      P,*-SP[32]            ; [CPU_] |1509| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1509| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1319, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1509| 
        ; call occurs [#LL$$CMP] ; [] |1509| 
        CMPB      AL,#0                 ; [CPU_] |1509| 
        B         $C$L600,GEQ           ; [CPU_] |1509| 
        ; branchcc occurs ; [] |1509| 
	.dwpsn	file "../Source/prod.c",line 1512,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1512| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1512| 
        MOV       AL,*-SP[32]           ; [CPU_] |1512| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1512| 
        B         $C$L602,UNC           ; [CPU_] |1512| 
        ; branch occurs ; [] |1512| 
$C$L600:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1510,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1510| 
	.dwpsn	file "../Source/prod.c",line 1511,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1511| 
        ; branch occurs ; [] |1511| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1508,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1508| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1515,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1515| 
        MOVL      XAR0,#44              ; [CPU_] |1515| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1515| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1515| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1515| 
        MOVL      XAR4,XAR1             ; [CPU_] |1515| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("_sprintf")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1515| 
        ; call occurs [#_sprintf] ; [] |1515| 
        MOVL      XAR4,XAR1             ; [CPU_] |1515| 
	.dwpsn	file "../Source/prod.c",line 1516,column 7,is_stmt,isa 0
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1516| 
        ; call occurs [#_scia_puts] ; [] |1516| 
	.dwpsn	file "../Source/prod.c",line 1517,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1517| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1517| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1520,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1520| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1520| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1520| 
        ; call occurs [#_mcbsp_xmit] ; [] |1520| 
	.dwpsn	file "../Source/prod.c",line 1521,column 8,is_stmt,isa 0
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1521| 
        ; call occurs [#_latch_dac] ; [] |1521| 
	.dwpsn	file "../Source/prod.c",line 1524,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1524| 
        MOVL      XAR4,XAR1             ; [CPU_] |1524| 
        MOVL      XAR5,XAR1             ; [CPU_] |1524| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1524| 
        ; call occurs [#_scia_getparam] ; [] |1524| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1526,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1526| 
        CMPB      AL,#45                ; [CPU_] |1526| 
        B         $C$L604,EQ            ; [CPU_] |1526| 
        ; branchcc occurs ; [] |1526| 
        CMPB      AL,#83                ; [CPU_] |1526| 
        B         $C$L609,EQ            ; [CPU_] |1526| 
        ; branchcc occurs ; [] |1526| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1533,column 8,is_stmt,isa 0
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_atoi")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1533| 
        ; call occurs [#_atoi] ; [] |1533| 
        CMPB      AL,#0                 ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1535,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1535| 
	.dwpsn	file "../Source/prod.c",line 1538,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1538| 
        CMPB      AH,#43                ; [CPU_] |1538| 
        B         $C$L605,EQ            ; [CPU_] |1538| 
        ; branchcc occurs ; [] |1538| 
	.dwpsn	file "../Source/prod.c",line 1545,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1545| 
        B         $C$L608,NEQ           ; [CPU_] |1545| 
        ; branchcc occurs ; [] |1545| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1547,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1547| 
        B         $C$L606,HI            ; [CPU_] |1547| 
        ; branchcc occurs ; [] |1547| 
	.dwpsn	file "../Source/prod.c",line 1548,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1548| 
	.dwpsn	file "../Source/prod.c",line 1549,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1549| 
        ; branch occurs ; [] |1549| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1540,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1540| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1540| 
        MOV       AH,#65535             ; [CPU_] |1540| 
        SUB       AH,AL                 ; [CPU_] |1540| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1540| 
        B         $C$L607,HIS           ; [CPU_] |1540| 
        ; branchcc occurs ; [] |1540| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1543,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1543| 
        B         $C$L608,UNC           ; [CPU_] |1543| 
        ; branch occurs ; [] |1543| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1541,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1541| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1519| 
        B         $C$L603,NEQ           ; [CPU_] |1519| 
        ; branchcc occurs ; [] |1519| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1555,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1555| 
        MOVL      XAR0,#86              ; [CPU_] |1555| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1555| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1555| 
        MOVL      XAR0,#86              ; [CPU_] |1555| 
        MOV       AL,*XAR7              ; [CPU_] |1555| 
        MOV       *-SP[3],AL            ; [CPU_] |1555| 
        ADDB      XAR7,#1               ; [CPU_] |1555| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1555| 
        MOVL      XAR0,#44              ; [CPU_] |1555| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1555| 
        MOVL      XAR4,XAR1             ; [CPU_] |1555| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_sprintf")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1555| 
        ; call occurs [#_sprintf] ; [] |1555| 
        MOVL      XAR4,XAR1             ; [CPU_] |1555| 
	.dwpsn	file "../Source/prod.c",line 1556,column 7,is_stmt,isa 0
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1556| 
        ; call occurs [#_scia_puts] ; [] |1556| 
	.dwpsn	file "../Source/prod.c",line 1499,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1499| 
	.dwpsn	file "../Source/prod.c",line 1556,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1556| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1556| 
	.dwpsn	file "../Source/prod.c",line 1499,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1499| 
        SUBB      XAR6,#1               ; [CPU_U] |1499| 
        ADDB      ACC,#2                ; [CPU_] |1499| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1499| 
        MOVZ      AR0,AR6               ; [CPU_] |1499| 
        MOV       *-SP[47],AR6          ; [CPU_] |1499| 
        CMP       AR0,#-1               ; [CPU_] |1499| 
        B         $C$L597,NEQ           ; [CPU_] |1499| 
        ; branchcc occurs ; [] |1499| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1559,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1559| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1559| 
        ; call occurs [#FS$$TOU] ; [] |1559| 
        MOV       *-SP[33],AL           ; [CPU_] |1559| 
	.dwpsn	file "../Source/prod.c",line 1561,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1561| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1561| 
        ; call occurs [#_scia_puts] ; [] |1561| 
	.dwpsn	file "../Source/prod.c",line 1562,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1562| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1562| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1562| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1562| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1565,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1565| 
        MOV       AH,*-SP[48]           ; [CPU_] |1565| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1565| 
        ; call occurs [#_mcbsp_xmit] ; [] |1565| 
	.dwpsn	file "../Source/prod.c",line 1566,column 7,is_stmt,isa 0
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1566| 
        ; call occurs [#_latch_dac] ; [] |1566| 
        MOVL      XAR0,#86              ; [CPU_] |1566| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1566| 
	.dwpsn	file "../Source/prod.c",line 1569,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1569| 
        MOVL      XAR4,XAR5             ; [CPU_] |1569| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1569| 
        ; call occurs [#_scia_getparam] ; [] |1569| 
	.dwpsn	file "../Source/prod.c",line 1574,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1574| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1574| 
        CMPB      AL,#83                ; [CPU_] |1574| 
        B         $C$L615,EQ            ; [CPU_] |1574| 
        ; branchcc occurs ; [] |1574| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1577,column 7,is_stmt,isa 0
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_atoi")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1577| 
        ; call occurs [#_atoi] ; [] |1577| 
        CMPB      AL,#0                 ; [CPU_] |1577| 
	.dwpsn	file "../Source/prod.c",line 1582,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1582| 
	.dwpsn	file "../Source/prod.c",line 1579,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1579| 
	.dwpsn	file "../Source/prod.c",line 1582,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1582| 
        CMPB      AH,#43                ; [CPU_] |1582| 
        B         $C$L611,EQ            ; [CPU_] |1582| 
        ; branchcc occurs ; [] |1582| 
	.dwpsn	file "../Source/prod.c",line 1589,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1589| 
        B         $C$L614,NEQ           ; [CPU_] |1589| 
        ; branchcc occurs ; [] |1589| 
	.dwpsn	file "../Source/prod.c",line 1591,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1591| 
        B         $C$L612,HI            ; [CPU_] |1591| 
        ; branchcc occurs ; [] |1591| 
	.dwpsn	file "../Source/prod.c",line 1592,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1592| 
	.dwpsn	file "../Source/prod.c",line 1593,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1593| 
        ; branch occurs ; [] |1593| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1584,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1584| 
        SUB       AH,AL                 ; [CPU_] |1584| 
        CMP       AH,*-SP[33]           ; [CPU_] |1584| 
        B         $C$L613,HIS           ; [CPU_] |1584| 
        ; branchcc occurs ; [] |1584| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1587,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1587| 
        B         $C$L614,UNC           ; [CPU_] |1587| 
        ; branch occurs ; [] |1587| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1585,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1585| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1564,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1564| 
        B         $C$L610,NEQ           ; [CPU_] |1564| 
        ; branchcc occurs ; [] |1564| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1599,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1599| 
        MOV       AL,*-SP[33]           ; [CPU_] |1599| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1599| 
        MOV       *-SP[3],AL            ; [CPU_] |1599| 
        MOVL      XAR4,XAR1             ; [CPU_] |1599| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_sprintf")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1599| 
        ; call occurs [#_sprintf] ; [] |1599| 
        MOVL      XAR4,XAR1             ; [CPU_] |1599| 
	.dwpsn	file "../Source/prod.c",line 1600,column 6,is_stmt,isa 0
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1600| 
        ; call occurs [#_scia_puts] ; [] |1600| 
	.dwpsn	file "../Source/prod.c",line 1603,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1603| 
        MOV       AH,#0                 ; [CPU_] |1603| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1603| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1603| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1603| 
        ; call occurs [#FS$$CMP] ; [] |1603| 
        CMPB      AL,#0                 ; [CPU_] |1603| 
        B         $C$L616,LT            ; [CPU_] |1603| 
        ; branchcc occurs ; [] |1603| 
	.dwpsn	file "../Source/prod.c",line 1609,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1609| 
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1609| 
        ; call occurs [#U$$TOFS] ; [] |1609| 
        MOVL      XAR1,ACC              ; [CPU_] |1609| 
        MOV       AL,*-SP[35]           ; [CPU_] |1609| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1609| 
        ; call occurs [#U$$TOFS] ; [] |1609| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1609| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1609| 
        ; call occurs [#FS$$SUB] ; [] |1609| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1609| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1609| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1609| 
        ; call occurs [#FS$$DIV] ; [] |1609| 
        MOVL      XAR0,#88              ; [CPU_] |1609| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1609| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1609| 
	.dwpsn	file "../Source/prod.c",line 1611,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1611| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1611| 
        ; call occurs [#U$$TOFS] ; [] |1611| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1611| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1611| 
        ; call occurs [#FS$$SUB] ; [] |1611| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1611| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1611| 
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1611| 
        ; call occurs [#FS$$DIV] ; [] |1611| 
        MOVL      XAR0,#88              ; [CPU_] |1611| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1611| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1611| 
        B         $C$L617,UNC           ; [CPU_] |1611| 
        ; branch occurs ; [] |1611| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1604,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1604| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1604| 
        ; call occurs [#U$$TOFS] ; [] |1604| 
        MOVL      XAR1,ACC              ; [CPU_] |1604| 
        MOV       AL,*-SP[35]           ; [CPU_] |1604| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1604| 
        ; call occurs [#U$$TOFS] ; [] |1604| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1604| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1604| 
        ; call occurs [#FS$$SUB] ; [] |1604| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1604| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1604| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1604| 
        ; call occurs [#FS$$DIV] ; [] |1604| 
        MOVL      XAR0,#88              ; [CPU_] |1604| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1604| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1604| 
	.dwpsn	file "../Source/prod.c",line 1606,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1606| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1606| 
        ; call occurs [#U$$TOFS] ; [] |1606| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1606| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1606| 
        ; call occurs [#FS$$SUB] ; [] |1606| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1606| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1606| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1606| 
        ; call occurs [#FS$$DIV] ; [] |1606| 
        MOVL      XAR0,#88              ; [CPU_] |1606| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1606| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1606| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1614,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1614| 
	.dwpsn	file "../Source/prod.c",line 1616,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1616| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1616| 
        ; call occurs [#_dac_setmode] ; [] |1616| 
	.dwpsn	file "../Source/prod.c",line 1618,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1618| 
        MOVL      XAR0,#88              ; [CPU_] |1618| 
        MOV       AL,*-SP[59]           ; [CPU_] |1618| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1618| 
        MOV       *-SP[3],AL            ; [CPU_] |1618| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1618| 
        MOVL      XAR0,#44              ; [CPU_] |1618| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1618| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1618| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1618| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1618| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1618| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1618| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1618| 
        MOVL      XAR4,XAR1             ; [CPU_] |1618| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_sprintf")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1618| 
        ; call occurs [#_sprintf] ; [] |1618| 
        MOVL      XAR4,XAR1             ; [CPU_] |1618| 
	.dwpsn	file "../Source/prod.c",line 1622,column 6,is_stmt,isa 0
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1622| 
        ; call occurs [#_scia_puts] ; [] |1622| 
	.dwpsn	file "../Source/prod.c",line 1624,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1624| 
	.dwpsn	file "../Source/prod.c",line 1625,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1625| 
        ; branch occurs ; [] |1625| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1484,column 7,is_stmt,isa 0
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1484| 
        ; call occurs [#_lcd_clear] ; [] |1484| 
	.dwpsn	file "../Source/prod.c",line 1485,column 7,is_stmt,isa 0
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_update_units")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1485| 
        ; call occurs [#_update_units] ; [] |1485| 
	.dwpsn	file "../Source/prod.c",line 1486,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1486| 
        ; branch occurs ; [] |1486| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1434,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1434| 
        MOVB      AL,#0                 ; [CPU_] |1434| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1434| 
        ; call occurs [#_lcd_puts] ; [] |1434| 
	.dwpsn	file "../Source/prod.c",line 1436,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1436| 
        MOVL      XAR0,#44              ; [CPU_] |1436| 
        MOV       AL,*-SP[59]           ; [CPU_] |1436| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1436| 
        MOV       *-SP[3],AL            ; [CPU_] |1436| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1436| 
        MOVL      XAR4,XAR1             ; [CPU_] |1436| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_sprintf")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1436| 
        ; call occurs [#_sprintf] ; [] |1436| 
        MOVL      XAR4,XAR1             ; [CPU_] |1436| 
	.dwpsn	file "../Source/prod.c",line 1439,column 6,is_stmt,isa 0
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1439| 
        ; call occurs [#_scia_puts] ; [] |1439| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1452,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1452| 
        MOVL      XAR0,#42              ; [CPU_] |1452| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1452| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1452| 
        MOVL      XAR0,#44              ; [CPU_] |1452| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1452| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1452| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1452| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_sprintf")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1452| 
        ; call occurs [#_sprintf] ; [] |1452| 
        MOVL      XAR0,#44              ; [CPU_] |1452| 
	.dwpsn	file "../Source/prod.c",line 1455,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1455| 
	.dwpsn	file "../Source/prod.c",line 1452,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1452| 
	.dwpsn	file "../Source/prod.c",line 1455,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1455| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1455| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1455| 
        ; call occurs [#_scia_getparam] ; [] |1455| 
	.dwpsn	file "../Source/prod.c",line 1456,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1456| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1456| 
        ; call occurs [#_scia_puts] ; [] |1456| 
	.dwpsn	file "../Source/prod.c",line 1459,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1459| 
	.dwpsn	file "../Source/prod.c",line 1458,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1458| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1458| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1458| 
	.dwpsn	file "../Source/prod.c",line 1460,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1460| 
	.dwpsn	file "../Source/prod.c",line 1459,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1459| 
	.dwpsn	file "../Source/prod.c",line 1460,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1460| 
        MOVB      ACC,#0                ; [CPU_] |1460| 
        SUBB      ACC,#1                ; [CPU_] |1460| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1460| 
        B         $C$L622,EQ            ; [CPU_] |1460| 
        ; branchcc occurs ; [] |1460| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1461,column 15,is_stmt,isa 0
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1461| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1461| 
        CMPB      AL,#0                 ; [CPU_] |1461| 
        B         $C$L624,EQ            ; [CPU_] |1461| 
        ; branchcc occurs ; [] |1461| 
	.dwpsn	file "../Source/prod.c",line 1464,column 8,is_stmt,isa 0
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1464| 
        ; call occurs [#_ad7738_getraw] ; [] |1464| 
	.dwpsn	file "../Source/prod.c",line 1465,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1465| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1465| 
        ADDL      XAR4,ACC              ; [CPU_] |1465| 
        MOVL      XAR0,#10              ; [CPU_] |1465| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1465| 
        MOVL      XAR0,#10              ; [CPU_] |1465| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1465| 
        ASR64     ACC:P,16              ; [CPU_] |1465| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1465| 
        MOVL      XAR0,#10              ; [CPU_] |1465| 
        ASR64     ACC:P,16              ; [CPU_] |1465| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1465| 
        MOVL      XAR0,#10              ; [CPU_] |1465| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1465| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1465| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1465| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1465| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1465| 
	.dwpsn	file "../Source/prod.c",line 1460,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1460| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1460| 
        MOVB      ACC,#0                ; [CPU_] |1460| 
        SUBB      ACC,#1                ; [CPU_] |1460| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1460| 
        B         $C$L621,NEQ           ; [CPU_] |1460| 
        ; branchcc occurs ; [] |1460| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1468,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1468| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1468| 
        ; call occurs [#_scia_puts] ; [] |1468| 
	.dwpsn	file "../Source/prod.c",line 1451,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1451| 
        MOVL      XAR0,#42              ; [CPU_] |1451| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1451| 
        MOVL      XAR0,#42              ; [CPU_] |1451| 
        SUBB      XAR6,#1               ; [CPU_U] |1451| 
        ADDB      ACC,#2                ; [CPU_] |1451| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1451| 
        MOVZ      AR0,AR6               ; [CPU_] |1451| 
        MOV       *-SP[47],AR6          ; [CPU_] |1451| 
        ADDB      XAR1,#4               ; [CPU_] |1451| 
        CMP       AR0,#-1               ; [CPU_] |1451| 
        B         $C$L620,NEQ           ; [CPU_] |1451| 
        ; branchcc occurs ; [] |1451| 
	.dwpsn	file "../Source/prod.c",line 1471,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1471| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1471| 
        MOVB      AL,#10                ; [CPU_] |1471| 
        MOV       T,*-SP[58]            ; [CPU_] |1471| 
        MPYU      ACC,T,AL              ; [CPU_] |1471| 
        ADDL      ACC,XAR6              ; [CPU_] |1471| 
        MOVL      XAR1,ACC              ; [CPU_] |1471| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1471| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1471| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1471| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1471| 
        ; call occurs [#FS$$SUB] ; [] |1471| 
        MOVL      XAR6,ACC              ; [CPU_] |1471| 
        MOV       AL,#16384             ; [CPU_] |1471| 
        MOV       AH,#17948             ; [CPU_] |1471| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1471| 
        MOVL      ACC,XAR6              ; [CPU_] |1471| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1471| 
        ; call occurs [#FS$$MPY] ; [] |1471| 
        MOVL      XAR0,#88              ; [CPU_] |1471| 
        MOVL      P,*-SP[28]            ; [CPU_] |1471| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1471| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1471| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1471| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1471| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1471| 
        ; call occurs [#LL$$TOFS] ; [] |1471| 
        MOVL      XAR0,#88              ; [CPU_] |1471| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1471| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1471| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1471| 
        ; call occurs [#FS$$DIV] ; [] |1471| 
        MOVB      XAR0,#44              ; [CPU_] |1471| 
	.dwpsn	file "../Source/prod.c",line 1474,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1474| 
	.dwpsn	file "../Source/prod.c",line 1471,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1471| 
	.dwpsn	file "../Source/prod.c",line 1474,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1474| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1474| 
        MOV       AL,*-SP[59]           ; [CPU_] |1474| 
        MOV       *-SP[3],AL            ; [CPU_] |1474| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1474| 
        MOVL      XAR0,#44              ; [CPU_] |1474| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1474| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1474| 
        MOVL      XAR4,XAR1             ; [CPU_] |1474| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_sprintf")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1474| 
        ; call occurs [#_sprintf] ; [] |1474| 
        MOVL      XAR4,XAR1             ; [CPU_] |1474| 
	.dwpsn	file "../Source/prod.c",line 1476,column 6,is_stmt,isa 0
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1476| 
        ; call occurs [#_scia_puts] ; [] |1476| 
	.dwpsn	file "../Source/prod.c",line 1477,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1477| 
$C$L623:    
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1477| 
        ; call occurs [#_scia_puts] ; [] |1477| 
	.dwpsn	file "../Source/prod.c",line 1632,column 5,is_stmt,isa 0
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1632| 
        ; call occurs [#_lcd_clear] ; [] |1632| 
	.dwpsn	file "../Source/prod.c",line 1633,column 5,is_stmt,isa 0
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_update_units")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1633| 
        ; call occurs [#_update_units] ; [] |1633| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1636,column 5,is_stmt,isa 0
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1636| 
        ; call occurs [#_ad7738_setcal] ; [] |1636| 
        MOVL      XAR0,#78              ; [CPU_] |1636| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1636| 
	.dwpsn	file "../Source/prod.c",line 1637,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1637| 
        MOVL      XAR1,ACC              ; [CPU_] |1637| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1637| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1637| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1637| 
	.dwpsn	file "../Source/prod.c",line 1638,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1638| 
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1638| 
        ; call occurs [#_ad7738_resetvall] ; [] |1638| 
	.dwpsn	file "../Source/prod.c",line 1640,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1640| 
        ; branch occurs ; [] |1640| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1462,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1462| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_delay_us")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1462| 
        ; call occurs [#_delay_us] ; [] |1462| 
	.dwpsn	file "../Source/prod.c",line 1461,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1461| 
        ; branch occurs ; [] |1461| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3591,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3591| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3591| 
        ; call occurs [#_scia_puts] ; [] |3591| 
        MOVL      XAR0,#86              ; [CPU_] |3591| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3591| 
	.dwpsn	file "../Source/prod.c",line 3592,column 5,is_stmt,isa 0
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3592| 
        ; call occurs [#_scia_puts] ; [] |3592| 
	.dwpsn	file "../Source/prod.c",line 3593,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3593| 
	.dwpsn	file "../Source/prod.c",line 3594,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3594| 
        ; branch occurs ; [] |3594| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3552,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3552| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3552| 
        ; call occurs [#_scia_puts] ; [] |3552| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3556,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3556| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_delay_us")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3556| 
        ; call occurs [#_delay_us] ; [] |3556| 
	.dwpsn	file "../Source/prod.c",line 3554,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3554| 
        ; branchcc occurs ; [] |3554| 
	.dwpsn	file "../Source/prod.c",line 3559,column 5,is_stmt,isa 0
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_reboot")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3559| 
        ; call occurs [#_reboot] ; [] |3559| 
	.dwpsn	file "../Source/prod.c",line 3560,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3560| 
        ; branch occurs ; [] |3560| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3536,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3536| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3536| 
        ; call occurs [#_scia_puts] ; [] |3536| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3540,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3540| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_delay_us")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3540| 
        ; call occurs [#_delay_us] ; [] |3540| 
	.dwpsn	file "../Source/prod.c",line 3538,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3538| 
        ; branchcc occurs ; [] |3538| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3544,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3544| 
	.dwpsn	file "../Source/prod.c",line 3543,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3543| 
	.dwpsn	file "../Source/prod.c",line 3544,column 5,is_stmt,isa 0
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3544| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3544| 
	.dwpsn	file "../Source/prod.c",line 3548,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3548| 
        ; branch occurs ; [] |3548| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3447,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3447| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3447| 
        ; call occurs [#_scia_puts] ; [] |3447| 
	.dwpsn	file "../Source/prod.c",line 3449,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3449| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3449| 
        ; call occurs [#_scia_puts] ; [] |3449| 
	.dwpsn	file "../Source/prod.c",line 3450,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3450| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3450| 
        ; call occurs [#_scia_puts] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3452,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3452| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3452| 
        ; call occurs [#_scia_puts] ; [] |3452| 
	.dwpsn	file "../Source/prod.c",line 3453,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3453| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3453| 
        ; call occurs [#_scia_puts] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3454,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3454| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3454| 
        ; call occurs [#_scia_puts] ; [] |3454| 
	.dwpsn	file "../Source/prod.c",line 3455,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3455| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3455| 
        ; call occurs [#_scia_puts] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3457,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3457| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3457| 
        ; call occurs [#_scia_puts] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3458,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3458| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3458| 
        ; call occurs [#_scia_puts] ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3459,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3459| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3459| 
        ; call occurs [#_scia_puts] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3460| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3460| 
        ; call occurs [#_scia_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3461,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3461| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3461| 
        ; call occurs [#_scia_puts] ; [] |3461| 
	.dwpsn	file "../Source/prod.c",line 3462,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3462| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3462| 
        ; call occurs [#_scia_puts] ; [] |3462| 
	.dwpsn	file "../Source/prod.c",line 3463,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3463| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3463| 
        ; call occurs [#_scia_puts] ; [] |3463| 
	.dwpsn	file "../Source/prod.c",line 3465,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3465| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3465| 
        ; call occurs [#_scia_puts] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3467,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3467| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3467| 
        ; call occurs [#_scia_puts] ; [] |3467| 
	.dwpsn	file "../Source/prod.c",line 3469,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3469| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3469| 
        ; call occurs [#_scia_puts] ; [] |3469| 
	.dwpsn	file "../Source/prod.c",line 3471,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3471| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3471| 
        ; call occurs [#_scia_puts] ; [] |3471| 
	.dwpsn	file "../Source/prod.c",line 3472,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3472| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3472| 
        ; call occurs [#_scia_puts] ; [] |3472| 
	.dwpsn	file "../Source/prod.c",line 3473,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3473| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3473| 
        ; call occurs [#_scia_puts] ; [] |3473| 
	.dwpsn	file "../Source/prod.c",line 3474,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3474| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3474| 
        ; call occurs [#_scia_puts] ; [] |3474| 
	.dwpsn	file "../Source/prod.c",line 3476,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3476| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3476| 
        ; call occurs [#_scia_puts] ; [] |3476| 
	.dwpsn	file "../Source/prod.c",line 3477,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3477| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3477| 
        ; call occurs [#_scia_puts] ; [] |3477| 
	.dwpsn	file "../Source/prod.c",line 3478,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3478| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3478| 
        ; call occurs [#_scia_puts] ; [] |3478| 
	.dwpsn	file "../Source/prod.c",line 3479,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3479| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3479| 
        ; call occurs [#_scia_puts] ; [] |3479| 
	.dwpsn	file "../Source/prod.c",line 3480,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3480| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3480| 
        ; call occurs [#_scia_puts] ; [] |3480| 
	.dwpsn	file "../Source/prod.c",line 3482,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3482| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3482| 
        ; call occurs [#_scia_puts] ; [] |3482| 
	.dwpsn	file "../Source/prod.c",line 3483,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3483| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3483| 
        ; call occurs [#_scia_puts] ; [] |3483| 
	.dwpsn	file "../Source/prod.c",line 3485,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3485| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3485| 
        ; call occurs [#_scia_puts] ; [] |3485| 
	.dwpsn	file "../Source/prod.c",line 3487,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3487| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3487| 
        ; call occurs [#_scia_puts] ; [] |3487| 
	.dwpsn	file "../Source/prod.c",line 3488,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3488| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3488| 
        ; call occurs [#_scia_puts] ; [] |3488| 
	.dwpsn	file "../Source/prod.c",line 3490,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3490| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3490| 
        ; call occurs [#_scia_puts] ; [] |3490| 
	.dwpsn	file "../Source/prod.c",line 3492,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3492| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3492| 
        ; call occurs [#_scia_puts] ; [] |3492| 
	.dwpsn	file "../Source/prod.c",line 3494,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3494| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3494| 
        ; call occurs [#_scia_puts] ; [] |3494| 
	.dwpsn	file "../Source/prod.c",line 3496,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3496| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3496| 
        ; call occurs [#_scia_puts] ; [] |3496| 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3497| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3497| 
        ; call occurs [#_scia_puts] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3499,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3499| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3499| 
        ; call occurs [#_scia_puts] ; [] |3499| 
	.dwpsn	file "../Source/prod.c",line 3500,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3500| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3500| 
        ; call occurs [#_scia_puts] ; [] |3500| 
	.dwpsn	file "../Source/prod.c",line 3501,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3501| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3501| 
        ; call occurs [#_scia_puts] ; [] |3501| 
	.dwpsn	file "../Source/prod.c",line 3502,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3502| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3502| 
        ; call occurs [#_scia_puts] ; [] |3502| 
	.dwpsn	file "../Source/prod.c",line 3503,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3503| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3503| 
        ; call occurs [#_scia_puts] ; [] |3503| 
	.dwpsn	file "../Source/prod.c",line 3504,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3504| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3504| 
        ; call occurs [#_scia_puts] ; [] |3504| 
	.dwpsn	file "../Source/prod.c",line 3505,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3505| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3505| 
        ; call occurs [#_scia_puts] ; [] |3505| 
	.dwpsn	file "../Source/prod.c",line 3506,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3506| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3506| 
        ; call occurs [#_scia_puts] ; [] |3506| 
	.dwpsn	file "../Source/prod.c",line 3517,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3517| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3517| 
        ; call occurs [#_scia_puts] ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3519,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3519| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3519| 
        ; call occurs [#_scia_puts] ; [] |3519| 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3521| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3521| 
        ; call occurs [#_scia_puts] ; [] |3521| 
	.dwpsn	file "../Source/prod.c",line 3523,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3523| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3523| 
        ; call occurs [#_scia_puts] ; [] |3523| 
	.dwpsn	file "../Source/prod.c",line 3525,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3525| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3525| 
        ; call occurs [#_scia_puts] ; [] |3525| 
	.dwpsn	file "../Source/prod.c",line 3530,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3530| 
$C$L631:    
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3530| 
        ; call occurs [#_scia_puts] ; [] |3530| 
$C$L632:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3598,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3598| 
        ; branchcc occurs ; [] |3598| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3599,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3599| 
        SPM       #0                    ; [CPU_] 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3599| 
        ; call occurs [#_scia_puts] ; [] |3599| 
$C$L634:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 638,column 3,is_stmt,isa 0
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_SPICANRXStatus")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_SPICANRXStatus      ; [CPU_] |638| 
        ; call occurs [#_SPICANRXStatus] ; [] |638| 
        MOV       *-SP[39],AL           ; [CPU_] |638| 
	.dwpsn	file "../Source/prod.c",line 639,column 3,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |639| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_delay_us")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |639| 
        ; call occurs [#_delay_us] ; [] |639| 
	.dwpsn	file "../Source/prod.c",line 640,column 3,is_stmt,isa 0
        MOVB      AL,#45                ; [CPU_] |640| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |640| 
        ; call occurs [#_SPICANRead] ; [] |640| 
        MOV       *-SP[40],AL           ; [CPU_] |640| 
	.dwpsn	file "../Source/prod.c",line 644,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |644| 
        TBIT      AL,#4                 ; [CPU_] |644| 
        B         $C$L635,TC            ; [CPU_] |644| 
        ; branchcc occurs ; [] |644| 
	.dwpsn	file "../Source/prod.c",line 646,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |646| 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |646| 
        ; call occurs [#_ad7738_resettare] ; [] |646| 
	.dwpsn	file "../Source/prod.c",line 647,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |647| 
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |647| 
        ; call occurs [#_ad7738_resetpeak] ; [] |647| 
	.dwpsn	file "../Source/prod.c",line 648,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |648| 
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |648| 
        ; call occurs [#_ad7738_resetvall] ; [] |648| 
$C$L635:    
	.dwpsn	file "../Source/prod.c",line 726,column 3,is_stmt,isa 0
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |726| 
        ; call occurs [#_ad7738_monrdy] ; [] |726| 
        CMPB      AL,#0                 ; [CPU_] |726| 
        B         $C$L661,EQ            ; [CPU_] |726| 
        ; branchcc occurs ; [] |726| 
	.dwpsn	file "../Source/prod.c",line 728,column 4,is_stmt,isa 0
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |728| 
        ; call occurs [#_ad7738_monclr] ; [] |728| 
        MOVL      XAR0,#84              ; [CPU_] |728| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |728| 
	.dwpsn	file "../Source/prod.c",line 731,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |731| 
        CMPB      AL,#3                 ; [CPU_] |731| 
        B         $C$L636,GT            ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
        CMPB      AL,#3                 ; [CPU_] |731| 
        B         $C$L642,EQ            ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
        CMPB      AL,#0                 ; [CPU_] |731| 
        B         $C$L646,EQ            ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
        CMPB      AL,#1                 ; [CPU_] |731| 
        B         $C$L645,EQ            ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
        CMPB      AL,#2                 ; [CPU_] |731| 
        B         $C$L644,EQ            ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
        B         $C$L658,UNC           ; [CPU_] |731| 
        ; branch occurs ; [] |731| 
$C$L636:    
        CMPB      AL,#4                 ; [CPU_] |731| 
        B         $C$L641,EQ            ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
        CMPB      AL,#5                 ; [CPU_] |731| 
        B         $C$L637,EQ            ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
        CMPB      AL,#6                 ; [CPU_] |731| 
        B         $C$L658,NEQ           ; [CPU_] |731| 
        ; branchcc occurs ; [] |731| 
	.dwpsn	file "../Source/prod.c",line 786,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |786| 
        MOVL      XAR0,#46              ; [CPU_] |786| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |786| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |786| 
	.dwpsn	file "../Source/prod.c",line 787,column 5,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |787| 
        ; branch occurs ; [] |787| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 781,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |781| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |781| 
        ; call occurs [#_ad7738_getlimitst] ; [] |781| 
	.dwpsn	file "../Source/prod.c",line 782,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |782| 
        B         $C$L639,NTC           ; [CPU_] |782| 
        ; branchcc occurs ; [] |782| 
        TBIT      AL,#0                 ; [CPU_] |782| 
        B         $C$L638,NTC           ; [CPU_] |782| 
        ; branchcc occurs ; [] |782| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |782| 
        B         $C$L640,UNC           ; [CPU_] |782| 
        ; branch occurs ; [] |782| 
$C$L638:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |782| 
        B         $C$L640,UNC           ; [CPU_] |782| 
        ; branch occurs ; [] |782| 
$C$L639:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |782| 
$C$L640:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |782| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |782| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |782| 
	.dwpsn	file "../Source/prod.c",line 784,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |784| 
        ; branch occurs ; [] |784| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 753,column 5,is_stmt,isa 0
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |753| 
        ; call occurs [#_ad7738_getmon] ; [] |753| 
        MOVL      XAR0,#84              ; [CPU_] |753| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |753| 
	.dwpsn	file "../Source/prod.c",line 755,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |755| 
        B         $C$L643,UNC           ; [CPU_] |755| 
        ; branch occurs ; [] |755| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 748,column 5,is_stmt,isa 0
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |748| 
        ; call occurs [#_ad7738_getmon] ; [] |748| 
        MOVL      XAR0,#84              ; [CPU_] |748| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |748| 
	.dwpsn	file "../Source/prod.c",line 749,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |749| 
$C$L643:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |749| 
        ADDL      XAR4,ACC              ; [CPU_] |749| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |749| 
	.dwpsn	file "../Source/prod.c",line 750,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |750| 
        ; branch occurs ; [] |750| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 743,column 5,is_stmt,isa 0
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |743| 
        ; call occurs [#_ad7738_getvall] ; [] |743| 
	.dwpsn	file "../Source/prod.c",line 745,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |745| 
        ; branch occurs ; [] |745| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 738,column 5,is_stmt,isa 0
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |738| 
        ; call occurs [#_ad7738_getpeak] ; [] |738| 
	.dwpsn	file "../Source/prod.c",line 740,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |740| 
        ; branch occurs ; [] |740| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 733,column 5,is_stmt,isa 0
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |733| 
        ; call occurs [#_ad7738_getmon] ; [] |733| 
$C$L647:    
        MOVL      XAR0,#84              ; [CPU_] |733| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |733| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 734,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |734| 
        ADDL      XAR4,ACC              ; [CPU_] |734| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |734| 
$C$L648:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |734| 
	.dwpsn	file "../Source/prod.c",line 758,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |758| 
        CMPB      AL,#3                 ; [CPU_] |758| 
        B         $C$L649,GT            ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
        CMPB      AL,#3                 ; [CPU_] |758| 
        B         $C$L651,EQ            ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
        CMPB      AL,#0                 ; [CPU_] |758| 
        B         $C$L654,EQ            ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
        CMPB      AL,#1                 ; [CPU_] |758| 
        B         $C$L653,EQ            ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
        CMPB      AL,#2                 ; [CPU_] |758| 
        B         $C$L652,EQ            ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
        B         $C$L658,UNC           ; [CPU_] |758| 
        ; branch occurs ; [] |758| 
$C$L649:    
        CMPB      AL,#4                 ; [CPU_] |758| 
        B         $C$L650,EQ            ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
        CMPB      AL,#5                 ; [CPU_] |758| 
        B         $C$L658,NEQ           ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
	.dwpsn	file "../Source/prod.c",line 775,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |775| 
	.dwpsn	file "../Source/prod.c",line 776,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |776| 
        ; branch occurs ; [] |776| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 772,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |772| 
	.dwpsn	file "../Source/prod.c",line 773,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |773| 
        ; branch occurs ; [] |773| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 769,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |769| 
	.dwpsn	file "../Source/prod.c",line 770,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |770| 
        ; branch occurs ; [] |770| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 766,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |766| 
	.dwpsn	file "../Source/prod.c",line 767,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |767| 
        ; branch occurs ; [] |767| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 763,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |763| 
	.dwpsn	file "../Source/prod.c",line 764,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |764| 
        ; branch occurs ; [] |764| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 760,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |760| 
$C$L655:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |760| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |760| 
$C$L656:    
        MOVL      *-SP[4],ACC           ; [CPU_] |760| 
$C$L657:    
        MOVL      XAR0,#44              ; [CPU_] |760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |760| 
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_sprintf")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |760| 
        ; call occurs [#_sprintf] ; [] |760| 
$C$L658:    
        MOV       T,*-SP[55]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 791,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |791| 
        MPYB      ACC,T,#20             ; [CPU_] |791| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |791| 
        ADDB      AL,#7                 ; [CPU_] |791| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |791| 
        ; call occurs [#_lcd_puts] ; [] |791| 
	.dwpsn	file "../Source/prod.c",line 794,column 4,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |794| 
	.dwpsn	file "../Source/prod.c",line 791,column 4,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |791| 
	.dwpsn	file "../Source/prod.c",line 794,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |794| 
        B         $C$L659,HIS           ; [CPU_] |794| 
        ; branchcc occurs ; [] |794| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |794| 
        B         $C$L660,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L659:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 795,column 5,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |795| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L660:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L661:    
	.dwpsn	file "../Source/prod.c",line 804,column 3,is_stmt,isa 0
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |804| 
        ; call occurs [#_ad7738_tempstart] ; [] |804| 
        CMPB      AL,#0                 ; [CPU_] |804| 
        B         $C$L662,NEQ           ; [CPU_] |804| 
        ; branchcc occurs ; [] |804| 
	.dwpsn	file "../Source/prod.c",line 809,column 8,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |809| 
        ; call occurs [#_ad7738_tempread] ; [] |809| 
        CMPB      AL,#0                 ; [CPU_] |809| 
        B         $C$L663,EQ            ; [CPU_] |809| 
        ; branchcc occurs ; [] |809| 
	.dwpsn	file "../Source/prod.c",line 810,column 4,is_stmt,isa 0
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |810| 
        ; call occurs [#_ds1820read] ; [] |810| 
        MOVL      XAR0,#46              ; [CPU_] |810| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |810| 
	.dwpsn	file "../Source/prod.c",line 811,column 4,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |811| 
        ; call occurs [#_ad7738_settemp] ; [] |811| 
        B         $C$L663,UNC           ; [CPU_] |811| 
        ; branch occurs ; [] |811| 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 805,column 4,is_stmt,isa 0
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |805| 
        ; call occurs [#_ds1820start] ; [] |805| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 818,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |818| 
        MOVB      XAR0,#36              ; [CPU_] |818| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |818| 
        B         $C$L668,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |818| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |818| 
        CMPB      AL,#0                 ; [CPU_] |818| 
        B         $C$L668,EQ            ; [CPU_] |818| 
        ; branchcc occurs ; [] |818| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 819,column 4,is_stmt,isa 0
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |819| 
        ; call occurs [#_tagdetect] ; [] |819| 
        CMPB      AL,#0                 ; [CPU_] |819| 
        B         $C$L664,NEQ           ; [CPU_] |819| 
        ; branchcc occurs ; [] |819| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 842,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |842| 
        MOV       *+XAR4[0],#0          ; [CPU_] |842| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |842| 
	.dwpsn	file "../Source/prod.c",line 844,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |844| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |844| 
        MOVL      XAR4,ACC              ; [CPU_] |844| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |844| 
        B         $C$L666,EQ            ; [CPU_] |844| 
        ; branchcc occurs ; [] |844| 
	.dwpsn	file "../Source/prod.c",line 845,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |845| 
	.dwpsn	file "../Source/prod.c",line 846,column 6,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |846| 
        ; call occurs [#_lcd_clear] ; [] |846| 
	.dwpsn	file "../Source/prod.c",line 847,column 6,is_stmt,isa 0
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_update_units")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |847| 
        ; call occurs [#_update_units] ; [] |847| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 848,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |848| 
        B         $C$L666,UNC           ; [CPU_] |848| 
        ; branch occurs ; [] |848| 
$C$L664:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 821,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |821| 
        B         $C$L665,NEQ           ; [CPU_] |821| 
        ; branchcc occurs ; [] |821| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 824,column 6,is_stmt,isa 0
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_matchTag")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |824| 
        ; call occurs [#_matchTag] ; [] |824| 
        MOVL      XAR0,#80              ; [CPU_] |824| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |824| 
        MOVL      XAR0,#9               ; [CPU_] |824| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |824| 
	.dwpsn	file "../Source/prod.c",line 825,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |825| 
        B         $C$L665,EQ            ; [CPU_] |825| 
        ; branchcc occurs ; [] |825| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 828,column 7,is_stmt,isa 0
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |828| 
        ; call occurs [#_maf_rst] ; [] |828| 
	.dwpsn	file "../Source/prod.c",line 829,column 7,is_stmt,isa 0
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |829| 
        ; call occurs [#_ad7738_setcal] ; [] |829| 
        MOVL      XAR0,#78              ; [CPU_] |829| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |829| 
	.dwpsn	file "../Source/prod.c",line 830,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |830| 
        MOVL      XAR1,ACC              ; [CPU_] |830| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |830| 
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |830| 
        ; call occurs [#_ad7738_resetpeak] ; [] |830| 
	.dwpsn	file "../Source/prod.c",line 831,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |831| 
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |831| 
        ; call occurs [#_ad7738_resetvall] ; [] |831| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 834,column 7,is_stmt,isa 0
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |834| 
        ; call occurs [#_lcd_clear] ; [] |834| 
	.dwpsn	file "../Source/prod.c",line 835,column 7,is_stmt,isa 0
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_update_units")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |835| 
        ; call occurs [#_update_units] ; [] |835| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 836,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |836| 
$C$L665:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 839,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |839| 
$C$L666:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 853,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |853| 
        ADDB      AL,#1                 ; [CPU_] |853| 
        MOV       *+FP[AR0],AL          ; [CPU_] |853| 
        CMPB      AL,#4                 ; [CPU_] |853| 
        B         $C$L667,HIS           ; [CPU_] |853| 
        ; branchcc occurs ; [] |853| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |853| 
        ADDB      ACC,#1                ; [CPU_] |853| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |853| 
        B         $C$L668,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L667:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 854,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |854| 
        MOV       *+FP[AR0],#0          ; [CPU_] |854| 
$C$L668:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 862,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |862| 
        CMPB      AL,#1                 ; [CPU_] |862| 
        B         $C$L686,NEQ           ; [CPU_] |862| 
        ; branchcc occurs ; [] |862| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        B         $C$L686,EQ            ; [CPU_] |862| 
        ; branchcc occurs ; [] |862| 
	.dwpsn	file "../Source/prod.c",line 865,column 4,is_stmt,isa 0
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |865| 
        ; call occurs [#_prod_getavail] ; [] |865| 
        MOVL      XAR6,ACC              ; [CPU_] |865| 
        MOV       T,*-SP[51]            ; [CPU_] |865| 
        MPY       P,T,*-SP[52]          ; [CPU_] |865| 
        MOVU      ACC,PL                ; [CPU_] |865| 
        CMPL      ACC,XAR6              ; [CPU_] |865| 
        B         $C$L671,LOS           ; [CPU_] |865| 
        ; branchcc occurs ; [] |865| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        B         $C$L671,NEQ           ; [CPU_] |865| 
        ; branchcc occurs ; [] |865| 
	.dwpsn	file "../Source/prod.c",line 935,column 11,is_stmt,isa 0
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |935| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |935| 
        CMPB      AL,#0                 ; [CPU_] |935| 
        B         $C$L669,NEQ           ; [CPU_] |935| 
        ; branchcc occurs ; [] |935| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 943,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |943| 
        B         $C$L686,EQ            ; [CPU_] |943| 
        ; branchcc occurs ; [] |943| 
	.dwpsn	file "../Source/prod.c",line 944,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |944| 
	.dwpsn	file "../Source/prod.c",line 947,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |947| 
	.dwpsn	file "../Source/prod.c",line 949,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |949| 
        MOVB      XAR0,#36              ; [CPU_] |949| 
	.dwpsn	file "../Source/prod.c",line 947,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |947| 
	.dwpsn	file "../Source/prod.c",line 948,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |948| 
	.dwpsn	file "../Source/prod.c",line 949,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |949| 
        MOVL      XAR0,#80              ; [CPU_] |949| 
        MOV       *+XAR4[2],AL          ; [CPU_] |949| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |949| 
	.dwpsn	file "../Source/prod.c",line 953,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |953| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 951,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |951| 
	.dwpsn	file "../Source/prod.c",line 953,column 5,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |953| 
        ; branch occurs ; [] |953| 
$C$L669:    
	.dwpsn	file "../Source/prod.c",line 937,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |937| 
        MOV       *+XAR4[0],#0          ; [CPU_] |937| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 939,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |939| 
	.dwpsn	file "../Source/prod.c",line 938,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |938| 
	.dwpsn	file "../Source/prod.c",line 939,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |939| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 940,column 6,is_stmt,isa 0
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |940| 
        ; call occurs [#_ad7738_getlimitst] ; [] |940| 
        MOV       *XAR1++,AL            ; [CPU_] |940| 
	.dwpsn	file "../Source/prod.c",line 939,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |939| 
	.dwpsn	file "../Source/prod.c",line 940,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |940| 
	.dwpsn	file "../Source/prod.c",line 939,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |939| 
        B         $C$L670,LT            ; [CPU_] |939| 
        ; branchcc occurs ; [] |939| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 942,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |942| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 943,column 4,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |943| 
        ; branch occurs ; [] |943| 
$C$L671:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 872,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |872| 
        MOVL      XAR0,#88              ; [CPU_] |872| 
	.dwpsn	file "../Source/prod.c",line 870,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |870| 
	.dwpsn	file "../Source/prod.c",line 872,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |872| 
        MOV       *+XAR4[0],#0          ; [CPU_] |872| 
	.dwpsn	file "../Source/prod.c",line 878,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |878| 
	.dwpsn	file "../Source/prod.c",line 873,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |873| 
        MOV       AL,*-SP[52]           ; [CPU_] |873| 
	.dwpsn	file "../Source/prod.c",line 874,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |874| 
        MOV       AL,*-SP[59]           ; [CPU_] |874| 
	.dwpsn	file "../Source/prod.c",line 875,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |875| 
        MOV       *+XAR4[3],AL          ; [CPU_] |875| 
        MOV       AL,*-SP[59]           ; [CPU_] |875| 
	.dwpsn	file "../Source/prod.c",line 876,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |876| 
        MOV       *+XAR4[4],AL          ; [CPU_] |876| 
        MOV       AL,*-SP[50]           ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 877,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |877| 
        MOV       AH,*-SP[49]           ; [CPU_] |877| 
	.dwpsn	file "../Source/prod.c",line 878,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |878| 
        MOV       *+XAR4[6],AL          ; [CPU_] |878| 
        MOV       AL,AH                 ; [CPU_] |878| 
        ADDB      AL,#1                 ; [CPU_] |878| 
	.dwpsn	file "../Source/prod.c",line 869,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |869| 
	.dwpsn	file "../Source/prod.c",line 878,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |878| 
	.dwpsn	file "../Source/prod.c",line 880,column 5,is_stmt,isa 0
        B         $C$L682,UNC           ; [CPU_] |880| 
        ; branch occurs ; [] |880| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 881,column 6,is_stmt,isa 0
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |881| 
        ; call occurs [#_prod_getnext] ; [] |881| 
	.dwpsn	file "../Source/prod.c",line 883,column 7,is_stmt,isa 0
        DEC       *-SP[59]              ; [CPU_] |883| 
        B         $C$L682,NEQ           ; [CPU_] |883| 
        ; branchcc occurs ; [] |883| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 885,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |885| 
	.dwpsn	file "../Source/prod.c",line 889,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |889| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 888,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |888| 
        MOV       *-SP[58],AL           ; [CPU_] |888| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 890,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |890| 
        B         $C$L675,EQ            ; [CPU_] |890| 
        ; branchcc occurs ; [] |890| 
	.dwpsn	file "../Source/prod.c",line 891,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |891| 
        MOVL      XAR0,#88              ; [CPU_] |891| 
        ADDL      ACC,XAR4              ; [CPU_] |891| 
        MOVL      XAR3,ACC              ; [CPU_] |891| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |891| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 894,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |894| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 892,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |892| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 893,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |893| 
        ANDB      AL,#0xff              ; [CPU_] |893| 
        MOV       *XAR5++,AL            ; [CPU_] |893| 
	.dwpsn	file "../Source/prod.c",line 894,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |894| 
        LSR       AL,8                  ; [CPU_] |894| 
        MOV       *XAR5++,AL            ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 892,column 21,is_stmt,isa 0
        BANZ      $C$L674,AR0--         ; [CPU_] |892| 
        ; branchcc occurs ; [] |892| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 889,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |889| 
        ADDB      XAR7,#1               ; [CPU_] |889| 
	.dwpsn	file "../Source/prod.c",line 898,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |898| 
        MOV       *-SP[58],AL           ; [CPU_] |898| 
	.dwpsn	file "../Source/prod.c",line 889,column 18,is_stmt,isa 0
        BANZ      $C$L673,AR6--         ; [CPU_] |889| 
        ; branchcc occurs ; [] |889| 
	.dwpsn	file "../Source/prod.c",line 901,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |901| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 902,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |902| 
        B         $C$L678,EQ            ; [CPU_] |902| 
        ; branchcc occurs ; [] |902| 
	.dwpsn	file "../Source/prod.c",line 903,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |903| 
        MOVL      XAR0,#88              ; [CPU_] |903| 
        ADDL      ACC,XAR4              ; [CPU_] |903| 
        ADDB      ACC,#8                ; [CPU_] |903| 
        MOVL      XAR3,ACC              ; [CPU_] |903| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |903| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 906,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |906| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 904,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |904| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 905,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |905| 
        ANDB      AL,#0xff              ; [CPU_] |905| 
        MOV       *XAR5++,AL            ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 906,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |906| 
        LSR       AL,8                  ; [CPU_] |906| 
        MOV       *XAR5++,AL            ; [CPU_] |906| 
	.dwpsn	file "../Source/prod.c",line 904,column 21,is_stmt,isa 0
        BANZ      $C$L677,AR0--         ; [CPU_] |904| 
        ; branchcc occurs ; [] |904| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 901,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |901| 
        ADDB      XAR7,#1               ; [CPU_] |901| 
	.dwpsn	file "../Source/prod.c",line 910,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |910| 
        MOV       *-SP[58],AL           ; [CPU_] |910| 
	.dwpsn	file "../Source/prod.c",line 901,column 18,is_stmt,isa 0
        BANZ      $C$L676,AR6--         ; [CPU_] |901| 
        ; branchcc occurs ; [] |901| 
	.dwpsn	file "../Source/prod.c",line 886,column 6,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |886| 
	.dwpsn	file "../Source/prod.c",line 913,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |913| 
        SETC      SXM                   ; [CPU_] 
$C$L679:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 914,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |914| 
        B         $C$L681,EQ            ; [CPU_] |914| 
        ; branchcc occurs ; [] |914| 
	.dwpsn	file "../Source/prod.c",line 915,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |915| 
        MOVL      XAR0,#88              ; [CPU_] |915| 
        ADDL      ACC,XAR4              ; [CPU_] |915| 
        ADDB      ACC,#12               ; [CPU_] |915| 
        MOVL      XAR6,ACC              ; [CPU_] |915| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |915| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 918,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |918| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 916,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |916| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 917,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |917| 
        ANDB      AL,#0xff              ; [CPU_] |917| 
        MOV       *XAR5++,AL            ; [CPU_] |917| 
	.dwpsn	file "../Source/prod.c",line 918,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |918| 
        LSR       AL,8                  ; [CPU_] |918| 
        MOV       *XAR5++,AL            ; [CPU_] |918| 
	.dwpsn	file "../Source/prod.c",line 916,column 21,is_stmt,isa 0
        BANZ      $C$L680,AR0--         ; [CPU_] |916| 
        ; branchcc occurs ; [] |916| 
$C$L681:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 913,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |913| 
	.dwpsn	file "../Source/prod.c",line 922,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |922| 
        MOV       *-SP[58],AL           ; [CPU_] |922| 
	.dwpsn	file "../Source/prod.c",line 913,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |913| 
        CMPB      AL,#2                 ; [CPU_] |913| 
        B         $C$L679,LT            ; [CPU_] |913| 
        ; branchcc occurs ; [] |913| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 880,column 12,is_stmt,isa 0
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |880| 
        ; call occurs [#_prod_getavail] ; [] |880| 
        TEST      ACC                   ; [CPU_] |880| 
        B         $C$L683,EQ            ; [CPU_] |880| 
        ; branchcc occurs ; [] |880| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[47]           ; [CPU_] |880| 
        B         $C$L672,HI            ; [CPU_] |880| 
        ; branchcc occurs ; [] |880| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 926,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |926| 
        MOV       AL,*-SP[47]           ; [CPU_] |926| 
        MOV       *+XAR4[2],AL          ; [CPU_] |926| 
        MOV       AL,*-SP[53]           ; [CPU_] |926| 
	.dwpsn	file "../Source/prod.c",line 928,column 5,is_stmt,isa 0
        B         $C$L684,EQ            ; [CPU_] |928| 
        ; branchcc occurs ; [] |928| 
	.dwpsn	file "../Source/prod.c",line 929,column 6,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |929| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 932,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |932| 
$C$L685:    
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |932| 
        ; call occurs [#_scia_send_bin] ; [] |932| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 967,column 4,is_stmt,isa 0
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |967| 
        ; call occurs [#_scia_rx_getcmds] ; [] |967| 
        CMPB      AL,#0                 ; [CPU_] |967| 
        B         $C$L634,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 973,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |973| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |973| 
        ; call occurs [#_scia_rx_getcmd] ; [] |973| 
        MOV       *-SP[59],AL           ; [CPU_] |973| 
        CMPB      AL,#0                 ; [CPU_] |973| 
        B         $C$L634,EQ            ; [CPU_] |973| 
        ; branchcc occurs ; [] |973| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 990,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |990| 
        B         $C$L322,EQ            ; [CPU_] |990| 
        ; branchcc occurs ; [] |990| 
	.dwpsn	file "../Source/prod.c",line 3603,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3603| 
        B         $C$L634,NEQ           ; [CPU_] |3603| 
        ; branchcc occurs ; [] |3603| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3603| 
        B         $C$L634,LO            ; [CPU_] |3603| 
        ; branchcc occurs ; [] |3603| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3637,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3637| 
	.dwpsn	file "../Source/prod.c",line 3630,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3630| 
	.dwpsn	file "../Source/prod.c",line 3626,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3626| 
	.dwpsn	file "../Source/prod.c",line 3630,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3630| 
	.dwpsn	file "../Source/prod.c",line 3629,column 4,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |3629| 
	.dwpsn	file "../Source/prod.c",line 3637,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3637| 
	.dwpsn	file "../Source/prod.c",line 3630,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3630| 
	.dwpsn	file "../Source/prod.c",line 3637,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3637| 
        CMPB      AL,#146               ; [CPU_] |3637| 
        B         $C$L694,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#146               ; [CPU_] |3637| 
        B         $C$L231,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#54                ; [CPU_] |3637| 
        B         $C$L690,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#54                ; [CPU_] |3637| 
        B         $C$L725,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#36                ; [CPU_] |3637| 
        B         $C$L688,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#36                ; [CPU_] |3637| 
        B         $C$L287,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#33                ; [CPU_] |3637| 
        B         $C$L687,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#33                ; [CPU_] |3637| 
        B         $C$L302,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#16                ; [CPU_] |3637| 
        B         $C$L741,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        MOV       AH,AL                 ; [CPU_] |3637| 
        ADDB      AH,#-17               ; [CPU_] |3637| 
        CMPB      AH,#1                 ; [CPU_] |3637| 
        B         $C$L740,LOS           ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#32                ; [CPU_] |3637| 
        B         $C$L736,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L687:    
        CMPB      AL,#34                ; [CPU_] |3637| 
        B         $C$L298,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#35                ; [CPU_] |3637| 
        B         $C$L295,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L688:    
        CMPB      AL,#51                ; [CPU_] |3637| 
        B         $C$L689,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#51                ; [CPU_] |3637| 
        B         $C$L730,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#48                ; [CPU_] |3637| 
        B         $C$L281,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#49                ; [CPU_] |3637| 
        B         $C$L256,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#50                ; [CPU_] |3637| 
        B         $C$L732,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L689:    
        CMPB      AL,#52                ; [CPU_] |3637| 
        B         $C$L728,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#53                ; [CPU_] |3637| 
        B         $C$L727,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L690:    
        CMPB      AL,#71                ; [CPU_] |3637| 
        B         $C$L692,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#71                ; [CPU_] |3637| 
        B         $C$L252,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#68                ; [CPU_] |3637| 
        B         $C$L691,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#65                ; [CPU_] |3637| 
        B         $C$L710,GEQ           ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#55                ; [CPU_] |3637| 
        B         $C$L718,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#56                ; [CPU_] |3637| 
        B         $C$L714,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#57                ; [CPU_] |3637| 
        B         $C$L712,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L691:    
        CMPB      AL,#69                ; [CPU_] |3637| 
        B         $C$L709,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#70                ; [CPU_] |3637| 
        B         $C$L702,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L692:    
        CMPB      AL,#132               ; [CPU_] |3637| 
        B         $C$L693,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#132               ; [CPU_] |3637| 
        B         $C$L310,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#72                ; [CPU_] |3637| 
        B         $C$L245,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#130               ; [CPU_] |3637| 
        B         $C$L240,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#131               ; [CPU_] |3637| 
        B         $C$L311,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L693:    
        CMPB      AL,#144               ; [CPU_] |3637| 
        B         $C$L236,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#145               ; [CPU_] |3637| 
        B         $C$L235,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L694:    
        CMPB      AL,#169               ; [CPU_] |3637| 
        B         $C$L698,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#169               ; [CPU_] |3637| 
        B         $C$L168,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#161               ; [CPU_] |3637| 
        B         $C$L696,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#161               ; [CPU_] |3637| 
        B         $C$L194,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#150               ; [CPU_] |3637| 
        B         $C$L695,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#150               ; [CPU_] |3637| 
        B         $C$L224,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#147               ; [CPU_] |3637| 
        B         $C$L230,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#148               ; [CPU_] |3637| 
        B         $C$L229,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#149               ; [CPU_] |3637| 
        B         $C$L228,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L695:    
        CMPB      AL,#153               ; [CPU_] |3637| 
        B         $C$L215,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#160               ; [CPU_] |3637| 
        B         $C$L210,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L696:    
        CMPB      AL,#166               ; [CPU_] |3637| 
        B         $C$L697,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#166               ; [CPU_] |3637| 
        B         $C$L182,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#162               ; [CPU_] |3637| 
        B         $C$L189,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#163               ; [CPU_] |3637| 
        B         $C$L185,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#165               ; [CPU_] |3637| 
        B         $C$L184,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L697:    
        CMPB      AL,#167               ; [CPU_] |3637| 
        B         $C$L179,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#168               ; [CPU_] |3637| 
        B         $C$L177,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L698:    
        CMPB      AL,#195               ; [CPU_] |3637| 
        B         $C$L700,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#195               ; [CPU_] |3637| 
        B         $C$L143,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#192               ; [CPU_] |3637| 
        B         $C$L699,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#192               ; [CPU_] |3637| 
        B         $C$L160,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#170               ; [CPU_] |3637| 
        B         $C$L164,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#186               ; [CPU_] |3637| 
        B         $C$L308,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#187               ; [CPU_] |3637| 
        B         $C$L307,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L699:    
        CMPB      AL,#193               ; [CPU_] |3637| 
        B         $C$L153,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#194               ; [CPU_] |3637| 
        B         $C$L150,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L700:    
        CMPB      AL,#210               ; [CPU_] |3637| 
        B         $C$L701,GT            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#210               ; [CPU_] |3637| 
        B         $C$L79,EQ             ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#196               ; [CPU_] |3637| 
        B         $C$L115,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#197               ; [CPU_] |3637| 
        B         $C$L91,EQ             ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#198               ; [CPU_] |3637| 
        B         $C$L80,EQ             ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L701:    
        CMPB      AL,#211               ; [CPU_] |3637| 
        B         $C$L306,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        CMPB      AL,#240               ; [CPU_] |3637| 
        B         $C$L305,EQ            ; [CPU_] |3637| 
        ; branchcc occurs ; [] |3637| 
        B         $C$L317,UNC           ; [CPU_] |3637| 
        ; branch occurs ; [] |3637| 
$C$L702:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4301,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4301| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4301| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4303,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4303| 
        ANDB      AL,#0xff              ; [CPU_] |4303| 
        MOV       *XAR1++,AL            ; [CPU_] |4303| 
	.dwpsn	file "../Source/prod.c",line 4304,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4304| 
        LSR       AL,8                  ; [CPU_] |4304| 
        MOV       *XAR1++,AL            ; [CPU_] |4304| 
	.dwpsn	file "../Source/prod.c",line 4302,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4302| 
        ; branchcc occurs ; [] |4302| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4304,column 6,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4304| 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4310,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4310| 
        MOV       AH,#0                 ; [CPU_] |4310| 
        MOVL      XAR0,#88              ; [CPU_] |4310| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4310| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4310| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4310| 
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4310| 
        ; call occurs [#FS$$CMP] ; [] |4310| 
        CMPB      AL,#0                 ; [CPU_] |4310| 
        B         $C$L705,NEQ           ; [CPU_] |4310| 
        ; branchcc occurs ; [] |4310| 
	.dwpsn	file "../Source/prod.c",line 4309,column 6,is_stmt,isa 0
        MOV       *-SP[59],#128         ; [CPU_] |4309| 
        B         $C$L706,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4311,column 7,is_stmt,isa 0
        MOV       *-SP[59],#129         ; [CPU_] |4311| 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4313,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4313| 
        MOV       AH,#0                 ; [CPU_] |4313| 
        MOVL      XAR0,#88              ; [CPU_] |4313| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4313| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4313| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4313| 
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4313| 
        ; call occurs [#FS$$CMP] ; [] |4313| 
        CMPB      AL,#0                 ; [CPU_] |4313| 
        B         $C$L707,EQ            ; [CPU_] |4313| 
        ; branchcc occurs ; [] |4313| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4314,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4314| 
        MOV       *-SP[59],AL           ; [CPU_] |4314| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4316,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4316| 
        MOVL      XAR0,#88              ; [CPU_] |4316| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4316| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4316| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4316| 
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4316| 
        ; call occurs [#FS$$CMP] ; [] |4316| 
        CMPB      AL,#0                 ; [CPU_] |4316| 
        B         $C$L708,EQ            ; [CPU_] |4316| 
        ; branchcc occurs ; [] |4316| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4317,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4317| 
        MOV       *-SP[59],AL           ; [CPU_] |4317| 
$C$L708:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4319,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4319| 
        MOV       *XAR1++,AL            ; [CPU_] |4319| 
	.dwpsn	file "../Source/prod.c",line 4308,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4308| 
	.dwpsn	file "../Source/prod.c",line 4319,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4319| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4319| 
	.dwpsn	file "../Source/prod.c",line 4308,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4308| 
        SUBB      XAR6,#1               ; [CPU_U] |4308| 
        ADDB      ACC,#10               ; [CPU_] |4308| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4308| 
        MOVZ      AR0,AR6               ; [CPU_] |4308| 
        MOV       *-SP[47],AR6          ; [CPU_] |4308| 
        CMP       AR0,#-1               ; [CPU_] |4308| 
        B         $C$L704,NEQ           ; [CPU_] |4308| 
        ; branchcc occurs ; [] |4308| 
        B         $C$L743,UNC           ; [CPU_] |4308| 
        ; branch occurs ; [] |4308| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4294,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4294| 
        MOV       AH,#16672             ; [CPU_] |4294| 
        MOVL      XAR0,#46              ; [CPU_] |4294| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4294| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4294| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4294| 
        ; call occurs [#FS$$MPY] ; [] |4294| 
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4294| 
        ; call occurs [#FS$$TOU] ; [] |4294| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4294| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4294| 
	.dwpsn	file "../Source/prod.c",line 4295,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4294,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4294| 
	.dwpsn	file "../Source/prod.c",line 4295,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4295| 
        MOV       *-SP[61],#4           ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4297,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4297| 
        ; branch occurs ; [] |4297| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4276,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4276| 
        MOV       AH,#16672             ; [CPU_] |4276| 
        MOVL      XAR0,#46              ; [CPU_] |4276| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4276| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4276| 
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4276| 
        ; call occurs [#FS$$MPY] ; [] |4276| 
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4276| 
        ; call occurs [#FS$$TOU] ; [] |4276| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4276| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4276| 
	.dwpsn	file "../Source/prod.c",line 4277,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4277| 
	.dwpsn	file "../Source/prod.c",line 4276,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4276| 
	.dwpsn	file "../Source/prod.c",line 4277,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4277| 
	.dwpsn	file "../Source/prod.c",line 4279,column 5,is_stmt,isa 0
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4279| 
        ; call occurs [#_ad7738_getmon] ; [] |4279| 
	.dwpsn	file "../Source/prod.c",line 4280,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4280| 
        MOV       AH,#18371             ; [CPU_] |4280| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4280| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4280| 
        ADDL      ACC,XAR4              ; [CPU_] |4280| 
        SUBB      ACC,#130              ; [CPU_] |4280| 
        MOVL      XAR4,ACC              ; [CPU_] |4280| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4280| 
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4280| 
        ; call occurs [#FS$$MPY] ; [] |4280| 
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4280| 
        ; call occurs [#FS$$TOL] ; [] |4280| 
	.dwpsn	file "../Source/prod.c",line 4281,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4280,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4280| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4280| 
	.dwpsn	file "../Source/prod.c",line 4281,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4281| 
	.dwpsn	file "../Source/prod.c",line 4280,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4280| 
	.dwpsn	file "../Source/prod.c",line 4281,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4281| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4284,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4284| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4283,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4283| 
        ANDB      AL,#0xff              ; [CPU_] |4283| 
        MOV       *XAR4++,AL            ; [CPU_] |4283| 
	.dwpsn	file "../Source/prod.c",line 4284,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4284| 
        LSR       AL,8                  ; [CPU_] |4284| 
        MOV       *XAR4++,AL            ; [CPU_] |4284| 
	.dwpsn	file "../Source/prod.c",line 4282,column 17,is_stmt,isa 0
        BANZ      $C$L711,AR6--         ; [CPU_] |4282| 
        ; branchcc occurs ; [] |4282| 
        B         $C$L743,UNC           ; [CPU_] |4282| 
        ; branch occurs ; [] |4282| 
$C$L712:    
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4263,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4263| 
        MOV       *-SP[61],AL           ; [CPU_] |4263| 
	.dwpsn	file "../Source/prod.c",line 4262,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4262| 
        MOV       *-SP[47],AL           ; [CPU_] |4262| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4263,column 6,is_stmt,isa 0
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4263| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4263| 
        MOV       *XAR1++,AL            ; [CPU_] |4263| 
	.dwpsn	file "../Source/prod.c",line 4262,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4262| 
	.dwpsn	file "../Source/prod.c",line 4263,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4263| 
	.dwpsn	file "../Source/prod.c",line 4262,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4262| 
        B         $C$L713,LT            ; [CPU_] |4262| 
        ; branchcc occurs ; [] |4262| 
        B         $C$L743,UNC           ; [CPU_] |4262| 
        ; branch occurs ; [] |4262| 
$C$L714:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4240| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4240| 
        MOVL      XAR6,ACC              ; [CPU_] |4240| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4240| 
        MOV       *XAR4++,AL            ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4241,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4241| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4241| 
        MOVL      XAR6,ACC              ; [CPU_] |4241| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4241| 
        MOV       *XAR4++,AL            ; [CPU_] |4241| 
	.dwpsn	file "../Source/prod.c",line 4242,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4242| 
        ADD       ACC,#199 << 4         ; [CPU_] |4242| 
        MOVL      XAR6,ACC              ; [CPU_] |4242| 
	.dwpsn	file "../Source/prod.c",line 4244,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4244| 
	.dwpsn	file "../Source/prod.c",line 4242,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4242| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4242| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4246,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4246| 
        ANDB      AL,#0xff              ; [CPU_] |4246| 
        MOV       *XAR4++,AL            ; [CPU_] |4246| 
	.dwpsn	file "../Source/prod.c",line 4247,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4247| 
        LSR       AL,8                  ; [CPU_] |4247| 
        MOV       *XAR4++,AL            ; [CPU_] |4247| 
	.dwpsn	file "../Source/prod.c",line 4245,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR6--         ; [CPU_] |4245| 
        ; branchcc occurs ; [] |4245| 
	.dwpsn	file "../Source/prod.c",line 4250,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4250| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4252,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4252| 
        ANDB      AL,#0xff              ; [CPU_] |4252| 
        MOV       *XAR4++,AL            ; [CPU_] |4252| 
	.dwpsn	file "../Source/prod.c",line 4253,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4253| 
        LSR       AL,8                  ; [CPU_] |4253| 
        MOV       *XAR4++,AL            ; [CPU_] |4253| 
	.dwpsn	file "../Source/prod.c",line 4251,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |4251| 
        ; branchcc occurs ; [] |4251| 
	.dwpsn	file "../Source/prod.c",line 4241,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4241| 
        ADD       *-SP[61],#11          ; [CPU_] |4241| 
	.dwpsn	file "../Source/prod.c",line 4239,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4239| 
        ADDB      XAR0,#8               ; [CPU_] |4239| 
        ADDB      XAR7,#8               ; [CPU_] |4239| 
        SUBB      XAR6,#1               ; [CPU_U] |4239| 
        MOVZ      AR3,AR6               ; [CPU_] |4239| 
        CMP       AR6,#-1               ; [CPU_] |4239| 
        B         $C$L715,NEQ           ; [CPU_] |4239| 
        ; branchcc occurs ; [] |4239| 
        B         $C$L743,UNC           ; [CPU_] |4239| 
        ; branch occurs ; [] |4239| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4186,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4186| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4186| 
        MOVL      XAR6,ACC              ; [CPU_] |4186| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4186| 
        MOV       *XAR4++,AL            ; [CPU_] |4186| 
	.dwpsn	file "../Source/prod.c",line 4187,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4187| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4187| 
        MOVL      XAR6,ACC              ; [CPU_] |4187| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4191,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4191| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4187,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4187| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4198,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4198| 
        ANDB      AL,#0xff              ; [CPU_] |4198| 
        MOV       *XAR4++,AL            ; [CPU_] |4198| 
	.dwpsn	file "../Source/prod.c",line 4199,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4199| 
        LSR       AL,8                  ; [CPU_] |4199| 
        MOV       *XAR4++,AL            ; [CPU_] |4199| 
	.dwpsn	file "../Source/prod.c",line 4197,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR0--         ; [CPU_] |4197| 
        ; branchcc occurs ; [] |4197| 
	.dwpsn	file "../Source/prod.c",line 4204,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4204| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4211,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4211| 
        ANDB      AL,#0xff              ; [CPU_] |4211| 
        MOV       *XAR4++,AL            ; [CPU_] |4211| 
	.dwpsn	file "../Source/prod.c",line 4212,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4212| 
        LSR       AL,8                  ; [CPU_] |4212| 
        MOV       *XAR4++,AL            ; [CPU_] |4212| 
	.dwpsn	file "../Source/prod.c",line 4210,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4210| 
        ; branchcc occurs ; [] |4210| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4217,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4217| 
        ANDB      AL,#0xff              ; [CPU_] |4217| 
        MOV       *XAR4++,AL            ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4218,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4218| 
        LSR       AL,8                  ; [CPU_] |4218| 
        MOV       *XAR4++,AL            ; [CPU_] |4218| 
	.dwpsn	file "../Source/prod.c",line 4216,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4216| 
        ; branchcc occurs ; [] |4216| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4223,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4223| 
        ANDB      AL,#0xff              ; [CPU_] |4223| 
        MOV       *XAR4++,AL            ; [CPU_] |4223| 
	.dwpsn	file "../Source/prod.c",line 4224,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4224| 
        LSR       AL,8                  ; [CPU_] |4224| 
        MOV       *XAR4++,AL            ; [CPU_] |4224| 
	.dwpsn	file "../Source/prod.c",line 4222,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4222| 
        ; branchcc occurs ; [] |4222| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4229,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4229| 
        ANDB      AL,#0xff              ; [CPU_] |4229| 
        MOV       *XAR4++,AL            ; [CPU_] |4229| 
	.dwpsn	file "../Source/prod.c",line 4230,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4230| 
        LSR       AL,8                  ; [CPU_] |4230| 
        MOV       *XAR4++,AL            ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4228,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4228| 
        ; branchcc occurs ; [] |4228| 
	.dwpsn	file "../Source/prod.c",line 4185,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4185| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4185| 
        MOVL      XAR0,#88              ; [CPU_] |4185| 
        ADDB      ACC,#12               ; [CPU_] |4185| 
        ADDB      XAR1,#12              ; [CPU_] |4185| 
        ADDB      XAR7,#12              ; [CPU_] |4185| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4187,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4185,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4185| 
	.dwpsn	file "../Source/prod.c",line 4187,column 6,is_stmt,isa 0
        ADD       *-SP[61],#22          ; [CPU_] |4187| 
	.dwpsn	file "../Source/prod.c",line 4185,column 17,is_stmt,isa 0
        MOVL      ACC,XT                ; [CPU_] |4185| 
        SUBB      XAR0,#1               ; [CPU_U] |4185| 
        ADDB      ACC,#12               ; [CPU_] |4185| 
        MOVL      XT,ACC                ; [CPU_] |4185| 
        MOV       *-SP[47],AR0          ; [CPU_] |4185| 
        MOVL      ACC,P                 ; [CPU_] |4185| 
        ADDB      ACC,#12               ; [CPU_] |4185| 
        MOVL      P,ACC                 ; [CPU_] |4185| 
        CMP       AR0,#-1               ; [CPU_] |4185| 
        B         $C$L719,NEQ           ; [CPU_] |4185| 
        ; branchcc occurs ; [] |4185| 
        B         $C$L743,UNC           ; [CPU_] |4185| 
        ; branch occurs ; [] |4185| 
$C$L725:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4178,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4178| 
        MOV       *-SP[61],AL           ; [CPU_] |4178| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4176,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4176| 
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4177,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4177| 
        MOV       *XAR4++,AL            ; [CPU_] |4177| 
	.dwpsn	file "../Source/prod.c",line 4178,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4178| 
	.dwpsn	file "../Source/prod.c",line 4175,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4175| 
	.dwpsn	file "../Source/prod.c",line 4178,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4178| 
	.dwpsn	file "../Source/prod.c",line 4175,column 17,is_stmt,isa 0
        BANZ      $C$L726,AR6--         ; [CPU_] |4175| 
        ; branchcc occurs ; [] |4175| 
        B         $C$L743,UNC           ; [CPU_] |4175| 
        ; branch occurs ; [] |4175| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4166,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4166| 
        MOVB      XAR0,#36              ; [CPU_] |4166| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4166| 
        MOVL      XAR0,#80              ; [CPU_] |4166| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4166| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4166| 
	.dwpsn	file "../Source/prod.c",line 4168,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |4168| 
	.dwpsn	file "../Source/prod.c",line 4166,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4166| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4168,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4168| 
	.dwpsn	file "../Source/prod.c",line 4167,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4167| 
        ; branch occurs ; [] |4167| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4152,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4152| 
        MOVB      XAR0,#38              ; [CPU_] |4152| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4152| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4153,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4153| 
	.dwpsn	file "../Source/prod.c",line 4152,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4152| 
	.dwpsn	file "../Source/prod.c",line 4153,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4153| 
	.dwpsn	file "../Source/prod.c",line 4152,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4153,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4153| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4153| 
	.dwpsn	file "../Source/prod.c",line 4158,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4158| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4157,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4157| 
        ANDB      AL,#0xff              ; [CPU_] |4157| 
        MOV       *XAR4++,AL            ; [CPU_] |4157| 
	.dwpsn	file "../Source/prod.c",line 4158,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4158| 
        LSR       AL,8                  ; [CPU_] |4158| 
        MOV       *XAR4++,AL            ; [CPU_] |4158| 
	.dwpsn	file "../Source/prod.c",line 4156,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |4156| 
        ; branchcc occurs ; [] |4156| 
        B         $C$L743,UNC           ; [CPU_] |4156| 
        ; branch occurs ; [] |4156| 
$C$L730:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4142,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4142| 
        MOV       *-SP[61],AL           ; [CPU_] |4142| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L731:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4142| 
	.dwpsn	file "../Source/prod.c",line 4141,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4141| 
	.dwpsn	file "../Source/prod.c",line 4142,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4142| 
	.dwpsn	file "../Source/prod.c",line 4141,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4141| 
        ; branchcc occurs ; [] |4141| 
        B         $C$L743,UNC           ; [CPU_] |4141| 
        ; branch occurs ; [] |4141| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4125,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4125| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4127,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4127| 
        ANDB      AL,#0xff              ; [CPU_] |4127| 
        MOV       *XAR4++,AL            ; [CPU_] |4127| 
	.dwpsn	file "../Source/prod.c",line 4128,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4128| 
        LSR       AL,8                  ; [CPU_] |4128| 
        MOV       *XAR4++,AL            ; [CPU_] |4128| 
	.dwpsn	file "../Source/prod.c",line 4126,column 18,is_stmt,isa 0
        BANZ      $C$L734,AR0--         ; [CPU_] |4126| 
        ; branchcc occurs ; [] |4126| 
	.dwpsn	file "../Source/prod.c",line 4124,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4124| 
	.dwpsn	file "../Source/prod.c",line 4128,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4128| 
	.dwpsn	file "../Source/prod.c",line 4124,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4124| 
        ; branchcc occurs ; [] |4124| 
	.dwpsn	file "../Source/prod.c",line 4133,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4133| 
        MOVL      ACC,XAR5              ; [CPU_] |4133| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4133| 
        MOVL      XAR6,ACC              ; [CPU_] |4133| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4133| 
        ANDB      AL,#0xff              ; [CPU_] |4133| 
        MOV       *XAR4++,AL            ; [CPU_] |4133| 
	.dwpsn	file "../Source/prod.c",line 4134,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4134| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4134| 
        MOVL      XAR5,ACC              ; [CPU_] |4134| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4134| 
        LSR       AL,8                  ; [CPU_] |4134| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4134| 
$C$L735:    
        ADD       *-SP[61],#2           ; [CPU_] |4134| 
	.dwpsn	file "../Source/prod.c",line 4137,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4137| 
        ; branch occurs ; [] |4137| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3779,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3779| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3779| 
        MOVZ      AR4,AR4               ; [CPU_] |3779| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3781,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3781| 
        ANDB      AL,#0xff              ; [CPU_] |3781| 
        MOV       *XAR1++,AL            ; [CPU_] |3781| 
	.dwpsn	file "../Source/prod.c",line 3782,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3782| 
        LSR       AL,8                  ; [CPU_] |3782| 
        MOV       *XAR1++,AL            ; [CPU_] |3782| 
	.dwpsn	file "../Source/prod.c",line 3780,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3780| 
        ; branchcc occurs ; [] |3780| 
	.dwpsn	file "../Source/prod.c",line 3786,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3786| 
        ANDB      AL,#0xff              ; [CPU_] |3786| 
	.dwpsn	file "../Source/prod.c",line 3787,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3787| 
	.dwpsn	file "../Source/prod.c",line 3786,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3786| 
	.dwpsn	file "../Source/prod.c",line 3787,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3787| 
        LSR       AL,8                  ; [CPU_] |3787| 
        MOV       *XAR1++,AL            ; [CPU_] |3787| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3787| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3791,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3791| 
        ANDB      AL,#0xff              ; [CPU_] |3791| 
        MOV       *XAR1++,AL            ; [CPU_] |3791| 
	.dwpsn	file "../Source/prod.c",line 3792,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3792| 
        LSR       AL,8                  ; [CPU_] |3792| 
        MOV       *XAR1++,AL            ; [CPU_] |3792| 
	.dwpsn	file "../Source/prod.c",line 3790,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3790| 
        ; branchcc occurs ; [] |3790| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3796,column 5,is_stmt,isa 0
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("_strlen")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3796| 
        ; call occurs [#_strlen] ; [] |3796| 
	.dwpsn	file "../Source/prod.c",line 3797,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3782,column 6,is_stmt,isa 0
        ADD       *-SP[61],#11          ; [CPU_] |3782| 
	.dwpsn	file "../Source/prod.c",line 3798,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3798| 
        B         $C$L743,EQ            ; [CPU_] |3798| 
        ; branchcc occurs ; [] |3798| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3797,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3798,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3798| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3799,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3799| 
	.dwpsn	file "../Source/prod.c",line 3798,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3798| 
	.dwpsn	file "../Source/prod.c",line 3799,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3799| 
        INC       *-SP[61]              ; [CPU_] |3799| 
	.dwpsn	file "../Source/prod.c",line 3798,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3798| 
        B         $C$L739,HI            ; [CPU_] |3798| 
        ; branchcc occurs ; [] |3798| 
        B         $C$L743,UNC           ; [CPU_] |3798| 
        ; branch occurs ; [] |3798| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3765,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3765| 
        MOVL      XAR0,#66              ; [CPU_] |3765| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3765| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3765| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3765| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3765| 
	.dwpsn	file "../Source/prod.c",line 3768,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3768| 
        ; branch occurs ; [] |3768| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3759,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3759| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3759| 
$C$L742:    
        MOV       *-SP[61],#3           ; [CPU_] |3759| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5750,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |5750| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5750| 
        ; call occurs [#_scia_send_bin] ; [] |5750| 
	.dwpsn	file "../Source/prod.c",line 5752,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5752| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5752| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5752| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5752| 
        CMPB      AL,#240               ; [CPU_] |5752| 
        B         $C$L634,NEQ           ; [CPU_] |5752| 
        ; branchcc occurs ; [] |5752| 
	.dwpsn	file "../Source/prod.c",line 5753,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5753| 
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("_delay_us")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5753| 
        ; call occurs [#_delay_us] ; [] |5753| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5754,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5754| 
$C$DW$1491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1491, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5754| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5754| 
        B         $C$L634,UNC           ; [CPU_] |5754| 
        ; branch occurs ; [] |5754| 
	.dwattr $C$DW$278, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$278, DW_AT_TI_end_line(0x1699)
	.dwattr $C$DW$278, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$278

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1492	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1492, DW_AT_name("get_fattime")
	.dwattr $C$DW$1492, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1492, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1492, DW_AT_external
	.dwattr $C$DW$1492, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1492, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1492, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1492, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1492, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1493, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1492, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1492, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1492, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1492

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec 17 2019",0
	.align	2
$C$FSL62:	.string	"09:51:18",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resettare
	.global	_ad7738_resetlimit
	.global	_ad7738_resetpeak
	.global	_ad7738_resetvall
	.global	_mcbsp_xmit
	.global	_latch_dac
	.global	_ad7738_setcal
	.global	_ad7738_settemp
	.global	_conf_default
	.global	_ad7738_init
	.global	_SPICANReadSetT0Message
	.global	_SPICAN_T0_RTS
	.global	_dac_setmode
	.global	_ad7738_monclr
	.global	_maf_rst
	.global	_velf_rst
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_SPICANInit
	.global	_reboot
	.global	_delay_us
	.global	_lcd_init
	.global	_sys_init
	.global	_InitPieCtrl
	.global	_InitECan
	.global	_lcd_clear
	.global	_InitPieVectTable
	.global	_shunt_switch
	.global	_flash_init
	.global	_uart_set_dir
	.global	_ssr_set
	.global	_led_init
	.global	_led_set
	.global	_extio_init
	.global	_gpio_init
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_lcd_puts
	.global	_lcd_dputs
	.global	_secureRamFuncs_loadend
	.global	_Flash28_API_LoadStart
	.global	_port4004
	.global	_Flash28_API_RunStart
	.global	_secureRamFuncs_loadstart
	.global	_secureRamFuncs_runstart
	.global	_Flash28_API_LoadEnd
	.global	_port400e
	.global	_tagdetect
	.global	_sprintf
	.global	_scia_rx_getcmd
	.global	_ad7738_rawrdy
	.global	_scia_puts
	.global	_ad7738_monrdy
	.global	_SPICANRead
	.global	_scia_rx_getcmds
	.global	_conf_read
	.global	_conf_write
	.global	_ad7738_tempstart
	.global	_ad7738_getlimitchgd
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_atoi
	.global	_SPICANReadStat
	.global	_SPICANRXStatus
	.global	_scia_getparam
	.global	_scia_send_bin
	.global	_ad7738_getlimitst
	.global	_strtod
	.global	_atol
	.global	_ds1820read
	.global	_ad7738_getvall
	.global	_ad7738_getmon
	.global	_ad7738_getpeak
	.global	_ad7738_getraw
	.global	_prod_getavail
	.global	_prod_getnext
	.global	_Flash_CallbackPtr
	.global	_strlen
	.global	_Flash_CPUScaleFactor
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1494	.dwtag  DW_TAG_member
	.dwattr $C$DW$1494, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1494, DW_AT_name("fs_type")
	.dwattr $C$DW$1494, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1494, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1494, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1495	.dwtag  DW_TAG_member
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1495, DW_AT_name("drv")
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1495, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1495, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1496	.dwtag  DW_TAG_member
	.dwattr $C$DW$1496, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1496, DW_AT_name("csize")
	.dwattr $C$DW$1496, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1496, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1496, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1497, DW_AT_name("n_fats")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1498, DW_AT_name("wflag")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1499, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1500, DW_AT_name("id")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1501, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1502, DW_AT_name("last_clust")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1503, DW_AT_name("free_clust")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1504, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1505, DW_AT_name("cdir")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1506, DW_AT_name("n_fatent")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1507, DW_AT_name("fsize")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1508, DW_AT_name("fatbase")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1509, DW_AT_name("dirbase")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1510, DW_AT_name("database")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1511, DW_AT_name("winsect")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1512, DW_AT_name("win")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1513, DW_AT_name("fs")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1514, DW_AT_name("id")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1515, DW_AT_name("flag")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1516, DW_AT_name("pad1")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1517, DW_AT_name("fptr")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1518, DW_AT_name("fsize")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1519, DW_AT_name("org_clust")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1520, DW_AT_name("curr_clust")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1521, DW_AT_name("dsect")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1522, DW_AT_name("dir_sect")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1523, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1524, DW_AT_name("cltbl")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1525, DW_AT_name("buf")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1526, DW_AT_name("year")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1527, DW_AT_name("month")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1528, DW_AT_name("mday")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1529, DW_AT_name("wday")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1530, DW_AT_name("hour")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1531, DW_AT_name("min")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1532, DW_AT_name("sec")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1533, DW_AT_name("adc")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1534, DW_AT_name("adw")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1535, DW_AT_name("pos")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1536, DW_AT_name("vel")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1537, DW_AT_name("ci")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1538, DW_AT_name("bslope")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1539, DW_AT_name("tcx")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1540, DW_AT_name("tcy")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1541, DW_AT_name("tcz")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1542	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1542, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1543, DW_AT_name("what")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1544, DW_AT_name("ch")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1545, DW_AT_name("dslopep")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1546, DW_AT_name("dslopen")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1547, DW_AT_name("dint")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1548, DW_AT_name("gain")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1549, DW_AT_name("offset")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1550	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1550, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1551, DW_AT_name("what")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1552, DW_AT_name("ch")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1553, DW_AT_name("adec")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1554	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1554, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1555, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1555, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1556, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1556, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1557, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1557, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1557, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1559, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1559, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("all")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1572, DW_AT_name("bit")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1574, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1574, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1575, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1575, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1575, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("all")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1590, DW_AT_name("bit")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("all")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1608, DW_AT_name("bit")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("all")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1626, DW_AT_name("bit")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("all")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1644, DW_AT_name("bit")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("all")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1662, DW_AT_name("bit")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("all")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1680, DW_AT_name("bit")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("all")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1698, DW_AT_name("bit")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("rsvd1")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("rsvd2")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("all")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1706, DW_AT_name("bit")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1708, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1708, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("rsvd1")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("rsvd2")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("all")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1714, DW_AT_name("bit")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1716, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1716, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1717, DW_AT_name("rsvd1")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1717, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1717, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("rsvd2")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("all")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1722, DW_AT_name("bit")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("rsvd1")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("rsvd2")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("all")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1730, DW_AT_name("bit")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("rsvd1")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("all")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1736, DW_AT_name("bit")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("rsvd1")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("all")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1742, DW_AT_name("bit")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("rsvd1")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("all")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1748, DW_AT_name("bit")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("rsvd1")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("all")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1754, DW_AT_name("bit")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1756, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1756, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1757, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1757, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("all")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1772, DW_AT_name("bit")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("all")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1790, DW_AT_name("bit")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("all")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1808, DW_AT_name("bit")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1824, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1824, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1825, DW_AT_name("all")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1826, DW_AT_name("bit")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("rsvd1")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("rsvd2")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("all")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1832, DW_AT_name("bit")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("rsvd1")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1835, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1835, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("rsvd2")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1836, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1836, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("all")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1838, DW_AT_name("bit")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("rsvd1")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1840, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1840, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1841, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1841, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1841, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("rsvd2")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1842, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1842, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1843, DW_AT_name("all")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1844, DW_AT_name("bit")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("rsvd1")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1845, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1845, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1846, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1846, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1847, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1847, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("rsvd2")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1848, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1848, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("all")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1850, DW_AT_name("bit")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1851, DW_AT_name("GPADAT")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1852, DW_AT_name("GPASET")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1853, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1854, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1855, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1856, DW_AT_name("GPBSET")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1857, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1858, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1859, DW_AT_name("rsvd1")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1860, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1861, DW_AT_name("GPDSET")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1862, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1863, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1864, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1865, DW_AT_name("GPESET")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1866, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1867, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1868, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1869, DW_AT_name("GPFSET")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1870, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1871, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1872, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1873, DW_AT_name("GPGSET")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1874, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1875, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1876, DW_AT_name("rsvd2")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1877	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1877)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1878, DW_AT_name("what")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1879, DW_AT_name("ch")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1880, DW_AT_name("limit")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1881, DW_AT_name("limits")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1882, DW_AT_name("limitr")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1883	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1883, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1884, DW_AT_name("usn")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1885, DW_AT_name("uname")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1886, DW_AT_name("rxdir")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1887, DW_AT_name("baud")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1888, DW_AT_name("tagiden")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1889, DW_AT_name("tarepersist")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1890, DW_AT_name("filter")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1891, DW_AT_name("diffwin")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1892, DW_AT_name("ch")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1893, DW_AT_name("sensor")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1894, DW_AT_name("vfd")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1895, DW_AT_name("dac")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1896, DW_AT_name("lim")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1897, DW_AT_name("velfilter")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1898, DW_AT_name("cntperin")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1899, DW_AT_name("magic")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1900	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1900)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1901, DW_AT_name("ssn")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1902, DW_AT_name("slbl")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1903, DW_AT_name("tagid")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1904, DW_AT_name("method")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1905, DW_AT_name("date")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1906, DW_AT_name("range")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1907, DW_AT_name("unit")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1908, DW_AT_name("ounit")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1909, DW_AT_name("ufactor")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1910, DW_AT_name("points")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1911, DW_AT_name("mass")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1912, DW_AT_name("adc")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1913, DW_AT_name("slope")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1914, DW_AT_name("intercept")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1915, DW_AT_name("shunt")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1916, DW_AT_name("base")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1917, DW_AT_name("tare")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1918	.dwtag  DW_TAG_member
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1918, DW_AT_name("dacgain")
	.dwattr $C$DW$1918, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1918, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1918, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1919, DW_AT_name("dacoff")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1920	.dwtag  DW_TAG_member
	.dwattr $C$DW$1920, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1920, DW_AT_name("ch")
	.dwattr $C$DW$1920, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1920, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1920, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1921	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1921, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1922	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1922)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1923	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1923, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1924	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1924, DW_AT_type(*$C$DW$T$6)

$C$DW$T$174	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$1924)


$C$DW$T$175	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_byte_size(0x101)
$C$DW$1925	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1925, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$175

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1926	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1926, DW_AT_type(*$C$DW$T$10)

$C$DW$T$197	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$1926)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1927	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$T$36)

$C$DW$1928	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1928, DW_AT_type(*$C$DW$1927)

$C$DW$T$297	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$297, DW_AT_type(*$C$DW$1928)

$C$DW$1929	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1929, DW_AT_type(*$C$DW$T$36)

$C$DW$T$298	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1929)


$C$DW$T$299	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$T$299, DW_AT_language(DW_LANG_C)
$C$DW$1930	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$299


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1931	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1931, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87


$C$DW$T$306	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$306, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$306, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$306, DW_AT_byte_size(0x03)
$C$DW$1932	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1932, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$306

$C$DW$T$307	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$307, DW_AT_address_class(0x20)

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1933	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1933, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1934	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1934, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1935	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1935, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1936	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1936, DW_AT_type(*$C$DW$T$12)

$C$DW$T$333	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$333, DW_AT_type(*$C$DW$1936)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1937	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1937, DW_AT_type(*$C$DW$T$90)

$C$DW$T$336	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$336, DW_AT_type(*$C$DW$1937)


$C$DW$T$337	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$337, DW_AT_type(*$C$DW$T$336)
	.dwattr $C$DW$T$337, DW_AT_language(DW_LANG_C)
$C$DW$1938	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$337

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$352	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$352, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$352, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$352, DW_AT_byte_size(0x08)
$C$DW$1939	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1939, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$352

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1940	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1940, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1941	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1941, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1942	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1942, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1943	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1943, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$371	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$371, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$371, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$371, DW_AT_byte_size(0x06)
$C$DW$1944	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1944, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$371

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1945	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1945, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1946	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1946, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$357	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$357, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$357, DW_AT_address_class(0x20)

$C$DW$1947	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1947, DW_AT_type(*$C$DW$T$5)

$C$DW$T$178	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$1947)

$C$DW$T$179	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$T$179, DW_AT_address_class(0x20)


$C$DW$T$372	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$372, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$372, DW_AT_language(DW_LANG_C)
$C$DW$1948	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$372


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$373, DW_AT_byte_size(0x400)
$C$DW$1949	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1949, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$373


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$374, DW_AT_byte_size(0x08)
$C$DW$1950	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1950, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$374


$C$DW$T$379	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$379, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$379, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$379, DW_AT_byte_size(0x64)
$C$DW$1951	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1951, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$379


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x40)
$C$DW$1952	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1952, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$380

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1953	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1953, DW_AT_name("AL")
	.dwattr $C$DW$1953, DW_AT_location[DW_OP_reg0]

$C$DW$1954	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1954, DW_AT_name("AH")
	.dwattr $C$DW$1954, DW_AT_location[DW_OP_reg1]

$C$DW$1955	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1955, DW_AT_name("PL")
	.dwattr $C$DW$1955, DW_AT_location[DW_OP_reg2]

$C$DW$1956	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1956, DW_AT_name("PH")
	.dwattr $C$DW$1956, DW_AT_location[DW_OP_reg3]

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("SP")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg20]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("XT")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg21]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("T")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg22]

$C$DW$1960	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1960, DW_AT_name("ST0")
	.dwattr $C$DW$1960, DW_AT_location[DW_OP_reg23]

$C$DW$1961	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1961, DW_AT_name("ST1")
	.dwattr $C$DW$1961, DW_AT_location[DW_OP_reg24]

$C$DW$1962	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1962, DW_AT_name("PC")
	.dwattr $C$DW$1962, DW_AT_location[DW_OP_reg25]

$C$DW$1963	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1963, DW_AT_name("RPC")
	.dwattr $C$DW$1963, DW_AT_location[DW_OP_reg26]

$C$DW$1964	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1964, DW_AT_name("FP")
	.dwattr $C$DW$1964, DW_AT_location[DW_OP_reg28]

$C$DW$1965	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1965, DW_AT_name("DP")
	.dwattr $C$DW$1965, DW_AT_location[DW_OP_reg29]

$C$DW$1966	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1966, DW_AT_name("SXM")
	.dwattr $C$DW$1966, DW_AT_location[DW_OP_reg30]

$C$DW$1967	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1967, DW_AT_name("PM")
	.dwattr $C$DW$1967, DW_AT_location[DW_OP_reg31]

$C$DW$1968	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1968, DW_AT_name("OVM")
	.dwattr $C$DW$1968, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1969	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1969, DW_AT_name("PAGE0")
	.dwattr $C$DW$1969, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1970	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1970, DW_AT_name("AMODE")
	.dwattr $C$DW$1970, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1971	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1971, DW_AT_name("INTM")
	.dwattr $C$DW$1971, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1972	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1972, DW_AT_name("IFR")
	.dwattr $C$DW$1972, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1973	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1973, DW_AT_name("IER")
	.dwattr $C$DW$1973, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1974	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1974, DW_AT_name("V")
	.dwattr $C$DW$1974, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1975	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1975, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1975, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1976	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1976, DW_AT_name("VOL")
	.dwattr $C$DW$1976, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1977	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1977, DW_AT_name("AR0")
	.dwattr $C$DW$1977, DW_AT_location[DW_OP_reg4]

$C$DW$1978	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1978, DW_AT_name("XAR0")
	.dwattr $C$DW$1978, DW_AT_location[DW_OP_reg5]

$C$DW$1979	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1979, DW_AT_name("AR1")
	.dwattr $C$DW$1979, DW_AT_location[DW_OP_reg6]

$C$DW$1980	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1980, DW_AT_name("XAR1")
	.dwattr $C$DW$1980, DW_AT_location[DW_OP_reg7]

$C$DW$1981	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1981, DW_AT_name("AR2")
	.dwattr $C$DW$1981, DW_AT_location[DW_OP_reg8]

$C$DW$1982	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1982, DW_AT_name("XAR2")
	.dwattr $C$DW$1982, DW_AT_location[DW_OP_reg9]

$C$DW$1983	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1983, DW_AT_name("AR3")
	.dwattr $C$DW$1983, DW_AT_location[DW_OP_reg10]

$C$DW$1984	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1984, DW_AT_name("XAR3")
	.dwattr $C$DW$1984, DW_AT_location[DW_OP_reg11]

$C$DW$1985	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1985, DW_AT_name("AR4")
	.dwattr $C$DW$1985, DW_AT_location[DW_OP_reg12]

$C$DW$1986	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1986, DW_AT_name("XAR4")
	.dwattr $C$DW$1986, DW_AT_location[DW_OP_reg13]

$C$DW$1987	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1987, DW_AT_name("AR5")
	.dwattr $C$DW$1987, DW_AT_location[DW_OP_reg14]

$C$DW$1988	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1988, DW_AT_name("XAR5")
	.dwattr $C$DW$1988, DW_AT_location[DW_OP_reg15]

$C$DW$1989	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1989, DW_AT_name("AR6")
	.dwattr $C$DW$1989, DW_AT_location[DW_OP_reg16]

$C$DW$1990	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1990, DW_AT_name("XAR6")
	.dwattr $C$DW$1990, DW_AT_location[DW_OP_reg17]

$C$DW$1991	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1991, DW_AT_name("AR7")
	.dwattr $C$DW$1991, DW_AT_location[DW_OP_reg18]

$C$DW$1992	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1992, DW_AT_name("XAR7")
	.dwattr $C$DW$1992, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

