;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.4.LTS *
;* Date/Time created: Tue Dec 10 11:49:01 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.4.LTS Copyright (c) 1996-2015 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$5


$C$DW$7	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$7, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$7


$C$DW$9	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$9, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$11)

$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$9


$C$DW$12	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$12, DW_AT_name("latch_dac")
	.dwattr $C$DW$12, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$12, DW_AT_declaration
	.dwattr $C$DW$12, DW_AT_external
	.dwendtag $C$DW$12


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
	.dwendtag $C$DW$13


$C$DW$14	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$14, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$14, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$14, DW_AT_declaration
	.dwattr $C$DW$14, DW_AT_external
$C$DW$15	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$15, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$14


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("conf_default")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
	.dwendtag $C$DW$16


$C$DW$17	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$17, DW_AT_name("ad7738_init")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external
	.dwendtag $C$DW$17


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
$C$DW$19	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$19, DW_AT_type(*$C$DW$T$36)

$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

$C$DW$21	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$21, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$18


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("SPICAN_T0_RTS")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("dac_setmode")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$23


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("maf_rst")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwendtag $C$DW$26


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("velf_rst")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwendtag $C$DW$27

$C$DW$28	.dwtag  DW_TAG_variable
	.dwattr $C$DW$28, DW_AT_name("UNITS")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external

$C$DW$29	.dwtag  DW_TAG_variable
	.dwattr $C$DW$29, DW_AT_name("METHOD")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external

$C$DW$30	.dwtag  DW_TAG_variable
	.dwattr $C$DW$30, DW_AT_name("BAUD")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$337)
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("BITMAP")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("LPV")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("INTERFACE")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external


$C$DW$34	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$34, DW_AT_name("ds1820start")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwendtag $C$DW$34


$C$DW$35	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$35, DW_AT_name("configCAN")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external
	.dwendtag $C$DW$35


$C$DW$36	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$36, DW_AT_name("SPICANInit")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwendtag $C$DW$36


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("extio_init")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("gpio_init")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("ssr_set")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
$C$DW$40	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$40, DW_AT_type(*$C$DW$T$36)

$C$DW$41	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$41, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$39


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$42


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("lcd_init")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
	.dwendtag $C$DW$44


$C$DW$45	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$45, DW_AT_name("lcd_clear")
	.dwattr $C$DW$45, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$45, DW_AT_declaration
	.dwattr $C$DW$45, DW_AT_external
	.dwendtag $C$DW$45


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("led_init")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46


$C$DW$47	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$47, DW_AT_name("led_set")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external
$C$DW$48	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$48, DW_AT_type(*$C$DW$T$36)

$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$47


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwendtag $C$DW$50


$C$DW$51	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$51, DW_AT_name("delay_us")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$51


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("InitECan")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
	.dwendtag $C$DW$53


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("flash_init")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
	.dwendtag $C$DW$55


$C$DW$56	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$56, DW_AT_name("shunt_switch")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$56


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("reboot")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
	.dwendtag $C$DW$58


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("sys_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwendtag $C$DW$59


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$163)

$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$60


$C$DW$63	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$63, DW_AT_name("lcd_puts")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
$C$DW$64	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$64, DW_AT_type(*$C$DW$T$163)

$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$63


$C$DW$66	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$66, DW_AT_name("scia_init")
	.dwattr $C$DW$66, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$66, DW_AT_declaration
	.dwattr $C$DW$66, DW_AT_external
$C$DW$67	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$67, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$66


$C$DW$68	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$68, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$68

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$70	.dwtag  DW_TAG_variable
	.dwattr $C$DW$70, DW_AT_name("cmd_mode")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$70, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$70, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$70, DW_AT_external


$C$DW$71	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$71, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$71, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$71, DW_AT_declaration
	.dwattr $C$DW$71, DW_AT_external
	.dwendtag $C$DW$71


$C$DW$72	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$72, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$72, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$163)

$C$DW$74	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$72


$C$DW$75	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$75, DW_AT_name("scia_puts")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$75


$C$DW$77	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$77, DW_AT_name("sprintf")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$163)

$C$DW$79	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$179)

$C$DW$80	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$77


$C$DW$81	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$81, DW_AT_name("SPICANRead")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$81


$C$DW$83	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$83, DW_AT_name("scia_getparam")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$163)

$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$163)

$C$DW$86	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$83

$C$DW$87	.dwtag  DW_TAG_variable
	.dwattr $C$DW$87, DW_AT_name("port4004")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external

$C$DW$88	.dwtag  DW_TAG_variable
	.dwattr $C$DW$88, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external


$C$DW$89	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$89, DW_AT_name("atoi")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$89, DW_AT_declaration
	.dwattr $C$DW$89, DW_AT_external
$C$DW$90	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$89

$C$DW$91	.dwtag  DW_TAG_variable
	.dwattr $C$DW$91, DW_AT_name("port400e")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$297)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$92	.dwtag  DW_TAG_variable
	.dwattr $C$DW$92, DW_AT_name("autoidchanged")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$92, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$92, DW_AT_external

$C$DW$93	.dwtag  DW_TAG_variable
	.dwattr $C$DW$93, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external

$C$DW$94	.dwtag  DW_TAG_variable
	.dwattr $C$DW$94, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external

$C$DW$95	.dwtag  DW_TAG_variable
	.dwattr $C$DW$95, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external

$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external

$C$DW$97	.dwtag  DW_TAG_variable
	.dwattr $C$DW$97, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external


$C$DW$98	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$98, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external
	.dwendtag $C$DW$98


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("conf_write")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
	.dwendtag $C$DW$101


$C$DW$102	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$102, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
	.dwendtag $C$DW$102


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
$C$DW$106	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$105


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("conf_read")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
	.dwendtag $C$DW$107


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("tagdetect")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
$C$DW$109	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$108


$C$DW$110	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$110, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
$C$DW$111	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$163)

$C$DW$112	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$110


$C$DW$113	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$113, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$113, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$113, DW_AT_declaration
	.dwattr $C$DW$113, DW_AT_external
	.dwendtag $C$DW$113


$C$DW$114	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$114, DW_AT_name("strtod")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$114, DW_AT_declaration
	.dwattr $C$DW$114, DW_AT_external
$C$DW$115	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$179)

$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$357)

	.dwendtag $C$DW$114

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$117	.dwtag  DW_TAG_variable
	.dwattr $C$DW$117, DW_AT_name("VEL_U")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$117, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$117, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$118	.dwtag  DW_TAG_variable
	.dwattr $C$DW$118, DW_AT_name("POS_U")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$118, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$118, DW_AT_external


$C$DW$119	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$119, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$119


$C$DW$121	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$121, DW_AT_name("memcpy")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$121, DW_AT_declaration
	.dwattr $C$DW$121, DW_AT_external
$C$DW$122	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$3)

$C$DW$123	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$148)

$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$121


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("atol")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
$C$DW$126	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$125


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
	.dwendtag $C$DW$127


$C$DW$128	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$128, DW_AT_name("ds1820read")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$128, DW_AT_declaration
	.dwattr $C$DW$128, DW_AT_external
	.dwendtag $C$DW$128


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("prod_getnext")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
	.dwendtag $C$DW$129

$C$DW$130	.dwtag  DW_TAG_variable
	.dwattr $C$DW$130, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external

$C$DW$131	.dwtag  DW_TAG_variable
	.dwattr $C$DW$131, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
	.dwendtag $C$DW$132


$C$DW$133	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$133, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external
	.dwendtag $C$DW$133


$C$DW$134	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$134, DW_AT_name("strlen")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external
$C$DW$135	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$134


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
	.dwendtag $C$DW$136


$C$DW$137	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$137, DW_AT_name("prod_getavail")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$137, DW_AT_declaration
	.dwattr $C$DW$137, DW_AT_external
	.dwendtag $C$DW$137

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$138	.dwtag  DW_TAG_variable
	.dwattr $C$DW$138, DW_AT_name("autoid")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$138, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$138, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("tagwasthere")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$139, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$139, DW_AT_external


$C$DW$140	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$140, DW_AT_name("tagid")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$140, DW_AT_declaration
	.dwattr $C$DW$140, DW_AT_external
$C$DW$141	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$140

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$142	.dwtag  DW_TAG_variable
	.dwattr $C$DW$142, DW_AT_name("rtc")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$142, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$142, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$143	.dwtag  DW_TAG_variable
	.dwattr $C$DW$143, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$143, DW_AT_declaration
	.dwattr $C$DW$143, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$144	.dwtag  DW_TAG_variable
	.dwattr $C$DW$144, DW_AT_name("tsensor")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$144, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$144, DW_AT_external

$C$DW$145	.dwtag  DW_TAG_variable
	.dwattr $C$DW$145, DW_AT_name("_ctypes_")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$145, DW_AT_declaration
	.dwattr $C$DW$145, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$146	.dwtag  DW_TAG_variable
	.dwattr $C$DW$146, DW_AT_name("fileOb")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$146, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$146, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("Fatfs")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$147, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$147, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("conf_data")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$148, DW_AT_declaration
	.dwattr $C$DW$148, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\192802 C:\\Users\\ebenton\\AppData\\Local\\Temp\\192804 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\1928012 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$149	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$149, DW_AT_name("update_units")
	.dwattr $C$DW$149, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$149, DW_AT_high_pc(0x00)
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$149, DW_AT_external
	.dwattr $C$DW$149, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$149, DW_AT_TI_begin_line(0x1792)
	.dwattr $C$DW$149, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$149, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6034,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$150	.dwtag  DW_TAG_variable
	.dwattr $C$DW$150, DW_AT_name("buff")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$150, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6034 | void update_units(void) {                                              
; 6036 | int l;                                                                 
; 6037 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6039,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6039 | lcd_clear();                                                           
; 6040 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$151, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$151, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6039| 
        ; call occurs [#_lcd_clear] ; [] |6039| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6041,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6041 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6041| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6041| 
        ADDL      XAR4,ACC              ; [CPU_] |6041| 
        MOV       AL,AR1                ; [CPU_] |6041| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6041| 
$C$DW$152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$152, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$152, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6041| 
        ; call occurs [#_lcd_puts] ; [] |6041| 
	.dwpsn	file "../Source/prod.c",line 6042,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6042 | switch (conf_data.vfd[l].what) {                                       
; 6043 | case VFD_LOAD:                                                         
; 6044 | case VFD_PEAK:                                                         
; 6045 | case VFD_VALL:                                                         
; 6046 | case VFD_POSI:                                                         
; 6047 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6042| 
        CMPB      AL,#4                 ; [CPU_] |6042| 
        B         $C$L2,LOS             ; [CPU_] |6042| 
        ; branchcc occurs ; [] |6042| 
        CMPB      AL,#5                 ; [CPU_] |6042| 
        B         $C$L8,EQ              ; [CPU_] |6042| 
        ; branchcc occurs ; [] |6042| 
        CMPB      AL,#6                 ; [CPU_] |6042| 
        B         $C$L7,EQ              ; [CPU_] |6042| 
        ; branchcc occurs ; [] |6042| 
        B         $C$L10,UNC            ; [CPU_] |6042| 
        ; branch occurs ; [] |6042| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6048,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6048 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6048| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6048| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6048| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6048| 
        ADDB      AL,#1                 ; [CPU_] |6048| 
        MOVL      XAR4,XAR3             ; [CPU_] |6048| 
        MOV       *-SP[3],AL            ; [CPU_] |6048| 
$C$DW$153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$153, DW_AT_name("_sprintf")
	.dwattr $C$DW$153, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6048| 
        ; call occurs [#_sprintf] ; [] |6048| 
	.dwpsn	file "../Source/prod.c",line 6049,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6049 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6049| 
        ADD       AL,AR1                ; [CPU_] |6049| 
        MOVL      XAR4,XAR3             ; [CPU_] |6049| 
$C$DW$154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$154, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$154, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6049| 
        ; call occurs [#_lcd_puts] ; [] |6049| 
	.dwpsn	file "../Source/prod.c",line 6050,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6050 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6050| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6050| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6050| 
        B         $C$L3,EQ              ; [CPU_] |6050| 
        ; branchcc occurs ; [] |6050| 
	.dwpsn	file "../Source/prod.c",line 6051,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6051 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6051| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6051| 
        ADD       AL,AR1                ; [CPU_] |6051| 
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6051| 
        ; call occurs [#_lcd_puts] ; [] |6051| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6054,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6054 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6055 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6054| 
        CMPB      AL,#3                 ; [CPU_] |6054| 
        B         $C$L6,EQ              ; [CPU_] |6054| 
        ; branchcc occurs ; [] |6054| 
	.dwpsn	file "../Source/prod.c",line 6056,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6056 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6057 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6058 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6056| 
        CMPB      AL,#4                 ; [CPU_] |6056| 
        B         $C$L5,EQ              ; [CPU_] |6056| 
        ; branchcc occurs ; [] |6056| 
	.dwpsn	file "../Source/prod.c",line 6059,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6059 | lcd_puts(                                                              
; 6060 |                 (char*) UNITS[0x0f                                     
; 6061 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6062 |                 18 + 20 * l);                                          
; 6064 | break;                                                                 
; 6065 | case VFD_LIMIT:                                                        
; 6066 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6067 | lcd_puts(buff, 5 + 20 * l);                                            
; 6068 | break;                                                                 
; 6069 | case VFD_TEMP:                                                         
; 6070 | #if(VFD==1)                                                            
; 6071 | buff[0] = 0xb0;                                                        
; 6072 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6059| 
        MOV       T,#10                 ; [CPU_] |6059| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6059| 
        ADDL      ACC,XAR6              ; [CPU_] |6059| 
        MOVL      XAR4,ACC              ; [CPU_] |6059| 
        MOVB      XAR0,#42              ; [CPU_] |6059| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6059| 
        MPYB      ACC,T,#152            ; [CPU_] |6059| 
        ADDL      ACC,XAR6              ; [CPU_] |6059| 
        MOVL      XAR4,ACC              ; [CPU_] |6059| 
        MOVB      XAR0,#125             ; [CPU_] |6059| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6059| 
        ANDB      AL,#0x0f              ; [CPU_] |6059| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6059| 
        MOV       ACC,AL << 1           ; [CPU_] |6059| 
        ADDL      XAR4,ACC              ; [CPU_] |6059| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6059| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6059| 
        B         $C$L9,UNC             ; [CPU_] |6059| 
        ; branch occurs ; [] |6059| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6057,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6057| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6057| 
	.dwpsn	file "../Source/prod.c",line 6058,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6058| 
        ; branch occurs ; [] |6058| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6055,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6055| 
	.dwpsn	file "../Source/prod.c",line 6056,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6056| 
        ; branch occurs ; [] |6056| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6073,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6073 | buff[0] = 0xdf;                                                        
; 6074 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6073| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6073| 
	.dwpsn	file "../Source/prod.c",line 6075,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6075 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6075| 
	.dwpsn	file "../Source/prod.c",line 6076,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6076 | buff[2] = '\0';                                                        
; 6077 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6076| 
	.dwpsn	file "../Source/prod.c",line 6078,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6078 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6078| 
        ; branch occurs ; [] |6078| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6066,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6066| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6066| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6066| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6066| 
        ADDB      AL,#1                 ; [CPU_] |6066| 
        MOVL      XAR4,XAR3             ; [CPU_] |6066| 
        MOV       *-SP[3],AL            ; [CPU_] |6066| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_sprintf")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6066| 
        ; call occurs [#_sprintf] ; [] |6066| 
	.dwpsn	file "../Source/prod.c",line 6067,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6067| 
        MOVL      XAR4,XAR3             ; [CPU_] |6067| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6067| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6067| 
        ; call occurs [#_lcd_puts] ; [] |6067| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6040,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6040| 
        SUBB      XAR6,#1               ; [CPU_U] |6040| 
        MOVZ      AR0,AR6               ; [CPU_] |6040| 
        ADDB      XAR2,#3               ; [CPU_] |6040| 
        ADDB      XAR1,#20              ; [CPU_] |6040| 
        MOV       *-SP[4],AR6           ; [CPU_] |6040| 
        CMP       AR0,#-1               ; [CPU_] |6040| 
        B         $C$L1,NEQ             ; [CPU_] |6040| 
        ; branchcc occurs ; [] |6040| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$149, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$149, DW_AT_TI_end_line(0x17c1)
	.dwattr $C$DW$149, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$149

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$159	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$159, DW_AT_name("print_vfd")
	.dwattr $C$DW$159, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$159, DW_AT_high_pc(0x00)
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$159, DW_AT_external
	.dwattr $C$DW$159, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$159, DW_AT_TI_begin_line(0x171d)
	.dwattr $C$DW$159, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$159, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5917,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$160	.dwtag  DW_TAG_variable
	.dwattr $C$DW$160, DW_AT_name("buff")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$160, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5917 | void print_vfd(void) {                                                 
; 5918 | int l;                                                                 
; 5919 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$161	.dwtag  DW_TAG_variable
	.dwattr $C$DW$161, DW_AT_name("l")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$161, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5921,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5921 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5921| 
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_name("_scia_puts")
	.dwattr $C$DW$162, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5921| 
        ; call occurs [#_scia_puts] ; [] |5921| 
	.dwpsn	file "../Source/prod.c",line 5922,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5922 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5922| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5923,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5923 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5923| 
        MOVB      AL,#1                 ; [CPU_] |5923| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5923| 
        ADD       AL,AR1                ; [CPU_] |5923| 
        MOV       *-SP[3],AL            ; [CPU_] |5923| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5923| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5923| 
        ADDL      XAR4,ACC              ; [CPU_] |5923| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5923| 
        MOVL      XAR4,XAR3             ; [CPU_] |5923| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5923| 
$C$DW$163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$163, DW_AT_name("_sprintf")
	.dwattr $C$DW$163, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5923| 
        ; call occurs [#_sprintf] ; [] |5923| 
	.dwpsn	file "../Source/prod.c",line 5924,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5924 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5924| 
$C$DW$164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5924| 
        ; call occurs [#_scia_puts] ; [] |5924| 
	.dwpsn	file "../Source/prod.c",line 5926,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5926 | switch (conf_data.vfd[l].what) {                                       
; 5927 | case VFD_LOAD:                                                         
; 5928 | case VFD_PEAK:                                                         
; 5929 | case VFD_VALL:                                                         
; 5930 | case VFD_POSI:                                                         
; 5931 | case VFD_VELO:                                                         
; 5932 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5933 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5934 |         scia_puts(buff);                                               
; 5935 |         break;                                                         
; 5936 | case VFD_LIMIT:                                                        
; 5937 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5938 |         scia_puts(buff);                                               
; 5939 |         break;                                                         
; 5940 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5926| 
        CMPB      AL,#4                 ; [CPU_] |5926| 
        B         $C$L13,LOS            ; [CPU_] |5926| 
        ; branchcc occurs ; [] |5926| 
        CMPB      AL,#5                 ; [CPU_] |5926| 
        B         $C$L12,EQ             ; [CPU_] |5926| 
        ; branchcc occurs ; [] |5926| 
        CMPB      AL,#6                 ; [CPU_] |5926| 
        B         $C$L16,NEQ            ; [CPU_] |5926| 
        ; branchcc occurs ; [] |5926| 
	.dwpsn	file "../Source/prod.c",line 5941,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5941 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5941| 
	.dwpsn	file "../Source/prod.c",line 5942,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5942 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5942| 
        ; branch occurs ; [] |5942| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5937,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5937| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5937| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5937| 
        ADDB      AL,#1                 ; [CPU_] |5937| 
        MOV       *-SP[3],AL            ; [CPU_] |5937| 
	.dwpsn	file "../Source/prod.c",line 5939,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5939| 
        ; branch occurs ; [] |5939| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5932,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5932| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5932| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5932| 
        ADDB      AL,#1                 ; [CPU_] |5932| 
        MOV       *-SP[3],AL            ; [CPU_] |5932| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5932| 
        MOV       *-SP[4],AL            ; [CPU_] |5932| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5932| 
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("_sprintf")
	.dwattr $C$DW$165, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5932| 
        ; call occurs [#_sprintf] ; [] |5932| 
	.dwpsn	file "../Source/prod.c",line 5934,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5934| 
$C$L15:    
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5934| 
        ; call occurs [#_scia_puts] ; [] |5934| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5944,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5944 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5944| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5944| 
        ; call occurs [#_scia_puts] ; [] |5944| 
	.dwpsn	file "../Source/prod.c",line 5922,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5922| 
        ADDB      XAR2,#3               ; [CPU_] |5922| 
        MOV       AL,AR1                ; [CPU_] |5922| 
        CMPB      AL,#4                 ; [CPU_] |5922| 
        B         $C$L11,LT             ; [CPU_] |5922| 
        ; branchcc occurs ; [] |5922| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$159, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$159, DW_AT_TI_end_line(0x173a)
	.dwattr $C$DW$159, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$159

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$169	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$169, DW_AT_name("print_sensor")
	.dwattr $C$DW$169, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$169, DW_AT_high_pc(0x00)
	.dwattr $C$DW$169, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$169, DW_AT_external
	.dwattr $C$DW$169, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$169, DW_AT_TI_begin_line(0x16c6)
	.dwattr $C$DW$169, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$169, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5830,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$170	.dwtag  DW_TAG_variable
	.dwattr $C$DW$170, DW_AT_name("buff")
	.dwattr $C$DW$170, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$170, DW_AT_type(*$C$DW$T$379)
	.dwattr $C$DW$170, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$171	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$171, DW_AT_name("ss")
	.dwattr $C$DW$171, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$171, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$171, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$172	.dwtag  DW_TAG_variable
	.dwattr $C$DW$172, DW_AT_name("ss")
	.dwattr $C$DW$172, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$172, DW_AT_type(*$C$DW$T$197)
	.dwattr $C$DW$172, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$173	.dwtag  DW_TAG_variable
	.dwattr $C$DW$173, DW_AT_name("j")
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$173, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$173, DW_AT_location[DW_OP_reg0]

$C$DW$174	.dwtag  DW_TAG_variable
	.dwattr $C$DW$174, DW_AT_name("j")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_breg20 -7]

$C$DW$175	.dwtag  DW_TAG_variable
	.dwattr $C$DW$175, DW_AT_name("j")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_breg20 -7]

$C$DW$176	.dwtag  DW_TAG_variable
	.dwattr $C$DW$176, DW_AT_name("j")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_breg20 -7]

$C$DW$177	.dwtag  DW_TAG_variable
	.dwattr $C$DW$177, DW_AT_name("j")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5830 | void print_sensor(int ss) {                                            
; 5831 | int j;                                                                 
; 5832 | static char buff[100];                                                 
; 5834 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5830| 
	.dwpsn	file "../Source/prod.c",line 5835,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5835 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5836 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5837 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5835| 
        MPYB      P,T,#152              ; [CPU_] |5835| 
        MOVL      ACC,XAR3              ; [CPU_] |5835| 
        ADDL      ACC,P                 ; [CPU_] |5835| 
        MOVL      XAR2,ACC              ; [CPU_] |5835| 
        MOVB      XAR0,#118             ; [CPU_] |5835| 
        MOVL      *-SP[12],P            ; [CPU_] |5835| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5835| 
        B         $C$L28,EQ             ; [CPU_] |5835| 
        ; branchcc occurs ; [] |5835| 
	.dwpsn	file "../Source/prod.c",line 5838,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5838 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5838| 
        MOVL      ACC,XAR2              ; [CPU_] |5838| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5838| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5838| 
        ADDB      ACC,#82               ; [CPU_] |5838| 
        MOVL      XAR4,XAR1             ; [CPU_] |5838| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5838| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_sprintf")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5838| 
        ; call occurs [#_sprintf] ; [] |5838| 
	.dwpsn	file "../Source/prod.c",line 5839,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5839 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5839| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5839| 
        ; call occurs [#_scia_puts] ; [] |5839| 
	.dwpsn	file "../Source/prod.c",line 5840,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5840 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5840| 
        MOVL      ACC,XAR2              ; [CPU_] |5840| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5840| 
        ADDB      ACC,#98               ; [CPU_] |5840| 
        MOVL      XAR4,XAR1             ; [CPU_] |5840| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5840| 
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_sprintf")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5840| 
        ; call occurs [#_sprintf] ; [] |5840| 
	.dwpsn	file "../Source/prod.c",line 5841,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5841 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5841| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5841| 
        ; call occurs [#_scia_puts] ; [] |5841| 
	.dwpsn	file "../Source/prod.c",line 5842,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5842 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5843 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5842| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5842| 
        MOVL      XAR4,XAR2             ; [CPU_] |5842| 
        ADDB      XAR4,#114             ; [CPU_] |5842| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5842| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5842| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5842| 
        MOVL      XAR4,XAR1             ; [CPU_] |5842| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5842| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_sprintf")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5842| 
        ; call occurs [#_sprintf] ; [] |5842| 
	.dwpsn	file "../Source/prod.c",line 5844,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5844 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5844| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5844| 
        ; call occurs [#_scia_puts] ; [] |5844| 
	.dwpsn	file "../Source/prod.c",line 5845,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5845 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5846 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5845| 
        MOVB      XAR0,#118             ; [CPU_] |5845| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5845| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5845| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5845| 
        ADDL      XAR4,ACC              ; [CPU_] |5845| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5845| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5845| 
        MOVL      XAR4,XAR1             ; [CPU_] |5845| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_sprintf")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5845| 
        ; call occurs [#_sprintf] ; [] |5845| 
	.dwpsn	file "../Source/prod.c",line 5847,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5847 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5847| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5847| 
        ; call occurs [#_scia_puts] ; [] |5847| 
	.dwpsn	file "../Source/prod.c",line 5848,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5848 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5849 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5848| 
        MOVB      XAR0,#124             ; [CPU_] |5848| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5848| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5848| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5848| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5848| 
        ANDB      AL,#0x0f              ; [CPU_] |5848| 
        MOV       ACC,AL << 1           ; [CPU_] |5848| 
        ADDL      XAR4,ACC              ; [CPU_] |5848| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5848| 
        MOVL      XAR4,XAR1             ; [CPU_] |5848| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5848| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_sprintf")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5848| 
        ; call occurs [#_sprintf] ; [] |5848| 
	.dwpsn	file "../Source/prod.c",line 5850,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5850 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5850| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5850| 
        ; call occurs [#_scia_puts] ; [] |5850| 
	.dwpsn	file "../Source/prod.c",line 5851,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5851 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5852 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5851| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5851| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5851| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5851| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5851| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5851| 
        MOV       ACC,AL << 1           ; [CPU_] |5851| 
        ADDL      ACC,XAR6              ; [CPU_] |5851| 
        MOVL      XAR4,ACC              ; [CPU_] |5851| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5851| 
        MOVL      XAR4,XAR1             ; [CPU_] |5851| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5851| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_sprintf")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5851| 
        ; call occurs [#_sprintf] ; [] |5851| 
	.dwpsn	file "../Source/prod.c",line 5853,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5853 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5853| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5853| 
        ; call occurs [#_scia_puts] ; [] |5853| 
	.dwpsn	file "../Source/prod.c",line 5854,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5854 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5855 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5854| 
        MOVB      XAR0,#126             ; [CPU_] |5854| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5854| 
        MOVL      XAR4,XAR1             ; [CPU_] |5854| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5854| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5854| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5854| 
        ; call occurs [#_sprintf] ; [] |5854| 
	.dwpsn	file "../Source/prod.c",line 5856,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5856 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5856| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5856| 
        ; call occurs [#_scia_puts] ; [] |5856| 
	.dwpsn	file "../Source/prod.c",line 5857,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5857 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5858 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5857| 
        MOVB      XAR0,#122             ; [CPU_] |5857| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5857| 
        MOVL      XAR4,XAR1             ; [CPU_] |5857| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5857| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5857| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5857| 
        ; call occurs [#_sprintf] ; [] |5857| 
	.dwpsn	file "../Source/prod.c",line 5859,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5859 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5859| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5859| 
        ; call occurs [#_scia_puts] ; [] |5859| 
	.dwpsn	file "../Source/prod.c",line 5860,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5860 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5861 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5860| 
        MOVB      XAR0,#222             ; [CPU_] |5860| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5860| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5860| 
        MOVL      XAR4,XAR1             ; [CPU_] |5860| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5860| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5860| 
        ; call occurs [#_sprintf] ; [] |5860| 
	.dwpsn	file "../Source/prod.c",line 5862,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5862 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5862| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5863,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5863 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5864 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5863| 
        MOVB      XAR0,#224             ; [CPU_] |5863| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5863| 
        MOVL      XAR4,XAR1             ; [CPU_] |5863| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5863| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5863| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5863| 
        ; call occurs [#_sprintf] ; [] |5863| 
	.dwpsn	file "../Source/prod.c",line 5865,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5865 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5865| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5865| 
        ; call occurs [#_scia_puts] ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5866,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5866 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5867 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5866| 
        MOVB      XAR0,#228             ; [CPU_] |5866| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5866| 
        MOVL      XAR4,XAR1             ; [CPU_] |5866| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5866| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5866| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_sprintf")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5866| 
        ; call occurs [#_sprintf] ; [] |5866| 
	.dwpsn	file "../Source/prod.c",line 5868,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5868 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5868| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5868| 
        ; call occurs [#_scia_puts] ; [] |5868| 
	.dwpsn	file "../Source/prod.c",line 5869,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5869 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5870 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5869| 
        MOVB      XAR0,#230             ; [CPU_] |5869| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5869| 
        MOVL      XAR4,XAR1             ; [CPU_] |5869| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5869| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5869| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_sprintf")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5869| 
        ; call occurs [#_sprintf] ; [] |5869| 
	.dwpsn	file "../Source/prod.c",line 5871,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5871 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5871| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5871| 
        ; call occurs [#_scia_puts] ; [] |5871| 
	.dwpsn	file "../Source/prod.c",line 5873,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5873 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5874 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5875 |                         conf_data.sensor[ss].points);                  
; 5876 |         scia_puts(buff);                                               
; 5878 |         scia_puts("  Point:");                                         
; 5879 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5880 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5881 |                 scia_puts(buff);                                       
; 5883 |         scia_puts("\r\n  Mass: ");                                     
; 5884 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5885 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5886 |                 scia_puts(buff);                                       
; 5888 |         scia_puts("\r\n  Count:");                                     
; 5889 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5890 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5891 |                 scia_puts(buff);                                       
; 5893 |         scia_puts("\r\n  Slope:    ");                                 
; 5894 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5895 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5896 |                 scia_puts(buff);                                       
; 5898 |         scia_puts("\r\n  Intercept:");                                 
; 5899 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5900 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5901 |                 scia_puts(buff);                                       
; 5903 |         scia_puts("\r\n");                                             
; 5904 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5873| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5873| 
        CMPB      AL,#2                 ; [CPU_] |5873| 
        B         $C$L17,EQ             ; [CPU_] |5873| 
        ; branchcc occurs ; [] |5873| 
	.dwpsn	file "../Source/prod.c",line 5905,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5905 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5906 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5905| 
        MOVB      XAR0,#178             ; [CPU_] |5905| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5905| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5905| 
        MOVL      XAR4,XAR1             ; [CPU_] |5905| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5905| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_sprintf")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5905| 
        ; call occurs [#_sprintf] ; [] |5905| 
	.dwpsn	file "../Source/prod.c",line 5907,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5907 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5907| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5907| 
        ; call occurs [#_scia_puts] ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5908,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5908 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5909 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5908| 
        MOVB      XAR0,#200             ; [CPU_] |5908| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5908| 
        MOVL      XAR4,XAR1             ; [CPU_] |5908| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5908| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5908| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5908| 
        ; call occurs [#_sprintf] ; [] |5908| 
	.dwpsn	file "../Source/prod.c",line 5910,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5910 | scia_puts(buff);                                                       
; 5913 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5910| 
        B         $C$L29,UNC            ; [CPU_] |5910| 
        ; branch occurs ; [] |5910| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5874,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5874| 
        MOVB      XAR0,#128             ; [CPU_] |5874| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5874| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5874| 
        MOVL      XAR4,XAR1             ; [CPU_] |5874| 
        MOV       *-SP[3],AL            ; [CPU_] |5874| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_sprintf")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5874| 
        ; call occurs [#_sprintf] ; [] |5874| 
	.dwpsn	file "../Source/prod.c",line 5876,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5876| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_scia_puts")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5876| 
        ; call occurs [#_scia_puts] ; [] |5876| 
	.dwpsn	file "../Source/prod.c",line 5878,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5878| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5878| 
        ; call occurs [#_scia_puts] ; [] |5878| 
	.dwpsn	file "../Source/prod.c",line 5879,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5879| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5879,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5879| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5879| 
        B         $C$L27,LT             ; [CPU_] |5879| 
        ; branchcc occurs ; [] |5879| 
	.dwpsn	file "../Source/prod.c",line 5883,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5883| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5883| 
        ; call occurs [#_scia_puts] ; [] |5883| 
	.dwpsn	file "../Source/prod.c",line 5884,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5884| 
        MOV       *-SP[7],AL            ; [CPU_] |5884| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5884,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5884| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5884| 
        B         $C$L26,LT             ; [CPU_] |5884| 
        ; branchcc occurs ; [] |5884| 
	.dwpsn	file "../Source/prod.c",line 5888,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5888| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5888| 
        ; call occurs [#_scia_puts] ; [] |5888| 
	.dwpsn	file "../Source/prod.c",line 5889,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5889| 
        MOV       *-SP[7],AL            ; [CPU_] |5889| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5889,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5889| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5889| 
        B         $C$L25,LT             ; [CPU_] |5889| 
        ; branchcc occurs ; [] |5889| 
	.dwpsn	file "../Source/prod.c",line 5893,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5893| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5893| 
        ; call occurs [#_scia_puts] ; [] |5893| 
	.dwpsn	file "../Source/prod.c",line 5894,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5894| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5894,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5894| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5894| 
        ADDB      AL,#-1                ; [CPU_] |5894| 
        CMP       AL,*-SP[7]            ; [CPU_] |5894| 
        B         $C$L24,GT             ; [CPU_] |5894| 
        ; branchcc occurs ; [] |5894| 
	.dwpsn	file "../Source/prod.c",line 5898,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5898| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5898| 
        ; call occurs [#_scia_puts] ; [] |5898| 
	.dwpsn	file "../Source/prod.c",line 5899,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5899| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5899,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5899| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5899| 
        ADDB      AL,#-1                ; [CPU_] |5899| 
        CMP       AL,*-SP[7]            ; [CPU_] |5899| 
        B         $C$L23,GT             ; [CPU_] |5899| 
        ; branchcc occurs ; [] |5899| 
	.dwpsn	file "../Source/prod.c",line 5903,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5903| 
	.dwpsn	file "../Source/prod.c",line 5904,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5904| 
        ; branch occurs ; [] |5904| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5900,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5900| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5900| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5900| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5900| 
        MOV       ACC,AL << 1           ; [CPU_] |5900| 
        ADDL      ACC,XAR6              ; [CPU_] |5900| 
        ADDL      ACC,XAR3              ; [CPU_] |5900| 
        MOVL      XAR4,ACC              ; [CPU_] |5900| 
        MOVB      XAR0,#200             ; [CPU_] |5900| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5900| 
        MOVL      XAR4,XAR1             ; [CPU_] |5900| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5900| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_sprintf")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5900| 
        ; call occurs [#_sprintf] ; [] |5900| 
	.dwpsn	file "../Source/prod.c",line 5901,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5901| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5901| 
        ; call occurs [#_scia_puts] ; [] |5901| 
	.dwpsn	file "../Source/prod.c",line 5899,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5899| 
        B         $C$L22,UNC            ; [CPU_] |5899| 
        ; branch occurs ; [] |5899| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5895,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5895| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5895| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5895| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5895| 
        MOV       ACC,AL << 1           ; [CPU_] |5895| 
        ADDL      ACC,XAR6              ; [CPU_] |5895| 
        ADDL      ACC,XAR3              ; [CPU_] |5895| 
        MOVL      XAR4,ACC              ; [CPU_] |5895| 
        MOVB      XAR0,#178             ; [CPU_] |5895| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5895| 
        MOVL      XAR4,XAR1             ; [CPU_] |5895| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5895| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_sprintf")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5895| 
        ; call occurs [#_sprintf] ; [] |5895| 
	.dwpsn	file "../Source/prod.c",line 5896,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5896| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5896| 
        ; call occurs [#_scia_puts] ; [] |5896| 
	.dwpsn	file "../Source/prod.c",line 5894,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5894| 
        B         $C$L21,UNC            ; [CPU_] |5894| 
        ; branch occurs ; [] |5894| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5890,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5890| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5890| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5890| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5890| 
        ADDL      ACC,XAR6              ; [CPU_] |5890| 
        ADDL      ACC,XAR3              ; [CPU_] |5890| 
        MOVL      XAR4,ACC              ; [CPU_] |5890| 
        MOVB      XAR0,#154             ; [CPU_] |5890| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5890| 
        MOVL      XAR4,XAR1             ; [CPU_] |5890| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5890| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5890| 
        ; call occurs [#_sprintf] ; [] |5890| 
	.dwpsn	file "../Source/prod.c",line 5891,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5891| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5891| 
        ; call occurs [#_scia_puts] ; [] |5891| 
	.dwpsn	file "../Source/prod.c",line 5889,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5889| 
	.dwpsn	file "../Source/prod.c",line 5891,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5891| 
	.dwpsn	file "../Source/prod.c",line 5889,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5889| 
        ; branch occurs ; [] |5889| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5885,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5885| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5885| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5885| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5885| 
        ADDL      ACC,XAR6              ; [CPU_] |5885| 
        ADDL      ACC,XAR3              ; [CPU_] |5885| 
        MOVL      XAR4,ACC              ; [CPU_] |5885| 
        MOVB      XAR0,#130             ; [CPU_] |5885| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5885| 
        MOVL      XAR4,XAR1             ; [CPU_] |5885| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5885| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_sprintf")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5885| 
        ; call occurs [#_sprintf] ; [] |5885| 
	.dwpsn	file "../Source/prod.c",line 5886,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5886| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5886| 
        ; call occurs [#_scia_puts] ; [] |5886| 
	.dwpsn	file "../Source/prod.c",line 5884,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5884| 
	.dwpsn	file "../Source/prod.c",line 5886,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5886| 
	.dwpsn	file "../Source/prod.c",line 5884,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5884| 
        ; branch occurs ; [] |5884| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5880,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5880| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5880| 
        ADD       AH,AL                 ; [CPU_] |5880| 
        MOV       *-SP[7],AH            ; [CPU_] |5880| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5880| 
        MOVL      XAR4,XAR1             ; [CPU_] |5880| 
        MOV       *-SP[3],AH            ; [CPU_] |5880| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_sprintf")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5880| 
        ; call occurs [#_sprintf] ; [] |5880| 
	.dwpsn	file "../Source/prod.c",line 5881,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5881| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5881| 
        ; call occurs [#_scia_puts] ; [] |5881| 
        MOV       AL,*-SP[7]            ; [CPU_] |5881| 
	.dwpsn	file "../Source/prod.c",line 5879,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5879| 
        ; branch occurs ; [] |5879| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5836,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5836| 
$C$L29:    
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5836| 
        ; call occurs [#_scia_puts] ; [] |5836| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$169, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$169, DW_AT_TI_end_line(0x171a)
	.dwattr $C$DW$169, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$169

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$224	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$224, DW_AT_name("print_limits")
	.dwattr $C$DW$224, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$224, DW_AT_high_pc(0x00)
	.dwattr $C$DW$224, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$224, DW_AT_external
	.dwattr $C$DW$224, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$224, DW_AT_TI_begin_line(0x1761)
	.dwattr $C$DW$224, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$224, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5985,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$225	.dwtag  DW_TAG_variable
	.dwattr $C$DW$225, DW_AT_name("buff")
	.dwattr $C$DW$225, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$225, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$225, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 5985 | void print_limits(void) {                                              
; 5986 | int ii;                                                                
; 5987 | static char buff[64];                                                  
; 5988 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$226	.dwtag  DW_TAG_variable
	.dwattr $C$DW$226, DW_AT_name("ii")
	.dwattr $C$DW$226, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$226, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$226, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$227	.dwtag  DW_TAG_variable
	.dwattr $C$DW$227, DW_AT_name("up")
	.dwattr $C$DW$227, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$227, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$227, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 5990,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5990 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |5990| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_scia_puts")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5990| 
        ; call occurs [#_scia_puts] ; [] |5990| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5992,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5992 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |5992| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 5993,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5993 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |5993| 
        MOVB      AL,#1                 ; [CPU_] |5993| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5993| 
        ADD       AL,*-SP[9]            ; [CPU_] |5993| 
        MOVL      XAR4,XAR2             ; [CPU_] |5993| 
        MOV       *-SP[3],AL            ; [CPU_] |5993| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_sprintf")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5993| 
        ; call occurs [#_sprintf] ; [] |5993| 
	.dwpsn	file "../Source/prod.c",line 5994,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5994 | scia_puts(buff);                                                       
; 5996 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5994| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_scia_puts")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5994| 
        ; call occurs [#_scia_puts] ; [] |5994| 
	.dwpsn	file "../Source/prod.c",line 5998,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5998 | switch (conf_data.lim[ii].what) {                                      
; 5999 | case VFD_LOAD:                                                         
; 6000 | case VFD_PEAK:                                                         
; 6001 | case VFD_VALL:                                                         
; 6002 |         up =                                                           
; 6003 |                         UNITS[0x0f                                     
; 6004 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6005 |         break;                                                         
; 6006 | case VFD_POSI:                                                         
; 6007 |         up = POS_U;                                                    
; 6008 |         break;                                                         
; 6009 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |5998| 
        B         $C$L40,NTC            ; [CPU_] |5998| 
        ; branchcc occurs ; [] |5998| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5998| 
        CMPB      AL,#2                 ; [CPU_] |5998| 
        B         $C$L32,LOS            ; [CPU_] |5998| 
        ; branchcc occurs ; [] |5998| 
        CMPB      AL,#3                 ; [CPU_] |5998| 
        B         $C$L31,EQ             ; [CPU_] |5998| 
        ; branchcc occurs ; [] |5998| 
        CMPB      AL,#4                 ; [CPU_] |5998| 
        B         $C$L33,NEQ            ; [CPU_] |5998| 
        ; branchcc occurs ; [] |5998| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6010,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6010 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6010| 
	.dwpsn	file "../Source/prod.c",line 6011,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6011 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6011| 
        ; branch occurs ; [] |6011| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6007,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6007| 
	.dwpsn	file "../Source/prod.c",line 6008,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6008| 
        ; branch occurs ; [] |6008| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6002,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6002| 
        MOV       T,#10                 ; [CPU_] |6002| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6002| 
        ADDL      ACC,XAR6              ; [CPU_] |6002| 
        MOVL      XAR4,ACC              ; [CPU_] |6002| 
        MOVB      XAR0,#42              ; [CPU_] |6002| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6002| 
        MPYB      ACC,T,#152            ; [CPU_] |6002| 
        ADDL      ACC,XAR6              ; [CPU_] |6002| 
        MOVL      XAR4,ACC              ; [CPU_] |6002| 
        MOVB      XAR0,#125             ; [CPU_] |6002| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6002| 
        ANDB      AL,#0x0f              ; [CPU_] |6002| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6002| 
        MOV       ACC,AL << 1           ; [CPU_] |6002| 
        ADDL      XAR4,ACC              ; [CPU_] |6002| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6002| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6014,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6014 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6015 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6014| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6014| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6014| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6014| 
        ADDL      XAR4,ACC              ; [CPU_] |6014| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6014| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6014| 
        MOVL      XAR4,XAR2             ; [CPU_] |6014| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6014| 
        ADDB      AL,#1                 ; [CPU_] |6014| 
        MOV       *-SP[5],AL            ; [CPU_] |6014| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("_sprintf")
	.dwattr $C$DW$231, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6014| 
        ; call occurs [#_sprintf] ; [] |6014| 
	.dwpsn	file "../Source/prod.c",line 6016,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6016 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6016| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_scia_puts")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6016| 
        ; call occurs [#_scia_puts] ; [] |6016| 
	.dwpsn	file "../Source/prod.c",line 6017,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6017 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6018 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6019 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6020 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6017| 
        B         $C$L34,TC             ; [CPU_] |6017| 
        ; branchcc occurs ; [] |6017| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6017| 
        B         $C$L35,UNC            ; [CPU_] |6017| 
        ; branch occurs ; [] |6017| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6017| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6017| 
        B         $C$L36,TC             ; [CPU_] |6017| 
        ; branchcc occurs ; [] |6017| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6017| 
        B         $C$L37,UNC            ; [CPU_] |6017| 
        ; branch occurs ; [] |6017| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6017| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6017| 
        B         $C$L38,TC             ; [CPU_] |6017| 
        ; branchcc occurs ; [] |6017| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6017| 
        B         $C$L39,UNC            ; [CPU_] |6017| 
        ; branch occurs ; [] |6017| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6017| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6017| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6017| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6017| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6017| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6017| 
        MOVL      XAR4,XAR2             ; [CPU_] |6017| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_sprintf")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6017| 
        ; call occurs [#_sprintf] ; [] |6017| 
	.dwpsn	file "../Source/prod.c",line 6021,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6021 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6021| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6021| 
        ; call occurs [#_scia_puts] ; [] |6021| 
	.dwpsn	file "../Source/prod.c",line 6022,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6022 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6023 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6022| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6022| 
        MOVL      XAR4,XAR2             ; [CPU_] |6022| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6022| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6022| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6022| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_sprintf")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6022| 
        ; call occurs [#_sprintf] ; [] |6022| 
	.dwpsn	file "../Source/prod.c",line 6024,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6024 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6024| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6024| 
        ; call occurs [#_scia_puts] ; [] |6024| 
	.dwpsn	file "../Source/prod.c",line 6025,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6025 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6026 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6025| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6025| 
        MOVL      XAR4,XAR2             ; [CPU_] |6025| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6025| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6025| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6025| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6025| 
        ; call occurs [#_sprintf] ; [] |6025| 
	.dwpsn	file "../Source/prod.c",line 6027,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6027| 
	.dwpsn	file "../Source/prod.c",line 6028,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6028 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6028| 
        ; branch occurs ; [] |6028| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6029,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6029 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6029| 
$C$L41:    
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6029| 
        ; call occurs [#_scia_puts] ; [] |6029| 
	.dwpsn	file "../Source/prod.c",line 5992,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |5992| 
        INC       *-SP[9]               ; [CPU_] |5992| 
        MOV       AL,*-SP[9]            ; [CPU_] |5992| 
        CMPB      AL,#4                 ; [CPU_] |5992| 
        B         $C$L30,LT             ; [CPU_] |5992| 
        ; branchcc occurs ; [] |5992| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$224, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$224, DW_AT_TI_end_line(0x1790)
	.dwattr $C$DW$224, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$224

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$240	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$240, DW_AT_name("print_dac")
	.dwattr $C$DW$240, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$240, DW_AT_high_pc(0x00)
	.dwattr $C$DW$240, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$240, DW_AT_external
	.dwattr $C$DW$240, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$240, DW_AT_TI_begin_line(0x173d)
	.dwattr $C$DW$240, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$240, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5949,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$241	.dwtag  DW_TAG_variable
	.dwattr $C$DW$241, DW_AT_name("buff")
	.dwattr $C$DW$241, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$241, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$241, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5949 | void print_dac(void) {                                                 
; 5950 | int l;                                                                 
; 5951 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$242	.dwtag  DW_TAG_variable
	.dwattr $C$DW$242, DW_AT_name("l")
	.dwattr $C$DW$242, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$242, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$242, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5953,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5953 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5953| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_scia_puts")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5953| 
        ; call occurs [#_scia_puts] ; [] |5953| 
	.dwpsn	file "../Source/prod.c",line 5955,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5955 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5955| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5956,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5956 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5956| 
        MOVB      AL,#1                 ; [CPU_] |5956| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5956| 
        ADD       AL,AR1                ; [CPU_] |5956| 
        MOV       *-SP[3],AL            ; [CPU_] |5956| 
        MOVL      XAR4,XAR3             ; [CPU_] |5956| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_sprintf")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5956| 
        ; call occurs [#_sprintf] ; [] |5956| 
	.dwpsn	file "../Source/prod.c",line 5957,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5957 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5957| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_scia_puts")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5957| 
        ; call occurs [#_scia_puts] ; [] |5957| 
	.dwpsn	file "../Source/prod.c",line 5959,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5959 | sprintf(buff,                                                          
; 5960 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 5961 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 5962 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |5959| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5959| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5959| 
        MOVL      XAR4,XAR3             ; [CPU_] |5959| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5959| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5959| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5959| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |5959| 
        MOVL      *-SP[8],ACC           ; [CPU_] |5959| 
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("_sprintf")
	.dwattr $C$DW$246, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5959| 
        ; call occurs [#_sprintf] ; [] |5959| 
	.dwpsn	file "../Source/prod.c",line 5963,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5963 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5963| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5963| 
        ; call occurs [#_scia_puts] ; [] |5963| 
	.dwpsn	file "../Source/prod.c",line 5965,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5965 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |5965| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5965| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5965| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5965| 
        ADDL      XAR4,ACC              ; [CPU_] |5965| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5965| 
        MOVL      XAR4,XAR3             ; [CPU_] |5965| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5965| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_sprintf")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5965| 
        ; call occurs [#_sprintf] ; [] |5965| 
	.dwpsn	file "../Source/prod.c",line 5966,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5966 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5966| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_scia_puts")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5966| 
        ; call occurs [#_scia_puts] ; [] |5966| 
	.dwpsn	file "../Source/prod.c",line 5968,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5968 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5968| 
        CMPB      AL,#7                 ; [CPU_] |5968| 
        B         $C$L43,EQ             ; [CPU_] |5968| 
        ; branchcc occurs ; [] |5968| 
	.dwpsn	file "../Source/prod.c",line 5969,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5969 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |5969| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5969| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5969| 
        ADDB      AL,#1                 ; [CPU_] |5969| 
        MOVL      XAR4,XAR3             ; [CPU_] |5969| 
        MOV       *-SP[3],AL            ; [CPU_] |5969| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_sprintf")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5969| 
        ; call occurs [#_sprintf] ; [] |5969| 
	.dwpsn	file "../Source/prod.c",line 5970,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5970 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5970| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5970| 
        ; call occurs [#_scia_puts] ; [] |5970| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 5973,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5973 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 5974 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 5975 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 5976 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 5977 |         scia_puts(buff);                                               
; 5978 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5973| 
        CMPB      AL,#3                 ; [CPU_] |5973| 
        B         $C$L44,EQ             ; [CPU_] |5973| 
        ; branchcc occurs ; [] |5973| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |5973| 
        CMPB      AL,#4                 ; [CPU_] |5973| 
        B         $C$L44,EQ             ; [CPU_] |5973| 
        ; branchcc occurs ; [] |5973| 
	.dwpsn	file "../Source/prod.c",line 5979,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5979 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5979| 
        B         $C$L45,UNC            ; [CPU_] |5979| 
        ; branch occurs ; [] |5979| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 5975,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |5975| 
        MOVB      XAR0,#8               ; [CPU_] |5975| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5975| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5975| 
        MOVB      XAR0,#10              ; [CPU_] |5975| 
        MOVL      XAR4,XAR3             ; [CPU_] |5975| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5975| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5975| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5975| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_sprintf")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5975| 
        ; call occurs [#_sprintf] ; [] |5975| 
	.dwpsn	file "../Source/prod.c",line 5977,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5977| 
$C$L45:    
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5977| 
        ; call occurs [#_scia_puts] ; [] |5977| 
	.dwpsn	file "../Source/prod.c",line 5955,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5955| 
        ADDB      XAR2,#12              ; [CPU_] |5955| 
        MOV       AL,AR1                ; [CPU_] |5955| 
        CMPB      AL,#4                 ; [CPU_] |5955| 
        B         $C$L42,LT             ; [CPU_] |5955| 
        ; branchcc occurs ; [] |5955| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$240, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$240, DW_AT_TI_end_line(0x175e)
	.dwattr $C$DW$240, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$240

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$255	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$255, DW_AT_name("print_channel")
	.dwattr $C$DW$255, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$255, DW_AT_high_pc(0x00)
	.dwattr $C$DW$255, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$255, DW_AT_external
	.dwattr $C$DW$255, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$255, DW_AT_TI_begin_line(0x16ab)
	.dwattr $C$DW$255, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$255, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5803,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$256	.dwtag  DW_TAG_variable
	.dwattr $C$DW$256, DW_AT_name("buff")
	.dwattr $C$DW$256, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$256, DW_AT_type(*$C$DW$T$379)
	.dwattr $C$DW$256, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$257	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$257, DW_AT_name("ch")
	.dwattr $C$DW$257, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$257, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$257, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$258	.dwtag  DW_TAG_variable
	.dwattr $C$DW$258, DW_AT_name("ch")
	.dwattr $C$DW$258, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$258, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$258, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5803 | void print_channel(Uint16 ch) {                                        
; 5804 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5803| 
	.dwpsn	file "../Source/prod.c",line 5806,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5806 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5806| 
        MOVZ      AR1,AR2               ; [CPU_] |5806| 
        MOVB      AH,#1                 ; [CPU_] |5806| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5806| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5806| 
        ADD       AH,AR1                ; [CPU_] |5806| 
        MOVL      XAR4,XAR3             ; [CPU_] |5806| 
        MOV       *-SP[3],AH            ; [CPU_] |5806| 
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_name("_sprintf")
	.dwattr $C$DW$259, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5806| 
        ; call occurs [#_sprintf] ; [] |5806| 
	.dwpsn	file "../Source/prod.c",line 5807,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5807 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5807| 
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_name("_scia_puts")
	.dwattr $C$DW$260, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5807| 
        ; call occurs [#_scia_puts] ; [] |5807| 
	.dwpsn	file "../Source/prod.c",line 5809,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5809 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5809| 
        MOV       T,AR1                 ; [CPU_] |5809| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5809| 
        MPYU      ACC,T,AL              ; [CPU_] |5809| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5809| 
        ADDL      XAR1,ACC              ; [CPU_] |5809| 
        MOVB      XAR0,#44              ; [CPU_] |5809| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5809| 
        MOVL      XAR4,XAR3             ; [CPU_] |5809| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5809| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5809| 
$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("_sprintf")
	.dwattr $C$DW$261, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5809| 
        ; call occurs [#_sprintf] ; [] |5809| 
	.dwpsn	file "../Source/prod.c",line 5810,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5810 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5810| 
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5810| 
        ; call occurs [#_scia_puts] ; [] |5810| 
	.dwpsn	file "../Source/prod.c",line 5820,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5820 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5820| 
        MOVB      XAR0,#42              ; [CPU_] |5820| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5820| 
        MOVL      XAR4,XAR3             ; [CPU_] |5820| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5820| 
        ADDB      AL,#1                 ; [CPU_] |5820| 
        MOV       *-SP[3],AL            ; [CPU_] |5820| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_sprintf")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5820| 
        ; call occurs [#_sprintf] ; [] |5820| 
	.dwpsn	file "../Source/prod.c",line 5821,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5821 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5821| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5821| 
        ; call occurs [#_scia_puts] ; [] |5821| 
	.dwpsn	file "../Source/prod.c",line 5823,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5823 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5823| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5823| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5823| 
        B         $C$L46,EQ             ; [CPU_] |5823| 
        ; branchcc occurs ; [] |5823| 
	.dwpsn	file "../Source/prod.c",line 5824,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5824 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5824| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5824| 
        ; call occurs [#_scia_puts] ; [] |5824| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$255, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$255, DW_AT_TI_end_line(0x16c2)
	.dwattr $C$DW$255, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$255

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$267	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$267, DW_AT_name("matchTag")
	.dwattr $C$DW$267, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$267, DW_AT_high_pc(0x00)
	.dwattr $C$DW$267, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$267, DW_AT_external
	.dwattr $C$DW$267, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$267, DW_AT_TI_begin_line(0x1687)
	.dwattr $C$DW$267, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$267, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5767,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$268	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$268, DW_AT_name("ch")
	.dwattr $C$DW$268, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$268, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$268, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5767 | void matchTag(Uint16 ch) {                                             
; 5768 | Uint16 sns;                                                            
; 5769 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$269	.dwtag  DW_TAG_variable
	.dwattr $C$DW$269, DW_AT_name("ch")
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$269, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$269, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("sns")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$271	.dwtag  DW_TAG_variable
	.dwattr $C$DW$271, DW_AT_name("tag")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5771,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5771 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5771| 
	.dwpsn	file "../Source/prod.c",line 5767,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5767| 
	.dwpsn	file "../Source/prod.c",line 5771,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5771| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5771| 
        MOVL      XAR1,ACC              ; [CPU_] |5771| 
	.dwpsn	file "../Source/prod.c",line 5773,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5773 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5773| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5773| 
	.dwpsn	file "../Source/prod.c",line 5771,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5771| 
	.dwpsn	file "../Source/prod.c",line 5773,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5774 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5773| 
        B         $C$L50,EQ             ; [CPU_] |5773| 
        ; branchcc occurs ; [] |5773| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5773| 
        B         $C$L50,HIS            ; [CPU_] |5773| 
        ; branchcc occurs ; [] |5773| 
	.dwpsn	file "../Source/prod.c",line 5777,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5777 | tag = tagid(ch);                                                       
; 5778 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5779 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$272, DW_AT_name("_tagid")
	.dwattr $C$DW$272, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5777| 
        ; call occurs [#_tagid] ; [] |5777| 
        MOVB      XAR6,#0               ; [CPU_] |5777| 
        MOVL      XAR3,ACC              ; [CPU_] |5777| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5777| 
        MOV       *-SP[2],#0            ; [CPU_] |5777| 
        MOV       *-SP[1],#0            ; [CPU_] |5777| 
$C$DW$273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$273, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$273, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5777| 
        ; call occurs [#ULL$$CMP] ; [] |5777| 
        CMPB      AL,#0                 ; [CPU_] |5777| 
        B         $C$L50,EQ             ; [CPU_] |5777| 
        ; branchcc occurs ; [] |5777| 
        MOVB      ACC,#0                ; [CPU_] |5777| 
        SUBB      ACC,#1                ; [CPU_] |5777| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5777| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5777| 
        MOVL      ACC,XAR3              ; [CPU_] |5777| 
$C$DW$274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$274, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$274, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5777| 
        ; call occurs [#ULL$$CMP] ; [] |5777| 
        CMPB      AL,#0                 ; [CPU_] |5777| 
        B         $C$L50,EQ             ; [CPU_] |5777| 
        ; branchcc occurs ; [] |5777| 
	.dwpsn	file "../Source/prod.c",line 5780,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5780 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5780| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5780| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5780| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5782,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5782 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5784 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5782| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5785,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5785 | continue;                       // not calibrated                      
; 5788 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5785| 
        B         $C$L48,EQ             ; [CPU_] |5785| 
        ; branchcc occurs ; [] |5785| 
	.dwpsn	file "../Source/prod.c",line 5789,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5789 | continue;                       // doesn't match, skip                 
; 5792 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5789| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5789| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5789| 
        MOVL      ACC,XAR3              ; [CPU_] |5789| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5789| 
$C$DW$275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$275, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$275, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5789| 
        ; call occurs [#ULL$$CMP] ; [] |5789| 
        CMPB      AL,#0                 ; [CPU_] |5789| 
        B         $C$L49,EQ             ; [CPU_] |5789| 
        ; branchcc occurs ; [] |5789| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5782,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5782| 
        MOVL      XAR0,ACC              ; [CPU_] |5782| 
        ADDB      XAR4,#1               ; [CPU_] |5782| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5782| 
        ; branchcc occurs ; [] |5782| 
        B         $C$L50,UNC            ; [CPU_] |5782| 
        ; branch occurs ; [] |5782| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5793,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5793 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5793| 
	.dwpsn	file "../Source/prod.c",line 5794,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5794 | conf_data.ch[ch].ci = sns;                                             
; 5796 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5794| 
        MOV       T,*-SP[5]             ; [CPU_] |5794| 
        MPYU      ACC,T,AL              ; [CPU_] |5794| 
        ADDL      ACC,XAR2              ; [CPU_] |5794| 
        MOVL      XAR5,ACC              ; [CPU_] |5794| 
        MOVB      XAR0,#42              ; [CPU_] |5794| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5794| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$267, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$267, DW_AT_TI_end_line(0x16a7)
	.dwattr $C$DW$267, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$267

	.sect	".text"
	.clink
	.global	_main

$C$DW$277	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$277, DW_AT_name("main")
	.dwattr $C$DW$277, DW_AT_low_pc(_main)
	.dwattr $C$DW$277, DW_AT_high_pc(0x00)
	.dwattr $C$DW$277, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$277, DW_AT_external
	.dwattr $C$DW$277, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$277, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$277, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$277, DW_AT_TI_max_frame_size(-152)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$278	.dwtag  DW_TAG_variable
	.dwattr $C$DW$278, DW_AT_name("buff")
	.dwattr $C$DW$278, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$278, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$278, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$279	.dwtag  DW_TAG_variable
	.dwattr $C$DW$279, DW_AT_name("cmdbuff")
	.dwattr $C$DW$279, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$279, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$279, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 150           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 133 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U141
;* AR1   assigned to $O$U320
;* AR1   assigned to $O$U349
;* AR1   assigned to $O$U560
;* AR1   assigned to $O$U688
;* AR1   assigned to $O$U787
;* AR1   assigned to $O$U824
;* AR5   assigned to $O$U840
;* AL    assigned to $O$U999
;* AR1   assigned to $O$U977
;* AR1   assigned to $O$U1068
;* AR1   assigned to $O$U967
;* AR6   assigned to $O$U1269
;* AR1   assigned to $O$U1295
;* AR7   assigned to $O$U1531
;* XT    assigned to $O$U1558
;* PL    assigned to $O$U1559
;* AR5   assigned to $O$U1583
;* PL    assigned to $O$U1588
;* PL    assigned to $O$U1595
;* AR7   assigned to $O$U1597
;* AR5   assigned to $O$U1598
;* AR5   assigned to $O$U1612
;* XT    assigned to $O$U1654
;* PL    assigned to $O$U1655
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$280	.dwtag  DW_TAG_variable
	.dwattr $C$DW$280, DW_AT_name("ccp")
	.dwattr $C$DW$280, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$280, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$280, DW_AT_location[DW_OP_breg20 -104]

$C$DW$281	.dwtag  DW_TAG_variable
	.dwattr $C$DW$281, DW_AT_name("tempft")
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$281, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$281, DW_AT_location[DW_OP_breg20 -12]

$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("templg")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_breg20 -14]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("ds_ct")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -47]

$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("ds_sn")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -49]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("ds_bm")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -50]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("ds_dec")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -51]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("ds_dn")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -52]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ds_stop")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -53]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ds_en")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -54]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("bincmdresult")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -47]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("line")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -55]

$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("daccbm")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -56]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("tempvalue")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -106]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("scale")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -16]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("unsaved")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -48]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("tagch")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -143]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("ss")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -57]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("ch")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -58]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("version")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U248
;* AR1   assigned to $O$U248
;* AR5   assigned to $O$U248
;* AR5   assigned to $O$U248
;* AR5   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR7   assigned to $O$U248
;* AR7   assigned to $O$U248
;* AR7   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR5   assigned to $O$U248
;* AR5   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR1   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR5   assigned to $O$U248
;* AR1   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR1   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR4   assigned to $O$U248
;* AR1   assigned to $O$U248
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U417
;* AR1   assigned to $O$U417
;* AR1   assigned to $O$U417
;* AR1   assigned to $O$U395
;* AR1   assigned to $O$U395
;* AR1   assigned to $O$U395
;* AR1   assigned to $O$U395
;* AR1   assigned to $O$U395
;* AR5   assigned to $O$U395
;* AR7   assigned to $O$U395
;* AR1   assigned to $O$U286
;* AR1   assigned to $O$U581
;* AR1   assigned to $O$U581
;* AR1   assigned to $O$U626
;* AR1   assigned to $O$U626
;* AR4   assigned to $O$K815
;* AR4   assigned to $O$K815
;* AR1   assigned to $O$K815
;* AR4   assigned to $O$K815
;* AR1   assigned to $O$K815
;* AR1   assigned to $O$K815
;* AR1   assigned to $O$K815
;* AR1   assigned to $O$K815
;* AR5   assigned to $O$K815
;* AR5   assigned to $O$K815
;* AR1   assigned to $O$K815
;* AR1   assigned to $O$U869
;* AR1   assigned to $O$U869
;* AR1   assigned to $O$U892
;* AR3   assigned to $O$U892
;* AR1   assigned to $O$U892
;* AR6   assigned to $O$U849
;* AL    assigned to $O$U849
;* AR1   assigned to $O$U918
;* AR1   assigned to $O$U918
;* AR1   assigned to $O$U998
;* AR7   assigned to $O$U998
;* AR5   assigned to $O$U998
;* AR5   assigned to $O$U998
;* AR5   assigned to $O$U998
;* AR7   assigned to $O$U998
;* AR7   assigned to $O$U998
;* AR7   assigned to $O$U998
;* AR7   assigned to $O$U998
;* AR4   assigned to $O$U998
;* AR4   assigned to $O$U998
;* AR7   assigned to $O$U998
;* AR7   assigned to $O$U998
;* AR1   assigned to $O$K303
;* AR7   assigned to $O$U1134
;* AR7   assigned to $O$U1134
;* AR7   assigned to $O$U1134
;* AR7   assigned to $O$U1134
;* AR4   assigned to $O$U1136
;* AR4   assigned to $O$U1136
;* AR4   assigned to $O$U1136
;* AR4   assigned to $O$U1136
;* AR3   assigned to $O$U1170
;* AR1   assigned to $O$U1170
;* AR1   assigned to $O$U1170
;* AR1   assigned to $O$U1176
;* AR4   assigned to $O$U1188
;* AR4   assigned to $O$U1185
;* AR7   assigned to $O$U1185
;* PL    assigned to $O$U1185
;* AR7   assigned to $O$U1185
;* AR4   assigned to $O$U1185
;* AR5   assigned to $O$U1245
;* AR4   assigned to $O$U1245
;* AR5   assigned to $O$U1324
;* AR5   assigned to $O$U1324
;* AR4   assigned to $O$U1320
;* AR4   assigned to $O$U1320
;* AR5   assigned to $O$U1379
;* AR5   assigned to $O$U1379
;* PL    assigned to $O$U1385
;* AR0   assigned to $O$U1385
;* AR1   assigned to $O$U1386
;* AR7   assigned to $O$U1386
;* AR0   assigned to $O$U1422
;* AR5   assigned to $O$U1422
;* PL    assigned to $O$U1425
;* AR1   assigned to $O$U1425
;* AR1   assigned to $O$U1426
;* AR7   assigned to $O$U1426
;* AR5   assigned to $O$U1464
;* AR5   assigned to $O$U1464
;* AR0   assigned to $O$U1499
;* AR5   assigned to $O$U1499
;* AR4   assigned to $O$U1534
;* AR1   assigned to $O$U1534
;* AR5   assigned to $O$U1534
;* AR5   assigned to $O$U1534
;* AR4   assigned to $O$U1623
;* AR5   assigned to $O$U1623
;* AR4   assigned to $O$U1623
;* AR5   assigned to $O$U1632
;* AR3   assigned to _intp
$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("intp")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("intp")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("intp")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("intp")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("tempint")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("tempint")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("temp16")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg10]

$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("temp16")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_breg20 -59]

$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("temp32")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _temp32
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("temp32")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("cmethod")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg6]

$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("cmethod")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("flash_ret")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("flash_ret")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("flash_ret")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("flash_ret")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("slen")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("slen")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("slen")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("slen")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("slen")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("slen")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("pt")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("pt")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg0]

$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("pt")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_breg20 -59]

$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("pt")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _pt
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("pt")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("pt")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("pt")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_reg12]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("pt")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("pt")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("wtp")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("wtp")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("wtp")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("wtp")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg12]

$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("cmdlen")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _cmdlen
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("cmdlen")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg0]

$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("cmdlen")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_breg20 -47]

$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("cmdlen")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("cmdlen")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("cmdlen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("cmdlen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg0]

$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("k")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_breg20 -59]

$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("k")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_breg20 -60]

$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("k")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_breg20 -60]

$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("k")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("k")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_reg16]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("k")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -59]

$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("k")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("k")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_reg2]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("k")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("k")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("k")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("j")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg10]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("j")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -47]

$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("j")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_breg20 -47]

$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("j")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_breg20 -47]

;* AR1   assigned to _j
$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_reg6]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -47]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -47]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -47]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -47]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -60]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -60]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -47]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -59]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -61]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -48]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -48]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -48]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -48]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -48]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -48]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -47]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -61]

;* AR1   assigned to _i
$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("i")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("i")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("i")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_reg0]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("i")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -47]

;* AR7   assigned to _i
$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg18]

$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_reg0]

$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_breg20 -47]

$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_breg20 -47]

$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg16]

$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg16]

$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("volt")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$371)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_breg20 -24]

$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("dsum")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$352)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_breg20 -32]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("dacc")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$306)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -35]

$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("sampcnt")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$333)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_breg20 -38]

$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("data")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#144               ; [CPU_] 
	.dwcfi	cfa_offset, -152
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$472, DW_AT_name("_sys_init")
	.dwattr $C$DW$472, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$473, DW_AT_name("_delay_us")
	.dwattr $C$DW$473, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$474, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$474, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$475, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$475, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_gpio_init")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_extio_init")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_InitECan")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
; 243 | // Set SD select output as appropriate (Usually high)                  
; 244 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 257 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_configCAN")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 258,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 258 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 259 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 261 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |258| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |258| 
        MOVL      ACC,XAR5              ; [CPU_] |258| 
        SUBL      XAR4,ACC              ; [CPU_] |258| 
        MOVL      ACC,XAR4              ; [CPU_] |258| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |258| 
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_memcpy")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |258| 
        ; call occurs [#_memcpy] ; [] |258| 
	.dwpsn	file "../Source/prod.c",line 262,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 263 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |262| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |262| 
        MOVL      ACC,XAR5              ; [CPU_] |262| 
        SUBL      XAR4,ACC              ; [CPU_] |262| 
        MOVL      ACC,XAR4              ; [CPU_] |262| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |262| 
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_memcpy")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |262| 
        ; call occurs [#_memcpy] ; [] |262| 
	.dwpsn	file "../Source/prod.c",line 280,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |280| 
        MOV       AH,#479               ; [CPU_] |280| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |280| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 290,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | Flash_CallbackPtr = NULL;                                              
; 292 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |290| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |290| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_flash_init")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |293| 
        ; call occurs [#_flash_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_led_init")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |295| 
        ; call occurs [#_led_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | lcd_init();                             // lcd/vfd display             
; 298 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_lcd_init")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |296| 
        ; call occurs [#_lcd_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_ssr_set")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_ssr_set")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_ssr_set")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(3, 0);                  // indicate gui not connected          
; 305 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_ssr_set")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_conf_read")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |318| 
        ; call occurs [#_conf_read] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |319| 
        MOV       AH,#21930             ; [CPU_] |319| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |319| 
        B         $C$L51,EQ             ; [CPU_] |319| 
        ; branchcc occurs ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_conf_default")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |320| 
        ; call occurs [#_conf_default] ; [] |320| 
	.dwpsn	file "../Source/prod.c",line 321,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 321 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_conf_write")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |321| 
        ; call occurs [#_conf_write] ; [] |321| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |324| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |324| 
        ; call occurs [#_shunt_switch] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |326| 
        ; call occurs [#_ad7738_init] ; [] |326| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | ad7738_setcal();                                                       
; 329 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |327| 
        ; call occurs [#_ad7738_setcal] ; [] |327| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | tagwasthere[i] = 0;                                                    
; 333 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 329,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |335| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_delay_us")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |335| 
        ; call occurs [#_delay_us] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | lcd_clear();                                                           
; 338 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |337| 
        ; call occurs [#_lcd_clear] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |339| 
        MOVL      XAR0,#44              ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      *-SP[4],ACC           ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |339| 
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_sprintf")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |341| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |341| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_sprintf")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |341| 
        ; call occurs [#_sprintf] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |342| 
        MOVL      XAR4,XAR1             ; [CPU_] |342| 
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |343| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |343| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |343| 
        ; call occurs [#_lcd_dputs] ; [] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 346,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |346| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 348,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |348| 
        TBIT      AL,#4                 ; [CPU_] |348| 
        B         $C$L54,TC             ; [CPU_] |348| 
        ; branchcc occurs ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |349| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 352,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | if (1 & i) {                                                           
; 353 |         led_set( LED1, LED_RED);                                       
; 354 |         led_set( LED2, LED_RED);                                       
; 355 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |352| 
        B         $C$L55,TC             ; [CPU_] |352| 
        ; branchcc occurs ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |356| 
        MOVB      AH,#2                 ; [CPU_] |356| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_led_set")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |356| 
        ; call occurs [#_led_set] ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 357,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |357| 
        B         $C$L56,UNC            ; [CPU_] |357| 
        ; branch occurs ; [] |357| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |353| 
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_led_set")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |354| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |354| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_led_set")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 359,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |359| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_delay_us")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |359| 
        ; call occurs [#_delay_us] ; [] |359| 
	.dwpsn	file "../Source/prod.c",line 346,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |346| 
        MOV       AL,AR1                ; [CPU_] |346| 
        CMPB      AL,#100               ; [CPU_] |346| 
        B         $C$L53,LT             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_led_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |363| 
        MOVB      AH,#0                 ; [CPU_] |363| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_led_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
        MOV       AL,AR1                ; [CPU_] |363| 
	.dwpsn	file "../Source/prod.c",line 365,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |365| 
        CMPB      AL,#20                ; [CPU_] |365| 
        B         $C$L58,GEQ            ; [CPU_] |365| 
        ; branchcc occurs ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |366| 
        MOVL      XAR4,XAR5             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |366| 
        INC       *+XAR4[0]             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |368| 
        CMPB      AL,#4                 ; [CPU_] |368| 
        B         $C$L57,LT             ; [CPU_] |368| 
        ; branchcc occurs ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 369,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |369| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |369| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |372| 
        MOVB      AL,#40                ; [CPU_] |372| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |372| 
        ; call occurs [#_lcd_dputs] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_conf_write")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |374| 
        ; call occurs [#_conf_write] ; [] |374| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |377| 
        MOVL      XAR0,#74              ; [CPU_] |377| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |377| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |377| 
        MOVB      XAR0,#35              ; [CPU_] |377| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |377| 
        ADDL      XAR4,ACC              ; [CPU_] |377| 
        MOVL      XAR0,#88              ; [CPU_] |377| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[52],#60          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[50],#15          ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 379,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | switch (conf_data.rxdir) {                                             
; 380 | case SDIR_RS232:                        // RS232, 0                    
; 381 |         led_set( LED1, LED_RED);                                       
; 382 |         led_set( LED2, LED_RED);                                       
; 383 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 384 |         scia_init(temp32);                                             
; 385 |         break;                                                         
; 386 | case SDIR_RS485:                        // RS485, 1                    
; 387 |         led_set( LED1, LED_GREEN);                                     
; 388 |         led_set( LED2, LED_RED);                                       
; 389 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 390 |         scia_init(temp32);                                             
; 391 |         break;                                                         
; 392 | case SDIR_ENET:                 // Ethernet, 2                         
; 393 |         led_set( LED1, LED_RED);                                       
; 394 |         led_set( LED2, LED_GREEN);                                     
; 395 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 396 |         scia_init(921600L);                                            
; 397 |         //scia_init( 460800L );                                        
; 398 |         break;                                                         
; 399 | case SDIR_USB:                  // USB, 3                              
; 400 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 401 |         led_set( LED1, LED_GREEN);                                     
; 402 |         led_set( LED2, LED_GREEN);                                     
; 403 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 404 |         // the USB chip can't handle 921600bps without dropping bytes  
; 405 |         // it seems 460800bps is fine so far.                          
; 406 |         // the client (PC Host) side can use any baudrate.             
; 407 |         scia_init(460800L);                                            
; 408 |         break;                                                         
; 409 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |379| 
        B         $C$L64,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#1                 ; [CPU_] |379| 
        B         $C$L63,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#2                 ; [CPU_] |379| 
        B         $C$L60,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#3                 ; [CPU_] |379| 
        B         $C$L59,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#1                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_led_set")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_led_set")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 414 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |413| 
        MOVL      XAR0,#72              ; [CPU_] |413| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        MOVB      XAR0,#34              ; [CPU_] |413| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |413| 
	.dwpsn	file "../Source/prod.c",line 415,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |415| 
        ; branch occurs ; [] |415| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_led_set")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |402| 
        MOVB      AH,#2                 ; [CPU_] |402| 
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_led_set")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |403| 
        MOVL      XAR0,#72              ; [CPU_] |403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |403| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |403| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |403| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |403| 
        ADDL      XAR4,ACC              ; [CPU_] |403| 
        MOVL      XAR0,#44              ; [CPU_] |403| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |403| 
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_sprintf")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |403| 
        ; call occurs [#_sprintf] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |407| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |393| 
        MOVB      AH,#1                 ; [CPU_] |393| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_led_set")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |394| 
        MOVB      AH,#2                 ; [CPU_] |394| 
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_led_set")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |394| 
        ; call occurs [#_led_set] ; [] |394| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |395| 
        MOVL      XAR0,#72              ; [CPU_] |395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |395| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |395| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |395| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |395| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |395| 
        MOVL      XAR0,#44              ; [CPU_] |395| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |395| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_sprintf")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |395| 
        ; call occurs [#_sprintf] ; [] |395| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |396| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |398| 
        ; branch occurs ; [] |398| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 387,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |391| 
        ; branch occurs ; [] |391| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |381| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_led_set")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |382| 
        MOVB      AH,#1                 ; [CPU_] |382| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_led_set")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |382| 
        ; call occurs [#_led_set] ; [] |382| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |383| 
        MOVL      XAR0,#72              ; [CPU_] |383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |383| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |383| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |383| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |383| 
        ADDL      XAR4,ACC              ; [CPU_] |383| 
        MOVL      XAR0,#88              ; [CPU_] |383| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |383| 
        MOVL      *-SP[4],ACC           ; [CPU_] |383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |383| 
        MOVL      XAR0,#44              ; [CPU_] |383| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |383| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_sprintf")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |383| 
        ; call occurs [#_sprintf] ; [] |383| 
        MOVL      ACC,XAR1              ; [CPU_] |383| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_scia_init")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |384| 
        ; call occurs [#_scia_init] ; [] |384| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |417| 
        ; call occurs [#_lcd_clear] ; [] |417| 
        MOVL      XAR0,#44              ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |418| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |418| 
        ; call occurs [#_lcd_dputs] ; [] |418| 
	.dwpsn	file "../Source/prod.c",line 421,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | uart_set_dir(conf_data.rxdir);                                         
; 423 | // initalize hardware and SFCLIB buffers                               
; 424 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 426 | // Enable global Interrupts and higher priority real-time debug events:
; 427 | EINT;                                                                  
; 428 | // Enable Global interrupt INTM                                        
; 429 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |421| 
        MOVL      XAR0,#40              ; [CPU_] |421| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |421| 
        MOVB      XAR0,#34              ; [CPU_] |421| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |421| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |421| 
        ; call occurs [#_uart_set_dir] ; [] |421| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 433 |         for (i = 0; i < 50; i++)                // 1s                  
; 435 |                 delay_us(20000);                // delay for 20ms      
; 437 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
        CMPB      AL,#3                 ; [CPU_] |431| 
        B         $C$L76,NEQ            ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |439| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 441,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 443 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |441| 
        ; branch occurs ; [] |441| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L70,EQ             ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |443| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |445| 
        ; call occurs [#_scia_rx_getcmd] ; [] |445| 
        MOV       T,*-SP[47]            ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | lcd_puts(cmdbuff, 20 * j);                                             
; 447 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |446| 
        MOVL      XAR4,XAR1             ; [CPU_] |446| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |446| 
        ; call occurs [#_lcd_puts] ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |448| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |448| 
        B         $C$L69,LT             ; [CPU_] |448| 
        ; branchcc occurs ; [] |448| 
	.dwpsn	file "../Source/prod.c",line 449,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |449| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L68,NEQ            ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 441,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |441| 
        TBIT      AL,#5                 ; [CPU_] |441| 
        B         $C$L67,NTC            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
        SPM       #0                    ; [CPU_] 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_puts")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |454| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_delay_us")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |454| 
        ; call occurs [#_delay_us] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_puts("E\r");                                                      
; 456 | j = 0;                                                                 
; 457 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |455| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_scia_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |455| 
        ; call occurs [#_scia_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 458,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | for (i = 0; i < WTT; i++)               // 10s                         
; 460 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |456| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 461,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmds] ; [] |461| 
        CMPB      AL,#0                 ; [CPU_] |461| 
        B         $C$L72,EQ             ; [CPU_] |461| 
        ; branchcc occurs ; [] |461| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |462| 
        ; call occurs [#_scia_rx_getcmd] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |463| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |465| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_delay_us")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |465| 
        ; call occurs [#_delay_us] ; [] |465| 
        MOV       AL,*-SP[47]           ; [CPU_] |465| 
	.dwpsn	file "../Source/prod.c",line 466,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |466| 
        B         $C$L73,LT             ; [CPU_] |466| 
        ; branchcc occurs ; [] |466| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 469,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 469 | i = WTT - 10;                                                          
; 473 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |469| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 458,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |458| 
        CMP       AR1,#500              ; [CPU_] |458| 
        B         $C$L71,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |474| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_scia_puts")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_delay_us")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |476| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_scia_puts")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_delay_us")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |478| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_puts")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |479| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_delay_us")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |479| 
        ; call occurs [#_delay_us] ; [] |479| 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |480| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_scia_puts")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |480| 
        ; call occurs [#_scia_puts] ; [] |480| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 482,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 482 | j = 0;                                                                 
; 483 | for (i = 0; i < 100; i++)               // 2s                          
; 485 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |482| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 486,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmds] ; [] |486| 
        CMPB      AL,#0                 ; [CPU_] |486| 
        B         $C$L75,EQ             ; [CPU_] |486| 
        ; branchcc occurs ; [] |486| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |487| 
        ; call occurs [#_scia_rx_getcmd] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       T,*-SP[47]            ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |488| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |488| 
        ; call occurs [#_lcd_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |489| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |489| 
        B         $C$L75,LT             ; [CPU_] |489| 
        ; branchcc occurs ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |490| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 493,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 493 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |493| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_delay_us")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |493| 
        ; call occurs [#_delay_us] ; [] |493| 
	.dwpsn	file "../Source/prod.c",line 483,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |483| 
        ; branchcc occurs ; [] |483| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 496,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |496| 
        B         $C$L78,UNC            ; [CPU_] |496| 
        ; branch occurs ; [] |496| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 435,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |435| 
        SPM       #0                    ; [CPU_] 
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_delay_us")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |435| 
        ; call occurs [#_delay_us] ; [] |435| 
	.dwpsn	file "../Source/prod.c",line 433,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |433| 
        ; branchcc occurs ; [] |433| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 499,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 501 | #ifdef SDHCCARD                                                        
; 503 | // check SD card                                                       
; 504 | lcd_puts( "SD Card Testing...", 0 );                                   
; 505 | sd_write = 0;                                                          
; 506 | sd_close = 0;                                                          
; 507 | sd_cnt = 0;                                                            
; 508 | fp = NULL;                                                             
; 510 | f_mount( 0, &Fatfs );                                                  
; 512 | res = f_getfree( "0:", &fsize, &fs );                                  
; 514 | sprintf( buff, "%02X", res );                                          
; 515 | lcd_puts( buff, 18 );                                                  
; 517 | if( !res )                                                             
; 519 |         switch( fs->fs_type & 3 )                                      
; 521 |                 case 1:                                                
; 522 |                 lcd_puts( "FAT12", 20 );                               
; 523 |                 break;                                                 
; 524 |                 case 2:                                                
; 525 |                 lcd_puts( "FAT16", 20 );                               
; 526 |                 break;                                                 
; 527 |                 case 3:                                                
; 528 |                 lcd_puts( "FAT32", 20 );                               
; 529 |                 break;                                                 
; 532 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 533 |         lcd_puts( buff, 40 );                                          
; 535 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 536 |         lcd_puts( buff, 60 );                                          
; 538 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 540 |                 switch( res )                                          
; 542 |                         case CT_MMC:                                   
; 543 |                         lcd_puts( "on MMC", 26 );                      
; 544 |                         break;                                         
; 545 |                         case CT_SD1:                                   
; 546 |                         lcd_puts( "on SDV1", 26 );                     
; 547 |                         break;                                         
; 548 |                         case CT_SD2:                                   
; 549 |                         lcd_puts( "on SDV2", 26 );                     
; 550 |                         break;                                         
; 551 |                         case CT_SD2|CT_BLOCK:                          
; 552 |                         lcd_puts( "on SDHC", 26 );                     
; 553 |                         break;                                         
; 554 |                         default:                                       
; 555 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 556 |                         break;                                         
; 561 | else                                                                   
; 563 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 579 | for( i = 0; i < 100; i++ )                      // 2s                  
; 581 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 583 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |499| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |499| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |585| 
        MOVB      AH,#2                 ; [CPU_] |585| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_led_set")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |586| 
        MOVB      AH,#0                 ; [CPU_] |586| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_led_set")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |586| 
        ; call occurs [#_led_set] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_update_units")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |588| 
        ; call occurs [#_update_units] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |590| 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | ad7738_resetvall( BM_ALL);              // reset valley                
; 592 | line = 0;                                                              
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | // main loop                                                           
; 596 | //=====================================================================
;     | =====//                                                                
; 597 | char data[8];                                                          
; 598 | int n;                                                                 
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |591| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |591| 
        ; call occurs [#_ad7738_resetvall] ; [] |591| 
	.dwpsn	file "../Source/prod.c",line 600,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 600 | SPICANInit();                                                          
; 601 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |600| 
        ; call occurs [#_SPICANInit] ; [] |600| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 603,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 603 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |603| 
	.dwpsn	file "../Source/prod.c",line 606,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 606 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |606| 
        ; call occurs [#_SPICANReadStat] ; [] |606| 
        MOV       *-SP[46],AL           ; [CPU_] |606| 
	.dwpsn	file "../Source/prod.c",line 607,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 607 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |607| 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |607| 
        ; call occurs [#_SPICANRead] ; [] |607| 
        MOV       *-SP[45],AL           ; [CPU_] |607| 
	.dwpsn	file "../Source/prod.c",line 608,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 608 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |608| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |608| 
        ; call occurs [#_SPICANRead] ; [] |608| 
        MOV       *-SP[44],AL           ; [CPU_] |608| 
	.dwpsn	file "../Source/prod.c",line 609,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 609 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |609| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |609| 
        ; call occurs [#_SPICANRead] ; [] |609| 
        MOV       *-SP[43],AL           ; [CPU_] |609| 
	.dwpsn	file "../Source/prod.c",line 610,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 610 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |610| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |610| 
        ; call occurs [#_SPICANRead] ; [] |610| 
        MOV       *-SP[42],AL           ; [CPU_] |610| 
	.dwpsn	file "../Source/prod.c",line 611,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 611 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |611| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |611| 
        ; call occurs [#_SPICANRead] ; [] |611| 
        MOV       *-SP[41],AL           ; [CPU_] |611| 
	.dwpsn	file "../Source/prod.c",line 612,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 612 | data[6] = SPICANRead(0x70);                                            
; 614 | for (;;) {                                                             
; 616 |         SPICANReadSetT0Message(0xA1, 8, data);                         
; 617 |         SPICAN_T0_RTS();                                               
; 620 |         // check SW2 for reset command                                 
; 621 |         if (!(0x0010 & INBTTN)) {                                      
; 623 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 624 |                 ad7738_resetpeak(0x0f);                                
; 625 |                 ad7738_resetvall(0x0f);                                
; 627 | #if(0)                                                                 
; 628 |                 // DEBUG: tagid                                        
; 629 |                 lcd_clear();                                           
; 630 |                 for( i = 0; i < 4; i++ )                               
; 632 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 633 |                         lcd_puts( buff, i * 20 );                      
; 635 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 637 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 639 |                 // DEBUG: tagid                                        
; 640 |                 update_units();                                        
; 641 | #endif                                                                 
; 645 | #ifdef SDHCCARD                                                        
; 646 |         // write to SD card file if flag set                           
; 647 |         if( sd_write && fp )                                           
; 649 |                 if( prod_getavail() > 31 || sd_close )                 
; 651 |                         led_set( LED2, LED_RED );                      
; 653 |                         k = 32;                                        
; 655 |                         while( prod_getavail() && k-- )                
; 657 |                                 wtp = prod_getnext();                  
; 659 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 661 |                                         intp = (Uint16*)&wtp->adw[i];  
; 663 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 665 |                                         for( j = 0; j < 2; j++ )       
; 667 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 668 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 669 |                                                 intp++;                
; 672 |                                 sd_cnt++;                              
; 675 |                         if( sd_close )                                 
; 677 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 678 |                                 if( res )                              
; 680 |                                         sprintf( buff, "%02X ", res ); 
; 681 |                                         scia_puts( buff );             
; 684 |                                 res = f_close( fp );                   
; 685 |                                 fp = NULL;                             
; 687 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 688 |                                 scia_puts( buff );                     
; 690 |                                 sd_write = 0;                          
; 691 |                                 sd_close = 0;                          
; 694 |                         led_set( LED2, LED_OFF );                      
; 697 | #endif                                                                 
; 699 |         //=============================================================
;     | =====================//                                                
; 700 |         // update the vfd
;     |                          //                                            
; 701 |         //=============================================================
;     | =====================//                                                
; 702 |         // if there is new "monitor data" ready                        
; 703 |         if (ad7738_monrdy()) {                                         
; 704 |                 // clear the ready flag                                
; 705 |                 ad7738_monclr();                                       
; 707 |                 // display the appropriate data                        
; 708 |                 switch (conf_data.vfd[line].what) {                    
; 709 |                 case VFD_LOAD:                                         
; 710 |                         wtp = ad7738_getmon();                         
; 711 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 712 |                         goto VFD_LINE_BUFF;                            
; 714 |                 case VFD_PEAK:                                         
; 715 |                         wtp = ad7738_getpeak();                        
; 716 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 717 |                         goto VFD_LINE_BUFF;                            
; 719 |                 case VFD_VALL:                                         
; 720 |                         wtp = ad7738_getvall();                        
; 721 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 722 |                         goto VFD_LINE_BUFF;                            
; 724 |                 case VFD_POSI:                                         
; 725 |                         wtp = ad7738_getmon();                         
; 726 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 727 |                         goto VFD_LINE_BUFF;                            
; 729 |                 case VFD_VELO:                                         
; 730 |                         wtp = ad7738_getmon();                         
; 731 |                         //wtp = ad7738_getpeak();                      
; 732 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 734 |                         // display appropriate decimal points          
; 735 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 736 |                         case 0:                                        
; 737 |                                 sprintf(buff, "%10.0f", tempft);       
; 738 |                                 break;                                 
; 739 |                         case 1:                                        
; 740 |                                 sprintf(buff, "%10.1f", tempft);       
; 741 |                                 break;                                 
; 742 |                         case 2:                                        
; 743 |                                 sprintf(buff, "%10.2f", tempft);       
; 744 |                                 break;                                 
; 745 |                         case 3:                                        
; 746 |                                 sprintf(buff, "%10.3f", tempft);       
; 747 |                                 break;                                 
; 748 |                         case 4:                                        
; 749 |                                 sprintf(buff, "%10.4f", tempft);       
; 750 |                                 break;                                 
; 751 |                         case 5:                                        
; 752 |                                 sprintf(buff, "%10.5f", tempft);       
; 753 |                                 break;                                 
; 755 |                         break;                                         
; 757 |                 case VFD_LIMIT:                                        
; 758 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 759 |                         sprintf(buff, "  %s",                          
; 760 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 761 |                         break;                                         
; 762 |                 case VFD_TEMP:                                         
; 763 |                         sprintf(buff, "%10.1f", tempvalue);            
; 764 |                         break;                                         
; 767 |                 // print to LCD                                        
; 768 |                 lcd_puts(buff, 7 + 20 * line);                         
; 770 |                 line++;                                                
; 771 |                 if (line >= VFD_MAX) {                                 
; 772 |                         line = 0;                                      
; 776 |         //=============================================================
;     | =====================//                                                
; 777 |         // temperature sensor reading
;     |                  //                                                    
; 778 |         //=============================================================
;     | =====================//                                                
; 780 |         // if its time to start a temp conversion...                   
; 781 |         if (ad7738_tempstart()) {                                      
; 782 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 785 |         // if its time to start a temp reading...                      
; 786 |         else if (ad7738_tempread()) {                                  
; 787 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 788 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 791 |         //=============================================================
;     | =====================//                                                
; 792 |         // Auto ID detection
;     |                  //                                                    
; 793 |         //=============================================================
;     | =====================//                                                
; 794 |         // check for changes in the load cells connected by "TAG ID"   
; 795 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 796 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 798 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 800 |                                 // new loadcell just plugged in        
; 801 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 802 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 804 |                                         DINT;                          
; 805 |                                         maf_rst();                     
; 806 |                                         ad7738_setcal();               
; 807 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 808 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 809 |                                         EINT;                          
; 811 |                                         lcd_clear();                   
; 812 |                                         update_units();                
; 813 |                                         autoidchanged = 1;             
; 816 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 817 |                 } else {                                               
; 819 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 821 |                         if (autoid[tagch]) {                           
; 822 |                                 autoid[tagch] = 0;                     
; 823 |                                 lcd_clear();                           
; 824 |                                 update_units();                        
; 825 |                                 autoidchanged = 1;                     
; 829 |                 tagch++;                                               
; 830 |                 if (tagch >= CHS_MAX) {                                
; 831 |                         tagch = 0;                                     
; 835 |         //=============================================================
;     | =====================//                                                
; 836 |         // Data streamming
;     |                          //                                            
; 837 |         //=============================================================
;     | =====================//                                                
; 838 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 839 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 840 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 841 |                 //      taking into account decimation, etc.           
; 842 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 844 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 846 |                         ds_ct = 0;                                     
; 847 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 848 |                         j = 0;                                         
; 849 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 850 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 851 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 852 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 853 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 854 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 855 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 857 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 858 |                                 wtp = prod_getnext();                  
; 859 |                                 if (--k) {                             
; 860 |                                         continue;
;     |          // decimation                                                 
; 862 |                                 k = ds_dec;                            
; 863 |                                 ds_ct++;                               
; 865 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 866 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 867 |                                         if (ds_bm & ch) {              
; 868 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 869 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 870 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 871 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 872 |                                                         intp++;        
; 875 |                                         ch <<= 1;
;     |          // next channel                                               
; 878 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 879 |                                         if (ds_bm & ch) {              
; 880 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 881 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 882 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 883 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 884 |                                                         intp++;        
; 887 |                                         ch <<= 1;
;     |          // next channel                                               
; 890 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 891 |                                         if (ds_bm & ch) {              
; 892 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 893 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 894 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 895 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 896 |                                                         intp++;        
; 899 |                                         ch <<= 1;
;     |          // next channel                                               
; 903 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 905 |                         if (ds_stop) {                                 
; 906 |                                 ds_en = 0;                             
; 909 |                         scia_send_bin(buff, j);         // send data   
; 911 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 912 |                 } else if (ad7738_getlimitchgd()) {                    
; 913 |                         j = 0;                                         
; 914 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 915 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 916 |                         for (i = 0; i < LIM_MAX; i++) {                
; 917 |                                 buff[j++] = ad7738_getlimitst(i);      
; 919 |                         scia_send_bin(buff, j);         // send data   
; 920 |                 } else if (autoidchanged) {                            
; 921 |                         autoidchanged = 0;                             
; 923 |                         j = 0;                                         
; 924 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 925 |                         buff[j++] = GetAutoId;                  // 1,  
; 926 |                         buff[j++] = conf_data.tagiden;                 
; 927 |                         for (i = 0; i < CHS_MAX; i++) {                
; 928 |                                 buff[j++] = autoid[i];                 
; 930 |                         scia_send_bin(buff, j);         // send data   
; 936 |         //=============================================================
;     | =====================//                                                
; 937 |         // serial command processing
;     |                  //                                                    
; 938 |         //=============================================================
;     | =====================//                                                
; 940 |         //=============================================================
;     | =====================//                                                
; 941 |         // Check for available command in the command buffer
;     |                  //                                                    
; 942 |         //=============================================================
;     | =====================//                                                
; 943 |         if (0 == scia_rx_getcmds()) {                                  
; 944 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 947 |         //=============================================================
;     | =====================//                                                
; 948 |         // Read one command from command buffer
;     |                  //                                                    
; 949 |         //=============================================================
;     | =====================//                                                
; 950 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 952 |         //=============================================================
;     | =====================//                                                
; 953 |         // Empty command
;     |                          //                                            
; 954 |         //=============================================================
;     | =====================//                                                
; 955 |         if (0 == cmdlen) {                                             
; 956 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 957 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 958 |                 continue;                                              
; 961 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 963 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 964 |                 // ASCII command mode processing
;     |                                  //                                    
; 965 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 967 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 970 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 971 |                 // Current configuration print out
;     |                          //                                            
; 972 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 974 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1038 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1040 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1042 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1045 |                         case 'A':                               // all 
; 1047 |                                 version = VERSION;                     
; 1048 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1049 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1050 |                                 scia_puts(buff);                       
; 1051 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1052 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1053 |                                 scia_puts(buff);                       
; 1054 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1055 |                                 scia_puts(buff);                       
; 1056 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1057 |                                                 conf_data.uname);      
; 1058 |                                 scia_puts(buff);                       
; 1060 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1061 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1062 |                                 scia_puts(buff);                       
; 1063 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1064 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1065 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1066 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1067 |                                         scia_puts(buff);               
; 1069 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1070 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1071 |                                 scia_puts(buff);                       
; 1073 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1074 |                                                 conf_data.filter);     
; 1075 |                                 scia_puts(buff);                       
; 1077 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1078 |                                         scia_puts("\r\n");             
; 1079 |                                         print_channel(ch);
;     |          // channel info                                               
; 1080 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1083 |                                 scia_puts("\r\n");                     
; 1084 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1085 |                                                 conf_data.velfilter);  
; 1086 |                                 scia_puts(buff);                       
; 1087 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1088 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1089 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1090 |                                         scia_puts(buff);               
; 1092 |                                 print_vfd();                           
; 1093 |                                 print_dac();                           
; 1094 |                                 print_limits();                        
; 1095 |                                 break;                                 
; 1097 |                         case 'S':
;     |  // sensor list                                                        
; 1099 |                                 scia_puts("\r\n");                     
; 1101 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1102 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1103 |                                         scia_puts(buff);               
; 1104 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1106 |                                 break;                                 
; 1108 |                         case 'D':
;     |  // Display settings                                                   
; 1110 |                                 print_vfd();                           
; 1111 |                                 break;                                 
; 1113 |                         case 'O':
;     |  // DAC settings                                                       
; 1115 |                                 print_dac();                           
; 1116 |                                 break;                                 
; 1118 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1120 |                                 print_limits();                        
; 1121 |                                 break;                                 
; 1123 |                         default:                                       
; 1124 |                                 goto INVALIDCMD;                       
; 1127 |                         break;                                         
; 1129 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1130 |                         // Unit config commands
;     |                                  //                                    
; 1131 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1132 |                 case 'U':                                       // Unit
; 1134 |                         if (cmdlen < 2) {                              
; 1135 |                                 goto INVALIDCMD;                       
; 1138 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1141 |                         case 'S':
;     |  // unit serial number                                                 
; 1143 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1144 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1145 |                                 conf_data.usn = atol(cmdbuff);         
; 1147 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1148 |                                 scia_puts(buff);                       
; 1149 |                                 unsaved = 1;                           
; 1150 |                                 break;                                 
; 1152 |                         case 'N':
;     |  // unit name                                                          
; 1154 |                                 j = sizeof(conf_data.uname) - 1;       
; 1155 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1156 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1157 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1159 |                                         cmdlen = j;                    
; 1160 |                                         cmdbuff[j] = '\0';             
; 1162 |                                 // also copy the null terminater       
; 1163 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1164 |                                                 cmdlen + 1);           
; 1165 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1167 |                                 scia_puts(cmdbuff);                    
; 1168 |                                 scia_puts("\r\n");                     
; 1169 |                                 unsaved = 1;                           
; 1170 |                                 break;                                 
; 1172 |                         case 'C':
;     |  // current sensor                                                     
; 1174 |                                 // channel number                      
; 1175 |                                 j = CHS_MAX;                           
; 1176 |                                 do {                                   
; 1177 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1178 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1179 |                                         ch = atoi(cmdbuff);            
; 1180 |                                         scia_puts(cmdbuff);            
; 1181 |                                         if (ch > 0 && ch <= j) {       
; 1182 |                                                 break;
;     |          // valid input channel number                                 
; 1184 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1185 |                                 } while (j);                           
; 1186 |                                 scia_puts("\r\n");                     
; 1187 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1189 |                                 // sensor number                       
; 1190 |                                 j = SENSPCH;                           
; 1191 |                                 do {                                   
; 1192 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1193 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1194 |                                         ss = atoi(cmdbuff);            
; 1195 |                                         scia_puts(cmdbuff);            
; 1196 |                                         if (ss > 0 && ss <= j) {       
; 1197 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1199 |                                                 break;                 
; 1201 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1202 |                                 } while (j);                           
; 1203 |                                 scia_puts("\r\n");                     
; 1204 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1206 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1207 |                                                 ch + 1, ss + 1);       
; 1208 |                                 scia_puts(buff);                       
; 1209 |                                 print_sensor(ss);                      
; 1210 |                                 unsaved = 1;                           
; 1212 |                                 DINT;                                  
; 1213 |                                 conf_data.ch[ch].ci = ss;              
; 1214 |                                 ad7738_setcal();                       
; 1216 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1217 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1218 |                                 EINT;                                  
; 1220 |                                 update_units();                        
; 1221 |                                 break;                                 
; 1223 |                         case 'I':
;     |  // interface                                                          
; 1225 |                                 for (j = 0; j < 4; j++) {              
; 1226 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1227 |                                         scia_puts(buff);               
; 1228 |                                         if (j < 3) {                   
; 1229 |                                                 scia_puts(", ");       
; 1232 |                                 scia_puts("\r\n");                     
; 1233 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1234 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1235 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1236 |                                 scia_puts(cmdbuff);                    
; 1237 |                                 scia_puts("\r\n");                     
; 1238 |                                 if (cmdlen == 0) {                     
; 1239 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1240 |                                         break;                         
; 1242 |                                 pt = atoi(cmdbuff);                    
; 1243 |                                 if (pt > 3) {                          
; 1244 |                                         scia_puts(                     
; 1245 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1246 |                                         break;                         
; 1248 |                                 conf_data.rxdir = pt;                  
; 1249 |                                 sprintf(buff,                          
; 1250 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1251 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1252 |                                 scia_puts(buff);                       
; 1253 |                                 scia_puts(                             
; 1254 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1255 |                                 unsaved = 1;                           
; 1256 |                                 break;                                 
; 1258 |                         case 'B':
;     |  // baudrate                                                           
; 1260 |                                 if (conf_data.rxdir == SDIR_USB        
; 1261 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1262 |                                         scia_puts(                     
; 1263 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1264 |                                         break;                         
; 1267 |                                 for (j = 0; j < 8; j++) {              
; 1268 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1269 |                                         scia_puts(buff);               
; 1270 |                                         if (j < 7) {                   
; 1271 |                                                 scia_puts(", ");       
; 1274 |                                 scia_puts("\r\n");                     
; 1275 |                                 cmdlen = sprintf(buff,                 
; 1276 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1277 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1278 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1279 |                                 scia_puts(cmdbuff);                    
; 1280 |                                 scia_puts("\r\n");                     
; 1281 |                                 if (cmdlen == 0) {                     
; 1282 |                                         scia_puts(                     
; 1283 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1284 |                                         break;                         
; 1286 |                                 pt = atoi(cmdbuff);                    
; 1287 |                                 if (pt > 7) {                          
; 1288 |                                         scia_puts(                     
; 1289 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1290 |                                         break;                         
; 1292 |                                 conf_data.baud = pt;                   
; 1293 |                                 sprintf(buff,                          
; 1294 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1295 |                                                 BAUD[conf_data.baud]); 
; 1296 |                                 scia_puts(buff);                       
; 1297 |                                 scia_puts(                             
; 1298 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1299 |                                 unsaved = 1;                           
; 1300 |                                 break;                                 
; 1302 |                         case 'F':
;     |  // averaging filter size                                              
; 1304 |                                 j = MAF_MAX;                           
; 1305 |                                 do {                                   
; 1306 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1307 |                                                         j);            
; 1308 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1309 |                                         i = atoi(cmdbuff);             
; 1310 |                                         scia_puts(cmdbuff);            
; 1311 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1312 |                                                 break;
;     |          // valid number input                                         
; 1314 |                                         scia_puts(                     
; 1315 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1316 |                                 } while (j);                           
; 1317 |                                 scia_puts("\r\n");                     
; 1319 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1320 |                                                 i);                    
; 1321 |                                 scia_puts(buff);                       
; 1322 |                                 unsaved = 1;                           
; 1324 |                                 // update new value                    
; 1325 |                                 DINT;                                  
; 1326 |                                 conf_data.filter = i;                  
; 1327 |                                 maf_rst();                             
; 1328 |                                 EINT;                                  
; 1329 |                                 break;                                 
; 1331 |                         case 'W':
;     |  // diff window ratio                                                  
; 1333 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1334 |                                                 conf_data.diffwin);    
; 1335 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1336 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1337 |                                 scia_puts(cmdbuff);                    
; 1338 |                                 scia_puts("\r\n");                     
; 1340 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1341 |                                                 conf_data.diffwin);    
; 1342 |                                 scia_puts(buff);                       
; 1343 |                                 unsaved = 1;                           
; 1345 |                                 DINT;                                  
; 1346 |                                 ad7738_setcal();                       
; 1347 |                                 maf_rst();                             
; 1348 |                                 EINT;                                  
; 1349 |                                 break;                                 
; 1351 |                         default:                                       
; 1352 |                                 goto INVALIDCMD;                       
; 1355 |                         break;                                         
; 1357 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1358 |                         // Board calibration
;     |                                  //                                    
; 1359 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1360 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1362 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1363 |                                 goto INVALIDCMD;                       
; 1366 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1367 |                                 goto INVALIDCMD;                       
; 1368 |                                 // invalid calibration method          
; 1371 |                         // channel index                               
; 1372 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1373 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1374 |                                 goto INVALIDCMD;                       
; 1375 |                                 // invalid channel number              
; 1377 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1379 |                         volt[0] = 0;                                   
; 1380 |                         volt[1] = 0;                                   
; 1381 |                         for (j = 3; j < cmdlen; j++) {                 
; 1382 |                                 if (cmdbuff[j] == 'X') {               
; 1383 |                                         j++;                           
; 1384 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1387 |                                 if (cmdbuff[j] == 'Y') {               
; 1388 |                                         j++;                           
; 1389 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1393 |                         if (volt[0] == volt[1]) {                      
; 1394 |                                 goto INVALIDCMD;                       
; 1395 |                                 // invalid parameters                  
; 1398 |                         lcd_clear();                                   
; 1399 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1400 |                         lcd_puts(buff, 20);                            
; 1401 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1402 |                         lcd_puts(buff, 40);                            
; 1403 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1404 |                         lcd_puts(buff, 60);                            
; 1406 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1409 |                         case 'C':
;     |  // board ADC calibration                                              
; 1411 |                                 lcd_puts("Board Calibration...", 0);   
; 1413 |                                 sprintf(buff,                          
; 1414 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1415 |                                                 ch + 1);               
; 1416 |                                 scia_puts(buff);                       
; 1428 |                                 for (j = 0; j < 2; j++) {              
; 1429 |                                         sprintf(buff,                  
; 1430 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1431 |                                                         volt[j]);      
; 1432 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1433 |                                         scia_puts("Reading ... ");     
; 1435 |                                         dsum[j] = 0;                   
; 1436 |                                         sampcnt = CAL_SAMPLES;         
; 1437 |                                         while (sampcnt--) {            
; 1438 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1439 |                                                         delay_us(1);
;     |                  // wait                                               
; 1441 |                                                 cntp = ad7738_getraw();
; 1442 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1445 |                                         scia_puts("done\r\n");         
; 1448 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1449 |                                                 / (dsum[1] - dsum[0]); 
; 1451 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1452 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1453 |                                 scia_puts(buff);                       
; 1454 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1455 |                                 break;                                 
; 1457 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1459 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1460 |                                                 || volt[1] < -10) {    
; 1461 |                                         lcd_clear();                   
; 1462 |                                         update_units();                
; 1463 |                                         goto INVALIDCMD;               
; 1464 |                                         // invalid parameters          
; 1467 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1469 |                                 sprintf(buff,                          
; 1470 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1471 |                                                 ch + 1);               
; 1472 |                                 scia_puts(buff);                       
; 1473 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1474 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1476 |                                 for (j = 0; j < 2; j++) {              
; 1477 |                                         if (volt[j] < 0) {             
; 1478 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1479 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1480 |                                         } else {                       
; 1481 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1482 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1484 |                                         if (dsum[0] <= 0) {            
; 1485 |                                                 dacc[j] = 0;           
; 1486 |                                         } else if (dsum[0] >= 0xffff) {
; 1487 |                                                 dacc[j] = 0xffff;      
; 1488 |                                         } else {                       
; 1489 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1492 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1493 |                                         scia_puts(buff);               
; 1494 |                                         cmdbuff[0] = '\0';             
; 1496 |                                         do {                           
; 1497 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1498 |                                                 latch_dac();           
; 1500 |                                                 do {                   
; 1501 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1502 | 
;     |  sizeof(cmdbuff));                                                     
; 1503 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1504 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1506 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1507 |                                                         break;
;     |                  // done                                               
; 1510 |                                                 i = atoi(cmdbuff + 1); 
; 1511 |                                                 if (i == 0) {          
; 1512 |                                                         i = 1;         
; 1515 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1517 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1518 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1519 |                                                         } else {       
; 1520 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1522 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1524 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1525 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1526 |                                                         } else {       
; 1527 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1530 |                                         } while (i);                   
; 1532 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1533 |                                         scia_puts(buff);               
; 1536 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1538 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1539 |                                 cmdbuff[0] = '\0';                     
; 1541 |                                 do {                                   
; 1542 |                                         mcbsp_xmit(dacc[2], ch);       
; 1543 |                                         latch_dac();                   
; 1545 |                                         do {                           
; 1546 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1547 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1548 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1550 |                                         if ('S' == cmdbuff[0]) {       
; 1551 |                                                 break;
;     |          // done                                                       
; 1554 |                                         i = atoi(cmdbuff + 1);         
; 1555 |                                         if (i == 0) {                  
; 1556 |                                                 i = 1;                 
; 1559 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1561 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1562 |                                                         dacc[2] += i;  
; 1563 |                                                 } else {               
; 1564 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1566 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1568 |                                                 if (dacc[2] >= i) {    
; 1569 |                                                         dacc[2] -= i;  
; 1570 |                                                 } else {               
; 1571 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1574 |                                 } while (i);                           
; 1576 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1577 |                                 scia_puts(buff);                       
; 1579 |                                 // do the calculations                 
; 1580 |                                 if (volt[0] < 0) {                     
; 1581 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1582 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1583 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1584 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1585 |                                 } else {                               
; 1586 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1587 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1588 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1589 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1591 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1593 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1595 |                                 sprintf(buff,                          
; 1596 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1597 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1598 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1599 |                                 scia_puts(buff);                       
; 1601 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1602 |                                 break;                                 
; 1604 |                         default:                                       
; 1605 |                                 goto INVALIDCMD;                       
; 1608 |                         unsaved = 1;                                   
; 1609 |                         lcd_clear();                                   
; 1610 |                         update_units();                                
; 1612 |                         DINT;                                          
; 1613 |                         ad7738_setcal();                               
; 1614 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1615 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1616 |                         EINT;                                          
; 1617 |                         break;                                         
; 1619 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1620 |                         // Channel sensor calibration
;     |                                  //                                    
; 1621 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1622 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1624 |                         if (cmdlen < 2) {                              
; 1625 |                                 goto INVALIDCMD;                       
; 1628 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1629 |                                         && 'S' != cmdbuff[1]) {        
; 1630 |                                 goto INVALIDCMD;                       
; 1631 |                                 // invalid calibration method          
; 1633 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1635 |                         lcd_clear();                                   
; 1636 |                         lcd_puts("Sensor Calibration..", 0);           
; 1638 |                         // === read informations ====                  
; 1639 |                         // channel number                              
; 1640 |                         j = CHS_MAX;                                   
; 1641 |                         do {                                           
; 1642 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1643 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1644 |                                 ch = atoi(cmdbuff);                    
; 1645 |                                 scia_puts(cmdbuff);                    
; 1646 |                                 if (ch > 0 && ch <= j) {               
; 1647 |                                         break;
;     |  // valid input channel number                                         
; 1649 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1650 |                         } while (j);                                   
; 1651 |                         scia_puts("\r\n");                             
; 1652 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1654 |                         // sensor number                               
; 1655 |                         j = SENSPCH;                                   
; 1656 |                         do {                                           
; 1657 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1658 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1659 |                                 ss = atoi(cmdbuff);                    
; 1660 |                                 scia_puts(cmdbuff);                    
; 1661 |                                 if (ss > 0 && ss <= j) {               
; 1662 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1664 |                                         break;                         
; 1666 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1667 |                         } while (j);                                   
; 1668 |                         scia_puts("\r\n");                             
; 1669 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1671 |                         // put on the vfd                              
; 1672 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1673 |                         lcd_puts(buff, 20);                            
; 1675 |                         // sensor serial number                        
; 1676 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1677 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1678 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1679 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1681 |                                 cmdlen = j;                            
; 1682 |                                 cmdbuff[j] = '\0';                     
; 1684 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1685 |                         scia_puts(cmdbuff);                            
; 1686 |                         scia_puts("\r\n");                             
; 1688 |                         // sensor label                                
; 1689 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1690 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1691 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1692 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1694 |                                 cmdlen = j;                            
; 1695 |                                 cmdbuff[j] = '\0';                     
; 1697 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1698 |                         scia_puts(cmdbuff);                            
; 1699 |                         scia_puts("\r\n");                             
; 1701 |                         // unit                                        
; 1702 |                         for (j = 0; j < 7; j++) {                      
; 1703 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1705 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1706 |                         scia_puts(buff);                               
; 1707 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1708 |                                         sizeof(cmdbuff));              
; 1709 |                         tsensor.unit = atoi(cmdbuff);                  
; 1711 |                         switch (tsensor.unit) {                        
; 1712 |                         case 0:                                 // lb  
; 1713 |                         case 1:                                 // kg  
; 1714 |                                 tsensor.unit |= 0x10;                  
; 1715 |                                 break;                                 
; 1716 |                         case 2:                                 // in  
; 1717 |                         case 3:                                 // cm  
; 1718 |                         case 4:                                 // mm  
; 1719 |                                 tsensor.unit |= 0x20;                  
; 1720 |                                 break;                                 
; 1721 |                         case 5:                                 // ps  
; 1722 |                                 tsensor.unit |= 0x30;                  
; 1723 |                                 break;                                 
; 1724 |                         case 6:                                 // nm  
; 1725 |                                 tsensor.unit |= 0x40;                  
; 1726 |                                 break;                                 
; 1727 |                         case 7:                                        
; 1728 |                         case 8:                                        
; 1729 |                         case 15:                                       
; 1730 |                                 tsensor.unit |= 0xf0;                  
; 1731 |                                 break;                                 
; 1732 |                         default:                                       
; 1733 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1734 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1735 |                                 break;                                 
; 1737 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1738 |                         tsensor.ufactor = 1;                    // 1:1 
; 1740 |                         scia_puts(cmdbuff);                            
; 1741 |                         scia_puts("\r\n");                             
; 1743 |                         // range                                       
; 1744 |                         j = 1;                                         
; 1745 |                         do {                                           
; 1746 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1747 |                                 tsensor.range = atof(cmdbuff);         
; 1748 |                                 if (tsensor.range != 0) {              
; 1749 |                                         break;                         
; 1751 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1752 |                         } while (j);                                   
; 1753 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1754 |                         scia_puts(cmdbuff);                            
; 1755 |                         scia_puts("\r\n");                             
; 1757 |                         tsensor.tagid = tagid(ch);                     
; 1759 |                         if (tsensor.tagid == 0) {                      
; 1760 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1761 |                         } else {                                       
; 1762 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1764 |                         scia_puts(buff);                               
; 1766 |                         switch (cmethod)
;     |  // on method code                                                     
; 1769 |                         case 'V':
;     |  // mv/v cal                                                           
; 1771 |                                 lcd_puts("Method: mv/v", 40);          
; 1773 |                                 tsensor.method = MD_RUN_MVV;           
; 1774 |                                 tsensor.points = 1;                    
; 1776 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1777 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1778 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1779 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1780 |                                 if (tsensor.slope[0] == 0) {           
; 1781 |                                         tsensor.slope[0] = 1;          
; 1783 |                                 scia_puts(cmdbuff);                    
; 1784 |                                 scia_puts("\r\n");                     
; 1786 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1787 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1789 |                                 scia_puts("Reading ... ");             
; 1791 |                                 dsum[0] = 0;                           
; 1792 |                                 sampcnt = CAL_SAMPLES;                 
; 1793 |                                 while (sampcnt--) {                    
; 1794 |                                         while (0 == ad7738_rawrdy()) { 
; 1795 |                                                 delay_us(1);
;     |          // wait                                                       
; 1798 |                                         cntp = ad7738_getraw();        
; 1799 |                                         dsum[0] += cntp->adc[ch];      
; 1801 |                                 scia_puts("done\r\n");                 
; 1803 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1804 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1805 |                                 break;                                 
; 1807 |                         case 'M':
;     |  // mass cal                                                           
; 1809 |                                 tsensor.method = MD_RUN_MAS;           
; 1811 |                                 // calibration points for mass cal only
; 1812 |                                 j = PNT_MAX;                           
; 1813 |                                 do {                                   
; 1814 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1815 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1816 |                                         tsensor.points = atoi(cmdbuff);
; 1817 |                                         scia_puts(cmdbuff);            
; 1818 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1819 |                                                 break;                 
; 1821 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1823 |                                 } while (j);                           
; 1824 |                                 scia_puts("\r\n");                     
; 1826 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1827 |                                 lcd_puts(buff, 40);                    
; 1829 |                                 // calculate the default point values  
; 1830 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1831 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1832 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1835 |                                 // read in value with default provided 
; 1836 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1837 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1838 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1839 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1841 |                                         // zero length response set the
;     |  default                                                               
; 1842 |                                         if (cmdlen > 0) {              
; 1843 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1845 |                                         scia_puts(cmdbuff);            
; 1846 |                                         scia_puts("\r\n");             
; 1849 |                                 // TODO: sort the list of points       
; 1851 |                                 // read adc count for each point       
; 1852 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1853 |                                         sprintf(buff,                  
; 1854 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1855 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1856 |                                                         j + 1);        
; 1857 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1858 |                                         scia_puts("Reading ... ");     
; 1860 |                                         dsum[0] = 0;                   
; 1861 |                                         sampcnt = CAL_SAMPLES;         
; 1862 |                                         while (sampcnt--) {            
; 1863 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1864 |                                                         delay_us(1);
;     |                  // wait                                               
; 1867 |                                                 cntp = ad7738_getraw();
; 1868 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1870 |                                         scia_puts("done\r\n");         
; 1871 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1874 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1875 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1876 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1877 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1878 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1879 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1880 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1881 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1882 | 
;     |  * tsensor.adc[j];                                                     
; 1884 |                                 break;                                 
; 1886 |                         case 'S':
;     |  // shunt cal                                                          
; 1888 |                                 lcd_puts("Method: shunt", 40);         
; 1890 |                                 tsensor.method = MD_RUN_SHT;           
; 1891 |                                 tsensor.points = 1;                    
; 1893 |                                 sprintf(buff,                          
; 1894 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1895 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1896 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1897 |                                 scia_puts(cmdbuff);                    
; 1898 |                                 scale = atof(cmdbuff);                 
; 1899 |                                 if (scale == 0) {                      
; 1900 |                                         scale = 1.46;                  
; 1901 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1903 |                                 scia_puts("\r\n");                     
; 1905 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1906 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1908 |                                 scia_puts("Reading ... ");             
; 1910 |                                 for (j = 0; j < 2; j++) {              
; 1911 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1913 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1914 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1915 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1917 |                                                 DINT;                  
; 1918 |                                                 maf_rst();             
; 1919 |                                                 EINT;                  
; 1920 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1923 |                                         dsum[j] = 0;                   
; 1924 |                                         sampcnt = CAL_SAMPLES;         
; 1925 |                                         while (sampcnt--) {            
; 1926 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1927 |                                                         delay_us(1);
;     |                  // wait                                               
; 1930 |                                                 cntp = ad7738_getraw();
; 1931 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1935 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1936 |                                 DINT;                                  
; 1937 |                                 maf_rst();                             
; 1938 |                                 EINT;                                  
; 1940 |                                 scia_puts("done\r\n");                 
; 1942 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1943 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1944 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1945 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1946 |                                 break;                                 
; 1948 |                         default:                                       
; 1949 |                                 lcd_clear();                           
; 1950 |                                 update_units();                        
; 1951 |                                 goto INVALIDCMD;                       
; 1954 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1955 |                         scia_getparam(                                 
; 1956 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1957 |                                         cmdbuff, sizeof(cmdbuff));     
; 1958 |                         scia_puts("Reading ... ");                     
; 1960 |                         for (j = 0; j < 2; j++) {                      
; 1961 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 1963 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 1964 |                                         for (i = 0; i < 50; i++) {     
; 1965 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 1967 |                                         DINT;                          
; 1968 |                                         maf_rst();                     
; 1969 |                                         EINT;                          
; 1970 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 1973 |                                 dsum[j] = 0;                           
; 1974 |                                 sampcnt = CAL_SAMPLES;                 
; 1975 |                                 while (sampcnt--) {                    
; 1976 |                                         while (0 == ad7738_rawrdy()) { 
; 1977 |                                                 delay_us(1);
;     |          // wait                                                       
; 1980 |                                         cntp = ad7738_getraw();        
; 1981 |                                         dsum[j] += cntp->adc[ch];      
; 1983 |                                 dsum[j] /= CAL_SAMPLES;                
; 1985 |                                 pt = 0;                                
; 1986 |                                 if (tsensor.points > 2) {              
; 1987 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 1988 |                                                 pt++;                  
; 1991 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 1992 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 1995 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 1996 |                         DINT;                                          
; 1997 |                         maf_rst();                                     
; 1998 |                         EINT;                                          
; 2000 |                         scia_puts("done\r\n");                         
; 2002 |                         tsensor.shunt = volt[1] - volt[0];             
; 2004 |                         // setup some other members of the structure   
; 2005 |                         tsensor.tare = 0;                              
; 2006 |                         tsensor.dacgain = 1;                           
; 2007 |                         tsensor.dacoff = 0;                            
; 2008 |                         tsensor.ch = ch;                               
; 2010 |                         DINT;                                          
; 2011 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2012 |                                         sizeof(sconf_t));              
; 2014 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2016 |                         ad7738_setcal();                               
; 2017 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2018 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2019 |                         EINT;                                          
; 2021 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2022 |                                         ch + 1, ss + 1);               
; 2023 |                         scia_puts(buff);                               
; 2024 |                         print_sensor(ss);                              
; 2026 |                         unsaved = 1;                                   
; 2027 |                         lcd_clear();                                   
; 2028 |                         update_units();                                
; 2029 |                         break;                                         
; 2031 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2032 |                         // sensor config commands
;     |                                          //                            
; 2033 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2034 |                 case 'S':                               // sensor      
; 2036 |                         if (cmdlen < 2) {                              
; 2037 |                                 goto INVALIDCMD;                       
; 2040 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2041 |                                         && 'D' != cmdbuff[1]) {        
; 2042 |                                 goto INVALIDCMD;                       
; 2043 |                                 // invalid command                     
; 2045 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2065 |                         // sensor number                               
; 2066 |                         j = SENSPCH;                                   
; 2067 |                         do {                                           
; 2068 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2069 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2070 |                                 ss = atoi(cmdbuff);                    
; 2071 |                                 scia_puts(cmdbuff);                    
; 2072 |                                 if (ss > 0 && ss <= j) {               
; 2073 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2075 |                                         break;                         
; 2077 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2078 |                         } while (j);                                   
; 2079 |                         scia_puts("\r\n");                             
; 2080 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2082 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2085 |                         case 'N':
;     |  // change sensor label                                                
; 2087 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2088 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2089 |                                                 ss + 1, j);            
; 2090 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2091 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2093 |                                         cmdlen = j;                    
; 2094 |                                         cmdbuff[j] = '\0';             
; 2096 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2097 |                                                 cmdlen + 1);           
; 2098 |                                 scia_puts(cmdbuff);                    
; 2099 |                                 scia_puts("\r\n");                     
; 2100 |                                 unsaved = 1;                           
; 2102 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2103 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2104 |                                 scia_puts(buff);                       
; 2105 |                                 break;                                 
; 2107 |                         case 'U':
;     |  // change the output unit                                             
; 2109 |                                 scale = 0;                             
; 2111 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2112 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2114 |                                         do {                           
; 2115 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2116 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2117 |                                                 j = atoi(cmdbuff);     
; 2118 |                                                 scia_puts(cmdbuff);    
; 2119 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2120 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2122 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2123 |                                         scia_puts("\r\n");             
; 2125 |                                         switch (j) {                   
; 2126 |                                         case 0:                        
; 2127 |                                                 scale = 1;             
; 2128 |                                                 j |= 0x10;             
; 2129 |                                                 break;                 
; 2130 |                                         case 1:                        
; 2131 |                                                 scale = LB_TO_KG;      
; 2132 |                                                 j |= 0x10;             
; 2133 |                                                 break;                 
; 2134 |                                         case 7:                        
; 2135 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2136 |                                                 j |= 0xf0;             
; 2137 |                                                 break;                 
; 2139 |                                         break;                         
; 2141 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2143 |                                         do {                           
; 2144 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2145 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2146 |                                                 j = atoi(cmdbuff);     
; 2147 |                                                 scia_puts(cmdbuff);    
; 2148 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2149 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2151 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2152 |                                         scia_puts("\r\n");             
; 2154 |                                         switch (j) {                   
; 2155 |                                         case 0:                        
; 2156 |                                                 scale = 1.0 / LB_TO_KG;
; 2157 |                                                 j |= 0x10;             
; 2158 |                                                 break;                 
; 2159 |                                         case 1:                        
; 2160 |                                                 scale = 1;             
; 2161 |                                                 j |= 0x10;             
; 2162 |                                                 break;                 
; 2163 |                                         case 7:                        
; 2164 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2165 |                                                 j |= 0xf0;             
; 2166 |                                                 break;                 
; 2168 |                                         break;                         
; 2170 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2172 |                                         do {                           
; 2173 |                                                 scia_getparam(         
; 2174 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2175 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2176 |                                                 j = atoi(cmdbuff);     
; 2177 |                                                 scia_puts(cmdbuff);    
; 2178 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2179 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2181 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2182 |                                         scia_puts("\r\n");             
; 2184 |                                         switch (j) {                   
; 2185 |                                         case 2:                        
; 2186 |                                                 scale = 1;             
; 2187 |                                                 j |= 0x20;             
; 2188 |                                                 break;                 
; 2189 |                                         case 3:                        
; 2190 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2191 |                                                 j |= 0x20;             
; 2192 |                                                 break;                 
; 2193 |                                         case 4:                        
; 2194 |                                                 scale = IN_TO_MM;      
; 2195 |                                                 j |= 0x20;             
; 2196 |                                                 break;                 
; 2197 |                                         case 7:                        
; 2198 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2199 |                                                 j |= 0xf0;             
; 2200 |                                                 break;                 
; 2202 |                                         break;                         
; 2204 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2206 |                                         do {                           
; 2207 |                                                 scia_getparam(         
; 2208 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2209 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2210 |                                                 j = atoi(cmdbuff);     
; 2211 |                                                 scia_puts(cmdbuff);    
; 2212 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2213 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2215 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2216 |                                         scia_puts("\r\n");             
; 2218 |                                         switch (j) {                   
; 2219 |                                         case 2:                        
; 2220 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2221 |                                                 j |= 0x20;             
; 2222 |                                                 break;                 
; 2223 |                                         case 3:                        
; 2224 |                                                 scale = 1;             
; 2225 |                                                 j |= 0x20;             
; 2226 |                                                 break;                 
; 2227 |                                         case 4:                        
; 2228 |                                                 scale = 10;            
; 2229 |                                                 j |= 0x20;             
; 2230 |                                                 break;                 
; 2231 |                                         case 7:                        
; 2232 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2233 |                                                 j |= 0xf0;             
; 2234 |                                                 break;                 
; 2236 |                                         break;                         
; 2238 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2240 |                                         do {                           
; 2241 |                                                 scia_getparam(         
; 2242 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2243 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2244 |                                                 j = atoi(cmdbuff);     
; 2245 |                                                 scia_puts(cmdbuff);    
; 2246 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2247 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2249 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2250 |                                         scia_puts("\r\n");             
; 2252 |                                         switch (j) {                   
; 2253 |                                         case 2:                        
; 2254 |                                                 scale = 1.0 / IN_TO_MM;
; 2255 |                                                 j |= 0x20;             
; 2256 |                                                 break;                 
; 2257 |                                         case 3:                        
; 2258 |                                                 scale = 0.1;           
; 2259 |                                                 j |= 0x20;             
; 2260 |                                                 break;                 
; 2261 |                                         case 4:                        
; 2262 |                                                 scale = 1;             
; 2263 |                                                 j |= 0x20;             
; 2264 |                                                 break;                 
; 2265 |                                         case 7:                        
; 2266 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2267 |                                                 j |= 0xf0;             
; 2268 |                                                 break;                 
; 2270 |                                         break;                         
; 2272 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2274 |                                         do {                           
; 2275 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2276 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2277 |                                                 j = atoi(cmdbuff);     
; 2278 |                                                 scia_puts(cmdbuff);    
; 2279 |                                                 if (j != 5 && j != 7) {
; 2280 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2282 |                                         } while (j != 5 && j != 7);    
; 2283 |                                         scia_puts("\r\n");             
; 2285 |                                         switch (j) {                   
; 2286 |                                         case 5:                        
; 2287 |                                                 scale = 1;             
; 2288 |                                                 j |= 0x30;             
; 2289 |                                                 break;                 
; 2290 |                                         case 7:                        
; 2291 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2292 |                                                 j |= 0xf0;             
; 2293 |                                                 break;                 
; 2295 |                                         break;                         
; 2297 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2299 |                                         do {                           
; 2300 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2301 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2302 |                                                 j = atoi(cmdbuff);     
; 2303 |                                                 scia_puts(cmdbuff);    
; 2304 |                                                 if (j != 6 && j != 7) {
; 2305 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2307 |                                         } while (j != 6 && j != 7);    
; 2308 |                                         scia_puts("\r\n");             
; 2310 |                                         switch (j) {                   
; 2311 |                                         case 6:                        
; 2312 |                                                 scale = 1;             
; 2313 |                                                 j |= 0x40;             
; 2314 |                                                 break;                 
; 2315 |                                         case 7:                        
; 2316 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2317 |                                                 j |= 0xf0;             
; 2318 |                                                 break;                 
; 2320 |                                         break;                         
; 2322 |                                 default:                               
; 2323 |                                         break;                         
; 2326 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2327 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2328 |                                         break;                         
; 2331 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2332 |                                         scia_puts(                     
; 2333 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2334 |                                         break;                         
; 2337 |                                 conf_data.sensor[ss].ounit = j;        
; 2338 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2339 |                                 unsaved = 1;                           
; 2341 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2342 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2343 |                                 scia_puts(buff);                       
; 2345 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2346 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2347 |                                                 update_units();        
; 2348 |                                                 DINT;                  
; 2349 |                                                 ad7738_setcal();       
; 2350 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2351 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2352 |                                                 EINT;                  
; 2355 |                                 break;                                 
; 2357 |                         case 'B':
;     |  // change percent base                                                
; 2359 |                                 // base                                
; 2360 |                                 j = 1;                                 
; 2361 |                                 do {                                   
; 2362 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2363 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2364 |                                         scale = atof(cmdbuff);         
; 2365 |                                         scia_puts(cmdbuff);            
; 2366 |                                         if (scale != 0) {              
; 2367 |                                                 break;                 
; 2369 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2370 |                                 } while (j);                           
; 2371 |                                 scia_puts("\r\n");                     
; 2372 |                                 conf_data.sensor[ss].base = scale;     
; 2373 |                                 unsaved = 1;                           
; 2375 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2376 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2377 |                                 scia_puts(buff);                       
; 2379 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2380 |                                         // output unit is percent      
; 2381 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2382 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2384 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2385 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2386 |                                                         // changed is f
;     | or the current sensor                                                  
; 2387 |                                                         DINT;          
; 2388 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2389 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2390 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2391 |                                                         EINT;          
; 2395 |                                 break;                                 
; 2397 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2399 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2400 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2401 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2402 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2403 |                                 scia_puts(cmdbuff);                    
; 2404 |                                 scia_puts("\r\n");                     
; 2406 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2407 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2408 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2409 |                                 scia_puts(cmdbuff);                    
; 2410 |                                 scia_puts("\r\n");                     
; 2411 |                                 unsaved = 1;                           
; 2413 |                                 sprintf(buff,                          
; 2414 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2415 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2416 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2417 |                                 scia_puts(buff);                       
; 2419 |                                 DINT;                                  
; 2420 |                                 ad7738_setcal();                       
; 2421 |                                 EINT;                                  
; 2422 |                                 break;                                 
; 2424 |                         default:                                       
; 2425 |                                 goto INVALIDCMD;                       
; 2428 |                         break;                                         
; 2430 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2431 |                         // Encoder config commands
;     |                                  //                                    
; 2432 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2433 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2435 |                         if (cmdlen < 2) {                              
; 2436 |                                 goto INVALIDCMD;                       
; 2439 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2442 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2444 |                                 j = MAF_MAX;                           
; 2445 |                                 do {                                   
; 2446 |                                         sprintf(buff,                  
; 2447 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2448 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2449 |                                         i = atoi(cmdbuff);             
; 2450 |                                         scia_puts(cmdbuff);            
; 2451 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2452 |                                                 break;
;     |          // valid number input                                         
; 2454 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2455 |                                 } while (j);                           
; 2456 |                                 scia_puts("\r\n");                     
; 2458 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2459 |                                                 i);                    
; 2460 |                                 scia_puts(buff);                       
; 2461 |                                 unsaved = 1;                           
; 2463 |                                 // update new value                    
; 2464 |                                 DINT;                                  
; 2465 |                                 conf_data.velfilter = i;               
; 2466 |                                 ad7738_setcal();                       
; 2467 |                                 velf_rst();                            
; 2468 |                                 EINT;                                  
; 2469 |                                 break;                                 
; 2471 |                         case 'P':
;     |  // count per inch                                                     
; 2473 |                                 // channel number                      
; 2474 |                                 j = ENC_MAX;                           
; 2475 |                                 do {                                   
; 2476 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2477 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2478 |                                         ss = atoi(cmdbuff);            
; 2479 |                                         scia_puts(cmdbuff);            
; 2480 |                                         if (ss > 0 && ss <= j) {       
; 2481 |                                                 break;
;     |          // valid input line number                                    
; 2483 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2484 |                                 } while (j);                           
; 2485 |                                 scia_puts("\r\n");                     
; 2486 |                                 ss--;
;     |  // line number, convert to index                                      
; 2488 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2489 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2490 |                                 templg = atol(cmdbuff);                
; 2491 |                                 scia_puts(cmdbuff);                    
; 2492 |                                 scia_puts("\r\n");                     
; 2493 |                                 if (templg == 0) {                     
; 2494 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2495 |                                         break;                         
; 2497 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2498 |                                                 ss + 1, templg);       
; 2499 |                                 scia_puts(buff);                       
; 2500 |                                 unsaved = 1;                           
; 2502 |                                 // update new value                    
; 2503 |                                 DINT;                                  
; 2504 |                                 conf_data.cntperin[ss] = templg;       
; 2505 |                                 ad7738_setcal();                       
; 2506 |                                 velf_rst();                            
; 2507 |                                 EINT;                                  
; 2508 |                                 break;                                 
; 2510 |                         break;                                         
; 2512 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2513 |                         // Display command
;     |                                  //                                    
; 2514 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2515 |                 case 'D':                                              
; 2517 |                         if (cmdlen < 2) {                              
; 2518 |                                 goto INVALIDCMD;                       
; 2521 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2523 |                         case 'S':
;     |  // selection                                                          
; 2525 |                                 // line number                         
; 2526 |                                 j = VFD_MAX;                           
; 2527 |                                 do {                                   
; 2528 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2529 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2530 |                                         ss = atoi(cmdbuff);            
; 2531 |                                         scia_puts(cmdbuff);            
; 2532 |                                         if (ss > 0 && ss <= j) {       
; 2533 |                                                 break;
;     |          // valid input line number                                    
; 2535 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2536 |                                 } while (j);                           
; 2537 |                                 scia_puts("\r\n");                     
; 2538 |                                 ss--;
;     |  // line number, convert to index                                      
; 2540 |                                 // what                                
; 2541 |                                 for (j = 0; j < 7; j++) {              
; 2542 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2543 |                                         scia_puts(buff);               
; 2544 |                                         if (j < 6) {                   
; 2545 |                                                 scia_puts(", ");       
; 2548 |                                 scia_puts("\r\n");                     
; 2549 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2550 |                                                 ss + 1);               
; 2551 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2552 |                                 pt = atoi(cmdbuff);                    
; 2553 |                                 if (pt >= 7) {                         
; 2554 |                                         pt = 0;                        
; 2555 |                                         scia_puts(                     
; 2556 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2558 |                                 scia_puts(cmdbuff);                    
; 2559 |                                 scia_puts("\r\n");                     
; 2560 |                                 conf_data.vfd[ss].what = pt;           
; 2562 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2564 |                                 case VFD_LOAD:                         
; 2565 |                                 case VFD_PEAK:                         
; 2566 |                                 case VFD_VALL:                         
; 2568 |                                         j = CHS_MAX;                   
; 2569 |                                         goto VFD_CHANNEL;              
; 2571 |                                 case VFD_POSI:                         
; 2572 |                                 case VFD_VELO:                         
; 2574 |                                         j = ENC_MAX;                   
; 2576 |                                         VFD_CHANNEL:                   
; 2577 |                                         // channel number              
; 2578 |                                         do {                           
; 2579 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2580 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2581 |                                                 ch = atoi(cmdbuff);    
; 2582 |                                                 scia_puts(cmdbuff);    
; 2583 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2584 |                                                         break;
;     |          // valid input channel number                                 
; 2586 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2587 |                                         } while (j);                   
; 2588 |                                         scia_puts("\r\n");             
; 2589 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2590 |                                         conf_data.vfd[ss].ch = ch;     
; 2592 |                                         // digits after decimal point  
; 2593 |                                         j = 1;                         
; 2594 |                                         do {                           
; 2595 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2596 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2597 |                                                 i = atoi(cmdbuff);     
; 2598 |                                                 if (i >= 0 && i <= 5) {
; 2599 |                                                         break;         
; 2601 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2602 |                                         } while (j);                   
; 2603 |                                         scia_puts(cmdbuff);            
; 2604 |                                         scia_puts("\r\n");             
; 2605 |                                         conf_data.vfd[ss].adec = i;    
; 2607 |                                         sprintf(buff,                  
; 2608 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2609 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2610 |                                         scia_puts(buff);               
; 2611 |                                         break;                         
; 2613 |                                 case VFD_LIMIT:                        
; 2614 |                                         // channel number              
; 2615 |                                         j = CHS_MAX;                   
; 2616 |                                         do {                           
; 2617 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2618 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2619 |                                                 ch = atoi(cmdbuff);    
; 2620 |                                                 scia_puts(cmdbuff);    
; 2621 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2622 |                                                         break;
;     |          // valid input channel number                                 
; 2624 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2625 |                                         } while (j);                   
; 2626 |                                         scia_puts("\r\n");             
; 2627 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2628 |                                         conf_data.vfd[ss].ch = ch;     
; 2630 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2631 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2632 |                                         scia_puts(buff);               
; 2633 |                                         break;                         
; 2634 |                                 case VFD_TEMP:                         
; 2635 |                                         // no more info                
; 2636 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2637 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2638 |                                         scia_puts(buff);               
; 2639 |                                         break;                         
; 2642 |                                 lcd_clear();                           
; 2643 |                                 update_units();                        
; 2644 |                                 unsaved = 1;                           
; 2645 |                                 break;                                 
; 2647 |                         default:                                       
; 2648 |                                 goto INVALIDCMD;                       
; 2651 |                         break;                                         
; 2653 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2654 |                         // DAC out command
;     |                                  //                                    
; 2655 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2656 |                 case 'O':                                              
; 2658 |                         if (cmdlen < 2) {                              
; 2659 |                                 goto INVALIDCMD;                       
; 2662 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2664 |                         case 'S':
;     |  // selection                                                          
; 2666 |                                 // DAC channel number                  
; 2667 |                                 j = DAC_MAX;                           
; 2668 |                                 do {                                   
; 2669 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2670 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2671 |                                         ss = atoi(cmdbuff);            
; 2672 |                                         scia_puts(cmdbuff);            
; 2673 |                                         if (ss > 0 && ss <= j) {       
; 2674 |                                                 break;
;     |          // valid input channel number                                 
; 2676 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2677 |                                 } while (j);                           
; 2678 |                                 scia_puts("\r\n");                     
; 2679 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2681 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2682 |                                 for (j = 0; j < 5; j++) {              
; 2683 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2684 |                                         scia_puts(buff);               
; 2685 |                                         scia_puts(", ");               
; 2687 |                                 j = 7;                                 
; 2688 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2689 |                                 scia_puts(buff);                       
; 2690 |                                 scia_puts("\r\n");                     
; 2691 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2692 |                                                 ss + 1);               
; 2693 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2694 |                                 pt = atoi(cmdbuff);                    
; 2695 |                                 if (pt >= 5 && pt != 7) {              
; 2696 |                                         pt = 0;                        
; 2697 |                                         scia_puts(                     
; 2698 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2700 |                                 scia_puts(cmdbuff);                    
; 2701 |                                 scia_puts("\r\n");                     
; 2702 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2704 |                                 if ( VFD_VOLT != pt) {                 
; 2706 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2707 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2708 |                                                 j = CHS_MAX;           
; 2709 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2710 |                                                 j = ENC_MAX;           
; 2713 |                                         // linked load/... channel numb
;     | er                                                                     
; 2714 |                                         do {                           
; 2715 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2716 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2717 |                                                 ch = atoi(cmdbuff);    
; 2718 |                                                 scia_puts(cmdbuff);    
; 2719 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2720 |                                                         break;
;     |          // valid input channel number                                 
; 2722 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2723 |                                         } while (j);                   
; 2724 |                                         scia_puts("\r\n");             
; 2725 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2726 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2728 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2729 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2730 |                                                 // gain                
; 2731 |                                                 if ( VFD_POSI == pt) { 
; 2732 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2733 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2734 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2736 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2737 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2738 |                                                 scia_puts(cmdbuff);    
; 2739 |                                                 scia_puts("\r\n");     
; 2741 |                                                 // offset              
; 2742 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2743 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2744 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2745 |                                                 scia_puts(cmdbuff);    
; 2746 |                                                 scia_puts("\r\n");     
; 2750 |                                 unsaved = 1;                           
; 2752 |                                 // print result                        
; 2753 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2754 |                                                 LPV[pt]);              
; 2755 |                                 scia_puts(buff);                       
; 2757 |                                 if ( VFD_VOLT == pt) {                 
; 2758 |                                         scia_puts("\r\n");             
; 2759 |                                 } else {                               
; 2760 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2761 |                                         scia_puts(buff);               
; 2763 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2764 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2765 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2766 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2767 |                                                 scia_puts(buff);       
; 2771 |                                 DINT;                                  
; 2772 |                                 ad7738_setcal();                       
; 2773 |                                 EINT;                                  
; 2774 |                                 break;                                 
; 2776 |                         case 'D':
;     |  // direct voltage output                                              
; 2778 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2779 |                                                 || 'V' != cmdbuff[3]) {
; 2780 |                                         goto INVALIDCMD;               
; 2783 |                                 // channel index                       
; 2784 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2785 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2786 |                                         goto INVALIDCMD;               
; 2787 |                                         // invalid channel number      
; 2789 |                                 ss--;
;     |  // change to zero based index                                         
; 2791 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2792 |                                         goto INVALIDCMD;               
; 2793 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2796 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2797 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2798 |                                         goto INVALIDCMD;               
; 2799 |                                         // invalid voltage             
; 2802 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2803 |                                 if (volt[0] < 0) {                     
; 2804 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2805 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2806 |                                 } else {                               
; 2807 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2808 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2811 |                                 if (dsum[0] <= 0) {                    
; 2812 |                                         dacc[0] = 0;                   
; 2813 |                                 } else if (dsum[0] >= 0xffff) {        
; 2814 |                                         dacc[0] = 0xffff;              
; 2815 |                                 } else {                               
; 2816 |                                         dacc[0] = (Uint16) dsum[0];    
; 2819 |                                 mcbsp_xmit(dacc[0], ss);               
; 2820 |                                 latch_dac();                           
; 2822 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2823 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2824 |                                 scia_puts(buff);                       
; 2826 |                                 break;                                 
; 2828 |                         default:                                       
; 2829 |                                 goto INVALIDCMD;                       
; 2832 |                         break;                                         
; 2834 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2835 |                         // LIMIT command
;     |                                          //                            
; 2836 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2837 |                 case 'L':                                              
; 2839 |                         if (cmdlen < 2) {                              
; 2840 |                                 goto INVALIDCMD;                       
; 2843 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2845 |                         case 'S':
;     |  // selection                                                          
; 2847 |                                 // LIMIT channel number                
; 2848 |                                 j = LIM_MAX;                           
; 2849 |                                 do {                                   
; 2850 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2851 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2852 |                                         ss = atoi(cmdbuff);            
; 2853 |                                         scia_puts(cmdbuff);            
; 2854 |                                         if (ss > 0 && ss <= j) {       
; 2855 |                                                 break;
;     |          // valid input channel number                                 
; 2857 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2858 |                                 } while (j);                           
; 2859 |                                 scia_puts("\r\n");                     
; 2860 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2862 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2863 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2864 |                                 scia_puts(cmdbuff);                    
; 2865 |                                 scia_puts("\r\n");                     
; 2867 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2869 |                                         // set on flag                 
; 2870 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2872 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2873 |                                         for (j = 0; j < 5; j++) {      
; 2874 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2875 |                                                 scia_puts(buff);       
; 2876 |                                                 if (j < 4) {           
; 2877 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2880 |                                         scia_puts("\r\n");             
; 2881 |                                         sprintf(buff,                  
; 2882 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2883 |                                                         ss + 1);       
; 2884 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2885 |                                         pt = atoi(cmdbuff);            
; 2886 |                                         if (pt >= 5) {                 
; 2887 |                                                 pt = 0;                
; 2888 |                                                 scia_puts(             
; 2889 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2891 |                                         scia_puts(cmdbuff);            
; 2892 |                                         scia_puts("\r\n");             
; 2893 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2895 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2896 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2897 |                                                 j = CHS_MAX;           
; 2898 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2899 |                                                 j = ENC_MAX;           
; 2902 |                                         // linked load/... channel numb
;     | er                                                                     
; 2903 |                                         do {                           
; 2904 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2905 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2906 |                                                 ch = atoi(cmdbuff);    
; 2907 |                                                 scia_puts(cmdbuff);    
; 2908 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2909 |                                                         break;
;     |          // valid input channel number                                 
; 2911 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2912 |                                         } while (j);                   
; 2913 |                                         scia_puts("\r\n");             
; 2914 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2915 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2917 |                                         // NO/NC                       
; 2918 |                                         scia_getparam(                 
; 2919 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2920 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2921 |                                         scia_puts(cmdbuff);            
; 2922 |                                         scia_puts("\r\n");             
; 2924 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2926 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2927 |                                         } else {                       
; 2928 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2931 |                                         scia_getparam(                 
; 2932 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2933 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2934 |                                         scia_puts(cmdbuff);            
; 2935 |                                         scia_puts("\r\n");             
; 2937 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2939 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2940 |                                         } else {                       
; 2941 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2944 |                                         scia_getparam(                 
; 2945 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2946 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2947 |                                         scia_puts(cmdbuff);            
; 2948 |                                         scia_puts("\r\n");             
; 2950 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2952 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2953 |                                         } else {                       
; 2954 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2957 |                                         // unit (output)               
; 2958 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 2959 |                                         case VFD_LOAD:                 
; 2960 |                                         case VFD_PEAK:                 
; 2961 |                                         case VFD_VALL:                 
; 2962 |                                                 ccp =                  
; 2963 |                                                                 UNITS[0
;     | x0f                                                                    
; 2964 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 2965 |                                                 break;                 
; 2966 |                                         case VFD_POSI:                 
; 2967 |                                                 ccp = POS_U;           
; 2968 |                                                 break;                 
; 2969 |                                         case VFD_VELO:                 
; 2970 |                                                 ccp = VEL_U;           
; 2971 |                                                 break;                 
; 2974 |                                         // set value                   
; 2975 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 2976 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2977 |                                         scia_puts(cmdbuff);            
; 2978 |                                         scia_puts("\r\n");             
; 2980 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 2981 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2982 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2984 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 2985 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2986 |                                         scia_puts(cmdbuff);            
; 2987 |                                         scia_puts("\r\n");             
; 2989 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 2990 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2991 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2992 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 2994 |                                         // print result                
; 2995 |                                         sprintf(buff,                  
; 2996 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 2997 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 2998 |                                         scia_puts(buff);               
; 3000 |                                         sprintf(buff,                  
; 3001 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3002 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3003 | 
;     |  "NC" : "NO",                                                          
; 3004 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3005 | 
;     |  "ON" : "OFF",                                                         
; 3006 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3007 |                                         scia_puts(buff);               
; 3008 |                                         sprintf(buff,                  
; 3009 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3010 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3011 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3012 |                                         scia_puts(buff);               
; 3014 |                                 } else
;     |  // turn off                                                           
; 3016 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3017 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3020 |                                 unsaved = 1;                           
; 3022 |                                 DINT;                                  
; 3023 |                                 ad7738_setcal();                       
; 3024 |                                 EINT;                                  
; 3025 |                                 break;                                 
; 3027 |                         default:                                       
; 3028 |                                 goto INVALIDCMD;                       
; 3031 |                         break;                                         
; 3033 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3034 |                         // reset commands
;     |                                          //                            
; 3035 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3036 |                 case 'R':                                              
; 3038 |                         if (cmdlen < 2) {                              
; 3039 |                                 goto INVALIDCMD;                       
; 3042 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3044 |                         case 'T':
;     |  // tare                                                               
; 3046 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3047 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3048 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3049 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3050 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3051 |                                 } else {                               
; 3052 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3053 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3054 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3056 |                                 break;                                 
; 3058 |                         case 'P':
;     |  // peak                                                               
; 3060 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3061 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3062 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3063 |                                 } else {                               
; 3064 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3066 |                                 break;                                 
; 3068 |                         case 'V':
;     |  // valley                                                             
; 3070 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3071 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3072 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3073 |                                 } else {                               
; 3074 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3076 |                                 break;                                 
; 3078 |                         case 'S':
;     |  // shunt switch                                                       
; 3080 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3081 |                                         shunt_switch(1);               
; 3082 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3083 |                                 } else {                               
; 3084 |                                         shunt_switch(0);               
; 3085 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3087 |                                 break;                                 
; 3089 |                         case 'L':
;     |  // limit                                                              
; 3091 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3092 |                                 ch--;                                  
; 3094 |                                 ad7738_resetlimit(ch);                 
; 3095 |                                 break;                                 
; 3097 |                         case 'I':
;     |  // posItion                                                           
; 3099 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3100 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3101 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3102 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3103 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3104 |                                 } else {                               
; 3105 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3106 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3107 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3109 |                                 break;                                 
; 3111 |                         default:                                       
; 3112 |                                 goto INVALIDCMD;                       
; 3114 |                         break;                                         
; 3116 | #ifdef SDHCCARD                                                        
; 3118 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3119 |                         // Stream to SD Card
;     |                                  //                                    
; 3120 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3121 |                         case 'W':// Write control                      
; 3123 |                         if( cmdlen < 2 )                               
; 3125 |                                 goto INVALIDCMD;                       
; 3128 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3130 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3132 |                                 if( cmdlen < 3 )                       
; 3134 |                                         goto INVALIDCMD;               
; 3137 |                                 if( sd_write )                         
; 3139 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3140 |                                         break;                         
; 3143 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3144 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3146 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3148 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3149 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3151 |                                 if( !res )                             
; 3153 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3154 |                                         if( res || cmdlen != temp16 )  
; 3156 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3157 |                                                 scia_puts( buff );     
; 3158 |                                                 f_close( fp );         
; 3159 |                                                 fp = NULL;             
; 3160 |                                                 break;                 
; 3177 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3179 |                                         if( res )                      
; 3181 |                                                 f_close( fp );         
; 3182 |                                                 fp = NULL;             
; 3183 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3184 |                                                 break;                 
; 3187 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3188 |                                         scia_puts( buff );             
; 3190 |                                         prod_init();                   
; 3191 |                                         sd_write = 1;                  
; 3192 |                                         sd_cnt = 0;                    
; 3193 |                                         break;                         
; 3196 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3197 |                                 scia_puts( buff );                     
; 3198 |                                 break;                                 
; 3200 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3202 |                                 if( sd_write )                         
; 3204 |                                         sd_close = 1;                  
; 3205 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3206 |                                         break;                         
; 3208 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3209 |                                 break;                                 
; 3211 |                                 case 'L':
;     |          // list files                                                 
; 3213 |                                 if( sd_write )                         
; 3215 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3216 |                                         break;                         
; 3219 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3220 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3222 |                                 res = f_opendir(&dir, "0:");           
; 3223 |                                 if (res)                               
; 3225 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3226 |                                         scia_puts( buff );             
; 3227 |                                         break;                         
; 3230 |                                 p1 = s1 = s2 = 0;                      
; 3231 |                                 for(;;)                                
; 3233 |                                         res = f_readdir(&dir, &Finfo); 
; 3234 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3235 |                                         break;                         
; 3236 |                                         if (Finfo.fattrib & AM_DIR)    
; 3238 |                                                 s2++;                  
; 3240 |                                         else                           
; 3242 |                                                 s1++;                  
; 3243 |                                                 p1 += Finfo.fsize;     
; 3245 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3246 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3247 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3248 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3249 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3250 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3251 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3252 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3253 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3254 |                                         scia_puts( buff );             
; 3256 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3257 |                                 scia_puts( buff );                     
; 3258 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3260 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3261 |                                         scia_puts( buff );             
; 3263 |                                 break;                                 
; 3265 |                                 case 'G':
;     |          // get a file                                                 
; 3267 |                                 if( sd_write )                         
; 3269 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3270 |                                         break;                         
; 3273 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3274 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3276 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3278 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3279 |                                 res = f_open( fp, buff, FA_READ );     
; 3280 |                                 if (res)                               
; 3282 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3283 |                                         scia_puts( buff );             
; 3284 |                                         break;                         
; 3287 |                                 do                                     
; 3289 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3290 |                                         scia_send( buff, temp16 );     
; 3291 |                                 }while( !res && temp16 == 512 );       
; 3293 |                                 f_close( fp );                         
; 3294 |                                 fp = NULL;                             
; 3295 |                                 break;                                 
; 3297 |                                 case 'R':
;     |          // remove a file                                              
; 3299 |                                 if( sd_write )                         
; 3301 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3302 |                                         break;                         
; 3305 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3306 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3308 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3310 |                                 res = f_unlink( buff );                
; 3312 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3313 |                                 scia_puts( buff );                     
; 3314 |                                 break;                                 
; 3316 |                                 default:                               
; 3317 |                                 goto INVALIDCMD;                       
; 3320 |                         break;                                         
; 3321 | #endif                                                                 
; 3323 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3324 |                         // Flash memory access commands
;     |                                    //                                  
; 3325 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3326 |                 case 'F':                                       // flas
;     | h access                                                               
; 3328 |                         if (cmdlen < 2) {                              
; 3329 |                                 goto INVALIDCMD;                       
; 3332 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3334 |                         case 'W':
;     |  // write flash                                                        
; 3336 |                                 if (unsaved) {                         
; 3337 |                                         // flash writing               
; 3338 |                                         lcd_clear();                   
; 3339 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3340 |                                         scia_puts("Flash writing..."); 
; 3342 |                                         for (i = 0; i < 50; i++) {     
; 3343 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3346 |                                         DINT;                          
; 3347 |                                         flash_ret = conf_write();      
; 3348 |                                         EINT;                          
; 3350 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3351 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3352 |                                                 unsaved = 0;           
; 3353 |                                         } else {                       
; 3354 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3356 |                                         lcd_clear();                   
; 3357 |                                         update_units();                
; 3358 |                                         break;                         
; 3360 |                                 scia_puts(                             
; 3361 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3362 |                                 break;                                 
; 3364 |                         case 'R':
;     |  // read flash                                                         
; 3366 |                                 // flash reading                       
; 3367 |                                 conf_read();                           
; 3369 |                                 DINT;                                  
; 3370 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3371 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3372 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3373 |                                 EINT;                                  
; 3375 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3376 |                                 unsaved = 0;                           
; 3378 |                                 update_units();                        
; 3380 |                                 break;                                 
; 3382 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3384 |                                 conf_default();                        
; 3386 |                                 // flash writing                       
; 3387 |                                 lcd_clear();                           
; 3388 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3389 |                                 scia_puts("Flash write...");           
; 3391 |                                 for (i = 0; i < 50; i++) {             
; 3392 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3395 |                                 DINT;                                  
; 3396 |                                 flash_ret = conf_write();              
; 3397 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3398 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3399 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3400 |                                 EINT;                                  
; 3402 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3403 |                                         scia_puts(                     
; 3404 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3405 |                                         unsaved = 0;                   
; 3406 |                                 } else {                               
; 3407 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3409 |                                 lcd_clear();                           
; 3410 |                                 update_units();                        
; 3411 |                                 break;                                 
; 3413 |                         default:                                       
; 3414 |                                 goto INVALIDCMD;                       
; 3417 |                         break;                                         
; 3419 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3420 |                         // Help manu
;     |                                  //                                    
; 3421 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3422 |                 case 'H':                               // help menu   
; 3424 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3426 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3427 |                         scia_puts(                                     
; 3428 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3429 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3430 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3431 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3432 |                         scia_puts("\r\n");                             
; 3434 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3435 |                         scia_puts("UN          Set unit name.\r\n");   
; 3436 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3437 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3438 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3439 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3440 |                         scia_puts("\r\n");                             
; 3442 |                         scia_puts(                                     
; 3443 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3444 |                         scia_puts(                                     
; 3445 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3446 |                         scia_puts("\r\n");                             
; 3448 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3449 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3450 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3451 |                         scia_puts("\r\n");                             
; 3453 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3454 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3455 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3456 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3457 |                         scia_puts("\r\n");                             
; 3459 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3460 |                         scia_puts(                                     
; 3461 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3462 |                         scia_puts("\r\n");                             
; 3464 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3465 |                         scia_puts("\r\n");                             
; 3467 |                         scia_puts(                                     
; 3468 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3469 |                         scia_puts(                                     
; 3470 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3471 |                         scia_puts("\r\n");                             
; 3473 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3474 |                         scia_puts("\r\n");                             
; 3476 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3477 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3478 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3479 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3480 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3481 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3482 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3483 |                         scia_puts("\r\n");                             
; 3485 | #ifdef SDHCCARD                                                        
; 3486 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3487 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3488 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3489 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3490 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3491 |                         scia_puts( "\r\n" );                           
; 3492 | #endif                                                                 
; 3494 |                         scia_puts(                                     
; 3495 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3496 |                         scia_puts(                                     
; 3497 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3498 |                         scia_puts(                                     
; 3499 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3500 |                         scia_puts("\r\n");                             
; 3502 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3504 |                         // not implemented                             
; 3505 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3507 |                         scia_puts("\r\n");                             
; 3509 |                         break;                                         
; 3511 |                 case 'X':                                              
; 3513 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3515 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3517 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3520 |                         cmd_mode = SCI_MODE_BIN;                       
; 3521 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3523 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3525 |                         break;                                         
; 3527 |                 case 'Z':                                              
; 3529 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3531 |                         for (i = 0; i < 100; i++)       // 2s          
; 3533 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3536 |                         reboot();                                      
; 3537 |                         break;                                         
; 3561 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3562 |                         // Invalid commands
;     |                                  //                                    
; 3563 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3564 |                 default:                                               
; 3566 |                         INVALIDCMD:                                    
; 3568 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3569 |                         scia_puts(cmdbuff);                            
; 3570 |                         scia_puts("\", ignored.\r\n");                 
; 3571 |                         break;                                         
; 3573 |                 } // switch on 1st byte                                
; 3575 |                 if (unsaved) {                                         
; 3576 |                         scia_puts(                                     
; 3577 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3580 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3581 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3582 |                 // BIN command mode processing
;     |                          //                                            
; 3583 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3585 |                 // ------------------------------------------------    
; 3586 |                 // DEBUG: put received command on LCD                  
; 3595 |                 // ------------------------------------------------    
; 3596 |                 if (cmdlen < 2) {                                      
; 3597 |                         // INVALID COMMAND, less than 2 byte           
; 3598 |                         // may need to send NACK back                  
; 3599 |                         continue;                                      
; 3602 |                 for (i = 0; i < 2; i++) {                              
; 3603 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3606 |                 j = 2;                                  // buff length 
; 3607 |                 bincmdresult = Error_UnImpl;                           
; 3609 |                 // DEBUG, sending the command back                     
; 3610 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3612 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3614 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3617 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3732 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3734 |                 case CheckAddress:                                     
; 3736 |                         buff[j++] = 0;                                 
; 3737 |                         bincmdresult = OK_SendResult;                  
; 3738 |                         break;                                         
; 3740 |                 case SetAddress:                                       
; 3742 |                         buff[j] = cmdbuff[j];                          
; 3743 |                         j++;                                           
; 3744 |                         bincmdresult = OK_SendResult;                  
; 3745 |                         break;                                         
; 3747 |                 case RemoveAddress:                                    
; 3749 |                         buff[j] = cmdbuff[j];                          
; 3750 |                         j++;                                           
; 3751 |                         bincmdresult = OK_SendResult;                  
; 3752 |                         break;                                         
; 3754 |                 case GetUnitInfo:                                      
; 3756 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3757 |                         for (i = 0; i < 2; i++) {                      
; 3758 |                                 buff[j++] = 0xff & *intp;              
; 3759 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3760 |                                 intp++;                                
; 3763 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3764 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3766 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3767 |                         for (i = 0; i < 2; i++) {                      
; 3768 |                                 buff[j++] = 0xff & *intp;              
; 3769 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3770 |                                 intp++;                                
; 3773 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3774 |                         buff[j++] = slen;                              
; 3775 |                         for (i = 0; i < slen; i++) {                   
; 3776 |                                 buff[j++] = conf_data.uname[i]; // name
; 3778 |                         bincmdresult = OK_SendResult;                  
; 3780 |                         break;                                         
; 3782 |                 case SetUnitSN:                                        
; 3784 |                         if (cmdlen < 6) {                              
; 3785 |                                 bincmdresult = Error_Invalid;          
; 3786 |                                 break;                                 
; 3789 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3790 |                         for (i = 0; i < 2; i++) {                      
; 3791 |                                 *intp = cmdbuff[j];                    
; 3792 |                                 buff[j++] = 0xff & *intp;              
; 3793 |                                 *intp += cmdbuff[j] << 8;              
; 3794 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3795 |                                 intp++;                                
; 3797 |                         unsaved = 1;                                   
; 3799 |                         bincmdresult = OK_SendResult;                  
; 3800 |                         break;                                         
; 3802 |                 case SetUnitName:                                      
; 3804 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3805 |                                 bincmdresult = Error_Invalid;          
; 3806 |                                 break;                                 
; 3809 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3810 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3812 |                         conf_data.uname[i] = '\0';                     
; 3813 |                         unsaved = 1;                                   
; 3815 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3816 |                         buff[j++] = slen;                              
; 3817 |                         for (i = 0; i < slen; i++) {                   
; 3818 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3820 |                         bincmdresult = OK_SendResult;                  
; 3821 |                         break;                                         
; 3823 |                 case GetInterface:                                     
; 3825 |                         buff[j++] = conf_data.rxdir;                   
; 3827 |                         if (conf_data.rxdir == SDIR_RS485              
; 3828 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3829 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3830 |                                 for (i = 0; i < 2; i++) {              
; 3831 |                                         buff[j++] = 0xff & *intp;      
; 3832 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3833 |                                         intp++;                        
; 3836 |                         bincmdresult = OK_SendResult;                  
; 3837 |                         break;                                         
; 3839 |                 case SetInterface:                                     
; 3841 |                         if (cmdlen < 3) {                              
; 3842 |                                 bincmdresult = Error_Invalid;          
; 3843 |                                 break;                                 
; 3845 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3846 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3847 |                                 bincmdresult = Error_Invalid;          
; 3848 |                                 break;                                 
; 3851 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3852 |                                 if (cmdlen < 7) {                      
; 3853 |                                         bincmdresult = Error_Invalid;  
; 3854 |                                         break;                         
; 3857 |                                 temp32 = 0;                            
; 3858 |                                 for (k = 6; k > 2; k--) {              
; 3859 |                                         temp32 += cmdbuff[k];          
; 3860 |                                         temp32 <<= 8;                  
; 3863 |                                 for (i = 0; i < 8; i++) {              
; 3864 |                                         if (temp32 == BAUD[i]) {       
; 3865 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3866 |                                                 break;                 
; 3869 |                                 if (i == 8) {                          
; 3870 |                                         bincmdresult = Error_Invalid;  
; 3871 |                                         break;                         
; 3875 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3877 |                         while (j < cmdlen) {                           
; 3878 |                                 buff[j] = cmdbuff[j];                  
; 3879 |                                 j++;                                   
; 3881 |                         unsaved = 1;                                   
; 3882 |                         bincmdresult = OK_SendResult;                  
; 3883 |                         break;                                         
; 3885 |                 case GetChannel:                                       
; 3887 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3888 |                                 bincmdresult = Error_Invalid;          
; 3889 |                                 break;                                 
; 3891 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3893 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3895 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3897 |                                 buff[j++] = 0;                         
; 3900 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3901 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3903 |                                 buff[j++] = 0xff & *intp;              
; 3904 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3905 |                                 intp++;                                
; 3908 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3909 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3911 |                                 buff[j++] = 0xff & *intp;              
; 3912 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3913 |                                 intp++;                                
; 3916 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3917 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3919 |                                 buff[j++] = 0xff & *intp;              
; 3920 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3921 |                                 intp++;                                
; 3924 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3925 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3927 |                                 buff[j++] = 0xff & *intp;              
; 3928 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3929 |                                 intp++;                                
; 3932 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3933 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3935 |                                 buff[j++] = 0xff & *intp;              
; 3936 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3937 |                                 intp++;                                
; 3940 |                         bincmdresult = OK_SendResult;                  
; 3941 |                         break;                                         
; 3943 |                 case GetSensor:                                        
; 3945 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3946 |                                 bincmdresult = Error_Invalid;          
; 3947 |                                 break;                                 
; 3949 |                         ss = cmdbuff[2];                               
; 3950 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3952 |                         // sensor serial name                          
; 3953 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3954 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3955 |                         for (i = 0; i < slen; i++) {                   
; 3956 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 3959 |                         // sensor name/label                           
; 3960 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 3961 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3962 |                         for (i = 0; i < slen; i++) {                   
; 3963 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 3966 |                         // TAGID                                       
; 3967 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 3968 |                         for (i = 0; i < 4; i++) {                      
; 3969 |                                 buff[j++] = 0xff & *intp;              
; 3970 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3971 |                                 intp++;                                
; 3974 |                         // Method                                      
; 3975 |                         buff[j++] = conf_data.sensor[ss].method;       
; 3977 |                         // Date                                        
; 3978 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 3979 |                         for (i = 0; i < 2; i++) {                      
; 3980 |                                 buff[j++] = 0xff & *intp;              
; 3981 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3982 |                                 intp++;                                
; 3985 |                         // Range                                       
; 3986 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 3987 |                         for (i = 0; i < 2; i++) {                      
; 3988 |                                 buff[j++] = 0xff & *intp;              
; 3989 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3990 |                                 intp++;                                
; 3993 |                         // Unit                                        
; 3994 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 3996 |                         // Output Unit                                 
; 3997 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 3999 |                         // Unit Factor                                 
; 4000 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4001 |                         for (i = 0; i < 2; i++) {                      
; 4002 |                                 buff[j++] = 0xff & *intp;              
; 4003 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4004 |                                 intp++;                                
; 4007 |                         // calibration points.                         
; 4008 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4009 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4010 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4011 |                                         // mass point                  
; 4012 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4013 |                                         for (i = 0; i < 2; i++) {      
; 4014 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4015 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4016 |                                                 intp++;                
; 4018 |                                         // adc counts point            
; 4019 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4020 |                                         for (i = 0; i < 2; i++) {      
; 4021 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4022 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4023 |                                                 intp++;                
; 4027 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4028 |                                         // slope point                 
; 4029 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4030 |                                         for (i = 0; i < 2; i++) {      
; 4031 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4032 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4033 |                                                 intp++;                
; 4035 |                                         // intercept point             
; 4036 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4037 |                                         for (i = 0; i < 2; i++) {      
; 4038 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4039 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4040 |                                                 intp++;                
; 4043 |                         } else {                                       
; 4044 |                                 buff[j++] = 0;                         
; 4045 |                                 // slope                               
; 4046 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4047 |                                 for (i = 0; i < 2; i++) {              
; 4048 |                                         buff[j++] = 0xff & *intp;      
; 4049 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4050 |                                         intp++;                        
; 4052 |                                 // intercept                           
; 4053 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4054 |                                 for (i = 0; i < 2; i++) {              
; 4055 |                                         buff[j++] = 0xff & *intp;      
; 4056 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4057 |                                         intp++;                        
; 4061 |                         // shunt                                       
; 4062 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4063 |                         for (i = 0; i < 2; i++) {                      
; 4064 |                                 buff[j++] = 0xff & *intp;              
; 4065 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4066 |                                 intp++;                                
; 4069 |                         // base                                        
; 4070 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4071 |                         for (i = 0; i < 2; i++) {                      
; 4072 |                                 buff[j++] = 0xff & *intp;              
; 4073 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4074 |                                 intp++;                                
; 4077 |                         // DAC calibration gain                        
; 4078 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4079 |                         for (i = 0; i < 2; i++) {                      
; 4080 |                                 buff[j++] = 0xff & *intp;              
; 4081 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4082 |                                 intp++;                                
; 4085 |                         // DAC calibration offset                      
; 4086 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4087 |                         for (i = 0; i < 2; i++) {                      
; 4088 |                                 buff[j++] = 0xff & *intp;              
; 4089 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4090 |                                 intp++;                                
; 4093 |                         // channel calibrated on                       
; 4094 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4096 |                         bincmdresult = OK_SendResult;                  
; 4097 |                         break;                                         
; 4099 |                 case GetQEPChannels:                                   
; 4101 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4102 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4103 |                                 for (i = 0; i < 2; i++) {              
; 4104 |                                         buff[j++] = 0xff & *intp;      
; 4105 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4106 |                                         intp++;                        
; 4110 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4111 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4113 |                         bincmdresult = OK_SendResult;                  
; 4114 |                         break;                                         
; 4116 |                 case GetCurSensor:                                     
; 4118 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4119 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4122 |                         bincmdresult = OK_SendResult;                  
; 4123 |                         break;                                         
; 4125 |                 case GetAFilterSize:                                   
; 4127 |                         // filter size                                 
; 4128 |                         intp = (Uint16*) &conf_data.filter;            
; 4129 |                         buff[j++] = 0xff & *intp;                      
; 4130 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4131 |                         // filter window                               
; 4132 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4133 |                         for (i = 0; i < 2; i++) {                      
; 4134 |                                 buff[j++] = 0xff & *intp;              
; 4135 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4136 |                                 intp++;                                
; 4138 |                         bincmdresult = OK_SendResult;                  
; 4139 |                         break;                                         
; 4141 |                 case GetAutoId:                                        
; 4143 |                         buff[j++] = conf_data.tagiden;                 
; 4144 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4145 |                                 buff[j++] = autoid[i];                 
; 4147 |                         bincmdresult = OK_SendResult;                  
; 4148 |                         break;                                         
; 4150 |                 case GetDisplay:                                       
; 4152 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4153 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4154 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4155 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4157 |                         bincmdresult = OK_SendResult;                  
; 4158 |                         break;                                         
; 4160 |                 case GetDAC:                                           
; 4162 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4163 |                                 buff[j++] = conf_data.dac[i].what;     
; 4164 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4166 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4167 |                                 //{                                    
; 4168 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4169 |                                 //}                                    
; 4170 |                                 //else                                 
; 4171 |                                 //{                                    
; 4172 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4173 |                                 //}                                    
; 4174 |                                 for (k = 0; k < 2; k++) {              
; 4175 |                                         buff[j++] = 0xff & *intp;      
; 4176 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4177 |                                         intp++;                        
; 4179 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4180 |                                 //{                                    
; 4181 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4182 |                                 //}                                    
; 4183 |                                 //else                                 
; 4184 |                                 //{                                    
; 4185 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4186 |                                 //}                                    
; 4187 |                                 for (k = 0; k < 2; k++) {              
; 4188 |                                         buff[j++] = 0xff & *intp;      
; 4189 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4190 |                                         intp++;                        
; 4192 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4193 |                                 for (k = 0; k < 2; k++) {              
; 4194 |                                         buff[j++] = 0xff & *intp;      
; 4195 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4196 |                                         intp++;                        
; 4198 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4199 |                                 for (k = 0; k < 2; k++) {              
; 4200 |                                         buff[j++] = 0xff & *intp;      
; 4201 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4202 |                                         intp++;                        
; 4204 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4205 |                                 for (k = 0; k < 2; k++) {              
; 4206 |                                         buff[j++] = 0xff & *intp;      
; 4207 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4208 |                                         intp++;                        
; 4211 |                         bincmdresult = OK_SendResult;                  
; 4212 |                         break;                                         
; 4214 |                 case GetLIMIT:                                         
; 4216 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4217 |                                 buff[j++] = conf_data.lim[i].what;     
; 4218 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4219 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4221 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4222 |                                 for (k = 0; k < 2; k++) {              
; 4223 |                                         buff[j++] = 0xff & *intp;      
; 4224 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4225 |                                         intp++;                        
; 4227 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4228 |                                 for (k = 0; k < 2; k++) {              
; 4229 |                                         buff[j++] = 0xff & *intp;      
; 4230 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4231 |                                         intp++;                        
; 4234 |                         bincmdresult = OK_SendResult;                  
; 4235 |                         break;                                         
; 4237 |                 case GetLIMITStatus:                                   
; 4239 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4240 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4242 |                         bincmdresult = OK_SendResult;                  
; 4243 |                         break;                                         
; 4245 |                         // Heat Cal commands.                          
; 4246 |                 case GetTCLoadA:                                       
; 4247 |                 case GetTCLoadB:                                       
; 4248 |                 case GetTCLoadC:                                       
; 4249 |                 case GetTCLoadD:                                       
; 4251 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4252 |                         intp = (Uint16*) &temp16;                      
; 4253 |                         buff[j++] = 0xff & *intp;                      
; 4254 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4256 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4257 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4258 |                         intp = (Uint16*) &templg;                      
; 4259 |                         for (i = 0; i < 2; i++) {                      
; 4260 |                                 buff[j++] = 0xff & *intp;              
; 4261 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4262 |                                 intp++;                                
; 4264 |                         bincmdresult = OK_SendResult;                  
; 4265 |                         break;                                         
; 4267 |                 case GetTCTemp:                                        
; 4269 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4270 |                         intp = (Uint16*) &temp16;                      
; 4271 |                         buff[j++] = 0xff & *intp;                      
; 4272 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4273 |                         bincmdresult = OK_SendResult;                  
; 4274 |                         break;                                         
; 4276 |                 case GetTCStatus:                                      
; 4278 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4279 |                         for (i = 0; i < 2; i++) {                      
; 4280 |                                 buff[j++] = 0xff & *intp;              
; 4281 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4282 |                                 intp++;                                
; 4285 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4286 |                                 temp16 = 0x80;                         
; 4287 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4288 |                                         temp16 |= 0x01;                
; 4290 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4291 |                                         temp16 |= 0x02;                
; 4293 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4294 |                                         temp16 |= 0x04;                
; 4296 |                                 buff[j++] = 0xff & temp16;             
; 4298 |                         bincmdresult = OK_SendResult;                  
; 4299 |                         break;                                         
; 4301 |                 case GetTCParam:                                       
; 4303 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4304 |                                 bincmdresult = Error_Invalid;          
; 4305 |                                 break;                                 
; 4308 |                         ch = cmdbuff[2];                               
; 4309 |                         buff[j++] = ch;                                
; 4311 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4312 |                         for (k = 0; k < 2; k++) {                      
; 4313 |                                 buff[j++] = 0xff & *intp;              
; 4314 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4315 |                                 intp++;                                
; 4317 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4318 |                         for (k = 0; k < 2; k++) {                      
; 4319 |                                 buff[j++] = 0xff & *intp;              
; 4320 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4321 |                                 intp++;                                
; 4323 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4324 |                         for (k = 0; k < 2; k++) {                      
; 4325 |                                 buff[j++] = 0xff & *intp;              
; 4326 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4327 |                                 intp++;                                
; 4329 |                         bincmdresult = OK_SendResult;                  
; 4330 |                         break;                                         
; 4332 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4333 | #if 1                                                                  
; 4334 |                 case Open_SSR_IN1:                                     
; 4335 |                         ssr_set(0, SSR_OPEN);                          
; 4336 |                         break;                                         
; 4338 |                 case Close_SSR_IN1:                                    
; 4339 |                         ssr_set(0, SSR_CLOSE);                         
; 4340 |                         break;                                         
; 4341 | #endif                                                                 
; 4343 |                 case SetTCParam:                                       
; 4345 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4346 |                                 bincmdresult = Error_Invalid;          
; 4347 |                                 break;                                 
; 4350 |                         ch = cmdbuff[2];                               
; 4351 |                         buff[j++] = ch;                                
; 4353 |                         k = 3;                                         
; 4354 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4355 |                         for (i = 0; i < 2; i++) {                      
; 4356 |                                 *intp = cmdbuff[k++];                  
; 4357 |                                 *intp += cmdbuff[k++] << 8;            
; 4358 |                                 intp++;                                
; 4360 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4361 |                         for (i = 0; i < 2; i++) {                      
; 4362 |                                 *intp = cmdbuff[k++];                  
; 4363 |                                 *intp += cmdbuff[k++] << 8;            
; 4364 |                                 intp++;                                
; 4366 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4367 |                         for (i = 0; i < 2; i++) {                      
; 4368 |                                 *intp = cmdbuff[k++];                  
; 4369 |                                 *intp += cmdbuff[k++] << 8;            
; 4370 |                                 intp++;                                
; 4373 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4374 |                         for (k = 0; k < 2; k++) {                      
; 4375 |                                 buff[j++] = 0xff & *intp;              
; 4376 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4377 |                                 intp++;                                
; 4379 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4380 |                         for (k = 0; k < 2; k++) {                      
; 4381 |                                 buff[j++] = 0xff & *intp;              
; 4382 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4383 |                                 intp++;                                
; 4385 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4386 |                         for (k = 0; k < 2; k++) {                      
; 4387 |                                 buff[j++] = 0xff & *intp;              
; 4388 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4389 |                                 intp++;                                
; 4391 |                         unsaved = 1;                                   
; 4392 |                         bincmdresult = OK_SendResult;                  
; 4393 |                         break;                                         
; 4395 |                 case SetBCalParam:                                     
; 4397 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4398 |                                         || cmdbuff[3] != 2) {          
; 4399 |                                 bincmdresult = Error_Invalid;          
; 4400 |                                 break;                                 
; 4403 |                         ch = cmdbuff[2];                               
; 4404 |                         buff[j++] = ch;                                
; 4405 |                         buff[j] = cmdbuff[j++];                        
; 4407 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4408 |                                 intp = (Uint16*) &volt[k];             
; 4409 |                                 for (i = 0; i < 2; i++) {              
; 4410 |                                         *intp = cmdbuff[j];            
; 4411 |                                         buff[j++] = 0xff & *intp;      
; 4412 |                                         *intp += cmdbuff[j] << 8;      
; 4413 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4414 |                                         intp++;                        
; 4417 |                         bincmdresult = OK_SendResult;                  
; 4418 |                         break;                                         
; 4420 |                 case StartBCRead:                                      
; 4422 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4423 |                                         || cmdbuff[3] >= 2) {          
; 4424 |                                 bincmdresult = Error_Invalid;          
; 4425 |                                 break;                                 
; 4428 |                         k = cmdbuff[3];                                
; 4429 |                         intp = (Uint16*) &tempft;                      
; 4430 |                         for (i = 0; i < 2; i++) {                      
; 4431 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4432 |                                 intp++;                                
; 4434 |                         if (volt[k] != tempft) {                       
; 4435 |                                 bincmdresult = Error_Invalid;          
; 4436 |                                 break;                                 
; 4438 |                         lcd_clear();                                   
; 4439 |                         lcd_puts("Board Calibration...", 0);           
; 4440 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4441 |                         lcd_puts(buff, 20);                            
; 4442 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4443 |                         lcd_puts(buff, 40);                            
; 4444 |                         lcd_puts("Reading ... ", 60);                  
; 4446 |                         dsum[k] = 0;                                   
; 4447 |                         sampcnt = CAL_SAMPLES;                         
; 4448 |                         while (sampcnt--) {                            
; 4449 |                                 while (0 == ad7738_rawrdy()) {         
; 4450 |                                         delay_us(1);
;     |  // wait                                                               
; 4452 |                                 cntp = ad7738_getraw();                
; 4453 |                                 dsum[k] += cntp->adc[ch];              
; 4455 |                         if (1 == k) {                                  
; 4456 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4457 |                                                 / (dsum[1] - dsum[0]); 
; 4459 |                                 unsaved = 1;                           
; 4460 |                                 DINT;                                  
; 4461 |                                 ad7738_setcal();                       
; 4462 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4463 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4464 |                                 EINT;                                  
; 4466 |                         for (i = 0; i < cmdlen; i++) {                 
; 4467 |                                 buff[i] = cmdbuff[i];                  
; 4469 |                         j = cmdlen;                                    
; 4470 |                         bincmdresult = OK_SendResult;                  
; 4472 |                         lcd_clear();                                   
; 4473 |                         update_units();                                
; 4474 |                         break;                                         
; 4476 |                 case SetDCalParam:                                     
; 4478 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4479 |                                         || (0x07 | daccbm) != 0x07) {  
; 4480 |                                 bincmdresult = Error_Invalid;          
; 4481 |                                 break;                                 
; 4483 |                         ch = cmdbuff[2];                               
; 4484 |                         buff[j++] = ch;                                
; 4486 |                         for (k = 0; k < 3; k++) {                      
; 4487 |                                 intp = (Uint16*) &volt[k];             
; 4488 |                                 for (i = 0; i < 2; i++) {              
; 4489 |                                         *intp = cmdbuff[j];            
; 4490 |                                         buff[j++] = 0xff & *intp;      
; 4491 |                                         *intp += cmdbuff[j] << 8;      
; 4492 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4493 |                                         intp++;                        
; 4497 |                         // order: - o +                                
; 4498 |                         // do the calculations                         
; 4499 |                         conf_data.dac[ch].dslopen =                    
; 4500 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4501 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4502 |                         conf_data.dac[ch].dslopep =                    
; 4503 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4504 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4505 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4506 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4508 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4509 |                         daccbm = 0;                                    
; 4511 |                         unsaved = 1;                                   
; 4513 |                         DINT;                                          
; 4514 |                         ad7738_setcal();                               
; 4515 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4516 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4517 |                         EINT;                                          
; 4519 |                         bincmdresult = OK_SendResult;                  
; 4520 |                         break;                                         
; 4522 |                 case StartDCRead:                                      
; 4524 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4525 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4526 |                                 bincmdresult = Error_Invalid;          
; 4527 |                                 break;                                 
; 4530 |                         if (daccbm == 0) {                             
; 4531 |                                 ch = cmdbuff[2];                       
; 4532 |                         } else {                                       
; 4533 |                                 if (ch != cmdbuff[2]) {                
; 4534 |                                         bincmdresult = Error_Invalid;  
; 4535 |                                         break;                         
; 4538 |                         buff[j++] = ch;                                
; 4539 |                         k = cmdbuff[j];                                
; 4540 |                         buff[j++] = k;                                 
; 4542 |                         intp = (Uint16*) &volt[k];                     
; 4543 |                         for (i = 0; i < 2; i++) {                      
; 4544 |                                 *intp = cmdbuff[j];                    
; 4545 |                                 buff[j++] = 0xff & *intp;              
; 4546 |                                 *intp += cmdbuff[j] << 8;              
; 4547 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4548 |                                 intp++;                                
; 4550 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4551 |                                 bincmdresult = Error_Invalid;          
; 4552 |                                 break;                                 
; 4555 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4556 |                         if (dsum[0] <= 0) {                            
; 4557 |                                 dacc[k] = 0;                           
; 4558 |                         } else if (dsum[0] >= 0xffff) {                
; 4559 |                                 dacc[k] = 0xffff;                      
; 4560 |                         } else {                                       
; 4561 |                                 dacc[k] = (Uint16) dsum[0];            
; 4564 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4566 |                         mcbsp_xmit(dacc[k], ch);                       
; 4567 |                         latch_dac();                                   
; 4569 |                         daccbm |= (0x1 << k);                          
; 4571 |                         bincmdresult = OK_SendResult;                  
; 4572 |                         break;                                         
; 4574 |                 case SetSensorCalPa:                                   
; 4576 |                         if (cmdlen < 20) {                             
; 4577 |                                 bincmdresult = Error_Invalid;          
; 4578 |                                 break;                                 
; 4580 |                         k = 2;                                         
; 4581 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4582 |                         ss = cmdbuff[k++];              // sensor index
; 4583 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4584 |                                 bincmdresult = Error_Invalid;          
; 4585 |                                 break;                                 
; 4588 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4589 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4590 |                                 bincmdresult = Error_Invalid;          
; 4591 |                                 break;                                 
; 4593 |                         for (i = 0; i < tempint; i++) {                
; 4594 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4596 |                         tsensor.ssn[i] = '\0';                         
; 4598 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4599 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4600 |                                 bincmdresult = Error_Invalid;          
; 4601 |                                 break;                                 
; 4603 |                         for (i = 0; i < tempint; i++) {                
; 4604 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4606 |                         tsensor.slbl[i] = '\0';                        
; 4608 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4610 |                         intp = (Uint16*) &tsensor.date; // date        
; 4611 |                         for (i = 0; i < 2; i++) {                      
; 4612 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4613 |                                 k += 2;                                
; 4614 |                                 intp++;                                
; 4617 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4618 |                         for (i = 0; i < 2; i++) {                      
; 4619 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4620 |                                 k += 2;                                
; 4621 |                                 intp++;                                
; 4623 |                         tsensor.base = tsensor.range;                  
; 4625 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4626 |                         switch (tsensor.unit) {                        
; 4627 |                         case 0:                                 // lb  
; 4628 |                         case 1:                                 // kg  
; 4629 |                                 tsensor.unit |= UNIT_WT;               
; 4630 |                                 break;                                 
; 4631 |                         case 2:                                 // in  
; 4632 |                         case 3:                                 // cm  
; 4633 |                         case 4:                                 // mm  
; 4634 |                                 tsensor.unit |= UNIT_LT;               
; 4635 |                                 break;                                 
; 4636 |                         case 5:                                 // ps  
; 4637 |                                 tsensor.unit |= UNIT_PR;               
; 4638 |                                 break;                                 
; 4639 |                         case 6:                                 // nm  
; 4640 |                                 tsensor.unit |= UNIT_TQ;               
; 4641 |                                 break;                                 
; 4642 |                         case 7:                                        
; 4643 |                         case 8:                                        
; 4644 |                         case 15:                                       
; 4645 |                                 tsensor.unit |= 0xf0;                  
; 4646 |                                 break;                                 
; 4647 |                         default:                                       
; 4648 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4649 |                                 break;                                 
; 4651 |                         tsensor.ounit = tsensor.unit;                  
; 4652 |                         tsensor.ufactor = 1;                           
; 4654 |                         switch (tsensor.method) {                      
; 4655 |                         case MD_RUN_MVV:                               
; 4657 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4658 |                                 for (i = 0; i < 2; i++) {              
; 4659 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4660 |                                         k += 2;                        
; 4661 |                                         intp++;                        
; 4663 |                                 if (tsensor.slope[0] == 0) {           
; 4664 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4666 |                                 tsensor.points = 1;                    
; 4667 |                                 break;                                 
; 4669 |                         case MD_RUN_MAS:                               
; 4671 |                                 tsensor.points = cmdbuff[k++];         
; 4672 |                                 if (tsensor.points > PNT_MAX) {        
; 4673 |                                         tsensor.method = MD_UNCALED;   
; 4674 |                                         break;                         
; 4677 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4678 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4679 |                                         for (i = 0; i < 2; i++) {      
; 4680 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4681 |                                                 k += 2;                
; 4682 |                                                 intp++;                
; 4685 |                                 break;                                 
; 4687 |                         case MD_RUN_SHT:                               
; 4689 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4690 |                                 for (i = 0; i < 2; i++) {              
; 4691 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4692 |                                         k += 2;                        
; 4693 |                                         intp++;                        
; 4695 |                                 if (scale == 0) {                      
; 4696 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4698 |                                 tsensor.points = 1;                    
; 4699 |                                 break;                                 
; 4701 |                         default:                                       
; 4703 |                                 tsensor.method = MD_UNCALED;           
; 4704 |                                 break;                                 
; 4707 |                         if (tsensor.method == MD_UNCALED) {            
; 4708 |                                 bincmdresult = Error_Invalid;          
; 4709 |                                 break;                                 
; 4711 |                         tsensor.tare = 0;                              
; 4712 |                         tsensor.dacgain = 1;                           
; 4713 |                         tsensor.dacoff = 0;                            
; 4714 |                         tsensor.ch = ch;                               
; 4716 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4717 |                                 buff[j] = cmdbuff[j++];                
; 4719 |                         bincmdresult = OK_SendResult;                  
; 4720 |                         break;                                         
; 4722 |                 case StartSCRead:                                      
; 4724 |                         if (cmdlen < 5) {                              
; 4725 |                                 bincmdresult = Error_Invalid;          
; 4726 |                                 break;                                 
; 4728 |                         k = 2;                                         
; 4729 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4730 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4731 |                                 bincmdresult = Error_Invalid;          
; 4732 |                                 break;                                 
; 4735 |                         lcd_clear();                                   
; 4736 |                         lcd_puts("Sensor Calibration..", 0);           
; 4737 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4738 |                         lcd_puts(buff, 20);                            
; 4739 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4740 |                         lcd_puts(buff, 40);                            
; 4742 |                         switch (tsensor.method) {                      
; 4744 |                         case MD_RUN_MVV:                               
; 4746 |                                 lcd_puts("Reading zero point...", 60); 
; 4748 |                                 dsum[0] = 0;                           
; 4749 |                                 sampcnt = CAL_SAMPLES;                 
; 4750 |                                 while (sampcnt--) {                    
; 4751 |                                         while (0 == ad7738_rawrdy()) { 
; 4752 |                                                 delay_us(1);
;     |          // wait                                                       
; 4755 |                                         cntp = ad7738_getraw();        
; 4756 |                                         dsum[0] += cntp->adc[ch];      
; 4758 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4759 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4761 |                                 bincmdresult = OK_SendResult;          
; 4762 |                                 break;                                 
; 4764 |                         case MD_RUN_MAS:                               
; 4766 |                                 pt = cmdbuff[k++];                     
; 4767 |                                 intp = (Uint16*) &scale;               
; 4768 |                                 for (i = 0; i < 2; i++) {              
; 4769 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4770 |                                         k += 2;                        
; 4771 |                                         intp++;                        
; 4773 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4774 |                                         bincmdresult = Error_Invalid;  
; 4775 |                                         break;                         
; 4777 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4778 |                                 lcd_puts(buff, 60);                    
; 4780 |                                 dsum[0] = 0;                           
; 4781 |                                 sampcnt = CAL_SAMPLES;                 
; 4782 |                                 while (sampcnt--) {                    
; 4783 |                                         while (0 == ad7738_rawrdy()) { 
; 4784 |                                                 delay_us(1);
;     |          // wait                                                       
; 4787 |                                         cntp = ad7738_getraw();        
; 4788 |                                         dsum[0] += cntp->adc[ch];      
; 4790 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4792 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4794 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4795 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4796 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4797 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4798 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4799 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4800 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4801 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4802 | 
;     |          * tsensor.adc[k];                                             
; 4806 |                                 bincmdresult = OK_SendResult;          
; 4807 |                                 break;                                 
; 4809 |                         case MD_RUN_SHT:                               
; 4811 |                                 lcd_puts("Reading zero point...", 60); 
; 4813 |                                 for (k = 0; k < 2; k++) {              
; 4814 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4816 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4817 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4818 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4820 |                                                 DINT;                  
; 4821 |                                                 maf_rst();             
; 4822 |                                                 EINT;                  
; 4823 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4826 |                                         dsum[k] = 0;                   
; 4827 |                                         sampcnt = CAL_SAMPLES;         
; 4828 |                                         while (sampcnt--) {            
; 4829 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4830 |                                                         delay_us(1);
;     |                  // wait                                               
; 4833 |                                                 cntp = ad7738_getraw();
; 4834 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4838 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4839 |                                 DINT;                                  
; 4840 |                                 maf_rst();                             
; 4841 |                                 EINT;                                  
; 4843 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4844 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4845 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4846 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4848 |                                 bincmdresult = OK_SendResult;          
; 4849 |                                 break;                                 
; 4851 |                         default:                                       
; 4853 |                                 bincmdresult = Error_Invalid;          
; 4854 |                                 break;                                 
; 4856 |                         lcd_clear();                                   
; 4857 |                         update_units();                                
; 4859 |                         if (bincmdresult != OK_SendResult) {           
; 4860 |                                 break;                                 
; 4862 |                         for (i = 0; i < cmdlen; i++) {                 
; 4863 |                                 buff[i] = cmdbuff[i];                  
; 4865 |                         j = cmdlen;                                    
; 4866 |                         break;                                         
; 4868 |                 case StartSCShuntRd:                                   
; 4870 |                         if (cmdlen < 5) {                              
; 4871 |                                 bincmdresult = Error_Invalid;          
; 4872 |                                 break;                                 
; 4874 |                         k = 2;                                         
; 4875 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4876 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4877 |                                 bincmdresult = Error_Invalid;          
; 4878 |                                 break;                                 
; 4881 |                         lcd_clear();                                   
; 4882 |                         lcd_puts("Sensor Calibration..", 0);           
; 4883 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4884 |                         lcd_puts(buff, 20);                            
; 4885 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4886 |                         lcd_puts(buff, 40);                            
; 4887 |                         lcd_puts("Reading shunt value...", 60);        
; 4889 |                         for (k = 0; k < 2; k++) {                      
; 4890 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4892 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4893 |                                         for (i = 0; i < 50; i++) {     
; 4894 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4896 |                                         DINT;                          
; 4897 |                                         maf_rst();                     
; 4898 |                                         EINT;                          
; 4899 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4902 |                                 dsum[k] = 0;                           
; 4903 |                                 sampcnt = CAL_SAMPLES;                 
; 4904 |                                 while (sampcnt--) {                    
; 4905 |                                         while (0 == ad7738_rawrdy()) { 
; 4906 |                                                 delay_us(1);
;     |          // wait                                                       
; 4909 |                                         cntp = ad7738_getraw();        
; 4910 |                                         dsum[k] += cntp->adc[ch];      
; 4912 |                                 dsum[k] /= CAL_SAMPLES;                
; 4914 |                                 pt = 0;                                
; 4915 |                                 if (tsensor.points > 2) {              
; 4916 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4917 |                                                 pt++;                  
; 4920 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4921 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4924 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4925 |                         DINT;                                          
; 4926 |                         maf_rst();                                     
; 4927 |                         EINT;                                          
; 4929 |                         tsensor.shunt = volt[1] - volt[0];             
; 4931 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4933 |                         DINT;                                          
; 4934 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4935 |                                         sizeof(sconf_t));              
; 4937 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4939 |                         ad7738_setcal();                               
; 4940 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4941 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4942 |                         EINT;                                          
; 4944 |                         unsaved = 1;                                   
; 4946 |                         lcd_clear();                                   
; 4947 |                         update_units();                                
; 4949 |                         for (i = 0; i < cmdlen; i++) {                 
; 4950 |                                 buff[i] = cmdbuff[i];                  
; 4952 |                         j = cmdlen;                                    
; 4953 |                         bincmdresult = OK_SendResult;                  
; 4954 |                         break;                                         
; 4956 |                 case SetSensorName:                                    
; 4958 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 4959 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 4960 |                                 bincmdresult = Error_Invalid;          
; 4961 |                                 break;                                 
; 4963 |                         ss = cmdbuff[2];                               
; 4964 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4966 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 4967 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 4968 |                         for (i = 0; i < slen; i++) {                   
; 4969 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 4971 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 4972 |                         unsaved = 1;                                   
; 4974 |                         // sensor name/label                           
; 4975 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4976 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4977 |                         for (i = 0; i < slen; i++) {                   
; 4978 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4981 |                         bincmdresult = OK_SendResult;                  
; 4982 |                         break;                                         
; 4984 |                 case SetSensorOUnit:                                   
; 4986 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4987 |                                 bincmdresult = Error_Invalid;          
; 4988 |                                 break;                                 
; 4991 |                         ss = cmdbuff[2];                               
; 4992 |                         pt = cmdbuff[3];                               
; 4994 |                         if (pt != UNIT_PC                              
; 4995 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 4996 |                                 bincmdresult = Error_Invalid;          
; 4997 |                                 break;                                 
; 5000 |                         conf_data.sensor[ss].ounit = pt;               
; 5001 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5002 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5004 |                         if (pt == UNIT_PC) {                           
; 5005 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5006 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5007 |                         } else if (conf_data.sensor[ss].ounit          
; 5008 |                                         == conf_data.sensor[ss].unit) {
; 5009 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5010 |                         } else {                                       
; 5011 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5012 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5014 |                                         if (pt == UNIT_KG) {           
; 5015 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5017 |                                         break;                         
; 5019 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5021 |                                         if (pt == UNIT_LB) {           
; 5022 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5024 |                                         break;                         
; 5026 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5028 |                                         switch (pt) {                  
; 5029 |                                         case UNIT_CM:                  
; 5030 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5031 |                                                 break;                 
; 5032 |                                         case UNIT_MM:                  
; 5033 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5034 |                                                 break;                 
; 5036 |                                         break;                         
; 5038 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5040 |                                         switch (pt) {                  
; 5041 |                                         case UNIT_IN:                  
; 5042 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5043 |                                                 break;                 
; 5044 |                                         case UNIT_MM:                  
; 5045 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5046 |                                                 break;                 
; 5048 |                                         break;                         
; 5050 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5052 |                                         switch (pt) {                  
; 5053 |                                         case UNIT_IN:                  
; 5054 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5055 |                                                 break;                 
; 5056 |                                         case UNIT_CM:                  
; 5057 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5058 |                                                 break;                 
; 5060 |                                         break;                         
; 5062 |                                 default:                               
; 5064 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5065 |                                         break;                         
; 5069 |                         unsaved = 1;                                   
; 5071 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5072 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5073 |                                         update_units();                
; 5074 |                                         DINT;                          
; 5075 |                                         ad7738_setcal();               
; 5076 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5077 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5078 |                                         EINT;                          
; 5082 |                         bincmdresult = OK_SendResult;                  
; 5083 |                         break;                                         
; 5085 |                 case SetSensorBase:                                    
; 5087 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5088 |                                 bincmdresult = Error_Invalid;          
; 5089 |                                 break;                                 
; 5091 |                         ss = cmdbuff[2];                               
; 5092 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5094 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5095 |                         for (i = 0; i < 2; i++) {                      
; 5096 |                                 *intp = cmdbuff[j];                    
; 5097 |                                 buff[j++] = 0xff & *intp;              
; 5098 |                                 *intp += cmdbuff[j] << 8;              
; 5099 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5100 |                                 intp++;                                
; 5102 |                         unsaved = 1;                                   
; 5104 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5105 |                                 // output unit is percent              
; 5106 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5107 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5109 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5110 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5111 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5112 |                                                 DINT;                  
; 5113 |                                                 ad7738_setcal();       
; 5114 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5115 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5116 |                                                 EINT;                  
; 5121 |                         bincmdresult = OK_SendResult;                  
; 5122 |                         break;                                         
; 5124 |                 case SetQEPChannels:                                   
; 5126 |                         if (cmdlen < 6) {                              
; 5127 |                                 bincmdresult = Error_Invalid;          
; 5128 |                                 break;                                 
; 5131 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5132 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5133 |                                 for (i = 0; i < 2; i++) {              
; 5134 |                                         *intp = cmdbuff[j];            
; 5135 |                                         buff[j++] = 0xff & *intp;      
; 5136 |                                         *intp += cmdbuff[j] << 8;      
; 5137 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5138 |                                         intp++;                        
; 5142 |                         conf_data.velfilter = cmdbuff[j];              
; 5143 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5144 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5145 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5147 |                         unsaved = 1;                                   
; 5149 |                         DINT;                                          
; 5150 |                         ad7738_setcal();                               
; 5151 |                         velf_rst();                                    
; 5152 |                         EINT;                                          
; 5154 |                         bincmdresult = OK_SendResult;                  
; 5155 |                         break;                                         
; 5157 |                         //case SetEnCntperin: // not needed            
; 5158 |                         //break;                                       
; 5160 |                 case SetCurSensor:                                     
; 5162 |                         if (cmdlen < 4||                               
; 5163 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5164 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5165 |                                 bincmdresult = Error_Invalid;          
; 5166 |                                 break;                                 
; 5169 |                         ch = cmdbuff[2];                               
; 5170 |                         ss = cmdbuff[3];                               
; 5172 |                         if (autoid[ch]) {                              
; 5173 |                                 bincmdresult = Error_Exe;              
; 5174 |                                 break;                                 
; 5177 |                         DINT;                                          
; 5178 |                         conf_data.ch[ch].ci = ss;                      
; 5179 |                         ad7738_setcal();                               
; 5181 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5182 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5183 |                         EINT;                                          
; 5185 |                         update_units();                                
; 5186 |                         unsaved = 1;                                   
; 5188 |                         buff[j++] = ch;                                
; 5189 |                         buff[j++] = ss;                                
; 5190 |                         bincmdresult = OK_SendResult;                  
; 5191 |                         break;                                         
; 5193 |                 case SetAFilterSize:                                   
; 5195 |                         if (cmdlen < 4) {                              
; 5196 |                                 bincmdresult = Error_Invalid;          
; 5197 |                                 break;                                 
; 5200 |                         // filter length                               
; 5201 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5202 |                         if (temp16 > MAF_MAX) {                        
; 5203 |                                 bincmdresult = Error_Invalid;          
; 5204 |                                 break;                                 
; 5207 |                         // filter diff window                          
; 5208 |                         intp = (Uint16*) &tempft;                      
; 5209 |                         for (i = 0; i < 2; i++) {                      
; 5210 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5211 |                                 intp++;                                
; 5214 |                         DINT;                                          
; 5215 |                         conf_data.filter = temp16;                     
; 5216 |                         conf_data.diffwin = tempft;                    
; 5217 |                         maf_rst();                                     
; 5218 |                         EINT;                                          
; 5220 |                         unsaved = 1;                                   
; 5222 |                         buff[j++] = 0xff & temp16;                     
; 5223 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5225 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5226 |                         buff[j++] = 0xff & intp[0];                    
; 5227 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5228 |                         buff[j++] = 0xff & intp[1];                    
; 5229 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5231 |                         bincmdresult = OK_SendResult;                  
; 5232 |                         break;                                         
; 5234 |                 case SetAutoId:                                        
; 5236 |                         if (cmdlen < 3) {                              
; 5237 |                                 bincmdresult = Error_Invalid;          
; 5238 |                                 break;                                 
; 5241 |                         conf_data.tagiden = cmdbuff[2];                
; 5242 |                         if (!conf_data.tagiden) {                      
; 5243 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5244 |                                         tagwasthere[i] = 0;            
; 5245 |                                         autoid[i] = 0;                 
; 5247 |                                 update_units();                        
; 5249 |                         unsaved = 1;                                   
; 5251 |                         buff[j] = cmdbuff[j++];                        
; 5252 |                         bincmdresult = OK_SendResult;                  
; 5253 |                         break;                                         
; 5255 |                 case SetDisplayLine:                                   
; 5257 |                         if (cmdlen < 14) {                             
; 5258 |                                 bincmdresult = Error_Invalid;          
; 5259 |                                 break;                                 
; 5262 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5263 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5264 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5265 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5266 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5267 |                                         || cmdbuff[13] > 5) {          
; 5268 |                                 bincmdresult = Error_Invalid;          
; 5269 |                                 break;                                 
; 5272 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5273 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5274 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5275 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5276 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5277 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5278 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5280 |                         unsaved = 1;                                   
; 5282 |                         lcd_clear();                                   
; 5283 |                         update_units();                                
; 5284 |                         bincmdresult = OK_SendResult;                  
; 5285 |                         break;                                         
; 5287 |                 case SetDACCh:                                         
; 5289 |                         if (cmdlen < 42) {                             
; 5290 |                                 bincmdresult = Error_Invalid;          
; 5291 |                                 break;                                 
; 5294 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5295 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5296 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5297 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5298 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5299 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5300 |                                 bincmdresult = Error_Invalid;          
; 5301 |                                 break;                                 
; 5304 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5305 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5306 |                                 buff[j++] = conf_data.dac[i].what;     
; 5307 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5308 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5310 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5311 |                                 //{                                    
; 5312 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5313 |                                 //}                                    
; 5314 |                                 //else                                 
; 5315 |                                 //{                                    
; 5316 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5317 |                                 //}                                    
; 5318 |                                 for (k = 0; k < 2; k++) {              
; 5319 |                                         *intp = cmdbuff[j];            
; 5320 |                                         buff[j++] = 0xff & *intp;      
; 5321 |                                         *intp += cmdbuff[j] << 8;      
; 5322 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5323 |                                         intp++;                        
; 5326 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5327 |                                 //{                                    
; 5328 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5329 |                                 //}                                    
; 5330 |                                 //else                                 
; 5331 |                                 //{                                    
; 5332 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5333 |                                 //}                                    
; 5334 |                                 for (k = 0; k < 2; k++) {              
; 5335 |                                         *intp = cmdbuff[j];            
; 5336 |                                         buff[j++] = 0xff & *intp;      
; 5337 |                                         *intp += cmdbuff[j] << 8;      
; 5338 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5339 |                                         intp++;                        
; 5342 |                         unsaved = 1;                                   
; 5344 |                         DINT;                                          
; 5345 |                         ad7738_setcal();                               
; 5346 |                         EINT;                                          
; 5347 |                         bincmdresult = OK_SendResult;                  
; 5348 |                         break;                                         
; 5350 |                 case SetLIMITCh:                                       
; 5352 |                         if (cmdlen < 46) {                             
; 5353 |                                 bincmdresult = Error_Invalid;          
; 5354 |                                 break;                                 
; 5357 |                         if (cmdbuff[2]                                 
; 5358 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5359 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5360 |                                 bincmdresult = Error_Invalid;          
; 5361 |                                 break;                                 
; 5364 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5365 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5366 |                                 buff[j++] = conf_data.lim[i].what;     
; 5367 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5368 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5369 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5370 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5372 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5373 |                                 for (k = 0; k < 2; k++) {              
; 5374 |                                         *intp = cmdbuff[j];            
; 5375 |                                         buff[j++] = 0xff & *intp;      
; 5376 |                                         *intp += cmdbuff[j] << 8;      
; 5377 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5378 |                                         intp++;                        
; 5380 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5381 |                                 for (k = 0; k < 2; k++) {              
; 5382 |                                         *intp = cmdbuff[j];            
; 5383 |                                         buff[j++] = 0xff & *intp;      
; 5384 |                                         *intp += cmdbuff[j] << 8;      
; 5385 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5386 |                                         intp++;                        
; 5389 |                         unsaved = 1;                                   
; 5391 |                         DINT;                                          
; 5392 |                         ad7738_setcal();                               
; 5393 |                         EINT;                                          
; 5395 |                         bincmdresult = OK_SendResult;                  
; 5396 |                         break;                                         
; 5398 |                 case Tare:                                             
; 5400 |                         if (cmdlen < 3) {                              
; 5401 |                                 //bincmdresult = Error_Invalid;        
; 5402 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5403 |                                 ad7738_resetpeak(0xff);                
; 5404 |                                 ad7738_resetvall(0xff);                
; 5405 |                                 unsaved = 1;                           
; 5407 |                                 buff[j++] = 0xff;                      
; 5408 |                                 bincmdresult = OK_SendResult;          
; 5409 |                                 break;                                 
; 5412 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5413 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5414 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5415 |                         unsaved = 1;                                   
; 5417 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5418 |                         bincmdresult = OK_SendResult;                  
; 5419 |                         break;                                         
; 5421 |                 case ResetPkVly:                                       
; 5423 |                         if (cmdlen < 3) {                              
; 5424 |                                 bincmdresult = Error_Invalid;          
; 5425 |                                 break;                                 
; 5428 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5429 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5430 |                         unsaved = 1;                                   
; 5432 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5433 |                         bincmdresult = OK_SendResult;                  
; 5434 |                         break;                                         
; 5436 |                 case ResetPk:                                          
; 5438 |                         if (cmdlen < 3) {                              
; 5439 |                                 bincmdresult = Error_Invalid;          
; 5440 |                                 break;                                 
; 5443 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5444 |                         unsaved = 1;                                   
; 5446 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5447 |                         bincmdresult = OK_SendResult;                  
; 5448 |                         break;                                         
; 5450 |                 case ResetVly:                                         
; 5452 |                         if (cmdlen < 3) {                              
; 5453 |                                 bincmdresult = Error_Invalid;          
; 5454 |                                 break;                                 
; 5457 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5458 |                         unsaved = 1;                                   
; 5460 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5461 |                         bincmdresult = OK_SendResult;                  
; 5462 |                         break;                                         
; 5464 |                 case ResetLIMIT:                                       
; 5466 |                         if (cmdlen < 3) {                              
; 5467 |                                 bincmdresult = Error_Invalid;          
; 5468 |                                 break;                                 
; 5471 |                         k = 0x01;                                      
; 5472 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5473 |                                 if (k & cmdbuff[2]) {                  
; 5474 |                                         ad7738_resetlimit(i);          
; 5476 |                                 k <<= 1;                               
; 5478 |                         unsaved = 1;                                   
; 5480 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5481 |                         bincmdresult = OK_SendResult;                  
; 5482 |                         break;                                         
; 5484 |                 case ResetPosition:                                    
; 5486 |                         if (cmdlen < 3) {                              
; 5487 |                                 bincmdresult = Error_Invalid;          
; 5488 |                                 break;                                 
; 5491 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5492 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5493 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5494 |                         unsaved = 1;                                   
; 5496 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5497 |                         bincmdresult = OK_SendResult;                  
; 5498 |                         break;                                         
; 5500 |                 case SetShuntSwitch:                                   
; 5502 |                         if (cmdlen < 3) {                              
; 5503 |                                 bincmdresult = Error_Invalid;          
; 5504 |                                 break;                                 
; 5507 |                         shunt_switch(cmdbuff[2]);                      
; 5508 |                         unsaved = 1;                                   
; 5510 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5511 |                         bincmdresult = OK_SendResult;                  
; 5512 |                         break;                                         
; 5514 |                 case SetDirectVolt:                                    
; 5516 |                         if (cmdlen < 7) {                              
; 5517 |                                 bincmdresult = Error_Invalid;          
; 5518 |                                 break;                                 
; 5521 |                         ss = cmdbuff[j];                               
; 5522 |                         buff[j++] = ss;                                
; 5524 |                         intp = (Uint16*) &volt[0];                     
; 5525 |                         for (k = 0; k < 2; k++) {                      
; 5526 |                                 *intp = cmdbuff[j];                    
; 5527 |                                 buff[j++] = 0xff & *intp;              
; 5528 |                                 *intp += cmdbuff[j] << 8;              
; 5529 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5530 |                                 intp++;                                
; 5533 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5534 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5535 |                                 bincmdresult = Error_Invalid;          
; 5536 |                                 break;                                 
; 5539 |                         if (volt[0] < 0) {                             
; 5540 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5541 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5542 |                         } else {                                       
; 5543 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5544 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5547 |                         if (dsum[0] <= 0) {                            
; 5548 |                                 dacc[0] = 0;                           
; 5549 |                         } else if (dsum[0] >= 0xffff) {                
; 5550 |                                 dacc[0] = 0xffff;                      
; 5551 |                         } else {                                       
; 5552 |                                 dacc[0] = (Uint16) dsum[0];            
; 5555 |                         mcbsp_xmit(dacc[0], ss);                       
; 5556 |                         latch_dac();                                   
; 5558 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5559 |                         buff[j++] = 0xff & dacc[0];                    
; 5560 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5562 |                         bincmdresult = OK_SendResult;                  
; 5563 |                         break;                                         
; 5565 |                 case GetAllFlash:                                      
; 5567 |                         break;                                         
; 5569 |                 case SetAllFlash:                                      
; 5571 |                         break;                                         
; 5573 |                 case FlashMemWrite:                                    
; 5575 |                         bincmdresult = OK_SendResult;                  
; 5576 |                         if (unsaved) {                                 
; 5577 |                                 // flash writing                       
; 5578 |                                 lcd_clear();                           
; 5579 |                                 lcd_puts("Flash writing...", 0);       
; 5581 |                                 for (i = 0; i < 50; i++) {             
; 5582 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5585 |                                 DINT;                                  
; 5586 |                                 flash_ret = conf_write();              
; 5587 |                                 EINT;                                  
; 5589 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5590 |                                         lcd_puts("Done", 16);          
; 5591 |                                         unsaved = 0;                   
; 5592 |                                 } else {                               
; 5593 |                                         lcd_puts("Fail", 16);          
; 5594 |                                         bincmdresult = Error_Exe;      
; 5597 |                                 for (i = 0; i < 50; i++) {             
; 5598 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5600 |                                 lcd_clear();                           
; 5601 |                                 update_units();                        
; 5603 |                         break;                                         
; 5605 |                 case FlashMemDefault:                                  
; 5607 |                         conf_default();                                
; 5609 |                         // flash writing                               
; 5610 |                         lcd_clear();                                   
; 5611 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5613 |                         for (i = 0; i < 50; i++) {                     
; 5614 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5617 |                         DINT;                                          
; 5618 |                         flash_ret = conf_write();                      
; 5619 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5620 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5621 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5622 |                         EINT;                                          
; 5624 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5625 |                                 lcd_puts("Done", 31);                  
; 5626 |                                 unsaved = 0;                           
; 5627 |                                 bincmdresult = OK_SendResult;          
; 5628 |                         } else {                                       
; 5629 |                                 lcd_puts("Fail", 31);                  
; 5630 |                                 bincmdresult = Error_Exe;              
; 5632 |                         for (i = 0; i < 50; i++) {                     
; 5633 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5635 |                         lcd_clear();                                   
; 5636 |                         update_units();                                
; 5638 |                         break;                                         
; 5640 |                 case FlashMemRead:                                     
; 5642 |                         // flash reading                               
; 5643 |                         conf_read();                                   
; 5645 |                         DINT;                                          
; 5646 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5647 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5648 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5649 |                         EINT;                                          
; 5651 |                         unsaved = 0;                                   
; 5652 |                         update_units();                                
; 5653 |                         bincmdresult = OK_SendResult;                  
; 5654 |                         break;                                         
; 5656 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |612| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |612| 
        ; call occurs [#_SPICANRead] ; [] |612| 
        MOVL      XAR0,#40              ; [CPU_] |612| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |612| 
        MOV       *-SP[40],AL           ; [CPU_] |612| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 592,column 2,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |592| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L634,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5658,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5658 | if (cmdlen < 6) {                                                      
; 5659 |         bincmdresult = Error_Invalid;                                  
; 5660 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5658| 
        B         $C$L320,LO            ; [CPU_] |5658| 
        ; branchcc occurs ; [] |5658| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5663,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5663 | ds_dn = cmdbuff[2];                                                    
; 5664 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5663| 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5665 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5665| 
	.dwpsn	file "../Source/prod.c",line 5663,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5663| 
        ADDB      ACC,#2                ; [CPU_] |5663| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5663| 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5666 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5665| 
	.dwpsn	file "../Source/prod.c",line 5663,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5663| 
        MOV       *-SP[52],AL           ; [CPU_] |5663| 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5665| 
        ADDB      ACC,#4                ; [CPU_] |5665| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5665| 
	.dwpsn	file "../Source/prod.c",line 5667,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5667 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5667| 
	.dwpsn	file "../Source/prod.c",line 5665,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5665| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5665| 
        MOV       *-SP[51],AL           ; [CPU_] |5665| 
	.dwpsn	file "../Source/prod.c",line 5667,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5669 | tempint = 0;                                                           
; 5670 | k = 0x01;                                                              
; 5671 | for (i = 0; i < 8; i++) {                                              
; 5672 |         if (ds_bm & k) {                                               
; 5673 |                 tempint++;                                             
; 5675 |         k <<= 1;                                                       
; 5678 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5679 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5680 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5681 | //                                      ds_en = 0;                     
; 5682 | //                                      bincmdresult = Error_Invalid;  
; 5683 | //                                      break;                         
; 5684 | //                              }                                      
; 5686 | ds_en = 1;                                                             
; 5687 | ds_stop = 0;                                                           
; 5688 | ds_sn = 0;                                                             
; 5690 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5691 | //                              ad7738_setlimitchgd();                 
; 5693 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5667| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5667| 
        MOV       *-SP[50],AL           ; [CPU_] |5667| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5694,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5694 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5694| 
	.dwpsn	file "../Source/prod.c",line 5686,column 5,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |5686| 
	.dwpsn	file "../Source/prod.c",line 5687,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5687| 
	.dwpsn	file "../Source/prod.c",line 5688,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |5688| 
	.dwpsn	file "../Source/prod.c",line 5695,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5695 | j++;                                                                   
; 5697 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[61],#6           ; [CPU_] |5695| 
	.dwpsn	file "../Source/prod.c",line 5698,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5698 | break;                                                                 
; 5700 | case StopStream:                                                       
; 5702 | ds_stop = 1;                                                           
; 5703 | bincmdresult = OK_SendResult;                                          
; 5704 | break;                                                                 
; 5706 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5708 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5698| 
        ; branch occurs ; [] |5698| 
$C$L80:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4870,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4870| 
        B         $C$L320,LO            ; [CPU_] |4870| 
        ; branchcc occurs ; [] |4870| 
	.dwpsn	file "../Source/prod.c",line 4875,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4875| 
        MOVL      ACC,XAR4              ; [CPU_] |4875| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4875| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4875| 
        MOVL      XAR0,#66              ; [CPU_] |4875| 
        ADDB      ACC,#2                ; [CPU_] |4875| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4875| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4875| 
        CMPL      ACC,XAR6              ; [CPU_] |4875| 
        B         $C$L320,NEQ           ; [CPU_] |4875| 
        ; branchcc occurs ; [] |4875| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4875| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4875| 
        CMPL      ACC,XAR6              ; [CPU_] |4875| 
        B         $C$L320,NEQ           ; [CPU_] |4875| 
        ; branchcc occurs ; [] |4875| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4875| 
        MOVL      XAR0,#64              ; [CPU_] |4875| 
        MOVL      ACC,XAR5              ; [CPU_] |4875| 
        ADDB      ACC,#4                ; [CPU_] |4875| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4875| 
        MOVB      XAR0,#36              ; [CPU_] |4875| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4875| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4875| 
        B         $C$L320,NEQ           ; [CPU_] |4875| 
        ; branchcc occurs ; [] |4875| 
	.dwpsn	file "../Source/prod.c",line 4881,column 5,is_stmt,isa 0
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4881| 
        ; call occurs [#_lcd_clear] ; [] |4881| 
	.dwpsn	file "../Source/prod.c",line 4882,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4882| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4882| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4882| 
        ; call occurs [#_lcd_puts] ; [] |4882| 
	.dwpsn	file "../Source/prod.c",line 4883,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4883| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4883| 
        MOVL      XAR0,#44              ; [CPU_] |4883| 
        ADD       AL,*-SP[58]           ; [CPU_] |4883| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4883| 
        MOV       *-SP[3],AL            ; [CPU_] |4883| 
        MOVB      AL,#1                 ; [CPU_] |4883| 
        ADD       AL,*-SP[57]           ; [CPU_] |4883| 
        MOV       *-SP[4],AL            ; [CPU_] |4883| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4883| 
        MOVL      XAR4,XAR3             ; [CPU_] |4883| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_sprintf")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4883| 
        ; call occurs [#_sprintf] ; [] |4883| 
	.dwpsn	file "../Source/prod.c",line 4884,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4884| 
        MOVL      XAR4,XAR3             ; [CPU_] |4884| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4884| 
        ; call occurs [#_lcd_puts] ; [] |4884| 
	.dwpsn	file "../Source/prod.c",line 4885,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4885| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4885| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4885| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4885| 
        MOVL      XAR0,#58              ; [CPU_] |4885| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4885| 
        MOVB      XAR1,#36              ; [CPU_] |4885| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4885| 
        ADDL      ACC,XAR6              ; [CPU_] |4885| 
        MOVL      XAR4,ACC              ; [CPU_] |4885| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4885| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4885| 
        MOVL      XAR4,XAR3             ; [CPU_] |4885| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_sprintf")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4885| 
        ; call occurs [#_sprintf] ; [] |4885| 
	.dwpsn	file "../Source/prod.c",line 4886,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4886| 
        MOVL      XAR4,XAR3             ; [CPU_] |4886| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4886| 
        ; call occurs [#_lcd_puts] ; [] |4886| 
	.dwpsn	file "../Source/prod.c",line 4887,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4887| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4887| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4887| 
        ; call occurs [#_lcd_puts] ; [] |4887| 
        MOVL      XAR0,#78              ; [CPU_] |4887| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4887| 
        MOVZ      AR0,*-SP[58]          ; [CPU_] |4887| 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[57]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4889,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4889| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *-SP[60],AL           ; [CPU_] |4889| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4890,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4890| 
        B         $C$L83,LEQ            ; [CPU_] |4890| 
        ; branchcc occurs ; [] |4890| 
	.dwpsn	file "../Source/prod.c",line 4892,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4892| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4892| 
        ; call occurs [#_shunt_switch] ; [] |4892| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4894,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4894| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_delay_us")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4894| 
        ; call occurs [#_delay_us] ; [] |4894| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |4894| 
	.dwpsn	file "../Source/prod.c",line 4893,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4893| 
        MOVZ      AR0,AR6               ; [CPU_] |4893| 
        MOV       *-SP[48],AR6          ; [CPU_] |4893| 
        CMP       AR0,#-1               ; [CPU_] |4893| 
        B         $C$L82,NEQ            ; [CPU_] |4893| 
        ; branchcc occurs ; [] |4893| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4897,column 7,is_stmt,isa 0
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_maf_rst")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4897| 
        ; call occurs [#_maf_rst] ; [] |4897| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4899,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4899| 
        SPM       #0                    ; [CPU_] 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_delay_us")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4899| 
        ; call occurs [#_delay_us] ; [] |4899| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4902,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4902| 
	.dwpsn	file "../Source/prod.c",line 4903,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4903| 
	.dwpsn	file "../Source/prod.c",line 4902,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4902| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4902| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4904| 
	.dwpsn	file "../Source/prod.c",line 4903,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4903| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4904| 
        MOVB      ACC,#0                ; [CPU_] |4904| 
        SUBB      ACC,#1                ; [CPU_] |4904| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4904| 
        B         $C$L86,EQ             ; [CPU_] |4904| 
        ; branchcc occurs ; [] |4904| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4905,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4905| 
        ; branch occurs ; [] |4905| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4906,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4906| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_delay_us")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4906| 
        ; call occurs [#_delay_us] ; [] |4906| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4905,column 14,is_stmt,isa 0
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4905| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4905| 
        CMPB      AL,#0                 ; [CPU_] |4905| 
        B         $C$L84,EQ             ; [CPU_] |4905| 
        ; branchcc occurs ; [] |4905| 
	.dwpsn	file "../Source/prod.c",line 4909,column 7,is_stmt,isa 0
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4909| 
        ; call occurs [#_ad7738_getraw] ; [] |4909| 
	.dwpsn	file "../Source/prod.c",line 4910,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4910| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4910| 
        ADDL      XAR4,ACC              ; [CPU_] |4910| 
        MOVL      XAR0,#34              ; [CPU_] |4910| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4910| 
        MOVL      XAR0,#34              ; [CPU_] |4910| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4910| 
        ASR64     ACC:P,16              ; [CPU_] |4910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4910| 
        MOVL      XAR0,#34              ; [CPU_] |4910| 
        ASR64     ACC:P,16              ; [CPU_] |4910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4910| 
        MOVL      XAR0,#34              ; [CPU_] |4910| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4910| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4910| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4910| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4910| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4910| 
	.dwpsn	file "../Source/prod.c",line 4904,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4904| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4904| 
        MOVB      ACC,#0                ; [CPU_] |4904| 
        SUBB      ACC,#1                ; [CPU_] |4904| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4904| 
        B         $C$L85,NEQ            ; [CPU_] |4904| 
        ; branchcc occurs ; [] |4904| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4912,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4912| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4912| 
        MOV       *-SP[2],#0            ; [CPU_] |4912| 
        MOV       *-SP[1],#0            ; [CPU_] |4912| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4912| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4912| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4912| 
        ; call occurs [#LL$$DIV] ; [] |4912| 
	.dwpsn	file "../Source/prod.c",line 4915,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4915| 
        MOVB      XAR0,#46              ; [CPU_] |4915| 
	.dwpsn	file "../Source/prod.c",line 4912,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4912| 
	.dwpsn	file "../Source/prod.c",line 4914,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4914| 
	.dwpsn	file "../Source/prod.c",line 4912,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4912| 
	.dwpsn	file "../Source/prod.c",line 4915,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4915| 
        CMPB      AL,#2                 ; [CPU_] |4915| 
        B         $C$L89,LEQ            ; [CPU_] |4915| 
        ; branchcc occurs ; [] |4915| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4916,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4916| 
        ; branch occurs ; [] |4916| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4917,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4917| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4916,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4916| 
        B         $C$L89,HIS            ; [CPU_] |4916| 
        ; branchcc occurs ; [] |4916| 
        MOVB      AL,#1                 ; [CPU_] |4916| 
        ADD       AL,AR4                ; [CPU_] |4916| 
        MOVZ      AR5,AL                ; [CPU_] |4916| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4916| 
        ADDL      ACC,XAR1              ; [CPU_] |4916| 
        MOVL      XAR6,ACC              ; [CPU_] |4916| 
        MOVB      XAR0,#72              ; [CPU_] |4916| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4916| 
        MOVL      XAR0,#32              ; [CPU_] |4916| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4916| 
        MOVL      XAR0,#32              ; [CPU_] |4916| 
        ASR64     ACC:P,16              ; [CPU_] |4916| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4916| 
        MOVL      XAR0,#32              ; [CPU_] |4916| 
        ASR64     ACC:P,16              ; [CPU_] |4916| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4916| 
        MOVL      *-SP[4],P             ; [CPU_] |4916| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4916| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4916| 
        MOVL      P,*-SP[32]            ; [CPU_] |4916| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$576, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4916| 
        ; call occurs [#LL$$CMP] ; [] |4916| 
        CMPB      AL,#0                 ; [CPU_] |4916| 
        B         $C$L87,GT             ; [CPU_] |4916| 
        ; branchcc occurs ; [] |4916| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4920,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4920| 
        ADDL      ACC,XAR1              ; [CPU_] |4920| 
        MOVL      XAR4,ACC              ; [CPU_] |4920| 
        MOVL      XAR0,#88              ; [CPU_] |4920| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4920| 
        MOVB      XAR0,#96              ; [CPU_] |4920| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4920| 
        MOVL      XAR0,#38              ; [CPU_] |4920| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4920| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4920| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4920| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4920| 
        ; call occurs [#FS$$MPY] ; [] |4920| 
        MOVL      XAR0,#30              ; [CPU_] |4920| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4920| 
        MOVL      P,*XAR3++             ; [CPU_] |4920| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4920| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4920| 
        ; call occurs [#LL$$TOFS] ; [] |4920| 
        MOVL      XAR0,#30              ; [CPU_] |4920| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4920| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4920| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4920| 
        ; call occurs [#FS$$MPY] ; [] |4920| 
        MOVL      XAR0,#88              ; [CPU_] |4920| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4920| 
        MOVB      XAR1,#118             ; [CPU_] |4920| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4920| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4920| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4920| 
        ; call occurs [#FS$$ADD] ; [] |4920| 
        MOVL      XAR0,#36              ; [CPU_] |4920| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4920| 
        MOVL      XAR0,#36              ; [CPU_] |4920| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4920| 
	.dwpsn	file "../Source/prod.c",line 4889,column 17,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4889| 
	.dwpsn	file "../Source/prod.c",line 4920,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4920| 
        MOV       AL,*-SP[60]           ; [CPU_] |4920| 
	.dwpsn	file "../Source/prod.c",line 4889,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4889| 
        B         $C$L81,LT             ; [CPU_] |4889| 
        ; branchcc occurs ; [] |4889| 
	.dwpsn	file "../Source/prod.c",line 4924,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4924| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4924| 
        ; call occurs [#_shunt_switch] ; [] |4924| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4926,column 5,is_stmt,isa 0
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_maf_rst")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4926| 
        ; call occurs [#_maf_rst] ; [] |4926| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4929,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4929| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4929| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4929| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4929| 
        ; call occurs [#FS$$SUB] ; [] |4929| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4929| 
        MOVL      XAR0,#36              ; [CPU_] |4929| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4929| 
        MOVB      XAR0,#140             ; [CPU_] |4929| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4929| 
        MOV       AL,*-SP[58]           ; [CPU_] |4929| 
	.dwpsn	file "../Source/prod.c",line 4931,column 5,is_stmt,isa 0
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_tagid")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4931| 
        ; call occurs [#_tagid] ; [] |4931| 
        MOVL      XAR4,XAR1             ; [CPU_] |4931| 
        ADDB      XAR4,#32              ; [CPU_] |4931| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4931| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4931| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4934,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4934| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4934| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4934| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4934| 
        MOV       AL,*-SP[57]           ; [CPU_] |4934| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4937,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4937| 
	.dwpsn	file "../Source/prod.c",line 4939,column 5,is_stmt,isa 0
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4939| 
        ; call occurs [#_ad7738_setcal] ; [] |4939| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |4939| 
	.dwpsn	file "../Source/prod.c",line 4940,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4940| 
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4940| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4940| 
        MOV       AL,AR1                ; [CPU_] |4940| 
	.dwpsn	file "../Source/prod.c",line 4941,column 5,is_stmt,isa 0
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4941| 
        ; call occurs [#_ad7738_resetvall] ; [] |4941| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4946,column 5,is_stmt,isa 0
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4946| 
        ; call occurs [#_lcd_clear] ; [] |4946| 
	.dwpsn	file "../Source/prod.c",line 4947,column 5,is_stmt,isa 0
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_update_units")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4947| 
        ; call occurs [#_update_units] ; [] |4947| 
        MOVL      XAR0,#42              ; [CPU_] |4947| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4947| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4949,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4949| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 4950,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4949,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4949| 
	.dwpsn	file "../Source/prod.c",line 4950,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4949,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4949| 
	.dwpsn	file "../Source/prod.c",line 4950,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4950| 
	.dwpsn	file "../Source/prod.c",line 4949,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4949| 
        B         $C$L90,HI             ; [CPU_] |4949| 
        ; branchcc occurs ; [] |4949| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4952| 
	.dwpsn	file "../Source/prod.c",line 4954,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4954| 
        ; branch occurs ; [] |4954| 
$C$L91:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4724,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4724| 
        B         $C$L320,LO            ; [CPU_] |4724| 
        ; branchcc occurs ; [] |4724| 
	.dwpsn	file "../Source/prod.c",line 4729,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4729| 
        MOVL      XAR0,#66              ; [CPU_] |4729| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4729| 
        ADDB      ACC,#2                ; [CPU_] |4729| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4729| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4729| 
        CMPL      ACC,XAR6              ; [CPU_] |4729| 
        B         $C$L320,NEQ           ; [CPU_] |4729| 
        ; branchcc occurs ; [] |4729| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4729| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4729| 
        CMPL      ACC,XAR6              ; [CPU_] |4729| 
        B         $C$L320,NEQ           ; [CPU_] |4729| 
        ; branchcc occurs ; [] |4729| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4729| 
        MOVL      XAR0,#64              ; [CPU_] |4729| 
        MOVL      ACC,XAR5              ; [CPU_] |4729| 
        ADDB      ACC,#4                ; [CPU_] |4729| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4729| 
        MOVB      XAR0,#36              ; [CPU_] |4729| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4729| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4729| 
        B         $C$L320,NEQ           ; [CPU_] |4729| 
        ; branchcc occurs ; [] |4729| 
	.dwpsn	file "../Source/prod.c",line 4735,column 5,is_stmt,isa 0
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4735| 
        ; call occurs [#_lcd_clear] ; [] |4735| 
	.dwpsn	file "../Source/prod.c",line 4736,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4736| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4736| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4736| 
        ; call occurs [#_lcd_puts] ; [] |4736| 
	.dwpsn	file "../Source/prod.c",line 4737,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4737| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4737| 
        MOVL      XAR0,#44              ; [CPU_] |4737| 
        ADD       AL,*-SP[58]           ; [CPU_] |4737| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4737| 
        MOV       *-SP[3],AL            ; [CPU_] |4737| 
        MOVB      AL,#1                 ; [CPU_] |4737| 
        ADD       AL,*-SP[57]           ; [CPU_] |4737| 
        MOV       *-SP[4],AL            ; [CPU_] |4737| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4737| 
        MOVL      XAR4,XAR1             ; [CPU_] |4737| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("_sprintf")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4737| 
        ; call occurs [#_sprintf] ; [] |4737| 
	.dwpsn	file "../Source/prod.c",line 4738,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4738| 
	.dwpsn	file "../Source/prod.c",line 4737,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4737| 
	.dwpsn	file "../Source/prod.c",line 4738,column 5,is_stmt,isa 0
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4738| 
        ; call occurs [#_lcd_puts] ; [] |4738| 
	.dwpsn	file "../Source/prod.c",line 4739,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4739| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4739| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4739| 
        MOVL      XAR0,#58              ; [CPU_] |4739| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4739| 
        MOVB      XAR1,#36              ; [CPU_] |4739| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4739| 
        ADDL      ACC,XAR6              ; [CPU_] |4739| 
        MOVL      XAR4,ACC              ; [CPU_] |4739| 
        MOVL      XAR0,#44              ; [CPU_] |4739| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4739| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4739| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("_sprintf")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4739| 
        ; call occurs [#_sprintf] ; [] |4739| 
        MOVL      XAR0,#44              ; [CPU_] |4739| 
	.dwpsn	file "../Source/prod.c",line 4740,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4740| 
	.dwpsn	file "../Source/prod.c",line 4739,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4739| 
	.dwpsn	file "../Source/prod.c",line 4740,column 5,is_stmt,isa 0
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4740| 
        ; call occurs [#_lcd_puts] ; [] |4740| 
	.dwpsn	file "../Source/prod.c",line 4742,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4742| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4742| 
        MOVB      XAR1,#36              ; [CPU_] |4742| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4742| 
        CMPB      AL,#1                 ; [CPU_] |4742| 
        B         $C$L92,EQ             ; [CPU_] |4742| 
        ; branchcc occurs ; [] |4742| 
        CMPB      AL,#2                 ; [CPU_] |4742| 
        B         $C$L105,EQ            ; [CPU_] |4742| 
        ; branchcc occurs ; [] |4742| 
        CMPB      AL,#3                 ; [CPU_] |4742| 
        B         $C$L96,EQ             ; [CPU_] |4742| 
        ; branchcc occurs ; [] |4742| 
        B         $C$L112,UNC           ; [CPU_] |4742| 
        ; branch occurs ; [] |4742| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4746,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4746| 
        MOVB      AL,#60                ; [CPU_] |4746| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4746| 
        ; call occurs [#_lcd_puts] ; [] |4746| 
	.dwpsn	file "../Source/prod.c",line 4748,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4748| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4749,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4749| 
	.dwpsn	file "../Source/prod.c",line 4748,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4748| 
	.dwpsn	file "../Source/prod.c",line 4750,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4750| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4749,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4749| 
        MOV       T,*-SP[58]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4748,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4748| 
	.dwpsn	file "../Source/prod.c",line 4750,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4750| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4750| 
	.dwpsn	file "../Source/prod.c",line 4748,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4748| 
	.dwpsn	file "../Source/prod.c",line 4750,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4750| 
        SUBB      ACC,#1                ; [CPU_] |4750| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4750| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4750| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4751,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4751| 
        ; branch occurs ; [] |4751| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4752,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4752| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_delay_us")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4752| 
        ; call occurs [#_delay_us] ; [] |4752| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4751,column 14,is_stmt,isa 0
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4751| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4751| 
        CMPB      AL,#0                 ; [CPU_] |4751| 
        B         $C$L93,EQ             ; [CPU_] |4751| 
        ; branchcc occurs ; [] |4751| 
	.dwpsn	file "../Source/prod.c",line 4755,column 7,is_stmt,isa 0
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4755| 
        ; call occurs [#_ad7738_getraw] ; [] |4755| 
	.dwpsn	file "../Source/prod.c",line 4756,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4756| 
        ADDL      XAR4,ACC              ; [CPU_] |4756| 
        MOVL      XAR0,#28              ; [CPU_] |4756| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4756| 
        MOVL      XAR0,#28              ; [CPU_] |4756| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4756| 
        ASR64     ACC:P,16              ; [CPU_] |4756| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4756| 
        MOVL      XAR0,#28              ; [CPU_] |4756| 
        ASR64     ACC:P,16              ; [CPU_] |4756| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4756| 
        MOVL      XAR0,#28              ; [CPU_] |4756| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4756| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4756| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4756| 
        MOVL      *-SP[32],P            ; [CPU_] |4756| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4750,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4750| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4750| 
        MOVB      ACC,#0                ; [CPU_] |4750| 
        SUBB      ACC,#1                ; [CPU_] |4750| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4750| 
        B         $C$L94,NEQ            ; [CPU_] |4750| 
        ; branchcc occurs ; [] |4750| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4758| 
	.dwpsn	file "../Source/prod.c",line 4762,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4762| 
        ; branch occurs ; [] |4762| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4811,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4811| 
        MOVB      AL,#60                ; [CPU_] |4811| 
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4811| 
        ; call occurs [#_lcd_puts] ; [] |4811| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4813,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4813| 
        MOV       *-SP[60],AL           ; [CPU_] |4813| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4814,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4814| 
        B         $C$L99,LEQ            ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
	.dwpsn	file "../Source/prod.c",line 4816,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4816| 
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4816| 
        ; call occurs [#_shunt_switch] ; [] |4816| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4818,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4818| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_delay_us")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4818| 
        ; call occurs [#_delay_us] ; [] |4818| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4818| 
	.dwpsn	file "../Source/prod.c",line 4817,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4817| 
        MOVZ      AR0,AR6               ; [CPU_] |4817| 
        MOV       *-SP[47],AR6          ; [CPU_] |4817| 
        CMP       AR0,#-1               ; [CPU_] |4817| 
        B         $C$L98,NEQ            ; [CPU_] |4817| 
        ; branchcc occurs ; [] |4817| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4821,column 8,is_stmt,isa 0
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_maf_rst")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4821| 
        ; call occurs [#_maf_rst] ; [] |4821| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4823,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4823| 
        SPM       #0                    ; [CPU_] 
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_delay_us")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4823| 
        ; call occurs [#_delay_us] ; [] |4823| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4826,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4826| 
	.dwpsn	file "../Source/prod.c",line 4827,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4827| 
	.dwpsn	file "../Source/prod.c",line 4826,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4826| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4826| 
	.dwpsn	file "../Source/prod.c",line 4828,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4828| 
	.dwpsn	file "../Source/prod.c",line 4827,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4827| 
	.dwpsn	file "../Source/prod.c",line 4828,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4828| 
        MOVB      ACC,#0                ; [CPU_] |4828| 
        SUBB      ACC,#1                ; [CPU_] |4828| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4828| 
        B         $C$L101,EQ            ; [CPU_] |4828| 
        ; branchcc occurs ; [] |4828| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4829,column 15,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4829| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4829| 
        CMPB      AL,#0                 ; [CPU_] |4829| 
        B         $C$L104,EQ            ; [CPU_] |4829| 
        ; branchcc occurs ; [] |4829| 
	.dwpsn	file "../Source/prod.c",line 4833,column 8,is_stmt,isa 0
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4833| 
        ; call occurs [#_ad7738_getraw] ; [] |4833| 
	.dwpsn	file "../Source/prod.c",line 4834,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4834| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4834| 
        ADDL      XAR4,ACC              ; [CPU_] |4834| 
        MOVL      XAR0,#26              ; [CPU_] |4834| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4834| 
        MOVL      XAR0,#26              ; [CPU_] |4834| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4834| 
        ASR64     ACC:P,16              ; [CPU_] |4834| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4834| 
        MOVL      XAR0,#26              ; [CPU_] |4834| 
        ASR64     ACC:P,16              ; [CPU_] |4834| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4834| 
        MOVL      XAR0,#26              ; [CPU_] |4834| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4834| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4834| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4834| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4834| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4834| 
	.dwpsn	file "../Source/prod.c",line 4828,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4828| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4828| 
        MOVB      ACC,#0                ; [CPU_] |4828| 
        SUBB      ACC,#1                ; [CPU_] |4828| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4828| 
        B         $C$L100,NEQ           ; [CPU_] |4828| 
        ; branchcc occurs ; [] |4828| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4813,column 18,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4813| 
        ADDB      XAR1,#4               ; [CPU_] |4813| 
        MOV       AL,*-SP[60]           ; [CPU_] |4813| 
        CMPB      AL,#2                 ; [CPU_] |4813| 
        B         $C$L97,LT             ; [CPU_] |4813| 
        ; branchcc occurs ; [] |4813| 
	.dwpsn	file "../Source/prod.c",line 4838,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4838| 
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4838| 
        ; call occurs [#_shunt_switch] ; [] |4838| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4840,column 6,is_stmt,isa 0
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_maf_rst")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4840| 
        ; call occurs [#_maf_rst] ; [] |4840| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4843,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4843| 
        MOV       AH,#17948             ; [CPU_] |4843| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4843| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4843| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4843| 
        ; call occurs [#FS$$MPY] ; [] |4843| 
        MOVL      XAR1,ACC              ; [CPU_] |4843| 
        MOVL      P,*-SP[28]            ; [CPU_] |4843| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4843| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4843| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4843| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4843| 
        ; call occurs [#LL$$TOFS] ; [] |4843| 
        MOVL      XAR0,#88              ; [CPU_] |4843| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4843| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4843| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4843| 
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4843| 
        ; call occurs [#FS$$MPY] ; [] |4843| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4843| 
        MOVL      ACC,XAR1              ; [CPU_] |4843| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4843| 
        ; call occurs [#FS$$DIV] ; [] |4843| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4843| 
        MOVB      XAR0,#96              ; [CPU_] |4843| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4843| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4845,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4845| 
        MOVL      XAR0,#52              ; [CPU_] |4845| 
        ADDB      ACC,#96               ; [CPU_] |4845| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4845| 
        MOVL      XAR0,#88              ; [CPU_] |4845| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4845| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4845| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4845| 
        ; call occurs [#FS$$NEG] ; [] |4845| 
        MOVB      XAR0,#96              ; [CPU_] |4845| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4845| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4845| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4845| 
        ; call occurs [#FS$$MPY] ; [] |4845| 
        MOVL      XAR1,ACC              ; [CPU_] |4845| 
        MOVL      P,*-SP[32]            ; [CPU_] |4845| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4845| 
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4845| 
        ; call occurs [#LL$$TOFS] ; [] |4845| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4845| 
        MOVL      ACC,XAR1              ; [CPU_] |4845| 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4845| 
        ; call occurs [#FS$$MPY] ; [] |4845| 
        MOVL      XAR6,ACC              ; [CPU_] |4845| 
        MOV       AL,#16384             ; [CPU_] |4845| 
        MOV       AH,#17948             ; [CPU_] |4845| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4845| 
        MOVL      ACC,XAR6              ; [CPU_] |4845| 
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4845| 
        ; call occurs [#FS$$DIV] ; [] |4845| 
        MOVL      XAR0,#36              ; [CPU_] |4845| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4845| 
        MOVB      XAR1,#118             ; [CPU_] |4845| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4845| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4848,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4848| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4849| 
        ; branch occurs ; [] |4849| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4830,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4830| 
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_delay_us")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4830| 
        ; call occurs [#_delay_us] ; [] |4830| 
	.dwpsn	file "../Source/prod.c",line 4829,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4829| 
        ; branch occurs ; [] |4829| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4766| 
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4767| 
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4766| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4767| 
        MOVZ      AR5,AR5               ; [CPU_] |4767| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4769,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4769| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4769| 
        MOV       *XAR5++,AL            ; [CPU_] |4769| 
	.dwpsn	file "../Source/prod.c",line 4770,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4770| 
	.dwpsn	file "../Source/prod.c",line 4768,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4768| 
        ; branchcc occurs ; [] |4768| 
	.dwpsn	file "../Source/prod.c",line 4773,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4773| 
        MOVB      XAR0,#46              ; [CPU_] |4773| 
        MOV       AL,*-SP[47]           ; [CPU_] |4773| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4773| 
        B         $C$L112,HIS           ; [CPU_] |4773| 
        ; branchcc occurs ; [] |4773| 
        MOVL      XAR0,#36              ; [CPU_] |4773| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4773| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4773| 
        ADDL      ACC,XAR6              ; [CPU_] |4773| 
        ADDB      ACC,#48               ; [CPU_] |4773| 
        MOVL      XAR1,ACC              ; [CPU_] |4773| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4773| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4773| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4773| 
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4773| 
        ; call occurs [#FS$$CMP] ; [] |4773| 
        CMPB      AL,#0                 ; [CPU_] |4773| 
        B         $C$L112,NEQ           ; [CPU_] |4773| 
        ; branchcc occurs ; [] |4773| 
	.dwpsn	file "../Source/prod.c",line 4777,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4777| 
        MOVB      AL,#1                 ; [CPU_] |4777| 
        MOVL      XAR0,#44              ; [CPU_] |4777| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4777| 
        ADD       AL,*-SP[47]           ; [CPU_] |4777| 
        MOV       *-SP[3],AL            ; [CPU_] |4777| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4777| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_sprintf")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4777| 
        ; call occurs [#_sprintf] ; [] |4777| 
        MOVL      XAR0,#44              ; [CPU_] |4777| 
	.dwpsn	file "../Source/prod.c",line 4778,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4778| 
	.dwpsn	file "../Source/prod.c",line 4777,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4777| 
	.dwpsn	file "../Source/prod.c",line 4778,column 6,is_stmt,isa 0
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4778| 
        ; call occurs [#_lcd_puts] ; [] |4778| 
	.dwpsn	file "../Source/prod.c",line 4780,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4780| 
	.dwpsn	file "../Source/prod.c",line 4781,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4781| 
	.dwpsn	file "../Source/prod.c",line 4780,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4780| 
	.dwpsn	file "../Source/prod.c",line 4781,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4781| 
	.dwpsn	file "../Source/prod.c",line 4780,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4780| 
	.dwpsn	file "../Source/prod.c",line 4782,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4782| 
	.dwpsn	file "../Source/prod.c",line 4780,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4780| 
	.dwpsn	file "../Source/prod.c",line 4782,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4782| 
        MOVB      ACC,#0                ; [CPU_] |4782| 
        SUBB      ACC,#1                ; [CPU_] |4782| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4782| 
        B         $C$L108,EQ            ; [CPU_] |4782| 
        ; branchcc occurs ; [] |4782| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4783,column 14,is_stmt,isa 0
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4783| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4783| 
        CMPB      AL,#0                 ; [CPU_] |4783| 
        B         $C$L111,EQ            ; [CPU_] |4783| 
        ; branchcc occurs ; [] |4783| 
	.dwpsn	file "../Source/prod.c",line 4787,column 7,is_stmt,isa 0
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4787| 
        ; call occurs [#_ad7738_getraw] ; [] |4787| 
	.dwpsn	file "../Source/prod.c",line 4788,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4788| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4788| 
        ADDL      XAR4,ACC              ; [CPU_] |4788| 
        MOVL      XAR0,#24              ; [CPU_] |4788| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4788| 
        MOVL      XAR0,#24              ; [CPU_] |4788| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4788| 
        ASR64     ACC:P,16              ; [CPU_] |4788| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4788| 
        MOVL      XAR0,#24              ; [CPU_] |4788| 
        ASR64     ACC:P,16              ; [CPU_] |4788| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4788| 
        MOVL      XAR0,#24              ; [CPU_] |4788| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4788| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4788| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4788| 
        MOVL      *-SP[32],P            ; [CPU_] |4788| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4788| 
	.dwpsn	file "../Source/prod.c",line 4782,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4782| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4782| 
        MOVB      ACC,#0                ; [CPU_] |4782| 
        SUBB      ACC,#1                ; [CPU_] |4782| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4782| 
        B         $C$L107,NEQ           ; [CPU_] |4782| 
        ; branchcc occurs ; [] |4782| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4790| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4790| 
        MOV       *-SP[2],#0            ; [CPU_] |4790| 
        MOV       *-SP[1],#0            ; [CPU_] |4790| 
        MOVL      P,*-SP[32]            ; [CPU_] |4790| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4790| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4790| 
        ; call occurs [#LL$$DIV] ; [] |4790| 
        ADDB      XAR1,#24              ; [CPU_] |4790| 
	.dwpsn	file "../Source/prod.c",line 4792,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4792| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4792| 
	.dwpsn	file "../Source/prod.c",line 4790,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4790| 
	.dwpsn	file "../Source/prod.c",line 4792,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4792| 
        MOV       AL,*-SP[47]           ; [CPU_] |4792| 
        SUB       AL,AR6                ; [CPU_] |4792| 
        MOVZ      AR7,AL                ; [CPU_] |4792| 
        MOVL      XAR4,#65535           ; [CPU_U] |4792| 
        MOVL      ACC,XAR4              ; [CPU_] |4792| 
        CMPL      ACC,XAR7              ; [CPU_] |4792| 
        B         $C$L103,NEQ           ; [CPU_] |4792| 
        ; branchcc occurs ; [] |4792| 
	.dwpsn	file "../Source/prod.c",line 4795,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4795| 
        B         $C$L110,UNC           ; [CPU_] |4795| 
        ; branch occurs ; [] |4795| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4796,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4796| 
        MOVB      AL,#10                ; [CPU_] |4796| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4796| 
        MOV       T,*-SP[58]            ; [CPU_] |4796| 
        MPYU      ACC,T,AL              ; [CPU_] |4796| 
        MOVL      XAR0,#88              ; [CPU_] |4796| 
        ADDL      ACC,XAR6              ; [CPU_] |4796| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4796| 
        MOVL      XAR0,#36              ; [CPU_] |4796| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4796| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[47]           ; [CPU_] |4796| 
        MOV       ACC,AL << 1           ; [CPU_] |4796| 
        ADDL      ACC,XAR6              ; [CPU_] |4796| 
        MOVL      XAR3,ACC              ; [CPU_] |4796| 
        MOVB      XAR0,#48              ; [CPU_] |4796| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4796| 
        MOVB      XAR0,#50              ; [CPU_] |4796| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4796| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4796| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4796| 
        ; call occurs [#FS$$SUB] ; [] |4796| 
        MOVL      XAR0,#42              ; [CPU_] |4796| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4796| 
        MOVB      XAR0,#74              ; [CPU_] |4796| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4796| 
        MOVB      XAR0,#72              ; [CPU_] |4796| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4796| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4796| 
        ; call occurs [#L$$TOFS] ; [] |4796| 
        MOVL      XAR0,#42              ; [CPU_] |4796| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4796| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4796| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4796| 
        ; call occurs [#FS$$DIV] ; [] |4796| 
        MOVL      XAR0,#88              ; [CPU_] |4796| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4796| 
        MOVB      XAR1,#44              ; [CPU_] |4796| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4796| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4796| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4796| 
        ; call occurs [#FS$$DIV] ; [] |4796| 
        MOVB      XAR0,#96              ; [CPU_] |4796| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4796| 
	.dwpsn	file "../Source/prod.c",line 4800,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4800| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4800| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4800| 
        MOVB      XAR1,#44              ; [CPU_] |4800| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4800| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4800| 
        ; call occurs [#FS$$MPY] ; [] |4800| 
        MOVL      XAR0,#88              ; [CPU_] |4800| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4800| 
        MOVB      XAR0,#72              ; [CPU_] |4800| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4800| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4800| 
        ; call occurs [#L$$TOFS] ; [] |4800| 
        MOVL      XAR0,#88              ; [CPU_] |4800| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4800| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4800| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4800| 
        ; call occurs [#FS$$MPY] ; [] |4800| 
        MOVB      XAR0,#48              ; [CPU_] |4800| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4800| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4800| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4800| 
        ; call occurs [#FS$$SUB] ; [] |4800| 
        MOVB      XAR0,#118             ; [CPU_] |4800| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4800| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4795,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4795| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4795,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4795| 
        ADDB      AL,#-1                ; [CPU_] |4795| 
        CMP       AL,*-SP[47]           ; [CPU_] |4795| 
        B         $C$L109,GT            ; [CPU_] |4795| 
        ; branchcc occurs ; [] |4795| 
	.dwpsn	file "../Source/prod.c",line 4807,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4807| 
        ; branch occurs ; [] |4807| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4784,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4784| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("_delay_us")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4784| 
        ; call occurs [#_delay_us] ; [] |4784| 
	.dwpsn	file "../Source/prod.c",line 4783,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4783| 
        ; branch occurs ; [] |4783| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4774,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4774| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4856,column 5,is_stmt,isa 0
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4856| 
        ; call occurs [#_lcd_clear] ; [] |4856| 
	.dwpsn	file "../Source/prod.c",line 4857,column 5,is_stmt,isa 0
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("_update_units")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4857| 
        ; call occurs [#_update_units] ; [] |4857| 
        MOV       AL,*-SP[47]           ; [CPU_] |4857| 
	.dwpsn	file "../Source/prod.c",line 4860,column 6,is_stmt,isa 0
        B         $C$L317,NEQ           ; [CPU_] |4860| 
        ; branchcc occurs ; [] |4860| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4862,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4862| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4863,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4863| 
	.dwpsn	file "../Source/prod.c",line 4862,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4862| 
	.dwpsn	file "../Source/prod.c",line 4863,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4863| 
	.dwpsn	file "../Source/prod.c",line 4862,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4862| 
	.dwpsn	file "../Source/prod.c",line 4863,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4863| 
	.dwpsn	file "../Source/prod.c",line 4862,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4862| 
        B         $C$L114,HI            ; [CPU_] |4862| 
        ; branchcc occurs ; [] |4862| 
	.dwpsn	file "../Source/prod.c",line 4865,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4865| 
	.dwpsn	file "../Source/prod.c",line 4866,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4866| 
        ; branch occurs ; [] |4866| 
$C$L115:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4576,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4576| 
        B         $C$L320,LO            ; [CPU_] |4576| 
        ; branchcc occurs ; [] |4576| 
	.dwpsn	file "../Source/prod.c",line 4581,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4581| 
        MOV       *-SP[58],AL           ; [CPU_] |4581| 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4583| 
	.dwpsn	file "../Source/prod.c",line 4582,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4582| 
        MOV       *-SP[57],AL           ; [CPU_] |4582| 
	.dwpsn	file "../Source/prod.c",line 4583,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4583| 
        MOV       AL,*-SP[58]           ; [CPU_] |4583| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4583| 
        CMPB      AL,#4                 ; [CPU_] |4583| 
        B         $C$L320,HIS           ; [CPU_] |4583| 
        ; branchcc occurs ; [] |4583| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4583| 
        B         $C$L320,HIS           ; [CPU_] |4583| 
        ; branchcc occurs ; [] |4583| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4589,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4589| 
        MOVL      ACC,XAR4              ; [CPU_] |4589| 
        ADDB      ACC,#4                ; [CPU_] |4589| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4589| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4589| 
        CMPB      AL,#16                ; [CPU_] |4589| 
        B         $C$L320,HIS           ; [CPU_] |4589| 
        ; branchcc occurs ; [] |4589| 
	.dwpsn	file "../Source/prod.c",line 4593,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4593| 
        MOVL      XAR0,#64              ; [CPU_] |4593| 
        CMPB      AL,#0                 ; [CPU_] |4593| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4593| 
        B         $C$L116,LEQ           ; [CPU_] |4593| 
        ; branchcc occurs ; [] |4593| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4593| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4593| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4593| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4593| 
        MOVL      XAR0,ACC              ; [CPU_] |4593| 
	.dwpsn	file "../Source/prod.c",line 4594,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4594| 
        ADD       AL,AR4                ; [CPU_] |4594| 
        MOVZ      AR6,AL                ; [CPU_] |4594| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4594| 
	.dwpsn	file "../Source/prod.c",line 4593,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4593| 
        ; branch occurs ; [] |4593| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4588,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4588| 
	.dwpsn	file "../Source/prod.c",line 4593,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4593| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4596| 
        MOVL      XAR0,#86              ; [CPU_] |4596| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4598,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4598| 
        MOVL      XAR4,ACC              ; [CPU_] |4598| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4598| 
        CMPB      AL,#16                ; [CPU_] |4598| 
        B         $C$L320,HIS           ; [CPU_] |4598| 
        ; branchcc occurs ; [] |4598| 
        ADDB      XAR4,#1               ; [CPU_] |4598| 
	.dwpsn	file "../Source/prod.c",line 4603,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4603| 
	.dwpsn	file "../Source/prod.c",line 4598,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4598| 
        MOVL      P,XAR4                ; [CPU_] |4598| 
	.dwpsn	file "../Source/prod.c",line 4603,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        MOVZ      AR5,AL                ; [CPU_] |4603| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4604,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4604| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4604| 
        MOV       *XAR4++,AL            ; [CPU_] |4604| 
        ADDB      XAR7,#1               ; [CPU_] |4604| 
        MOVL      P,XAR7                ; [CPU_] |4604| 
	.dwpsn	file "../Source/prod.c",line 4603,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4603| 
        ; branchcc occurs ; [] |4603| 
        B         $C$L120,UNC           ; [CPU_] |4603| 
        ; branch occurs ; [] |4603| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4603,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4603| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4606,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4606| 
        ADD       ACC,AR5               ; [CPU_] |4606| 
        MOVL      XAR4,ACC              ; [CPU_] |4606| 
        MOVB      XAR0,#16              ; [CPU_] |4606| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4606| 
	.dwpsn	file "../Source/prod.c",line 4608,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4608| 
        MOV       AL,*XAR7              ; [CPU_] |4608| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4608| 
        ADDB      XAR7,#1               ; [CPU_] |4608| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4608| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4608| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4612,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4612| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4612| 
	.dwpsn	file "../Source/prod.c",line 4613,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4613| 
	.dwpsn	file "../Source/prod.c",line 4612,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4612| 
        MOV       *XAR5++,AL            ; [CPU_] |4612| 
	.dwpsn	file "../Source/prod.c",line 4613,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4613| 
        MOVL      P,XAR7                ; [CPU_] |4613| 
	.dwpsn	file "../Source/prod.c",line 4611,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4611| 
        ; branchcc occurs ; [] |4611| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4619,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4619| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4619| 
	.dwpsn	file "../Source/prod.c",line 4620,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4620| 
	.dwpsn	file "../Source/prod.c",line 4619,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4619| 
        MOV       *XAR0++,AL            ; [CPU_] |4619| 
	.dwpsn	file "../Source/prod.c",line 4620,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4620| 
        MOVL      P,XAR5                ; [CPU_] |4620| 
	.dwpsn	file "../Source/prod.c",line 4618,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4618| 
        ; branchcc occurs ; [] |4618| 
	.dwpsn	file "../Source/prod.c",line 4623,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4623| 
        MOVB      XAR0,#40              ; [CPU_] |4623| 
	.dwpsn	file "../Source/prod.c",line 4625,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4625| 
	.dwpsn	file "../Source/prod.c",line 4623,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4623| 
        MOVB      XAR0,#142             ; [CPU_] |4623| 
	.dwpsn	file "../Source/prod.c",line 4625,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4625| 
	.dwpsn	file "../Source/prod.c",line 4623,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4623| 
	.dwpsn	file "../Source/prod.c",line 4625,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4625| 
        MOV       AL,*XAR7              ; [CPU_] |4625| 
        ADDB      XAR7,#1               ; [CPU_] |4625| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4625| 
	.dwpsn	file "../Source/prod.c",line 4626,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4626| 
	.dwpsn	file "../Source/prod.c",line 4625,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4625| 
	.dwpsn	file "../Source/prod.c",line 4626,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4626| 
        CMPB      AL,#6                 ; [CPU_] |4626| 
        B         $C$L123,GT            ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        CMPB      AL,#6                 ; [CPU_] |4626| 
        B         $C$L126,EQ            ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        CMPB      AL,#1                 ; [CPU_] |4626| 
        B         $C$L129,LOS           ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        MOV       AH,AL                 ; [CPU_] |4626| 
        ADDB      AH,#-2                ; [CPU_] |4626| 
        CMPB      AH,#2                 ; [CPU_] |4626| 
        B         $C$L128,LOS           ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        CMPB      AL,#5                 ; [CPU_] |4626| 
        B         $C$L127,EQ            ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        B         $C$L124,UNC           ; [CPU_] |4626| 
        ; branch occurs ; [] |4626| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4626| 
        ADDB      AH,#-7                ; [CPU_] |4626| 
        CMPB      AH,#1                 ; [CPU_] |4626| 
        B         $C$L125,LOS           ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
        CMPB      AL,#15                ; [CPU_] |4626| 
        B         $C$L125,EQ            ; [CPU_] |4626| 
        ; branchcc occurs ; [] |4626| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4648| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4649,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4649| 
        ; branch occurs ; [] |4649| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4645,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4645| 
	.dwpsn	file "../Source/prod.c",line 4646,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4646| 
        ; branch occurs ; [] |4646| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4640,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4640| 
	.dwpsn	file "../Source/prod.c",line 4641,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4641| 
        ; branch occurs ; [] |4641| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4637,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4637| 
	.dwpsn	file "../Source/prod.c",line 4638,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4638| 
        ; branch occurs ; [] |4638| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4634,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4634| 
	.dwpsn	file "../Source/prod.c",line 4635,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4635| 
        ; branch occurs ; [] |4635| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4629,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4629| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4651,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4651| 
        MOVB      XAR0,#43              ; [CPU_] |4651| 
        ADDB      XAR7,#42              ; [CPU_] |4651| 
        MOV       AL,*XAR7              ; [CPU_] |4651| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4651| 
	.dwpsn	file "../Source/prod.c",line 4652,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4652| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4652| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4652| 
	.dwpsn	file "../Source/prod.c",line 4654,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4654| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4654| 
        CMPB      AL,#1                 ; [CPU_] |4654| 
        B         $C$L137,EQ            ; [CPU_] |4654| 
        ; branchcc occurs ; [] |4654| 
        CMPB      AL,#2                 ; [CPU_] |4654| 
        B         $C$L131,EQ            ; [CPU_] |4654| 
        ; branchcc occurs ; [] |4654| 
        CMPB      AL,#3                 ; [CPU_] |4654| 
        B         $C$L135,EQ            ; [CPU_] |4654| 
        ; branchcc occurs ; [] |4654| 
        B         $C$L134,UNC           ; [CPU_] |4654| 
        ; branch occurs ; [] |4654| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4671,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4671| 
        MOVB      XAR0,#46              ; [CPU_] |4671| 
        MOV       AL,*XAR7              ; [CPU_] |4671| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4671| 
	.dwpsn	file "../Source/prod.c",line 4672,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4672| 
	.dwpsn	file "../Source/prod.c",line 4671,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4671| 
	.dwpsn	file "../Source/prod.c",line 4672,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4672| 
        CMPB      AL,#12                ; [CPU_] |4672| 
        B         $C$L134,GT            ; [CPU_] |4672| 
        ; branchcc occurs ; [] |4672| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4671,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4671| 
	.dwpsn	file "../Source/prod.c",line 4677,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4677| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4671,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4671| 
        MOVL      P,XAR6                ; [CPU_] |4671| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4685,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4685| 
        B         $C$L140,LEQ           ; [CPU_] |4685| 
        ; branchcc occurs ; [] |4685| 
	.dwpsn	file "../Source/prod.c",line 4678,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4678| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4678| 
        ADDB      ACC,#48               ; [CPU_] |4678| 
        MOVL      XAR0,ACC              ; [CPU_] |4678| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4680,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4680| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4680,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4680| 
        MOV       *XAR0++,AL            ; [CPU_] |4680| 
	.dwpsn	file "../Source/prod.c",line 4681,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4681| 
        MOVL      P,XAR5                ; [CPU_] |4681| 
	.dwpsn	file "../Source/prod.c",line 4679,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4679| 
        ; branchcc occurs ; [] |4679| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4677,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4677| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4677| 
        ; branch occurs ; [] |4677| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4703,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4703| 
	.dwpsn	file "../Source/prod.c",line 4704,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4704| 
        ; branch occurs ; [] |4704| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4689,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4689| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4689| 
        MOVZ      AR0,AR5               ; [CPU_] |4689| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4691,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4691| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4692,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4691,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4691| 
        MOV       *XAR0++,AL            ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4692,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4692| 
        MOVL      P,XAR5                ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4690,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4690| 
        ; branchcc occurs ; [] |4690| 
	.dwpsn	file "../Source/prod.c",line 4695,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4695| 
        MOV       AH,#0                 ; [CPU_] |4695| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4695| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4695| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4695| 
        ; call occurs [#FS$$CMP] ; [] |4695| 
        CMPB      AL,#0                 ; [CPU_] |4695| 
        B         $C$L139,NEQ           ; [CPU_] |4695| 
        ; branchcc occurs ; [] |4695| 
	.dwpsn	file "../Source/prod.c",line 4696,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4696| 
        MOV       AH,#16314             ; [CPU_] |4696| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4696| 
        B         $C$L139,UNC           ; [CPU_] |4696| 
        ; branch occurs ; [] |4696| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4659,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4659| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4659| 
	.dwpsn	file "../Source/prod.c",line 4660,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4659,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4659| 
        MOV       *XAR0++,AL            ; [CPU_] |4659| 
	.dwpsn	file "../Source/prod.c",line 4660,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4660| 
        MOVL      P,XAR5                ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4658,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4658| 
        ; branchcc occurs ; [] |4658| 
	.dwpsn	file "../Source/prod.c",line 4663,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4663| 
        MOVL      XAR0,#88              ; [CPU_] |4663| 
        MOVL      ACC,XAR1              ; [CPU_] |4663| 
        ADDB      ACC,#96               ; [CPU_] |4663| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4663| 
        MOVL      XAR0,#52              ; [CPU_] |4663| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4663| 
        MOV       AL,#0                 ; [CPU_] |4663| 
        MOV       AH,#0                 ; [CPU_] |4663| 
        MOVB      XAR0,#96              ; [CPU_] |4663| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4663| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4663| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4663| 
        ; call occurs [#FS$$CMP] ; [] |4663| 
        CMPB      AL,#0                 ; [CPU_] |4663| 
        B         $C$L139,NEQ           ; [CPU_] |4663| 
        ; branchcc occurs ; [] |4663| 
	.dwpsn	file "../Source/prod.c",line 4664,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4664| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4664| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4664| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4666,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4666| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4707,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4707| 
        MOVB      XAR0,#36              ; [CPU_] |4707| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4707| 
        B         $C$L320,EQ            ; [CPU_] |4707| 
        ; branchcc occurs ; [] |4707| 
	.dwpsn	file "../Source/prod.c",line 4711,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4711| 
        MOV       AL,#0                 ; [CPU_] |4711| 
        MOV       AH,#0                 ; [CPU_] |4711| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4711,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4711| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4712| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4713| 
        MOV       AL,#0                 ; [CPU_] |4713| 
        MOV       AH,#0                 ; [CPU_] |4713| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4713| 
	.dwpsn	file "../Source/prod.c",line 4714,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4714| 
        MOV       AL,*-SP[58]           ; [CPU_] |4714| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4714| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] |4714| 
	.dwpsn	file "../Source/prod.c",line 4716,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4716| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4716| 
        ; branch occurs ; [] |4716| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4717,column 6,is_stmt,isa 0
        MOV       PL,*-SP[61]           ; [CPU_] |4717| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |4717| 
        ADD       ACC,PL                ; [CPU_] |4717| 
        MOVL      XAR7,ACC              ; [CPU_] |4717| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4717| 
        ADD       ACC,PL                ; [CPU_] |4717| 
        MOVL      XAR4,ACC              ; [CPU_] |4717| 
	.dwpsn	file "../Source/prod.c",line 4716,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4717,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4717| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4717| 
        MOV       AL,PL                 ; [CPU_] |4717| 
        ADDB      AL,#1                 ; [CPU_] |4717| 
        MOV       *-SP[61],AL           ; [CPU_] |4717| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4716,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4716| 
        B         $C$L141,HI            ; [CPU_] |4716| 
        ; branchcc occurs ; [] |4716| 
        B         $C$L743,UNC           ; [CPU_] |4716| 
        ; branch occurs ; [] |4716| 
$C$L143:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4524,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4524| 
        B         $C$L320,LO            ; [CPU_] |4524| 
        ; branchcc occurs ; [] |4524| 
        MOVL      ACC,XAR4              ; [CPU_] |4524| 
        MOVL      XAR0,#66              ; [CPU_] |4524| 
        ADDB      ACC,#2                ; [CPU_] |4524| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4524| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4524| 
        B         $C$L320,LT            ; [CPU_] |4524| 
        ; branchcc occurs ; [] |4524| 
        MOVL      XAR5,XAR4             ; [CPU_] |4524| 
        MOVL      XAR0,#66              ; [CPU_] |4524| 
        CMPB      AL,#4                 ; [CPU_] |4524| 
        ADDB      XAR5,#2               ; [CPU_] |4524| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4524| 
        B         $C$L320,GEQ           ; [CPU_] |4524| 
        ; branchcc occurs ; [] |4524| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4524| 
        B         $C$L320,LT            ; [CPU_] |4524| 
        ; branchcc occurs ; [] |4524| 
        CMPB      AH,#2                 ; [CPU_] |4524| 
        B         $C$L320,GT            ; [CPU_] |4524| 
        ; branchcc occurs ; [] |4524| 
        MOV       AH,*-SP[56]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4530,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4530| 
        ; branchcc occurs ; [] |4530| 
	.dwpsn	file "../Source/prod.c",line 4533,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4533| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4533| 
        MOVL      XAR0,#66              ; [CPU_] |4533| 
        MOVU      ACC,AL                ; [CPU_] |4533| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4533| 
        CMPL      ACC,XAR6              ; [CPU_] |4533| 
        B         $C$L145,EQ            ; [CPU_] |4533| 
        ; branchcc occurs ; [] |4533| 
        B         $C$L320,UNC           ; [CPU_] |4533| 
        ; branch occurs ; [] |4533| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4531,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4531| 
        MOVL      XAR0,#66              ; [CPU_] |4531| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4531| 
        MOV       *-SP[58],AL           ; [CPU_] |4531| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4531| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4539,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4539| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4539| 
	.dwpsn	file "../Source/prod.c",line 4538,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4538| 
        MOV       *-SP[47],AL           ; [CPU_] |4538| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4538| 
	.dwpsn	file "../Source/prod.c",line 4539,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4539| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4539| 
	.dwpsn	file "../Source/prod.c",line 4542,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4542| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4539,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4539| 
	.dwpsn	file "../Source/prod.c",line 4542,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4542| 
        MOVZ      AR4,AR4               ; [CPU_] |4542| 
	.dwpsn	file "../Source/prod.c",line 4540,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4540| 
	.dwpsn	file "../Source/prod.c",line 4542,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4542| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4542| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4544,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4544| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4544| 
	.dwpsn	file "../Source/prod.c",line 4545,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4545| 
        MOV       *XAR7++,AL            ; [CPU_] |4545| 
	.dwpsn	file "../Source/prod.c",line 4546,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4546| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4546| 
        MOV       *XAR4++,AL            ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4547,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4547| 
        MOV       *XAR7++,AL            ; [CPU_] |4547| 
	.dwpsn	file "../Source/prod.c",line 4543,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4543| 
        ; branchcc occurs ; [] |4543| 
	.dwpsn	file "../Source/prod.c",line 4550,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4550| 
        SUBB      XAR4,#24              ; [CPU_U] |4550| 
        MOVZ      AR4,AR4               ; [CPU_] |4550| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4550| 
        ADDL      XAR4,ACC              ; [CPU_] |4550| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4550| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4550| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4550| 
        MOVL      ACC,XAR1              ; [CPU_] |4550| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4550| 
        ; call occurs [#FS$$CMP] ; [] |4550| 
        CMPB      AL,#0                 ; [CPU_] |4550| 
        B         $C$L320,LT            ; [CPU_] |4550| 
        ; branchcc occurs ; [] |4550| 
        MOV       AL,#0                 ; [CPU_] |4550| 
        MOV       AH,#16672             ; [CPU_] |4550| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4550| 
        MOVL      ACC,XAR1              ; [CPU_] |4550| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4550| 
        ; call occurs [#FS$$CMP] ; [] |4550| 
        CMPB      AL,#0                 ; [CPU_] |4550| 
        B         $C$L320,GT            ; [CPU_] |4550| 
        ; branchcc occurs ; [] |4550| 
	.dwpsn	file "../Source/prod.c",line 4555,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4555| 
        MOV       AH,#16672             ; [CPU_] |4555| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4555| 
        MOVL      ACC,XAR1              ; [CPU_] |4555| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4555| 
        ; call occurs [#FS$$ADD] ; [] |4555| 
        MOVL      XAR6,ACC              ; [CPU_] |4555| 
        MOV       AL,#65024             ; [CPU_] |4555| 
        MOV       AH,#18175             ; [CPU_] |4555| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4555| 
        MOVL      ACC,XAR6              ; [CPU_] |4555| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4555| 
        ; call occurs [#FS$$MPY] ; [] |4555| 
        MOVL      XAR6,ACC              ; [CPU_] |4555| 
        MOV       AL,#0                 ; [CPU_] |4555| 
        MOV       AH,#16672             ; [CPU_] |4555| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4555| 
        MOVL      ACC,XAR6              ; [CPU_] |4555| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4555| 
        ; call occurs [#FS$$DIV] ; [] |4555| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4555| 
        ; call occurs [#FS$$TOLL] ; [] |4555| 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4556| 
	.dwpsn	file "../Source/prod.c",line 4555,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4555| 
	.dwpsn	file "../Source/prod.c",line 4546,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4546| 
	.dwpsn	file "../Source/prod.c",line 4555,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4555| 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4556| 
        CMP64     ACC:P                 ; [CPU_] |4556| 
        B         $C$L148,LEQ           ; [CPU_] |4556| 
        ; branchcc occurs ; [] |4556| 
	.dwpsn	file "../Source/prod.c",line 4558,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4558| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4558| 
        MOV       *-SP[2],#0            ; [CPU_] |4558| 
        MOV       *-SP[1],#0            ; [CPU_] |4558| 
        MOVL      P,*-SP[32]            ; [CPU_] |4558| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4558| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$644, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4558| 
        ; call occurs [#LL$$CMP] ; [] |4558| 
        CMPB      AL,#0                 ; [CPU_] |4558| 
        B         $C$L147,GEQ           ; [CPU_] |4558| 
        ; branchcc occurs ; [] |4558| 
	.dwpsn	file "../Source/prod.c",line 4561,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4561| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4561| 
        MOVU      ACC,AR4               ; [CPU_] |4561| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4561| 
        MOVL      XAR1,ACC              ; [CPU_] |4561| 
        MOV       AL,*-SP[32]           ; [CPU_] |4561| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4561| 
        B         $C$L149,UNC           ; [CPU_] |4561| 
        ; branch occurs ; [] |4561| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4559,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4559| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4559| 
        MOVU      ACC,AR4               ; [CPU_] |4559| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4559| 
        MOVL      XAR1,ACC              ; [CPU_] |4559| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4559| 
	.dwpsn	file "../Source/prod.c",line 4560,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4560| 
        ; branch occurs ; [] |4560| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4557,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4557| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4557| 
        MOVU      ACC,AR4               ; [CPU_] |4557| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4557| 
        MOVL      XAR1,ACC              ; [CPU_] |4557| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4557| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4564,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4564| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4564| 
        ; call occurs [#_dac_setmode] ; [] |4564| 
	.dwpsn	file "../Source/prod.c",line 4566,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4566| 
        MOV       AH,*-SP[47]           ; [CPU_] |4566| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4566| 
        ; call occurs [#_mcbsp_xmit] ; [] |4566| 
	.dwpsn	file "../Source/prod.c",line 4567,column 5,is_stmt,isa 0
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("_latch_dac")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4567| 
        ; call occurs [#_latch_dac] ; [] |4567| 
	.dwpsn	file "../Source/prod.c",line 4569,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4569| 
        MOV       T,*-SP[59]            ; [CPU_] |4569| 
        LSL       AL,T                  ; [CPU_] |4569| 
        OR        *-SP[56],AL           ; [CPU_] |4569| 
	.dwpsn	file "../Source/prod.c",line 4572,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4572| 
        ; branch occurs ; [] |4572| 
$C$L150:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4478,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4478| 
        B         $C$L320,LO            ; [CPU_] |4478| 
        ; branchcc occurs ; [] |4478| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4478| 
        MOVL      XAR0,#66              ; [CPU_] |4478| 
        MOVL      ACC,XAR5              ; [CPU_] |4478| 
        ADDB      ACC,#2                ; [CPU_] |4478| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4478| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4478| 
        MOVZ      AR7,AR6               ; [CPU_] |4478| 
        MOV       AL,*-SP[58]           ; [CPU_] |4478| 
        MOVU      ACC,AL                ; [CPU_] |4478| 
        CMPL      ACC,XAR7              ; [CPU_] |4478| 
        B         $C$L320,NEQ           ; [CPU_] |4478| 
        ; branchcc occurs ; [] |4478| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4478| 
        CMPB      AL,#7                 ; [CPU_] |4478| 
        B         $C$L320,NEQ           ; [CPU_] |4478| 
        ; branchcc occurs ; [] |4478| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4484| 
        MOVL      ACC,XAR5              ; [CPU_] |4484| 
        MOVL      XAR0,#66              ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4483,column 5,is_stmt,isa 0
        MOV       *-SP[58],AR6          ; [CPU_] |4483| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4484| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4484| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4484| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[61],#3           ; [CPU_] |4484| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4487,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4487| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4489,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4489| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4489| 
	.dwpsn	file "../Source/prod.c",line 4490,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4490| 
        MOV       *XAR7++,AL            ; [CPU_] |4490| 
	.dwpsn	file "../Source/prod.c",line 4491,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4491| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4491| 
        MOV       *XAR0++,AL            ; [CPU_] |4491| 
	.dwpsn	file "../Source/prod.c",line 4492,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4492| 
        MOV       *XAR7++,AL            ; [CPU_] |4492| 
	.dwpsn	file "../Source/prod.c",line 4488,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4488| 
        ; branchcc occurs ; [] |4488| 
	.dwpsn	file "../Source/prod.c",line 4486,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4486| 
	.dwpsn	file "../Source/prod.c",line 4492,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4492| 
	.dwpsn	file "../Source/prod.c",line 4486,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4486| 
        ; branchcc occurs ; [] |4486| 
	.dwpsn	file "../Source/prod.c",line 4499,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4499| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4499| 
        ; call occurs [#U$$TOFS] ; [] |4499| 
        MOVL      XAR1,ACC              ; [CPU_] |4499| 
        MOV       AL,*-SP[35]           ; [CPU_] |4499| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4499| 
        ; call occurs [#U$$TOFS] ; [] |4499| 
        MOVL      XAR0,#86              ; [CPU_] |4499| 
        MOV       T,*-SP[58]            ; [CPU_] |4499| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4499| 
        MOVL      XAR0,#40              ; [CPU_] |4499| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4499| 
        MOVB      AL,#12                ; [CPU_] |4499| 
        MPYU      ACC,T,AL              ; [CPU_] |4499| 
        MOVL      XAR0,#88              ; [CPU_] |4499| 
        ADDL      ACC,XAR6              ; [CPU_] |4499| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4499| 
        MOVL      XAR0,#86              ; [CPU_] |4499| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4499| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4499| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4499| 
        ; call occurs [#FS$$SUB] ; [] |4499| 
        MOVL      XAR0,#42              ; [CPU_] |4499| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4499| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4499| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4499| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4499| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4499| 
        ; call occurs [#FS$$SUB] ; [] |4499| 
        MOVL      XAR0,#42              ; [CPU_] |4499| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4499| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4499| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4499| 
        ; call occurs [#FS$$DIV] ; [] |4499| 
        MOVL      XAR0,#88              ; [CPU_] |4499| 
        MOVL      XAR6,ACC              ; [CPU_] |4499| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4499| 
        ADD       ACC,#1569 << 1        ; [CPU_] |4499| 
        MOVL      XAR4,ACC              ; [CPU_] |4499| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4499| 
	.dwpsn	file "../Source/prod.c",line 4502,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4502| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4502| 
        ; call occurs [#U$$TOFS] ; [] |4502| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4502| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4502| 
        ; call occurs [#FS$$SUB] ; [] |4502| 
        MOVL      XAR1,ACC              ; [CPU_] |4502| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4502| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4502| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4502| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4502| 
        ; call occurs [#FS$$SUB] ; [] |4502| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4502| 
        MOVL      ACC,XAR1              ; [CPU_] |4502| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4502| 
        ; call occurs [#FS$$DIV] ; [] |4502| 
        MOVL      XAR0,#88              ; [CPU_] |4502| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4502| 
        MOVL      XAR6,ACC              ; [CPU_] |4502| 
        MOVL      ACC,XAR1              ; [CPU_] |4502| 
        ADD       ACC,#49 << 6          ; [CPU_] |4502| 
        MOVL      XAR4,ACC              ; [CPU_] |4502| 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4505| 
	.dwpsn	file "../Source/prod.c",line 4502,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4502| 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        ADD       ACC,#1569 << 1        ; [CPU_] |4505| 
        MOVL      XAR4,ACC              ; [CPU_] |4505| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4505| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4505| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4505| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4505| 
        ; call occurs [#FS$$MPY] ; [] |4505| 
        MOVL      XAR0,#86              ; [CPU_] |4505| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4505| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4505| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4505| 
        ; call occurs [#FS$$SUB] ; [] |4505| 
        MOVL      XAR6,ACC              ; [CPU_] |4505| 
        MOVL      ACC,XAR1              ; [CPU_] |4505| 
        ADD       ACC,#785 << 2         ; [CPU_] |4505| 
        MOVL      XAR4,ACC              ; [CPU_] |4505| 
	.dwpsn	file "../Source/prod.c",line 4508,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4508| 
	.dwpsn	file "../Source/prod.c",line 4505,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4505| 
	.dwpsn	file "../Source/prod.c",line 4508,column 5,is_stmt,isa 0
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4508| 
        ; call occurs [#_dac_setmode] ; [] |4508| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4514,column 5,is_stmt,isa 0
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4514| 
        ; call occurs [#_ad7738_setcal] ; [] |4514| 
        MOVL      XAR0,#78              ; [CPU_] |4514| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4514| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4515| 
        MOVL      XAR1,ACC              ; [CPU_] |4515| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4515| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4515| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4515| 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4516| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4516| 
        ; call occurs [#_ad7738_resetvall] ; [] |4516| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4509,column 5,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |4509| 
	.dwpsn	file "../Source/prod.c",line 4520,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4520| 
        ; branch occurs ; [] |4520| 
$C$L153:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4422| 
        B         $C$L320,LO            ; [CPU_] |4422| 
        ; branchcc occurs ; [] |4422| 
        MOVL      XAR0,#88              ; [CPU_] |4422| 
        MOVL      ACC,XAR4              ; [CPU_] |4422| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4422| 
        MOVL      XAR0,#66              ; [CPU_] |4422| 
        ADDB      ACC,#2                ; [CPU_] |4422| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4422| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4422| 
        MOV       AL,*-SP[58]           ; [CPU_] |4422| 
        MOVU      ACC,AL                ; [CPU_] |4422| 
        CMPL      ACC,XAR6              ; [CPU_] |4422| 
        B         $C$L320,NEQ           ; [CPU_] |4422| 
        ; branchcc occurs ; [] |4422| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4422| 
        B         $C$L320,LT            ; [CPU_] |4422| 
        ; branchcc occurs ; [] |4422| 
        CMPB      AL,#2                 ; [CPU_] |4422| 
        B         $C$L320,GEQ           ; [CPU_] |4422| 
        ; branchcc occurs ; [] |4422| 
	.dwpsn	file "../Source/prod.c",line 4428,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4428| 
	.dwpsn	file "../Source/prod.c",line 4429,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4429| 
	.dwpsn	file "../Source/prod.c",line 4428,column 5,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |4428| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4428| 
	.dwpsn	file "../Source/prod.c",line 4429,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4429| 
        MOVZ      AR7,AR6               ; [CPU_] |4429| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4431,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4431| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4431| 
	.dwpsn	file "../Source/prod.c",line 4430,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4430| 
        ADDB      XAR4,#2               ; [CPU_] |4430| 
	.dwpsn	file "../Source/prod.c",line 4431,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4431| 
	.dwpsn	file "../Source/prod.c",line 4430,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4430| 
        ; branchcc occurs ; [] |4430| 
	.dwpsn	file "../Source/prod.c",line 4434,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4434| 
        SUBB      XAR4,#24              ; [CPU_U] |4434| 
        MOVZ      AR1,AR4               ; [CPU_] |4434| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4434| 
        ADDL      XAR1,ACC              ; [CPU_] |4434| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4434| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4434| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4434| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4434| 
        ; call occurs [#FS$$CMP] ; [] |4434| 
        CMPB      AL,#0                 ; [CPU_] |4434| 
        B         $C$L320,NEQ           ; [CPU_] |4434| 
        ; branchcc occurs ; [] |4434| 
	.dwpsn	file "../Source/prod.c",line 4438,column 5,is_stmt,isa 0
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4438| 
        ; call occurs [#_lcd_clear] ; [] |4438| 
	.dwpsn	file "../Source/prod.c",line 4439,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4439| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4439| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4439| 
        ; call occurs [#_lcd_puts] ; [] |4439| 
	.dwpsn	file "../Source/prod.c",line 4440,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4440| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4440| 
        MOVL      XAR0,#44              ; [CPU_] |4440| 
        ADD       AL,*-SP[58]           ; [CPU_] |4440| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4440| 
        MOV       *-SP[3],AL            ; [CPU_] |4440| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4440| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("_sprintf")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4440| 
        ; call occurs [#_sprintf] ; [] |4440| 
        MOVL      XAR0,#44              ; [CPU_] |4440| 
	.dwpsn	file "../Source/prod.c",line 4441,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4441| 
	.dwpsn	file "../Source/prod.c",line 4440,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4440| 
	.dwpsn	file "../Source/prod.c",line 4441,column 5,is_stmt,isa 0
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4441| 
        ; call occurs [#_lcd_puts] ; [] |4441| 
	.dwpsn	file "../Source/prod.c",line 4442,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4442| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4442| 
        MOVL      XAR0,#44              ; [CPU_] |4442| 
        ADD       AL,*-SP[47]           ; [CPU_] |4442| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4442| 
        MOV       *-SP[3],AL            ; [CPU_] |4442| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4442| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4442| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4442| 
        MOVL      XAR4,XAR1             ; [CPU_] |4442| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("_sprintf")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4442| 
        ; call occurs [#_sprintf] ; [] |4442| 
	.dwpsn	file "../Source/prod.c",line 4443,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4442,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4442| 
	.dwpsn	file "../Source/prod.c",line 4443,column 5,is_stmt,isa 0
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4443| 
        ; call occurs [#_lcd_puts] ; [] |4443| 
	.dwpsn	file "../Source/prod.c",line 4444,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4444| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4444| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4444| 
        ; call occurs [#_lcd_puts] ; [] |4444| 
	.dwpsn	file "../Source/prod.c",line 4446,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4446| 
        SUBB      XAR4,#32              ; [CPU_U] |4446| 
        MOVZ      AR1,AR4               ; [CPU_] |4446| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4444,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4444| 
	.dwpsn	file "../Source/prod.c",line 4446,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4446| 
        ADDL      XAR1,ACC              ; [CPU_] |4446| 
	.dwpsn	file "../Source/prod.c",line 4447,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4447| 
	.dwpsn	file "../Source/prod.c",line 4446,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4446| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4446| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4446| 
	.dwpsn	file "../Source/prod.c",line 4448,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4448| 
	.dwpsn	file "../Source/prod.c",line 4447,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4447| 
	.dwpsn	file "../Source/prod.c",line 4448,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4448| 
        MOVB      ACC,#0                ; [CPU_] |4448| 
        SUBB      ACC,#1                ; [CPU_] |4448| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4448| 
        B         $C$L157,EQ            ; [CPU_] |4448| 
        ; branchcc occurs ; [] |4448| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4449,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4449| 
        ; branch occurs ; [] |4449| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4450,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4450| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("_delay_us")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4450| 
        ; call occurs [#_delay_us] ; [] |4450| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4449,column 13,is_stmt,isa 0
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4449| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4449| 
        CMPB      AL,#0                 ; [CPU_] |4449| 
        B         $C$L155,EQ            ; [CPU_] |4449| 
        ; branchcc occurs ; [] |4449| 
	.dwpsn	file "../Source/prod.c",line 4452,column 6,is_stmt,isa 0
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4452| 
        ; call occurs [#_ad7738_getraw] ; [] |4452| 
	.dwpsn	file "../Source/prod.c",line 4453,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4453| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4453| 
        ADDL      XAR4,ACC              ; [CPU_] |4453| 
        MOVL      XAR0,#22              ; [CPU_] |4453| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4453| 
        MOVL      XAR0,#22              ; [CPU_] |4453| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4453| 
        ASR64     ACC:P,16              ; [CPU_] |4453| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4453| 
        MOVL      XAR0,#22              ; [CPU_] |4453| 
        ASR64     ACC:P,16              ; [CPU_] |4453| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4453| 
        MOVL      XAR0,#22              ; [CPU_] |4453| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4453| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4453| 
        MOVL      XAR0,#22              ; [CPU_] |4453| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4453| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4453| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4453| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4453| 
	.dwpsn	file "../Source/prod.c",line 4448,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4448| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4448| 
        MOVB      ACC,#0                ; [CPU_] |4448| 
        SUBB      ACC,#1                ; [CPU_] |4448| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4448| 
        B         $C$L156,NEQ           ; [CPU_] |4448| 
        ; branchcc occurs ; [] |4448| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4455,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4455| 
        B         $C$L158,NEQ           ; [CPU_] |4455| 
        ; branchcc occurs ; [] |4455| 
	.dwpsn	file "../Source/prod.c",line 4456,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4456| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4456| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4456| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4456| 
        ; call occurs [#FS$$SUB] ; [] |4456| 
        MOVL      XAR6,ACC              ; [CPU_] |4456| 
        MOV       AL,#16384             ; [CPU_] |4456| 
        MOV       AH,#17948             ; [CPU_] |4456| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4456| 
        MOVL      ACC,XAR6              ; [CPU_] |4456| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4456| 
        ; call occurs [#FS$$MPY] ; [] |4456| 
        MOVL      XAR1,ACC              ; [CPU_] |4456| 
        MOVL      P,*-SP[28]            ; [CPU_] |4456| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4456| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4456| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4456| 
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4456| 
        ; call occurs [#LL$$TOFS] ; [] |4456| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4456| 
        MOVL      ACC,XAR1              ; [CPU_] |4456| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4456| 
        ; call occurs [#FS$$DIV] ; [] |4456| 
        MOVL      XAR0,#40              ; [CPU_] |4456| 
        MOV       T,*-SP[58]            ; [CPU_] |4456| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4456| 
        MOVL      XAR6,ACC              ; [CPU_] |4456| 
        MOVB      AL,#10                ; [CPU_] |4456| 
        MPYU      ACC,T,AL              ; [CPU_] |4456| 
        ADDL      ACC,XAR7              ; [CPU_] |4456| 
        MOVL      XAR4,ACC              ; [CPU_] |4456| 
        MOVB      XAR0,#44              ; [CPU_] |4456| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4456| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4461,column 6,is_stmt,isa 0
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4461| 
        ; call occurs [#_ad7738_setcal] ; [] |4461| 
        MOVL      XAR0,#78              ; [CPU_] |4461| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4461| 
	.dwpsn	file "../Source/prod.c",line 4462,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4462| 
        MOVL      XAR1,ACC              ; [CPU_] |4462| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4462| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4462| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4462| 
	.dwpsn	file "../Source/prod.c",line 4463,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4463| 
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4463| 
        ; call occurs [#_ad7738_resetvall] ; [] |4463| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4459,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4459| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4466,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4466| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4467,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4466,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4466| 
	.dwpsn	file "../Source/prod.c",line 4467,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4466,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4466| 
	.dwpsn	file "../Source/prod.c",line 4467,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4466,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4466| 
        B         $C$L159,HI            ; [CPU_] |4466| 
        ; branchcc occurs ; [] |4466| 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4469| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4472,column 5,is_stmt,isa 0
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4472| 
        ; call occurs [#_lcd_clear] ; [] |4472| 
	.dwpsn	file "../Source/prod.c",line 4473,column 5,is_stmt,isa 0
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_update_units")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4473| 
        ; call occurs [#_update_units] ; [] |4473| 
	.dwpsn	file "../Source/prod.c",line 4474,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4474| 
        ; branch occurs ; [] |4474| 
$C$L160:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4397,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4397| 
        B         $C$L320,LO            ; [CPU_] |4397| 
        ; branchcc occurs ; [] |4397| 
        MOVL      ACC,XAR4              ; [CPU_] |4397| 
        MOVL      XAR0,#66              ; [CPU_] |4397| 
        ADDB      ACC,#2                ; [CPU_] |4397| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4397| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4397| 
        B         $C$L320,LT            ; [CPU_] |4397| 
        ; branchcc occurs ; [] |4397| 
        MOVL      XAR5,XAR4             ; [CPU_] |4397| 
        MOVL      XAR0,#66              ; [CPU_] |4397| 
        CMPB      AL,#4                 ; [CPU_] |4397| 
        ADDB      XAR5,#2               ; [CPU_] |4397| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4397| 
        B         $C$L320,GEQ           ; [CPU_] |4397| 
        ; branchcc occurs ; [] |4397| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4397| 
        CMPB      AH,#2                 ; [CPU_] |4397| 
        B         $C$L320,NEQ           ; [CPU_] |4397| 
        ; branchcc occurs ; [] |4397| 
	.dwpsn	file "../Source/prod.c",line 4404,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4404| 
        MOVL      XAR0,#66              ; [CPU_] |4404| 
	.dwpsn	file "../Source/prod.c",line 4403,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4403| 
	.dwpsn	file "../Source/prod.c",line 4407,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4407| 
	.dwpsn	file "../Source/prod.c",line 4404,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4404| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4404| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4404| 
	.dwpsn	file "../Source/prod.c",line 4405,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4405| 
        MOV       *-SP[61],#4           ; [CPU_] |4405| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4407,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4407| 
        ; branch occurs ; [] |4407| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4408,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4408| 
        SUBB      XAR4,#24              ; [CPU_U] |4408| 
        MOVZ      AR4,AR4               ; [CPU_] |4408| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4408| 
        MOVL      XAR0,#44              ; [CPU_] |4408| 
        ADDL      XAR4,ACC              ; [CPU_] |4408| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4408| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4410,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4410| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4410| 
	.dwpsn	file "../Source/prod.c",line 4411,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4411| 
        MOV       *XAR7++,AL            ; [CPU_] |4411| 
	.dwpsn	file "../Source/prod.c",line 4412,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4412| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4412| 
        MOV       *XAR4++,AL            ; [CPU_] |4412| 
	.dwpsn	file "../Source/prod.c",line 4413,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4413| 
        MOV       *XAR7++,AL            ; [CPU_] |4413| 
	.dwpsn	file "../Source/prod.c",line 4409,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4409| 
        ; branchcc occurs ; [] |4409| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4413,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4413| 
	.dwpsn	file "../Source/prod.c",line 4407,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4407| 
        MOV       PL,AL                 ; [CPU_] |4407| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4407,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4407| 
        MOV       AL,PL                 ; [CPU_] |4407| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4407| 
        B         $C$L161,LT            ; [CPU_] |4407| 
        ; branchcc occurs ; [] |4407| 
        B         $C$L743,UNC           ; [CPU_] |4407| 
        ; branch occurs ; [] |4407| 
$C$L164:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5352,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5352| 
        B         $C$L320,LO            ; [CPU_] |5352| 
        ; branchcc occurs ; [] |5352| 
	.dwpsn	file "../Source/prod.c",line 5357,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5357| 
        MOVL      XAR0,#66              ; [CPU_] |5357| 
        MOVL      ACC,XAR7              ; [CPU_] |5357| 
        ADDB      ACC,#2                ; [CPU_] |5357| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5357| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GT            ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOVB      XAR0,#13              ; [CPU_] |5357| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GT            ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOVB      XAR0,#24              ; [CPU_] |5357| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GT            ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOVB      XAR0,#35              ; [CPU_] |5357| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GT            ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GEQ           ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOVB      XAR0,#14              ; [CPU_] |5357| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GEQ           ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOVB      XAR0,#25              ; [CPU_] |5357| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GEQ           ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOVB      XAR0,#36              ; [CPU_] |5357| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5357| 
        CMPB      AL,#4                 ; [CPU_] |5357| 
        B         $C$L320,GEQ           ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5365,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5365| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5365| 
        MOVL      XAR6,ACC              ; [CPU_] |5365| 
        MOV       AL,*XAR7              ; [CPU_] |5365| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5365| 
	.dwpsn	file "../Source/prod.c",line 5366,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5366| 
        ADD       ACC,#1591 << 1        ; [CPU_] |5366| 
        MOVL      XAR6,ACC              ; [CPU_] |5366| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5366| 
        MOV       *XAR4++,AL            ; [CPU_] |5366| 
	.dwpsn	file "../Source/prod.c",line 5367,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5367| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5367| 
        MOVL      XAR6,ACC              ; [CPU_] |5367| 
	.dwpsn	file "../Source/prod.c",line 5365,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5365| 
	.dwpsn	file "../Source/prod.c",line 5367,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5367| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5367| 
	.dwpsn	file "../Source/prod.c",line 5368,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5368| 
        ADD       ACC,#3183 << 0        ; [CPU_] |5368| 
        MOVL      XAR6,ACC              ; [CPU_] |5368| 
	.dwpsn	file "../Source/prod.c",line 5367,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5367| 
	.dwpsn	file "../Source/prod.c",line 5368,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5368| 
        MOV       *XAR4++,AL            ; [CPU_] |5368| 
	.dwpsn	file "../Source/prod.c",line 5369,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5369| 
        ANDB      AL,#0xfe              ; [CPU_] |5369| 
        MOVZ      AR0,AL                ; [CPU_] |5369| 
        MOVL      ACC,XAR5              ; [CPU_] |5369| 
        ADD       ACC,#199 << 4         ; [CPU_] |5369| 
        MOVL      XAR6,ACC              ; [CPU_] |5369| 
	.dwpsn	file "../Source/prod.c",line 5370,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5370| 
        ADD       ACC,#199 << 4         ; [CPU_] |5370| 
	.dwpsn	file "../Source/prod.c",line 5369,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5369| 
	.dwpsn	file "../Source/prod.c",line 5370,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5370| 
        MOVL      XAR0,P                ; [CPU_] |5370| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5370| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5370| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5374,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5374| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5374| 
	.dwpsn	file "../Source/prod.c",line 5375,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5375| 
        MOV       *XAR4++,AL            ; [CPU_] |5375| 
	.dwpsn	file "../Source/prod.c",line 5376,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5376| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5376| 
        MOV       *XAR0++,AL            ; [CPU_] |5376| 
	.dwpsn	file "../Source/prod.c",line 5377,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5377| 
        MOV       *XAR4++,AL            ; [CPU_] |5377| 
	.dwpsn	file "../Source/prod.c",line 5373,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5373| 
        ; branchcc occurs ; [] |5373| 
	.dwpsn	file "../Source/prod.c",line 5380,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5380| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5382,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5382| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5382| 
	.dwpsn	file "../Source/prod.c",line 5383,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5383| 
        MOV       *XAR4++,AL            ; [CPU_] |5383| 
	.dwpsn	file "../Source/prod.c",line 5384,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5384| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5384| 
        MOV       *XAR0++,AL            ; [CPU_] |5384| 
	.dwpsn	file "../Source/prod.c",line 5385,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5385| 
        MOV       *XAR4++,AL            ; [CPU_] |5385| 
	.dwpsn	file "../Source/prod.c",line 5381,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR6--         ; [CPU_] |5381| 
        ; branchcc occurs ; [] |5381| 
	.dwpsn	file "../Source/prod.c",line 5364,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5364| 
	.dwpsn	file "../Source/prod.c",line 5367,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5367| 
        ADD       *-SP[61],#11          ; [CPU_] |5367| 
	.dwpsn	file "../Source/prod.c",line 5364,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5364| 
        ADDB      XAR1,#8               ; [CPU_] |5364| 
        ADDB      ACC,#8                ; [CPU_] |5364| 
        SUBB      XAR6,#1               ; [CPU_U] |5364| 
        MOVZ      AR3,AR6               ; [CPU_] |5364| 
        MOVL      P,ACC                 ; [CPU_] |5364| 
        CMP       AR6,#-1               ; [CPU_] |5364| 
        B         $C$L165,NEQ           ; [CPU_] |5364| 
        ; branchcc occurs ; [] |5364| 
        B         $C$L176,UNC           ; [CPU_] |5364| 
        ; branch occurs ; [] |5364| 
$C$L168:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5289,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5289| 
        B         $C$L320,LO            ; [CPU_] |5289| 
        ; branchcc occurs ; [] |5289| 
	.dwpsn	file "../Source/prod.c",line 5294,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5294| 
        MOVL      XAR0,#66              ; [CPU_] |5294| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5294| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L169,LEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        CMPB      AL,#7                 ; [CPU_] |5294| 
        B         $C$L320,NEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5294| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L170,LEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        CMPB      AL,#7                 ; [CPU_] |5294| 
        B         $C$L320,NEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5294| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L171,LEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        CMPB      AL,#7                 ; [CPU_] |5294| 
        B         $C$L320,NEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5294| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L172,LEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        CMPB      AL,#7                 ; [CPU_] |5294| 
        B         $C$L320,NEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5294| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L320,GEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        MOVB      XAR0,#13              ; [CPU_] |5294| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L320,GEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        MOVB      XAR0,#23              ; [CPU_] |5294| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L320,GEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        MOVB      XAR0,#33              ; [CPU_] |5294| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5294| 
        CMPB      AL,#4                 ; [CPU_] |5294| 
        B         $C$L320,GEQ           ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5305,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5305| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5305| 
        MOVL      XAR5,ACC              ; [CPU_] |5305| 
        MOV       AL,*XAR7              ; [CPU_] |5305| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5305| 
	.dwpsn	file "../Source/prod.c",line 5306,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5306| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5306| 
        MOVL      XAR5,ACC              ; [CPU_] |5306| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5306| 
        MOV       *XAR4++,AL            ; [CPU_] |5306| 
	.dwpsn	file "../Source/prod.c",line 5307,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5307| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5307| 
        MOVL      XAR5,ACC              ; [CPU_] |5307| 
	.dwpsn	file "../Source/prod.c",line 5305,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5305| 
	.dwpsn	file "../Source/prod.c",line 5307,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5307| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5307| 
	.dwpsn	file "../Source/prod.c",line 5308,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5308| 
        ADD       ACC,#3135 << 0        ; [CPU_] |5308| 
        MOVL      XAR5,ACC              ; [CPU_] |5308| 
	.dwpsn	file "../Source/prod.c",line 5307,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5307| 
	.dwpsn	file "../Source/prod.c",line 5308,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5308| 
        MOVL      XAR5,P                ; [CPU_] |5308| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5308| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5319,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5319| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5319| 
	.dwpsn	file "../Source/prod.c",line 5320,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5320| 
        MOV       *XAR4++,AL            ; [CPU_] |5320| 
	.dwpsn	file "../Source/prod.c",line 5321,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5321| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5321| 
        MOV       *XAR5++,AL            ; [CPU_] |5321| 
	.dwpsn	file "../Source/prod.c",line 5322,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5322| 
        MOV       *XAR4++,AL            ; [CPU_] |5322| 
	.dwpsn	file "../Source/prod.c",line 5318,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5318| 
        ; branchcc occurs ; [] |5318| 
	.dwpsn	file "../Source/prod.c",line 5328,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5328| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5335,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5335| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5335| 
	.dwpsn	file "../Source/prod.c",line 5336,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5336| 
        MOV       *XAR4++,AL            ; [CPU_] |5336| 
	.dwpsn	file "../Source/prod.c",line 5337,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5337| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5337| 
        MOV       *XAR5++,AL            ; [CPU_] |5337| 
	.dwpsn	file "../Source/prod.c",line 5338,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5338| 
        MOV       *XAR4++,AL            ; [CPU_] |5338| 
	.dwpsn	file "../Source/prod.c",line 5334,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR6--         ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
	.dwpsn	file "../Source/prod.c",line 5304,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5304| 
	.dwpsn	file "../Source/prod.c",line 5307,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5307| 
        ADD       *-SP[61],#10          ; [CPU_] |5307| 
	.dwpsn	file "../Source/prod.c",line 5304,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5304| 
        ADDB      XAR1,#12              ; [CPU_] |5304| 
        ADDB      ACC,#12               ; [CPU_] |5304| 
        SUBB      XAR6,#1               ; [CPU_U] |5304| 
        MOVZ      AR3,AR6               ; [CPU_] |5304| 
        MOVL      P,ACC                 ; [CPU_] |5304| 
        CMP       AR6,#-1               ; [CPU_] |5304| 
        B         $C$L173,NEQ           ; [CPU_] |5304| 
        ; branchcc occurs ; [] |5304| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5345,column 5,is_stmt,isa 0
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5345| 
        ; call occurs [#_ad7738_setcal] ; [] |5345| 
	.dwpsn	file "../Source/prod.c",line 5348,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5348| 
        ; branch occurs ; [] |5348| 
$C$L177:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5257,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5257| 
        B         $C$L320,LO            ; [CPU_] |5257| 
        ; branchcc occurs ; [] |5257| 
	.dwpsn	file "../Source/prod.c",line 5262,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5262| 
        MOVL      XAR0,#66              ; [CPU_] |5262| 
        MOVL      ACC,XAR7              ; [CPU_] |5262| 
        ADDB      ACC,#2                ; [CPU_] |5262| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5262| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GT            ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GT            ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVB      XAR0,#8               ; [CPU_] |5262| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GT            ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVB      XAR0,#11              ; [CPU_] |5262| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GT            ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5262| 
        CMPB      AL,#4                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5262| 
        CMPB      AL,#4                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVB      XAR0,#9               ; [CPU_] |5262| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5262| 
        CMPB      AL,#4                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVB      XAR0,#12              ; [CPU_] |5262| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5262| 
        CMPB      AL,#4                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVL      ACC,XAR7              ; [CPU_] |5262| 
        MOVL      XAR0,#64              ; [CPU_] |5262| 
        ADDB      ACC,#4                ; [CPU_] |5262| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5262| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVB      XAR0,#10              ; [CPU_] |5262| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVB      XAR0,#13              ; [CPU_] |5262| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5262| 
        CMPB      AL,#6                 ; [CPU_] |5262| 
        B         $C$L320,GEQ           ; [CPU_] |5262| 
        ; branchcc occurs ; [] |5262| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5273,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5273| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5273| 
	.dwpsn	file "../Source/prod.c",line 5274,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5274| 
	.dwpsn	file "../Source/prod.c",line 5273,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5273| 
	.dwpsn	file "../Source/prod.c",line 5274,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5274| 
	.dwpsn	file "../Source/prod.c",line 5275,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5275| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5275| 
        ADDB      XAR7,#1               ; [CPU_] |5275| 
	.dwpsn	file "../Source/prod.c",line 5276,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5276| 
        MOV       *XAR4++,AL            ; [CPU_] |5276| 
	.dwpsn	file "../Source/prod.c",line 5277,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5277| 
        ADDB      XAR7,#1               ; [CPU_] |5277| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5277| 
	.dwpsn	file "../Source/prod.c",line 5278,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5278| 
	.dwpsn	file "../Source/prod.c",line 5272,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5272| 
	.dwpsn	file "../Source/prod.c",line 5278,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5278| 
	.dwpsn	file "../Source/prod.c",line 5272,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5272| 
        ; branchcc occurs ; [] |5272| 
	.dwpsn	file "../Source/prod.c",line 5282,column 5,is_stmt,isa 0
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5282| 
        ; call occurs [#_lcd_clear] ; [] |5282| 
	.dwpsn	file "../Source/prod.c",line 5283,column 5,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_update_units")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5283| 
        ; call occurs [#_update_units] ; [] |5283| 
	.dwpsn	file "../Source/prod.c",line 5278,column 6,is_stmt,isa 0
        ADD       *-SP[61],#12          ; [CPU_] |5278| 
	.dwpsn	file "../Source/prod.c",line 5285,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5285| 
        ; branch occurs ; [] |5285| 
$C$L179:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5236,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5236| 
        B         $C$L320,LO            ; [CPU_] |5236| 
        ; branchcc occurs ; [] |5236| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5241,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5241| 
        MOVB      XAR0,#36              ; [CPU_] |5241| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5241| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5241| 
	.dwpsn	file "../Source/prod.c",line 5242,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5242| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5242| 
        B         $C$L181,NEQ           ; [CPU_] |5242| 
        ; branchcc occurs ; [] |5242| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5244,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5244| 
	.dwpsn	file "../Source/prod.c",line 5245,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5245| 
	.dwpsn	file "../Source/prod.c",line 5243,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5243| 
        ; branchcc occurs ; [] |5243| 
	.dwpsn	file "../Source/prod.c",line 5247,column 6,is_stmt,isa 0
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("_update_units")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5247| 
        ; call occurs [#_update_units] ; [] |5247| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5251,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5253,column 5,is_stmt,isa 0
        B         $C$L234,UNC           ; [CPU_] |5253| 
        ; branch occurs ; [] |5253| 
$C$L182:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5195,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5195| 
        B         $C$L320,LO            ; [CPU_] |5195| 
        ; branchcc occurs ; [] |5195| 
	.dwpsn	file "../Source/prod.c",line 5201,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5201| 
        ADDB      XAR4,#2               ; [CPU_] |5201| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5201| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5201| 
        MOVZ      AR3,AL                ; [CPU_] |5201| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5202| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5202| 
        CMP       AR3,#4096             ; [CPU_] |5202| 
        B         $C$L320,HI            ; [CPU_] |5202| 
        ; branchcc occurs ; [] |5202| 
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5208| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5208| 
        MOVZ      AR7,AR6               ; [CPU_] |5208| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5210,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5210| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5210| 
	.dwpsn	file "../Source/prod.c",line 5209,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5209| 
        ADDB      XAR4,#2               ; [CPU_] |5209| 
	.dwpsn	file "../Source/prod.c",line 5210,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5210| 
	.dwpsn	file "../Source/prod.c",line 5209,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5209| 
        ; branchcc occurs ; [] |5209| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5215,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5215| 
        MOVB      XAR1,#38              ; [CPU_] |5215| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5215| 
	.dwpsn	file "../Source/prod.c",line 5216,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5216| 
        MOVB      XAR1,#40              ; [CPU_] |5216| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5216| 
	.dwpsn	file "../Source/prod.c",line 5217,column 5,is_stmt,isa 0
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("_maf_rst")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5217| 
        ; call occurs [#_maf_rst] ; [] |5217| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5222,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5222| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5222| 
	.dwpsn	file "../Source/prod.c",line 5226,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5226| 
	.dwpsn	file "../Source/prod.c",line 5222,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5222| 
	.dwpsn	file "../Source/prod.c",line 5223,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5223| 
        LSR       AL,8                  ; [CPU_] |5223| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5223| 
	.dwpsn	file "../Source/prod.c",line 5226,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5226| 
        MOVB      XAR1,#40              ; [CPU_] |5226| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5227| 
        MOVL      XAR0,#50              ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5226,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5226| 
        ANDB      AL,#0xff              ; [CPU_] |5226| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5226,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5226| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5228,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5228| 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5227| 
        LSR       AL,8                  ; [CPU_] |5227| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5228,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5228| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5228| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5229| 
	.dwpsn	file "../Source/prod.c",line 5228,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5228| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5229| 
        MOV       *-SP[61],#8           ; [CPU_] |5229| 
	.dwpsn	file "../Source/prod.c",line 5232,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5232| 
        ; branch occurs ; [] |5232| 
$C$L184:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5162,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5162| 
        B         $C$L320,LO            ; [CPU_] |5162| 
        ; branchcc occurs ; [] |5162| 
        MOVL      ACC,XAR4              ; [CPU_] |5162| 
        MOVL      XAR0,#66              ; [CPU_] |5162| 
        ADDB      ACC,#2                ; [CPU_] |5162| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5162| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5162| 
        B         $C$L320,LT            ; [CPU_] |5162| 
        ; branchcc occurs ; [] |5162| 
        MOVL      XAR5,XAR4             ; [CPU_] |5162| 
        MOVL      XAR0,#66              ; [CPU_] |5162| 
        CMPB      AL,#4                 ; [CPU_] |5162| 
        ADDB      XAR5,#2               ; [CPU_] |5162| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5162| 
        B         $C$L320,GEQ           ; [CPU_] |5162| 
        ; branchcc occurs ; [] |5162| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5162| 
        B         $C$L320,LT            ; [CPU_] |5162| 
        ; branchcc occurs ; [] |5162| 
        CMPB      AH,#20                ; [CPU_] |5162| 
        B         $C$L320,GEQ           ; [CPU_] |5162| 
        ; branchcc occurs ; [] |5162| 
	.dwpsn	file "../Source/prod.c",line 5172,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5172| 
        MOVL      XAR0,#66              ; [CPU_] |5172| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5172| 
        MOVL      XAR0,#80              ; [CPU_] |5172| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5172| 
	.dwpsn	file "../Source/prod.c",line 5170,column 5,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |5170| 
	.dwpsn	file "../Source/prod.c",line 5172,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[58]          ; [CPU_] |5172| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5172| 
        B         $C$L318,NEQ           ; [CPU_] |5172| 
        ; branchcc occurs ; [] |5172| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5178,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5178| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5178| 
        MOVB      AL,#10                ; [CPU_] |5178| 
        MOV       T,*-SP[58]            ; [CPU_] |5178| 
        MPYU      ACC,T,AL              ; [CPU_] |5178| 
        ADDL      ACC,XAR6              ; [CPU_] |5178| 
        MOVL      XAR4,ACC              ; [CPU_] |5178| 
        MOVB      XAR0,#42              ; [CPU_] |5178| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |5178| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5178| 
	.dwpsn	file "../Source/prod.c",line 5179,column 5,is_stmt,isa 0
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5179| 
        ; call occurs [#_ad7738_setcal] ; [] |5179| 
        MOVL      XAR0,#78              ; [CPU_] |5179| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5179| 
	.dwpsn	file "../Source/prod.c",line 5181,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5181| 
        MOVL      XAR1,ACC              ; [CPU_] |5181| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5181| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5181| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5181| 
	.dwpsn	file "../Source/prod.c",line 5182,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5182| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5182| 
        ; call occurs [#_ad7738_resetvall] ; [] |5182| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5185,column 5,is_stmt,isa 0
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("_update_units")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5185| 
        ; call occurs [#_update_units] ; [] |5185| 
	.dwpsn	file "../Source/prod.c",line 5188,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5188| 
        MOV       AL,*-SP[58]           ; [CPU_] |5188| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5188| 
        MOV       AL,*-SP[57]           ; [CPU_] |5188| 
	.dwpsn	file "../Source/prod.c",line 5189,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5189| 
        MOV       *-SP[61],#4           ; [CPU_] |5189| 
	.dwpsn	file "../Source/prod.c",line 5191,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5191| 
        ; branch occurs ; [] |5191| 
$C$L185:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5126,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5126| 
        B         $C$L320,LO            ; [CPU_] |5126| 
        ; branchcc occurs ; [] |5126| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5132,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5132| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5134,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5134| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5134| 
	.dwpsn	file "../Source/prod.c",line 5135,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5135| 
        MOV       *XAR5++,AL            ; [CPU_] |5135| 
	.dwpsn	file "../Source/prod.c",line 5136,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5136| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5136| 
        MOV       *XAR1++,AL            ; [CPU_] |5136| 
	.dwpsn	file "../Source/prod.c",line 5137,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5137| 
        MOV       *XAR5++,AL            ; [CPU_] |5137| 
	.dwpsn	file "../Source/prod.c",line 5133,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5133| 
        ; branchcc occurs ; [] |5133| 
	.dwpsn	file "../Source/prod.c",line 5131,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5131| 
	.dwpsn	file "../Source/prod.c",line 5137,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |5137| 
	.dwpsn	file "../Source/prod.c",line 5131,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5131| 
        ; branchcc occurs ; [] |5131| 
	.dwpsn	file "../Source/prod.c",line 5142,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5142| 
        MOVL      ACC,XAR4              ; [CPU_] |5142| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5142| 
        MOVL      XAR6,ACC              ; [CPU_] |5142| 
        MOV       AL,*XAR7              ; [CPU_] |5142| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5142| 
	.dwpsn	file "../Source/prod.c",line 5143,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5143| 
        MOVL      XAR6,XAR4             ; [CPU_] |5143| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5143| 
        MOVL      XAR4,ACC              ; [CPU_] |5143| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5143| 
        ANDB      AL,#0xff              ; [CPU_] |5143| 
        MOV       *XAR5++,AL            ; [CPU_] |5143| 
	.dwpsn	file "../Source/prod.c",line 5144,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5144| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5144| 
        MOVL      XAR4,ACC              ; [CPU_] |5144| 
	.dwpsn	file "../Source/prod.c",line 5142,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5142| 
	.dwpsn	file "../Source/prod.c",line 5144,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5144| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5144| 
	.dwpsn	file "../Source/prod.c",line 5145,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5145| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5145| 
        MOVL      XAR4,ACC              ; [CPU_] |5145| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5145| 
        LSR       AL,8                  ; [CPU_] |5145| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5145| 
	.dwpsn	file "../Source/prod.c",line 5144,column 5,is_stmt,isa 0
        ADD       *-SP[61],#2           ; [CPU_] |5144| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5150,column 5,is_stmt,isa 0
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5150| 
        ; call occurs [#_ad7738_setcal] ; [] |5150| 
	.dwpsn	file "../Source/prod.c",line 5151,column 5,is_stmt,isa 0
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_velf_rst")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5151| 
        ; call occurs [#_velf_rst] ; [] |5151| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5155,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5155| 
        ; branch occurs ; [] |5155| 
$C$L189:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5087,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5087| 
        B         $C$L320,LO            ; [CPU_] |5087| 
        ; branchcc occurs ; [] |5087| 
        MOVL      ACC,XAR4              ; [CPU_] |5087| 
        MOVL      XAR0,#66              ; [CPU_] |5087| 
        ADDB      ACC,#2                ; [CPU_] |5087| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5087| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5087| 
        B         $C$L320,LT            ; [CPU_] |5087| 
        ; branchcc occurs ; [] |5087| 
        MOVL      XAR5,XAR4             ; [CPU_] |5087| 
        MOVL      XAR0,#66              ; [CPU_] |5087| 
        CMPB      AL,#20                ; [CPU_] |5087| 
        ADDB      XAR5,#2               ; [CPU_] |5087| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5087| 
        B         $C$L320,GEQ           ; [CPU_] |5087| 
        ; branchcc occurs ; [] |5087| 
	.dwpsn	file "../Source/prod.c",line 5091,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5091| 
	.dwpsn	file "../Source/prod.c",line 5092,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5092| 
	.dwpsn	file "../Source/prod.c",line 5094,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5094| 
	.dwpsn	file "../Source/prod.c",line 5092,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5092| 
	.dwpsn	file "../Source/prod.c",line 5094,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5094| 
        ADDB      ACC,#2                ; [CPU_] |5094| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5094| 
        MOVL      XAR0,#40              ; [CPU_] |5094| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5094| 
        MOV       T,*-SP[57]            ; [CPU_] |5094| 
        MOVB      AL,#152               ; [CPU_] |5094| 
        MPYU      ACC,T,AL              ; [CPU_] |5094| 
        ADDL      ACC,XAR6              ; [CPU_] |5094| 
        ADDB      ACC,#224              ; [CPU_] |5094| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5094| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5096,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5096| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5096| 
	.dwpsn	file "../Source/prod.c",line 5097,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5097| 
        MOV       *XAR5++,AL            ; [CPU_] |5097| 
	.dwpsn	file "../Source/prod.c",line 5098,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5098| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5098| 
        MOV       *XAR7++,AL            ; [CPU_] |5098| 
	.dwpsn	file "../Source/prod.c",line 5099,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5099| 
        MOV       *XAR5++,AL            ; [CPU_] |5099| 
	.dwpsn	file "../Source/prod.c",line 5095,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5095| 
        ; branchcc occurs ; [] |5095| 
	.dwpsn	file "../Source/prod.c",line 5104,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5104| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5104| 
        MOVB      AL,#152               ; [CPU_] |5104| 
        MPYU      ACC,T,AL              ; [CPU_] |5104| 
        ADDL      ACC,XAR6              ; [CPU_] |5104| 
        MOVL      XAR1,ACC              ; [CPU_] |5104| 
        MOVB      XAR0,#125             ; [CPU_] |5104| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5104| 
        CMPB      AL,#247               ; [CPU_] |5104| 
        B         $C$L193,NEQ           ; [CPU_] |5104| 
        ; branchcc occurs ; [] |5104| 
	.dwpsn	file "../Source/prod.c",line 5106,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5106| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5106| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5106| 
        MOV       AL,#0                 ; [CPU_] |5106| 
        MOV       AH,#17096             ; [CPU_] |5106| 
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5106| 
        ; call occurs [#FS$$DIV] ; [] |5106| 
        MOVB      XAR0,#126             ; [CPU_] |5106| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5106| 
        MOVL      XAR0,#40              ; [CPU_] |5106| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5106| 
	.dwpsn	file "../Source/prod.c",line 5109,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5109| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5110,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5110| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5110| 
        CMPL      ACC,XAR6              ; [CPU_] |5110| 
        B         $C$L192,NEQ           ; [CPU_] |5110| 
        ; branchcc occurs ; [] |5110| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5113,column 8,is_stmt,isa 0
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5113| 
        ; call occurs [#_ad7738_setcal] ; [] |5113| 
        MOVL      XAR0,#78              ; [CPU_] |5113| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5113| 
	.dwpsn	file "../Source/prod.c",line 5114,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5114| 
        MOVL      XAR4,ACC              ; [CPU_] |5114| 
        MOVL      XAR0,#88              ; [CPU_] |5114| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5114| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5114| 
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5114| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5114| 
        MOVL      XAR0,#88              ; [CPU_] |5114| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5114| 
	.dwpsn	file "../Source/prod.c",line 5115,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5115| 
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5115| 
        ; call occurs [#_ad7738_resetvall] ; [] |5115| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5109,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5109| 
        ADDB      XAR1,#10              ; [CPU_] |5109| 
        MOV       AL,*-SP[58]           ; [CPU_] |5109| 
        CMPB      AL,#4                 ; [CPU_] |5109| 
        B         $C$L191,LO            ; [CPU_] |5109| 
        ; branchcc occurs ; [] |5109| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5098,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5098| 
	.dwpsn	file "../Source/prod.c",line 5122,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |5122| 
        ; branch occurs ; [] |5122| 
$C$L194:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4986,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4986| 
        B         $C$L320,LO            ; [CPU_] |4986| 
        ; branchcc occurs ; [] |4986| 
        MOVL      ACC,XAR4              ; [CPU_] |4986| 
        MOVL      XAR0,#66              ; [CPU_] |4986| 
        ADDB      ACC,#2                ; [CPU_] |4986| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4986| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4986| 
        B         $C$L320,LT            ; [CPU_] |4986| 
        ; branchcc occurs ; [] |4986| 
        MOVL      XAR5,XAR4             ; [CPU_] |4986| 
        MOVL      XAR0,#66              ; [CPU_] |4986| 
        CMPB      AL,#20                ; [CPU_] |4986| 
        ADDB      XAR5,#2               ; [CPU_] |4986| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4986| 
        B         $C$L320,GEQ           ; [CPU_] |4986| 
        ; branchcc occurs ; [] |4986| 
	.dwpsn	file "../Source/prod.c",line 4991,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |4991| 
        MOVL      XAR0,#66              ; [CPU_] |4991| 
        MOV       *-SP[57],AL           ; [CPU_] |4991| 
        ADDB      XAR5,#2               ; [CPU_] |4991| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4991| 
	.dwpsn	file "../Source/prod.c",line 4992,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |4992| 
        MOV       AL,AR6                ; [CPU_] |4992| 
        CMPB      AL,#247               ; [CPU_] |4992| 
        B         $C$L195,EQ            ; [CPU_] |4992| 
        ; branchcc occurs ; [] |4992| 
	.dwpsn	file "../Source/prod.c",line 4994,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4994| 
        MOVL      XAR0,#66              ; [CPU_] |4994| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4994| 
        MOVL      XAR0,#40              ; [CPU_] |4994| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4994| 
        MOVB      AL,#152               ; [CPU_] |4994| 
        MOV       T,*-SP[57]            ; [CPU_] |4994| 
        MPYU      ACC,T,AL              ; [CPU_] |4994| 
        ADDL      ACC,XAR7              ; [CPU_] |4994| 
        MOVL      XAR4,ACC              ; [CPU_] |4994| 
        MOVB      XAR0,#124             ; [CPU_] |4994| 
        MOV       PH,#0                 ; [CPU_] |4994| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4994| 
        ANDB      AL,#0xf0              ; [CPU_] |4994| 
        MOVU      ACC,AL                ; [CPU_] |4994| 
        MOVL      XAR7,ACC              ; [CPU_] |4994| 
        MOV       AL,AR6                ; [CPU_] |4994| 
        ANDB      AL,#240               ; [CPU_] |4994| 
        MOV       PL,AL                 ; [CPU_] |4994| 
        MOVL      ACC,XAR7              ; [CPU_] |4994| 
        CMPL      ACC,P                 ; [CPU_] |4994| 
        B         $C$L320,NEQ           ; [CPU_] |4994| 
        ; branchcc occurs ; [] |4994| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5000,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5000| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5000| 
        MOVB      AL,#152               ; [CPU_] |5000| 
        MOV       T,*-SP[57]            ; [CPU_] |5000| 
        MPYU      ACC,T,AL              ; [CPU_] |5000| 
        ADDL      ACC,XAR7              ; [CPU_] |5000| 
        MOVL      XAR1,ACC              ; [CPU_] |5000| 
        MOVB      XAR0,#125             ; [CPU_] |5000| 
	.dwpsn	file "../Source/prod.c",line 5001,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5001| 
	.dwpsn	file "../Source/prod.c",line 5000,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5000| 
	.dwpsn	file "../Source/prod.c",line 5001,column 5,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5001| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5001| 
	.dwpsn	file "../Source/prod.c",line 5002,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5002| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5002| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5002| 
        MOV       AL,AR6                ; [CPU_] |5002| 
        MOV       *-SP[61],#4           ; [CPU_] |5002| 
	.dwpsn	file "../Source/prod.c",line 5004,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5004| 
        B         $C$L205,EQ            ; [CPU_] |5004| 
        ; branchcc occurs ; [] |5004| 
	.dwpsn	file "../Source/prod.c",line 5007,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5007| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5007| 
        B         $C$L204,EQ            ; [CPU_] |5007| 
        ; branchcc occurs ; [] |5007| 
	.dwpsn	file "../Source/prod.c",line 5011,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5011| 
        CMPB      AL,#34                ; [CPU_] |5011| 
        B         $C$L196,GT            ; [CPU_] |5011| 
        ; branchcc occurs ; [] |5011| 
        CMPB      AL,#34                ; [CPU_] |5011| 
        B         $C$L200,EQ            ; [CPU_] |5011| 
        ; branchcc occurs ; [] |5011| 
        CMPB      AL,#16                ; [CPU_] |5011| 
        B         $C$L203,EQ            ; [CPU_] |5011| 
        ; branchcc occurs ; [] |5011| 
        CMPB      AL,#17                ; [CPU_] |5011| 
        B         $C$L202,EQ            ; [CPU_] |5011| 
        ; branchcc occurs ; [] |5011| 
        B         $C$L204,UNC           ; [CPU_] |5011| 
        ; branch occurs ; [] |5011| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5011| 
        B         $C$L198,EQ            ; [CPU_] |5011| 
        ; branchcc occurs ; [] |5011| 
        CMPB      AL,#36                ; [CPU_] |5011| 
        B         $C$L204,NEQ           ; [CPU_] |5011| 
        ; branchcc occurs ; [] |5011| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5052,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5052| 
        B         $C$L197,EQ            ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
        CMPB      AL,#35                ; [CPU_] |5052| 
        B         $C$L207,NEQ           ; [CPU_] |5052| 
        ; branchcc occurs ; [] |5052| 
	.dwpsn	file "../Source/prod.c",line 5057,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5057| 
        MOV       AH,#15820             ; [CPU_] |5057| 
	.dwpsn	file "../Source/prod.c",line 5058,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5058| 
        ; branch occurs ; [] |5058| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5054,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5054| 
        MOV       AH,#15649             ; [CPU_] |5054| 
	.dwpsn	file "../Source/prod.c",line 5055,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5055| 
        ; branch occurs ; [] |5055| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5040,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5040| 
        B         $C$L199,EQ            ; [CPU_] |5040| 
        ; branchcc occurs ; [] |5040| 
        CMPB      AL,#36                ; [CPU_] |5040| 
        B         $C$L207,NEQ           ; [CPU_] |5040| 
        ; branchcc occurs ; [] |5040| 
	.dwpsn	file "../Source/prod.c",line 5045,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5045| 
        MOV       AH,#16672             ; [CPU_] |5045| 
	.dwpsn	file "../Source/prod.c",line 5046,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5046| 
        ; branch occurs ; [] |5046| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5042,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5042| 
        MOV       AH,#16073             ; [CPU_] |5042| 
	.dwpsn	file "../Source/prod.c",line 5043,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5043| 
        ; branch occurs ; [] |5043| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5028,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5028| 
        B         $C$L201,EQ            ; [CPU_] |5028| 
        ; branchcc occurs ; [] |5028| 
        CMPB      AL,#36                ; [CPU_] |5028| 
        B         $C$L207,NEQ           ; [CPU_] |5028| 
        ; branchcc occurs ; [] |5028| 
	.dwpsn	file "../Source/prod.c",line 5033,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5033| 
        MOV       AH,#16843             ; [CPU_] |5033| 
	.dwpsn	file "../Source/prod.c",line 5034,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5034| 
        ; branch occurs ; [] |5034| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5030,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5030| 
        MOV       AH,#16418             ; [CPU_] |5030| 
	.dwpsn	file "../Source/prod.c",line 5031,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5031| 
        ; branch occurs ; [] |5031| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5021,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5021| 
        B         $C$L207,NEQ           ; [CPU_] |5021| 
        ; branchcc occurs ; [] |5021| 
	.dwpsn	file "../Source/prod.c",line 5022,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5022| 
        MOV       AH,#16397             ; [CPU_] |5022| 
        B         $C$L206,UNC           ; [CPU_] |5022| 
        ; branch occurs ; [] |5022| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5014,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5014| 
        B         $C$L207,NEQ           ; [CPU_] |5014| 
        ; branchcc occurs ; [] |5014| 
	.dwpsn	file "../Source/prod.c",line 5015,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5015| 
        MOV       AH,#16104             ; [CPU_] |5015| 
        B         $C$L206,UNC           ; [CPU_] |5015| 
        ; branch occurs ; [] |5015| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5009,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5010,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5010| 
        ; branch occurs ; [] |5010| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5005,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5005| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5005| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5005| 
        MOV       AL,#0                 ; [CPU_] |5005| 
        MOV       AH,#17096             ; [CPU_] |5005| 
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5005| 
        ; call occurs [#FS$$DIV] ; [] |5005| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5005| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5071,column 10,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5071| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5072,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5072| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5072| 
        CMPL      ACC,XAR6              ; [CPU_] |5072| 
        B         $C$L209,NEQ           ; [CPU_] |5072| 
        ; branchcc occurs ; [] |5072| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5073,column 7,is_stmt,isa 0
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_update_units")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5073| 
        ; call occurs [#_update_units] ; [] |5073| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5075,column 7,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5075| 
        ; call occurs [#_ad7738_setcal] ; [] |5075| 
        MOVL      XAR0,#78              ; [CPU_] |5075| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5075| 
	.dwpsn	file "../Source/prod.c",line 5076,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5076| 
        MOVL      XAR4,ACC              ; [CPU_] |5076| 
        MOVL      XAR0,#88              ; [CPU_] |5076| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5076| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5076| 
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5076| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5076| 
        MOVL      XAR0,#88              ; [CPU_] |5076| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5076| 
	.dwpsn	file "../Source/prod.c",line 5077,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5077| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5077| 
        ; call occurs [#_ad7738_resetvall] ; [] |5077| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5071,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5071| 
        ADDB      XAR1,#10              ; [CPU_] |5071| 
        MOV       AL,*-SP[58]           ; [CPU_] |5071| 
        CMPB      AL,#4                 ; [CPU_] |5071| 
        B         $C$L208,LO            ; [CPU_] |5071| 
        ; branchcc occurs ; [] |5071| 
        B         $C$L304,UNC           ; [CPU_] |5071| 
        ; branch occurs ; [] |5071| 
$C$L210:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4958,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4958| 
        B         $C$L320,LO            ; [CPU_] |4958| 
        ; branchcc occurs ; [] |4958| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4958| 
        MOVL      XAR0,#66              ; [CPU_] |4958| 
        MOVL      ACC,XAR7              ; [CPU_] |4958| 
        ADDB      ACC,#2                ; [CPU_] |4958| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4958| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4958| 
        B         $C$L320,LT            ; [CPU_] |4958| 
        ; branchcc occurs ; [] |4958| 
        ADDB      XAR4,#2               ; [CPU_] |4958| 
        MOVL      XAR0,#66              ; [CPU_] |4958| 
        CMPB      AL,#20                ; [CPU_] |4958| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4958| 
        B         $C$L320,GEQ           ; [CPU_] |4958| 
        ; branchcc occurs ; [] |4958| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4958| 
        MOVB      AH,#4                 ; [CPU_] |4958| 
        ADD       AH,AR6                ; [CPU_] |4958| 
        CMP       AH,*-SP[59]           ; [CPU_] |4958| 
        B         $C$L320,HI            ; [CPU_] |4958| 
        ; branchcc occurs ; [] |4958| 
	.dwpsn	file "../Source/prod.c",line 4963,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4963| 
	.dwpsn	file "../Source/prod.c",line 4964,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4964| 
        MOVL      XAR0,#66              ; [CPU_] |4964| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |4964| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4964| 
        MOV       AL,*-SP[57]           ; [CPU_] |4964| 
        MOV       @_buff$1+2,AL         ; [CPU_] |4964| 
        MOV       AL,AR6                ; [CPU_] |4964| 
	.dwpsn	file "../Source/prod.c",line 4966,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4966| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |4966| 
        B         $C$L211,HIS           ; [CPU_] |4966| 
        ; branchcc occurs ; [] |4966| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4966| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 4968,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4968| 
        MOVB      XAR5,#0               ; [CPU_] |4968| 
	.dwpsn	file "../Source/prod.c",line 4968,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |4968| 
        ; branchcc occurs ; [] |4968| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 4969,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4969| 
	.dwpsn	file "../Source/prod.c",line 4968,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4968| 
	.dwpsn	file "../Source/prod.c",line 4969,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4969| 
	.dwpsn	file "../Source/prod.c",line 4968,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4968| 
	.dwpsn	file "../Source/prod.c",line 4969,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4969| 
	.dwpsn	file "../Source/prod.c",line 4968,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4968| 
        B         $C$L212,HI            ; [CPU_] |4968| 
        ; branchcc occurs ; [] |4968| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 4971,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4971| 
        MOVB      AL,#152               ; [CPU_] |4971| 
        MOV       T,*-SP[57]            ; [CPU_] |4971| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4971| 
        MPYU      P,T,AL                ; [CPU_] |4971| 
        MOVL      ACC,P                 ; [CPU_] |4971| 
        ADD       ACC,AR5               ; [CPU_] |4971| 
        ADDL      ACC,XAR6              ; [CPU_] |4971| 
        MOVL      XAR4,ACC              ; [CPU_] |4971| 
        MOVB      XAR0,#98              ; [CPU_] |4971| 
	.dwpsn	file "../Source/prod.c",line 4975,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |4975| 
	.dwpsn	file "../Source/prod.c",line 4971,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4971| 
	.dwpsn	file "../Source/prod.c",line 4975,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |4975| 
        MOVL      XAR4,ACC              ; [CPU_] |4975| 
        MOVL      XAR1,ACC              ; [CPU_] |4975| 
        ADDB      XAR4,#98              ; [CPU_] |4975| 
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_strlen")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4975| 
        ; call occurs [#_strlen] ; [] |4975| 
	.dwpsn	file "../Source/prod.c",line 4976,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4976| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4976| 
	.dwpsn	file "../Source/prod.c",line 4977,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4976,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |4976| 
	.dwpsn	file "../Source/prod.c",line 4977,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |4977| 
        ; branchcc occurs ; [] |4977| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4977,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4977| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 4978,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |4978| 
	.dwpsn	file "../Source/prod.c",line 4977,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4978,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |4978| 
        INC       *-SP[61]              ; [CPU_] |4978| 
	.dwpsn	file "../Source/prod.c",line 4977,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |4977| 
        B         $C$L214,HI            ; [CPU_] |4977| 
        ; branchcc occurs ; [] |4977| 
        B         $C$L304,UNC           ; [CPU_] |4977| 
        ; branch occurs ; [] |4977| 
$C$L215:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5516,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5516| 
        B         $C$L320,LO            ; [CPU_] |5516| 
        ; branchcc occurs ; [] |5516| 
	.dwpsn	file "../Source/prod.c",line 5521,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5521| 
	.dwpsn	file "../Source/prod.c",line 5522,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5522| 
	.dwpsn	file "../Source/prod.c",line 5521,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5521| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5521| 
        MOV       *-SP[57],AL           ; [CPU_] |5521| 
	.dwpsn	file "../Source/prod.c",line 5522,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5522| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5522| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5522| 
	.dwpsn	file "../Source/prod.c",line 5524,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5524| 
        SUBB      XAR5,#24              ; [CPU_U] |5524| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5524| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5526,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5526| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5526| 
	.dwpsn	file "../Source/prod.c",line 5527,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5527| 
        MOV       *XAR1++,AL            ; [CPU_] |5527| 
	.dwpsn	file "../Source/prod.c",line 5528,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5528| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5528| 
        MOV       *XAR5++,AL            ; [CPU_] |5528| 
	.dwpsn	file "../Source/prod.c",line 5529,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5529| 
        MOV       *XAR1++,AL            ; [CPU_] |5529| 
	.dwpsn	file "../Source/prod.c",line 5525,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5525| 
        ; branchcc occurs ; [] |5525| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5533,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5533| 
        B         $C$L320,HIS           ; [CPU_] |5533| 
        ; branchcc occurs ; [] |5533| 
        MOVL      XAR0,#40              ; [CPU_] |5533| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5533| 
        MOVB      AL,#12                ; [CPU_] |5533| 
        MOV       T,*-SP[57]            ; [CPU_] |5533| 
        MPYU      ACC,T,AL              ; [CPU_] |5533| 
        ADDL      ACC,XAR6              ; [CPU_] |5533| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5533| 
        MOVL      XAR4,ACC              ; [CPU_] |5533| 
        MOVL      XAR0,#88              ; [CPU_] |5533| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5533| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5533| 
        CMPB      AL,#7                 ; [CPU_] |5533| 
        B         $C$L320,NEQ           ; [CPU_] |5533| 
        ; branchcc occurs ; [] |5533| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5533| 
        MOV       *-SP[47],#0           ; [CPU_] |5533| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5533| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5533| 
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5533| 
        ; call occurs [#FS$$CMP] ; [] |5533| 
        CMPB      AL,#0                 ; [CPU_] |5533| 
        B         $C$L217,GEQ           ; [CPU_] |5533| 
        ; branchcc occurs ; [] |5533| 
        MOV       *-SP[47],#1           ; [CPU_] |5533| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5533| 
        ; branchcc occurs ; [] |5533| 
        MOV       AL,#0                 ; [CPU_] |5533| 
        MOV       AH,#16672             ; [CPU_] |5533| 
        MOV       *-SP[47],#0           ; [CPU_] |5533| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5533| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5533| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5533| 
        ; call occurs [#FS$$CMP] ; [] |5533| 
        CMPB      AL,#0                 ; [CPU_] |5533| 
        B         $C$L218,LEQ           ; [CPU_] |5533| 
        ; branchcc occurs ; [] |5533| 
        MOV       *-SP[47],#1           ; [CPU_] |5533| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L320,NEQ           ; [CPU_] |5533| 
        ; branchcc occurs ; [] |5533| 
	.dwpsn	file "../Source/prod.c",line 5540,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5540| 
        MOV       AH,#0                 ; [CPU_] |5540| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5540| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5540| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5540| 
        ; call occurs [#FS$$CMP] ; [] |5540| 
        CMPB      AL,#0                 ; [CPU_] |5540| 
        B         $C$L219,GEQ           ; [CPU_] |5540| 
        ; branchcc occurs ; [] |5540| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5540| 
        MOVL      XAR0,#88              ; [CPU_] |5540| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5540| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5540| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5540| 
        B         $C$L220,UNC           ; [CPU_] |5540| 
        ; branch occurs ; [] |5540| 
$C$L219:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5540| 
        MOVL      XAR0,#88              ; [CPU_] |5540| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5540| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5540| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5540| 
$C$L220:    
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5540| 
        ; call occurs [#FS$$MPY] ; [] |5540| 
        MOVL      XAR0,#88              ; [CPU_] |5540| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5540| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5540| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5540| 
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5540| 
        ; call occurs [#FS$$ADD] ; [] |5540| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5540| 
        ; call occurs [#FS$$TOLL] ; [] |5540| 
	.dwpsn	file "../Source/prod.c",line 5547,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5547| 
	.dwpsn	file "../Source/prod.c",line 5540,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5540| 
	.dwpsn	file "../Source/prod.c",line 5528,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5528| 
	.dwpsn	file "../Source/prod.c",line 5540,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5540| 
	.dwpsn	file "../Source/prod.c",line 5547,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5547| 
        CMP64     ACC:P                 ; [CPU_] |5547| 
        B         $C$L222,LEQ           ; [CPU_] |5547| 
        ; branchcc occurs ; [] |5547| 
	.dwpsn	file "../Source/prod.c",line 5549,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5549| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5549| 
        MOV       *-SP[2],#0            ; [CPU_] |5549| 
        MOV       *-SP[1],#0            ; [CPU_] |5549| 
        MOVL      P,*-SP[32]            ; [CPU_] |5549| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5549| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$710, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5549| 
        ; call occurs [#LL$$CMP] ; [] |5549| 
        CMPB      AL,#0                 ; [CPU_] |5549| 
        B         $C$L221,GEQ           ; [CPU_] |5549| 
        ; branchcc occurs ; [] |5549| 
	.dwpsn	file "../Source/prod.c",line 5552,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5552| 
        MOV       *-SP[35],AL           ; [CPU_] |5552| 
        B         $C$L223,UNC           ; [CPU_] |5552| 
        ; branch occurs ; [] |5552| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5550,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5550| 
	.dwpsn	file "../Source/prod.c",line 5551,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5551| 
        ; branch occurs ; [] |5551| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5548,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5548| 
$C$L223:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5555,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5555| 
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5555| 
        ; call occurs [#_mcbsp_xmit] ; [] |5555| 
	.dwpsn	file "../Source/prod.c",line 5556,column 5,is_stmt,isa 0
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_latch_dac")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5556| 
        ; call occurs [#_latch_dac] ; [] |5556| 
	.dwpsn	file "../Source/prod.c",line 5559,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5559| 
        ANDB      AL,#0xff              ; [CPU_] |5559| 
        MOV       *XAR1++,AL            ; [CPU_] |5559| 
	.dwpsn	file "../Source/prod.c",line 5560,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5560| 
        LSR       AL,8                  ; [CPU_] |5560| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5560| 
	.dwpsn	file "../Source/prod.c",line 5563,column 5,is_stmt,isa 0
        B         $C$L735,UNC           ; [CPU_] |5563| 
        ; branch occurs ; [] |5563| 
$C$L224:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5452,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5452| 
        B         $C$L320,LO            ; [CPU_] |5452| 
        ; branchcc occurs ; [] |5452| 
	.dwpsn	file "../Source/prod.c",line 5457,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5457| 
$C$L225:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5457| 
$C$L226:    
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5457| 
        ; call occurs [#_ad7738_resetvall] ; [] |5457| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5460,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5460| 
        MOVL      XAR0,#66              ; [CPU_] |5460| 
        ADDB      ACC,#2                ; [CPU_] |5460| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5460| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5460| 
        ANDB      AL,#0x0f              ; [CPU_] |5460| 
	.dwpsn	file "../Source/prod.c",line 5462,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5462| 
        ; branch occurs ; [] |5462| 
$C$L228:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5438,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5438| 
        B         $C$L320,LO            ; [CPU_] |5438| 
        ; branchcc occurs ; [] |5438| 
	.dwpsn	file "../Source/prod.c",line 5443,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5443| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5443| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5443| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5443| 
	.dwpsn	file "../Source/prod.c",line 5448,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5448| 
        ; branch occurs ; [] |5448| 
$C$L229:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5502,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5502| 
        B         $C$L320,LO            ; [CPU_] |5502| 
        ; branchcc occurs ; [] |5502| 
	.dwpsn	file "../Source/prod.c",line 5507,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5507| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5507| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5507| 
        ; call occurs [#_shunt_switch] ; [] |5507| 
	.dwpsn	file "../Source/prod.c",line 5512,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5512| 
        ; branch occurs ; [] |5512| 
$C$L230:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5486,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5486| 
        B         $C$L320,LO            ; [CPU_] |5486| 
        ; branchcc occurs ; [] |5486| 
	.dwpsn	file "../Source/prod.c",line 5491,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5491| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5491| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5491| 
        ; call occurs [#_ad7738_resettare] ; [] |5491| 
	.dwpsn	file "../Source/prod.c",line 5492,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5492| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5492| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5492| 
	.dwpsn	file "../Source/prod.c",line 5493,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5493| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5498| 
        ; branch occurs ; [] |5498| 
$C$L231:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5466,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5466| 
        B         $C$L320,LO            ; [CPU_] |5466| 
        ; branchcc occurs ; [] |5466| 
	.dwpsn	file "../Source/prod.c",line 5471,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5471| 
	.dwpsn	file "../Source/prod.c",line 5472,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5472| 
$C$L232:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5473,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5473| 
        B         $C$L233,EQ            ; [CPU_] |5473| 
        ; branchcc occurs ; [] |5473| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5474,column 7,is_stmt,isa 0
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5474| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5474| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5472,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5472| 
	.dwpsn	file "../Source/prod.c",line 5476,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5476| 
        MOV       *-SP[47],AL           ; [CPU_] |5476| 
	.dwpsn	file "../Source/prod.c",line 5472,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5472| 
        CMPB      AL,#4                 ; [CPU_] |5472| 
        B         $C$L232,LT            ; [CPU_] |5472| 
        ; branchcc occurs ; [] |5472| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5480,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5480| 
        ANDB      AL,#0x0f              ; [CPU_] |5480| 
$C$L234:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5480| 
        MOVL      XAR0,#66              ; [CPU_] |5480| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5480| 
	.dwpsn	file "../Source/prod.c",line 5482,column 5,is_stmt,isa 0
        B         $C$L237,UNC           ; [CPU_] |5482| 
        ; branch occurs ; [] |5482| 
$C$L235:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5423,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5423| 
        B         $C$L320,LO            ; [CPU_] |5423| 
        ; branchcc occurs ; [] |5423| 
	.dwpsn	file "../Source/prod.c",line 5428,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5428| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5428| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5428| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5428| 
	.dwpsn	file "../Source/prod.c",line 5434,column 5,is_stmt,isa 0
        B         $C$L225,UNC           ; [CPU_] |5434| 
        ; branch occurs ; [] |5434| 
$C$L236:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5400,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5400| 
        B         $C$L239,LO            ; [CPU_] |5400| 
        ; branchcc occurs ; [] |5400| 
	.dwpsn	file "../Source/prod.c",line 5412,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5412| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5412| 
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5412| 
        ; call occurs [#_ad7738_resettare] ; [] |5412| 
	.dwpsn	file "../Source/prod.c",line 5413,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5413| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5413| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5413| 
	.dwpsn	file "../Source/prod.c",line 5414,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5414| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5414| 
        ; call occurs [#_ad7738_resetvall] ; [] |5414| 
	.dwpsn	file "../Source/prod.c",line 5417,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5417| 
        MOVL      ACC,XAR1              ; [CPU_] |5417| 
        ADDB      ACC,#2                ; [CPU_] |5417| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5417| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5417| 
        ANDB      AL,#0xff              ; [CPU_] |5417| 
$C$L237:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5417| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5417| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5415,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5415| 
	.dwpsn	file "../Source/prod.c",line 5419,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5419| 
        ; branch occurs ; [] |5419| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5402,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5402| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5402| 
        ; call occurs [#_ad7738_resettare] ; [] |5402| 
	.dwpsn	file "../Source/prod.c",line 5403,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5403| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5403| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5403| 
	.dwpsn	file "../Source/prod.c",line 5404,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5404| 
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5404| 
        ; call occurs [#_ad7738_resetvall] ; [] |5404| 
	.dwpsn	file "../Source/prod.c",line 5407,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5407| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5407| 
	.dwpsn	file "../Source/prod.c",line 5409,column 6,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5409| 
        ; branch occurs ; [] |5409| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5575,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5575| 
        MOV       *-SP[47],#0           ; [CPU_] |5575| 
	.dwpsn	file "../Source/prod.c",line 5576,column 5,is_stmt,isa 0
        B         $C$L317,EQ            ; [CPU_] |5576| 
        ; branchcc occurs ; [] |5576| 
	.dwpsn	file "../Source/prod.c",line 5578,column 6,is_stmt,isa 0
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5578| 
        ; call occurs [#_lcd_clear] ; [] |5578| 
	.dwpsn	file "../Source/prod.c",line 5579,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5579| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5579| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5579| 
        ; call occurs [#_lcd_puts] ; [] |5579| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5582,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5582| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_delay_us")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5582| 
        ; call occurs [#_delay_us] ; [] |5582| 
	.dwpsn	file "../Source/prod.c",line 5581,column 18,is_stmt,isa 0
        BANZ      $C$L241,AR3--         ; [CPU_] |5581| 
        ; branchcc occurs ; [] |5581| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5586,column 6,is_stmt,isa 0
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_conf_write")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5586| 
        ; call occurs [#_conf_write] ; [] |5586| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5589,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5589| 
        B         $C$L242,NEQ           ; [CPU_] |5589| 
        ; branchcc occurs ; [] |5589| 
	.dwpsn	file "../Source/prod.c",line 5590,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5590| 
        MOVB      AL,#16                ; [CPU_] |5590| 
        SPM       #0                    ; [CPU_] 
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5590| 
        ; call occurs [#_lcd_puts] ; [] |5590| 
	.dwpsn	file "../Source/prod.c",line 5591,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5591| 
	.dwpsn	file "../Source/prod.c",line 5592,column 6,is_stmt,isa 0
        B         $C$L243,UNC           ; [CPU_] |5592| 
        ; branch occurs ; [] |5592| 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5593,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5593| 
        MOVB      AL,#16                ; [CPU_] |5593| 
        SPM       #0                    ; [CPU_] 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5593| 
        ; call occurs [#_lcd_puts] ; [] |5593| 
	.dwpsn	file "../Source/prod.c",line 5594,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5594| 
$C$L243:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L244:    
	.dwpsn	file "../Source/prod.c",line 5598,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5598| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_delay_us")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5598| 
        ; call occurs [#_delay_us] ; [] |5598| 
	.dwpsn	file "../Source/prod.c",line 5597,column 18,is_stmt,isa 0
        BANZ      $C$L244,AR3--         ; [CPU_] |5597| 
        ; branchcc occurs ; [] |5597| 
        B         $C$L316,UNC           ; [CPU_] |5597| 
        ; branch occurs ; [] |5597| 
$C$L245:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4345,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4345| 
        B         $C$L320,LO            ; [CPU_] |4345| 
        ; branchcc occurs ; [] |4345| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4345| 
        MOVL      XAR0,#66              ; [CPU_] |4345| 
        MOVL      ACC,XAR7              ; [CPU_] |4345| 
        ADDB      ACC,#2                ; [CPU_] |4345| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4345| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4345| 
        B         $C$L320,LT            ; [CPU_] |4345| 
        ; branchcc occurs ; [] |4345| 
        ADDB      XAR4,#2               ; [CPU_] |4345| 
        MOVL      XAR0,#66              ; [CPU_] |4345| 
        CMPB      AL,#4                 ; [CPU_] |4345| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4345| 
        B         $C$L320,GEQ           ; [CPU_] |4345| 
        ; branchcc occurs ; [] |4345| 
	.dwpsn	file "../Source/prod.c",line 4350,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4350| 
	.dwpsn	file "../Source/prod.c",line 4351,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4351| 
	.dwpsn	file "../Source/prod.c",line 4354,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4354| 
	.dwpsn	file "../Source/prod.c",line 4351,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4351| 
	.dwpsn	file "../Source/prod.c",line 4354,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4354| 
        ADDB      ACC,#2                ; [CPU_] |4354| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4354| 
        MOVL      XAR0,#40              ; [CPU_] |4354| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4354| 
        MOV       T,*-SP[58]            ; [CPU_] |4354| 
        MOVB      AL,#10                ; [CPU_] |4354| 
        MPYU      ACC,T,AL              ; [CPU_] |4354| 
        ADDL      ACC,XAR6              ; [CPU_] |4354| 
        ADDB      ACC,#46               ; [CPU_] |4354| 
        MOVL      XAR4,ACC              ; [CPU_] |4354| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 4356,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4356| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4356| 
        ADDB      XAR7,#1               ; [CPU_] |4356| 
	.dwpsn	file "../Source/prod.c",line 4357,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4357| 
        ADD       *XAR4++,AL            ; [CPU_] |4357| 
	.dwpsn	file "../Source/prod.c",line 4355,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |4355| 
        ; branchcc occurs ; [] |4355| 
	.dwpsn	file "../Source/prod.c",line 4360,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4360| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4360| 
        MOVB      AL,#10                ; [CPU_] |4360| 
        MPYU      ACC,T,AL              ; [CPU_] |4360| 
        ADDL      ACC,XAR6              ; [CPU_] |4360| 
        MOVL      XAR5,ACC              ; [CPU_] |4360| 
        ADDB      ACC,#48               ; [CPU_] |4360| 
        MOVL      XAR4,ACC              ; [CPU_] |4360| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4360| 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4362,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4362| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4362| 
        ADDB      XAR7,#1               ; [CPU_] |4362| 
	.dwpsn	file "../Source/prod.c",line 4363,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4363| 
        ADD       *XAR4++,AL            ; [CPU_] |4363| 
	.dwpsn	file "../Source/prod.c",line 4361,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4361| 
        ; branchcc occurs ; [] |4361| 
	.dwpsn	file "../Source/prod.c",line 4366,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4366| 
        ADDB      ACC,#50               ; [CPU_] |4366| 
        MOVL      XAR4,ACC              ; [CPU_] |4366| 
        MOVL      P,ACC                 ; [CPU_] |4366| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4368,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4368| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4368| 
        ADDB      XAR7,#1               ; [CPU_] |4368| 
	.dwpsn	file "../Source/prod.c",line 4369,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4369| 
        ADD       *XAR4++,AL            ; [CPU_] |4369| 
	.dwpsn	file "../Source/prod.c",line 4367,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4367| 
        ; branchcc occurs ; [] |4367| 
	.dwpsn	file "../Source/prod.c",line 4373,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4373| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4373| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4373| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4375,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4375| 
        ANDB      AL,#0xff              ; [CPU_] |4375| 
        MOV       *XAR4++,AL            ; [CPU_] |4375| 
	.dwpsn	file "../Source/prod.c",line 4376,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4376| 
        LSR       AL,8                  ; [CPU_] |4376| 
        MOV       *XAR4++,AL            ; [CPU_] |4376| 
	.dwpsn	file "../Source/prod.c",line 4374,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4374| 
        ; branchcc occurs ; [] |4374| 
	.dwpsn	file "../Source/prod.c",line 4379,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4379| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4381,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4381| 
        ANDB      AL,#0xff              ; [CPU_] |4381| 
        MOV       *XAR4++,AL            ; [CPU_] |4381| 
	.dwpsn	file "../Source/prod.c",line 4382,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4382| 
        LSR       AL,8                  ; [CPU_] |4382| 
        MOV       *XAR4++,AL            ; [CPU_] |4382| 
	.dwpsn	file "../Source/prod.c",line 4380,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4380| 
        ; branchcc occurs ; [] |4380| 
	.dwpsn	file "../Source/prod.c",line 4385,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4385| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4387,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4387| 
        ANDB      AL,#0xff              ; [CPU_] |4387| 
        MOV       *XAR4++,AL            ; [CPU_] |4387| 
	.dwpsn	file "../Source/prod.c",line 4388,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4388| 
        LSR       AL,8                  ; [CPU_] |4388| 
        MOV       *XAR4++,AL            ; [CPU_] |4388| 
	.dwpsn	file "../Source/prod.c",line 4386,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4386| 
        ; branchcc occurs ; [] |4386| 
	.dwpsn	file "../Source/prod.c",line 4376,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4376| 
	.dwpsn	file "../Source/prod.c",line 4393,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |4393| 
        ; branch occurs ; [] |4393| 
$C$L252:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4303,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4303| 
        B         $C$L320,LO            ; [CPU_] |4303| 
        ; branchcc occurs ; [] |4303| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4303| 
        MOVL      XAR0,#66              ; [CPU_] |4303| 
        MOVL      ACC,XAR5              ; [CPU_] |4303| 
        ADDB      ACC,#2                ; [CPU_] |4303| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4303| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4303| 
        B         $C$L320,LT            ; [CPU_] |4303| 
        ; branchcc occurs ; [] |4303| 
        ADDB      XAR4,#2               ; [CPU_] |4303| 
        MOVL      XAR0,#66              ; [CPU_] |4303| 
        CMPB      AL,#4                 ; [CPU_] |4303| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4303| 
        B         $C$L320,GEQ           ; [CPU_] |4303| 
        ; branchcc occurs ; [] |4303| 
	.dwpsn	file "../Source/prod.c",line 4308,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4308| 
	.dwpsn	file "../Source/prod.c",line 4309,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4309| 
	.dwpsn	file "../Source/prod.c",line 4311,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4311| 
        MOVL      XAR0,#66              ; [CPU_] |4311| 
	.dwpsn	file "../Source/prod.c",line 4309,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4309| 
	.dwpsn	file "../Source/prod.c",line 4311,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4311| 
        MOVL      XAR0,#40              ; [CPU_] |4311| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4311| 
        MOVB      AL,#10                ; [CPU_] |4311| 
        MOV       T,*-SP[58]            ; [CPU_] |4311| 
        MPYU      ACC,T,AL              ; [CPU_] |4311| 
        ADDL      ACC,XAR6              ; [CPU_] |4311| 
        ADDB      ACC,#46               ; [CPU_] |4311| 
        MOVL      XAR5,ACC              ; [CPU_] |4311| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4313,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4313| 
        ANDB      AL,#0xff              ; [CPU_] |4313| 
        MOV       *XAR4++,AL            ; [CPU_] |4313| 
	.dwpsn	file "../Source/prod.c",line 4314,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4314| 
        LSR       AL,8                  ; [CPU_] |4314| 
        MOV       *XAR4++,AL            ; [CPU_] |4314| 
	.dwpsn	file "../Source/prod.c",line 4312,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR0--         ; [CPU_] |4312| 
        ; branchcc occurs ; [] |4312| 
	.dwpsn	file "../Source/prod.c",line 4317,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4317| 
        MPYU      ACC,T,AL              ; [CPU_] |4317| 
        ADDL      ACC,XAR6              ; [CPU_] |4317| 
        MOVL      XAR5,ACC              ; [CPU_] |4317| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4317| 
        ADDB      XAR5,#48              ; [CPU_] |4317| 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4319,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4319| 
        ANDB      AL,#0xff              ; [CPU_] |4319| 
        MOV       *XAR4++,AL            ; [CPU_] |4319| 
	.dwpsn	file "../Source/prod.c",line 4320,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4320| 
        LSR       AL,8                  ; [CPU_] |4320| 
        MOV       *XAR4++,AL            ; [CPU_] |4320| 
	.dwpsn	file "../Source/prod.c",line 4318,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4318| 
        ; branchcc occurs ; [] |4318| 
	.dwpsn	file "../Source/prod.c",line 4323,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4323| 
	.dwpsn	file "../Source/prod.c",line 4314,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4314| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4323,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4323| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4325,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4325| 
        ANDB      AL,#0xff              ; [CPU_] |4325| 
        MOV       *XAR4++,AL            ; [CPU_] |4325| 
	.dwpsn	file "../Source/prod.c",line 4326,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4326| 
        LSR       AL,8                  ; [CPU_] |4326| 
        MOV       *XAR4++,AL            ; [CPU_] |4326| 
	.dwpsn	file "../Source/prod.c",line 4324,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR0--         ; [CPU_] |4324| 
        ; branchcc occurs ; [] |4324| 
        B         $C$L743,UNC           ; [CPU_] |4324| 
        ; branch occurs ; [] |4324| 
$C$L256:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3945,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3945| 
        B         $C$L320,LO            ; [CPU_] |3945| 
        ; branchcc occurs ; [] |3945| 
        MOVL      ACC,XAR4              ; [CPU_] |3945| 
        MOVL      XAR0,#66              ; [CPU_] |3945| 
        ADDB      ACC,#2                ; [CPU_] |3945| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3945| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3945| 
        B         $C$L320,LT            ; [CPU_] |3945| 
        ; branchcc occurs ; [] |3945| 
        MOVL      XAR5,XAR4             ; [CPU_] |3945| 
        MOVL      XAR0,#66              ; [CPU_] |3945| 
        CMPB      AL,#20                ; [CPU_] |3945| 
        ADDB      XAR5,#2               ; [CPU_] |3945| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3945| 
        B         $C$L320,GEQ           ; [CPU_] |3945| 
        ; branchcc occurs ; [] |3945| 
	.dwpsn	file "../Source/prod.c",line 3949,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3950,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3950| 
	.dwpsn	file "../Source/prod.c",line 3953,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3953| 
        MOVL      XAR0,#66              ; [CPU_] |3953| 
	.dwpsn	file "../Source/prod.c",line 3950,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3950| 
	.dwpsn	file "../Source/prod.c",line 3953,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3953| 
        MOVL      XAR0,#40              ; [CPU_] |3953| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3953| 
        MOVB      AL,#152               ; [CPU_] |3953| 
        MOV       T,*-SP[57]            ; [CPU_] |3953| 
        MPYU      ACC,T,AL              ; [CPU_] |3953| 
        ADDL      ACC,XAR6              ; [CPU_] |3953| 
        ADDB      ACC,#82               ; [CPU_] |3953| 
        MOVL      XAR4,ACC              ; [CPU_] |3953| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_strlen")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3953| 
        ; call occurs [#_strlen] ; [] |3953| 
        MOVZ      AR6,AL                ; [CPU_] |3953| 
	.dwpsn	file "../Source/prod.c",line 3954,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |3954| 
	.dwpsn	file "../Source/prod.c",line 3955,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3955| 
	.dwpsn	file "../Source/prod.c",line 3954,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |3954| 
	.dwpsn	file "../Source/prod.c",line 3955,column 17,is_stmt,isa 0
        B         $C$L258,EQ            ; [CPU_] |3955| 
        ; branchcc occurs ; [] |3955| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3955,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3955| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3956| 
	.dwpsn	file "../Source/prod.c",line 3955,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3955| 
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3956| 
	.dwpsn	file "../Source/prod.c",line 3955,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3955| 
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3956| 
	.dwpsn	file "../Source/prod.c",line 3955,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3955| 
        B         $C$L257,HI            ; [CPU_] |3955| 
        ; branchcc occurs ; [] |3955| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 3960,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3960| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3960| 
        MOVB      AL,#152               ; [CPU_] |3960| 
        MOV       T,*-SP[57]            ; [CPU_] |3960| 
        MPYU      ACC,T,AL              ; [CPU_] |3960| 
        ADDL      ACC,XAR6              ; [CPU_] |3960| 
        MOVL      XAR4,ACC              ; [CPU_] |3960| 
        MOVL      XAR1,ACC              ; [CPU_] |3960| 
        ADDB      XAR4,#98              ; [CPU_] |3960| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_strlen")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3960| 
        ; call occurs [#_strlen] ; [] |3960| 
        MOVL      XAR0,#44              ; [CPU_] |3960| 
	.dwpsn	file "../Source/prod.c",line 3961,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[61]          ; [CPU_] |3961| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3960,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |3960| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3960| 
	.dwpsn	file "../Source/prod.c",line 3961,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |3961| 
        MOVL      XAR4,ACC              ; [CPU_] |3961| 
        MOV       AL,AR7                ; [CPU_] |3961| 
        ADDB      AL,#1                 ; [CPU_] |3961| 
        MOV       *XAR4++,AR6           ; [CPU_] |3961| 
        MOV       *-SP[61],AL           ; [CPU_] |3961| 
        MOV       AL,AR6                ; [CPU_] |3961| 
	.dwpsn	file "../Source/prod.c",line 3962,column 17,is_stmt,isa 0
        B         $C$L260,EQ            ; [CPU_] |3962| 
        ; branchcc occurs ; [] |3962| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3962,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3962| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 3963,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3963| 
	.dwpsn	file "../Source/prod.c",line 3962,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3962| 
	.dwpsn	file "../Source/prod.c",line 3963,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3963| 
	.dwpsn	file "../Source/prod.c",line 3962,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3962| 
	.dwpsn	file "../Source/prod.c",line 3963,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3963| 
	.dwpsn	file "../Source/prod.c",line 3962,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3962| 
        B         $C$L259,HI            ; [CPU_] |3962| 
        ; branchcc occurs ; [] |3962| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 3967,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3967| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |3967| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 3969,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3969| 
        ANDB      AL,#0xff              ; [CPU_] |3969| 
        MOV       *XAR4++,AL            ; [CPU_] |3969| 
	.dwpsn	file "../Source/prod.c",line 3970,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3970| 
        LSR       AL,8                  ; [CPU_] |3970| 
        MOV       *XAR4++,AL            ; [CPU_] |3970| 
	.dwpsn	file "../Source/prod.c",line 3968,column 17,is_stmt,isa 0
        BANZ      $C$L261,AR0--         ; [CPU_] |3968| 
        ; branchcc occurs ; [] |3968| 
	.dwpsn	file "../Source/prod.c",line 3975,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |3975| 
	.dwpsn	file "../Source/prod.c",line 3978,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3978| 
	.dwpsn	file "../Source/prod.c",line 3975,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3975| 
        MOV       *XAR4++,AL            ; [CPU_] |3975| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3978,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |3978| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 3980,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3980| 
        ANDB      AL,#0xff              ; [CPU_] |3980| 
        MOV       *XAR4++,AL            ; [CPU_] |3980| 
	.dwpsn	file "../Source/prod.c",line 3981,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3981| 
        LSR       AL,8                  ; [CPU_] |3981| 
        MOV       *XAR4++,AL            ; [CPU_] |3981| 
	.dwpsn	file "../Source/prod.c",line 3979,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |3979| 
        ; branchcc occurs ; [] |3979| 
	.dwpsn	file "../Source/prod.c",line 3986,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3986| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |3986| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 3988,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3988| 
        ANDB      AL,#0xff              ; [CPU_] |3988| 
        MOV       *XAR4++,AL            ; [CPU_] |3988| 
	.dwpsn	file "../Source/prod.c",line 3989,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3989| 
        LSR       AL,8                  ; [CPU_] |3989| 
        MOV       *XAR4++,AL            ; [CPU_] |3989| 
	.dwpsn	file "../Source/prod.c",line 3987,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |3987| 
        ; branchcc occurs ; [] |3987| 
	.dwpsn	file "../Source/prod.c",line 3994,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |3994| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3994| 
	.dwpsn	file "../Source/prod.c",line 4000,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4000| 
	.dwpsn	file "../Source/prod.c",line 3994,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3994| 
	.dwpsn	file "../Source/prod.c",line 3997,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |3997| 
	.dwpsn	file "../Source/prod.c",line 3994,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3994| 
	.dwpsn	file "../Source/prod.c",line 3997,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3997| 
	.dwpsn	file "../Source/prod.c",line 4000,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4000| 
	.dwpsn	file "../Source/prod.c",line 3997,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3997| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |3997| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4002,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4002| 
        ANDB      AL,#0xff              ; [CPU_] |4002| 
        MOV       *XAR4++,AL            ; [CPU_] |4002| 
	.dwpsn	file "../Source/prod.c",line 4003,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4003| 
        LSR       AL,8                  ; [CPU_] |4003| 
        MOV       *XAR4++,AL            ; [CPU_] |4003| 
	.dwpsn	file "../Source/prod.c",line 4001,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4001| 
        ; branchcc occurs ; [] |4001| 
	.dwpsn	file "../Source/prod.c",line 3970,column 6,is_stmt,isa 0
        ADD       *-SP[61],#23          ; [CPU_] |3970| 
	.dwpsn	file "../Source/prod.c",line 4008,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4008| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4008| 
        CMPB      AL,#2                 ; [CPU_] |4008| 
        B         $C$L267,EQ            ; [CPU_] |4008| 
        ; branchcc occurs ; [] |4008| 
	.dwpsn	file "../Source/prod.c",line 4046,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4046| 
        ADDB      ACC,#178              ; [CPU_] |4046| 
        MOVL      XAR5,ACC              ; [CPU_] |4046| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4044,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4044| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4048,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4048| 
        ANDB      AL,#0xff              ; [CPU_] |4048| 
        MOV       *XAR4++,AL            ; [CPU_] |4048| 
	.dwpsn	file "../Source/prod.c",line 4049,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4049| 
        LSR       AL,8                  ; [CPU_] |4049| 
        MOV       *XAR4++,AL            ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4047,column 18,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4047| 
        ; branchcc occurs ; [] |4047| 
	.dwpsn	file "../Source/prod.c",line 4053,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4053| 
        ADDB      ACC,#200              ; [CPU_] |4053| 
        MOVL      XAR5,ACC              ; [CPU_] |4053| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4044,column 6,is_stmt,isa 0
        ADD       *-SP[61],#9           ; [CPU_] |4044| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4055,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4055| 
        ANDB      AL,#0xff              ; [CPU_] |4055| 
        MOV       *XAR4++,AL            ; [CPU_] |4055| 
	.dwpsn	file "../Source/prod.c",line 4056,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4056| 
        LSR       AL,8                  ; [CPU_] |4056| 
        MOV       *XAR4++,AL            ; [CPU_] |4056| 
	.dwpsn	file "../Source/prod.c",line 4054,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4054| 
        ; branchcc occurs ; [] |4054| 
        B         $C$L276,UNC           ; [CPU_] |4054| 
        ; branch occurs ; [] |4054| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4009,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4009| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4009| 
	.dwpsn	file "../Source/prod.c",line 4010,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4010| 
	.dwpsn	file "../Source/prod.c",line 4009,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4009| 
        INC       *-SP[61]              ; [CPU_] |4009| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4010,column 11,is_stmt,isa 0
        B         $C$L271,UNC           ; [CPU_] |4010| 
        ; branch occurs ; [] |4010| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4012,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4012| 
        MOVL      XAR0,#40              ; [CPU_] |4012| 
        MOV       T,*-SP[57]            ; [CPU_] |4012| 
        MOVL      XAR6,ACC              ; [CPU_] |4012| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4012| 
        MOVB      AL,#76                ; [CPU_] |4012| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4012| 
        ADDL      ACC,XAR6              ; [CPU_] |4012| 
        LSL       ACC,1                 ; [CPU_] |4012| 
        ADDL      ACC,XAR7              ; [CPU_] |4012| 
        ADDB      ACC,#130              ; [CPU_] |4012| 
        MOVL      XAR7,ACC              ; [CPU_] |4012| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4014,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4014| 
        ANDB      AL,#0xff              ; [CPU_] |4014| 
        MOV       *XAR4++,AL            ; [CPU_] |4014| 
	.dwpsn	file "../Source/prod.c",line 4015,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4015| 
        LSR       AL,8                  ; [CPU_] |4015| 
        MOV       *XAR4++,AL            ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4013,column 19,is_stmt,isa 0
        BANZ      $C$L269,AR6--         ; [CPU_] |4013| 
        ; branchcc occurs ; [] |4013| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4021,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4021| 
        ANDB      AL,#0xff              ; [CPU_] |4021| 
        MOV       *XAR4++,AL            ; [CPU_] |4021| 
	.dwpsn	file "../Source/prod.c",line 4022,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4022| 
        LSR       AL,8                  ; [CPU_] |4022| 
        MOV       *XAR4++,AL            ; [CPU_] |4022| 
	.dwpsn	file "../Source/prod.c",line 4020,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR0--         ; [CPU_] |4020| 
        ; branchcc occurs ; [] |4020| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4015,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4010,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4010| 
        MOV       PL,AL                 ; [CPU_] |4010| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4010,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4010| 
        MOV       AL,PL                 ; [CPU_] |4010| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4010| 
        B         $C$L268,LT            ; [CPU_] |4010| 
        ; branchcc occurs ; [] |4010| 
	.dwpsn	file "../Source/prod.c",line 4027,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4027| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L275,UNC           ; [CPU_] |4027| 
        ; branch occurs ; [] |4027| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4029,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4029| 
        MOVL      XAR0,#40              ; [CPU_] |4029| 
        MOV       T,*-SP[57]            ; [CPU_] |4029| 
        MOVL      P,ACC                 ; [CPU_] |4029| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4029| 
        MOVB      AL,#76                ; [CPU_] |4029| 
        MPYU      ACC,T,AL              ; [CPU_] |4029| 
        ADDL      ACC,P                 ; [CPU_] |4029| 
        LSL       ACC,1                 ; [CPU_] |4029| 
        ADDL      ACC,XAR6              ; [CPU_] |4029| 
        ADDB      ACC,#178              ; [CPU_] |4029| 
        MOVL      XAR7,ACC              ; [CPU_] |4029| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4031,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4031| 
        ANDB      AL,#0xff              ; [CPU_] |4031| 
        MOV       *XAR4++,AL            ; [CPU_] |4031| 
	.dwpsn	file "../Source/prod.c",line 4032,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4032| 
        LSR       AL,8                  ; [CPU_] |4032| 
        MOV       *XAR4++,AL            ; [CPU_] |4032| 
	.dwpsn	file "../Source/prod.c",line 4030,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR6--         ; [CPU_] |4030| 
        ; branchcc occurs ; [] |4030| 
	.dwpsn	file "../Source/prod.c",line 4036,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4036| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4038,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4038| 
        ANDB      AL,#0xff              ; [CPU_] |4038| 
        MOV       *XAR4++,AL            ; [CPU_] |4038| 
	.dwpsn	file "../Source/prod.c",line 4039,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4039| 
        LSR       AL,8                  ; [CPU_] |4039| 
        MOV       *XAR4++,AL            ; [CPU_] |4039| 
	.dwpsn	file "../Source/prod.c",line 4037,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR0--         ; [CPU_] |4037| 
        ; branchcc occurs ; [] |4037| 
	.dwpsn	file "../Source/prod.c",line 4027,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4027| 
	.dwpsn	file "../Source/prod.c",line 4032,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4032| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4043,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4043| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4043| 
        ADDB      AL,#-1                ; [CPU_] |4043| 
        CMP       AL,AR5                ; [CPU_] |4043| 
        B         $C$L272,GT            ; [CPU_] |4043| 
        ; branchcc occurs ; [] |4043| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4062,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4062| 
        ADDB      ACC,#222              ; [CPU_] |4062| 
        MOVL      XAR5,ACC              ; [CPU_] |4062| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4064,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4064| 
        ANDB      AL,#0xff              ; [CPU_] |4064| 
        MOV       *XAR4++,AL            ; [CPU_] |4064| 
	.dwpsn	file "../Source/prod.c",line 4065,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4065| 
        LSR       AL,8                  ; [CPU_] |4065| 
        MOV       *XAR4++,AL            ; [CPU_] |4065| 
	.dwpsn	file "../Source/prod.c",line 4063,column 17,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4063| 
        ; branchcc occurs ; [] |4063| 
	.dwpsn	file "../Source/prod.c",line 4070,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4070| 
        ADDB      ACC,#224              ; [CPU_] |4070| 
        MOVL      XAR5,ACC              ; [CPU_] |4070| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4072,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4072| 
        ANDB      AL,#0xff              ; [CPU_] |4072| 
        MOV       *XAR4++,AL            ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4073,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4073| 
        LSR       AL,8                  ; [CPU_] |4073| 
        MOV       *XAR4++,AL            ; [CPU_] |4073| 
	.dwpsn	file "../Source/prod.c",line 4071,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4071| 
        ; branchcc occurs ; [] |4071| 
	.dwpsn	file "../Source/prod.c",line 4078,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4078| 
        ADDB      ACC,#228              ; [CPU_] |4078| 
        MOVL      XAR5,ACC              ; [CPU_] |4078| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4080,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4080| 
        ANDB      AL,#0xff              ; [CPU_] |4080| 
        MOV       *XAR4++,AL            ; [CPU_] |4080| 
	.dwpsn	file "../Source/prod.c",line 4081,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4081| 
        LSR       AL,8                  ; [CPU_] |4081| 
        MOV       *XAR4++,AL            ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4079,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4079| 
        ; branchcc occurs ; [] |4079| 
	.dwpsn	file "../Source/prod.c",line 4086,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4086| 
        ADDB      ACC,#230              ; [CPU_] |4086| 
        MOVL      XAR5,ACC              ; [CPU_] |4086| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4088,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4088| 
        ANDB      AL,#0xff              ; [CPU_] |4088| 
        MOV       *XAR4++,AL            ; [CPU_] |4088| 
	.dwpsn	file "../Source/prod.c",line 4089,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4089| 
        LSR       AL,8                  ; [CPU_] |4089| 
        MOV       *XAR4++,AL            ; [CPU_] |4089| 
	.dwpsn	file "../Source/prod.c",line 4087,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4087| 
        ; branchcc occurs ; [] |4087| 
	.dwpsn	file "../Source/prod.c",line 4094,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4094| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4094| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4094| 
	.dwpsn	file "../Source/prod.c",line 4065,column 6,is_stmt,isa 0
        ADD       *-SP[61],#17          ; [CPU_] |4065| 
	.dwpsn	file "../Source/prod.c",line 4097,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4097| 
        ; branch occurs ; [] |4097| 
$C$L281:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3887,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3887| 
        B         $C$L320,LO            ; [CPU_] |3887| 
        ; branchcc occurs ; [] |3887| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3887| 
        MOVL      XAR0,#66              ; [CPU_] |3887| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3887| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3887| 
        B         $C$L320,LT            ; [CPU_] |3887| 
        ; branchcc occurs ; [] |3887| 
        CMPB      AL,#4                 ; [CPU_] |3887| 
        B         $C$L320,GEQ           ; [CPU_] |3887| 
        ; branchcc occurs ; [] |3887| 
	.dwpsn	file "../Source/prod.c",line 3891,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3891| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3891| 
	.dwpsn	file "../Source/prod.c",line 3893,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3893| 
        MOVL      XAR0,#40              ; [CPU_] |3893| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3893| 
        MPYB      ACC,T,#10             ; [CPU_] |3893| 
        ADDL      ACC,XAR6              ; [CPU_] |3893| 
        MOVL      XAR4,ACC              ; [CPU_] |3893| 
        MOVL      XAR7,ACC              ; [CPU_] |3893| 
        MOVB      XAR0,#42              ; [CPU_] |3893| 
        MOVL      P,ACC                 ; [CPU_] |3893| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3893| 
	.dwpsn	file "../Source/prod.c",line 3900,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3900| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3900| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3893,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3893| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3897,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3897| 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 3903,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3903| 
        ANDB      AL,#0xff              ; [CPU_] |3903| 
        MOV       *XAR4++,AL            ; [CPU_] |3903| 
	.dwpsn	file "../Source/prod.c",line 3904,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3904| 
        LSR       AL,8                  ; [CPU_] |3904| 
        MOV       *XAR4++,AL            ; [CPU_] |3904| 
	.dwpsn	file "../Source/prod.c",line 3901,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR6--         ; [CPU_] |3901| 
        ; branchcc occurs ; [] |3901| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3911,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3911| 
        ANDB      AL,#0xff              ; [CPU_] |3911| 
        MOV       *XAR4++,AL            ; [CPU_] |3911| 
	.dwpsn	file "../Source/prod.c",line 3912,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3912| 
        LSR       AL,8                  ; [CPU_] |3912| 
        MOV       *XAR4++,AL            ; [CPU_] |3912| 
	.dwpsn	file "../Source/prod.c",line 3909,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3909| 
        ; branchcc occurs ; [] |3909| 
	.dwpsn	file "../Source/prod.c",line 3916,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3916| 
        ADDB      XAR5,#46              ; [CPU_] |3916| 
        MOVL      XAR7,XAR5             ; [CPU_] |3916| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3919,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3919| 
        ANDB      AL,#0xff              ; [CPU_] |3919| 
        MOV       *XAR4++,AL            ; [CPU_] |3919| 
	.dwpsn	file "../Source/prod.c",line 3920,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3920| 
        LSR       AL,8                  ; [CPU_] |3920| 
        MOV       *XAR4++,AL            ; [CPU_] |3920| 
	.dwpsn	file "../Source/prod.c",line 3917,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3917| 
        ; branchcc occurs ; [] |3917| 
	.dwpsn	file "../Source/prod.c",line 3924,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3924| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3927,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3927| 
        ANDB      AL,#0xff              ; [CPU_] |3927| 
        MOV       *XAR4++,AL            ; [CPU_] |3927| 
	.dwpsn	file "../Source/prod.c",line 3928,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3928| 
        LSR       AL,8                  ; [CPU_] |3928| 
        MOV       *XAR4++,AL            ; [CPU_] |3928| 
	.dwpsn	file "../Source/prod.c",line 3925,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3925| 
        ; branchcc occurs ; [] |3925| 
	.dwpsn	file "../Source/prod.c",line 3897,column 6,is_stmt,isa 0
        MOV       *-SP[61],#28          ; [CPU_] |3897| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3935,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3935| 
        ANDB      AL,#0xff              ; [CPU_] |3935| 
        MOV       *XAR4++,AL            ; [CPU_] |3935| 
	.dwpsn	file "../Source/prod.c",line 3936,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3936| 
        LSR       AL,8                  ; [CPU_] |3936| 
        MOV       *XAR4++,AL            ; [CPU_] |3936| 
	.dwpsn	file "../Source/prod.c",line 3933,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3933| 
        ; branchcc occurs ; [] |3933| 
        B         $C$L743,UNC           ; [CPU_] |3933| 
        ; branch occurs ; [] |3933| 
$C$L287:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3841,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3841| 
        B         $C$L320,LO            ; [CPU_] |3841| 
        ; branchcc occurs ; [] |3841| 
	.dwpsn	file "../Source/prod.c",line 3845,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3845| 
        B         $C$L288,EQ            ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
        CMPB      AL,#1                 ; [CPU_] |3845| 
        B         $C$L288,EQ            ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
        CMPB      AL,#2                 ; [CPU_] |3845| 
        B         $C$L288,EQ            ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
        ADDB      XAR4,#2               ; [CPU_] |3845| 
        MOVL      XAR0,#66              ; [CPU_] |3845| 
        CMPB      AL,#3                 ; [CPU_] |3845| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3845| 
        B         $C$L320,NEQ           ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3851,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3851| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3851| 
        MOVL      XAR4,XAR5             ; [CPU_] |3851| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3851| 
        ADDB      XAR5,#2               ; [CPU_] |3851| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3851| 
        ADDB      XAR4,#6               ; [CPU_] |3851| 
        B         $C$L293,NEQ           ; [CPU_] |3851| 
        ; branchcc occurs ; [] |3851| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3852,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3852| 
        B         $C$L320,LO            ; [CPU_] |3852| 
        ; branchcc occurs ; [] |3852| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3857,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3857| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3859,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3859| 
        ADDL      ACC,XT                ; [CPU_] |3859| 
	.dwpsn	file "../Source/prod.c",line 3860,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3860| 
	.dwpsn	file "../Source/prod.c",line 3858,column 18,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3858| 
        ; branchcc occurs ; [] |3858| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3863,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3863| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3864,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3864| 
        B         $C$L291,EQ            ; [CPU_] |3864| 
        ; branchcc occurs ; [] |3864| 
	.dwpsn	file "../Source/prod.c",line 3863,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3863| 
        ADDB      XAR4,#1               ; [CPU_] |3863| 
        BANZ      $C$L290,AR0--         ; [CPU_] |3863| 
        ; branchcc occurs ; [] |3863| 
        B         $C$L292,UNC           ; [CPU_] |3863| 
        ; branch occurs ; [] |3863| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3865,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3865| 
        MOVB      XAR0,#35              ; [CPU_] |3865| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3865| 
$C$L292:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3869,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3869| 
        B         $C$L320,EQ            ; [CPU_] |3869| 
        ; branchcc occurs ; [] |3869| 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3875,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3875| 
        MOVL      XAR0,#66              ; [CPU_] |3875| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3875| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3875| 
        ADDB      ACC,#2                ; [CPU_] |3875| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3875| 
        MOVB      XAR0,#34              ; [CPU_] |3875| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3875| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3875| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3875| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3875| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3878,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3878| 
        MOV       *XAR4++,AL            ; [CPU_] |3878| 
	.dwpsn	file "../Source/prod.c",line 3877,column 12,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3877| 
        MOV       AL,*-SP[59]           ; [CPU_] |3877| 
	.dwpsn	file "../Source/prod.c",line 3878,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3878| 
	.dwpsn	file "../Source/prod.c",line 3877,column 12,is_stmt,isa 0
        CMP       AL,*-SP[61]           ; [CPU_] |3877| 
        B         $C$L294,HI            ; [CPU_] |3877| 
        ; branchcc occurs ; [] |3877| 
        B         $C$L304,UNC           ; [CPU_] |3877| 
        ; branch occurs ; [] |3877| 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3825,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3825| 
        MOVB      XAR0,#34              ; [CPU_] |3825| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3825| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3825| 
	.dwpsn	file "../Source/prod.c",line 3827,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3827| 
	.dwpsn	file "../Source/prod.c",line 3825,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3825| 
        MOV       *-SP[61],#3           ; [CPU_] |3825| 
	.dwpsn	file "../Source/prod.c",line 3827,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3827| 
        CMPB      AL,#1                 ; [CPU_] |3827| 
        B         $C$L296,EQ            ; [CPU_] |3827| 
        ; branchcc occurs ; [] |3827| 
        MOVB      XAR1,#34              ; [CPU_] |3827| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3827| 
        B         $C$L743,NEQ           ; [CPU_] |3827| 
        ; branchcc occurs ; [] |3827| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3829,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3829| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3829| 
        MOVL      XAR0,#74              ; [CPU_] |3829| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3829| 
        MOVL      XAR0,#44              ; [CPU_] |3829| 
        ADDL      ACC,XAR6              ; [CPU_] |3829| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3829| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3829| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3832,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3832| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |3832| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3831,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3831| 
        ANDB      AL,#0xff              ; [CPU_] |3831| 
        MOV       *XAR4++,AL            ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3832,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3832| 
        LSR       AL,8                  ; [CPU_] |3832| 
        MOV       *XAR4++,AL            ; [CPU_] |3832| 
	.dwpsn	file "../Source/prod.c",line 3830,column 18,is_stmt,isa 0
        BANZ      $C$L297,AR6--         ; [CPU_] |3830| 
        ; branchcc occurs ; [] |3830| 
        B         $C$L743,UNC           ; [CPU_] |3830| 
        ; branch occurs ; [] |3830| 
$C$L298:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3804,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3804| 
        B         $C$L320,LO            ; [CPU_] |3804| 
        ; branchcc occurs ; [] |3804| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3804| 
        MOVL      XAR0,#66              ; [CPU_] |3804| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3804| 
        ADDB      AL,#3                 ; [CPU_] |3804| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3804| 
        CMP       AL,*-SP[59]           ; [CPU_] |3804| 
        B         $C$L320,HI            ; [CPU_] |3804| 
        ; branchcc occurs ; [] |3804| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3809,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3809| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L300,UNC           ; [CPU_] |3809| 
        ; branch occurs ; [] |3809| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3810,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3810| 
        ADD       PL,AL                 ; [CPU_] |3810| 
        MOVL      ACC,XAR7              ; [CPU_] |3810| 
        ADD       ACC,PL                ; [CPU_] |3810| 
        MOVL      XAR7,ACC              ; [CPU_] |3810| 
	.dwpsn	file "../Source/prod.c",line 3809,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3809| 
	.dwpsn	file "../Source/prod.c",line 3810,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3810| 
        MOV       *XAR4++,AL            ; [CPU_] |3810| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3809,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3809| 
        MOVL      XAR0,#66              ; [CPU_] |3809| 
        MOVL      ACC,XAR7              ; [CPU_] |3809| 
        ADDB      ACC,#2                ; [CPU_] |3809| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3809| 
        MOV       AL,AR6                ; [CPU_] |3809| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3809| 
        B         $C$L299,LT            ; [CPU_] |3809| 
        ; branchcc occurs ; [] |3809| 
	.dwpsn	file "../Source/prod.c",line 3812,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3812| 
        MOVL      XAR0,#76              ; [CPU_] |3812| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3812| 
	.dwpsn	file "../Source/prod.c",line 3815,column 5,is_stmt,isa 0
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_strlen")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3815| 
        ; call occurs [#_strlen] ; [] |3815| 
	.dwpsn	file "../Source/prod.c",line 3816,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3816| 
	.dwpsn	file "../Source/prod.c",line 3817,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3817| 
	.dwpsn	file "../Source/prod.c",line 3816,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3816| 
        MOV       *-SP[61],#3           ; [CPU_] |3816| 
	.dwpsn	file "../Source/prod.c",line 3817,column 17,is_stmt,isa 0
        B         $C$L304,EQ            ; [CPU_] |3817| 
        ; branchcc occurs ; [] |3817| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3817,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3817| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3818,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3818| 
	.dwpsn	file "../Source/prod.c",line 3817,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3817| 
	.dwpsn	file "../Source/prod.c",line 3818,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3818| 
        INC       *-SP[61]              ; [CPU_] |3818| 
	.dwpsn	file "../Source/prod.c",line 3817,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3817| 
        B         $C$L301,HI            ; [CPU_] |3817| 
        ; branchcc occurs ; [] |3817| 
	.dwpsn	file "../Source/prod.c",line 3821,column 5,is_stmt,isa 0
        B         $C$L304,UNC           ; [CPU_] |3821| 
        ; branch occurs ; [] |3821| 
$C$L302:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3784,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3784| 
        B         $C$L320,LO            ; [CPU_] |3784| 
        ; branchcc occurs ; [] |3784| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3789,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3789| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3789| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3791,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3791| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3791| 
	.dwpsn	file "../Source/prod.c",line 3792,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3792| 
        MOV       *XAR5++,AL            ; [CPU_] |3792| 
	.dwpsn	file "../Source/prod.c",line 3793,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3793| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3793| 
        MOV       *XAR4++,AL            ; [CPU_] |3793| 
	.dwpsn	file "../Source/prod.c",line 3794,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3794| 
        MOV       *XAR5++,AL            ; [CPU_] |3794| 
	.dwpsn	file "../Source/prod.c",line 3790,column 17,is_stmt,isa 0
        BANZ      $C$L303,AR6--         ; [CPU_] |3790| 
        ; branchcc occurs ; [] |3790| 
	.dwpsn	file "../Source/prod.c",line 3794,column 6,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |3794| 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3797,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3797| 
	.dwpsn	file "../Source/prod.c",line 3800,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3800| 
        ; branch occurs ; [] |3800| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 5709,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5709 | cmd_mode = SCI_MODE_ASCII;                                             
; 5710 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5711 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5712 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5709| 
	.dwpsn	file "../Source/prod.c",line 5715,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5715 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_update_units")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5715| 
        ; call occurs [#_update_units] ; [] |5715| 
	.dwpsn	file "../Source/prod.c",line 5708,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |5708| 
	.dwpsn	file "../Source/prod.c",line 5716,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5716 | break;                                                                 
; 5718 | default:                                                               
; 5720 | // send back NACK?                                                     
; 5722 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5716| 
        ; branch occurs ; [] |5716| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5702,column 5,is_stmt,isa 0
        MOV       *-SP[53],#1           ; [CPU_] |5702| 
	.dwpsn	file "../Source/prod.c",line 5704,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5704| 
        ; branch occurs ; [] |5704| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 4339,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4339| 
	.dwpsn	file "../Source/prod.c",line 4340,column 5,is_stmt,isa 0
        B         $C$L309,UNC           ; [CPU_] |4340| 
        ; branch occurs ; [] |4340| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4335,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4335| 
$C$L309:    
        MOVB      AL,#0                 ; [CPU_] |4335| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_ssr_set")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4335| 
        ; call occurs [#_ssr_set] ; [] |4335| 
	.dwpsn	file "../Source/prod.c",line 4336,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |4336| 
        ; branch occurs ; [] |4336| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 5643,column 5,is_stmt,isa 0
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_conf_read")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5643| 
        ; call occurs [#_conf_read] ; [] |5643| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5646,column 5,is_stmt,isa 0
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5646| 
        ; call occurs [#_ad7738_setcal] ; [] |5646| 
	.dwpsn	file "../Source/prod.c",line 5647,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5647| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5647| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5647| 
	.dwpsn	file "../Source/prod.c",line 5648,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5648| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5648| 
        ; call occurs [#_ad7738_resetvall] ; [] |5648| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5652,column 5,is_stmt,isa 0
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_update_units")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5652| 
        ; call occurs [#_update_units] ; [] |5652| 
	.dwpsn	file "../Source/prod.c",line 5651,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5651| 
	.dwpsn	file "../Source/prod.c",line 5654,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5654| 
        ; branch occurs ; [] |5654| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5607,column 5,is_stmt,isa 0
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_conf_default")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5607| 
        ; call occurs [#_conf_default] ; [] |5607| 
	.dwpsn	file "../Source/prod.c",line 5610,column 5,is_stmt,isa 0
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5610| 
        ; call occurs [#_lcd_clear] ; [] |5610| 
	.dwpsn	file "../Source/prod.c",line 5611,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5611| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5611| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5611| 
        ; call occurs [#_lcd_puts] ; [] |5611| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5614,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5614| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_delay_us")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5614| 
        ; call occurs [#_delay_us] ; [] |5614| 
	.dwpsn	file "../Source/prod.c",line 5613,column 17,is_stmt,isa 0
        BANZ      $C$L312,AR3--         ; [CPU_] |5613| 
        ; branchcc occurs ; [] |5613| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5618,column 5,is_stmt,isa 0
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_conf_write")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5618| 
        ; call occurs [#_conf_write] ; [] |5618| 
        MOVZ      AR1,AL                ; [CPU_] |5618| 
	.dwpsn	file "../Source/prod.c",line 5619,column 5,is_stmt,isa 0
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5619| 
        ; call occurs [#_ad7738_setcal] ; [] |5619| 
	.dwpsn	file "../Source/prod.c",line 5620,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5620| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5620| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5620| 
	.dwpsn	file "../Source/prod.c",line 5621,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5621| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5621| 
        ; call occurs [#_ad7738_resetvall] ; [] |5621| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5624,column 5,is_stmt,isa 0
        B         $C$L313,NEQ           ; [CPU_] |5624| 
        ; branchcc occurs ; [] |5624| 
	.dwpsn	file "../Source/prod.c",line 5625,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5625| 
        MOVB      AL,#31                ; [CPU_] |5625| 
        SPM       #0                    ; [CPU_] 
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5625| 
        ; call occurs [#_lcd_puts] ; [] |5625| 
	.dwpsn	file "../Source/prod.c",line 5626,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5626| 
	.dwpsn	file "../Source/prod.c",line 5627,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5627| 
	.dwpsn	file "../Source/prod.c",line 5628,column 5,is_stmt,isa 0
        B         $C$L314,UNC           ; [CPU_] |5628| 
        ; branch occurs ; [] |5628| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5629,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5629| 
        MOVB      AL,#31                ; [CPU_] |5629| 
        SPM       #0                    ; [CPU_] 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5629| 
        ; call occurs [#_lcd_puts] ; [] |5629| 
	.dwpsn	file "../Source/prod.c",line 5630,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5630| 
$C$L314:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5633,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5633| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_delay_us")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5633| 
        ; call occurs [#_delay_us] ; [] |5633| 
	.dwpsn	file "../Source/prod.c",line 5632,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5632| 
        ; branchcc occurs ; [] |5632| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5635,column 5,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5635| 
        ; call occurs [#_lcd_clear] ; [] |5635| 
	.dwpsn	file "../Source/prod.c",line 5636,column 5,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_update_units")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5636| 
        ; call occurs [#_update_units] ; [] |5636| 
$C$L317:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5725,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5725 | switch (bincmdresult) {                                                
; 5726 | case OK_SendResult:                                                    
; 5727 |         scia_send_bin(buff, j);         // send back                   
; 5729 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5730 |                 delay_us(2000);                 // 2ms                 
; 5731 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5733 |         break;                                                         
; 5735 | case Error_UnImpl:                                                     
; 5737 |         buff[1] = CmdUnImpl;                                           
; 5738 |         buff[2] = cmdbuff[1];                                          
; 5739 |         scia_send_bin(buff, 3);         // send back                   
; 5740 |         break;                                                         
; 5742 | case Error_Invalid:                                                    
; 5744 |         buff[1] = CmdInvalid;                                          
; 5745 |         buff[2] = cmdbuff[1];                                          
; 5746 |         scia_send_bin(buff, 3);         // send back                   
; 5747 |         break;                                                         
; 5749 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5725| 
        ; branchcc occurs ; [] |5725| 
        CMPB      AL,#1                 ; [CPU_] |5725| 
        B         $C$L321,EQ            ; [CPU_] |5725| 
        ; branchcc occurs ; [] |5725| 
        CMPB      AL,#2                 ; [CPU_] |5725| 
        B         $C$L320,EQ            ; [CPU_] |5725| 
        ; branchcc occurs ; [] |5725| 
        CMPB      AL,#3                 ; [CPU_] |5725| 
        B         $C$L634,NEQ           ; [CPU_] |5725| 
        ; branchcc occurs ; [] |5725| 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5751,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5751 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5751| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5751| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5752,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5752 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5752| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5752| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5752| 
	.dwpsn	file "../Source/prod.c",line 5753,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5753 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5753| 
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5753| 
        ; call occurs [#_scia_send_bin] ; [] |5753| 
	.dwpsn	file "../Source/prod.c",line 5754,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5754 | break;                                                                 
; 5756 | default:                                                               
; 5758 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L634,UNC           ; [CPU_] |5754| 
        ; branch occurs ; [] |5754| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5744,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5744| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5744| 
	.dwpsn	file "../Source/prod.c",line 5747,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5747| 
        ; branch occurs ; [] |5747| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5737,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5737| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5737| 
	.dwpsn	file "../Source/prod.c",line 5740,column 5,is_stmt,isa 0
        B         $C$L319,UNC           ; [CPU_] |5740| 
        ; branch occurs ; [] |5740| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 967,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |967| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |967| 
        CMPB      AL,#79                ; [CPU_] |967| 
        B         $C$L324,GT            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#79                ; [CPU_] |967| 
        B         $C$L443,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#69                ; [CPU_] |967| 
        B         $C$L323,GT            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#69                ; [CPU_] |967| 
        B         $C$L507,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#66                ; [CPU_] |967| 
        B         $C$L591,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#67                ; [CPU_] |967| 
        B         $C$L530,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#68                ; [CPU_] |967| 
        B         $C$L514,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        B         $C$L625,UNC           ; [CPU_] |967| 
        ; branch occurs ; [] |967| 
$C$L323:    
        CMPB      AL,#70                ; [CPU_] |967| 
        B         $C$L498,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#72                ; [CPU_] |967| 
        B         $C$L630,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#76                ; [CPU_] |967| 
        B         $C$L466,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        B         $C$L625,UNC           ; [CPU_] |967| 
        ; branch occurs ; [] |967| 
$C$L324:    
        CMPB      AL,#85                ; [CPU_] |967| 
        B         $C$L325,GT            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#85                ; [CPU_] |967| 
        B         $C$L326,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#80                ; [CPU_] |967| 
        B         $C$L429,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#82                ; [CPU_] |967| 
        B         $C$L414,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#83                ; [CPU_] |967| 
        B         $C$L351,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        B         $C$L625,UNC           ; [CPU_] |967| 
        ; branch occurs ; [] |967| 
$C$L325:    
        CMPB      AL,#88                ; [CPU_] |967| 
        B         $C$L628,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        CMPB      AL,#90                ; [CPU_] |967| 
        B         $C$L626,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
        B         $C$L625,UNC           ; [CPU_] |967| 
        ; branch occurs ; [] |967| 
$C$L326:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1135,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1135| 
        B         $C$L625,LO            ; [CPU_] |1135| 
        ; branchcc occurs ; [] |1135| 
	.dwpsn	file "../Source/prod.c",line 1138,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1138| 
        CMPB      AL,#73                ; [CPU_] |1138| 
        B         $C$L327,GT            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        CMPB      AL,#73                ; [CPU_] |1138| 
        B         $C$L338,EQ            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        CMPB      AL,#66                ; [CPU_] |1138| 
        B         $C$L330,EQ            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        CMPB      AL,#67                ; [CPU_] |1138| 
        B         $C$L347,EQ            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        CMPB      AL,#70                ; [CPU_] |1138| 
        B         $C$L344,EQ            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        B         $C$L625,UNC           ; [CPU_] |1138| 
        ; branch occurs ; [] |1138| 
$C$L327:    
        CMPB      AL,#78                ; [CPU_] |1138| 
        B         $C$L328,EQ            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        CMPB      AL,#83                ; [CPU_] |1138| 
        B         $C$L337,EQ            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        CMPB      AL,#87                ; [CPU_] |1138| 
        B         $C$L336,EQ            ; [CPU_] |1138| 
        ; branchcc occurs ; [] |1138| 
        B         $C$L625,UNC           ; [CPU_] |1138| 
        ; branch occurs ; [] |1138| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1155,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1155| 
        MOVL      XAR0,#44              ; [CPU_] |1155| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1155| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1155| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1155| 
        MOVL      XAR4,XAR1             ; [CPU_] |1155| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_sprintf")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1155| 
        ; call occurs [#_sprintf] ; [] |1155| 
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1156| 
        MOV       AL,#1024              ; [CPU_] |1156| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1156| 
	.dwpsn	file "../Source/prod.c",line 1155,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1155| 
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1156| 
        ; call occurs [#_scia_getparam] ; [] |1156| 
        CMPB      AL,#31                ; [CPU_] |1156| 
        B         $C$L329,LOS           ; [CPU_] |1156| 
        ; branchcc occurs ; [] |1156| 
	.dwpsn	file "../Source/prod.c",line 1160,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1160| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1160| 
	.dwpsn	file "../Source/prod.c",line 1159,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1159| 
	.dwpsn	file "../Source/prod.c",line 1160,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1160| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1160| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1163,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1163| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1163| 
        MOVL      XAR0,#86              ; [CPU_] |1163| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1163| 
        MOVB      AH,#1                 ; [CPU_] |1163| 
        ADD       AH,AL                 ; [CPU_] |1163| 
        MOVU      ACC,AH                ; [CPU_] |1163| 
        MOVL      XAR5,XAR1             ; [CPU_] |1163| 
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_memcpy")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1163| 
        ; call occurs [#_memcpy] ; [] |1163| 
        MOVL      XAR4,XAR1             ; [CPU_] |1163| 
	.dwpsn	file "../Source/prod.c",line 1167,column 6,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_scia_puts")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1167| 
        ; call occurs [#_scia_puts] ; [] |1167| 
	.dwpsn	file "../Source/prod.c",line 1168,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1168| 
	.dwpsn	file "../Source/prod.c",line 1170,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1170| 
        ; branch occurs ; [] |1170| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1260,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1260| 
        MOVB      XAR0,#34              ; [CPU_] |1260| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1260| 
        CMPB      AL,#3                 ; [CPU_] |1260| 
        B         $C$L335,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        MOVB      XAR1,#34              ; [CPU_] |1260| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1260| 
        CMPB      AL,#2                 ; [CPU_] |1260| 
        B         $C$L335,EQ            ; [CPU_] |1260| 
        ; branchcc occurs ; [] |1260| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1267,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1267| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1267| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1268,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1268| 
        MOVL      XAR0,#44              ; [CPU_] |1268| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1268| 
        MOV       *-SP[3],AL            ; [CPU_] |1268| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1268| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1268| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1268| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_sprintf")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1268| 
        ; call occurs [#_sprintf] ; [] |1268| 
        MOVL      XAR0,#44              ; [CPU_] |1268| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1268| 
	.dwpsn	file "../Source/prod.c",line 1269,column 7,is_stmt,isa 0
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_scia_puts")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1269| 
        ; call occurs [#_scia_puts] ; [] |1269| 
        MOV       AL,*-SP[47]           ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1270,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1270| 
        B         $C$L332,GEQ           ; [CPU_] |1270| 
        ; branchcc occurs ; [] |1270| 
	.dwpsn	file "../Source/prod.c",line 1271,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1271| 
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_scia_puts")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1271| 
        ; call occurs [#_scia_puts] ; [] |1271| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1267,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1267| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1267| 
        B         $C$L331,LT            ; [CPU_] |1267| 
        ; branchcc occurs ; [] |1267| 
	.dwpsn	file "../Source/prod.c",line 1274,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1274| 
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_scia_puts")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1274| 
        ; call occurs [#_scia_puts] ; [] |1274| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1275,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1275| 
        MOVB      XAR0,#35              ; [CPU_] |1275| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1275| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1275| 
        MOV       *-SP[3],AL            ; [CPU_] |1275| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1275| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1275| 
        MOVL      XAR0,#74              ; [CPU_] |1275| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1275| 
        ADDL      ACC,XAR6              ; [CPU_] |1275| 
        MOVL      XAR4,ACC              ; [CPU_] |1275| 
        MOVL      XAR0,#44              ; [CPU_] |1275| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1275| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1275| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1275| 
        MOVL      XAR4,XAR1             ; [CPU_] |1275| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_sprintf")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1275| 
        ; call occurs [#_sprintf] ; [] |1275| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1275,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1275| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1275,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1275| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1278| 
        MOVL      XAR5,XAR1             ; [CPU_] |1278| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1278| 
        ; call occurs [#_scia_getparam] ; [] |1278| 
        MOVL      XAR4,XAR1             ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1279,column 6,is_stmt,isa 0
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_scia_puts")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1279| 
        ; call occurs [#_scia_puts] ; [] |1279| 
	.dwpsn	file "../Source/prod.c",line 1280,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1280| 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_scia_puts")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1280| 
        ; call occurs [#_scia_puts] ; [] |1280| 
        MOV       AL,*-SP[47]           ; [CPU_] |1280| 
	.dwpsn	file "../Source/prod.c",line 1281,column 6,is_stmt,isa 0
        B         $C$L334,EQ            ; [CPU_] |1281| 
        ; branchcc occurs ; [] |1281| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1286,column 6,is_stmt,isa 0
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_atoi")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1286| 
        ; call occurs [#_atoi] ; [] |1286| 
        CMPB      AL,#7                 ; [CPU_] |1286| 
        B         $C$L333,HI            ; [CPU_] |1286| 
        ; branchcc occurs ; [] |1286| 
	.dwpsn	file "../Source/prod.c",line 1292,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1292| 
        MOVB      XAR1,#35              ; [CPU_] |1292| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1292| 
	.dwpsn	file "../Source/prod.c",line 1293,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1293| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1293| 
	.dwpsn	file "../Source/prod.c",line 1292,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1292| 
	.dwpsn	file "../Source/prod.c",line 1293,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1293| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1293| 
        MOVL      XAR0,#74              ; [CPU_] |1293| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1293| 
	.dwpsn	file "../Source/prod.c",line 1300,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1300| 
        ; branch occurs ; [] |1300| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1288,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1288| 
	.dwpsn	file "../Source/prod.c",line 1290,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1290| 
        ; branch occurs ; [] |1290| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1282,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1282| 
	.dwpsn	file "../Source/prod.c",line 1284,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1284| 
        ; branch occurs ; [] |1284| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1262,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1262| 
	.dwpsn	file "../Source/prod.c",line 1264,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1264| 
        ; branch occurs ; [] |1264| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1333| 
        MOVB      XAR0,#40              ; [CPU_] |1333| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1333| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1333| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1333| 
        MOVL      XAR0,#44              ; [CPU_] |1333| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1333| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1333| 
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_sprintf")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1333| 
        ; call occurs [#_sprintf] ; [] |1333| 
        MOVL      XAR0,#44              ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1335| 
	.dwpsn	file "../Source/prod.c",line 1333,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1333| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1335| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1335| 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1335| 
        ; call occurs [#_scia_getparam] ; [] |1335| 
        MOVL      XAR0,#86              ; [CPU_] |1335| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1335,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1335| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_strtod")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1336,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1336| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1336| 
        MOVB      XAR1,#40              ; [CPU_] |1336| 
        MOVL      XAR0,#86              ; [CPU_] |1336| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1336| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1336| 
	.dwpsn	file "../Source/prod.c",line 1337,column 6,is_stmt,isa 0
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_scia_puts")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1337| 
        ; call occurs [#_scia_puts] ; [] |1337| 
	.dwpsn	file "../Source/prod.c",line 1338,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1338| 
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_puts")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1338| 
        ; call occurs [#_scia_puts] ; [] |1338| 
	.dwpsn	file "../Source/prod.c",line 1340,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1340| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1340| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1340| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1340| 
        MOVB      XAR1,#40              ; [CPU_] |1340| 
        MOVL      XAR0,#44              ; [CPU_] |1340| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1340| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1340| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1340| 
        MOVL      XAR4,XAR1             ; [CPU_] |1340| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_sprintf")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1340| 
        ; call occurs [#_sprintf] ; [] |1340| 
        MOVL      XAR4,XAR1             ; [CPU_] |1340| 
	.dwpsn	file "../Source/prod.c",line 1342,column 6,is_stmt,isa 0
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1342| 
        ; call occurs [#_scia_puts] ; [] |1342| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1346,column 6,is_stmt,isa 0
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1346| 
        ; call occurs [#_ad7738_setcal] ; [] |1346| 
	.dwpsn	file "../Source/prod.c",line 1349,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1349| 
        ; branch occurs ; [] |1349| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1143,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1143| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1143| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1143| 
        MOV       AL,#1024              ; [CPU_] |1143| 
        MOVL      XAR5,XAR1             ; [CPU_] |1143| 
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1143| 
        ; call occurs [#_scia_getparam] ; [] |1143| 
        MOVL      XAR4,XAR1             ; [CPU_] |1143| 
	.dwpsn	file "../Source/prod.c",line 1145,column 6,is_stmt,isa 0
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_atol")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1145| 
        ; call occurs [#_atol] ; [] |1145| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1145| 
	.dwpsn	file "../Source/prod.c",line 1147,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1147| 
	.dwpsn	file "../Source/prod.c",line 1145,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1145| 
	.dwpsn	file "../Source/prod.c",line 1147,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1147| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1147| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1147| 
	.dwpsn	file "../Source/prod.c",line 1150,column 6,is_stmt,isa 0
        B         $C$L405,UNC           ; [CPU_] |1150| 
        ; branch occurs ; [] |1150| 
$C$L338:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1225,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1225| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1225| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1226,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1226| 
        MOVL      XAR0,#44              ; [CPU_] |1226| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1226| 
        MOV       *-SP[3],AL            ; [CPU_] |1226| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1226| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1226| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1226| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_sprintf")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1226| 
        ; call occurs [#_sprintf] ; [] |1226| 
        MOVL      XAR0,#44              ; [CPU_] |1226| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1226| 
	.dwpsn	file "../Source/prod.c",line 1227,column 7,is_stmt,isa 0
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_scia_puts")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1227| 
        ; call occurs [#_scia_puts] ; [] |1227| 
        MOV       AL,*-SP[47]           ; [CPU_] |1227| 
	.dwpsn	file "../Source/prod.c",line 1228,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1228| 
        B         $C$L340,GEQ           ; [CPU_] |1228| 
        ; branchcc occurs ; [] |1228| 
	.dwpsn	file "../Source/prod.c",line 1229,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1229| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_scia_puts")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1229| 
        ; call occurs [#_scia_puts] ; [] |1229| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1225,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1225| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1225| 
        B         $C$L339,LT            ; [CPU_] |1225| 
        ; branchcc occurs ; [] |1225| 
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1232| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_puts")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1232| 
        ; call occurs [#_scia_puts] ; [] |1232| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1233,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1233| 
        MOVB      XAR0,#34              ; [CPU_] |1233| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1233| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1233| 
        MOV       *-SP[3],AL            ; [CPU_] |1233| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1233| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1233| 
        MOVL      XAR0,#72              ; [CPU_] |1233| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1233| 
        ADDL      ACC,XAR6              ; [CPU_] |1233| 
        MOVL      XAR4,ACC              ; [CPU_] |1233| 
        MOVL      XAR0,#44              ; [CPU_] |1233| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1233| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1233| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1233| 
        MOVL      XAR4,XAR1             ; [CPU_] |1233| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_sprintf")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1233| 
        ; call occurs [#_sprintf] ; [] |1233| 
	.dwpsn	file "../Source/prod.c",line 1235,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1233,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1233| 
	.dwpsn	file "../Source/prod.c",line 1235,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1235| 
        MOV       AL,#1024              ; [CPU_] |1235| 
        MOVL      XAR5,XAR1             ; [CPU_] |1235| 
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1235| 
        ; call occurs [#_scia_getparam] ; [] |1235| 
        MOV       *-SP[47],AL           ; [CPU_] |1235| 
        MOVL      XAR4,XAR1             ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1236,column 6,is_stmt,isa 0
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1236| 
        ; call occurs [#_scia_puts] ; [] |1236| 
	.dwpsn	file "../Source/prod.c",line 1237,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1237| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_scia_puts")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1237| 
        ; call occurs [#_scia_puts] ; [] |1237| 
        MOV       AL,*-SP[47]           ; [CPU_] |1237| 
	.dwpsn	file "../Source/prod.c",line 1238,column 6,is_stmt,isa 0
        B         $C$L343,EQ            ; [CPU_] |1238| 
        ; branchcc occurs ; [] |1238| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1242,column 6,is_stmt,isa 0
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_atoi")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1242| 
        ; call occurs [#_atoi] ; [] |1242| 
        CMPB      AL,#3                 ; [CPU_] |1242| 
        B         $C$L342,HI            ; [CPU_] |1242| 
        ; branchcc occurs ; [] |1242| 
	.dwpsn	file "../Source/prod.c",line 1248,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1248| 
        MOVB      XAR1,#34              ; [CPU_] |1248| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1248| 
	.dwpsn	file "../Source/prod.c",line 1249,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1249| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1249| 
	.dwpsn	file "../Source/prod.c",line 1248,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1248| 
	.dwpsn	file "../Source/prod.c",line 1249,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1249| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1249| 
        MOVL      XAR0,#72              ; [CPU_] |1249| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1249| 
$C$L341:    
        ADDL      ACC,XAR6              ; [CPU_] |1249| 
        MOVL      XAR4,ACC              ; [CPU_] |1249| 
        MOVL      XAR0,#44              ; [CPU_] |1249| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1249| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1249| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1249| 
        MOVL      XAR4,XAR1             ; [CPU_] |1249| 
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_sprintf")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1249| 
        ; call occurs [#_sprintf] ; [] |1249| 
        MOVL      XAR4,XAR1             ; [CPU_] |1249| 
	.dwpsn	file "../Source/prod.c",line 1252,column 6,is_stmt,isa 0
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_puts")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1252| 
        ; call occurs [#_scia_puts] ; [] |1252| 
	.dwpsn	file "../Source/prod.c",line 1253,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1253| 
	.dwpsn	file "../Source/prod.c",line 1256,column 6,is_stmt,isa 0
        B         $C$L406,UNC           ; [CPU_] |1256| 
        ; branch occurs ; [] |1256| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1244,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1244| 
	.dwpsn	file "../Source/prod.c",line 1246,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1246| 
        ; branch occurs ; [] |1246| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1239,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1239| 
	.dwpsn	file "../Source/prod.c",line 1240,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1240| 
        ; branch occurs ; [] |1240| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1306,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1306| 
        MOVL      XAR0,#44              ; [CPU_] |1306| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1306| 
        MOV       *-SP[3],#4096         ; [CPU_] |1306| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1306| 
        MOVL      XAR4,XAR1             ; [CPU_] |1306| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_sprintf")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1306| 
        ; call occurs [#_sprintf] ; [] |1306| 
	.dwpsn	file "../Source/prod.c",line 1308,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1308| 
	.dwpsn	file "../Source/prod.c",line 1306,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1306| 
	.dwpsn	file "../Source/prod.c",line 1308,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1308| 
        MOV       AL,#1024              ; [CPU_] |1308| 
        MOVL      XAR5,XAR1             ; [CPU_] |1308| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1308| 
        ; call occurs [#_scia_getparam] ; [] |1308| 
	.dwpsn	file "../Source/prod.c",line 1309,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1309| 
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_atoi")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1309| 
        ; call occurs [#_atoi] ; [] |1309| 
        MOV       *-SP[47],AL           ; [CPU_] |1309| 
	.dwpsn	file "../Source/prod.c",line 1310,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1310| 
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_scia_puts")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1310| 
        ; call occurs [#_scia_puts] ; [] |1310| 
        MOV       AL,*-SP[47]           ; [CPU_] |1310| 
	.dwpsn	file "../Source/prod.c",line 1312,column 8,is_stmt,isa 0
        B         $C$L346,LEQ           ; [CPU_] |1312| 
        ; branchcc occurs ; [] |1312| 
        CMP       AL,#4096              ; [CPU_] |1312| 
        B         $C$L346,GT            ; [CPU_] |1312| 
        ; branchcc occurs ; [] |1312| 
	.dwpsn	file "../Source/prod.c",line 1317,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1317| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_scia_puts")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1317| 
        ; call occurs [#_scia_puts] ; [] |1317| 
	.dwpsn	file "../Source/prod.c",line 1319,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1319| 
        MOVL      XAR0,#44              ; [CPU_] |1319| 
        MOV       AL,*-SP[47]           ; [CPU_] |1319| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1319| 
        MOV       *-SP[3],AL            ; [CPU_] |1319| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1319| 
        MOVL      XAR4,XAR1             ; [CPU_] |1319| 
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_sprintf")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1319| 
        ; call occurs [#_sprintf] ; [] |1319| 
        MOVL      XAR4,XAR1             ; [CPU_] |1319| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_scia_puts")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1321| 
        ; call occurs [#_scia_puts] ; [] |1321| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1326,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1326| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1326| 
        MOV       AL,*-SP[47]           ; [CPU_] |1326| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1326| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1327,column 6,is_stmt,isa 0
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_maf_rst")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1327| 
        ; call occurs [#_maf_rst] ; [] |1327| 
	.dwpsn	file "../Source/prod.c",line 1329,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1329| 
        ; branch occurs ; [] |1329| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1314,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1314| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_scia_puts")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1314| 
        ; call occurs [#_scia_puts] ; [] |1314| 
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1305| 
        ; branch occurs ; [] |1305| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1177,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1177| 
        MOVL      XAR0,#44              ; [CPU_] |1177| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1177| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1177| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1177| 
        MOVL      XAR4,XAR1             ; [CPU_] |1177| 
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_sprintf")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1177| 
        ; call occurs [#_sprintf] ; [] |1177| 
	.dwpsn	file "../Source/prod.c",line 1178,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1178| 
	.dwpsn	file "../Source/prod.c",line 1177,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1177| 
	.dwpsn	file "../Source/prod.c",line 1178,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1178| 
        MOV       AL,#1024              ; [CPU_] |1178| 
        MOVL      XAR5,XAR1             ; [CPU_] |1178| 
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1178| 
        ; call occurs [#_scia_getparam] ; [] |1178| 
	.dwpsn	file "../Source/prod.c",line 1179,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1179| 
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_atoi")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1179| 
        ; call occurs [#_atoi] ; [] |1179| 
        MOV       *-SP[58],AL           ; [CPU_] |1179| 
	.dwpsn	file "../Source/prod.c",line 1180,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1180| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_scia_puts")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1180| 
        ; call occurs [#_scia_puts] ; [] |1180| 
        MOV       AL,*-SP[58]           ; [CPU_] |1180| 
	.dwpsn	file "../Source/prod.c",line 1182,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1182| 
        CMPB      AL,#4                 ; [CPU_] |1182| 
        B         $C$L350,HIS           ; [CPU_] |1182| 
        ; branchcc occurs ; [] |1182| 
	.dwpsn	file "../Source/prod.c",line 1186,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1186| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_puts")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1186| 
        ; call occurs [#_scia_puts] ; [] |1186| 
	.dwpsn	file "../Source/prod.c",line 1187,column 6,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1187| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1192,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1192| 
        MOVL      XAR0,#44              ; [CPU_] |1192| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1192| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1192| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1192| 
        MOVL      XAR4,XAR1             ; [CPU_] |1192| 
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_sprintf")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1192| 
        ; call occurs [#_sprintf] ; [] |1192| 
	.dwpsn	file "../Source/prod.c",line 1193,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1193| 
	.dwpsn	file "../Source/prod.c",line 1192,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1192| 
	.dwpsn	file "../Source/prod.c",line 1193,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1193| 
        MOV       AL,#1024              ; [CPU_] |1193| 
        MOVL      XAR5,XAR1             ; [CPU_] |1193| 
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1193| 
        ; call occurs [#_scia_getparam] ; [] |1193| 
	.dwpsn	file "../Source/prod.c",line 1194,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1194| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_atoi")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1194| 
        ; call occurs [#_atoi] ; [] |1194| 
        MOV       *-SP[57],AL           ; [CPU_] |1194| 
	.dwpsn	file "../Source/prod.c",line 1195,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1195| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_scia_puts")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1195| 
        ; call occurs [#_scia_puts] ; [] |1195| 
        MOV       AL,*-SP[57]           ; [CPU_] |1195| 
	.dwpsn	file "../Source/prod.c",line 1199,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1199| 
        CMPB      AL,#20                ; [CPU_] |1199| 
        B         $C$L349,HIS           ; [CPU_] |1199| 
        ; branchcc occurs ; [] |1199| 
	.dwpsn	file "../Source/prod.c",line 1203,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1203| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_puts")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1203| 
        ; call occurs [#_scia_puts] ; [] |1203| 
	.dwpsn	file "../Source/prod.c",line 1206,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1206| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1206| 
        MOVL      XAR0,#44              ; [CPU_] |1206| 
        MOV       AH,*-SP[57]           ; [CPU_] |1206| 
        ADD       AL,*-SP[58]           ; [CPU_] |1206| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1206| 
        MOV       *-SP[3],AL            ; [CPU_] |1206| 
        MOV       *-SP[4],AH            ; [CPU_] |1206| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1206| 
        DEC       *-SP[57]              ; [CPU_] |1206| 
        MOVL      XAR4,XAR1             ; [CPU_] |1206| 
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_sprintf")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1206| 
        ; call occurs [#_sprintf] ; [] |1206| 
        MOVL      XAR4,XAR1             ; [CPU_] |1206| 
	.dwpsn	file "../Source/prod.c",line 1208,column 6,is_stmt,isa 0
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_puts")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1208| 
        ; call occurs [#_scia_puts] ; [] |1208| 
        MOV       AL,*-SP[57]           ; [CPU_] |1208| 
	.dwpsn	file "../Source/prod.c",line 1209,column 6,is_stmt,isa 0
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_print_sensor")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1209| 
        ; call occurs [#_print_sensor] ; [] |1209| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1213,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1213| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1213| 
        MOVB      AL,#10                ; [CPU_] |1213| 
        MOV       T,*-SP[58]            ; [CPU_] |1213| 
        MPYU      ACC,T,AL              ; [CPU_] |1213| 
        ADDL      ACC,XAR6              ; [CPU_] |1213| 
        MOVL      XAR4,ACC              ; [CPU_] |1213| 
        MOVB      XAR0,#42              ; [CPU_] |1213| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |1213| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1213| 
	.dwpsn	file "../Source/prod.c",line 1214,column 6,is_stmt,isa 0
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1214| 
        ; call occurs [#_ad7738_setcal] ; [] |1214| 
        MOVL      XAR0,#78              ; [CPU_] |1214| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1214| 
	.dwpsn	file "../Source/prod.c",line 1216,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1216| 
        MOVL      XAR1,ACC              ; [CPU_] |1216| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1216| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1216| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1216| 
	.dwpsn	file "../Source/prod.c",line 1217,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1217| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1217| 
        ; call occurs [#_ad7738_resetvall] ; [] |1217| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1221,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1221| 
        ; branch occurs ; [] |1221| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1201,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1201| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_scia_puts")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1201| 
        ; call occurs [#_scia_puts] ; [] |1201| 
	.dwpsn	file "../Source/prod.c",line 1191,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1191| 
        ; branch occurs ; [] |1191| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1184,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1184| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_puts")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1184| 
        ; call occurs [#_scia_puts] ; [] |1184| 
	.dwpsn	file "../Source/prod.c",line 1176,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1176| 
        ; branch occurs ; [] |1176| 
$C$L351:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2037,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2037| 
        B         $C$L625,LO            ; [CPU_] |2037| 
        ; branchcc occurs ; [] |2037| 
	.dwpsn	file "../Source/prod.c",line 2042,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2042| 
        CMPB      AL,#78                ; [CPU_] |2042| 
        B         $C$L352,EQ            ; [CPU_] |2042| 
        ; branchcc occurs ; [] |2042| 
        CMPB      AL,#85                ; [CPU_] |2042| 
        B         $C$L352,EQ            ; [CPU_] |2042| 
        ; branchcc occurs ; [] |2042| 
        CMPB      AL,#66                ; [CPU_] |2042| 
        B         $C$L352,EQ            ; [CPU_] |2042| 
        ; branchcc occurs ; [] |2042| 
        CMPB      AL,#68                ; [CPU_] |2042| 
        B         $C$L625,NEQ           ; [CPU_] |2042| 
        ; branchcc occurs ; [] |2042| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 2045,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2066,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2066| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 2068,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2068| 
        MOVL      XAR0,#44              ; [CPU_] |2068| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2068| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2068| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2068| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_sprintf")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2068| 
        ; call occurs [#_sprintf] ; [] |2068| 
        MOVL      XAR0,#44              ; [CPU_] |2068| 
	.dwpsn	file "../Source/prod.c",line 2069,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2069| 
	.dwpsn	file "../Source/prod.c",line 2068,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2068| 
	.dwpsn	file "../Source/prod.c",line 2069,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2069| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2069| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2069| 
        ; call occurs [#_scia_getparam] ; [] |2069| 
        MOVL      XAR0,#86              ; [CPU_] |2069| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2069| 
	.dwpsn	file "../Source/prod.c",line 2070,column 6,is_stmt,isa 0
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_atoi")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2070| 
        ; call occurs [#_atoi] ; [] |2070| 
        MOVL      XAR0,#86              ; [CPU_] |2070| 
        MOV       *-SP[57],AL           ; [CPU_] |2070| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2070| 
	.dwpsn	file "../Source/prod.c",line 2071,column 6,is_stmt,isa 0
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_scia_puts")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2071| 
        ; call occurs [#_scia_puts] ; [] |2071| 
        MOV       AL,*-SP[57]           ; [CPU_] |2071| 
	.dwpsn	file "../Source/prod.c",line 2075,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2075| 
        CMPB      AL,#20                ; [CPU_] |2075| 
        B         $C$L413,HIS           ; [CPU_] |2075| 
        ; branchcc occurs ; [] |2075| 
	.dwpsn	file "../Source/prod.c",line 2079,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2079| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_puts")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2079| 
        ; call occurs [#_scia_puts] ; [] |2079| 
	.dwpsn	file "../Source/prod.c",line 2080,column 5,is_stmt,isa 0
        DEC       *-SP[57]              ; [CPU_] |2080| 
	.dwpsn	file "../Source/prod.c",line 2082,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2082| 
        CMPB      AL,#66                ; [CPU_] |2082| 
        B         $C$L408,EQ            ; [CPU_] |2082| 
        ; branchcc occurs ; [] |2082| 
        CMPB      AL,#68                ; [CPU_] |2082| 
        B         $C$L407,EQ            ; [CPU_] |2082| 
        ; branchcc occurs ; [] |2082| 
        CMPB      AL,#78                ; [CPU_] |2082| 
        B         $C$L403,EQ            ; [CPU_] |2082| 
        ; branchcc occurs ; [] |2082| 
        CMPB      AL,#85                ; [CPU_] |2082| 
        B         $C$L625,NEQ           ; [CPU_] |2082| 
        ; branchcc occurs ; [] |2082| 
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2111| 
	.dwpsn	file "../Source/prod.c",line 2109,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2109| 
        MOV       AH,#0                 ; [CPU_] |2109| 
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
        MOV       T,*-SP[57]            ; [CPU_] |2111| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2111| 
	.dwpsn	file "../Source/prod.c",line 2109,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2109| 
	.dwpsn	file "../Source/prod.c",line 2111,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2111| 
        MPYU      ACC,T,AL              ; [CPU_] |2111| 
        ADDL      ACC,XAR6              ; [CPU_] |2111| 
        ADDB      ACC,#124              ; [CPU_] |2111| 
        MOVL      XAR1,ACC              ; [CPU_] |2111| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2111| 
        CMPB      AL,#35                ; [CPU_] |2111| 
        B         $C$L354,GT            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#35                ; [CPU_] |2111| 
        B         $C$L370,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#16                ; [CPU_] |2111| 
        B         $C$L390,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#17                ; [CPU_] |2111| 
        B         $C$L386,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#34                ; [CPU_] |2111| 
        B         $C$L377,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        B         $C$L394,UNC           ; [CPU_] |2111| 
        ; branch occurs ; [] |2111| 
$C$L354:    
        CMPB      AL,#36                ; [CPU_] |2111| 
        B         $C$L363,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#53                ; [CPU_] |2111| 
        B         $C$L359,EQ            ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
        CMPB      AL,#70                ; [CPU_] |2111| 
        B         $C$L394,NEQ           ; [CPU_] |2111| 
        ; branchcc occurs ; [] |2111| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2300,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2300| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2300| 
        MOV       AL,#1024              ; [CPU_] |2300| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2300| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2300| 
        ; call occurs [#_scia_getparam] ; [] |2300| 
        MOVL      XAR0,#86              ; [CPU_] |2300| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2300| 
	.dwpsn	file "../Source/prod.c",line 2302,column 8,is_stmt,isa 0
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_atoi")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2302| 
        ; call occurs [#_atoi] ; [] |2302| 
        MOVL      XAR0,#86              ; [CPU_] |2302| 
        MOV       *-SP[47],AL           ; [CPU_] |2302| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2302| 
	.dwpsn	file "../Source/prod.c",line 2303,column 8,is_stmt,isa 0
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_puts")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2303| 
        ; call occurs [#_scia_puts] ; [] |2303| 
        MOV       AL,*-SP[47]           ; [CPU_] |2303| 
	.dwpsn	file "../Source/prod.c",line 2304,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2304| 
        B         $C$L356,EQ            ; [CPU_] |2304| 
        ; branchcc occurs ; [] |2304| 
        CMPB      AL,#7                 ; [CPU_] |2304| 
        B         $C$L357,EQ            ; [CPU_] |2304| 
        ; branchcc occurs ; [] |2304| 
	.dwpsn	file "../Source/prod.c",line 2305,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2305| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_scia_puts")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2305| 
        ; call occurs [#_scia_puts] ; [] |2305| 
$C$L356:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2307,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2307| 
        B         $C$L357,EQ            ; [CPU_] |2307| 
        ; branchcc occurs ; [] |2307| 
        CMPB      AL,#7                 ; [CPU_] |2307| 
        B         $C$L355,NEQ           ; [CPU_] |2307| 
        ; branchcc occurs ; [] |2307| 
$C$L357:    
	.dwpsn	file "../Source/prod.c",line 2308,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2308| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2308| 
        ; call occurs [#_scia_puts] ; [] |2308| 
        MOV       AL,*-SP[47]           ; [CPU_] |2308| 
	.dwpsn	file "../Source/prod.c",line 2310,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2310| 
        B         $C$L358,EQ            ; [CPU_] |2310| 
        ; branchcc occurs ; [] |2310| 
        CMPB      AL,#7                 ; [CPU_] |2310| 
        B         $C$L393,EQ            ; [CPU_] |2310| 
        ; branchcc occurs ; [] |2310| 
        B         $C$L394,UNC           ; [CPU_] |2310| 
        ; branch occurs ; [] |2310| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2312,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2312| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2312| 
        MOV       AL,*-SP[47]           ; [CPU_] |2312| 
	.dwpsn	file "../Source/prod.c",line 2313,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2313| 
	.dwpsn	file "../Source/prod.c",line 2314,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2314| 
        ; branch occurs ; [] |2314| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2275,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2275| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2275| 
        MOV       AL,#1024              ; [CPU_] |2275| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2275| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2275| 
        ; call occurs [#_scia_getparam] ; [] |2275| 
        MOVL      XAR0,#86              ; [CPU_] |2275| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2275| 
	.dwpsn	file "../Source/prod.c",line 2277,column 8,is_stmt,isa 0
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_atoi")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2277| 
        ; call occurs [#_atoi] ; [] |2277| 
        MOVL      XAR0,#86              ; [CPU_] |2277| 
        MOV       *-SP[47],AL           ; [CPU_] |2277| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2277| 
	.dwpsn	file "../Source/prod.c",line 2278,column 8,is_stmt,isa 0
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_scia_puts")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2278| 
        ; call occurs [#_scia_puts] ; [] |2278| 
        MOV       AL,*-SP[47]           ; [CPU_] |2278| 
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2279| 
        B         $C$L360,EQ            ; [CPU_] |2279| 
        ; branchcc occurs ; [] |2279| 
        CMPB      AL,#7                 ; [CPU_] |2279| 
        B         $C$L361,EQ            ; [CPU_] |2279| 
        ; branchcc occurs ; [] |2279| 
	.dwpsn	file "../Source/prod.c",line 2280,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2280| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_scia_puts")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2280| 
        ; call occurs [#_scia_puts] ; [] |2280| 
$C$L360:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2282,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2282| 
        B         $C$L361,EQ            ; [CPU_] |2282| 
        ; branchcc occurs ; [] |2282| 
        CMPB      AL,#7                 ; [CPU_] |2282| 
        B         $C$L359,NEQ           ; [CPU_] |2282| 
        ; branchcc occurs ; [] |2282| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2283,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2283| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_puts")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2283| 
        ; call occurs [#_scia_puts] ; [] |2283| 
        MOV       AL,*-SP[47]           ; [CPU_] |2283| 
	.dwpsn	file "../Source/prod.c",line 2285,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2285| 
        B         $C$L362,EQ            ; [CPU_] |2285| 
        ; branchcc occurs ; [] |2285| 
        CMPB      AL,#7                 ; [CPU_] |2285| 
        B         $C$L393,EQ            ; [CPU_] |2285| 
        ; branchcc occurs ; [] |2285| 
        B         $C$L394,UNC           ; [CPU_] |2285| 
        ; branch occurs ; [] |2285| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2287,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2287| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2287| 
        MOV       AL,*-SP[47]           ; [CPU_] |2287| 
	.dwpsn	file "../Source/prod.c",line 2288,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2288| 
	.dwpsn	file "../Source/prod.c",line 2289,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2289| 
        ; branch occurs ; [] |2289| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2241,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2241| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2241| 
        MOV       AL,#1024              ; [CPU_] |2241| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2241| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2241| 
        ; call occurs [#_scia_getparam] ; [] |2241| 
        MOVL      XAR0,#86              ; [CPU_] |2241| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2241| 
	.dwpsn	file "../Source/prod.c",line 2244,column 8,is_stmt,isa 0
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_atoi")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2244| 
        ; call occurs [#_atoi] ; [] |2244| 
        MOVL      XAR0,#86              ; [CPU_] |2244| 
        MOV       *-SP[47],AL           ; [CPU_] |2244| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2244| 
	.dwpsn	file "../Source/prod.c",line 2245,column 8,is_stmt,isa 0
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_puts")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2245| 
        ; call occurs [#_scia_puts] ; [] |2245| 
        MOV       AL,*-SP[47]           ; [CPU_] |2245| 
	.dwpsn	file "../Source/prod.c",line 2246,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2246| 
        B         $C$L364,EQ            ; [CPU_] |2246| 
        ; branchcc occurs ; [] |2246| 
        CMPB      AL,#3                 ; [CPU_] |2246| 
        B         $C$L365,EQ            ; [CPU_] |2246| 
        ; branchcc occurs ; [] |2246| 
        CMPB      AL,#4                 ; [CPU_] |2246| 
        B         $C$L366,EQ            ; [CPU_] |2246| 
        ; branchcc occurs ; [] |2246| 
        CMPB      AL,#7                 ; [CPU_] |2246| 
        B         $C$L367,EQ            ; [CPU_] |2246| 
        ; branchcc occurs ; [] |2246| 
	.dwpsn	file "../Source/prod.c",line 2247,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2247| 
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_scia_puts")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2247| 
        ; call occurs [#_scia_puts] ; [] |2247| 
$C$L364:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2249,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2249| 
        B         $C$L367,EQ            ; [CPU_] |2249| 
        ; branchcc occurs ; [] |2249| 
$C$L365:    
        CMPB      AL,#3                 ; [CPU_] |2249| 
        B         $C$L367,EQ            ; [CPU_] |2249| 
        ; branchcc occurs ; [] |2249| 
$C$L366:    
        CMPB      AL,#4                 ; [CPU_] |2249| 
        B         $C$L367,EQ            ; [CPU_] |2249| 
        ; branchcc occurs ; [] |2249| 
        CMPB      AL,#7                 ; [CPU_] |2249| 
        B         $C$L363,NEQ           ; [CPU_] |2249| 
        ; branchcc occurs ; [] |2249| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2250,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2250| 
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_puts")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2250| 
        ; call occurs [#_scia_puts] ; [] |2250| 
        MOV       AL,*-SP[47]           ; [CPU_] |2250| 
	.dwpsn	file "../Source/prod.c",line 2252,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2252| 
        B         $C$L369,EQ            ; [CPU_] |2252| 
        ; branchcc occurs ; [] |2252| 
        CMPB      AL,#3                 ; [CPU_] |2252| 
        B         $C$L368,EQ            ; [CPU_] |2252| 
        ; branchcc occurs ; [] |2252| 
        CMPB      AL,#4                 ; [CPU_] |2252| 
        B         $C$L385,EQ            ; [CPU_] |2252| 
        ; branchcc occurs ; [] |2252| 
        CMPB      AL,#7                 ; [CPU_] |2252| 
        B         $C$L393,EQ            ; [CPU_] |2252| 
        ; branchcc occurs ; [] |2252| 
        B         $C$L394,UNC           ; [CPU_] |2252| 
        ; branch occurs ; [] |2252| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2258,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2258| 
        MOV       AH,#15820             ; [CPU_] |2258| 
	.dwpsn	file "../Source/prod.c",line 2260,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2260| 
        ; branch occurs ; [] |2260| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2254,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2254| 
        MOV       AH,#15649             ; [CPU_] |2254| 
	.dwpsn	file "../Source/prod.c",line 2256,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2256| 
        ; branch occurs ; [] |2256| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2207,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2207| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2207| 
        MOV       AL,#1024              ; [CPU_] |2207| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2207| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2207| 
        ; call occurs [#_scia_getparam] ; [] |2207| 
        MOVL      XAR0,#86              ; [CPU_] |2207| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2207| 
	.dwpsn	file "../Source/prod.c",line 2210,column 8,is_stmt,isa 0
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_atoi")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2210| 
        ; call occurs [#_atoi] ; [] |2210| 
        MOVL      XAR0,#86              ; [CPU_] |2210| 
        MOV       *-SP[47],AL           ; [CPU_] |2210| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2210| 
	.dwpsn	file "../Source/prod.c",line 2211,column 8,is_stmt,isa 0
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_puts")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2211| 
        ; call occurs [#_scia_puts] ; [] |2211| 
        MOV       AL,*-SP[47]           ; [CPU_] |2211| 
	.dwpsn	file "../Source/prod.c",line 2212,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2212| 
        B         $C$L371,EQ            ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
        CMPB      AL,#3                 ; [CPU_] |2212| 
        B         $C$L372,EQ            ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
        CMPB      AL,#4                 ; [CPU_] |2212| 
        B         $C$L373,EQ            ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
        CMPB      AL,#7                 ; [CPU_] |2212| 
        B         $C$L374,EQ            ; [CPU_] |2212| 
        ; branchcc occurs ; [] |2212| 
	.dwpsn	file "../Source/prod.c",line 2213,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2213| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_puts")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2213| 
        ; call occurs [#_scia_puts] ; [] |2213| 
$C$L371:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2215,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2215| 
        B         $C$L374,EQ            ; [CPU_] |2215| 
        ; branchcc occurs ; [] |2215| 
$C$L372:    
        CMPB      AL,#3                 ; [CPU_] |2215| 
        B         $C$L374,EQ            ; [CPU_] |2215| 
        ; branchcc occurs ; [] |2215| 
$C$L373:    
        CMPB      AL,#4                 ; [CPU_] |2215| 
        B         $C$L374,EQ            ; [CPU_] |2215| 
        ; branchcc occurs ; [] |2215| 
        CMPB      AL,#7                 ; [CPU_] |2215| 
        B         $C$L370,NEQ           ; [CPU_] |2215| 
        ; branchcc occurs ; [] |2215| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2216,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2216| 
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_scia_puts")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2216| 
        ; call occurs [#_scia_puts] ; [] |2216| 
        MOV       AL,*-SP[47]           ; [CPU_] |2216| 
	.dwpsn	file "../Source/prod.c",line 2218,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2218| 
        B         $C$L376,EQ            ; [CPU_] |2218| 
        ; branchcc occurs ; [] |2218| 
        CMPB      AL,#3                 ; [CPU_] |2218| 
        B         $C$L385,EQ            ; [CPU_] |2218| 
        ; branchcc occurs ; [] |2218| 
        CMPB      AL,#4                 ; [CPU_] |2218| 
        B         $C$L375,EQ            ; [CPU_] |2218| 
        ; branchcc occurs ; [] |2218| 
        CMPB      AL,#7                 ; [CPU_] |2218| 
        B         $C$L393,EQ            ; [CPU_] |2218| 
        ; branchcc occurs ; [] |2218| 
        B         $C$L394,UNC           ; [CPU_] |2218| 
        ; branch occurs ; [] |2218| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2228,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2228| 
        MOV       AH,#16672             ; [CPU_] |2228| 
	.dwpsn	file "../Source/prod.c",line 2230,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2230| 
        ; branch occurs ; [] |2230| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2220,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2220| 
        MOV       AH,#16073             ; [CPU_] |2220| 
	.dwpsn	file "../Source/prod.c",line 2222,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2222| 
        ; branch occurs ; [] |2222| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2173,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2173| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2173| 
        MOV       AL,#1024              ; [CPU_] |2173| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2173| 
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2173| 
        ; call occurs [#_scia_getparam] ; [] |2173| 
        MOVL      XAR0,#86              ; [CPU_] |2173| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2173| 
	.dwpsn	file "../Source/prod.c",line 2176,column 8,is_stmt,isa 0
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_atoi")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2176| 
        ; call occurs [#_atoi] ; [] |2176| 
        MOVL      XAR0,#86              ; [CPU_] |2176| 
        MOV       *-SP[47],AL           ; [CPU_] |2176| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2176| 
	.dwpsn	file "../Source/prod.c",line 2177,column 8,is_stmt,isa 0
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_puts")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2177| 
        ; call occurs [#_scia_puts] ; [] |2177| 
        MOV       AL,*-SP[47]           ; [CPU_] |2177| 
	.dwpsn	file "../Source/prod.c",line 2178,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2178| 
        B         $C$L378,EQ            ; [CPU_] |2178| 
        ; branchcc occurs ; [] |2178| 
        CMPB      AL,#3                 ; [CPU_] |2178| 
        B         $C$L379,EQ            ; [CPU_] |2178| 
        ; branchcc occurs ; [] |2178| 
        CMPB      AL,#4                 ; [CPU_] |2178| 
        B         $C$L380,EQ            ; [CPU_] |2178| 
        ; branchcc occurs ; [] |2178| 
        CMPB      AL,#7                 ; [CPU_] |2178| 
        B         $C$L381,EQ            ; [CPU_] |2178| 
        ; branchcc occurs ; [] |2178| 
	.dwpsn	file "../Source/prod.c",line 2179,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2179| 
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_scia_puts")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2179| 
        ; call occurs [#_scia_puts] ; [] |2179| 
$C$L378:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2181,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2181| 
        B         $C$L381,EQ            ; [CPU_] |2181| 
        ; branchcc occurs ; [] |2181| 
$C$L379:    
        CMPB      AL,#3                 ; [CPU_] |2181| 
        B         $C$L381,EQ            ; [CPU_] |2181| 
        ; branchcc occurs ; [] |2181| 
$C$L380:    
        CMPB      AL,#4                 ; [CPU_] |2181| 
        B         $C$L381,EQ            ; [CPU_] |2181| 
        ; branchcc occurs ; [] |2181| 
        CMPB      AL,#7                 ; [CPU_] |2181| 
        B         $C$L377,NEQ           ; [CPU_] |2181| 
        ; branchcc occurs ; [] |2181| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2182,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2182| 
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_puts")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2182| 
        ; call occurs [#_scia_puts] ; [] |2182| 
        MOV       AL,*-SP[47]           ; [CPU_] |2182| 
	.dwpsn	file "../Source/prod.c",line 2184,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2184| 
        B         $C$L385,EQ            ; [CPU_] |2184| 
        ; branchcc occurs ; [] |2184| 
        CMPB      AL,#3                 ; [CPU_] |2184| 
        B         $C$L384,EQ            ; [CPU_] |2184| 
        ; branchcc occurs ; [] |2184| 
        CMPB      AL,#4                 ; [CPU_] |2184| 
        B         $C$L382,EQ            ; [CPU_] |2184| 
        ; branchcc occurs ; [] |2184| 
        CMPB      AL,#7                 ; [CPU_] |2184| 
        B         $C$L393,EQ            ; [CPU_] |2184| 
        ; branchcc occurs ; [] |2184| 
        B         $C$L394,UNC           ; [CPU_] |2184| 
        ; branch occurs ; [] |2184| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2194,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2194| 
        MOV       AH,#16843             ; [CPU_] |2194| 
$C$L383:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2194| 
        MOV       AL,*-SP[47]           ; [CPU_] |2194| 
	.dwpsn	file "../Source/prod.c",line 2195,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2195| 
	.dwpsn	file "../Source/prod.c",line 2196,column 8,is_stmt,isa 0
        B         $C$L398,UNC           ; [CPU_] |2196| 
        ; branch occurs ; [] |2196| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2190,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2190| 
        MOV       AH,#16418             ; [CPU_] |2190| 
	.dwpsn	file "../Source/prod.c",line 2192,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2192| 
        ; branch occurs ; [] |2192| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2186,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2186| 
	.dwpsn	file "../Source/prod.c",line 2188,column 8,is_stmt,isa 0
        B         $C$L383,UNC           ; [CPU_] |2188| 
        ; branch occurs ; [] |2188| 
$C$L386:    
	.dwpsn	file "../Source/prod.c",line 2144,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2144| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2144| 
        MOV       AL,#1024              ; [CPU_] |2144| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2144| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2144| 
        ; call occurs [#_scia_getparam] ; [] |2144| 
        MOVL      XAR0,#86              ; [CPU_] |2144| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2144| 
	.dwpsn	file "../Source/prod.c",line 2146,column 8,is_stmt,isa 0
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_atoi")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2146| 
        ; call occurs [#_atoi] ; [] |2146| 
        MOVL      XAR0,#86              ; [CPU_] |2146| 
        MOV       *-SP[47],AL           ; [CPU_] |2146| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2146| 
	.dwpsn	file "../Source/prod.c",line 2147,column 8,is_stmt,isa 0
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_scia_puts")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2147| 
        ; call occurs [#_scia_puts] ; [] |2147| 
        MOV       AL,*-SP[47]           ; [CPU_] |2147| 
	.dwpsn	file "../Source/prod.c",line 2148,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2148| 
        B         $C$L388,EQ            ; [CPU_] |2148| 
        ; branchcc occurs ; [] |2148| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2148| 
        B         $C$L387,EQ            ; [CPU_] |2148| 
        ; branchcc occurs ; [] |2148| 
	.dwpsn	file "../Source/prod.c",line 2149,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2149| 
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2149| 
        ; call occurs [#_scia_puts] ; [] |2149| 
$C$L387:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2151,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2151| 
        B         $C$L388,EQ            ; [CPU_] |2151| 
        ; branchcc occurs ; [] |2151| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2151| 
        B         $C$L386,NEQ           ; [CPU_] |2151| 
        ; branchcc occurs ; [] |2151| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2152,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2152| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2152| 
        ; call occurs [#_scia_puts] ; [] |2152| 
        MOV       AL,*-SP[47]           ; [CPU_] |2152| 
	.dwpsn	file "../Source/prod.c",line 2154,column 7,is_stmt,isa 0
        B         $C$L389,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#1                 ; [CPU_] |2154| 
        B         $C$L396,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#7                 ; [CPU_] |2154| 
        B         $C$L393,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        B         $C$L394,UNC           ; [CPU_] |2154| 
        ; branch occurs ; [] |2154| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2156,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2156| 
        MOV       AH,#16397             ; [CPU_] |2156| 
	.dwpsn	file "../Source/prod.c",line 2158,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2158| 
        ; branch occurs ; [] |2158| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2115,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2115| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2115| 
        MOV       AL,#1024              ; [CPU_] |2115| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2115| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2115| 
        ; call occurs [#_scia_getparam] ; [] |2115| 
        MOVL      XAR0,#86              ; [CPU_] |2115| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2115| 
	.dwpsn	file "../Source/prod.c",line 2117,column 8,is_stmt,isa 0
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_atoi")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2117| 
        ; call occurs [#_atoi] ; [] |2117| 
        MOVL      XAR0,#86              ; [CPU_] |2117| 
        MOV       *-SP[47],AL           ; [CPU_] |2117| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2117| 
	.dwpsn	file "../Source/prod.c",line 2118,column 8,is_stmt,isa 0
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_puts")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2118| 
        ; call occurs [#_scia_puts] ; [] |2118| 
        MOV       AL,*-SP[47]           ; [CPU_] |2118| 
	.dwpsn	file "../Source/prod.c",line 2119,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2119| 
        B         $C$L392,EQ            ; [CPU_] |2119| 
        ; branchcc occurs ; [] |2119| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2119| 
        B         $C$L391,EQ            ; [CPU_] |2119| 
        ; branchcc occurs ; [] |2119| 
	.dwpsn	file "../Source/prod.c",line 2120,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2120| 
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_puts")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2120| 
        ; call occurs [#_scia_puts] ; [] |2120| 
$C$L391:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2122,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2122| 
        B         $C$L392,EQ            ; [CPU_] |2122| 
        ; branchcc occurs ; [] |2122| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2122| 
        B         $C$L390,NEQ           ; [CPU_] |2122| 
        ; branchcc occurs ; [] |2122| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2123,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2123| 
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_puts")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2123| 
        ; call occurs [#_scia_puts] ; [] |2123| 
        MOV       AL,*-SP[47]           ; [CPU_] |2123| 
	.dwpsn	file "../Source/prod.c",line 2125,column 7,is_stmt,isa 0
        B         $C$L396,EQ            ; [CPU_] |2125| 
        ; branchcc occurs ; [] |2125| 
        CMPB      AL,#1                 ; [CPU_] |2125| 
        B         $C$L395,EQ            ; [CPU_] |2125| 
        ; branchcc occurs ; [] |2125| 
        CMPB      AL,#7                 ; [CPU_] |2125| 
        B         $C$L394,NEQ           ; [CPU_] |2125| 
        ; branchcc occurs ; [] |2125| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2135,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2135| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2135| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2135| 
        MOV       AL,#0                 ; [CPU_] |2135| 
        MOV       AH,#17096             ; [CPU_] |2135| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2135| 
        ; call occurs [#FS$$DIV] ; [] |2135| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2135| 
        MOV       AL,*-SP[47]           ; [CPU_] |2135| 
	.dwpsn	file "../Source/prod.c",line 2136,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2136| 
        MOV       *-SP[47],AL           ; [CPU_] |2136| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2326,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2326| 
        MOV       AH,#0                 ; [CPU_] |2326| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2326| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2326| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2326| 
        ; call occurs [#FS$$CMP] ; [] |2326| 
        CMPB      AL,#0                 ; [CPU_] |2326| 
        B         $C$L399,NEQ           ; [CPU_] |2326| 
        ; branchcc occurs ; [] |2326| 
	.dwpsn	file "../Source/prod.c",line 2327,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2327| 
	.dwpsn	file "../Source/prod.c",line 2328,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2328| 
        ; branch occurs ; [] |2328| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2131,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2131| 
        MOV       AH,#16104             ; [CPU_] |2131| 
	.dwpsn	file "../Source/prod.c",line 2133,column 8,is_stmt,isa 0
        B         $C$L397,UNC           ; [CPU_] |2133| 
        ; branch occurs ; [] |2133| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2127,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2127| 
$C$L397:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2127| 
        MOV       AL,*-SP[47]           ; [CPU_] |2127| 
	.dwpsn	file "../Source/prod.c",line 2128,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2128| 
$C$L398:    
        MOV       *-SP[47],AL           ; [CPU_] |2128| 
$C$L399:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2331,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2331| 
        B         $C$L402,EQ            ; [CPU_] |2331| 
        ; branchcc occurs ; [] |2331| 
	.dwpsn	file "../Source/prod.c",line 2337,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2337| 
	.dwpsn	file "../Source/prod.c",line 2341,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2341| 
	.dwpsn	file "../Source/prod.c",line 2338,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2338| 
	.dwpsn	file "../Source/prod.c",line 2341,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2341| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2338,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2338| 
	.dwpsn	file "../Source/prod.c",line 2341,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2341| 
        ADD       AL,*-SP[57]           ; [CPU_] |2341| 
        MOV       *-SP[3],AL            ; [CPU_] |2341| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2341| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2341| 
        ANDB      AL,#0x0f              ; [CPU_] |2341| 
        MOV       ACC,AL << 1           ; [CPU_] |2341| 
        ADDL      ACC,XAR6              ; [CPU_] |2341| 
        MOVL      XAR4,ACC              ; [CPU_] |2341| 
        MOVL      XAR0,#44              ; [CPU_] |2341| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2341| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2341| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2341| 
        MOVL      XAR4,XAR1             ; [CPU_] |2341| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_sprintf")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2341| 
        ; call occurs [#_sprintf] ; [] |2341| 
        MOVL      XAR4,XAR1             ; [CPU_] |2341| 
	.dwpsn	file "../Source/prod.c",line 2343,column 6,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2343| 
        ; call occurs [#_scia_puts] ; [] |2343| 
        MOVL      XAR0,#40              ; [CPU_] |2343| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2343| 
	.dwpsn	file "../Source/prod.c",line 2345,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2345| 
	.dwpsn	file "../Source/prod.c",line 2339,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2339| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2346,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2346| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2346| 
        CMPL      ACC,XAR6              ; [CPU_] |2346| 
        B         $C$L401,NEQ           ; [CPU_] |2346| 
        ; branchcc occurs ; [] |2346| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2347,column 8,is_stmt,isa 0
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_update_units")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2347| 
        ; call occurs [#_update_units] ; [] |2347| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2349,column 8,is_stmt,isa 0
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2349| 
        ; call occurs [#_ad7738_setcal] ; [] |2349| 
        MOVL      XAR0,#78              ; [CPU_] |2349| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2349| 
	.dwpsn	file "../Source/prod.c",line 2350,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2350| 
        MOVL      XAR4,ACC              ; [CPU_] |2350| 
        MOVL      XAR0,#88              ; [CPU_] |2350| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2350| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2350| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2350| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2350| 
        MOVL      XAR0,#88              ; [CPU_] |2350| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2350| 
	.dwpsn	file "../Source/prod.c",line 2351,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2351| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2351| 
        ; call occurs [#_ad7738_resetvall] ; [] |2351| 
 clrc INTM
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2345,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2345| 
        ADDB      XAR1,#10              ; [CPU_] |2345| 
        MOV       AL,*-SP[58]           ; [CPU_] |2345| 
        CMPB      AL,#4                 ; [CPU_] |2345| 
        B         $C$L400,LO            ; [CPU_] |2345| 
        ; branchcc occurs ; [] |2345| 
        B         $C$L632,UNC           ; [CPU_] |2345| 
        ; branch occurs ; [] |2345| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2332,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2332| 
	.dwpsn	file "../Source/prod.c",line 2334,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2334| 
        ; branch occurs ; [] |2334| 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2088| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2088| 
        MOVL      XAR0,#44              ; [CPU_] |2088| 
        ADD       AL,*-SP[57]           ; [CPU_] |2088| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2088| 
        MOV       *-SP[3],AL            ; [CPU_] |2088| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2088| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2088| 
        MOV       *-SP[47],AL           ; [CPU_] |2088| 
        MOVL      XAR4,XAR1             ; [CPU_] |2088| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_sprintf")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2088| 
        ; call occurs [#_sprintf] ; [] |2088| 
	.dwpsn	file "../Source/prod.c",line 2090,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2090| 
        MOV       AL,#1024              ; [CPU_] |2090| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2090| 
	.dwpsn	file "../Source/prod.c",line 2088,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2088| 
	.dwpsn	file "../Source/prod.c",line 2090,column 6,is_stmt,isa 0
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2090| 
        ; call occurs [#_scia_getparam] ; [] |2090| 
        MOVZ      AR6,AL                ; [CPU_] |2090| 
        CMPB      AL,#15                ; [CPU_] |2090| 
        B         $C$L404,LOS           ; [CPU_] |2090| 
        ; branchcc occurs ; [] |2090| 
	.dwpsn	file "../Source/prod.c",line 2094,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2094| 
        MOVB      XAR0,#15              ; [CPU_] |2094| 
	.dwpsn	file "../Source/prod.c",line 2093,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2093| 
	.dwpsn	file "../Source/prod.c",line 2094,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2094| 
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2096,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2096| 
        MOVB      AL,#152               ; [CPU_] |2096| 
        MOV       T,*-SP[57]            ; [CPU_] |2096| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2096| 
        MOVL      XAR0,#86              ; [CPU_] |2096| 
        MPYU      ACC,T,AL              ; [CPU_] |2096| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2096| 
        ADDL      ACC,XAR7              ; [CPU_] |2096| 
        ADDB      ACC,#98               ; [CPU_] |2096| 
        MOVL      XAR1,ACC              ; [CPU_] |2096| 
        MOVL      XAR4,ACC              ; [CPU_] |2096| 
        MOVB      AH,#1                 ; [CPU_] |2096| 
        ADD       AH,AR6                ; [CPU_] |2096| 
        MOVU      ACC,AH                ; [CPU_] |2096| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_memcpy")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2096| 
        ; call occurs [#_memcpy] ; [] |2096| 
        MOVL      XAR0,#86              ; [CPU_] |2096| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2096| 
	.dwpsn	file "../Source/prod.c",line 2098,column 6,is_stmt,isa 0
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_puts")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2098| 
        ; call occurs [#_scia_puts] ; [] |2098| 
	.dwpsn	file "../Source/prod.c",line 2099,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2099| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_scia_puts")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2099| 
        ; call occurs [#_scia_puts] ; [] |2099| 
	.dwpsn	file "../Source/prod.c",line 2102,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2102| 
        MOV       AL,*-SP[47]           ; [CPU_] |2102| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2102| 
        MOV       *-SP[3],AL            ; [CPU_] |2102| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2102| 
$C$L405:    
        MOVL      XAR0,#44              ; [CPU_] |2102| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2102| 
        MOVL      XAR4,XAR1             ; [CPU_] |2102| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_sprintf")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2102| 
        ; call occurs [#_sprintf] ; [] |2102| 
        MOVL      XAR4,XAR1             ; [CPU_] |2102| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2104,column 6,is_stmt,isa 0
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_puts")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2104| 
        ; call occurs [#_scia_puts] ; [] |2104| 
	.dwpsn	file "../Source/prod.c",line 2105,column 6,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2105| 
        ; branch occurs ; [] |2105| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2399,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2399| 
        MOVB      AL,#152               ; [CPU_] |2399| 
        MOV       T,*-SP[57]            ; [CPU_] |2399| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2399| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2399| 
        MPYU      ACC,T,AL              ; [CPU_] |2399| 
        MOVB      XAR0,#124             ; [CPU_] |2399| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2399| 
        ADDL      ACC,XAR6              ; [CPU_] |2399| 
        MOVL      XAR1,ACC              ; [CPU_] |2399| 
        MOVB      AL,#1                 ; [CPU_] |2399| 
        ADD       AL,*-SP[57]           ; [CPU_] |2399| 
        MOV       *-SP[47],AL           ; [CPU_] |2399| 
        MOV       *-SP[3],AL            ; [CPU_] |2399| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2399| 
        MOVL      XAR0,#70              ; [CPU_] |2399| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2399| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2399| 
        MOV       ACC,AL << 1           ; [CPU_] |2399| 
        ADDL      ACC,XAR6              ; [CPU_] |2399| 
        MOVL      XAR4,ACC              ; [CPU_] |2399| 
        MOVL      XAR0,#44              ; [CPU_] |2399| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2399| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2399| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2399| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_sprintf")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2399| 
        ; call occurs [#_sprintf] ; [] |2399| 
        MOVL      XAR0,#44              ; [CPU_] |2399| 
	.dwpsn	file "../Source/prod.c",line 2401,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2401| 
	.dwpsn	file "../Source/prod.c",line 2399,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2399| 
	.dwpsn	file "../Source/prod.c",line 2401,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2401| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2401| 
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2401| 
        ; call occurs [#_scia_getparam] ; [] |2401| 
        MOVL      XAR0,#86              ; [CPU_] |2401| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2401,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2401| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_strtod")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2402,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2402| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2402| 
        MOVL      XAR0,#86              ; [CPU_] |2402| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2402| 
	.dwpsn	file "../Source/prod.c",line 2403,column 6,is_stmt,isa 0
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_scia_puts")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2403| 
        ; call occurs [#_scia_puts] ; [] |2403| 
	.dwpsn	file "../Source/prod.c",line 2404,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2404| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2404| 
        ; call occurs [#_scia_puts] ; [] |2404| 
	.dwpsn	file "../Source/prod.c",line 2406,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2406| 
        MOVL      XAR0,#44              ; [CPU_] |2406| 
        MOV       AL,*-SP[47]           ; [CPU_] |2406| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2406| 
        MOV       *-SP[3],AL            ; [CPU_] |2406| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2406| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_sprintf")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2406| 
        ; call occurs [#_sprintf] ; [] |2406| 
        MOVL      XAR0,#44              ; [CPU_] |2406| 
	.dwpsn	file "../Source/prod.c",line 2407,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2407| 
	.dwpsn	file "../Source/prod.c",line 2406,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2406| 
	.dwpsn	file "../Source/prod.c",line 2407,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2407| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2407| 
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2407| 
        ; call occurs [#_scia_getparam] ; [] |2407| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_strtod")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2408,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2408| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2408| 
        MOVL      XAR0,#86              ; [CPU_] |2408| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2408| 
	.dwpsn	file "../Source/prod.c",line 2409,column 6,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_scia_puts")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2409| 
        ; call occurs [#_scia_puts] ; [] |2409| 
	.dwpsn	file "../Source/prod.c",line 2410,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2410| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_scia_puts")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2410| 
        ; call occurs [#_scia_puts] ; [] |2410| 
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2413| 
        MOVB      XAR0,#228             ; [CPU_] |2413| 
        MOV       AL,*-SP[47]           ; [CPU_] |2413| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2413| 
        MOV       *-SP[3],AL            ; [CPU_] |2413| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2413| 
        MOVB      XAR0,#230             ; [CPU_] |2413| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2413| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2413| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2413| 
	.dwpsn	file "../Source/prod.c",line 2422,column 6,is_stmt,isa 0
        B         $C$L492,UNC           ; [CPU_] |2422| 
        ; branch occurs ; [] |2422| 
$C$L408:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[57]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2362,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2362| 
        MOV       AL,*-SP[47]           ; [CPU_] |2362| 
        MOVL      XAR0,#44              ; [CPU_] |2362| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2362| 
        MOV       *-SP[3],AL            ; [CPU_] |2362| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2362| 
        MOVL      XAR4,XAR1             ; [CPU_] |2362| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_sprintf")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2362| 
        ; call occurs [#_sprintf] ; [] |2362| 
	.dwpsn	file "../Source/prod.c",line 2363,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2363| 
	.dwpsn	file "../Source/prod.c",line 2362,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2362| 
	.dwpsn	file "../Source/prod.c",line 2363,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2363| 
        MOV       AL,#1024              ; [CPU_] |2363| 
        MOVL      XAR5,XAR1             ; [CPU_] |2363| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2363| 
        ; call occurs [#_scia_getparam] ; [] |2363| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_strtod")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2365,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2365| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_scia_puts")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2365| 
        ; call occurs [#_scia_puts] ; [] |2365| 
	.dwpsn	file "../Source/prod.c",line 2367,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2367| 
        MOV       AH,#0                 ; [CPU_] |2367| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2367| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2367| 
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2367| 
        ; call occurs [#FS$$CMP] ; [] |2367| 
        CMPB      AL,#0                 ; [CPU_] |2367| 
        B         $C$L412,EQ            ; [CPU_] |2367| 
        ; branchcc occurs ; [] |2367| 
	.dwpsn	file "../Source/prod.c",line 2371,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2371| 
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_puts")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2371| 
        ; call occurs [#_scia_puts] ; [] |2371| 
	.dwpsn	file "../Source/prod.c",line 2372,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2372| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2372| 
        MOVB      AL,#152               ; [CPU_] |2372| 
        MOV       T,*-SP[57]            ; [CPU_] |2372| 
        MPYU      ACC,T,AL              ; [CPU_] |2372| 
        ADDL      ACC,XAR6              ; [CPU_] |2372| 
        MOVL      XAR1,ACC              ; [CPU_] |2372| 
        MOVB      XAR0,#224             ; [CPU_] |2372| 
	.dwpsn	file "../Source/prod.c",line 2375,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2375| 
	.dwpsn	file "../Source/prod.c",line 2372,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2372| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2372| 
	.dwpsn	file "../Source/prod.c",line 2375,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2375| 
        MOV       AL,*-SP[47]           ; [CPU_] |2375| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2375| 
        MOV       *-SP[3],AL            ; [CPU_] |2375| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2375| 
        MOVL      XAR0,#44              ; [CPU_] |2375| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2375| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2375| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_sprintf")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2375| 
        ; call occurs [#_sprintf] ; [] |2375| 
        MOVL      XAR0,#44              ; [CPU_] |2375| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2375| 
	.dwpsn	file "../Source/prod.c",line 2377,column 6,is_stmt,isa 0
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_scia_puts")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2377| 
        ; call occurs [#_scia_puts] ; [] |2377| 
	.dwpsn	file "../Source/prod.c",line 2373,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2373| 
	.dwpsn	file "../Source/prod.c",line 2379,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2379| 
        CMPB      AL,#247               ; [CPU_] |2379| 
        B         $C$L632,NEQ           ; [CPU_] |2379| 
        ; branchcc occurs ; [] |2379| 
	.dwpsn	file "../Source/prod.c",line 2381,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2381| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2381| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2381| 
        MOV       AL,#0                 ; [CPU_] |2381| 
        MOV       AH,#17096             ; [CPU_] |2381| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2381| 
        ; call occurs [#FS$$DIV] ; [] |2381| 
        MOVB      XAR0,#126             ; [CPU_] |2381| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2381| 
        MOVL      XAR0,#40              ; [CPU_] |2381| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2381| 
	.dwpsn	file "../Source/prod.c",line 2384,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2384| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2385,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2385| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2385| 
        CMPL      ACC,XAR6              ; [CPU_] |2385| 
        B         $C$L411,NEQ           ; [CPU_] |2385| 
        ; branchcc occurs ; [] |2385| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2388,column 9,is_stmt,isa 0
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2388| 
        ; call occurs [#_ad7738_setcal] ; [] |2388| 
        MOVL      XAR0,#78              ; [CPU_] |2388| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2388| 
	.dwpsn	file "../Source/prod.c",line 2389,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2389| 
        MOVL      XAR4,ACC              ; [CPU_] |2389| 
        MOVL      XAR0,#88              ; [CPU_] |2389| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2389| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2389| 
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2389| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2389| 
        MOVL      XAR0,#88              ; [CPU_] |2389| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2389| 
	.dwpsn	file "../Source/prod.c",line 2390,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2390| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2390| 
        ; call occurs [#_ad7738_resetvall] ; [] |2390| 
 clrc INTM
$C$L411:    
	.dwpsn	file "../Source/prod.c",line 2384,column 20,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2384| 
        ADDB      XAR1,#10              ; [CPU_] |2384| 
        MOV       AL,*-SP[58]           ; [CPU_] |2384| 
        CMPB      AL,#4                 ; [CPU_] |2384| 
        B         $C$L410,LO            ; [CPU_] |2384| 
        ; branchcc occurs ; [] |2384| 
        B         $C$L632,UNC           ; [CPU_] |2384| 
        ; branch occurs ; [] |2384| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2369,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2369| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_scia_puts")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2369| 
        ; call occurs [#_scia_puts] ; [] |2369| 
	.dwpsn	file "../Source/prod.c",line 2361,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |2361| 
        ; branch occurs ; [] |2361| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2077,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2077| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_scia_puts")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2077| 
        ; call occurs [#_scia_puts] ; [] |2077| 
	.dwpsn	file "../Source/prod.c",line 2067,column 5,is_stmt,isa 0
        B         $C$L353,UNC           ; [CPU_] |2067| 
        ; branch occurs ; [] |2067| 
$C$L414:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3039,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3039| 
        B         $C$L625,LO            ; [CPU_] |3039| 
        ; branchcc occurs ; [] |3039| 
	.dwpsn	file "../Source/prod.c",line 3042,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3042| 
        CMPB      AL,#83                ; [CPU_] |3042| 
        B         $C$L415,GT            ; [CPU_] |3042| 
        ; branchcc occurs ; [] |3042| 
        CMPB      AL,#83                ; [CPU_] |3042| 
        B         $C$L419,EQ            ; [CPU_] |3042| 
        ; branchcc occurs ; [] |3042| 
        CMPB      AL,#73                ; [CPU_] |3042| 
        B         $C$L424,EQ            ; [CPU_] |3042| 
        ; branchcc occurs ; [] |3042| 
        CMPB      AL,#76                ; [CPU_] |3042| 
        B         $C$L428,EQ            ; [CPU_] |3042| 
        ; branchcc occurs ; [] |3042| 
        CMPB      AL,#80                ; [CPU_] |3042| 
        B         $C$L421,EQ            ; [CPU_] |3042| 
        ; branchcc occurs ; [] |3042| 
        B         $C$L625,UNC           ; [CPU_] |3042| 
        ; branch occurs ; [] |3042| 
$C$L415:    
        CMPB      AL,#84                ; [CPU_] |3042| 
        B         $C$L417,EQ            ; [CPU_] |3042| 
        ; branchcc occurs ; [] |3042| 
        CMPB      AL,#86                ; [CPU_] |3042| 
        B         $C$L625,NEQ           ; [CPU_] |3042| 
        ; branchcc occurs ; [] |3042| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3070,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3070| 
        B         $C$L416,LOS           ; [CPU_] |3070| 
        ; branchcc occurs ; [] |3070| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L416,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3070,column 6,is_stmt,isa 0
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_atoi")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3070| 
        ; call occurs [#_atoi] ; [] |3070| 
        CMPB      AL,#4                 ; [CPU_] |3070| 
        B         $C$L416,GT            ; [CPU_] |3070| 
        ; branchcc occurs ; [] |3070| 
        CMPB      AL,#0                 ; [CPU_] |3070| 
        B         $C$L416,LEQ           ; [CPU_] |3070| 
        ; branchcc occurs ; [] |3070| 
	.dwpsn	file "../Source/prod.c",line 3072,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3072| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3072| 
        ADD       ACC,AR5               ; [CPU_] |3072| 
        MOVL      XAR4,ACC              ; [CPU_] |3072| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3072| 
	.dwpsn	file "../Source/prod.c",line 3073,column 6,is_stmt,isa 0
        B         $C$L426,UNC           ; [CPU_] |3073| 
        ; branch occurs ; [] |3073| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 3074,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3074| 
        B         $C$L426,UNC           ; [CPU_] |3074| 
        ; branch occurs ; [] |3074| 
$C$L417:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3046| 
        B         $C$L418,LOS           ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L418,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_atoi")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3046| 
        ; call occurs [#_atoi] ; [] |3046| 
        CMPB      AL,#4                 ; [CPU_] |3046| 
        MOVZ      AR4,AL                ; [CPU_] |3046| 
        B         $C$L418,GT            ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
        CMPB      AL,#0                 ; [CPU_] |3046| 
        B         $C$L418,LEQ           ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3048,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3048| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3048| 
	.dwpsn	file "../Source/prod.c",line 3051,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3051| 
        ; branch occurs ; [] |3051| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 3052,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3052| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3052| 
        ; call occurs [#_ad7738_resettare] ; [] |3052| 
	.dwpsn	file "../Source/prod.c",line 3053,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3053| 
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3053| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3053| 
	.dwpsn	file "../Source/prod.c",line 3054,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3054| 
        B         $C$L426,UNC           ; [CPU_] |3054| 
        ; branch occurs ; [] |3054| 
$C$L419:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3080,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3080| 
        B         $C$L420,LOS           ; [CPU_] |3080| 
        ; branchcc occurs ; [] |3080| 
        MOVL      ACC,XAR4              ; [CPU_] |3080| 
        MOVL      XAR0,#66              ; [CPU_] |3080| 
        ADDB      ACC,#2                ; [CPU_] |3080| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3080| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3080| 
        CMPB      AL,#67                ; [CPU_] |3080| 
        B         $C$L420,NEQ           ; [CPU_] |3080| 
        ; branchcc occurs ; [] |3080| 
	.dwpsn	file "../Source/prod.c",line 3081,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3081| 
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3081| 
        ; call occurs [#_shunt_switch] ; [] |3081| 
	.dwpsn	file "../Source/prod.c",line 3082,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3082| 
	.dwpsn	file "../Source/prod.c",line 3083,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3083| 
        ; branch occurs ; [] |3083| 
$C$L420:    
	.dwpsn	file "../Source/prod.c",line 3084,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3084| 
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3084| 
        ; call occurs [#_shunt_switch] ; [] |3084| 
	.dwpsn	file "../Source/prod.c",line 3085,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3085| 
        B         $C$L631,UNC           ; [CPU_] |3085| 
        ; branch occurs ; [] |3085| 
$C$L421:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3060,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3060| 
        B         $C$L423,LOS           ; [CPU_] |3060| 
        ; branchcc occurs ; [] |3060| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L423,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3060,column 6,is_stmt,isa 0
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_atoi")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3060| 
        ; call occurs [#_atoi] ; [] |3060| 
        CMPB      AL,#4                 ; [CPU_] |3060| 
        B         $C$L423,GT            ; [CPU_] |3060| 
        ; branchcc occurs ; [] |3060| 
        CMPB      AL,#0                 ; [CPU_] |3060| 
        B         $C$L423,LEQ           ; [CPU_] |3060| 
        ; branchcc occurs ; [] |3060| 
	.dwpsn	file "../Source/prod.c",line 3062,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3062| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3062| 
        ADD       ACC,AR5               ; [CPU_] |3062| 
        MOVL      XAR4,ACC              ; [CPU_] |3062| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3062| 
$C$L422:    
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3062| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3062| 
	.dwpsn	file "../Source/prod.c",line 3063,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3063| 
        ; branch occurs ; [] |3063| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3064,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3064| 
        B         $C$L422,UNC           ; [CPU_] |3064| 
        ; branch occurs ; [] |3064| 
$C$L424:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3099,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3099| 
        B         $C$L427,LOS           ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L427,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3099,column 6,is_stmt,isa 0
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_atoi")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3099| 
        ; call occurs [#_atoi] ; [] |3099| 
        CMPB      AL,#2                 ; [CPU_] |3099| 
        B         $C$L427,GT            ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
        CMPB      AL,#0                 ; [CPU_] |3099| 
        B         $C$L427,LEQ           ; [CPU_] |3099| 
        ; branchcc occurs ; [] |3099| 
	.dwpsn	file "../Source/prod.c",line 3101,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3101| 
        ADD       AR6,AL                ; [CPU_] |3101| 
        MOVL      XAR0,#78              ; [CPU_] |3101| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3101| 
        ADD       ACC,AR6               ; [CPU_] |3101| 
$C$L425:    
        MOVL      XAR1,ACC              ; [CPU_] |3101| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3101| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3101| 
        ; call occurs [#_ad7738_resettare] ; [] |3101| 
	.dwpsn	file "../Source/prod.c",line 3102,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3102| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3102| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3102| 
	.dwpsn	file "../Source/prod.c",line 3103,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3103| 
$C$L426:    
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3103| 
        ; call occurs [#_ad7738_resetvall] ; [] |3103| 
	.dwpsn	file "../Source/prod.c",line 3104,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3104| 
        ; branch occurs ; [] |3104| 
$C$L427:    
	.dwpsn	file "../Source/prod.c",line 3105,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3105| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3105| 
        ; call occurs [#_ad7738_resettare] ; [] |3105| 
	.dwpsn	file "../Source/prod.c",line 3106,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3106| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3106| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3106| 
	.dwpsn	file "../Source/prod.c",line 3107,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3107| 
        B         $C$L426,UNC           ; [CPU_] |3107| 
        ; branch occurs ; [] |3107| 
$C$L428:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3091,column 6,is_stmt,isa 0
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_atoi")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3091| 
        ; call occurs [#_atoi] ; [] |3091| 
	.dwpsn	file "../Source/prod.c",line 3094,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3094| 
        MOV       *-SP[58],AL           ; [CPU_] |3094| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3094| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3094| 
	.dwpsn	file "../Source/prod.c",line 3095,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3095| 
        ; branch occurs ; [] |3095| 
$C$L429:    
	.dwpsn	file "../Source/prod.c",line 1042,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1042| 
        CMPB      AL,#76                ; [CPU_] |1042| 
        B         $C$L430,GT            ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
        CMPB      AL,#76                ; [CPU_] |1042| 
        B         $C$L438,EQ            ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
        CMPB      AL,#65                ; [CPU_] |1042| 
        B         $C$L431,EQ            ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
        CMPB      AL,#68                ; [CPU_] |1042| 
        B         $C$L442,EQ            ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
        B         $C$L625,UNC           ; [CPU_] |1042| 
        ; branch occurs ; [] |1042| 
$C$L430:    
        CMPB      AL,#79                ; [CPU_] |1042| 
        B         $C$L441,EQ            ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
        CMPB      AL,#83                ; [CPU_] |1042| 
        B         $C$L439,EQ            ; [CPU_] |1042| 
        ; branchcc occurs ; [] |1042| 
        B         $C$L625,UNC           ; [CPU_] |1042| 
        ; branch occurs ; [] |1042| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 1047,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1047| 
	.dwpsn	file "../Source/prod.c",line 1048,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1048| 
	.dwpsn	file "../Source/prod.c",line 1047,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1047| 
	.dwpsn	file "../Source/prod.c",line 1048,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1048| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1048| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1048| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1048| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1048| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1048| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1048| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1048| 
        MOVL      XAR4,XAR1             ; [CPU_] |1048| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_sprintf")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1048| 
        ; call occurs [#_sprintf] ; [] |1048| 
	.dwpsn	file "../Source/prod.c",line 1050,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1050| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_scia_puts")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1050| 
        ; call occurs [#_scia_puts] ; [] |1050| 
	.dwpsn	file "../Source/prod.c",line 1051,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1051| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1051| 
        LSR       AL,8                  ; [CPU_] |1051| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1051| 
        MOV       *-SP[3],AL            ; [CPU_] |1051| 
        IN        AL,*(04004H)          ; [CPU_] |1051| 
        MOVL      XAR4,XAR1             ; [CPU_] |1051| 
        ANDB      AL,#0xff              ; [CPU_] |1051| 
        MOV       *-SP[4],AL            ; [CPU_] |1051| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_sprintf")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1051| 
        ; call occurs [#_sprintf] ; [] |1051| 
	.dwpsn	file "../Source/prod.c",line 1053,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1053| 
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_scia_puts")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1053| 
        ; call occurs [#_scia_puts] ; [] |1053| 
	.dwpsn	file "../Source/prod.c",line 1054,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1054| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1054| 
        MOVL      XAR0,#44              ; [CPU_] |1054| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1054| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1054| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1054| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1054| 
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_sprintf")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1054| 
        ; call occurs [#_sprintf] ; [] |1054| 
        MOVL      XAR0,#44              ; [CPU_] |1054| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1054| 
	.dwpsn	file "../Source/prod.c",line 1055,column 6,is_stmt,isa 0
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_scia_puts")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1055| 
        ; call occurs [#_scia_puts] ; [] |1055| 
	.dwpsn	file "../Source/prod.c",line 1056,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1056| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1056| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1056| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1056| 
        MOVL      XAR0,#44              ; [CPU_] |1056| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1056| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1056| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_sprintf")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1056| 
        ; call occurs [#_sprintf] ; [] |1056| 
        MOVL      XAR0,#44              ; [CPU_] |1056| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1056| 
	.dwpsn	file "../Source/prod.c",line 1058,column 6,is_stmt,isa 0
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_scia_puts")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1058| 
        ; call occurs [#_scia_puts] ; [] |1058| 
	.dwpsn	file "../Source/prod.c",line 1060,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1060| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1060| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1060| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1060| 
        MOVL      XAR0,#72              ; [CPU_] |1060| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1060| 
        ADDL      ACC,XAR6              ; [CPU_] |1060| 
        MOVL      XAR4,ACC              ; [CPU_] |1060| 
        MOVL      XAR0,#44              ; [CPU_] |1060| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1060| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1060| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1060| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_sprintf")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1060| 
        ; call occurs [#_sprintf] ; [] |1060| 
        MOVL      XAR0,#44              ; [CPU_] |1060| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1060| 
	.dwpsn	file "../Source/prod.c",line 1062,column 6,is_stmt,isa 0
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_scia_puts")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1062| 
        ; call occurs [#_scia_puts] ; [] |1062| 
	.dwpsn	file "../Source/prod.c",line 1063,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1063| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1063| 
        B         $C$L432,EQ            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
        MOVB      XAR0,#34              ; [CPU_] |1063| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1063| 
        CMPB      AL,#1                 ; [CPU_] |1063| 
        B         $C$L433,NEQ           ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1065,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1065| 
        MOVL      XAR0,#74              ; [CPU_] |1065| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1065| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1065| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1065| 
        ADDL      ACC,XAR6              ; [CPU_] |1065| 
        MOVL      XAR4,ACC              ; [CPU_] |1065| 
        MOVL      XAR0,#44              ; [CPU_] |1065| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1065| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1065| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1065| 
        MOVL      XAR4,XAR1             ; [CPU_] |1065| 
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_sprintf")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1065| 
        ; call occurs [#_sprintf] ; [] |1065| 
        MOVL      XAR4,XAR1             ; [CPU_] |1065| 
	.dwpsn	file "../Source/prod.c",line 1067,column 7,is_stmt,isa 0
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_scia_puts")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1067| 
        ; call occurs [#_scia_puts] ; [] |1067| 
$C$L433:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1069,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1069| 
        B         $C$L434,NEQ           ; [CPU_] |1069| 
        ; branchcc occurs ; [] |1069| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1069| 
        B         $C$L435,UNC           ; [CPU_] |1069| 
        ; branch occurs ; [] |1069| 
$C$L434:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1069| 
$C$L435:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1069| 
        MOVL      XAR0,#44              ; [CPU_] |1069| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1069| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1069| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1069| 
        MOVL      XAR4,XAR1             ; [CPU_] |1069| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_sprintf")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1069| 
        ; call occurs [#_sprintf] ; [] |1069| 
        MOVL      XAR4,XAR1             ; [CPU_] |1069| 
	.dwpsn	file "../Source/prod.c",line 1071,column 6,is_stmt,isa 0
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_scia_puts")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1071| 
        ; call occurs [#_scia_puts] ; [] |1071| 
	.dwpsn	file "../Source/prod.c",line 1073,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1073| 
        MOVB      XAR0,#38              ; [CPU_] |1073| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1073| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1073| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1073| 
        MOVL      XAR0,#44              ; [CPU_] |1073| 
        MOV       *-SP[3],AL            ; [CPU_] |1073| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1073| 
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_sprintf")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1073| 
        ; call occurs [#_sprintf] ; [] |1073| 
        MOVL      XAR0,#44              ; [CPU_] |1073| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1073| 
	.dwpsn	file "../Source/prod.c",line 1075,column 6,is_stmt,isa 0
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_scia_puts")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1075| 
        ; call occurs [#_scia_puts] ; [] |1075| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1077,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |1077| 
$C$L436:    
	.dwpsn	file "../Source/prod.c",line 1078,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1078| 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_scia_puts")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1078| 
        ; call occurs [#_scia_puts] ; [] |1078| 
        MOV       AL,*-SP[58]           ; [CPU_] |1078| 
	.dwpsn	file "../Source/prod.c",line 1079,column 7,is_stmt,isa 0
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_print_channel")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1079| 
        ; call occurs [#_print_channel] ; [] |1079| 
	.dwpsn	file "../Source/prod.c",line 1080,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1080| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_print_sensor")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1080| 
        ; call occurs [#_print_sensor] ; [] |1080| 
	.dwpsn	file "../Source/prod.c",line 1077,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1077| 
        INC       *-SP[58]              ; [CPU_] |1077| 
        MOV       AL,*-SP[58]           ; [CPU_] |1077| 
        CMPB      AL,#4                 ; [CPU_] |1077| 
        B         $C$L436,LO            ; [CPU_] |1077| 
        ; branchcc occurs ; [] |1077| 
	.dwpsn	file "../Source/prod.c",line 1083,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1083| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_scia_puts")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1083| 
        ; call occurs [#_scia_puts] ; [] |1083| 
	.dwpsn	file "../Source/prod.c",line 1084,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1084| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1084| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1084| 
        MOVL      ACC,XAR4              ; [CPU_] |1084| 
        ADD       ACC,#1607 << 1        ; [CPU_] |1084| 
        MOVL      XAR4,ACC              ; [CPU_] |1084| 
        MOVL      XAR0,#44              ; [CPU_] |1084| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1084| 
        MOV       *-SP[3],AL            ; [CPU_] |1084| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1084| 
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_sprintf")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1084| 
        ; call occurs [#_sprintf] ; [] |1084| 
        MOVL      XAR0,#44              ; [CPU_] |1084| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1084| 
	.dwpsn	file "../Source/prod.c",line 1086,column 6,is_stmt,isa 0
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_scia_puts")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1086| 
        ; call occurs [#_scia_puts] ; [] |1086| 
        MOVL      XAR0,#40              ; [CPU_] |1086| 
	.dwpsn	file "../Source/prod.c",line 1087,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1087| 
	.dwpsn	file "../Source/prod.c",line 1086,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1086| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1088,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1088| 
        MOVB      AL,#65                ; [CPU_] |1088| 
        MOVL      XAR0,#44              ; [CPU_] |1088| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1088| 
        ADD       AL,*-SP[47]           ; [CPU_] |1088| 
        MOV       *-SP[3],AL            ; [CPU_] |1088| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1088| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1088| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1088| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_sprintf")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1088| 
        ; call occurs [#_sprintf] ; [] |1088| 
        MOVL      XAR0,#44              ; [CPU_] |1088| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1088| 
	.dwpsn	file "../Source/prod.c",line 1090,column 7,is_stmt,isa 0
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_scia_puts")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1090| 
        ; call occurs [#_scia_puts] ; [] |1090| 
	.dwpsn	file "../Source/prod.c",line 1087,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1087| 
	.dwpsn	file "../Source/prod.c",line 1090,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1090| 
	.dwpsn	file "../Source/prod.c",line 1087,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1087| 
        B         $C$L437,LT            ; [CPU_] |1087| 
        ; branchcc occurs ; [] |1087| 
	.dwpsn	file "../Source/prod.c",line 1092,column 6,is_stmt,isa 0
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_print_vfd")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1092| 
        ; call occurs [#_print_vfd] ; [] |1092| 
	.dwpsn	file "../Source/prod.c",line 1093,column 6,is_stmt,isa 0
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_print_dac")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1093| 
        ; call occurs [#_print_dac] ; [] |1093| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1094,column 6,is_stmt,isa 0
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_print_limits")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1094| 
        ; call occurs [#_print_limits] ; [] |1094| 
	.dwpsn	file "../Source/prod.c",line 1095,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1095| 
        ; branch occurs ; [] |1095| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1099,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1099| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_scia_puts")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1099| 
        ; call occurs [#_scia_puts] ; [] |1099| 
	.dwpsn	file "../Source/prod.c",line 1101,column 11,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |1101| 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1102,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1102| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1102| 
        MOVL      XAR0,#44              ; [CPU_] |1102| 
        ADD       AL,*-SP[57]           ; [CPU_] |1102| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1102| 
        MOVZ      AR1,AL                ; [CPU_] |1102| 
        MOV       *-SP[3],AL            ; [CPU_] |1102| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1102| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_sprintf")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1102| 
        ; call occurs [#_sprintf] ; [] |1102| 
        MOVL      XAR0,#44              ; [CPU_] |1102| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1102| 
	.dwpsn	file "../Source/prod.c",line 1103,column 7,is_stmt,isa 0
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_scia_puts")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1103| 
        ; call occurs [#_scia_puts] ; [] |1103| 
        MOV       AL,*-SP[57]           ; [CPU_] |1103| 
	.dwpsn	file "../Source/prod.c",line 1104,column 7,is_stmt,isa 0
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_print_sensor")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1104| 
        ; call occurs [#_print_sensor] ; [] |1104| 
	.dwpsn	file "../Source/prod.c",line 1101,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1101| 
        MOV       *-SP[57],AR1          ; [CPU_] |1101| 
        CMPB      AL,#20                ; [CPU_] |1101| 
        B         $C$L440,LO            ; [CPU_] |1101| 
        ; branchcc occurs ; [] |1101| 
        B         $C$L632,UNC           ; [CPU_] |1101| 
        ; branch occurs ; [] |1101| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1115,column 6,is_stmt,isa 0
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_print_dac")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1115| 
        ; call occurs [#_print_dac] ; [] |1115| 
	.dwpsn	file "../Source/prod.c",line 1116,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1116| 
        ; branch occurs ; [] |1116| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1110,column 6,is_stmt,isa 0
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_print_vfd")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1110| 
        ; call occurs [#_print_vfd] ; [] |1110| 
	.dwpsn	file "../Source/prod.c",line 1111,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1111| 
        ; branch occurs ; [] |1111| 
$C$L443:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2659,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2659| 
        B         $C$L625,LO            ; [CPU_] |2659| 
        ; branchcc occurs ; [] |2659| 
	.dwpsn	file "../Source/prod.c",line 2662,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2662| 
        CMPB      AL,#68                ; [CPU_] |2662| 
        B         $C$L444,EQ            ; [CPU_] |2662| 
        ; branchcc occurs ; [] |2662| 
        CMPB      AL,#83                ; [CPU_] |2662| 
        B         $C$L450,EQ            ; [CPU_] |2662| 
        ; branchcc occurs ; [] |2662| 
        B         $C$L625,UNC           ; [CPU_] |2662| 
        ; branch occurs ; [] |2662| 
$C$L444:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2780,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2780| 
        B         $C$L625,LO            ; [CPU_] |2780| 
        ; branchcc occurs ; [] |2780| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L625,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2784,column 6,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_atoi")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2784| 
        ; call occurs [#_atoi] ; [] |2784| 
        MOV       *-SP[57],AL           ; [CPU_] |2784| 
	.dwpsn	file "../Source/prod.c",line 2786,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2786| 
        CMPB      AL,#4                 ; [CPU_] |2786| 
        B         $C$L625,HIS           ; [CPU_] |2786| 
        ; branchcc occurs ; [] |2786| 
	.dwpsn	file "../Source/prod.c",line 2792,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2792| 
        MOV       *-SP[57],AL           ; [CPU_] |2792| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2792| 
        MOV       T,AL                  ; [CPU_] |2792| 
        MOVB      AL,#12                ; [CPU_] |2792| 
        MPYU      ACC,T,AL              ; [CPU_] |2792| 
        ADDL      ACC,XAR6              ; [CPU_] |2792| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2792| 
        MOVL      XAR1,ACC              ; [CPU_] |2792| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2792| 
        CMPB      AL,#7                 ; [CPU_] |2792| 
        B         $C$L625,NEQ           ; [CPU_] |2792| 
        ; branchcc occurs ; [] |2792| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_strtod")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2796,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2796| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2798,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2798| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2798| 
        MOVL      ACC,XAR6              ; [CPU_] |2798| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2798| 
        ; call occurs [#FS$$CMP] ; [] |2798| 
        CMPB      AL,#0                 ; [CPU_] |2798| 
        B         $C$L625,LT            ; [CPU_] |2798| 
        ; branchcc occurs ; [] |2798| 
        MOV       AL,#0                 ; [CPU_] |2798| 
        MOV       AH,#16672             ; [CPU_] |2798| 
        MOVL      XAR0,#88              ; [CPU_] |2798| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2798| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2798| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2798| 
        ; call occurs [#FS$$CMP] ; [] |2798| 
        CMPB      AL,#0                 ; [CPU_] |2798| 
        B         $C$L625,GT            ; [CPU_] |2798| 
        ; branchcc occurs ; [] |2798| 
	.dwpsn	file "../Source/prod.c",line 2804,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2804| 
        MOV       AH,#0                 ; [CPU_] |2804| 
        MOVL      XAR0,#88              ; [CPU_] |2804| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2804| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2804| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2804| 
        ; call occurs [#FS$$CMP] ; [] |2804| 
        CMPB      AL,#0                 ; [CPU_] |2804| 
        B         $C$L445,GEQ           ; [CPU_] |2804| 
        ; branchcc occurs ; [] |2804| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2804| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2804| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2804| 
        B         $C$L446,UNC           ; [CPU_] |2804| 
        ; branch occurs ; [] |2804| 
$C$L445:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2804| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2804| 
$C$L446:    
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2804| 
        ; call occurs [#FS$$MPY] ; [] |2804| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2804| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2804| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2804| 
        ; call occurs [#FS$$ADD] ; [] |2804| 
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2804| 
        ; call occurs [#FS$$TOLL] ; [] |2804| 
	.dwpsn	file "../Source/prod.c",line 2811,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2811| 
	.dwpsn	file "../Source/prod.c",line 2804,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2804| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2804| 
	.dwpsn	file "../Source/prod.c",line 2811,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2811| 
        CMP64     ACC:P                 ; [CPU_] |2811| 
        B         $C$L448,LEQ           ; [CPU_] |2811| 
        ; branchcc occurs ; [] |2811| 
	.dwpsn	file "../Source/prod.c",line 2813,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2813| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2813| 
        MOV       *-SP[2],#0            ; [CPU_] |2813| 
        MOV       *-SP[1],#0            ; [CPU_] |2813| 
        MOVL      P,*-SP[32]            ; [CPU_] |2813| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2813| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$954, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2813| 
        ; call occurs [#LL$$CMP] ; [] |2813| 
        CMPB      AL,#0                 ; [CPU_] |2813| 
        B         $C$L447,GEQ           ; [CPU_] |2813| 
        ; branchcc occurs ; [] |2813| 
	.dwpsn	file "../Source/prod.c",line 2816,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2816| 
        MOV       *-SP[35],AL           ; [CPU_] |2816| 
        B         $C$L449,UNC           ; [CPU_] |2816| 
        ; branch occurs ; [] |2816| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 2814,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2814| 
	.dwpsn	file "../Source/prod.c",line 2815,column 6,is_stmt,isa 0
        B         $C$L449,UNC           ; [CPU_] |2815| 
        ; branch occurs ; [] |2815| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 2812,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2812| 
$C$L449:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2819,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2819| 
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2819| 
        ; call occurs [#_mcbsp_xmit] ; [] |2819| 
	.dwpsn	file "../Source/prod.c",line 2820,column 6,is_stmt,isa 0
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_latch_dac")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2820| 
        ; call occurs [#_latch_dac] ; [] |2820| 
	.dwpsn	file "../Source/prod.c",line 2822,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2822| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2822| 
        MOVL      XAR0,#44              ; [CPU_] |2822| 
        ADD       AL,*-SP[57]           ; [CPU_] |2822| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2822| 
        MOV       *-SP[3],AL            ; [CPU_] |2822| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2822| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2822| 
        MOV       AL,*-SP[35]           ; [CPU_] |2822| 
        MOV       *-SP[7],AL            ; [CPU_] |2822| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2822| 
        MOVL      XAR4,XAR1             ; [CPU_] |2822| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_sprintf")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2822| 
        ; call occurs [#_sprintf] ; [] |2822| 
        MOVL      XAR4,XAR1             ; [CPU_] |2822| 
	.dwpsn	file "../Source/prod.c",line 2826,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2826| 
        ; branch occurs ; [] |2826| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2669,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2669| 
        MOVL      XAR0,#44              ; [CPU_] |2669| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2669| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2669| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2669| 
        MOVL      XAR4,XAR1             ; [CPU_] |2669| 
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_sprintf")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2669| 
        ; call occurs [#_sprintf] ; [] |2669| 
	.dwpsn	file "../Source/prod.c",line 2670,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2670| 
	.dwpsn	file "../Source/prod.c",line 2669,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2669| 
	.dwpsn	file "../Source/prod.c",line 2670,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2670| 
        MOV       AL,#1024              ; [CPU_] |2670| 
        MOVL      XAR5,XAR1             ; [CPU_] |2670| 
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2670| 
        ; call occurs [#_scia_getparam] ; [] |2670| 
	.dwpsn	file "../Source/prod.c",line 2671,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2671| 
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_atoi")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2671| 
        ; call occurs [#_atoi] ; [] |2671| 
        MOV       *-SP[57],AL           ; [CPU_] |2671| 
	.dwpsn	file "../Source/prod.c",line 2672,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2672| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2672| 
        ; call occurs [#_scia_puts] ; [] |2672| 
        MOV       AL,*-SP[57]           ; [CPU_] |2672| 
	.dwpsn	file "../Source/prod.c",line 2674,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2674| 
        CMPB      AL,#4                 ; [CPU_] |2674| 
        B         $C$L465,HIS           ; [CPU_] |2674| 
        ; branchcc occurs ; [] |2674| 
	.dwpsn	file "../Source/prod.c",line 2678,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2678| 
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_scia_puts")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2678| 
        ; call occurs [#_scia_puts] ; [] |2678| 
        MOVL      XAR0,#62              ; [CPU_] |2678| 
	.dwpsn	file "../Source/prod.c",line 2682,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2682| 
	.dwpsn	file "../Source/prod.c",line 2678,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2678| 
	.dwpsn	file "../Source/prod.c",line 2682,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2682| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2683,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2683| 
        MOVL      XAR0,#44              ; [CPU_] |2683| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2683| 
        MOV       *-SP[3],AL            ; [CPU_] |2683| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2683| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2683| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2683| 
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_sprintf")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2683| 
        ; call occurs [#_sprintf] ; [] |2683| 
        MOVL      XAR0,#44              ; [CPU_] |2683| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2683| 
	.dwpsn	file "../Source/prod.c",line 2684,column 7,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_scia_puts")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2684| 
        ; call occurs [#_scia_puts] ; [] |2684| 
	.dwpsn	file "../Source/prod.c",line 2685,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2685| 
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_scia_puts")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2685| 
        ; call occurs [#_scia_puts] ; [] |2685| 
	.dwpsn	file "../Source/prod.c",line 2682,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2682| 
	.dwpsn	file "../Source/prod.c",line 2685,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2685| 
	.dwpsn	file "../Source/prod.c",line 2682,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2682| 
        B         $C$L451,LT            ; [CPU_] |2682| 
        ; branchcc occurs ; [] |2682| 
	.dwpsn	file "../Source/prod.c",line 2688,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2688| 
        MOVB      XAR0,#14              ; [CPU_] |2688| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2688| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2688| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2688| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2688| 
        MOVL      XAR0,#44              ; [CPU_] |2688| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2688| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2688| 
        MOVL      XAR4,XAR1             ; [CPU_] |2688| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_sprintf")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2688| 
        ; call occurs [#_sprintf] ; [] |2688| 
	.dwpsn	file "../Source/prod.c",line 2689,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2689| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_scia_puts")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2689| 
        ; call occurs [#_scia_puts] ; [] |2689| 
	.dwpsn	file "../Source/prod.c",line 2690,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2690| 
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_scia_puts")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2690| 
        ; call occurs [#_scia_puts] ; [] |2690| 
	.dwpsn	file "../Source/prod.c",line 2691,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2691| 
	.dwpsn	file "../Source/prod.c",line 2690,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2690| 
	.dwpsn	file "../Source/prod.c",line 2691,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2691| 
        DEC       *-SP[57]              ; [CPU_] |2691| 
        MOV       *-SP[47],AH           ; [CPU_] |2691| 
        MOV       *-SP[3],AH            ; [CPU_] |2691| 
        MOVL      XAR4,XAR1             ; [CPU_] |2691| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_sprintf")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2691| 
        ; call occurs [#_sprintf] ; [] |2691| 
	.dwpsn	file "../Source/prod.c",line 2693,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2693| 
        MOVL      XAR4,XAR1             ; [CPU_] |2693| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2693| 
        MOV       AL,#1024              ; [CPU_] |2693| 
        MOVL      XAR5,XAR1             ; [CPU_] |2693| 
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2693| 
        ; call occurs [#_scia_getparam] ; [] |2693| 
        MOVL      XAR4,XAR1             ; [CPU_] |2693| 
	.dwpsn	file "../Source/prod.c",line 2694,column 6,is_stmt,isa 0
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_atoi")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2694| 
        ; call occurs [#_atoi] ; [] |2694| 
	.dwpsn	file "../Source/prod.c",line 2687,column 6,is_stmt,isa 0
        MOV       *-SP[60],#7           ; [CPU_] |2687| 
	.dwpsn	file "../Source/prod.c",line 2694,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2695,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2695| 
        B         $C$L452,LO            ; [CPU_] |2695| 
        ; branchcc occurs ; [] |2695| 
        CMPB      AL,#7                 ; [CPU_] |2695| 
        B         $C$L452,EQ            ; [CPU_] |2695| 
        ; branchcc occurs ; [] |2695| 
	.dwpsn	file "../Source/prod.c",line 2697,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2697| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_scia_puts")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2697| 
        ; call occurs [#_scia_puts] ; [] |2697| 
	.dwpsn	file "../Source/prod.c",line 2696,column 7,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2696| 
$C$L452:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2700,column 6,is_stmt,isa 0
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_scia_puts")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2700| 
        ; call occurs [#_scia_puts] ; [] |2700| 
	.dwpsn	file "../Source/prod.c",line 2701,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2701| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_scia_puts")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2701| 
        ; call occurs [#_scia_puts] ; [] |2701| 
	.dwpsn	file "../Source/prod.c",line 2702,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2702| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2702| 
        MOVB      AL,#12                ; [CPU_] |2702| 
        MOV       T,*-SP[57]            ; [CPU_] |2702| 
        MPYU      ACC,T,AL              ; [CPU_] |2702| 
        ADDL      ACC,XAR6              ; [CPU_] |2702| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2702| 
        MOVL      XAR1,ACC              ; [CPU_] |2702| 
        MOV       AL,*-SP[59]           ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2704,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2704| 
	.dwpsn	file "../Source/prod.c",line 2702,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2704,column 6,is_stmt,isa 0
        B         $C$L459,EQ            ; [CPU_] |2704| 
        ; branchcc occurs ; [] |2704| 
	.dwpsn	file "../Source/prod.c",line 2706,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2706| 
        B         $C$L454,EQ            ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2706| 
        B         $C$L454,EQ            ; [CPU_] |2706| 
        ; branchcc occurs ; [] |2706| 
	.dwpsn	file "../Source/prod.c",line 2709,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2709| 
        B         $C$L453,EQ            ; [CPU_] |2709| 
        ; branchcc occurs ; [] |2709| 
        CMPB      AL,#4                 ; [CPU_] |2709| 
        B         $C$L455,NEQ           ; [CPU_] |2709| 
        ; branchcc occurs ; [] |2709| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2710,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2710| 
        B         $C$L455,UNC           ; [CPU_] |2710| 
        ; branch occurs ; [] |2710| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2708,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2708| 
$C$L455:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2715,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2715| 
        MOV       AL,*-SP[60]           ; [CPU_] |2715| 
        MOVL      XAR0,#44              ; [CPU_] |2715| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2715| 
        MOV       *-SP[3],AL            ; [CPU_] |2715| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2715| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_sprintf")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2715| 
        ; call occurs [#_sprintf] ; [] |2715| 
        MOVL      XAR0,#44              ; [CPU_] |2715| 
	.dwpsn	file "../Source/prod.c",line 2716,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2716| 
	.dwpsn	file "../Source/prod.c",line 2715,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2715| 
	.dwpsn	file "../Source/prod.c",line 2716,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2716| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2716| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2716| 
        ; call occurs [#_scia_getparam] ; [] |2716| 
        MOVL      XAR0,#86              ; [CPU_] |2716| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2716| 
	.dwpsn	file "../Source/prod.c",line 2717,column 8,is_stmt,isa 0
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_atoi")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2717| 
        ; call occurs [#_atoi] ; [] |2717| 
        MOVL      XAR0,#86              ; [CPU_] |2717| 
        MOV       *-SP[58],AL           ; [CPU_] |2717| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2717| 
	.dwpsn	file "../Source/prod.c",line 2718,column 8,is_stmt,isa 0
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_scia_puts")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2718| 
        ; call occurs [#_scia_puts] ; [] |2718| 
        MOV       AL,*-SP[58]           ; [CPU_] |2718| 
	.dwpsn	file "../Source/prod.c",line 2720,column 9,is_stmt,isa 0
        B         $C$L464,EQ            ; [CPU_] |2720| 
        ; branchcc occurs ; [] |2720| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2720| 
        B         $C$L464,LO            ; [CPU_] |2720| 
        ; branchcc occurs ; [] |2720| 
	.dwpsn	file "../Source/prod.c",line 2724,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2724| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_scia_puts")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2724| 
        ; call occurs [#_scia_puts] ; [] |2724| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2726| 
	.dwpsn	file "../Source/prod.c",line 2724,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2724| 
	.dwpsn	file "../Source/prod.c",line 2726,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2726| 
        MOV       AL,*-SP[59]           ; [CPU_] |2726| 
	.dwpsn	file "../Source/prod.c",line 2729,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2729| 
        B         $C$L457,EQ            ; [CPU_] |2729| 
        ; branchcc occurs ; [] |2729| 
        CMPB      AL,#4                 ; [CPU_] |2729| 
        B         $C$L459,NEQ           ; [CPU_] |2729| 
        ; branchcc occurs ; [] |2729| 
	.dwpsn	file "../Source/prod.c",line 2734,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2734| 
        B         $C$L458,UNC           ; [CPU_] |2734| 
        ; branch occurs ; [] |2734| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2732,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2732| 
$C$L458:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2732| 
        MOVL      XAR0,#44              ; [CPU_] |2732| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2732| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_sprintf")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2732| 
        ; call occurs [#_sprintf] ; [] |2732| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2736,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2736| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2736| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2736| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2736| 
        ; call occurs [#_scia_getparam] ; [] |2736| 
        MOVL      XAR0,#86              ; [CPU_] |2736| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2736,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2736| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_strtod")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2737,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2737| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2737| 
        MOVL      XAR0,#86              ; [CPU_] |2737| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2737| 
	.dwpsn	file "../Source/prod.c",line 2738,column 8,is_stmt,isa 0
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_scia_puts")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2738| 
        ; call occurs [#_scia_puts] ; [] |2738| 
	.dwpsn	file "../Source/prod.c",line 2739,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2739| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2739| 
        ; call occurs [#_scia_puts] ; [] |2739| 
	.dwpsn	file "../Source/prod.c",line 2742,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2742| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2742| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2742| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2742| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_sprintf")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2742| 
        ; call occurs [#_sprintf] ; [] |2742| 
        MOVL      XAR0,#44              ; [CPU_] |2742| 
	.dwpsn	file "../Source/prod.c",line 2743,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2743| 
	.dwpsn	file "../Source/prod.c",line 2742,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2742| 
	.dwpsn	file "../Source/prod.c",line 2743,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2743| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2743| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2743| 
        ; call occurs [#_scia_getparam] ; [] |2743| 
        MOVL      XAR0,#86              ; [CPU_] |2743| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2743,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2743| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_strtod")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2744,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2744| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2744| 
        MOVL      XAR0,#86              ; [CPU_] |2744| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2744| 
	.dwpsn	file "../Source/prod.c",line 2745,column 8,is_stmt,isa 0
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_scia_puts")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2745| 
        ; call occurs [#_scia_puts] ; [] |2745| 
	.dwpsn	file "../Source/prod.c",line 2746,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2746| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2746| 
        ; call occurs [#_scia_puts] ; [] |2746| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2753,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2753| 
        MOV       AL,*-SP[47]           ; [CPU_] |2753| 
        MOVL      XAR0,#62              ; [CPU_] |2753| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2753| 
        MOV       *-SP[3],AL            ; [CPU_] |2753| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2753| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2753| 
        MOV       ACC,AL << 1           ; [CPU_] |2753| 
        ADDL      ACC,XAR6              ; [CPU_] |2753| 
        MOVL      XAR4,ACC              ; [CPU_] |2753| 
        MOVL      XAR0,#44              ; [CPU_] |2753| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2753| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2753| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2753| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_sprintf")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2753| 
        ; call occurs [#_sprintf] ; [] |2753| 
        MOVL      XAR0,#44              ; [CPU_] |2753| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2753| 
	.dwpsn	file "../Source/prod.c",line 2755,column 6,is_stmt,isa 0
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_scia_puts")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2755| 
        ; call occurs [#_scia_puts] ; [] |2755| 
	.dwpsn	file "../Source/prod.c",line 2750,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2750| 
        MOV       AL,*-SP[59]           ; [CPU_] |2750| 
	.dwpsn	file "../Source/prod.c",line 2757,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2757| 
        B         $C$L461,EQ            ; [CPU_] |2757| 
        ; branchcc occurs ; [] |2757| 
	.dwpsn	file "../Source/prod.c",line 2760,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2760| 
        MOVB      AL,#1                 ; [CPU_] |2760| 
        MOVL      XAR0,#44              ; [CPU_] |2760| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2760| 
        ADD       AL,*-SP[58]           ; [CPU_] |2760| 
        MOV       *-SP[3],AL            ; [CPU_] |2760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2760| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_sprintf")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2760| 
        ; call occurs [#_sprintf] ; [] |2760| 
        MOVL      XAR0,#44              ; [CPU_] |2760| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2760| 
	.dwpsn	file "../Source/prod.c",line 2761,column 7,is_stmt,isa 0
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2761| 
        ; call occurs [#_scia_puts] ; [] |2761| 
        MOV       AL,*-SP[59]           ; [CPU_] |2761| 
	.dwpsn	file "../Source/prod.c",line 2763,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2763| 
        B         $C$L460,EQ            ; [CPU_] |2763| 
        ; branchcc occurs ; [] |2763| 
        CMPB      AL,#4                 ; [CPU_] |2763| 
        B         $C$L463,NEQ           ; [CPU_] |2763| 
        ; branchcc occurs ; [] |2763| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2764,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2764| 
        MOVB      XAR0,#8               ; [CPU_] |2764| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2764| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2764| 
        MOVB      XAR0,#10              ; [CPU_] |2764| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2764| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2764| 
        MOVL      XAR0,#44              ; [CPU_] |2764| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2764| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2764| 
        MOVL      XAR4,XAR1             ; [CPU_] |2764| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_sprintf")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2764| 
        ; call occurs [#_sprintf] ; [] |2764| 
        MOVL      XAR4,XAR1             ; [CPU_] |2764| 
	.dwpsn	file "../Source/prod.c",line 2767,column 8,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2767| 
        ; branch occurs ; [] |2767| 
$C$L461:    
	.dwpsn	file "../Source/prod.c",line 2758,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2758| 
$C$L462:    
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_puts")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2758| 
        ; call occurs [#_scia_puts] ; [] |2758| 
$C$L463:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2772,column 6,is_stmt,isa 0
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2772| 
        ; call occurs [#_ad7738_setcal] ; [] |2772| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2774,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2774| 
        ; branch occurs ; [] |2774| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2722| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_puts")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2722| 
        ; call occurs [#_scia_puts] ; [] |2722| 
	.dwpsn	file "../Source/prod.c",line 2714,column 7,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2714| 
        ; branch occurs ; [] |2714| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2676,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2676| 
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_puts")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2676| 
        ; call occurs [#_scia_puts] ; [] |2676| 
	.dwpsn	file "../Source/prod.c",line 2668,column 6,is_stmt,isa 0
        B         $C$L450,UNC           ; [CPU_] |2668| 
        ; branch occurs ; [] |2668| 
$C$L466:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2840,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2840| 
        B         $C$L625,LO            ; [CPU_] |2840| 
        ; branchcc occurs ; [] |2840| 
	.dwpsn	file "../Source/prod.c",line 2843,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2843| 
        CMPB      AL,#83                ; [CPU_] |2843| 
        B         $C$L625,NEQ           ; [CPU_] |2843| 
        ; branchcc occurs ; [] |2843| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2850,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2850| 
        MOVL      XAR0,#44              ; [CPU_] |2850| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2850| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2850| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2850| 
        MOVL      XAR4,XAR1             ; [CPU_] |2850| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_sprintf")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2850| 
        ; call occurs [#_sprintf] ; [] |2850| 
	.dwpsn	file "../Source/prod.c",line 2851,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2851| 
	.dwpsn	file "../Source/prod.c",line 2850,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2850| 
	.dwpsn	file "../Source/prod.c",line 2851,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2851| 
        MOV       AL,#1024              ; [CPU_] |2851| 
        MOVL      XAR5,XAR1             ; [CPU_] |2851| 
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2851| 
        ; call occurs [#_scia_getparam] ; [] |2851| 
	.dwpsn	file "../Source/prod.c",line 2852,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2852| 
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_atoi")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2852| 
        ; call occurs [#_atoi] ; [] |2852| 
        MOV       *-SP[57],AL           ; [CPU_] |2852| 
	.dwpsn	file "../Source/prod.c",line 2853,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2853| 
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2853| 
        ; call occurs [#_scia_puts] ; [] |2853| 
        MOV       AL,*-SP[57]           ; [CPU_] |2853| 
	.dwpsn	file "../Source/prod.c",line 2855,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2855| 
        CMPB      AL,#4                 ; [CPU_] |2855| 
        B         $C$L497,HIS           ; [CPU_] |2855| 
        ; branchcc occurs ; [] |2855| 
	.dwpsn	file "../Source/prod.c",line 2859,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2859| 
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2859| 
        ; call occurs [#_scia_puts] ; [] |2859| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2859| 
	.dwpsn	file "../Source/prod.c",line 2862,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2862| 
        MOVL      XAR0,#44              ; [CPU_] |2862| 
        DEC       *-SP[57]              ; [CPU_] |2862| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2862| 
        MOV       *-SP[47],AR1          ; [CPU_] |2862| 
        MOV       *-SP[3],AR1           ; [CPU_] |2862| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2862| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_sprintf")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2862| 
        ; call occurs [#_sprintf] ; [] |2862| 
        MOVL      XAR0,#44              ; [CPU_] |2862| 
	.dwpsn	file "../Source/prod.c",line 2863,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2863| 
	.dwpsn	file "../Source/prod.c",line 2862,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2862| 
	.dwpsn	file "../Source/prod.c",line 2863,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2863| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2863| 
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2863| 
        ; call occurs [#_scia_getparam] ; [] |2863| 
        MOVL      XAR0,#86              ; [CPU_] |2863| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2863| 
	.dwpsn	file "../Source/prod.c",line 2864,column 6,is_stmt,isa 0
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2864| 
        ; call occurs [#_scia_puts] ; [] |2864| 
	.dwpsn	file "../Source/prod.c",line 2865,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2865| 
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2865| 
        ; call occurs [#_scia_puts] ; [] |2865| 
        MOVL      XAR0,#86              ; [CPU_] |2865| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2865| 
	.dwpsn	file "../Source/prod.c",line 2867,column 6,is_stmt,isa 0
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_atoi")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2867| 
        ; call occurs [#_atoi] ; [] |2867| 
        CMPB      AL,#1                 ; [CPU_] |2867| 
        B         $C$L468,EQ            ; [CPU_] |2867| 
        ; branchcc occurs ; [] |2867| 
	.dwpsn	file "../Source/prod.c",line 3016,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3016| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3016| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3016| 
        ADDL      ACC,XAR6              ; [CPU_] |3016| 
        ADD       ACC,#199 << 4         ; [CPU_] |3016| 
        MOVL      XAR4,ACC              ; [CPU_] |3016| 
	.dwpsn	file "../Source/prod.c",line 3017,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3017| 
	.dwpsn	file "../Source/prod.c",line 3016,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3016| 
	.dwpsn	file "../Source/prod.c",line 3017,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3017| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3017| 
        MOV       *-SP[3],AR1           ; [CPU_] |3017| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3017| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_sprintf")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3017| 
        ; call occurs [#_sprintf] ; [] |3017| 
        B         $C$L493,UNC           ; [CPU_] |3017| 
        ; branch occurs ; [] |3017| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2870,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2870| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2870| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2870| 
        ADDL      ACC,XAR6              ; [CPU_] |2870| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2870| 
        MOVL      XAR1,ACC              ; [CPU_] |2870| 
        MOVL      XAR0,#62              ; [CPU_] |2870| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2870| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2870| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2873,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2873| 
        MOV       *-SP[60],AL           ; [CPU_] |2873| 
$C$L469:    
	.dwpsn	file "../Source/prod.c",line 2874,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2874| 
        MOVL      XAR0,#88              ; [CPU_] |2874| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2874| 
        MOV       *-SP[3],AL            ; [CPU_] |2874| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2874| 
        MOVL      XAR0,#88              ; [CPU_] |2874| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2874| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2874| 
        MOVL      XAR0,#44              ; [CPU_] |2874| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2874| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2874| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_sprintf")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2874| 
        ; call occurs [#_sprintf] ; [] |2874| 
        MOVL      XAR0,#44              ; [CPU_] |2874| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2874| 
	.dwpsn	file "../Source/prod.c",line 2875,column 8,is_stmt,isa 0
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2875| 
        ; call occurs [#_scia_puts] ; [] |2875| 
        MOV       AL,*-SP[60]           ; [CPU_] |2875| 
	.dwpsn	file "../Source/prod.c",line 2876,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2876| 
        B         $C$L470,GEQ           ; [CPU_] |2876| 
        ; branchcc occurs ; [] |2876| 
	.dwpsn	file "../Source/prod.c",line 2877,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2877| 
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2877| 
        ; call occurs [#_scia_puts] ; [] |2877| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2873,column 19,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |2873| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2873| 
        B         $C$L469,LT            ; [CPU_] |2873| 
        ; branchcc occurs ; [] |2873| 
	.dwpsn	file "../Source/prod.c",line 2880,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2880| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2880| 
        ; call occurs [#_scia_puts] ; [] |2880| 
	.dwpsn	file "../Source/prod.c",line 2881,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2881| 
        MOVL      XAR0,#44              ; [CPU_] |2881| 
        MOV       AL,*-SP[47]           ; [CPU_] |2881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2881| 
        MOV       *-SP[3],AL            ; [CPU_] |2881| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2881| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_sprintf")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2881| 
        ; call occurs [#_sprintf] ; [] |2881| 
        MOVL      XAR0,#44              ; [CPU_] |2881| 
	.dwpsn	file "../Source/prod.c",line 2884,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2884| 
	.dwpsn	file "../Source/prod.c",line 2881,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2881| 
	.dwpsn	file "../Source/prod.c",line 2884,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2884| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2884| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2884| 
        ; call occurs [#_scia_getparam] ; [] |2884| 
        MOVL      XAR0,#86              ; [CPU_] |2884| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2884| 
	.dwpsn	file "../Source/prod.c",line 2885,column 7,is_stmt,isa 0
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_atoi")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2885| 
        ; call occurs [#_atoi] ; [] |2885| 
        MOV       *-SP[59],AL           ; [CPU_] |2885| 
        CMPB      AL,#5                 ; [CPU_] |2885| 
        B         $C$L471,LO            ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
	.dwpsn	file "../Source/prod.c",line 2888,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2888| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2888| 
        ; call occurs [#_scia_puts] ; [] |2888| 
	.dwpsn	file "../Source/prod.c",line 2887,column 8,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2887| 
$C$L471:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2891| 
        ; call occurs [#_scia_puts] ; [] |2891| 
	.dwpsn	file "../Source/prod.c",line 2892,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2892| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2892| 
        ; call occurs [#_scia_puts] ; [] |2892| 
        MOV       AL,*-SP[59]           ; [CPU_] |2892| 
	.dwpsn	file "../Source/prod.c",line 2893,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2893| 
	.dwpsn	file "../Source/prod.c",line 2895,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2895| 
        B         $C$L473,EQ            ; [CPU_] |2895| 
        ; branchcc occurs ; [] |2895| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2895| 
        B         $C$L473,EQ            ; [CPU_] |2895| 
        ; branchcc occurs ; [] |2895| 
	.dwpsn	file "../Source/prod.c",line 2898,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2898| 
        B         $C$L472,EQ            ; [CPU_] |2898| 
        ; branchcc occurs ; [] |2898| 
        CMPB      AL,#4                 ; [CPU_] |2898| 
        B         $C$L474,NEQ           ; [CPU_] |2898| 
        ; branchcc occurs ; [] |2898| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2899,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2899| 
        B         $C$L474,UNC           ; [CPU_] |2899| 
        ; branch occurs ; [] |2899| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2897,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2897| 
$C$L474:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2904,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2904| 
        MOV       AL,*-SP[60]           ; [CPU_] |2904| 
        MOVL      XAR0,#44              ; [CPU_] |2904| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2904| 
        MOV       *-SP[3],AL            ; [CPU_] |2904| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2904| 
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_sprintf")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2904| 
        ; call occurs [#_sprintf] ; [] |2904| 
        MOVL      XAR0,#44              ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2905,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2905| 
	.dwpsn	file "../Source/prod.c",line 2904,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2904| 
	.dwpsn	file "../Source/prod.c",line 2905,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2905| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2905| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2905| 
        ; call occurs [#_scia_getparam] ; [] |2905| 
        MOVL      XAR0,#86              ; [CPU_] |2905| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2905| 
	.dwpsn	file "../Source/prod.c",line 2906,column 8,is_stmt,isa 0
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_atoi")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2906| 
        ; call occurs [#_atoi] ; [] |2906| 
        MOVL      XAR0,#86              ; [CPU_] |2906| 
        MOV       *-SP[58],AL           ; [CPU_] |2906| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2906| 
	.dwpsn	file "../Source/prod.c",line 2907,column 8,is_stmt,isa 0
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2907| 
        ; call occurs [#_scia_puts] ; [] |2907| 
        MOV       AL,*-SP[58]           ; [CPU_] |2907| 
	.dwpsn	file "../Source/prod.c",line 2909,column 9,is_stmt,isa 0
        B         $C$L496,EQ            ; [CPU_] |2909| 
        ; branchcc occurs ; [] |2909| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2909| 
        B         $C$L496,LO            ; [CPU_] |2909| 
        ; branchcc occurs ; [] |2909| 
	.dwpsn	file "../Source/prod.c",line 2913,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2913| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2913| 
        ; call occurs [#_scia_puts] ; [] |2913| 
	.dwpsn	file "../Source/prod.c",line 2915,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2915| 
	.dwpsn	file "../Source/prod.c",line 2918,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2918| 
	.dwpsn	file "../Source/prod.c",line 2913,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2913| 
	.dwpsn	file "../Source/prod.c",line 2918,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2918| 
	.dwpsn	file "../Source/prod.c",line 2915,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2915| 
	.dwpsn	file "../Source/prod.c",line 2918,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2918| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2918| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2918| 
        ; call occurs [#_scia_getparam] ; [] |2918| 
        MOVL      XAR0,#86              ; [CPU_] |2918| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2918| 
	.dwpsn	file "../Source/prod.c",line 2921,column 7,is_stmt,isa 0
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2921| 
        ; call occurs [#_scia_puts] ; [] |2921| 
	.dwpsn	file "../Source/prod.c",line 2922,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2922| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2922| 
        ; call occurs [#_scia_puts] ; [] |2922| 
        MOVL      XAR0,#86              ; [CPU_] |2922| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2922| 
	.dwpsn	file "../Source/prod.c",line 2924,column 7,is_stmt,isa 0
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_atoi")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2924| 
        ; call occurs [#_atoi] ; [] |2924| 
        CMPB      AL,#1                 ; [CPU_] |2924| 
        B         $C$L476,EQ            ; [CPU_] |2924| 
        ; branchcc occurs ; [] |2924| 
	.dwpsn	file "../Source/prod.c",line 2928,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2928| 
        B         $C$L477,UNC           ; [CPU_] |2928| 
        ; branch occurs ; [] |2928| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2926,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2926| 
$C$L477:    
	.dwpsn	file "../Source/prod.c",line 2931,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2931| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2931| 
        MOV       AL,#1024              ; [CPU_] |2931| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2931| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2931| 
        ; call occurs [#_scia_getparam] ; [] |2931| 
        MOVL      XAR0,#86              ; [CPU_] |2931| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2931| 
	.dwpsn	file "../Source/prod.c",line 2934,column 7,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2934| 
        ; call occurs [#_scia_puts] ; [] |2934| 
	.dwpsn	file "../Source/prod.c",line 2935,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2935| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2935| 
        ; call occurs [#_scia_puts] ; [] |2935| 
        MOVL      XAR0,#86              ; [CPU_] |2935| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2935| 
	.dwpsn	file "../Source/prod.c",line 2937,column 7,is_stmt,isa 0
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_atoi")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2937| 
        ; call occurs [#_atoi] ; [] |2937| 
        CMPB      AL,#1                 ; [CPU_] |2937| 
        B         $C$L478,EQ            ; [CPU_] |2937| 
        ; branchcc occurs ; [] |2937| 
	.dwpsn	file "../Source/prod.c",line 2941,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2941| 
        B         $C$L479,UNC           ; [CPU_] |2941| 
        ; branch occurs ; [] |2941| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2939,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2939| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2944,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2944| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2944| 
        MOV       AL,#1024              ; [CPU_] |2944| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2944| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2944| 
        ; call occurs [#_scia_getparam] ; [] |2944| 
        MOVL      XAR0,#86              ; [CPU_] |2944| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2944| 
	.dwpsn	file "../Source/prod.c",line 2947,column 7,is_stmt,isa 0
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2947| 
        ; call occurs [#_scia_puts] ; [] |2947| 
	.dwpsn	file "../Source/prod.c",line 2948,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2948| 
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2948| 
        ; call occurs [#_scia_puts] ; [] |2948| 
        MOVL      XAR0,#86              ; [CPU_] |2948| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2948| 
	.dwpsn	file "../Source/prod.c",line 2950,column 7,is_stmt,isa 0
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_atoi")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2950| 
        ; call occurs [#_atoi] ; [] |2950| 
        CMPB      AL,#1                 ; [CPU_] |2950| 
        B         $C$L480,EQ            ; [CPU_] |2950| 
        ; branchcc occurs ; [] |2950| 
	.dwpsn	file "../Source/prod.c",line 2954,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2954| 
        B         $C$L481,UNC           ; [CPU_] |2954| 
        ; branch occurs ; [] |2954| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 2952,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2952| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2958,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2958| 
        CMPB      AL,#2                 ; [CPU_] |2958| 
        B         $C$L483,LOS           ; [CPU_] |2958| 
        ; branchcc occurs ; [] |2958| 
        CMPB      AL,#3                 ; [CPU_] |2958| 
        B         $C$L482,EQ            ; [CPU_] |2958| 
        ; branchcc occurs ; [] |2958| 
        CMPB      AL,#4                 ; [CPU_] |2958| 
        B         $C$L485,NEQ           ; [CPU_] |2958| 
        ; branchcc occurs ; [] |2958| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2970,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |2970| 
	.dwpsn	file "../Source/prod.c",line 2971,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2971| 
        ; branch occurs ; [] |2971| 
$C$L482:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2967,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |2967| 
	.dwpsn	file "../Source/prod.c",line 2968,column 8,is_stmt,isa 0
        B         $C$L484,UNC           ; [CPU_] |2968| 
        ; branch occurs ; [] |2968| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2962,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2962| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2962| 
        MOV       T,#10                 ; [CPU_] |2962| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |2962| 
        ADDL      ACC,XAR6              ; [CPU_] |2962| 
        MOVL      XAR4,ACC              ; [CPU_] |2962| 
        MOVB      XAR0,#42              ; [CPU_] |2962| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |2962| 
        MPYB      ACC,T,#152            ; [CPU_] |2962| 
        ADDL      ACC,XAR6              ; [CPU_] |2962| 
        MOVL      XAR4,ACC              ; [CPU_] |2962| 
        MOVB      XAR0,#125             ; [CPU_] |2962| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2962| 
        MOVL      XAR0,#70              ; [CPU_] |2962| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2962| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2962| 
        MOV       ACC,AL << 1           ; [CPU_] |2962| 
        ADDL      ACC,XAR6              ; [CPU_] |2962| 
        MOVL      XAR4,ACC              ; [CPU_] |2962| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2962| 
$C$L484:    
        MOVL      XAR0,#48              ; [CPU_] |2962| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2962| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |2975| 
        MOVL      XAR0,#48              ; [CPU_] |2975| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2975| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2975| 
        MOVL      XAR0,#44              ; [CPU_] |2975| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2975| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2975| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_sprintf")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2975| 
        ; call occurs [#_sprintf] ; [] |2975| 
        MOVL      XAR0,#44              ; [CPU_] |2975| 
	.dwpsn	file "../Source/prod.c",line 2976,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2976| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2975| 
	.dwpsn	file "../Source/prod.c",line 2976,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2976| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2976| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2976| 
        ; call occurs [#_scia_getparam] ; [] |2976| 
        MOVL      XAR0,#86              ; [CPU_] |2976| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2976| 
	.dwpsn	file "../Source/prod.c",line 2977,column 7,is_stmt,isa 0
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2977| 
        ; call occurs [#_scia_puts] ; [] |2977| 
	.dwpsn	file "../Source/prod.c",line 2978,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2978| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2978| 
        ; call occurs [#_scia_puts] ; [] |2978| 
        MOVL      XAR0,#86              ; [CPU_] |2978| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2978,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2978| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_strtod")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2984,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |2984| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |2984| 
	.dwpsn	file "../Source/prod.c",line 2980,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |2980| 
	.dwpsn	file "../Source/prod.c",line 2984,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2984| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2984| 
        MOVL      XAR0,#44              ; [CPU_] |2984| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2984| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2984| 
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_sprintf")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2984| 
        ; call occurs [#_sprintf] ; [] |2984| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2985,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2985| 
        MOVL      XAR0,#86              ; [CPU_] |2985| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2985| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2985| 
        ; call occurs [#_scia_getparam] ; [] |2985| 
        MOVL      XAR0,#86              ; [CPU_] |2985| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2985| 
	.dwpsn	file "../Source/prod.c",line 2986,column 7,is_stmt,isa 0
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2986| 
        ; call occurs [#_scia_puts] ; [] |2986| 
	.dwpsn	file "../Source/prod.c",line 2987,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2987| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2987| 
        ; call occurs [#_scia_puts] ; [] |2987| 
        MOVL      XAR0,#86              ; [CPU_] |2987| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2987,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2987| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_strtod")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2995,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |2995| 
        MOVL      XAR0,#62              ; [CPU_] |2995| 
	.dwpsn	file "../Source/prod.c",line 2989,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |2989| 
	.dwpsn	file "../Source/prod.c",line 2995,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2995| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2995| 
        MOV       *-SP[3],AL            ; [CPU_] |2995| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2995| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2995| 
        MOV       ACC,AL << 1           ; [CPU_] |2995| 
        ADDL      ACC,XAR6              ; [CPU_] |2995| 
        MOVL      XAR4,ACC              ; [CPU_] |2995| 
        MOVL      XAR0,#44              ; [CPU_] |2995| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2995| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2995| 
        MOVB      AL,#1                 ; [CPU_] |2995| 
        ADD       AL,*-SP[58]           ; [CPU_] |2995| 
        MOV       *-SP[7],AL            ; [CPU_] |2995| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2995| 
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_sprintf")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2995| 
        ; call occurs [#_sprintf] ; [] |2995| 
        MOVL      XAR0,#44              ; [CPU_] |2995| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2995| 
	.dwpsn	file "../Source/prod.c",line 2998,column 7,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2998| 
        ; call occurs [#_scia_puts] ; [] |2998| 
	.dwpsn	file "../Source/prod.c",line 3000,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3000| 
        B         $C$L486,TC            ; [CPU_] |3000| 
        ; branchcc occurs ; [] |3000| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3000| 
        B         $C$L487,UNC           ; [CPU_] |3000| 
        ; branch occurs ; [] |3000| 
$C$L486:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3000| 
$C$L487:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3000| 
        B         $C$L488,TC            ; [CPU_] |3000| 
        ; branchcc occurs ; [] |3000| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3000| 
        B         $C$L489,UNC           ; [CPU_] |3000| 
        ; branch occurs ; [] |3000| 
$C$L488:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3000| 
$C$L489:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3000| 
        B         $C$L490,TC            ; [CPU_] |3000| 
        ; branchcc occurs ; [] |3000| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3000| 
        B         $C$L491,UNC           ; [CPU_] |3000| 
        ; branch occurs ; [] |3000| 
$C$L490:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3000| 
$C$L491:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3000| 
        MOVL      XAR0,#44              ; [CPU_] |3000| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3000| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3000| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3000| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3000| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3000| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_sprintf")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3000| 
        ; call occurs [#_sprintf] ; [] |3000| 
        MOVL      XAR0,#44              ; [CPU_] |3000| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3000| 
	.dwpsn	file "../Source/prod.c",line 3007,column 7,is_stmt,isa 0
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3007| 
        ; call occurs [#_scia_puts] ; [] |3007| 
	.dwpsn	file "../Source/prod.c",line 3008,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3008| 
        MOVL      XAR0,#48              ; [CPU_] |3008| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3008| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3008| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3008| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3008| 
        MOVL      XAR0,#48              ; [CPU_] |3008| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3008| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3008| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3008| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3008| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3008| 
$C$L492:    
        MOVL      XAR0,#44              ; [CPU_] |3008| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |3008| 
        MOVL      XAR4,XAR1             ; [CPU_] |3008| 
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_sprintf")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3008| 
        ; call occurs [#_sprintf] ; [] |3008| 
        MOVL      XAR4,XAR1             ; [CPU_] |3008| 
	.dwpsn	file "../Source/prod.c",line 3012,column 7,is_stmt,isa 0
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3012| 
        ; call occurs [#_scia_puts] ; [] |3012| 
$C$L493:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3023,column 6,is_stmt,isa 0
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3023| 
        ; call occurs [#_ad7738_setcal] ; [] |3023| 
$C$L494:    
 clrc INTM
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 3020,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3020| 
	.dwpsn	file "../Source/prod.c",line 3025,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3025| 
        ; branch occurs ; [] |3025| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2911,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2911| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2911| 
        ; call occurs [#_scia_puts] ; [] |2911| 
	.dwpsn	file "../Source/prod.c",line 2903,column 7,is_stmt,isa 0
        B         $C$L475,UNC           ; [CPU_] |2903| 
        ; branch occurs ; [] |2903| 
$C$L497:    
	.dwpsn	file "../Source/prod.c",line 2857,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2857| 
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2857| 
        ; call occurs [#_scia_puts] ; [] |2857| 
	.dwpsn	file "../Source/prod.c",line 2849,column 6,is_stmt,isa 0
        B         $C$L467,UNC           ; [CPU_] |2849| 
        ; branch occurs ; [] |2849| 
$C$L498:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3329,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3329| 
        B         $C$L625,LO            ; [CPU_] |3329| 
        ; branchcc occurs ; [] |3329| 
	.dwpsn	file "../Source/prod.c",line 3332,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3332| 
        CMPB      AL,#68                ; [CPU_] |3332| 
        B         $C$L502,EQ            ; [CPU_] |3332| 
        ; branchcc occurs ; [] |3332| 
        CMPB      AL,#82                ; [CPU_] |3332| 
        B         $C$L501,EQ            ; [CPU_] |3332| 
        ; branchcc occurs ; [] |3332| 
        CMPB      AL,#87                ; [CPU_] |3332| 
        B         $C$L625,NEQ           ; [CPU_] |3332| 
        ; branchcc occurs ; [] |3332| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3336,column 6,is_stmt,isa 0
        B         $C$L499,NEQ           ; [CPU_] |3336| 
        ; branchcc occurs ; [] |3336| 
	.dwpsn	file "../Source/prod.c",line 3360,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3360| 
	.dwpsn	file "../Source/prod.c",line 3362,column 6,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3362| 
        ; branch occurs ; [] |3362| 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3338,column 7,is_stmt,isa 0
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3338| 
        ; call occurs [#_lcd_clear] ; [] |3338| 
	.dwpsn	file "../Source/prod.c",line 3339,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3339| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3339| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3339| 
        ; call occurs [#_lcd_puts] ; [] |3339| 
	.dwpsn	file "../Source/prod.c",line 3340,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3340| 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3340| 
        ; call occurs [#_scia_puts] ; [] |3340| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3343,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3343| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_delay_us")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3343| 
        ; call occurs [#_delay_us] ; [] |3343| 
	.dwpsn	file "../Source/prod.c",line 3342,column 19,is_stmt,isa 0
        BANZ      $C$L500,AR3--         ; [CPU_] |3342| 
        ; branchcc occurs ; [] |3342| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3347,column 7,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_conf_write")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3347| 
        ; call occurs [#_conf_write] ; [] |3347| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3350,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3350| 
        B         $C$L505,NEQ           ; [CPU_] |3350| 
        ; branchcc occurs ; [] |3350| 
	.dwpsn	file "../Source/prod.c",line 3351,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3351| 
	.dwpsn	file "../Source/prod.c",line 3353,column 7,is_stmt,isa 0
        B         $C$L504,UNC           ; [CPU_] |3353| 
        ; branch occurs ; [] |3353| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3367,column 6,is_stmt,isa 0
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_conf_read")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3367| 
        ; call occurs [#_conf_read] ; [] |3367| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3370,column 6,is_stmt,isa 0
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3370| 
        ; call occurs [#_ad7738_setcal] ; [] |3370| 
	.dwpsn	file "../Source/prod.c",line 3371,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3371| 
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3371| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3371| 
	.dwpsn	file "../Source/prod.c",line 3372,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3372| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3372| 
        ; call occurs [#_ad7738_resetvall] ; [] |3372| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3375,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3375| 
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3375| 
        ; call occurs [#_scia_puts] ; [] |3375| 
	.dwpsn	file "../Source/prod.c",line 3378,column 6,is_stmt,isa 0
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_update_units")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3378| 
        ; call occurs [#_update_units] ; [] |3378| 
	.dwpsn	file "../Source/prod.c",line 3376,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3376| 
	.dwpsn	file "../Source/prod.c",line 3380,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |3380| 
        ; branch occurs ; [] |3380| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3384,column 6,is_stmt,isa 0
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_conf_default")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3384| 
        ; call occurs [#_conf_default] ; [] |3384| 
	.dwpsn	file "../Source/prod.c",line 3387,column 6,is_stmt,isa 0
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3387| 
        ; call occurs [#_lcd_clear] ; [] |3387| 
	.dwpsn	file "../Source/prod.c",line 3388,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3388| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3388| 
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3388| 
        ; call occurs [#_lcd_puts] ; [] |3388| 
	.dwpsn	file "../Source/prod.c",line 3389,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3389| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3389| 
        ; call occurs [#_scia_puts] ; [] |3389| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 3392,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3392| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_delay_us")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3392| 
        ; call occurs [#_delay_us] ; [] |3392| 
	.dwpsn	file "../Source/prod.c",line 3391,column 18,is_stmt,isa 0
        BANZ      $C$L503,AR3--         ; [CPU_] |3391| 
        ; branchcc occurs ; [] |3391| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3396,column 6,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_conf_write")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3396| 
        ; call occurs [#_conf_write] ; [] |3396| 
        MOVZ      AR1,AL                ; [CPU_] |3396| 
	.dwpsn	file "../Source/prod.c",line 3397,column 6,is_stmt,isa 0
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3397| 
        ; call occurs [#_ad7738_setcal] ; [] |3397| 
	.dwpsn	file "../Source/prod.c",line 3398,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3398| 
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3398| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3398| 
	.dwpsn	file "../Source/prod.c",line 3399,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3399| 
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3399| 
        ; call occurs [#_ad7738_resetvall] ; [] |3399| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3402,column 6,is_stmt,isa 0
        B         $C$L505,NEQ           ; [CPU_] |3402| 
        ; branchcc occurs ; [] |3402| 
	.dwpsn	file "../Source/prod.c",line 3403,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3403| 
$C$L504:    
        SPM       #0                    ; [CPU_] 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3403| 
        ; call occurs [#_scia_puts] ; [] |3403| 
	.dwpsn	file "../Source/prod.c",line 3405,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3405| 
	.dwpsn	file "../Source/prod.c",line 3406,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |3406| 
        ; branch occurs ; [] |3406| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3407,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3407| 
        SPM       #0                    ; [CPU_] 
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3407| 
        ; call occurs [#_scia_puts] ; [] |3407| 
$C$L506:    
	.dwpsn	file "../Source/prod.c",line 3409,column 6,is_stmt,isa 0
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3409| 
        ; call occurs [#_lcd_clear] ; [] |3409| 
	.dwpsn	file "../Source/prod.c",line 3410,column 6,is_stmt,isa 0
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_update_units")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3410| 
        ; call occurs [#_update_units] ; [] |3410| 
	.dwpsn	file "../Source/prod.c",line 3411,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3411| 
        ; branch occurs ; [] |3411| 
$C$L507:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2436,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2436| 
        B         $C$L625,LO            ; [CPU_] |2436| 
        ; branchcc occurs ; [] |2436| 
	.dwpsn	file "../Source/prod.c",line 2439,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2439| 
        CMPB      AL,#70                ; [CPU_] |2439| 
        B         $C$L512,EQ            ; [CPU_] |2439| 
        ; branchcc occurs ; [] |2439| 
        CMPB      AL,#80                ; [CPU_] |2439| 
        B         $C$L632,NEQ           ; [CPU_] |2439| 
        ; branchcc occurs ; [] |2439| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2476,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2476| 
        MOVL      XAR0,#44              ; [CPU_] |2476| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2476| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2476| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2476| 
        MOVL      XAR4,XAR1             ; [CPU_] |2476| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_sprintf")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2476| 
        ; call occurs [#_sprintf] ; [] |2476| 
	.dwpsn	file "../Source/prod.c",line 2477,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2477| 
	.dwpsn	file "../Source/prod.c",line 2476,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2476| 
	.dwpsn	file "../Source/prod.c",line 2477,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2477| 
        MOV       AL,#1024              ; [CPU_] |2477| 
        MOVL      XAR5,XAR1             ; [CPU_] |2477| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2477| 
        ; call occurs [#_scia_getparam] ; [] |2477| 
	.dwpsn	file "../Source/prod.c",line 2478,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2478| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_atoi")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2478| 
        ; call occurs [#_atoi] ; [] |2478| 
        MOV       *-SP[57],AL           ; [CPU_] |2478| 
	.dwpsn	file "../Source/prod.c",line 2479,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2479| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2479| 
        ; call occurs [#_scia_puts] ; [] |2479| 
        MOV       AL,*-SP[57]           ; [CPU_] |2479| 
	.dwpsn	file "../Source/prod.c",line 2481,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2481| 
        CMPB      AL,#2                 ; [CPU_] |2481| 
        B         $C$L511,HIS           ; [CPU_] |2481| 
        ; branchcc occurs ; [] |2481| 
	.dwpsn	file "../Source/prod.c",line 2485,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2485| 
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2485| 
        ; call occurs [#_scia_puts] ; [] |2485| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2485| 
	.dwpsn	file "../Source/prod.c",line 2488,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2488| 
        MOVL      XAR0,#44              ; [CPU_] |2488| 
        DEC       *-SP[57]              ; [CPU_] |2488| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2488| 
        MOV       *-SP[3],AR1           ; [CPU_] |2488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2488| 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_sprintf")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2488| 
        ; call occurs [#_sprintf] ; [] |2488| 
        MOVL      XAR0,#44              ; [CPU_] |2488| 
	.dwpsn	file "../Source/prod.c",line 2489,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2489| 
	.dwpsn	file "../Source/prod.c",line 2488,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2488| 
	.dwpsn	file "../Source/prod.c",line 2489,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2489| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2489| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2489| 
        ; call occurs [#_scia_getparam] ; [] |2489| 
        MOVL      XAR0,#86              ; [CPU_] |2489| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2489| 
	.dwpsn	file "../Source/prod.c",line 2490,column 6,is_stmt,isa 0
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_atol")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2490| 
        ; call occurs [#_atol] ; [] |2490| 
        MOVL      XAR0,#86              ; [CPU_] |2490| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2490| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2490| 
	.dwpsn	file "../Source/prod.c",line 2491,column 6,is_stmt,isa 0
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2491| 
        ; call occurs [#_scia_puts] ; [] |2491| 
	.dwpsn	file "../Source/prod.c",line 2492,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2492| 
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2492| 
        ; call occurs [#_scia_puts] ; [] |2492| 
	.dwpsn	file "../Source/prod.c",line 2493,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2493| 
        B         $C$L509,NEQ           ; [CPU_] |2493| 
        ; branchcc occurs ; [] |2493| 
	.dwpsn	file "../Source/prod.c",line 2494,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2494| 
	.dwpsn	file "../Source/prod.c",line 2495,column 7,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |2495| 
        ; branch occurs ; [] |2495| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 2497,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2497| 
        MOVL      XAR0,#44              ; [CPU_] |2497| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2497| 
        MOV       *-SP[3],AR1           ; [CPU_] |2497| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2497| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2497| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2497| 
        MOVL      XAR4,XAR1             ; [CPU_] |2497| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_sprintf")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2497| 
        ; call occurs [#_sprintf] ; [] |2497| 
        MOVL      XAR4,XAR1             ; [CPU_] |2497| 
	.dwpsn	file "../Source/prod.c",line 2499,column 6,is_stmt,isa 0
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2499| 
        ; call occurs [#_scia_puts] ; [] |2499| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2504,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2504| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2504| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2504| 
        ADDL      ACC,XAR6              ; [CPU_] |2504| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2504| 
        ADD       ACC,#201 << 4         ; [CPU_] |2504| 
        MOVL      XAR4,ACC              ; [CPU_] |2504| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2504| 
$C$L510:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2505,column 6,is_stmt,isa 0
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2505| 
        ; call occurs [#_ad7738_setcal] ; [] |2505| 
	.dwpsn	file "../Source/prod.c",line 2506,column 6,is_stmt,isa 0
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2506| 
        ; call occurs [#_velf_rst] ; [] |2506| 
	.dwpsn	file "../Source/prod.c",line 2508,column 6,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |2508| 
        ; branch occurs ; [] |2508| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2483,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2483| 
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2483| 
        ; call occurs [#_scia_puts] ; [] |2483| 
	.dwpsn	file "../Source/prod.c",line 2475,column 6,is_stmt,isa 0
        B         $C$L508,UNC           ; [CPU_] |2475| 
        ; branch occurs ; [] |2475| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2446,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2446| 
        MOVL      XAR0,#44              ; [CPU_] |2446| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2446| 
        MOV       *-SP[3],#4096         ; [CPU_] |2446| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2446| 
        MOVL      XAR4,XAR1             ; [CPU_] |2446| 
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_sprintf")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2446| 
        ; call occurs [#_sprintf] ; [] |2446| 
	.dwpsn	file "../Source/prod.c",line 2448,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2448| 
	.dwpsn	file "../Source/prod.c",line 2446,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2446| 
	.dwpsn	file "../Source/prod.c",line 2448,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2448| 
        MOV       AL,#1024              ; [CPU_] |2448| 
        MOVL      XAR5,XAR1             ; [CPU_] |2448| 
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2448| 
        ; call occurs [#_scia_getparam] ; [] |2448| 
	.dwpsn	file "../Source/prod.c",line 2449,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2449| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_atoi")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2449| 
        ; call occurs [#_atoi] ; [] |2449| 
        MOV       *-SP[47],AL           ; [CPU_] |2449| 
	.dwpsn	file "../Source/prod.c",line 2450,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2450| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2450| 
        ; call occurs [#_scia_puts] ; [] |2450| 
        MOV       AL,*-SP[47]           ; [CPU_] |2450| 
	.dwpsn	file "../Source/prod.c",line 2452,column 8,is_stmt,isa 0
        B         $C$L513,LEQ           ; [CPU_] |2452| 
        ; branchcc occurs ; [] |2452| 
        CMP       AL,#4096              ; [CPU_] |2452| 
        B         $C$L513,GT            ; [CPU_] |2452| 
        ; branchcc occurs ; [] |2452| 
	.dwpsn	file "../Source/prod.c",line 2456,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2456| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2456| 
        ; call occurs [#_scia_puts] ; [] |2456| 
	.dwpsn	file "../Source/prod.c",line 2458,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2458| 
        MOVL      XAR0,#44              ; [CPU_] |2458| 
        MOV       AL,*-SP[47]           ; [CPU_] |2458| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2458| 
        MOV       *-SP[3],AL            ; [CPU_] |2458| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2458| 
        MOVL      XAR4,XAR1             ; [CPU_] |2458| 
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_sprintf")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2458| 
        ; call occurs [#_sprintf] ; [] |2458| 
        MOVL      XAR4,XAR1             ; [CPU_] |2458| 
	.dwpsn	file "../Source/prod.c",line 2460,column 6,is_stmt,isa 0
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2460| 
        ; call occurs [#_scia_puts] ; [] |2460| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2465| 
        MOVL      ACC,XAR4              ; [CPU_] |2465| 
        ADD       ACC,#1607 << 1        ; [CPU_] |2465| 
        MOVL      XAR4,ACC              ; [CPU_] |2465| 
        MOV       AL,*-SP[47]           ; [CPU_] |2465| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2469,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2469| 
        ; branch occurs ; [] |2469| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2454,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2454| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2454| 
        ; call occurs [#_scia_puts] ; [] |2454| 
	.dwpsn	file "../Source/prod.c",line 2445,column 6,is_stmt,isa 0
        B         $C$L512,UNC           ; [CPU_] |2445| 
        ; branch occurs ; [] |2445| 
$C$L514:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2518,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2518| 
        B         $C$L625,LO            ; [CPU_] |2518| 
        ; branchcc occurs ; [] |2518| 
	.dwpsn	file "../Source/prod.c",line 2521,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2521| 
        CMPB      AL,#83                ; [CPU_] |2521| 
        B         $C$L625,NEQ           ; [CPU_] |2521| 
        ; branchcc occurs ; [] |2521| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 2528,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2528| 
        MOVL      XAR0,#44              ; [CPU_] |2528| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2528| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2528| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2528| 
        MOVL      XAR4,XAR1             ; [CPU_] |2528| 
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_sprintf")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2528| 
        ; call occurs [#_sprintf] ; [] |2528| 
	.dwpsn	file "../Source/prod.c",line 2529,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2529| 
	.dwpsn	file "../Source/prod.c",line 2528,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2528| 
	.dwpsn	file "../Source/prod.c",line 2529,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2529| 
        MOV       AL,#1024              ; [CPU_] |2529| 
        MOVL      XAR5,XAR1             ; [CPU_] |2529| 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2529| 
        ; call occurs [#_scia_getparam] ; [] |2529| 
	.dwpsn	file "../Source/prod.c",line 2530,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2530| 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_atoi")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2530| 
        ; call occurs [#_atoi] ; [] |2530| 
        MOV       *-SP[57],AL           ; [CPU_] |2530| 
	.dwpsn	file "../Source/prod.c",line 2531,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2531| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2531| 
        ; call occurs [#_scia_puts] ; [] |2531| 
        MOV       AL,*-SP[57]           ; [CPU_] |2531| 
	.dwpsn	file "../Source/prod.c",line 2533,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2533| 
        CMPB      AL,#4                 ; [CPU_] |2533| 
        B         $C$L529,HIS           ; [CPU_] |2533| 
        ; branchcc occurs ; [] |2533| 
	.dwpsn	file "../Source/prod.c",line 2537,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2537| 
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2537| 
        ; call occurs [#_scia_puts] ; [] |2537| 
        MOVL      XAR0,#62              ; [CPU_] |2537| 
	.dwpsn	file "../Source/prod.c",line 2541,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2541| 
	.dwpsn	file "../Source/prod.c",line 2537,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2537| 
	.dwpsn	file "../Source/prod.c",line 2541,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2541| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2542,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2542| 
        MOVL      XAR0,#44              ; [CPU_] |2542| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2542| 
        MOV       *-SP[3],AL            ; [CPU_] |2542| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2542| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2542| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2542| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_sprintf")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2542| 
        ; call occurs [#_sprintf] ; [] |2542| 
        MOVL      XAR0,#44              ; [CPU_] |2542| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2542| 
	.dwpsn	file "../Source/prod.c",line 2543,column 7,is_stmt,isa 0
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2543| 
        ; call occurs [#_scia_puts] ; [] |2543| 
        MOV       AL,*-SP[47]           ; [CPU_] |2543| 
	.dwpsn	file "../Source/prod.c",line 2544,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2544| 
        B         $C$L517,GEQ           ; [CPU_] |2544| 
        ; branchcc occurs ; [] |2544| 
	.dwpsn	file "../Source/prod.c",line 2545,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2545| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2545| 
        ; call occurs [#_scia_puts] ; [] |2545| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2541,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2541| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2541| 
        B         $C$L516,LT            ; [CPU_] |2541| 
        ; branchcc occurs ; [] |2541| 
	.dwpsn	file "../Source/prod.c",line 2548,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2548| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2548| 
        ; call occurs [#_scia_puts] ; [] |2548| 
	.dwpsn	file "../Source/prod.c",line 2549,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2549| 
        MOVL      XAR0,#44              ; [CPU_] |2549| 
	.dwpsn	file "../Source/prod.c",line 2548,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2548| 
	.dwpsn	file "../Source/prod.c",line 2549,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2549| 
        MOV       *-SP[3],AH            ; [CPU_] |2549| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2549| 
        DEC       *-SP[57]              ; [CPU_] |2549| 
        MOV       *-SP[47],AH           ; [CPU_] |2549| 
        MOVL      XAR4,XAR1             ; [CPU_] |2549| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_sprintf")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2549| 
        ; call occurs [#_sprintf] ; [] |2549| 
	.dwpsn	file "../Source/prod.c",line 2551,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2551| 
	.dwpsn	file "../Source/prod.c",line 2549,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2549| 
	.dwpsn	file "../Source/prod.c",line 2551,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2551| 
        MOV       AL,#1024              ; [CPU_] |2551| 
        MOVL      XAR5,XAR1             ; [CPU_] |2551| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2551| 
        ; call occurs [#_scia_getparam] ; [] |2551| 
        MOVL      XAR4,XAR1             ; [CPU_] |2551| 
	.dwpsn	file "../Source/prod.c",line 2552,column 6,is_stmt,isa 0
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_atoi")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2552| 
        ; call occurs [#_atoi] ; [] |2552| 
        MOVZ      AR1,AL                ; [CPU_] |2552| 
        CMPB      AL,#7                 ; [CPU_] |2552| 
        B         $C$L518,LO            ; [CPU_] |2552| 
        ; branchcc occurs ; [] |2552| 
	.dwpsn	file "../Source/prod.c",line 2555,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2555| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2555| 
        ; call occurs [#_scia_puts] ; [] |2555| 
	.dwpsn	file "../Source/prod.c",line 2554,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2554| 
$C$L518:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2558,column 6,is_stmt,isa 0
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2558| 
        ; call occurs [#_scia_puts] ; [] |2558| 
	.dwpsn	file "../Source/prod.c",line 2559,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2559| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2559| 
        ; call occurs [#_scia_puts] ; [] |2559| 
	.dwpsn	file "../Source/prod.c",line 2560,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2560| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2560| 
        MOVB      AL,#3                 ; [CPU_] |2560| 
        MOV       T,*-SP[57]            ; [CPU_] |2560| 
        MPYU      ACC,T,AL              ; [CPU_] |2560| 
        ADDL      ACC,XAR6              ; [CPU_] |2560| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2560| 
        MOVL      XAR4,ACC              ; [CPU_] |2560| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2560| 
	.dwpsn	file "../Source/prod.c",line 2562,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2562| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2562| 
        CMPB      AL,#2                 ; [CPU_] |2562| 
        B         $C$L522,LOS           ; [CPU_] |2562| 
        ; branchcc occurs ; [] |2562| 
        MOV       AH,AL                 ; [CPU_] |2562| 
        ADDB      AH,#-3                ; [CPU_] |2562| 
        CMPB      AH,#1                 ; [CPU_] |2562| 
        B         $C$L521,LOS           ; [CPU_] |2562| 
        ; branchcc occurs ; [] |2562| 
        CMPB      AL,#5                 ; [CPU_] |2562| 
        B         $C$L519,EQ            ; [CPU_] |2562| 
        ; branchcc occurs ; [] |2562| 
        CMPB      AL,#6                 ; [CPU_] |2562| 
        B         $C$L584,NEQ           ; [CPU_] |2562| 
        ; branchcc occurs ; [] |2562| 
	.dwpsn	file "../Source/prod.c",line 2636,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2636| 
        MOV       AL,*-SP[47]           ; [CPU_] |2636| 
        MOVL      XAR0,#62              ; [CPU_] |2636| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2636| 
        MOV       *-SP[3],AL            ; [CPU_] |2636| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2636| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2636| 
        ADDL      ACC,XAR6              ; [CPU_] |2636| 
        MOVL      XAR4,ACC              ; [CPU_] |2636| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2636| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2636| 
	.dwpsn	file "../Source/prod.c",line 2639,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2639| 
        ; branch occurs ; [] |2639| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2617,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2617| 
        MOVL      XAR0,#44              ; [CPU_] |2617| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2617| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2617| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2617| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_sprintf")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2617| 
        ; call occurs [#_sprintf] ; [] |2617| 
        MOVL      XAR0,#44              ; [CPU_] |2617| 
	.dwpsn	file "../Source/prod.c",line 2618,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2618| 
	.dwpsn	file "../Source/prod.c",line 2617,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2617| 
	.dwpsn	file "../Source/prod.c",line 2618,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2618| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2618| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2618| 
        ; call occurs [#_scia_getparam] ; [] |2618| 
        MOVL      XAR0,#86              ; [CPU_] |2618| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2618| 
	.dwpsn	file "../Source/prod.c",line 2619,column 8,is_stmt,isa 0
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_atoi")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2619| 
        ; call occurs [#_atoi] ; [] |2619| 
        MOVL      XAR0,#86              ; [CPU_] |2619| 
        MOV       *-SP[58],AL           ; [CPU_] |2619| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2619| 
	.dwpsn	file "../Source/prod.c",line 2620,column 8,is_stmt,isa 0
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2620| 
        ; call occurs [#_scia_puts] ; [] |2620| 
        MOV       AL,*-SP[58]           ; [CPU_] |2620| 
	.dwpsn	file "../Source/prod.c",line 2622,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2622| 
        CMPB      AL,#4                 ; [CPU_] |2622| 
        B         $C$L520,HIS           ; [CPU_] |2622| 
        ; branchcc occurs ; [] |2622| 
	.dwpsn	file "../Source/prod.c",line 2626,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2626| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2626| 
        ; call occurs [#_scia_puts] ; [] |2626| 
	.dwpsn	file "../Source/prod.c",line 2628,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2628| 
	.dwpsn	file "../Source/prod.c",line 2630,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2630| 
        MOVL      XAR0,#62              ; [CPU_] |2630| 
	.dwpsn	file "../Source/prod.c",line 2626,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2626| 
	.dwpsn	file "../Source/prod.c",line 2628,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2628| 
	.dwpsn	file "../Source/prod.c",line 2630,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2630| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2630| 
        MOV       *-SP[3],AL            ; [CPU_] |2630| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2630| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2630| 
        ADDL      ACC,XAR6              ; [CPU_] |2630| 
        MOVL      XAR4,ACC              ; [CPU_] |2630| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2630| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2630| 
        MOVB      AL,#1                 ; [CPU_] |2630| 
        ADD       AL,*-SP[58]           ; [CPU_] |2630| 
        MOV       *-SP[7],AL            ; [CPU_] |2630| 
	.dwpsn	file "../Source/prod.c",line 2633,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2633| 
        ; branch occurs ; [] |2633| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2624,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2624| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2624| 
        ; call occurs [#_scia_puts] ; [] |2624| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        B         $C$L519,UNC           ; [CPU_] |2616| 
        ; branch occurs ; [] |2616| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2574,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2574| 
        B         $C$L523,UNC           ; [CPU_] |2574| 
        ; branch occurs ; [] |2574| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2568,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2568| 
$C$L523:    
        MOV       *-SP[59],AL           ; [CPU_] |2568| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L524:    
	.dwpsn	file "../Source/prod.c",line 2579,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2579| 
        MOV       AL,*-SP[59]           ; [CPU_] |2579| 
        MOVL      XAR0,#44              ; [CPU_] |2579| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2579| 
        MOV       *-SP[3],AL            ; [CPU_] |2579| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2579| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_sprintf")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2579| 
        ; call occurs [#_sprintf] ; [] |2579| 
        MOVL      XAR0,#44              ; [CPU_] |2579| 
	.dwpsn	file "../Source/prod.c",line 2580,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2580| 
	.dwpsn	file "../Source/prod.c",line 2579,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2579| 
	.dwpsn	file "../Source/prod.c",line 2580,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2580| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2580| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2580| 
        ; call occurs [#_scia_getparam] ; [] |2580| 
        MOVL      XAR0,#86              ; [CPU_] |2580| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2580| 
	.dwpsn	file "../Source/prod.c",line 2581,column 8,is_stmt,isa 0
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_atoi")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2581| 
        ; call occurs [#_atoi] ; [] |2581| 
        MOVL      XAR0,#86              ; [CPU_] |2581| 
        MOV       *-SP[58],AL           ; [CPU_] |2581| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2581| 
	.dwpsn	file "../Source/prod.c",line 2582,column 8,is_stmt,isa 0
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2582| 
        ; call occurs [#_scia_puts] ; [] |2582| 
        MOV       AL,*-SP[58]           ; [CPU_] |2582| 
	.dwpsn	file "../Source/prod.c",line 2584,column 9,is_stmt,isa 0
        B         $C$L528,EQ            ; [CPU_] |2584| 
        ; branchcc occurs ; [] |2584| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2584| 
        B         $C$L528,LO            ; [CPU_] |2584| 
        ; branchcc occurs ; [] |2584| 
	.dwpsn	file "../Source/prod.c",line 2588,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2588| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2588| 
        ; call occurs [#_scia_puts] ; [] |2588| 
	.dwpsn	file "../Source/prod.c",line 2590,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2590| 
	.dwpsn	file "../Source/prod.c",line 2588,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2588| 
	.dwpsn	file "../Source/prod.c",line 2590,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2590| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2595,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2595| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2595| 
        MOV       AL,#1024              ; [CPU_] |2595| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2595| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2595| 
        ; call occurs [#_scia_getparam] ; [] |2595| 
        MOVL      XAR0,#86              ; [CPU_] |2595| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2595| 
	.dwpsn	file "../Source/prod.c",line 2597,column 8,is_stmt,isa 0
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_atoi")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2597| 
        ; call occurs [#_atoi] ; [] |2597| 
        MOV       *-SP[48],AL           ; [CPU_] |2597| 
        CMPB      AL,#0                 ; [CPU_] |2597| 
        B         $C$L527,LT            ; [CPU_] |2597| 
        ; branchcc occurs ; [] |2597| 
        CMPB      AL,#6                 ; [CPU_] |2597| 
        B         $C$L527,GEQ           ; [CPU_] |2597| 
        ; branchcc occurs ; [] |2597| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2603,column 7,is_stmt,isa 0
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2603| 
        ; call occurs [#_scia_puts] ; [] |2603| 
	.dwpsn	file "../Source/prod.c",line 2604,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2604| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2604| 
        ; call occurs [#_scia_puts] ; [] |2604| 
        MOV       AL,*-SP[48]           ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2607,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2607| 
        MOVL      XAR0,#62              ; [CPU_] |2607| 
	.dwpsn	file "../Source/prod.c",line 2605,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2605| 
	.dwpsn	file "../Source/prod.c",line 2607,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2607| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2607| 
        MOV       *-SP[3],AL            ; [CPU_] |2607| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2607| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2607| 
        ADDL      ACC,XAR6              ; [CPU_] |2607| 
        MOVL      XAR4,ACC              ; [CPU_] |2607| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2607| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2607| 
        MOVB      AL,#1                 ; [CPU_] |2607| 
        ADD       AL,*-SP[58]           ; [CPU_] |2607| 
        MOV       *-SP[7],AL            ; [CPU_] |2607| 
        MOV       AL,*-SP[48]           ; [CPU_] |2607| 
        MOV       *-SP[8],AL            ; [CPU_] |2607| 
$C$L526:    
        MOVL      XAR0,#44              ; [CPU_] |2607| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2607| 
        MOVL      XAR4,XAR1             ; [CPU_] |2607| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_sprintf")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2607| 
        ; call occurs [#_sprintf] ; [] |2607| 
        MOVL      XAR4,XAR1             ; [CPU_] |2607| 
	.dwpsn	file "../Source/prod.c",line 2610,column 7,is_stmt,isa 0
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2610| 
        ; call occurs [#_scia_puts] ; [] |2610| 
	.dwpsn	file "../Source/prod.c",line 2645,column 6,is_stmt,isa 0
        B         $C$L584,UNC           ; [CPU_] |2645| 
        ; branch occurs ; [] |2645| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2601,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2601| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2601| 
        ; call occurs [#_scia_puts] ; [] |2601| 
	.dwpsn	file "../Source/prod.c",line 2594,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2594| 
        ; branch occurs ; [] |2594| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2586,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2586| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2586| 
        ; call occurs [#_scia_puts] ; [] |2586| 
	.dwpsn	file "../Source/prod.c",line 2578,column 7,is_stmt,isa 0
        B         $C$L524,UNC           ; [CPU_] |2578| 
        ; branch occurs ; [] |2578| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2535,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2535| 
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2535| 
        ; call occurs [#_scia_puts] ; [] |2535| 
	.dwpsn	file "../Source/prod.c",line 2527,column 6,is_stmt,isa 0
        B         $C$L515,UNC           ; [CPU_] |2527| 
        ; branch occurs ; [] |2527| 
$C$L530:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1625,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1625| 
        B         $C$L625,LO            ; [CPU_] |1625| 
        ; branchcc occurs ; [] |1625| 
	.dwpsn	file "../Source/prod.c",line 1630,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1630| 
        CMPB      AL,#86                ; [CPU_] |1630| 
        B         $C$L531,EQ            ; [CPU_] |1630| 
        ; branchcc occurs ; [] |1630| 
        CMPB      AL,#77                ; [CPU_] |1630| 
        B         $C$L531,EQ            ; [CPU_] |1630| 
        ; branchcc occurs ; [] |1630| 
        CMPB      AL,#83                ; [CPU_] |1630| 
        B         $C$L625,NEQ           ; [CPU_] |1630| 
        ; branchcc occurs ; [] |1630| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 1633,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1633| 
        MOV       *-SP[47],AL           ; [CPU_] |1633| 
	.dwpsn	file "../Source/prod.c",line 1635,column 5,is_stmt,isa 0
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1635| 
        ; call occurs [#_lcd_clear] ; [] |1635| 
	.dwpsn	file "../Source/prod.c",line 1636,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1636| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1636| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1636| 
        ; call occurs [#_lcd_puts] ; [] |1636| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 1642,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1642| 
        MOVL      XAR0,#44              ; [CPU_] |1642| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1642| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1642| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1642| 
        MOVL      XAR4,XAR1             ; [CPU_] |1642| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_sprintf")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1642| 
        ; call occurs [#_sprintf] ; [] |1642| 
	.dwpsn	file "../Source/prod.c",line 1643,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1643| 
	.dwpsn	file "../Source/prod.c",line 1642,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1642| 
	.dwpsn	file "../Source/prod.c",line 1643,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1643| 
        MOV       AL,#1024              ; [CPU_] |1643| 
        MOVL      XAR5,XAR1             ; [CPU_] |1643| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1643| 
        ; call occurs [#_scia_getparam] ; [] |1643| 
	.dwpsn	file "../Source/prod.c",line 1644,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1644| 
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_atoi")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1644| 
        ; call occurs [#_atoi] ; [] |1644| 
        MOV       *-SP[58],AL           ; [CPU_] |1644| 
	.dwpsn	file "../Source/prod.c",line 1645,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1645| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1645| 
        ; call occurs [#_scia_puts] ; [] |1645| 
        MOV       AL,*-SP[58]           ; [CPU_] |1645| 
	.dwpsn	file "../Source/prod.c",line 1647,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1647| 
        CMPB      AL,#4                 ; [CPU_] |1647| 
        B         $C$L590,HIS           ; [CPU_] |1647| 
        ; branchcc occurs ; [] |1647| 
	.dwpsn	file "../Source/prod.c",line 1651,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1651| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1651| 
        ; call occurs [#_scia_puts] ; [] |1651| 
	.dwpsn	file "../Source/prod.c",line 1652,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1652| 
$C$L533:    
	.dwpsn	file "../Source/prod.c",line 1657,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1657| 
        MOVL      XAR0,#44              ; [CPU_] |1657| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1657| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1657| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1657| 
        MOVL      XAR4,XAR1             ; [CPU_] |1657| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_sprintf")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1657| 
        ; call occurs [#_sprintf] ; [] |1657| 
	.dwpsn	file "../Source/prod.c",line 1658,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1658| 
	.dwpsn	file "../Source/prod.c",line 1657,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1657| 
	.dwpsn	file "../Source/prod.c",line 1658,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1658| 
        MOV       AL,#1024              ; [CPU_] |1658| 
        MOVL      XAR5,XAR1             ; [CPU_] |1658| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1658| 
        ; call occurs [#_scia_getparam] ; [] |1658| 
	.dwpsn	file "../Source/prod.c",line 1659,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1659| 
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_atoi")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1659| 
        ; call occurs [#_atoi] ; [] |1659| 
        MOV       *-SP[57],AL           ; [CPU_] |1659| 
	.dwpsn	file "../Source/prod.c",line 1660,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1660| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1660| 
        ; call occurs [#_scia_puts] ; [] |1660| 
        MOV       AL,*-SP[57]           ; [CPU_] |1660| 
	.dwpsn	file "../Source/prod.c",line 1664,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1664| 
        CMPB      AL,#20                ; [CPU_] |1664| 
        B         $C$L589,HIS           ; [CPU_] |1664| 
        ; branchcc occurs ; [] |1664| 
	.dwpsn	file "../Source/prod.c",line 1668,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1668| 
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1668| 
        ; call occurs [#_scia_puts] ; [] |1668| 
	.dwpsn	file "../Source/prod.c",line 1672,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1672| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1672| 
        MOVL      XAR0,#44              ; [CPU_] |1672| 
	.dwpsn	file "../Source/prod.c",line 1668,column 5,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |1668| 
	.dwpsn	file "../Source/prod.c",line 1672,column 5,is_stmt,isa 0
        ADD       AL,*-SP[58]           ; [CPU_] |1672| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1672| 
        MOV       *-SP[3],AL            ; [CPU_] |1672| 
        MOV       *-SP[4],AH            ; [CPU_] |1672| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1672| 
        DEC       *-SP[57]              ; [CPU_] |1672| 
        MOV       *-SP[59],AH           ; [CPU_] |1672| 
        MOV       *-SP[60],AL           ; [CPU_] |1672| 
        MOVL      XAR4,XAR1             ; [CPU_] |1672| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_sprintf")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1672| 
        ; call occurs [#_sprintf] ; [] |1672| 
	.dwpsn	file "../Source/prod.c",line 1673,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1673| 
        MOVL      XAR4,XAR1             ; [CPU_] |1673| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1673| 
        ; call occurs [#_lcd_puts] ; [] |1673| 
	.dwpsn	file "../Source/prod.c",line 1677,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1677| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1677| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1677| 
        MOVL      XAR4,XAR1             ; [CPU_] |1677| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_sprintf")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1677| 
        ; call occurs [#_sprintf] ; [] |1677| 
	.dwpsn	file "../Source/prod.c",line 1678,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1678| 
        MOV       AL,#1024              ; [CPU_] |1678| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1678| 
        MOVL      XAR4,XAR1             ; [CPU_] |1678| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1678| 
        ; call occurs [#_scia_getparam] ; [] |1678| 
        CMPB      AL,#15                ; [CPU_] |1678| 
        B         $C$L534,LOS           ; [CPU_] |1678| 
        ; branchcc occurs ; [] |1678| 
	.dwpsn	file "../Source/prod.c",line 1682,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1682| 
        MOVB      XAR0,#15              ; [CPU_] |1682| 
	.dwpsn	file "../Source/prod.c",line 1681,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1681| 
	.dwpsn	file "../Source/prod.c",line 1682,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1682| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1684,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1684| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1684| 
        MOVL      XAR0,#86              ; [CPU_] |1684| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1684| 
        MOVB      AH,#1                 ; [CPU_] |1684| 
        ADD       AH,AL                 ; [CPU_] |1684| 
        MOVU      ACC,AH                ; [CPU_] |1684| 
        MOVL      XAR5,XAR1             ; [CPU_] |1684| 
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_memcpy")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1684| 
        ; call occurs [#_memcpy] ; [] |1684| 
        MOVL      XAR4,XAR1             ; [CPU_] |1684| 
	.dwpsn	file "../Source/prod.c",line 1685,column 5,is_stmt,isa 0
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1685| 
        ; call occurs [#_scia_puts] ; [] |1685| 
	.dwpsn	file "../Source/prod.c",line 1686,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1686| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1686| 
        ; call occurs [#_scia_puts] ; [] |1686| 
	.dwpsn	file "../Source/prod.c",line 1690,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1690| 
        MOVL      XAR0,#44              ; [CPU_] |1690| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1690| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1690| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1690| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_sprintf")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1690| 
        ; call occurs [#_sprintf] ; [] |1690| 
        MOVL      XAR0,#44              ; [CPU_] |1690| 
	.dwpsn	file "../Source/prod.c",line 1691,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1691| 
	.dwpsn	file "../Source/prod.c",line 1690,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1690| 
	.dwpsn	file "../Source/prod.c",line 1691,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1691| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1691| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1691| 
        ; call occurs [#_scia_getparam] ; [] |1691| 
        CMPB      AL,#15                ; [CPU_] |1691| 
        B         $C$L535,LOS           ; [CPU_] |1691| 
        ; branchcc occurs ; [] |1691| 
	.dwpsn	file "../Source/prod.c",line 1695,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1695| 
        MOVB      XAR0,#15              ; [CPU_] |1695| 
	.dwpsn	file "../Source/prod.c",line 1694,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1694| 
	.dwpsn	file "../Source/prod.c",line 1695,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1695| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1697,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1697| 
        MOVL      XAR0,#60              ; [CPU_] |1697| 
        MOVL      XAR5,XAR1             ; [CPU_] |1697| 
        ADD       AH,AL                 ; [CPU_] |1697| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1697| 
        MOVU      ACC,AH                ; [CPU_] |1697| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_memcpy")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1697| 
        ; call occurs [#_memcpy] ; [] |1697| 
        MOVL      XAR4,XAR1             ; [CPU_] |1697| 
	.dwpsn	file "../Source/prod.c",line 1698,column 5,is_stmt,isa 0
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1698| 
        ; call occurs [#_scia_puts] ; [] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1699| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1699| 
        ; call occurs [#_scia_puts] ; [] |1699| 
        MOVL      XAR0,#70              ; [CPU_] |1699| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1699| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1702,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1702| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |1702| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1703,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1703| 
        MOVL      XAR0,#88              ; [CPU_] |1703| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1703| 
        MOV       *-SP[3],AL            ; [CPU_] |1703| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1703| 
        MOVL      XAR0,#88              ; [CPU_] |1703| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1703| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1703| 
        MOVL      XAR4,XAR1             ; [CPU_] |1703| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1703| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_sprintf")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1703| 
        ; call occurs [#_sprintf] ; [] |1703| 
	.dwpsn	file "../Source/prod.c",line 1702,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1702| 
        INC       *-SP[61]              ; [CPU_] |1702| 
        MOV       AL,*-SP[61]           ; [CPU_] |1702| 
        CMPB      AL,#7                 ; [CPU_] |1702| 
        B         $C$L536,LT            ; [CPU_] |1702| 
        ; branchcc occurs ; [] |1702| 
	.dwpsn	file "../Source/prod.c",line 1705,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1705| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1705| 
        MOVB      XAR1,#54              ; [CPU_] |1705| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1705| 
	.dwpsn	file "../Source/prod.c",line 1706,column 5,is_stmt,isa 0
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1706| 
        ; call occurs [#_scia_puts] ; [] |1706| 
	.dwpsn	file "../Source/prod.c",line 1707,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1707| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1707| 
        MOV       AL,#1024              ; [CPU_] |1707| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1707| 
        MOVL      XAR5,XAR1             ; [CPU_] |1707| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1707| 
        ; call occurs [#_scia_getparam] ; [] |1707| 
        MOVL      XAR4,XAR1             ; [CPU_] |1707| 
	.dwpsn	file "../Source/prod.c",line 1709,column 5,is_stmt,isa 0
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_atoi")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1709| 
        ; call occurs [#_atoi] ; [] |1709| 
        MOVB      XAR0,#42              ; [CPU_] |1709| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1709| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1709| 
	.dwpsn	file "../Source/prod.c",line 1711,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1711| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1711| 
        CMPB      AL,#6                 ; [CPU_] |1711| 
        B         $C$L537,GT            ; [CPU_] |1711| 
        ; branchcc occurs ; [] |1711| 
        CMPB      AL,#6                 ; [CPU_] |1711| 
        B         $C$L540,EQ            ; [CPU_] |1711| 
        ; branchcc occurs ; [] |1711| 
        CMPB      AL,#1                 ; [CPU_] |1711| 
        B         $C$L543,LOS           ; [CPU_] |1711| 
        ; branchcc occurs ; [] |1711| 
        MOV       AH,AL                 ; [CPU_] |1711| 
        ADDB      AH,#-2                ; [CPU_] |1711| 
        CMPB      AH,#2                 ; [CPU_] |1711| 
        B         $C$L542,LOS           ; [CPU_] |1711| 
        ; branchcc occurs ; [] |1711| 
        CMPB      AL,#5                 ; [CPU_] |1711| 
        B         $C$L541,EQ            ; [CPU_] |1711| 
        ; branchcc occurs ; [] |1711| 
        B         $C$L538,UNC           ; [CPU_] |1711| 
        ; branch occurs ; [] |1711| 
$C$L537:    
        MOV       AH,AL                 ; [CPU_] |1711| 
        ADDB      AH,#-7                ; [CPU_] |1711| 
        CMPB      AH,#1                 ; [CPU_] |1711| 
        B         $C$L539,LOS           ; [CPU_] |1711| 
        ; branchcc occurs ; [] |1711| 
        CMPB      AL,#15                ; [CPU_] |1711| 
        B         $C$L539,EQ            ; [CPU_] |1711| 
        ; branchcc occurs ; [] |1711| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1733,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1733| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1733| 
	.dwpsn	file "../Source/prod.c",line 1734,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1734| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1734| 
        ; call occurs [#_scia_puts] ; [] |1734| 
	.dwpsn	file "../Source/prod.c",line 1735,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1735| 
        ; branch occurs ; [] |1735| 
$C$L539:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1730,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1730| 
	.dwpsn	file "../Source/prod.c",line 1731,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1731| 
        ; branch occurs ; [] |1731| 
$C$L540:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1725,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1725| 
	.dwpsn	file "../Source/prod.c",line 1726,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1726| 
        ; branch occurs ; [] |1726| 
$C$L541:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1722,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1722| 
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1723| 
        ; branch occurs ; [] |1723| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1719,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1719| 
	.dwpsn	file "../Source/prod.c",line 1720,column 6,is_stmt,isa 0
        B         $C$L544,UNC           ; [CPU_] |1720| 
        ; branch occurs ; [] |1720| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1714,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1714| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1737,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1737| 
        MOVL      XAR4,XAR7             ; [CPU_] |1737| 
        MOVB      XAR0,#43              ; [CPU_] |1737| 
        ADDB      XAR7,#42              ; [CPU_] |1737| 
        MOV       AL,*XAR7              ; [CPU_] |1737| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1737| 
	.dwpsn	file "../Source/prod.c",line 1738,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1738| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1738| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1738| 
        MOVL      XAR0,#86              ; [CPU_] |1738| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1738| 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1740| 
        ; call occurs [#_scia_puts] ; [] |1740| 
	.dwpsn	file "../Source/prod.c",line 1741,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1741| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1741| 
        ; call occurs [#_scia_puts] ; [] |1741| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1746,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1746| 
        MOVL      XAR5,XAR1             ; [CPU_] |1746| 
        MOV       AL,#1024              ; [CPU_] |1746| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1746| 
        ; call occurs [#_scia_getparam] ; [] |1746| 
        MOVL      XAR4,XAR1             ; [CPU_] |1746| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_strtod")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1747,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1747| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1747| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1747,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1747| 
	.dwpsn	file "../Source/prod.c",line 1749,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1749| 
        MOV       AH,#0                 ; [CPU_] |1749| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1749| 
        MOVL      ACC,XAR3              ; [CPU_] |1749| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1749| 
        ; call occurs [#FS$$CMP] ; [] |1749| 
        CMPB      AL,#0                 ; [CPU_] |1749| 
        B         $C$L588,EQ            ; [CPU_] |1749| 
        ; branchcc occurs ; [] |1749| 
	.dwpsn	file "../Source/prod.c",line 1753,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1753| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1753| 
        MOVB      XAR1,#142             ; [CPU_] |1753| 
        MOVL      XAR0,#86              ; [CPU_] |1753| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1753| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1753| 
	.dwpsn	file "../Source/prod.c",line 1754,column 5,is_stmt,isa 0
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1754| 
        ; call occurs [#_scia_puts] ; [] |1754| 
	.dwpsn	file "../Source/prod.c",line 1755,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1755| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1755| 
        ; call occurs [#_scia_puts] ; [] |1755| 
        MOV       AL,*-SP[58]           ; [CPU_] |1755| 
	.dwpsn	file "../Source/prod.c",line 1757,column 5,is_stmt,isa 0
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_tagid")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1757| 
        ; call occurs [#_tagid] ; [] |1757| 
        MOVL      XAR0,#36              ; [CPU_] |1757| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1757| 
        MOVL      XAR4,XAR5             ; [CPU_] |1757| 
        ADDB      XAR4,#32              ; [CPU_] |1757| 
	.dwpsn	file "../Source/prod.c",line 1759,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1759| 
	.dwpsn	file "../Source/prod.c",line 1757,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1757| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1757| 
	.dwpsn	file "../Source/prod.c",line 1759,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1759| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1759| 
        MOV       *-SP[2],#0            ; [CPU_] |1759| 
        MOV       *-SP[1],#0            ; [CPU_] |1759| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1759| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1759| 
        MOVL      P,XAR4                ; [CPU_] |1759| 
        MOVL      ACC,XAR5              ; [CPU_] |1759| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1175, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1759| 
        ; call occurs [#ULL$$CMP] ; [] |1759| 
        CMPB      AL,#0                 ; [CPU_] |1759| 
        B         $C$L546,NEQ           ; [CPU_] |1759| 
        ; branchcc occurs ; [] |1759| 
	.dwpsn	file "../Source/prod.c",line 1760,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1760| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1760| 
	.dwpsn	file "../Source/prod.c",line 1761,column 5,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1761| 
        ; branch occurs ; [] |1761| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1762,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1762| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1762| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1762| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1762| 
$C$L547:    
        MOVL      XAR0,#44              ; [CPU_] |1762| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1762| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_sprintf")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1762| 
        ; call occurs [#_sprintf] ; [] |1762| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1764,column 5,is_stmt,isa 0
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1764| 
        ; call occurs [#_scia_puts] ; [] |1764| 
        MOV       AL,*-SP[47]           ; [CPU_] |1764| 
	.dwpsn	file "../Source/prod.c",line 1766,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1766| 
        B         $C$L561,EQ            ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        CMPB      AL,#83                ; [CPU_] |1766| 
        B         $C$L552,EQ            ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
        CMPB      AL,#86                ; [CPU_] |1766| 
        B         $C$L618,NEQ           ; [CPU_] |1766| 
        ; branchcc occurs ; [] |1766| 
	.dwpsn	file "../Source/prod.c",line 1771,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1771| 
        MOVB      AL,#40                ; [CPU_] |1771| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1771| 
        ; call occurs [#_lcd_puts] ; [] |1771| 
	.dwpsn	file "../Source/prod.c",line 1773,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1773| 
        MOVB      XAR0,#36              ; [CPU_] |1773| 
	.dwpsn	file "../Source/prod.c",line 1776,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1776| 
	.dwpsn	file "../Source/prod.c",line 1773,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1773| 
	.dwpsn	file "../Source/prod.c",line 1774,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1774| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1774| 
	.dwpsn	file "../Source/prod.c",line 1776,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1776| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1776| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1776| 
        MOVL      XAR0,#70              ; [CPU_] |1776| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1776| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1776| 
        MOV       ACC,AL << 1           ; [CPU_] |1776| 
        ADDL      ACC,XAR6              ; [CPU_] |1776| 
        MOVL      XAR4,ACC              ; [CPU_] |1776| 
        MOVL      XAR0,#44              ; [CPU_] |1776| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1776| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1776| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1776| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_sprintf")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1776| 
        ; call occurs [#_sprintf] ; [] |1776| 
        MOVL      XAR0,#44              ; [CPU_] |1776| 
	.dwpsn	file "../Source/prod.c",line 1778,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1778| 
	.dwpsn	file "../Source/prod.c",line 1776,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1776| 
	.dwpsn	file "../Source/prod.c",line 1778,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1778| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1778| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1778| 
        ; call occurs [#_scia_getparam] ; [] |1778| 
        MOVL      XAR0,#86              ; [CPU_] |1778| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1778,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1778| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_strtod")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1779| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1779| 
	.dwpsn	file "../Source/prod.c",line 1780,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1780| 
        MOV       AH,#0                 ; [CPU_] |1780| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1780| 
        MOVL      ACC,XAR6              ; [CPU_] |1780| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1780| 
        ; call occurs [#FS$$CMP] ; [] |1780| 
        CMPB      AL,#0                 ; [CPU_] |1780| 
        B         $C$L548,NEQ           ; [CPU_] |1780| 
        ; branchcc occurs ; [] |1780| 
	.dwpsn	file "../Source/prod.c",line 1781,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1781| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1781| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1781| 
$C$L548:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1783,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1783| 
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1783| 
        ; call occurs [#_scia_puts] ; [] |1783| 
	.dwpsn	file "../Source/prod.c",line 1784,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1784| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1784| 
        ; call occurs [#_scia_puts] ; [] |1784| 
	.dwpsn	file "../Source/prod.c",line 1786,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1786| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1786| 
        MOVL      XAR5,XAR1             ; [CPU_] |1786| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1786| 
        ; call occurs [#_scia_getparam] ; [] |1786| 
	.dwpsn	file "../Source/prod.c",line 1789,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1789| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1789| 
        ; call occurs [#_scia_puts] ; [] |1789| 
	.dwpsn	file "../Source/prod.c",line 1791,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1791| 
	.dwpsn	file "../Source/prod.c",line 1792,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1792| 
	.dwpsn	file "../Source/prod.c",line 1791,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1791| 
	.dwpsn	file "../Source/prod.c",line 1792,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1792| 
	.dwpsn	file "../Source/prod.c",line 1791,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1791| 
	.dwpsn	file "../Source/prod.c",line 1793,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1793| 
	.dwpsn	file "../Source/prod.c",line 1791,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1791| 
	.dwpsn	file "../Source/prod.c",line 1793,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1793| 
        MOVB      ACC,#0                ; [CPU_] |1793| 
        SUBB      ACC,#1                ; [CPU_] |1793| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1793| 
        B         $C$L551,EQ            ; [CPU_] |1793| 
        ; branchcc occurs ; [] |1793| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1794,column 14,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1794| 
        ; branch occurs ; [] |1794| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1795,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1795| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_delay_us")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1795| 
        ; call occurs [#_delay_us] ; [] |1795| 
$C$L550:    
	.dwpsn	file "../Source/prod.c",line 1794,column 14,is_stmt,isa 0
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1794| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1794| 
        CMPB      AL,#0                 ; [CPU_] |1794| 
        B         $C$L549,EQ            ; [CPU_] |1794| 
        ; branchcc occurs ; [] |1794| 
	.dwpsn	file "../Source/prod.c",line 1798,column 7,is_stmt,isa 0
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1798| 
        ; call occurs [#_ad7738_getraw] ; [] |1798| 
	.dwpsn	file "../Source/prod.c",line 1799,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1799| 
        ADDL      XAR4,ACC              ; [CPU_] |1799| 
        MOVL      XAR0,#20              ; [CPU_] |1799| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1799| 
        MOVL      XAR0,#20              ; [CPU_] |1799| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1799| 
        ASR64     ACC:P,16              ; [CPU_] |1799| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1799| 
        MOVL      XAR0,#20              ; [CPU_] |1799| 
        ASR64     ACC:P,16              ; [CPU_] |1799| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1799| 
        MOVL      XAR0,#20              ; [CPU_] |1799| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1799| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1799| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1799| 
        MOVL      *-SP[32],P            ; [CPU_] |1799| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1799| 
	.dwpsn	file "../Source/prod.c",line 1793,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1793| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1793| 
        MOVB      ACC,#0                ; [CPU_] |1793| 
        SUBB      ACC,#1                ; [CPU_] |1793| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1793| 
        B         $C$L550,NEQ           ; [CPU_] |1793| 
        ; branchcc occurs ; [] |1793| 
$C$L551:    
	.dwpsn	file "../Source/prod.c",line 1801,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1801| 
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1801| 
        ; call occurs [#_scia_puts] ; [] |1801| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1803| 
        MOVL      XAR0,#52              ; [CPU_] |1803| 
        MOVL      ACC,XAR1              ; [CPU_] |1803| 
        ADDB      ACC,#96               ; [CPU_] |1803| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1803| 
        MOVL      XAR0,#40              ; [CPU_] |1803| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1803| 
        MOV       T,*-SP[58]            ; [CPU_] |1803| 
        MOVB      AL,#10                ; [CPU_] |1803| 
        MPYU      ACC,T,AL              ; [CPU_] |1803| 
        ADDL      ACC,XAR6              ; [CPU_] |1803| 
        ADDB      ACC,#42               ; [CPU_] |1803| 
        MOVL      XAR4,ACC              ; [CPU_] |1803| 
        MOVL      XAR0,#42              ; [CPU_] |1803| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1803| 
	.dwpsn	file "../Source/prod.c",line 1805,column 6,is_stmt,isa 0
        B         $C$L559,UNC           ; [CPU_] |1805| 
        ; branch occurs ; [] |1805| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1888,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1888| 
        MOVB      AL,#40                ; [CPU_] |1888| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1888| 
        ; call occurs [#_lcd_puts] ; [] |1888| 
	.dwpsn	file "../Source/prod.c",line 1890,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1890| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1890| 
	.dwpsn	file "../Source/prod.c",line 1893,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1893| 
	.dwpsn	file "../Source/prod.c",line 1890,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1890| 
	.dwpsn	file "../Source/prod.c",line 1891,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1891| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1891| 
	.dwpsn	file "../Source/prod.c",line 1893,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1893| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1893| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1893| 
        MOVL      XAR0,#70              ; [CPU_] |1893| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1893| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1893| 
        MOV       ACC,AL << 1           ; [CPU_] |1893| 
        ADDL      ACC,XAR6              ; [CPU_] |1893| 
        MOVL      XAR4,ACC              ; [CPU_] |1893| 
        MOVL      XAR0,#44              ; [CPU_] |1893| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1893| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1893| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1893| 
        MOVL      XAR4,XAR1             ; [CPU_] |1893| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_sprintf")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1893| 
        ; call occurs [#_sprintf] ; [] |1893| 
	.dwpsn	file "../Source/prod.c",line 1896,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1896| 
	.dwpsn	file "../Source/prod.c",line 1893,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1893| 
	.dwpsn	file "../Source/prod.c",line 1896,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1896| 
        MOV       AL,#1024              ; [CPU_] |1896| 
        MOVL      XAR5,XAR1             ; [CPU_] |1896| 
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1896| 
        ; call occurs [#_scia_getparam] ; [] |1896| 
	.dwpsn	file "../Source/prod.c",line 1897,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1897| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1897| 
        ; call occurs [#_scia_puts] ; [] |1897| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_strtod")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1899,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1899| 
        MOV       AH,#0                 ; [CPU_] |1899| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1899| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1899| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1899| 
        ; call occurs [#FS$$CMP] ; [] |1899| 
        CMPB      AL,#0                 ; [CPU_] |1899| 
        B         $C$L553,NEQ           ; [CPU_] |1899| 
        ; branchcc occurs ; [] |1899| 
	.dwpsn	file "../Source/prod.c",line 1900,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1900| 
        MOV       AH,#16314             ; [CPU_] |1900| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1901| 
	.dwpsn	file "../Source/prod.c",line 1900,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1900| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1901| 
        ; call occurs [#_scia_puts] ; [] |1901| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1903,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1903| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1903| 
        ; call occurs [#_scia_puts] ; [] |1903| 
	.dwpsn	file "../Source/prod.c",line 1905,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1905| 
        MOV       AL,#1024              ; [CPU_] |1905| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1905| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1905| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1905| 
        ; call occurs [#_scia_getparam] ; [] |1905| 
	.dwpsn	file "../Source/prod.c",line 1908,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1908| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1908| 
        ; call occurs [#_scia_puts] ; [] |1908| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1910,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1910| 
        MOV       *-SP[48],AL           ; [CPU_] |1910| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1911,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1911| 
        B         $C$L556,LEQ           ; [CPU_] |1911| 
        ; branchcc occurs ; [] |1911| 
	.dwpsn	file "../Source/prod.c",line 1913,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1913| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1913| 
        ; call occurs [#_shunt_switch] ; [] |1913| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1915,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1915| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_delay_us")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1915| 
        ; call occurs [#_delay_us] ; [] |1915| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1915| 
	.dwpsn	file "../Source/prod.c",line 1914,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1914| 
        MOVZ      AR0,AR6               ; [CPU_] |1914| 
        MOV       *-SP[47],AR6          ; [CPU_] |1914| 
        CMP       AR0,#-1               ; [CPU_] |1914| 
        B         $C$L555,NEQ           ; [CPU_] |1914| 
        ; branchcc occurs ; [] |1914| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1918,column 8,is_stmt,isa 0
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1918| 
        ; call occurs [#_maf_rst] ; [] |1918| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1920,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1920| 
        SPM       #0                    ; [CPU_] 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_delay_us")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1920| 
        ; call occurs [#_delay_us] ; [] |1920| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1923,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1923| 
	.dwpsn	file "../Source/prod.c",line 1924,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1924| 
	.dwpsn	file "../Source/prod.c",line 1923,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1923| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1923| 
	.dwpsn	file "../Source/prod.c",line 1925,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1925| 
	.dwpsn	file "../Source/prod.c",line 1924,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1924| 
	.dwpsn	file "../Source/prod.c",line 1925,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1925| 
        MOVB      ACC,#0                ; [CPU_] |1925| 
        SUBB      ACC,#1                ; [CPU_] |1925| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1925| 
        B         $C$L558,EQ            ; [CPU_] |1925| 
        ; branchcc occurs ; [] |1925| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1926,column 15,is_stmt,isa 0
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1926| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1926| 
        CMPB      AL,#0                 ; [CPU_] |1926| 
        B         $C$L560,EQ            ; [CPU_] |1926| 
        ; branchcc occurs ; [] |1926| 
	.dwpsn	file "../Source/prod.c",line 1930,column 8,is_stmt,isa 0
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1930| 
        ; call occurs [#_ad7738_getraw] ; [] |1930| 
	.dwpsn	file "../Source/prod.c",line 1931,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1931| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1931| 
        ADDL      XAR4,ACC              ; [CPU_] |1931| 
        MOVL      XAR0,#18              ; [CPU_] |1931| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1931| 
        MOVL      XAR0,#18              ; [CPU_] |1931| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1931| 
        ASR64     ACC:P,16              ; [CPU_] |1931| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1931| 
        MOVL      XAR0,#18              ; [CPU_] |1931| 
        ASR64     ACC:P,16              ; [CPU_] |1931| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1931| 
        MOVL      XAR0,#18              ; [CPU_] |1931| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1931| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1931| 
        MOVL      XAR0,#18              ; [CPU_] |1931| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1931| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1931| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1931| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1931| 
	.dwpsn	file "../Source/prod.c",line 1925,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1925| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1925| 
        MOVB      ACC,#0                ; [CPU_] |1925| 
        SUBB      ACC,#1                ; [CPU_] |1925| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1925| 
        B         $C$L557,NEQ           ; [CPU_] |1925| 
        ; branchcc occurs ; [] |1925| 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1910,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1910| 
        ADDB      XAR1,#4               ; [CPU_] |1910| 
        MOV       AL,*-SP[48]           ; [CPU_] |1910| 
        CMPB      AL,#2                 ; [CPU_] |1910| 
        B         $C$L554,LT            ; [CPU_] |1910| 
        ; branchcc occurs ; [] |1910| 
	.dwpsn	file "../Source/prod.c",line 1935,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1935| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1935| 
        ; call occurs [#_shunt_switch] ; [] |1935| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1937,column 6,is_stmt,isa 0
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1937| 
        ; call occurs [#_maf_rst] ; [] |1937| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1940,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1940| 
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1940| 
        ; call occurs [#_scia_puts] ; [] |1940| 
	.dwpsn	file "../Source/prod.c",line 1942,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1942| 
        MOVB      AL,#10                ; [CPU_] |1942| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1942| 
        MOV       T,*-SP[58]            ; [CPU_] |1942| 
        MPYU      ACC,T,AL              ; [CPU_] |1942| 
        MOVL      XAR0,#88              ; [CPU_] |1942| 
        ADDL      ACC,XAR6              ; [CPU_] |1942| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1942| 
        MOV       AL,#16384             ; [CPU_] |1942| 
        MOV       AH,#17948             ; [CPU_] |1942| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1942| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1942| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1942| 
        ; call occurs [#FS$$MPY] ; [] |1942| 
        MOVL      XAR3,ACC              ; [CPU_] |1942| 
        MOVL      P,*-SP[28]            ; [CPU_] |1942| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1942| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1942| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1942| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1942| 
        ; call occurs [#LL$$TOFS] ; [] |1942| 
        MOVL      XAR0,#88              ; [CPU_] |1942| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1942| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1942| 
        MOVB      XAR1,#44              ; [CPU_] |1942| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1942| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1942| 
        ; call occurs [#FS$$MPY] ; [] |1942| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1942| 
        MOVL      ACC,XAR3              ; [CPU_] |1942| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1942| 
        ; call occurs [#FS$$DIV] ; [] |1942| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1942| 
        MOVB      XAR0,#96              ; [CPU_] |1942| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1942| 
	.dwpsn	file "../Source/prod.c",line 1944,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1944| 
        MOVL      ACC,XAR1              ; [CPU_] |1944| 
        ADDB      ACC,#96               ; [CPU_] |1944| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1944| 
        MOVL      XAR0,#88              ; [CPU_] |1944| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1944| 
        MOVL      XAR0,#42              ; [CPU_] |1944| 
        ADDB      XAR4,#42              ; [CPU_] |1944| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1944| 
$C$L559:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1944| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1944| 
        ; call occurs [#FS$$NEG] ; [] |1944| 
        MOVB      XAR0,#96              ; [CPU_] |1944| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1944| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1944| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1944| 
        ; call occurs [#FS$$MPY] ; [] |1944| 
        MOVL      XAR0,#88              ; [CPU_] |1944| 
        MOVL      P,*-SP[32]            ; [CPU_] |1944| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1944| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1944| 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1944| 
        ; call occurs [#LL$$TOFS] ; [] |1944| 
        MOVL      XAR0,#88              ; [CPU_] |1944| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1944| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1944| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1944| 
        ; call occurs [#FS$$MPY] ; [] |1944| 
        MOVL      XAR6,ACC              ; [CPU_] |1944| 
        MOV       AL,#16384             ; [CPU_] |1944| 
        MOV       AH,#17948             ; [CPU_] |1944| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1944| 
        MOVL      ACC,XAR6              ; [CPU_] |1944| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1944| 
        ; call occurs [#FS$$DIV] ; [] |1944| 
        MOVB      XAR0,#118             ; [CPU_] |1944| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1944| 
	.dwpsn	file "../Source/prod.c",line 1946,column 6,is_stmt,isa 0
        B         $C$L575,UNC           ; [CPU_] |1946| 
        ; branch occurs ; [] |1946| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1927,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1927| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_delay_us")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1927| 
        ; call occurs [#_delay_us] ; [] |1927| 
	.dwpsn	file "../Source/prod.c",line 1926,column 15,is_stmt,isa 0
        B         $C$L557,UNC           ; [CPU_] |1926| 
        ; branch occurs ; [] |1926| 
$C$L561:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1809,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1809| 
$C$L562:    
	.dwpsn	file "../Source/prod.c",line 1814,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1814| 
        MOVL      XAR0,#44              ; [CPU_] |1814| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1814| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1814| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1814| 
        MOVL      XAR4,XAR1             ; [CPU_] |1814| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_sprintf")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1814| 
        ; call occurs [#_sprintf] ; [] |1814| 
	.dwpsn	file "../Source/prod.c",line 1815,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1815| 
	.dwpsn	file "../Source/prod.c",line 1814,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1814| 
	.dwpsn	file "../Source/prod.c",line 1815,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1815| 
        MOV       AL,#1024              ; [CPU_] |1815| 
        MOVL      XAR5,XAR1             ; [CPU_] |1815| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1815| 
        ; call occurs [#_scia_getparam] ; [] |1815| 
        MOVL      XAR4,XAR1             ; [CPU_] |1815| 
	.dwpsn	file "../Source/prod.c",line 1816,column 7,is_stmt,isa 0
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_atoi")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1816| 
        ; call occurs [#_atoi] ; [] |1816| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1816| 
        MOVB      XAR0,#46              ; [CPU_] |1816| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1816| 
        MOVL      XAR0,#86              ; [CPU_] |1816| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1816| 
	.dwpsn	file "../Source/prod.c",line 1817,column 7,is_stmt,isa 0
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1817| 
        ; call occurs [#_scia_puts] ; [] |1817| 
	.dwpsn	file "../Source/prod.c",line 1819,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1819| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1819| 
        CMPB      AL,#2                 ; [CPU_] |1819| 
        B         $C$L587,LT            ; [CPU_] |1819| 
        ; branchcc occurs ; [] |1819| 
        CMPB      AL,#12                ; [CPU_] |1819| 
        B         $C$L587,GT            ; [CPU_] |1819| 
        ; branchcc occurs ; [] |1819| 
	.dwpsn	file "../Source/prod.c",line 1824,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1824| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1824| 
        ; call occurs [#_scia_puts] ; [] |1824| 
	.dwpsn	file "../Source/prod.c",line 1826,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1826| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1826| 
        MOVL      XAR0,#44              ; [CPU_] |1826| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1826| 
        ADDB      XAR7,#46              ; [CPU_] |1826| 
        MOV       AL,*XAR7              ; [CPU_] |1826| 
        MOV       *-SP[3],AL            ; [CPU_] |1826| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1826| 
        MOVL      XAR4,XAR1             ; [CPU_] |1826| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_sprintf")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1826| 
        ; call occurs [#_sprintf] ; [] |1826| 
	.dwpsn	file "../Source/prod.c",line 1827,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1827| 
	.dwpsn	file "../Source/prod.c",line 1826,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1826| 
	.dwpsn	file "../Source/prod.c",line 1827,column 6,is_stmt,isa 0
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1827| 
        ; call occurs [#_lcd_puts] ; [] |1827| 
	.dwpsn	file "../Source/prod.c",line 1830,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1830| 
	.dwpsn	file "../Source/prod.c",line 1830,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1830| 
	.dwpsn	file "../Source/prod.c",line 1830,column 11,is_stmt,isa 0
        B         $C$L564,UNC           ; [CPU_] |1830| 
        ; branch occurs ; [] |1830| 
$C$L563:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1831,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1831| 
        SUB       AL,*-SP[47]           ; [CPU_] |1831| 
        ADDB      AL,#1                 ; [CPU_] |1831| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1831| 
        ; call occurs [#I$$TOFS] ; [] |1831| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1831| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1831| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1831| 
        ; call occurs [#FS$$MPY] ; [] |1831| 
        MOVL      XAR0,#88              ; [CPU_] |1831| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1831| 
        MOV       AL,*-SP[47]           ; [CPU_] |1831| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1831| 
        ; call occurs [#I$$TOFS] ; [] |1831| 
        MOVL      XAR0,#88              ; [CPU_] |1831| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1831| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1831| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1831| 
        ; call occurs [#FS$$DIV] ; [] |1831| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1831| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1831| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1831| 
        ADDL      ACC,XAR1              ; [CPU_] |1831| 
        MOVL      XAR4,ACC              ; [CPU_] |1831| 
        MOVB      XAR0,#48              ; [CPU_] |1831| 
	.dwpsn	file "../Source/prod.c",line 1830,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1830| 
	.dwpsn	file "../Source/prod.c",line 1831,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1831| 
	.dwpsn	file "../Source/prod.c",line 1830,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1830| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1830,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1830| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1830| 
        MOV       *-SP[47],AL           ; [CPU_] |1830| 
        CMP       AL,*-SP[48]           ; [CPU_] |1830| 
        B         $C$L563,GT            ; [CPU_] |1830| 
        ; branchcc occurs ; [] |1830| 
	.dwpsn	file "../Source/prod.c",line 1836,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1836| 
        B         $C$L567,UNC           ; [CPU_] |1836| 
        ; branch occurs ; [] |1836| 
$C$L565:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1837| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1837| 
        MOVL      XAR0,#44              ; [CPU_] |1837| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1837| 
        ADDL      ACC,XAR1              ; [CPU_] |1837| 
        ADDB      ACC,#48               ; [CPU_] |1837| 
        MOVL      XAR1,ACC              ; [CPU_] |1837| 
        MOVB      AL,#1                 ; [CPU_] |1837| 
        ADD       AL,AR6                ; [CPU_] |1837| 
        MOV       *-SP[3],AL            ; [CPU_] |1837| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1837| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1837| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1837| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_sprintf")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1837| 
        ; call occurs [#_sprintf] ; [] |1837| 
        MOVL      XAR0,#44              ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1839| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1839,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1839| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1839| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1839| 
        ; call occurs [#_scia_getparam] ; [] |1839| 
        CMPB      AL,#0                 ; [CPU_] |1839| 
        B         $C$L566,EQ            ; [CPU_] |1839| 
        ; branchcc occurs ; [] |1839| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_strtod")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1843,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1843| 
$C$L566:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1845,column 7,is_stmt,isa 0
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1845| 
        ; call occurs [#_scia_puts] ; [] |1845| 
	.dwpsn	file "../Source/prod.c",line 1846,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1846| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1846| 
        ; call occurs [#_scia_puts] ; [] |1846| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1836,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1836| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L567:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1836,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1836| 
        B         $C$L565,GT            ; [CPU_] |1836| 
        ; branchcc occurs ; [] |1836| 
	.dwpsn	file "../Source/prod.c",line 1852,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1852| 
        B         $C$L572,UNC           ; [CPU_] |1852| 
        ; branch occurs ; [] |1852| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1853,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1853| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1853| 
        ADDL      ACC,XAR1              ; [CPU_] |1853| 
        ADDB      ACC,#48               ; [CPU_] |1853| 
        MOVL      XAR1,ACC              ; [CPU_] |1853| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1853| 
        MOVL      XAR0,#70              ; [CPU_] |1853| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1853| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1853| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1853| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1853| 
        ANDB      AL,#0x0f              ; [CPU_] |1853| 
        MOV       ACC,AL << 1           ; [CPU_] |1853| 
        ADDL      ACC,XAR7              ; [CPU_] |1853| 
        MOVL      XAR4,ACC              ; [CPU_] |1853| 
        MOVL      XAR0,#44              ; [CPU_] |1853| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1853| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1853| 
        MOVB      AL,#1                 ; [CPU_] |1853| 
        ADD       AL,AR6                ; [CPU_] |1853| 
        MOV       *-SP[7],AL            ; [CPU_] |1853| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1853| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("_sprintf")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1853| 
        ; call occurs [#_sprintf] ; [] |1853| 
        MOVL      XAR0,#44              ; [CPU_] |1853| 
	.dwpsn	file "../Source/prod.c",line 1857,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1857| 
	.dwpsn	file "../Source/prod.c",line 1853,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1853| 
	.dwpsn	file "../Source/prod.c",line 1857,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1857| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1857| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1857| 
        ; call occurs [#_scia_getparam] ; [] |1857| 
	.dwpsn	file "../Source/prod.c",line 1858,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1858| 
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1858| 
        ; call occurs [#_scia_puts] ; [] |1858| 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1861,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1861| 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1861,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1861| 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1862,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1862| 
	.dwpsn	file "../Source/prod.c",line 1860,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1860| 
	.dwpsn	file "../Source/prod.c",line 1862,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1862| 
        MOVB      ACC,#0                ; [CPU_] |1862| 
        SUBB      ACC,#1                ; [CPU_] |1862| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1862| 
        B         $C$L571,EQ            ; [CPU_] |1862| 
        ; branchcc occurs ; [] |1862| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1863,column 15,is_stmt,isa 0
        B         $C$L570,UNC           ; [CPU_] |1863| 
        ; branch occurs ; [] |1863| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1864,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1864| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_delay_us")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1864| 
        ; call occurs [#_delay_us] ; [] |1864| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1863,column 15,is_stmt,isa 0
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1863| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1863| 
        CMPB      AL,#0                 ; [CPU_] |1863| 
        B         $C$L569,EQ            ; [CPU_] |1863| 
        ; branchcc occurs ; [] |1863| 
	.dwpsn	file "../Source/prod.c",line 1867,column 8,is_stmt,isa 0
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1867| 
        ; call occurs [#_ad7738_getraw] ; [] |1867| 
	.dwpsn	file "../Source/prod.c",line 1868,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1868| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1868| 
        ADDL      XAR4,ACC              ; [CPU_] |1868| 
        MOVL      XAR0,#16              ; [CPU_] |1868| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1868| 
        MOVL      XAR0,#16              ; [CPU_] |1868| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1868| 
        ASR64     ACC:P,16              ; [CPU_] |1868| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1868| 
        MOVL      XAR0,#16              ; [CPU_] |1868| 
        ASR64     ACC:P,16              ; [CPU_] |1868| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1868| 
        MOVL      XAR0,#16              ; [CPU_] |1868| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1868| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1868| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1868| 
        MOVL      *-SP[32],P            ; [CPU_] |1868| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1868| 
	.dwpsn	file "../Source/prod.c",line 1862,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1862| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1862| 
        MOVB      ACC,#0                ; [CPU_] |1862| 
        SUBB      ACC,#1                ; [CPU_] |1862| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1862| 
        B         $C$L570,NEQ           ; [CPU_] |1862| 
        ; branchcc occurs ; [] |1862| 
$C$L571:    
	.dwpsn	file "../Source/prod.c",line 1870,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1870| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1870| 
        ; call occurs [#_scia_puts] ; [] |1870| 
	.dwpsn	file "../Source/prod.c",line 1871,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1871| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1871| 
        MOV       *-SP[2],#0            ; [CPU_] |1871| 
        MOV       *-SP[1],#0            ; [CPU_] |1871| 
        MOVL      P,*-SP[32]            ; [CPU_] |1871| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1871| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1871| 
        ; call occurs [#LL$$DIV] ; [] |1871| 
        ADDB      XAR1,#24              ; [CPU_] |1871| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1871| 
	.dwpsn	file "../Source/prod.c",line 1852,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1852| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L572:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1852,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1852| 
        B         $C$L568,GT            ; [CPU_] |1852| 
        ; branchcc occurs ; [] |1852| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1875,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1875| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L574,UNC           ; [CPU_] |1875| 
        ; branch occurs ; [] |1875| 
$C$L573:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1876,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1876| 
        ADDL      XAR1,ACC              ; [CPU_] |1876| 
        MOVB      XAR0,#48              ; [CPU_] |1876| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1876| 
        MOVB      XAR0,#50              ; [CPU_] |1876| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1876| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1876| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1876| 
        ; call occurs [#FS$$SUB] ; [] |1876| 
        MOVL      XAR0,#88              ; [CPU_] |1876| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1876| 
        MOVB      XAR0,#74              ; [CPU_] |1876| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1876| 
        MOVB      XAR0,#72              ; [CPU_] |1876| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1876| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1876| 
        ; call occurs [#L$$TOFS] ; [] |1876| 
        MOVL      XAR0,#88              ; [CPU_] |1876| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1876| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1876| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1876| 
        ; call occurs [#FS$$DIV] ; [] |1876| 
        MOVL      XAR0,#42              ; [CPU_] |1876| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1876| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1876| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1876| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1876| 
        ; call occurs [#FS$$DIV] ; [] |1876| 
        MOVB      XAR0,#96              ; [CPU_] |1876| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1876| 
	.dwpsn	file "../Source/prod.c",line 1880,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1880| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1880| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1880| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1880| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1880| 
        ; call occurs [#FS$$MPY] ; [] |1880| 
        MOVL      XAR0,#88              ; [CPU_] |1880| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1880| 
        MOVB      XAR0,#72              ; [CPU_] |1880| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1880| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1880| 
        ; call occurs [#L$$TOFS] ; [] |1880| 
        MOVL      XAR0,#88              ; [CPU_] |1880| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1880| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1880| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1880| 
        ; call occurs [#FS$$MPY] ; [] |1880| 
        MOVB      XAR0,#48              ; [CPU_] |1880| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1880| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1880| 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1880| 
        ; call occurs [#FS$$SUB] ; [] |1880| 
        MOVB      XAR0,#118             ; [CPU_] |1880| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1880| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1875,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1875| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L574:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1884,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1884| 
        CMP       AL,*-SP[48]           ; [CPU_] |1884| 
        B         $C$L573,GT            ; [CPU_] |1884| 
        ; branchcc occurs ; [] |1884| 
$C$L575:    
	.dwpsn	file "../Source/prod.c",line 1955,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1955| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1955| 
        MOV       AL,#1024              ; [CPU_] |1955| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1955| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1955| 
        ; call occurs [#_scia_getparam] ; [] |1955| 
	.dwpsn	file "../Source/prod.c",line 1958,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1958| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1958| 
        ; call occurs [#_scia_puts] ; [] |1958| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1960,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1960| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |1960| 
$C$L576:    
	.dwpsn	file "../Source/prod.c",line 1961,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1961| 
        B         $C$L578,LEQ           ; [CPU_] |1961| 
        ; branchcc occurs ; [] |1961| 
	.dwpsn	file "../Source/prod.c",line 1963,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1963| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1963| 
        ; call occurs [#_shunt_switch] ; [] |1963| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L577:    
	.dwpsn	file "../Source/prod.c",line 1965,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1965| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_delay_us")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1965| 
        ; call occurs [#_delay_us] ; [] |1965| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1965| 
	.dwpsn	file "../Source/prod.c",line 1964,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1964| 
        MOVZ      AR0,AR6               ; [CPU_] |1964| 
        MOV       *-SP[47],AR6          ; [CPU_] |1964| 
        CMP       AR0,#-1               ; [CPU_] |1964| 
        B         $C$L577,NEQ           ; [CPU_] |1964| 
        ; branchcc occurs ; [] |1964| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1968,column 7,is_stmt,isa 0
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1968| 
        ; call occurs [#_maf_rst] ; [] |1968| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1970,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1970| 
        SPM       #0                    ; [CPU_] 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_delay_us")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1970| 
        ; call occurs [#_delay_us] ; [] |1970| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 1973,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |1973| 
	.dwpsn	file "../Source/prod.c",line 1974,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1974| 
	.dwpsn	file "../Source/prod.c",line 1973,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |1973| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1973| 
	.dwpsn	file "../Source/prod.c",line 1975,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1975| 
	.dwpsn	file "../Source/prod.c",line 1974,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1974| 
	.dwpsn	file "../Source/prod.c",line 1975,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1975| 
        MOVB      ACC,#0                ; [CPU_] |1975| 
        SUBB      ACC,#1                ; [CPU_] |1975| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1975| 
        B         $C$L580,EQ            ; [CPU_] |1975| 
        ; branchcc occurs ; [] |1975| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1976,column 14,is_stmt,isa 0
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1976| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1976| 
        CMPB      AL,#0                 ; [CPU_] |1976| 
        B         $C$L586,EQ            ; [CPU_] |1976| 
        ; branchcc occurs ; [] |1976| 
	.dwpsn	file "../Source/prod.c",line 1980,column 7,is_stmt,isa 0
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1980| 
        ; call occurs [#_ad7738_getraw] ; [] |1980| 
	.dwpsn	file "../Source/prod.c",line 1981,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1981| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1981| 
        ADDL      XAR4,ACC              ; [CPU_] |1981| 
        MOVL      XAR0,#14              ; [CPU_] |1981| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1981| 
        MOVL      XAR0,#14              ; [CPU_] |1981| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1981| 
        ASR64     ACC:P,16              ; [CPU_] |1981| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1981| 
        MOVL      XAR0,#14              ; [CPU_] |1981| 
        ASR64     ACC:P,16              ; [CPU_] |1981| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1981| 
        MOVL      XAR0,#14              ; [CPU_] |1981| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |1981| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1981| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |1981| 
        MOVL      *+XAR3[0],P           ; [CPU_] |1981| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1981| 
	.dwpsn	file "../Source/prod.c",line 1975,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1975| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1975| 
        MOVB      ACC,#0                ; [CPU_] |1975| 
        SUBB      ACC,#1                ; [CPU_] |1975| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1975| 
        B         $C$L579,NEQ           ; [CPU_] |1975| 
        ; branchcc occurs ; [] |1975| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 1983,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1983| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1983| 
        MOV       *-SP[2],#0            ; [CPU_] |1983| 
        MOV       *-SP[1],#0            ; [CPU_] |1983| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |1983| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |1983| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1983| 
        ; call occurs [#LL$$DIV] ; [] |1983| 
	.dwpsn	file "../Source/prod.c",line 1986,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1986| 
        MOVB      XAR0,#46              ; [CPU_] |1986| 
	.dwpsn	file "../Source/prod.c",line 1983,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 1985,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |1985| 
	.dwpsn	file "../Source/prod.c",line 1983,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 1986,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1986| 
        CMPB      AL,#2                 ; [CPU_] |1986| 
        B         $C$L583,LEQ           ; [CPU_] |1986| 
        ; branchcc occurs ; [] |1986| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1987,column 7,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |1987| 
        ; branch occurs ; [] |1987| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 1988,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |1988| 
$C$L582:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1987,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |1987| 
        B         $C$L583,HIS           ; [CPU_] |1987| 
        ; branchcc occurs ; [] |1987| 
        MOVB      AL,#1                 ; [CPU_] |1987| 
        ADD       AL,AR4                ; [CPU_] |1987| 
        MOVZ      AR5,AL                ; [CPU_] |1987| 
        MOV       ACC,AR5 << 1          ; [CPU_] |1987| 
        ADDL      ACC,XAR1              ; [CPU_] |1987| 
        MOVL      XAR6,ACC              ; [CPU_] |1987| 
        MOVB      XAR0,#72              ; [CPU_] |1987| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |1987| 
        MOVL      XAR0,#12              ; [CPU_] |1987| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1987| 
        MOVL      XAR0,#12              ; [CPU_] |1987| 
        ASR64     ACC:P,16              ; [CPU_] |1987| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1987| 
        MOVL      XAR0,#12              ; [CPU_] |1987| 
        ASR64     ACC:P,16              ; [CPU_] |1987| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1987| 
        MOVL      *-SP[4],P             ; [CPU_] |1987| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1987| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1987| 
        MOVL      P,*-SP[32]            ; [CPU_] |1987| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1261, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1987| 
        ; call occurs [#LL$$CMP] ; [] |1987| 
        CMPB      AL,#0                 ; [CPU_] |1987| 
        B         $C$L581,GT            ; [CPU_] |1987| 
        ; branchcc occurs ; [] |1987| 
$C$L583:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1991,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |1991| 
        ADDL      ACC,XAR1              ; [CPU_] |1991| 
        MOVL      XAR4,ACC              ; [CPU_] |1991| 
        MOVL      XAR0,#88              ; [CPU_] |1991| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1991| 
        MOVB      XAR0,#96              ; [CPU_] |1991| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1991| 
        MOVL      XAR0,#42              ; [CPU_] |1991| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1991| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1991| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1991| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1991| 
        ; call occurs [#FS$$MPY] ; [] |1991| 
        MOVL      XAR0,#36              ; [CPU_] |1991| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1991| 
        MOVL      P,*XAR3++             ; [CPU_] |1991| 
        MOVL      ACC,*XAR3++           ; [CPU_] |1991| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1991| 
        ; call occurs [#LL$$TOFS] ; [] |1991| 
        MOVL      XAR0,#36              ; [CPU_] |1991| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1991| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1991| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1991| 
        ; call occurs [#FS$$MPY] ; [] |1991| 
        MOVL      XAR0,#88              ; [CPU_] |1991| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1991| 
        MOVB      XAR1,#118             ; [CPU_] |1991| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |1991| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1991| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1991| 
        ; call occurs [#FS$$ADD] ; [] |1991| 
        MOVL      XAR0,#38              ; [CPU_] |1991| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1991| 
        MOVL      XAR0,#38              ; [CPU_] |1991| 
        MOVL      *XAR4++,ACC           ; [CPU_] |1991| 
	.dwpsn	file "../Source/prod.c",line 1960,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1960| 
	.dwpsn	file "../Source/prod.c",line 1991,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1991| 
        MOV       AL,*-SP[48]           ; [CPU_] |1991| 
	.dwpsn	file "../Source/prod.c",line 1960,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1960| 
        B         $C$L576,LT            ; [CPU_] |1960| 
        ; branchcc occurs ; [] |1960| 
	.dwpsn	file "../Source/prod.c",line 1995,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1995| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1995| 
        ; call occurs [#_shunt_switch] ; [] |1995| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1997,column 5,is_stmt,isa 0
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1997| 
        ; call occurs [#_maf_rst] ; [] |1997| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2000,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2000| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2000| 
        ; call occurs [#_scia_puts] ; [] |2000| 
	.dwpsn	file "../Source/prod.c",line 2002,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2002| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2002| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2002| 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2002| 
        ; call occurs [#FS$$SUB] ; [] |2002| 
        MOVL      XAR0,#36              ; [CPU_] |2002| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2002| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2002| 
        MOVB      XAR0,#140             ; [CPU_] |2002| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2002| 
	.dwpsn	file "../Source/prod.c",line 2005,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2005| 
        MOV       AL,#0                 ; [CPU_] |2005| 
        MOV       AH,#0                 ; [CPU_] |2005| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2005| 
	.dwpsn	file "../Source/prod.c",line 2006,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2006| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2006| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2006| 
	.dwpsn	file "../Source/prod.c",line 2007,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2007| 
        MOV       AL,#0                 ; [CPU_] |2007| 
        MOV       AH,#0                 ; [CPU_] |2007| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2007| 
	.dwpsn	file "../Source/prod.c",line 2008,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2008| 
        MOV       AL,*-SP[58]           ; [CPU_] |2008| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2008| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2011,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2011| 
        MOVB      AL,#152               ; [CPU_] |2011| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2011| 
        MOV       T,*-SP[57]            ; [CPU_] |2011| 
        MOVL      XAR7,XAR4             ; [CPU_] |2011| 
        MPYU      ACC,T,AL              ; [CPU_] |2011| 
        ADDL      ACC,XAR6              ; [CPU_] |2011| 
        ADDB      ACC,#82               ; [CPU_] |2011| 
        MOVL      XAR5,ACC              ; [CPU_] |2011| 
        MOVL      XAR0,#42              ; [CPU_] |2011| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2011| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2011| 
        MOV       AL,*-SP[57]           ; [CPU_] |2011| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2014,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2014| 
	.dwpsn	file "../Source/prod.c",line 2016,column 5,is_stmt,isa 0
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2016| 
        ; call occurs [#_ad7738_setcal] ; [] |2016| 
        MOVL      XAR0,#78              ; [CPU_] |2016| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2016| 
	.dwpsn	file "../Source/prod.c",line 2017,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2017| 
        MOVL      XAR1,ACC              ; [CPU_] |2017| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2017| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2017| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2017| 
	.dwpsn	file "../Source/prod.c",line 2018,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2018| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2018| 
        ; call occurs [#_ad7738_resetvall] ; [] |2018| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2021,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2021| 
        MOV       AL,*-SP[60]           ; [CPU_] |2021| 
        MOVL      XAR0,#44              ; [CPU_] |2021| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2021| 
        MOV       *-SP[3],AL            ; [CPU_] |2021| 
        MOV       AL,*-SP[59]           ; [CPU_] |2021| 
        MOV       *-SP[4],AL            ; [CPU_] |2021| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2021| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2021| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_sprintf")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2021| 
        ; call occurs [#_sprintf] ; [] |2021| 
        MOVL      XAR4,XAR1             ; [CPU_] |2021| 
	.dwpsn	file "../Source/prod.c",line 2023,column 5,is_stmt,isa 0
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2023| 
        ; call occurs [#_scia_puts] ; [] |2023| 
        MOV       AL,*-SP[57]           ; [CPU_] |2023| 
	.dwpsn	file "../Source/prod.c",line 2024,column 5,is_stmt,isa 0
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2024| 
        ; call occurs [#_print_sensor] ; [] |2024| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2027,column 5,is_stmt,isa 0
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2027| 
        ; call occurs [#_lcd_clear] ; [] |2027| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 2028,column 5,is_stmt,isa 0
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("_update_units")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2028| 
        ; call occurs [#_update_units] ; [] |2028| 
	.dwpsn	file "../Source/prod.c",line 2029,column 5,is_stmt,isa 0
        B         $C$L495,UNC           ; [CPU_] |2029| 
        ; branch occurs ; [] |2029| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 1977,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1977| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("_delay_us")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1977| 
        ; call occurs [#_delay_us] ; [] |1977| 
	.dwpsn	file "../Source/prod.c",line 1976,column 14,is_stmt,isa 0
        B         $C$L579,UNC           ; [CPU_] |1976| 
        ; branch occurs ; [] |1976| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1821,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1821| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1821| 
        ; call occurs [#_scia_puts] ; [] |1821| 
	.dwpsn	file "../Source/prod.c",line 1813,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1813| 
        ; branch occurs ; [] |1813| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1751,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1751| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1751| 
        ; call occurs [#_scia_puts] ; [] |1751| 
	.dwpsn	file "../Source/prod.c",line 1745,column 5,is_stmt,isa 0
        B         $C$L545,UNC           ; [CPU_] |1745| 
        ; branch occurs ; [] |1745| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1666,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1666| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1666| 
        ; call occurs [#_scia_puts] ; [] |1666| 
	.dwpsn	file "../Source/prod.c",line 1656,column 5,is_stmt,isa 0
        B         $C$L533,UNC           ; [CPU_] |1656| 
        ; branch occurs ; [] |1656| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1649,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1649| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1649| 
        ; call occurs [#_scia_puts] ; [] |1649| 
	.dwpsn	file "../Source/prod.c",line 1641,column 5,is_stmt,isa 0
        B         $C$L532,UNC           ; [CPU_] |1641| 
        ; branch occurs ; [] |1641| 
$C$L591:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1363,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1363| 
        B         $C$L625,LO            ; [CPU_] |1363| 
        ; branchcc occurs ; [] |1363| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.4.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L625,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1367,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1367| 
        CMPB      AL,#67                ; [CPU_] |1367| 
        B         $C$L592,EQ            ; [CPU_] |1367| 
        ; branchcc occurs ; [] |1367| 
        CMPB      AL,#68                ; [CPU_] |1367| 
        B         $C$L625,NEQ           ; [CPU_] |1367| 
        ; branchcc occurs ; [] |1367| 
$C$L592:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1372,column 5,is_stmt,isa 0
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_atoi")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1372| 
        ; call occurs [#_atoi] ; [] |1372| 
        MOV       *-SP[58],AL           ; [CPU_] |1372| 
	.dwpsn	file "../Source/prod.c",line 1374,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1374| 
        CMPB      AL,#4                 ; [CPU_] |1374| 
        B         $C$L625,HIS           ; [CPU_] |1374| 
        ; branchcc occurs ; [] |1374| 
	.dwpsn	file "../Source/prod.c",line 1379,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1379| 
        MOV       AH,#0                 ; [CPU_] |1379| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1379| 
	.dwpsn	file "../Source/prod.c",line 1380,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1380| 
        MOV       AH,#0                 ; [CPU_] |1380| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1380| 
        MOV       AL,*-SP[59]           ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1381,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1381| 
        B         $C$L596,LOS           ; [CPU_] |1381| 
        ; branchcc occurs ; [] |1381| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1381,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1381| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L593:    
	.dwpsn	file "../Source/prod.c",line 1382,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1382| 
        CMPB      AL,#88                ; [CPU_] |1382| 
        B         $C$L594,NEQ           ; [CPU_] |1382| 
        ; branchcc occurs ; [] |1382| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_strtod")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1384,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1384| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1387,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1387| 
        B         $C$L595,NEQ           ; [CPU_] |1387| 
        ; branchcc occurs ; [] |1387| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.4.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("_strtod")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1389,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1389| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1381,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1381| 
        MOV       AL,*-SP[59]           ; [CPU_] |1381| 
        ADDB      XAR1,#1               ; [CPU_] |1381| 
        CMP       AL,*-SP[47]           ; [CPU_] |1381| 
        B         $C$L593,HI            ; [CPU_] |1381| 
        ; branchcc occurs ; [] |1381| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1394,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1394| 
	.dwpsn	file "../Source/prod.c",line 1377,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1377| 
	.dwpsn	file "../Source/prod.c",line 1394,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1394| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1394| 
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1394| 
        ; call occurs [#FS$$CMP] ; [] |1394| 
        CMPB      AL,#0                 ; [CPU_] |1394| 
        B         $C$L625,EQ            ; [CPU_] |1394| 
        ; branchcc occurs ; [] |1394| 
	.dwpsn	file "../Source/prod.c",line 1398,column 5,is_stmt,isa 0
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1398| 
        ; call occurs [#_lcd_clear] ; [] |1398| 
	.dwpsn	file "../Source/prod.c",line 1399,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1399| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1399| 
        MOVL      XAR0,#44              ; [CPU_] |1399| 
        ADD       AL,*-SP[58]           ; [CPU_] |1399| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1399| 
        MOVZ      AR1,AL                ; [CPU_] |1399| 
        MOV       *-SP[59],AL           ; [CPU_] |1399| 
        MOV       *-SP[3],AL            ; [CPU_] |1399| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1399| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_sprintf")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1399| 
        ; call occurs [#_sprintf] ; [] |1399| 
        MOVL      XAR0,#44              ; [CPU_] |1399| 
	.dwpsn	file "../Source/prod.c",line 1400,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1400| 
	.dwpsn	file "../Source/prod.c",line 1399,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1399| 
	.dwpsn	file "../Source/prod.c",line 1400,column 5,is_stmt,isa 0
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1400| 
        ; call occurs [#_lcd_puts] ; [] |1400| 
	.dwpsn	file "../Source/prod.c",line 1401,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1401| 
        MOVL      XAR0,#44              ; [CPU_] |1401| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1401| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1401| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1401| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1401| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_sprintf")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1401| 
        ; call occurs [#_sprintf] ; [] |1401| 
        MOVL      XAR0,#44              ; [CPU_] |1401| 
	.dwpsn	file "../Source/prod.c",line 1402,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1402| 
	.dwpsn	file "../Source/prod.c",line 1401,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1401| 
	.dwpsn	file "../Source/prod.c",line 1402,column 5,is_stmt,isa 0
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1402| 
        ; call occurs [#_lcd_puts] ; [] |1402| 
	.dwpsn	file "../Source/prod.c",line 1403,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1403| 
        MOVL      XAR0,#44              ; [CPU_] |1403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1403| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1403| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_sprintf")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1403| 
        ; call occurs [#_sprintf] ; [] |1403| 
        MOVL      XAR0,#44              ; [CPU_] |1403| 
	.dwpsn	file "../Source/prod.c",line 1404,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1404| 
	.dwpsn	file "../Source/prod.c",line 1403,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1403| 
	.dwpsn	file "../Source/prod.c",line 1404,column 5,is_stmt,isa 0
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1404| 
        ; call occurs [#_lcd_puts] ; [] |1404| 
	.dwpsn	file "../Source/prod.c",line 1406,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1406| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1406| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1406| 
        MOVL      XAR0,#38              ; [CPU_] |1406| 
        ADDB      ACC,#1                ; [CPU_] |1406| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1406| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1406| 
        CMPB      AL,#67                ; [CPU_] |1406| 
        B         $C$L619,EQ            ; [CPU_] |1406| 
        ; branchcc occurs ; [] |1406| 
        CMPB      AL,#68                ; [CPU_] |1406| 
        B         $C$L625,NEQ           ; [CPU_] |1406| 
        ; branchcc occurs ; [] |1406| 
	.dwpsn	file "../Source/prod.c",line 1459,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1459| 
        MOV       AH,#16672             ; [CPU_] |1459| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1459| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1459| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1459| 
        ; call occurs [#FS$$CMP] ; [] |1459| 
        CMPB      AL,#0                 ; [CPU_] |1459| 
        B         $C$L618,GT            ; [CPU_] |1459| 
        ; branchcc occurs ; [] |1459| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1459| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1459| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1459| 
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1459| 
        ; call occurs [#FS$$CMP] ; [] |1459| 
        CMPB      AL,#0                 ; [CPU_] |1459| 
        B         $C$L618,LT            ; [CPU_] |1459| 
        ; branchcc occurs ; [] |1459| 
        MOV       AL,#0                 ; [CPU_] |1459| 
        MOV       AH,#16672             ; [CPU_] |1459| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1459| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1459| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1459| 
        ; call occurs [#FS$$CMP] ; [] |1459| 
        CMPB      AL,#0                 ; [CPU_] |1459| 
        B         $C$L618,GT            ; [CPU_] |1459| 
        ; branchcc occurs ; [] |1459| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1459| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1459| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1459| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1459| 
        ; call occurs [#FS$$CMP] ; [] |1459| 
        CMPB      AL,#0                 ; [CPU_] |1459| 
        B         $C$L618,LT            ; [CPU_] |1459| 
        ; branchcc occurs ; [] |1459| 
	.dwpsn	file "../Source/prod.c",line 1467,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1467| 
        MOVB      AL,#0                 ; [CPU_] |1467| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1467| 
        ; call occurs [#_lcd_puts] ; [] |1467| 
	.dwpsn	file "../Source/prod.c",line 1469,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1469| 
        MOVL      XAR0,#44              ; [CPU_] |1469| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1469| 
        MOV       *-SP[3],AR1           ; [CPU_] |1469| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1469| 
        MOVL      XAR4,XAR1             ; [CPU_] |1469| 
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_sprintf")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1469| 
        ; call occurs [#_sprintf] ; [] |1469| 
        MOVL      XAR4,XAR1             ; [CPU_] |1469| 
	.dwpsn	file "../Source/prod.c",line 1472,column 6,is_stmt,isa 0
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1472| 
        ; call occurs [#_scia_puts] ; [] |1472| 
	.dwpsn	file "../Source/prod.c",line 1473,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1473| 
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1473| 
        ; call occurs [#_scia_puts] ; [] |1473| 
	.dwpsn	file "../Source/prod.c",line 1474,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1474| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1474| 
        ; call occurs [#_dac_setmode] ; [] |1474| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L597:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1477,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1477| 
	.dwpsn	file "../Source/prod.c",line 1478,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1478| 
        MOV       AH,#0                 ; [CPU_] |1478| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1478| 
        MOVL      ACC,XAR1              ; [CPU_] |1478| 
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1478| 
        ; call occurs [#FS$$CMP] ; [] |1478| 
        CMPB      AL,#0                 ; [CPU_] |1478| 
        B         $C$L598,GEQ           ; [CPU_] |1478| 
        ; branchcc occurs ; [] |1478| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1478| 
        MOVL      XAR0,#88              ; [CPU_] |1478| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1478| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1478| 
        B         $C$L599,UNC           ; [CPU_] |1478| 
        ; branch occurs ; [] |1478| 
$C$L598:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1478| 
        MOVL      XAR0,#88              ; [CPU_] |1478| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1478| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1478| 
$C$L599:    
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1478| 
        ; call occurs [#FS$$MPY] ; [] |1478| 
        MOVL      XAR0,#88              ; [CPU_] |1478| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1478| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1478| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1478| 
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1478| 
        ; call occurs [#FS$$ADD] ; [] |1478| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1478| 
        ; call occurs [#FS$$TOLL] ; [] |1478| 
	.dwpsn	file "../Source/prod.c",line 1484,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1484| 
	.dwpsn	file "../Source/prod.c",line 1478,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1478| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1478| 
	.dwpsn	file "../Source/prod.c",line 1484,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1484| 
        CMP64     ACC:P                 ; [CPU_] |1484| 
        B         $C$L601,LEQ           ; [CPU_] |1484| 
        ; branchcc occurs ; [] |1484| 
	.dwpsn	file "../Source/prod.c",line 1486,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1486| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1486| 
        MOV       *-SP[2],#0            ; [CPU_] |1486| 
        MOV       *-SP[1],#0            ; [CPU_] |1486| 
        MOVL      P,*-SP[32]            ; [CPU_] |1486| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1486| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1307, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1486| 
        ; call occurs [#LL$$CMP] ; [] |1486| 
        CMPB      AL,#0                 ; [CPU_] |1486| 
        B         $C$L600,GEQ           ; [CPU_] |1486| 
        ; branchcc occurs ; [] |1486| 
	.dwpsn	file "../Source/prod.c",line 1489,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1489| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1489| 
        MOV       AL,*-SP[32]           ; [CPU_] |1489| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1489| 
        B         $C$L602,UNC           ; [CPU_] |1489| 
        ; branch occurs ; [] |1489| 
$C$L600:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1487,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1487| 
	.dwpsn	file "../Source/prod.c",line 1488,column 7,is_stmt,isa 0
        B         $C$L602,UNC           ; [CPU_] |1488| 
        ; branch occurs ; [] |1488| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1485,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1485| 
$C$L602:    
	.dwpsn	file "../Source/prod.c",line 1492,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1492| 
        MOVL      XAR0,#44              ; [CPU_] |1492| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1492| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1492| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1492| 
        MOVL      XAR4,XAR1             ; [CPU_] |1492| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_sprintf")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1492| 
        ; call occurs [#_sprintf] ; [] |1492| 
        MOVL      XAR4,XAR1             ; [CPU_] |1492| 
	.dwpsn	file "../Source/prod.c",line 1493,column 7,is_stmt,isa 0
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1493| 
        ; call occurs [#_scia_puts] ; [] |1493| 
	.dwpsn	file "../Source/prod.c",line 1494,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1494| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1494| 
$C$L603:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1497,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1497| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1497| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1497| 
        ; call occurs [#_mcbsp_xmit] ; [] |1497| 
	.dwpsn	file "../Source/prod.c",line 1498,column 8,is_stmt,isa 0
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1498| 
        ; call occurs [#_latch_dac] ; [] |1498| 
	.dwpsn	file "../Source/prod.c",line 1501,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1501| 
        MOVL      XAR4,XAR1             ; [CPU_] |1501| 
        MOVL      XAR5,XAR1             ; [CPU_] |1501| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1501| 
        ; call occurs [#_scia_getparam] ; [] |1501| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1503,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1503| 
        CMPB      AL,#45                ; [CPU_] |1503| 
        B         $C$L604,EQ            ; [CPU_] |1503| 
        ; branchcc occurs ; [] |1503| 
        CMPB      AL,#83                ; [CPU_] |1503| 
        B         $C$L609,EQ            ; [CPU_] |1503| 
        ; branchcc occurs ; [] |1503| 
$C$L604:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1510,column 8,is_stmt,isa 0
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("_atoi")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1510| 
        ; call occurs [#_atoi] ; [] |1510| 
        CMPB      AL,#0                 ; [CPU_] |1510| 
	.dwpsn	file "../Source/prod.c",line 1512,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1512| 
	.dwpsn	file "../Source/prod.c",line 1515,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1515| 
        CMPB      AH,#43                ; [CPU_] |1515| 
        B         $C$L605,EQ            ; [CPU_] |1515| 
        ; branchcc occurs ; [] |1515| 
	.dwpsn	file "../Source/prod.c",line 1522,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1522| 
        B         $C$L608,NEQ           ; [CPU_] |1522| 
        ; branchcc occurs ; [] |1522| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1524,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1524| 
        B         $C$L606,HI            ; [CPU_] |1524| 
        ; branchcc occurs ; [] |1524| 
	.dwpsn	file "../Source/prod.c",line 1525,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1525| 
	.dwpsn	file "../Source/prod.c",line 1526,column 9,is_stmt,isa 0
        B         $C$L608,UNC           ; [CPU_] |1526| 
        ; branch occurs ; [] |1526| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1517,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1517| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1517| 
        MOV       AH,#65535             ; [CPU_] |1517| 
        SUB       AH,AL                 ; [CPU_] |1517| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1517| 
        B         $C$L607,HIS           ; [CPU_] |1517| 
        ; branchcc occurs ; [] |1517| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1520,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1520| 
        B         $C$L608,UNC           ; [CPU_] |1520| 
        ; branch occurs ; [] |1520| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1518,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1518| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1496,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1496| 
        B         $C$L603,NEQ           ; [CPU_] |1496| 
        ; branchcc occurs ; [] |1496| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1532,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1532| 
        MOVL      XAR0,#86              ; [CPU_] |1532| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1532| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1532| 
        MOVL      XAR0,#86              ; [CPU_] |1532| 
        MOV       AL,*XAR7              ; [CPU_] |1532| 
        MOV       *-SP[3],AL            ; [CPU_] |1532| 
        ADDB      XAR7,#1               ; [CPU_] |1532| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1532| 
        MOVL      XAR0,#44              ; [CPU_] |1532| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1532| 
        MOVL      XAR4,XAR1             ; [CPU_] |1532| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("_sprintf")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1532| 
        ; call occurs [#_sprintf] ; [] |1532| 
        MOVL      XAR4,XAR1             ; [CPU_] |1532| 
	.dwpsn	file "../Source/prod.c",line 1533,column 7,is_stmt,isa 0
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1533| 
        ; call occurs [#_scia_puts] ; [] |1533| 
	.dwpsn	file "../Source/prod.c",line 1476,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1476| 
	.dwpsn	file "../Source/prod.c",line 1533,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1533| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1533| 
	.dwpsn	file "../Source/prod.c",line 1476,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1476| 
        SUBB      XAR6,#1               ; [CPU_U] |1476| 
        ADDB      ACC,#2                ; [CPU_] |1476| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1476| 
        MOVZ      AR0,AR6               ; [CPU_] |1476| 
        MOV       *-SP[47],AR6          ; [CPU_] |1476| 
        CMP       AR0,#-1               ; [CPU_] |1476| 
        B         $C$L597,NEQ           ; [CPU_] |1476| 
        ; branchcc occurs ; [] |1476| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1536,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1536| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1536| 
        ; call occurs [#FS$$TOU] ; [] |1536| 
        MOV       *-SP[33],AL           ; [CPU_] |1536| 
	.dwpsn	file "../Source/prod.c",line 1538,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1538| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1538| 
        ; call occurs [#_scia_puts] ; [] |1538| 
	.dwpsn	file "../Source/prod.c",line 1539,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1539| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1539| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1539| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1539| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1542,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1542| 
        MOV       AH,*-SP[48]           ; [CPU_] |1542| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1542| 
        ; call occurs [#_mcbsp_xmit] ; [] |1542| 
	.dwpsn	file "../Source/prod.c",line 1543,column 7,is_stmt,isa 0
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1543| 
        ; call occurs [#_latch_dac] ; [] |1543| 
        MOVL      XAR0,#86              ; [CPU_] |1543| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1543| 
	.dwpsn	file "../Source/prod.c",line 1546,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1546| 
        MOVL      XAR4,XAR5             ; [CPU_] |1546| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1546| 
        ; call occurs [#_scia_getparam] ; [] |1546| 
	.dwpsn	file "../Source/prod.c",line 1551,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1551| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1551| 
        CMPB      AL,#83                ; [CPU_] |1551| 
        B         $C$L615,EQ            ; [CPU_] |1551| 
        ; branchcc occurs ; [] |1551| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1554,column 7,is_stmt,isa 0
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_atoi")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1554| 
        ; call occurs [#_atoi] ; [] |1554| 
        CMPB      AL,#0                 ; [CPU_] |1554| 
	.dwpsn	file "../Source/prod.c",line 1559,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1559| 
	.dwpsn	file "../Source/prod.c",line 1556,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1556| 
	.dwpsn	file "../Source/prod.c",line 1559,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1559| 
        CMPB      AH,#43                ; [CPU_] |1559| 
        B         $C$L611,EQ            ; [CPU_] |1559| 
        ; branchcc occurs ; [] |1559| 
	.dwpsn	file "../Source/prod.c",line 1566,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1566| 
        B         $C$L614,NEQ           ; [CPU_] |1566| 
        ; branchcc occurs ; [] |1566| 
	.dwpsn	file "../Source/prod.c",line 1568,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1568| 
        B         $C$L612,HI            ; [CPU_] |1568| 
        ; branchcc occurs ; [] |1568| 
	.dwpsn	file "../Source/prod.c",line 1569,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1569| 
	.dwpsn	file "../Source/prod.c",line 1570,column 8,is_stmt,isa 0
        B         $C$L614,UNC           ; [CPU_] |1570| 
        ; branch occurs ; [] |1570| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1561,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1561| 
        SUB       AH,AL                 ; [CPU_] |1561| 
        CMP       AH,*-SP[33]           ; [CPU_] |1561| 
        B         $C$L613,HIS           ; [CPU_] |1561| 
        ; branchcc occurs ; [] |1561| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1564,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1564| 
        B         $C$L614,UNC           ; [CPU_] |1564| 
        ; branch occurs ; [] |1564| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1562,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1562| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1541,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1541| 
        B         $C$L610,NEQ           ; [CPU_] |1541| 
        ; branchcc occurs ; [] |1541| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1576,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1576| 
        MOV       AL,*-SP[33]           ; [CPU_] |1576| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1576| 
        MOV       *-SP[3],AL            ; [CPU_] |1576| 
        MOVL      XAR4,XAR1             ; [CPU_] |1576| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("_sprintf")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1576| 
        ; call occurs [#_sprintf] ; [] |1576| 
        MOVL      XAR4,XAR1             ; [CPU_] |1576| 
	.dwpsn	file "../Source/prod.c",line 1577,column 6,is_stmt,isa 0
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1577| 
        ; call occurs [#_scia_puts] ; [] |1577| 
	.dwpsn	file "../Source/prod.c",line 1580,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1580| 
        MOV       AH,#0                 ; [CPU_] |1580| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1580| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1580| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1580| 
        ; call occurs [#FS$$CMP] ; [] |1580| 
        CMPB      AL,#0                 ; [CPU_] |1580| 
        B         $C$L616,LT            ; [CPU_] |1580| 
        ; branchcc occurs ; [] |1580| 
	.dwpsn	file "../Source/prod.c",line 1586,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1586| 
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1586| 
        ; call occurs [#U$$TOFS] ; [] |1586| 
        MOVL      XAR1,ACC              ; [CPU_] |1586| 
        MOV       AL,*-SP[35]           ; [CPU_] |1586| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1586| 
        ; call occurs [#U$$TOFS] ; [] |1586| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1586| 
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1586| 
        ; call occurs [#FS$$SUB] ; [] |1586| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1586| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1586| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1586| 
        ; call occurs [#FS$$DIV] ; [] |1586| 
        MOVL      XAR0,#88              ; [CPU_] |1586| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1586| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1586| 
	.dwpsn	file "../Source/prod.c",line 1588,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1588| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1588| 
        ; call occurs [#U$$TOFS] ; [] |1588| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1588| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1588| 
        ; call occurs [#FS$$SUB] ; [] |1588| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1588| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1588| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1588| 
        ; call occurs [#FS$$DIV] ; [] |1588| 
        MOVL      XAR0,#88              ; [CPU_] |1588| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1588| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1588| 
        B         $C$L617,UNC           ; [CPU_] |1588| 
        ; branch occurs ; [] |1588| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1581,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1581| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1581| 
        ; call occurs [#U$$TOFS] ; [] |1581| 
        MOVL      XAR1,ACC              ; [CPU_] |1581| 
        MOV       AL,*-SP[35]           ; [CPU_] |1581| 
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1581| 
        ; call occurs [#U$$TOFS] ; [] |1581| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1581| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1581| 
        ; call occurs [#FS$$SUB] ; [] |1581| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1581| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1581| 
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1581| 
        ; call occurs [#FS$$DIV] ; [] |1581| 
        MOVL      XAR0,#88              ; [CPU_] |1581| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1581| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1581| 
	.dwpsn	file "../Source/prod.c",line 1583,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1583| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1583| 
        ; call occurs [#U$$TOFS] ; [] |1583| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1583| 
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1583| 
        ; call occurs [#FS$$SUB] ; [] |1583| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1583| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1583| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1583| 
        ; call occurs [#FS$$DIV] ; [] |1583| 
        MOVL      XAR0,#88              ; [CPU_] |1583| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1583| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1583| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1591,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1591| 
	.dwpsn	file "../Source/prod.c",line 1593,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1593| 
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1593| 
        ; call occurs [#_dac_setmode] ; [] |1593| 
	.dwpsn	file "../Source/prod.c",line 1595,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1595| 
        MOVL      XAR0,#88              ; [CPU_] |1595| 
        MOV       AL,*-SP[59]           ; [CPU_] |1595| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1595| 
        MOV       *-SP[3],AL            ; [CPU_] |1595| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1595| 
        MOVL      XAR0,#44              ; [CPU_] |1595| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1595| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1595| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1595| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1595| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1595| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1595| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1595| 
        MOVL      XAR4,XAR1             ; [CPU_] |1595| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("_sprintf")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1595| 
        ; call occurs [#_sprintf] ; [] |1595| 
        MOVL      XAR4,XAR1             ; [CPU_] |1595| 
	.dwpsn	file "../Source/prod.c",line 1599,column 6,is_stmt,isa 0
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1599| 
        ; call occurs [#_scia_puts] ; [] |1599| 
	.dwpsn	file "../Source/prod.c",line 1601,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1601| 
	.dwpsn	file "../Source/prod.c",line 1602,column 6,is_stmt,isa 0
        B         $C$L623,UNC           ; [CPU_] |1602| 
        ; branch occurs ; [] |1602| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1461,column 7,is_stmt,isa 0
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1461| 
        ; call occurs [#_lcd_clear] ; [] |1461| 
	.dwpsn	file "../Source/prod.c",line 1462,column 7,is_stmt,isa 0
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("_update_units")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1462| 
        ; call occurs [#_update_units] ; [] |1462| 
	.dwpsn	file "../Source/prod.c",line 1463,column 7,is_stmt,isa 0
        B         $C$L625,UNC           ; [CPU_] |1463| 
        ; branch occurs ; [] |1463| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1411,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1411| 
        MOVB      AL,#0                 ; [CPU_] |1411| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1411| 
        ; call occurs [#_lcd_puts] ; [] |1411| 
	.dwpsn	file "../Source/prod.c",line 1413,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1413| 
        MOVL      XAR0,#44              ; [CPU_] |1413| 
        MOV       AL,*-SP[59]           ; [CPU_] |1413| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1413| 
        MOV       *-SP[3],AL            ; [CPU_] |1413| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1413| 
        MOVL      XAR4,XAR1             ; [CPU_] |1413| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("_sprintf")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1413| 
        ; call occurs [#_sprintf] ; [] |1413| 
        MOVL      XAR4,XAR1             ; [CPU_] |1413| 
	.dwpsn	file "../Source/prod.c",line 1416,column 6,is_stmt,isa 0
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1416| 
        ; call occurs [#_scia_puts] ; [] |1416| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1429,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1429| 
        MOVL      XAR0,#42              ; [CPU_] |1429| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1429| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1429| 
        MOVL      XAR0,#44              ; [CPU_] |1429| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1429| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1429| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1429| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("_sprintf")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1429| 
        ; call occurs [#_sprintf] ; [] |1429| 
        MOVL      XAR0,#44              ; [CPU_] |1429| 
	.dwpsn	file "../Source/prod.c",line 1432,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1432| 
	.dwpsn	file "../Source/prod.c",line 1429,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1429| 
	.dwpsn	file "../Source/prod.c",line 1432,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1432| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1432| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1432| 
        ; call occurs [#_scia_getparam] ; [] |1432| 
	.dwpsn	file "../Source/prod.c",line 1433,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1433| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1433| 
        ; call occurs [#_scia_puts] ; [] |1433| 
	.dwpsn	file "../Source/prod.c",line 1436,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1436| 
	.dwpsn	file "../Source/prod.c",line 1435,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1435| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1435| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1435| 
	.dwpsn	file "../Source/prod.c",line 1437,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1437| 
	.dwpsn	file "../Source/prod.c",line 1436,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1436| 
	.dwpsn	file "../Source/prod.c",line 1437,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1437| 
        MOVB      ACC,#0                ; [CPU_] |1437| 
        SUBB      ACC,#1                ; [CPU_] |1437| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1437| 
        B         $C$L622,EQ            ; [CPU_] |1437| 
        ; branchcc occurs ; [] |1437| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1438,column 15,is_stmt,isa 0
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1438| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1438| 
        CMPB      AL,#0                 ; [CPU_] |1438| 
        B         $C$L624,EQ            ; [CPU_] |1438| 
        ; branchcc occurs ; [] |1438| 
	.dwpsn	file "../Source/prod.c",line 1441,column 8,is_stmt,isa 0
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1441| 
        ; call occurs [#_ad7738_getraw] ; [] |1441| 
	.dwpsn	file "../Source/prod.c",line 1442,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1442| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1442| 
        ADDL      XAR4,ACC              ; [CPU_] |1442| 
        MOVL      XAR0,#10              ; [CPU_] |1442| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1442| 
        MOVL      XAR0,#10              ; [CPU_] |1442| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1442| 
        ASR64     ACC:P,16              ; [CPU_] |1442| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1442| 
        MOVL      XAR0,#10              ; [CPU_] |1442| 
        ASR64     ACC:P,16              ; [CPU_] |1442| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1442| 
        MOVL      XAR0,#10              ; [CPU_] |1442| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1442| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1442| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1442| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1442| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1442| 
	.dwpsn	file "../Source/prod.c",line 1437,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1437| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1437| 
        MOVB      ACC,#0                ; [CPU_] |1437| 
        SUBB      ACC,#1                ; [CPU_] |1437| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1437| 
        B         $C$L621,NEQ           ; [CPU_] |1437| 
        ; branchcc occurs ; [] |1437| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1445,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1445| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1445| 
        ; call occurs [#_scia_puts] ; [] |1445| 
	.dwpsn	file "../Source/prod.c",line 1428,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1428| 
        MOVL      XAR0,#42              ; [CPU_] |1428| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1428| 
        MOVL      XAR0,#42              ; [CPU_] |1428| 
        SUBB      XAR6,#1               ; [CPU_U] |1428| 
        ADDB      ACC,#2                ; [CPU_] |1428| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1428| 
        MOVZ      AR0,AR6               ; [CPU_] |1428| 
        MOV       *-SP[47],AR6          ; [CPU_] |1428| 
        ADDB      XAR1,#4               ; [CPU_] |1428| 
        CMP       AR0,#-1               ; [CPU_] |1428| 
        B         $C$L620,NEQ           ; [CPU_] |1428| 
        ; branchcc occurs ; [] |1428| 
	.dwpsn	file "../Source/prod.c",line 1448,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1448| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1448| 
        MOVB      AL,#10                ; [CPU_] |1448| 
        MOV       T,*-SP[58]            ; [CPU_] |1448| 
        MPYU      ACC,T,AL              ; [CPU_] |1448| 
        ADDL      ACC,XAR6              ; [CPU_] |1448| 
        MOVL      XAR1,ACC              ; [CPU_] |1448| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1448| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1448| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1448| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1448| 
        ; call occurs [#FS$$SUB] ; [] |1448| 
        MOVL      XAR6,ACC              ; [CPU_] |1448| 
        MOV       AL,#16384             ; [CPU_] |1448| 
        MOV       AH,#17948             ; [CPU_] |1448| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1448| 
        MOVL      ACC,XAR6              ; [CPU_] |1448| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1448| 
        ; call occurs [#FS$$MPY] ; [] |1448| 
        MOVL      XAR0,#88              ; [CPU_] |1448| 
        MOVL      P,*-SP[28]            ; [CPU_] |1448| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1448| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1448| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1448| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1448| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1448| 
        ; call occurs [#LL$$TOFS] ; [] |1448| 
        MOVL      XAR0,#88              ; [CPU_] |1448| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1448| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1448| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1448| 
        ; call occurs [#FS$$DIV] ; [] |1448| 
        MOVB      XAR0,#44              ; [CPU_] |1448| 
	.dwpsn	file "../Source/prod.c",line 1451,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1451| 
	.dwpsn	file "../Source/prod.c",line 1448,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1448| 
	.dwpsn	file "../Source/prod.c",line 1451,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1451| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1451| 
        MOV       AL,*-SP[59]           ; [CPU_] |1451| 
        MOV       *-SP[3],AL            ; [CPU_] |1451| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1451| 
        MOVL      XAR0,#44              ; [CPU_] |1451| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1451| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1451| 
        MOVL      XAR4,XAR1             ; [CPU_] |1451| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_sprintf")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1451| 
        ; call occurs [#_sprintf] ; [] |1451| 
        MOVL      XAR4,XAR1             ; [CPU_] |1451| 
	.dwpsn	file "../Source/prod.c",line 1453,column 6,is_stmt,isa 0
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1453| 
        ; call occurs [#_scia_puts] ; [] |1453| 
	.dwpsn	file "../Source/prod.c",line 1454,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1454| 
$C$L623:    
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1454| 
        ; call occurs [#_scia_puts] ; [] |1454| 
	.dwpsn	file "../Source/prod.c",line 1609,column 5,is_stmt,isa 0
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1609| 
        ; call occurs [#_lcd_clear] ; [] |1609| 
	.dwpsn	file "../Source/prod.c",line 1610,column 5,is_stmt,isa 0
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_update_units")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1610| 
        ; call occurs [#_update_units] ; [] |1610| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1613,column 5,is_stmt,isa 0
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1613| 
        ; call occurs [#_ad7738_setcal] ; [] |1613| 
        MOVL      XAR0,#78              ; [CPU_] |1613| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1613| 
	.dwpsn	file "../Source/prod.c",line 1614,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1614| 
        MOVL      XAR1,ACC              ; [CPU_] |1614| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1614| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1614| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1614| 
	.dwpsn	file "../Source/prod.c",line 1615,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1615| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1615| 
        ; call occurs [#_ad7738_resetvall] ; [] |1615| 
	.dwpsn	file "../Source/prod.c",line 1617,column 5,is_stmt,isa 0
        B         $C$L494,UNC           ; [CPU_] |1617| 
        ; branch occurs ; [] |1617| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1439,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1439| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_delay_us")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1439| 
        ; call occurs [#_delay_us] ; [] |1439| 
	.dwpsn	file "../Source/prod.c",line 1438,column 15,is_stmt,isa 0
        B         $C$L621,UNC           ; [CPU_] |1438| 
        ; branch occurs ; [] |1438| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 3568,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3568| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3568| 
        ; call occurs [#_scia_puts] ; [] |3568| 
        MOVL      XAR0,#86              ; [CPU_] |3568| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3568| 
	.dwpsn	file "../Source/prod.c",line 3569,column 5,is_stmt,isa 0
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3569| 
        ; call occurs [#_scia_puts] ; [] |3569| 
	.dwpsn	file "../Source/prod.c",line 3570,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3570| 
	.dwpsn	file "../Source/prod.c",line 3571,column 5,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |3571| 
        ; branch occurs ; [] |3571| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3529,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3529| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3529| 
        ; call occurs [#_scia_puts] ; [] |3529| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3533,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3533| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_delay_us")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3533| 
        ; call occurs [#_delay_us] ; [] |3533| 
	.dwpsn	file "../Source/prod.c",line 3531,column 17,is_stmt,isa 0
        BANZ      $C$L627,AR3--         ; [CPU_] |3531| 
        ; branchcc occurs ; [] |3531| 
	.dwpsn	file "../Source/prod.c",line 3536,column 5,is_stmt,isa 0
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_reboot")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3536| 
        ; call occurs [#_reboot] ; [] |3536| 
	.dwpsn	file "../Source/prod.c",line 3537,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3537| 
        ; branch occurs ; [] |3537| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3513,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3513| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3513| 
        ; call occurs [#_scia_puts] ; [] |3513| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3517,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3517| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_delay_us")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3517| 
        ; call occurs [#_delay_us] ; [] |3517| 
	.dwpsn	file "../Source/prod.c",line 3515,column 17,is_stmt,isa 0
        BANZ      $C$L629,AR3--         ; [CPU_] |3515| 
        ; branchcc occurs ; [] |3515| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3521| 
	.dwpsn	file "../Source/prod.c",line 3520,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3520| 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3521| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3521| 
	.dwpsn	file "../Source/prod.c",line 3525,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3525| 
        ; branch occurs ; [] |3525| 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3424,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3424| 
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3424| 
        ; call occurs [#_scia_puts] ; [] |3424| 
	.dwpsn	file "../Source/prod.c",line 3426,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3426| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3426| 
        ; call occurs [#_scia_puts] ; [] |3426| 
	.dwpsn	file "../Source/prod.c",line 3427,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3427| 
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3427| 
        ; call occurs [#_scia_puts] ; [] |3427| 
	.dwpsn	file "../Source/prod.c",line 3429,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3429| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3429| 
        ; call occurs [#_scia_puts] ; [] |3429| 
	.dwpsn	file "../Source/prod.c",line 3430,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3430| 
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3431,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3431| 
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3431| 
        ; call occurs [#_scia_puts] ; [] |3431| 
	.dwpsn	file "../Source/prod.c",line 3432,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3432| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3432| 
        ; call occurs [#_scia_puts] ; [] |3432| 
	.dwpsn	file "../Source/prod.c",line 3434,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3434| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3434| 
        ; call occurs [#_scia_puts] ; [] |3434| 
	.dwpsn	file "../Source/prod.c",line 3435,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3435| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3435| 
        ; call occurs [#_scia_puts] ; [] |3435| 
	.dwpsn	file "../Source/prod.c",line 3436,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3436| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3436| 
        ; call occurs [#_scia_puts] ; [] |3436| 
	.dwpsn	file "../Source/prod.c",line 3437,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3437| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3437| 
        ; call occurs [#_scia_puts] ; [] |3437| 
	.dwpsn	file "../Source/prod.c",line 3438,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3438| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3438| 
        ; call occurs [#_scia_puts] ; [] |3438| 
	.dwpsn	file "../Source/prod.c",line 3439,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3439| 
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3439| 
        ; call occurs [#_scia_puts] ; [] |3439| 
	.dwpsn	file "../Source/prod.c",line 3440,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3440| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3440| 
        ; call occurs [#_scia_puts] ; [] |3440| 
	.dwpsn	file "../Source/prod.c",line 3442,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3442| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3442| 
        ; call occurs [#_scia_puts] ; [] |3442| 
	.dwpsn	file "../Source/prod.c",line 3444,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3444| 
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3444| 
        ; call occurs [#_scia_puts] ; [] |3444| 
	.dwpsn	file "../Source/prod.c",line 3446,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3446| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3446| 
        ; call occurs [#_scia_puts] ; [] |3446| 
	.dwpsn	file "../Source/prod.c",line 3448,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3448| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3448| 
        ; call occurs [#_scia_puts] ; [] |3448| 
	.dwpsn	file "../Source/prod.c",line 3449,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3449| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3449| 
        ; call occurs [#_scia_puts] ; [] |3449| 
	.dwpsn	file "../Source/prod.c",line 3450,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3450| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3450| 
        ; call occurs [#_scia_puts] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3451,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3451| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3451| 
        ; call occurs [#_scia_puts] ; [] |3451| 
	.dwpsn	file "../Source/prod.c",line 3453,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3453| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3453| 
        ; call occurs [#_scia_puts] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3454,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3454| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3454| 
        ; call occurs [#_scia_puts] ; [] |3454| 
	.dwpsn	file "../Source/prod.c",line 3455,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3455| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3455| 
        ; call occurs [#_scia_puts] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3456,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3456| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3456| 
        ; call occurs [#_scia_puts] ; [] |3456| 
	.dwpsn	file "../Source/prod.c",line 3457,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3457| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3457| 
        ; call occurs [#_scia_puts] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3459,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3459| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3459| 
        ; call occurs [#_scia_puts] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3460| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3460| 
        ; call occurs [#_scia_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3462,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3462| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3462| 
        ; call occurs [#_scia_puts] ; [] |3462| 
	.dwpsn	file "../Source/prod.c",line 3464,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3464| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3464| 
        ; call occurs [#_scia_puts] ; [] |3464| 
	.dwpsn	file "../Source/prod.c",line 3465,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3465| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3465| 
        ; call occurs [#_scia_puts] ; [] |3465| 
	.dwpsn	file "../Source/prod.c",line 3467,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3467| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3467| 
        ; call occurs [#_scia_puts] ; [] |3467| 
	.dwpsn	file "../Source/prod.c",line 3469,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3469| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3469| 
        ; call occurs [#_scia_puts] ; [] |3469| 
	.dwpsn	file "../Source/prod.c",line 3471,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3471| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3471| 
        ; call occurs [#_scia_puts] ; [] |3471| 
	.dwpsn	file "../Source/prod.c",line 3473,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3473| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3473| 
        ; call occurs [#_scia_puts] ; [] |3473| 
	.dwpsn	file "../Source/prod.c",line 3474,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3474| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3474| 
        ; call occurs [#_scia_puts] ; [] |3474| 
	.dwpsn	file "../Source/prod.c",line 3476,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3476| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3476| 
        ; call occurs [#_scia_puts] ; [] |3476| 
	.dwpsn	file "../Source/prod.c",line 3477,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3477| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3477| 
        ; call occurs [#_scia_puts] ; [] |3477| 
	.dwpsn	file "../Source/prod.c",line 3478,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3478| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3478| 
        ; call occurs [#_scia_puts] ; [] |3478| 
	.dwpsn	file "../Source/prod.c",line 3479,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3479| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3479| 
        ; call occurs [#_scia_puts] ; [] |3479| 
	.dwpsn	file "../Source/prod.c",line 3480,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3480| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3480| 
        ; call occurs [#_scia_puts] ; [] |3480| 
	.dwpsn	file "../Source/prod.c",line 3481,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3481| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3481| 
        ; call occurs [#_scia_puts] ; [] |3481| 
	.dwpsn	file "../Source/prod.c",line 3482,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3482| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3482| 
        ; call occurs [#_scia_puts] ; [] |3482| 
	.dwpsn	file "../Source/prod.c",line 3483,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3483| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3483| 
        ; call occurs [#_scia_puts] ; [] |3483| 
	.dwpsn	file "../Source/prod.c",line 3494,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3494| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3494| 
        ; call occurs [#_scia_puts] ; [] |3494| 
	.dwpsn	file "../Source/prod.c",line 3496,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3496| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3496| 
        ; call occurs [#_scia_puts] ; [] |3496| 
	.dwpsn	file "../Source/prod.c",line 3498,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3498| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3498| 
        ; call occurs [#_scia_puts] ; [] |3498| 
	.dwpsn	file "../Source/prod.c",line 3500,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3500| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3500| 
        ; call occurs [#_scia_puts] ; [] |3500| 
	.dwpsn	file "../Source/prod.c",line 3502,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3502| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3502| 
        ; call occurs [#_scia_puts] ; [] |3502| 
	.dwpsn	file "../Source/prod.c",line 3507,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3507| 
$C$L631:    
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3507| 
        ; call occurs [#_scia_puts] ; [] |3507| 
$C$L632:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3575,column 4,is_stmt,isa 0
        B         $C$L634,EQ            ; [CPU_] |3575| 
        ; branchcc occurs ; [] |3575| 
$C$L633:    
	.dwpsn	file "../Source/prod.c",line 3576,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3576| 
        SPM       #0                    ; [CPU_] 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3576| 
        ; call occurs [#_scia_puts] ; [] |3576| 
$C$L634:    
	.dwpsn	file "../Source/prod.c",line 616,column 3,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |616| 
        MOVB      AL,#161               ; [CPU_] |616| 
        MOVB      AH,#8                 ; [CPU_] |616| 
        SPM       #0                    ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] |616| 
        MOVZ      AR4,AR4               ; [CPU_] |616| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |616| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |616| 
	.dwpsn	file "../Source/prod.c",line 617,column 3,is_stmt,isa 0
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_SPICAN_T0_RTS")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_SPICAN_T0_RTS       ; [CPU_] |617| 
        ; call occurs [#_SPICAN_T0_RTS] ; [] |617| 
	.dwpsn	file "../Source/prod.c",line 621,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |621| 
        TBIT      AL,#4                 ; [CPU_] |621| 
        B         $C$L635,TC            ; [CPU_] |621| 
        ; branchcc occurs ; [] |621| 
	.dwpsn	file "../Source/prod.c",line 623,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |623| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |623| 
        ; call occurs [#_ad7738_resettare] ; [] |623| 
	.dwpsn	file "../Source/prod.c",line 624,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |624| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |624| 
        ; call occurs [#_ad7738_resetpeak] ; [] |624| 
	.dwpsn	file "../Source/prod.c",line 625,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |625| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |625| 
        ; call occurs [#_ad7738_resetvall] ; [] |625| 
$C$L635:    
	.dwpsn	file "../Source/prod.c",line 703,column 3,is_stmt,isa 0
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |703| 
        ; call occurs [#_ad7738_monrdy] ; [] |703| 
        CMPB      AL,#0                 ; [CPU_] |703| 
        B         $C$L661,EQ            ; [CPU_] |703| 
        ; branchcc occurs ; [] |703| 
	.dwpsn	file "../Source/prod.c",line 705,column 4,is_stmt,isa 0
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |705| 
        ; call occurs [#_ad7738_monclr] ; [] |705| 
        MOVL      XAR0,#84              ; [CPU_] |705| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |705| 
	.dwpsn	file "../Source/prod.c",line 708,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |708| 
        CMPB      AL,#3                 ; [CPU_] |708| 
        B         $C$L636,GT            ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
        CMPB      AL,#3                 ; [CPU_] |708| 
        B         $C$L642,EQ            ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
        CMPB      AL,#0                 ; [CPU_] |708| 
        B         $C$L646,EQ            ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
        CMPB      AL,#1                 ; [CPU_] |708| 
        B         $C$L645,EQ            ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
        CMPB      AL,#2                 ; [CPU_] |708| 
        B         $C$L644,EQ            ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
        B         $C$L658,UNC           ; [CPU_] |708| 
        ; branch occurs ; [] |708| 
$C$L636:    
        CMPB      AL,#4                 ; [CPU_] |708| 
        B         $C$L641,EQ            ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
        CMPB      AL,#5                 ; [CPU_] |708| 
        B         $C$L637,EQ            ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
        CMPB      AL,#6                 ; [CPU_] |708| 
        B         $C$L658,NEQ           ; [CPU_] |708| 
        ; branchcc occurs ; [] |708| 
	.dwpsn	file "../Source/prod.c",line 763,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |763| 
        MOVL      XAR0,#46              ; [CPU_] |763| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |763| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |763| 
	.dwpsn	file "../Source/prod.c",line 764,column 5,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |764| 
        ; branch occurs ; [] |764| 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 758,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |758| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |758| 
        ; call occurs [#_ad7738_getlimitst] ; [] |758| 
	.dwpsn	file "../Source/prod.c",line 759,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |759| 
        B         $C$L639,NTC           ; [CPU_] |759| 
        ; branchcc occurs ; [] |759| 
        TBIT      AL,#0                 ; [CPU_] |759| 
        B         $C$L638,NTC           ; [CPU_] |759| 
        ; branchcc occurs ; [] |759| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |759| 
        B         $C$L640,UNC           ; [CPU_] |759| 
        ; branch occurs ; [] |759| 
$C$L638:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |759| 
        B         $C$L640,UNC           ; [CPU_] |759| 
        ; branch occurs ; [] |759| 
$C$L639:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |759| 
$C$L640:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |759| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |759| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |759| 
	.dwpsn	file "../Source/prod.c",line 761,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |761| 
        ; branch occurs ; [] |761| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 730,column 5,is_stmt,isa 0
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |730| 
        ; call occurs [#_ad7738_getmon] ; [] |730| 
        MOVL      XAR0,#84              ; [CPU_] |730| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |730| 
	.dwpsn	file "../Source/prod.c",line 732,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |732| 
        B         $C$L643,UNC           ; [CPU_] |732| 
        ; branch occurs ; [] |732| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 725,column 5,is_stmt,isa 0
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |725| 
        ; call occurs [#_ad7738_getmon] ; [] |725| 
        MOVL      XAR0,#84              ; [CPU_] |725| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |725| 
	.dwpsn	file "../Source/prod.c",line 726,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |726| 
$C$L643:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |726| 
        ADDL      XAR4,ACC              ; [CPU_] |726| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |726| 
	.dwpsn	file "../Source/prod.c",line 727,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |727| 
        ; branch occurs ; [] |727| 
$C$L644:    
	.dwpsn	file "../Source/prod.c",line 720,column 5,is_stmt,isa 0
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |720| 
        ; call occurs [#_ad7738_getvall] ; [] |720| 
	.dwpsn	file "../Source/prod.c",line 722,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |722| 
        ; branch occurs ; [] |722| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 715,column 5,is_stmt,isa 0
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |715| 
        ; call occurs [#_ad7738_getpeak] ; [] |715| 
	.dwpsn	file "../Source/prod.c",line 717,column 5,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |717| 
        ; branch occurs ; [] |717| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 710,column 5,is_stmt,isa 0
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |710| 
        ; call occurs [#_ad7738_getmon] ; [] |710| 
$C$L647:    
        MOVL      XAR0,#84              ; [CPU_] |710| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |710| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 711,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |711| 
        ADDL      XAR4,ACC              ; [CPU_] |711| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |711| 
$C$L648:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |711| 
	.dwpsn	file "../Source/prod.c",line 735,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |735| 
        CMPB      AL,#3                 ; [CPU_] |735| 
        B         $C$L649,GT            ; [CPU_] |735| 
        ; branchcc occurs ; [] |735| 
        CMPB      AL,#3                 ; [CPU_] |735| 
        B         $C$L651,EQ            ; [CPU_] |735| 
        ; branchcc occurs ; [] |735| 
        CMPB      AL,#0                 ; [CPU_] |735| 
        B         $C$L654,EQ            ; [CPU_] |735| 
        ; branchcc occurs ; [] |735| 
        CMPB      AL,#1                 ; [CPU_] |735| 
        B         $C$L653,EQ            ; [CPU_] |735| 
        ; branchcc occurs ; [] |735| 
        CMPB      AL,#2                 ; [CPU_] |735| 
        B         $C$L652,EQ            ; [CPU_] |735| 
        ; branchcc occurs ; [] |735| 
        B         $C$L658,UNC           ; [CPU_] |735| 
        ; branch occurs ; [] |735| 
$C$L649:    
        CMPB      AL,#4                 ; [CPU_] |735| 
        B         $C$L650,EQ            ; [CPU_] |735| 
        ; branchcc occurs ; [] |735| 
        CMPB      AL,#5                 ; [CPU_] |735| 
        B         $C$L658,NEQ           ; [CPU_] |735| 
        ; branchcc occurs ; [] |735| 
	.dwpsn	file "../Source/prod.c",line 752,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |752| 
	.dwpsn	file "../Source/prod.c",line 753,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |753| 
        ; branch occurs ; [] |753| 
$C$L650:    
	.dwpsn	file "../Source/prod.c",line 749,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |749| 
	.dwpsn	file "../Source/prod.c",line 750,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |750| 
        ; branch occurs ; [] |750| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 746,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |746| 
	.dwpsn	file "../Source/prod.c",line 747,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |747| 
        ; branch occurs ; [] |747| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 743,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |743| 
	.dwpsn	file "../Source/prod.c",line 744,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |744| 
        ; branch occurs ; [] |744| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 740,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |740| 
	.dwpsn	file "../Source/prod.c",line 741,column 6,is_stmt,isa 0
        B         $C$L655,UNC           ; [CPU_] |741| 
        ; branch occurs ; [] |741| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 737,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |737| 
$C$L655:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |737| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |737| 
$C$L656:    
        MOVL      *-SP[4],ACC           ; [CPU_] |737| 
$C$L657:    
        MOVL      XAR0,#44              ; [CPU_] |737| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |737| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_sprintf")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |737| 
        ; call occurs [#_sprintf] ; [] |737| 
$C$L658:    
        MOV       T,*-SP[55]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 768,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |768| 
        MPYB      ACC,T,#20             ; [CPU_] |768| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |768| 
        ADDB      AL,#7                 ; [CPU_] |768| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |768| 
        ; call occurs [#_lcd_puts] ; [] |768| 
	.dwpsn	file "../Source/prod.c",line 771,column 4,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |771| 
	.dwpsn	file "../Source/prod.c",line 768,column 4,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |768| 
	.dwpsn	file "../Source/prod.c",line 771,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |771| 
        B         $C$L659,HIS           ; [CPU_] |771| 
        ; branchcc occurs ; [] |771| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |771| 
        B         $C$L660,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L659:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 772,column 5,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |772| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L660:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L661:    
	.dwpsn	file "../Source/prod.c",line 781,column 3,is_stmt,isa 0
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |781| 
        ; call occurs [#_ad7738_tempstart] ; [] |781| 
        CMPB      AL,#0                 ; [CPU_] |781| 
        B         $C$L662,NEQ           ; [CPU_] |781| 
        ; branchcc occurs ; [] |781| 
	.dwpsn	file "../Source/prod.c",line 786,column 8,is_stmt,isa 0
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |786| 
        ; call occurs [#_ad7738_tempread] ; [] |786| 
        CMPB      AL,#0                 ; [CPU_] |786| 
        B         $C$L663,EQ            ; [CPU_] |786| 
        ; branchcc occurs ; [] |786| 
	.dwpsn	file "../Source/prod.c",line 787,column 4,is_stmt,isa 0
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |787| 
        ; call occurs [#_ds1820read] ; [] |787| 
        MOVL      XAR0,#46              ; [CPU_] |787| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |787| 
	.dwpsn	file "../Source/prod.c",line 788,column 4,is_stmt,isa 0
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |788| 
        ; call occurs [#_ad7738_settemp] ; [] |788| 
        B         $C$L663,UNC           ; [CPU_] |788| 
        ; branch occurs ; [] |788| 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 782,column 4,is_stmt,isa 0
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |782| 
        ; call occurs [#_ds1820start] ; [] |782| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 795,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |795| 
        MOVB      XAR0,#36              ; [CPU_] |795| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |795| 
        B         $C$L668,EQ            ; [CPU_] |795| 
        ; branchcc occurs ; [] |795| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |795| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |795| 
        CMPB      AL,#0                 ; [CPU_] |795| 
        B         $C$L668,EQ            ; [CPU_] |795| 
        ; branchcc occurs ; [] |795| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 796,column 4,is_stmt,isa 0
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |796| 
        ; call occurs [#_tagdetect] ; [] |796| 
        CMPB      AL,#0                 ; [CPU_] |796| 
        B         $C$L664,NEQ           ; [CPU_] |796| 
        ; branchcc occurs ; [] |796| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 819,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |819| 
        MOV       *+XAR4[0],#0          ; [CPU_] |819| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |819| 
	.dwpsn	file "../Source/prod.c",line 821,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |821| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |821| 
        MOVL      XAR4,ACC              ; [CPU_] |821| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |821| 
        B         $C$L666,EQ            ; [CPU_] |821| 
        ; branchcc occurs ; [] |821| 
	.dwpsn	file "../Source/prod.c",line 822,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |822| 
	.dwpsn	file "../Source/prod.c",line 823,column 6,is_stmt,isa 0
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |823| 
        ; call occurs [#_lcd_clear] ; [] |823| 
	.dwpsn	file "../Source/prod.c",line 824,column 6,is_stmt,isa 0
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_update_units")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |824| 
        ; call occurs [#_update_units] ; [] |824| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 825,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |825| 
        B         $C$L666,UNC           ; [CPU_] |825| 
        ; branch occurs ; [] |825| 
$C$L664:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 798,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |798| 
        B         $C$L665,NEQ           ; [CPU_] |798| 
        ; branchcc occurs ; [] |798| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 801,column 6,is_stmt,isa 0
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_matchTag")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |801| 
        ; call occurs [#_matchTag] ; [] |801| 
        MOVL      XAR0,#80              ; [CPU_] |801| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |801| 
        MOVL      XAR0,#9               ; [CPU_] |801| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |801| 
	.dwpsn	file "../Source/prod.c",line 802,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |802| 
        B         $C$L665,EQ            ; [CPU_] |802| 
        ; branchcc occurs ; [] |802| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 805,column 7,is_stmt,isa 0
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |805| 
        ; call occurs [#_maf_rst] ; [] |805| 
	.dwpsn	file "../Source/prod.c",line 806,column 7,is_stmt,isa 0
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |806| 
        ; call occurs [#_ad7738_setcal] ; [] |806| 
        MOVL      XAR0,#78              ; [CPU_] |806| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |806| 
	.dwpsn	file "../Source/prod.c",line 807,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |807| 
        MOVL      XAR1,ACC              ; [CPU_] |807| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |807| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |807| 
        ; call occurs [#_ad7738_resetpeak] ; [] |807| 
	.dwpsn	file "../Source/prod.c",line 808,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |808| 
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |808| 
        ; call occurs [#_ad7738_resetvall] ; [] |808| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 811,column 7,is_stmt,isa 0
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |811| 
        ; call occurs [#_lcd_clear] ; [] |811| 
	.dwpsn	file "../Source/prod.c",line 812,column 7,is_stmt,isa 0
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_update_units")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |812| 
        ; call occurs [#_update_units] ; [] |812| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 813,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |813| 
$C$L665:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 816,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |816| 
$C$L666:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 830,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |830| 
        ADDB      AL,#1                 ; [CPU_] |830| 
        MOV       *+FP[AR0],AL          ; [CPU_] |830| 
        CMPB      AL,#4                 ; [CPU_] |830| 
        B         $C$L667,HIS           ; [CPU_] |830| 
        ; branchcc occurs ; [] |830| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |830| 
        ADDB      ACC,#1                ; [CPU_] |830| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |830| 
        B         $C$L668,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L667:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 831,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |831| 
        MOV       *+FP[AR0],#0          ; [CPU_] |831| 
$C$L668:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 839,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |839| 
        CMPB      AL,#1                 ; [CPU_] |839| 
        B         $C$L686,NEQ           ; [CPU_] |839| 
        ; branchcc occurs ; [] |839| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        B         $C$L686,EQ            ; [CPU_] |839| 
        ; branchcc occurs ; [] |839| 
	.dwpsn	file "../Source/prod.c",line 842,column 4,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |842| 
        ; call occurs [#_prod_getavail] ; [] |842| 
        MOVL      XAR6,ACC              ; [CPU_] |842| 
        MOV       T,*-SP[51]            ; [CPU_] |842| 
        MPY       P,T,*-SP[52]          ; [CPU_] |842| 
        MOVU      ACC,PL                ; [CPU_] |842| 
        CMPL      ACC,XAR6              ; [CPU_] |842| 
        B         $C$L671,LOS           ; [CPU_] |842| 
        ; branchcc occurs ; [] |842| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        B         $C$L671,NEQ           ; [CPU_] |842| 
        ; branchcc occurs ; [] |842| 
	.dwpsn	file "../Source/prod.c",line 912,column 11,is_stmt,isa 0
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |912| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |912| 
        CMPB      AL,#0                 ; [CPU_] |912| 
        B         $C$L669,NEQ           ; [CPU_] |912| 
        ; branchcc occurs ; [] |912| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 920,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |920| 
        B         $C$L686,EQ            ; [CPU_] |920| 
        ; branchcc occurs ; [] |920| 
	.dwpsn	file "../Source/prod.c",line 921,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |921| 
	.dwpsn	file "../Source/prod.c",line 924,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |924| 
	.dwpsn	file "../Source/prod.c",line 926,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |926| 
        MOVB      XAR0,#36              ; [CPU_] |926| 
	.dwpsn	file "../Source/prod.c",line 924,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |924| 
	.dwpsn	file "../Source/prod.c",line 925,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |925| 
	.dwpsn	file "../Source/prod.c",line 926,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |926| 
        MOVL      XAR0,#80              ; [CPU_] |926| 
        MOV       *+XAR4[2],AL          ; [CPU_] |926| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |926| 
	.dwpsn	file "../Source/prod.c",line 930,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |930| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 928,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |928| 
	.dwpsn	file "../Source/prod.c",line 930,column 5,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |930| 
        ; branch occurs ; [] |930| 
$C$L669:    
	.dwpsn	file "../Source/prod.c",line 914,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |914| 
        MOV       *+XAR4[0],#0          ; [CPU_] |914| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 916,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |916| 
	.dwpsn	file "../Source/prod.c",line 915,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |915| 
	.dwpsn	file "../Source/prod.c",line 916,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |916| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 917,column 6,is_stmt,isa 0
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |917| 
        ; call occurs [#_ad7738_getlimitst] ; [] |917| 
        MOV       *XAR1++,AL            ; [CPU_] |917| 
	.dwpsn	file "../Source/prod.c",line 916,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |916| 
	.dwpsn	file "../Source/prod.c",line 917,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |917| 
	.dwpsn	file "../Source/prod.c",line 916,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |916| 
        B         $C$L670,LT            ; [CPU_] |916| 
        ; branchcc occurs ; [] |916| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 919,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |919| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 920,column 4,is_stmt,isa 0
        B         $C$L685,UNC           ; [CPU_] |920| 
        ; branch occurs ; [] |920| 
$C$L671:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 849,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |849| 
        MOVL      XAR0,#88              ; [CPU_] |849| 
	.dwpsn	file "../Source/prod.c",line 847,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |847| 
	.dwpsn	file "../Source/prod.c",line 849,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |849| 
        MOV       *+XAR4[0],#0          ; [CPU_] |849| 
	.dwpsn	file "../Source/prod.c",line 855,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |855| 
	.dwpsn	file "../Source/prod.c",line 850,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |850| 
        MOV       AL,*-SP[52]           ; [CPU_] |850| 
	.dwpsn	file "../Source/prod.c",line 851,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |851| 
        MOV       AL,*-SP[59]           ; [CPU_] |851| 
	.dwpsn	file "../Source/prod.c",line 852,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |852| 
        MOV       *+XAR4[3],AL          ; [CPU_] |852| 
        MOV       AL,*-SP[59]           ; [CPU_] |852| 
	.dwpsn	file "../Source/prod.c",line 853,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |853| 
        MOV       *+XAR4[4],AL          ; [CPU_] |853| 
        MOV       AL,*-SP[50]           ; [CPU_] |853| 
	.dwpsn	file "../Source/prod.c",line 854,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |854| 
        MOV       AH,*-SP[49]           ; [CPU_] |854| 
	.dwpsn	file "../Source/prod.c",line 855,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |855| 
        MOV       *+XAR4[6],AL          ; [CPU_] |855| 
        MOV       AL,AH                 ; [CPU_] |855| 
        ADDB      AL,#1                 ; [CPU_] |855| 
	.dwpsn	file "../Source/prod.c",line 846,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |846| 
	.dwpsn	file "../Source/prod.c",line 855,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |855| 
	.dwpsn	file "../Source/prod.c",line 857,column 5,is_stmt,isa 0
        B         $C$L682,UNC           ; [CPU_] |857| 
        ; branch occurs ; [] |857| 
$C$L672:    
	.dwpsn	file "../Source/prod.c",line 858,column 6,is_stmt,isa 0
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |858| 
        ; call occurs [#_prod_getnext] ; [] |858| 
	.dwpsn	file "../Source/prod.c",line 860,column 7,is_stmt,isa 0
        DEC       *-SP[59]              ; [CPU_] |860| 
        B         $C$L682,NEQ           ; [CPU_] |860| 
        ; branchcc occurs ; [] |860| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 862,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |862| 
	.dwpsn	file "../Source/prod.c",line 866,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |866| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 865,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |865| 
        MOV       *-SP[58],AL           ; [CPU_] |865| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 867,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |867| 
        B         $C$L675,EQ            ; [CPU_] |867| 
        ; branchcc occurs ; [] |867| 
	.dwpsn	file "../Source/prod.c",line 868,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |868| 
        MOVL      XAR0,#88              ; [CPU_] |868| 
        ADDL      ACC,XAR4              ; [CPU_] |868| 
        MOVL      XAR3,ACC              ; [CPU_] |868| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |868| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 871,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |871| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 869,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |869| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 870,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |870| 
        ANDB      AL,#0xff              ; [CPU_] |870| 
        MOV       *XAR5++,AL            ; [CPU_] |870| 
	.dwpsn	file "../Source/prod.c",line 871,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |871| 
        LSR       AL,8                  ; [CPU_] |871| 
        MOV       *XAR5++,AL            ; [CPU_] |871| 
	.dwpsn	file "../Source/prod.c",line 869,column 21,is_stmt,isa 0
        BANZ      $C$L674,AR0--         ; [CPU_] |869| 
        ; branchcc occurs ; [] |869| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 866,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |866| 
        ADDB      XAR7,#1               ; [CPU_] |866| 
	.dwpsn	file "../Source/prod.c",line 875,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |875| 
        MOV       *-SP[58],AL           ; [CPU_] |875| 
	.dwpsn	file "../Source/prod.c",line 866,column 18,is_stmt,isa 0
        BANZ      $C$L673,AR6--         ; [CPU_] |866| 
        ; branchcc occurs ; [] |866| 
	.dwpsn	file "../Source/prod.c",line 878,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |878| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 879,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |879| 
        B         $C$L678,EQ            ; [CPU_] |879| 
        ; branchcc occurs ; [] |879| 
	.dwpsn	file "../Source/prod.c",line 880,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |880| 
        MOVL      XAR0,#88              ; [CPU_] |880| 
        ADDL      ACC,XAR4              ; [CPU_] |880| 
        ADDB      ACC,#8                ; [CPU_] |880| 
        MOVL      XAR3,ACC              ; [CPU_] |880| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |880| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 883,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |883| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 881,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |881| 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 882,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |882| 
        ANDB      AL,#0xff              ; [CPU_] |882| 
        MOV       *XAR5++,AL            ; [CPU_] |882| 
	.dwpsn	file "../Source/prod.c",line 883,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |883| 
        LSR       AL,8                  ; [CPU_] |883| 
        MOV       *XAR5++,AL            ; [CPU_] |883| 
	.dwpsn	file "../Source/prod.c",line 881,column 21,is_stmt,isa 0
        BANZ      $C$L677,AR0--         ; [CPU_] |881| 
        ; branchcc occurs ; [] |881| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 878,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |878| 
        ADDB      XAR7,#1               ; [CPU_] |878| 
	.dwpsn	file "../Source/prod.c",line 887,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |887| 
        MOV       *-SP[58],AL           ; [CPU_] |887| 
	.dwpsn	file "../Source/prod.c",line 878,column 18,is_stmt,isa 0
        BANZ      $C$L676,AR6--         ; [CPU_] |878| 
        ; branchcc occurs ; [] |878| 
	.dwpsn	file "../Source/prod.c",line 863,column 6,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |863| 
	.dwpsn	file "../Source/prod.c",line 890,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |890| 
        SETC      SXM                   ; [CPU_] 
$C$L679:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 891,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |891| 
        B         $C$L681,EQ            ; [CPU_] |891| 
        ; branchcc occurs ; [] |891| 
	.dwpsn	file "../Source/prod.c",line 892,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |892| 
        MOVL      XAR0,#88              ; [CPU_] |892| 
        ADDL      ACC,XAR4              ; [CPU_] |892| 
        ADDB      ACC,#12               ; [CPU_] |892| 
        MOVL      XAR6,ACC              ; [CPU_] |892| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |892| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 895,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |895| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 893,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |893| 
$C$L680:    
	.dwpsn	file "../Source/prod.c",line 894,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |894| 
        ANDB      AL,#0xff              ; [CPU_] |894| 
        MOV       *XAR5++,AL            ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 895,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |895| 
        LSR       AL,8                  ; [CPU_] |895| 
        MOV       *XAR5++,AL            ; [CPU_] |895| 
	.dwpsn	file "../Source/prod.c",line 893,column 21,is_stmt,isa 0
        BANZ      $C$L680,AR0--         ; [CPU_] |893| 
        ; branchcc occurs ; [] |893| 
$C$L681:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 890,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |890| 
	.dwpsn	file "../Source/prod.c",line 899,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |899| 
        MOV       *-SP[58],AL           ; [CPU_] |899| 
	.dwpsn	file "../Source/prod.c",line 890,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |890| 
        CMPB      AL,#2                 ; [CPU_] |890| 
        B         $C$L679,LT            ; [CPU_] |890| 
        ; branchcc occurs ; [] |890| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 857,column 12,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |857| 
        ; call occurs [#_prod_getavail] ; [] |857| 
        TEST      ACC                   ; [CPU_] |857| 
        B         $C$L683,EQ            ; [CPU_] |857| 
        ; branchcc occurs ; [] |857| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[47]           ; [CPU_] |857| 
        B         $C$L672,HI            ; [CPU_] |857| 
        ; branchcc occurs ; [] |857| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |903| 
        MOV       AL,*-SP[47]           ; [CPU_] |903| 
        MOV       *+XAR4[2],AL          ; [CPU_] |903| 
        MOV       AL,*-SP[53]           ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 905,column 5,is_stmt,isa 0
        B         $C$L684,EQ            ; [CPU_] |905| 
        ; branchcc occurs ; [] |905| 
	.dwpsn	file "../Source/prod.c",line 906,column 6,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |906| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 909,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |909| 
$C$L685:    
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |909| 
        ; call occurs [#_scia_send_bin] ; [] |909| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 944,column 4,is_stmt,isa 0
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |944| 
        ; call occurs [#_scia_rx_getcmds] ; [] |944| 
        CMPB      AL,#0                 ; [CPU_] |944| 
        B         $C$L634,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 950,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |950| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |950| 
        ; call occurs [#_scia_rx_getcmd] ; [] |950| 
        MOV       *-SP[59],AL           ; [CPU_] |950| 
        CMPB      AL,#0                 ; [CPU_] |950| 
        B         $C$L634,EQ            ; [CPU_] |950| 
        ; branchcc occurs ; [] |950| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 967,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |967| 
        B         $C$L322,EQ            ; [CPU_] |967| 
        ; branchcc occurs ; [] |967| 
	.dwpsn	file "../Source/prod.c",line 3580,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3580| 
        B         $C$L634,NEQ           ; [CPU_] |3580| 
        ; branchcc occurs ; [] |3580| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3580| 
        B         $C$L634,LO            ; [CPU_] |3580| 
        ; branchcc occurs ; [] |3580| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3614,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3614| 
	.dwpsn	file "../Source/prod.c",line 3607,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3607| 
	.dwpsn	file "../Source/prod.c",line 3603,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3603| 
	.dwpsn	file "../Source/prod.c",line 3607,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3607| 
	.dwpsn	file "../Source/prod.c",line 3606,column 4,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |3606| 
	.dwpsn	file "../Source/prod.c",line 3614,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3614| 
	.dwpsn	file "../Source/prod.c",line 3607,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3607| 
	.dwpsn	file "../Source/prod.c",line 3614,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3614| 
        CMPB      AL,#146               ; [CPU_] |3614| 
        B         $C$L694,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#146               ; [CPU_] |3614| 
        B         $C$L231,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#54                ; [CPU_] |3614| 
        B         $C$L690,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#54                ; [CPU_] |3614| 
        B         $C$L725,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#36                ; [CPU_] |3614| 
        B         $C$L688,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#36                ; [CPU_] |3614| 
        B         $C$L287,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#33                ; [CPU_] |3614| 
        B         $C$L687,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#33                ; [CPU_] |3614| 
        B         $C$L302,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#16                ; [CPU_] |3614| 
        B         $C$L741,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        MOV       AH,AL                 ; [CPU_] |3614| 
        ADDB      AH,#-17               ; [CPU_] |3614| 
        CMPB      AH,#1                 ; [CPU_] |3614| 
        B         $C$L740,LOS           ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#32                ; [CPU_] |3614| 
        B         $C$L736,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L687:    
        CMPB      AL,#34                ; [CPU_] |3614| 
        B         $C$L298,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#35                ; [CPU_] |3614| 
        B         $C$L295,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L688:    
        CMPB      AL,#51                ; [CPU_] |3614| 
        B         $C$L689,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#51                ; [CPU_] |3614| 
        B         $C$L730,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#48                ; [CPU_] |3614| 
        B         $C$L281,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#49                ; [CPU_] |3614| 
        B         $C$L256,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#50                ; [CPU_] |3614| 
        B         $C$L732,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L689:    
        CMPB      AL,#52                ; [CPU_] |3614| 
        B         $C$L728,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#53                ; [CPU_] |3614| 
        B         $C$L727,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L690:    
        CMPB      AL,#71                ; [CPU_] |3614| 
        B         $C$L692,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#71                ; [CPU_] |3614| 
        B         $C$L252,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#68                ; [CPU_] |3614| 
        B         $C$L691,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#65                ; [CPU_] |3614| 
        B         $C$L710,GEQ           ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#55                ; [CPU_] |3614| 
        B         $C$L718,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#56                ; [CPU_] |3614| 
        B         $C$L714,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#57                ; [CPU_] |3614| 
        B         $C$L712,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L691:    
        CMPB      AL,#69                ; [CPU_] |3614| 
        B         $C$L709,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#70                ; [CPU_] |3614| 
        B         $C$L702,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L692:    
        CMPB      AL,#132               ; [CPU_] |3614| 
        B         $C$L693,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#132               ; [CPU_] |3614| 
        B         $C$L310,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#72                ; [CPU_] |3614| 
        B         $C$L245,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#130               ; [CPU_] |3614| 
        B         $C$L240,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#131               ; [CPU_] |3614| 
        B         $C$L311,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L693:    
        CMPB      AL,#144               ; [CPU_] |3614| 
        B         $C$L236,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#145               ; [CPU_] |3614| 
        B         $C$L235,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L694:    
        CMPB      AL,#169               ; [CPU_] |3614| 
        B         $C$L698,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#169               ; [CPU_] |3614| 
        B         $C$L168,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#161               ; [CPU_] |3614| 
        B         $C$L696,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#161               ; [CPU_] |3614| 
        B         $C$L194,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#150               ; [CPU_] |3614| 
        B         $C$L695,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#150               ; [CPU_] |3614| 
        B         $C$L224,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#147               ; [CPU_] |3614| 
        B         $C$L230,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#148               ; [CPU_] |3614| 
        B         $C$L229,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#149               ; [CPU_] |3614| 
        B         $C$L228,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L695:    
        CMPB      AL,#153               ; [CPU_] |3614| 
        B         $C$L215,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#160               ; [CPU_] |3614| 
        B         $C$L210,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L696:    
        CMPB      AL,#166               ; [CPU_] |3614| 
        B         $C$L697,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#166               ; [CPU_] |3614| 
        B         $C$L182,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#162               ; [CPU_] |3614| 
        B         $C$L189,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#163               ; [CPU_] |3614| 
        B         $C$L185,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#165               ; [CPU_] |3614| 
        B         $C$L184,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L697:    
        CMPB      AL,#167               ; [CPU_] |3614| 
        B         $C$L179,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#168               ; [CPU_] |3614| 
        B         $C$L177,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L698:    
        CMPB      AL,#195               ; [CPU_] |3614| 
        B         $C$L700,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#195               ; [CPU_] |3614| 
        B         $C$L143,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#192               ; [CPU_] |3614| 
        B         $C$L699,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#192               ; [CPU_] |3614| 
        B         $C$L160,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#170               ; [CPU_] |3614| 
        B         $C$L164,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#186               ; [CPU_] |3614| 
        B         $C$L308,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#187               ; [CPU_] |3614| 
        B         $C$L307,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L699:    
        CMPB      AL,#193               ; [CPU_] |3614| 
        B         $C$L153,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#194               ; [CPU_] |3614| 
        B         $C$L150,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L700:    
        CMPB      AL,#210               ; [CPU_] |3614| 
        B         $C$L701,GT            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#210               ; [CPU_] |3614| 
        B         $C$L79,EQ             ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#196               ; [CPU_] |3614| 
        B         $C$L115,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#197               ; [CPU_] |3614| 
        B         $C$L91,EQ             ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#198               ; [CPU_] |3614| 
        B         $C$L80,EQ             ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L701:    
        CMPB      AL,#211               ; [CPU_] |3614| 
        B         $C$L306,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        CMPB      AL,#240               ; [CPU_] |3614| 
        B         $C$L305,EQ            ; [CPU_] |3614| 
        ; branchcc occurs ; [] |3614| 
        B         $C$L317,UNC           ; [CPU_] |3614| 
        ; branch occurs ; [] |3614| 
$C$L702:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4278,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4278| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4278| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L703:    
	.dwpsn	file "../Source/prod.c",line 4280,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4280| 
        ANDB      AL,#0xff              ; [CPU_] |4280| 
        MOV       *XAR1++,AL            ; [CPU_] |4280| 
	.dwpsn	file "../Source/prod.c",line 4281,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4281| 
        LSR       AL,8                  ; [CPU_] |4281| 
        MOV       *XAR1++,AL            ; [CPU_] |4281| 
	.dwpsn	file "../Source/prod.c",line 4279,column 17,is_stmt,isa 0
        BANZ      $C$L703,AR6--         ; [CPU_] |4279| 
        ; branchcc occurs ; [] |4279| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4281,column 6,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4281| 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4287,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4287| 
        MOV       AH,#0                 ; [CPU_] |4287| 
        MOVL      XAR0,#88              ; [CPU_] |4287| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4287| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4287| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4287| 
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4287| 
        ; call occurs [#FS$$CMP] ; [] |4287| 
        CMPB      AL,#0                 ; [CPU_] |4287| 
        B         $C$L705,NEQ           ; [CPU_] |4287| 
        ; branchcc occurs ; [] |4287| 
	.dwpsn	file "../Source/prod.c",line 4286,column 6,is_stmt,isa 0
        MOV       *-SP[59],#128         ; [CPU_] |4286| 
        B         $C$L706,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4288,column 7,is_stmt,isa 0
        MOV       *-SP[59],#129         ; [CPU_] |4288| 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4290| 
        MOV       AH,#0                 ; [CPU_] |4290| 
        MOVL      XAR0,#88              ; [CPU_] |4290| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4290| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4290| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4290| 
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4290| 
        ; call occurs [#FS$$CMP] ; [] |4290| 
        CMPB      AL,#0                 ; [CPU_] |4290| 
        B         $C$L707,EQ            ; [CPU_] |4290| 
        ; branchcc occurs ; [] |4290| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4291,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4291| 
        MOV       *-SP[59],AL           ; [CPU_] |4291| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4293,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4293| 
        MOVL      XAR0,#88              ; [CPU_] |4293| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4293| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4293| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4293| 
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4293| 
        ; call occurs [#FS$$CMP] ; [] |4293| 
        CMPB      AL,#0                 ; [CPU_] |4293| 
        B         $C$L708,EQ            ; [CPU_] |4293| 
        ; branchcc occurs ; [] |4293| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4294,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4294| 
        MOV       *-SP[59],AL           ; [CPU_] |4294| 
$C$L708:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4296,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4296| 
        MOV       *XAR1++,AL            ; [CPU_] |4296| 
	.dwpsn	file "../Source/prod.c",line 4285,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4285| 
	.dwpsn	file "../Source/prod.c",line 4296,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4296| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4296| 
	.dwpsn	file "../Source/prod.c",line 4285,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4285| 
        SUBB      XAR6,#1               ; [CPU_U] |4285| 
        ADDB      ACC,#10               ; [CPU_] |4285| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4285| 
        MOVZ      AR0,AR6               ; [CPU_] |4285| 
        MOV       *-SP[47],AR6          ; [CPU_] |4285| 
        CMP       AR0,#-1               ; [CPU_] |4285| 
        B         $C$L704,NEQ           ; [CPU_] |4285| 
        ; branchcc occurs ; [] |4285| 
        B         $C$L743,UNC           ; [CPU_] |4285| 
        ; branch occurs ; [] |4285| 
$C$L709:    
	.dwpsn	file "../Source/prod.c",line 4271,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4271| 
        MOV       AH,#16672             ; [CPU_] |4271| 
        MOVL      XAR0,#46              ; [CPU_] |4271| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4271| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4271| 
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4271| 
        ; call occurs [#FS$$MPY] ; [] |4271| 
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4271| 
        ; call occurs [#FS$$TOU] ; [] |4271| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4271| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4271| 
	.dwpsn	file "../Source/prod.c",line 4272,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4272| 
	.dwpsn	file "../Source/prod.c",line 4271,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4271| 
	.dwpsn	file "../Source/prod.c",line 4272,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4272| 
        MOV       *-SP[61],#4           ; [CPU_] |4272| 
	.dwpsn	file "../Source/prod.c",line 4274,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4274| 
        ; branch occurs ; [] |4274| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4253,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4253| 
        MOV       AH,#16672             ; [CPU_] |4253| 
        MOVL      XAR0,#46              ; [CPU_] |4253| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4253| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4253| 
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4253| 
        ; call occurs [#FS$$MPY] ; [] |4253| 
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4253| 
        ; call occurs [#FS$$TOU] ; [] |4253| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4253| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4253| 
	.dwpsn	file "../Source/prod.c",line 4254,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4254| 
	.dwpsn	file "../Source/prod.c",line 4253,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4253| 
	.dwpsn	file "../Source/prod.c",line 4254,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4254| 
	.dwpsn	file "../Source/prod.c",line 4256,column 5,is_stmt,isa 0
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4256| 
        ; call occurs [#_ad7738_getmon] ; [] |4256| 
	.dwpsn	file "../Source/prod.c",line 4257,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4257| 
        MOV       AH,#18371             ; [CPU_] |4257| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4257| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4257| 
        ADDL      ACC,XAR4              ; [CPU_] |4257| 
        SUBB      ACC,#130              ; [CPU_] |4257| 
        MOVL      XAR4,ACC              ; [CPU_] |4257| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4257| 
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4257| 
        ; call occurs [#FS$$MPY] ; [] |4257| 
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4257| 
        ; call occurs [#FS$$TOL] ; [] |4257| 
	.dwpsn	file "../Source/prod.c",line 4258,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4258| 
	.dwpsn	file "../Source/prod.c",line 4257,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4257| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4258,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4258| 
	.dwpsn	file "../Source/prod.c",line 4257,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4258,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4258| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4261,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4261| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4260,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4260| 
        ANDB      AL,#0xff              ; [CPU_] |4260| 
        MOV       *XAR4++,AL            ; [CPU_] |4260| 
	.dwpsn	file "../Source/prod.c",line 4261,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4261| 
        LSR       AL,8                  ; [CPU_] |4261| 
        MOV       *XAR4++,AL            ; [CPU_] |4261| 
	.dwpsn	file "../Source/prod.c",line 4259,column 17,is_stmt,isa 0
        BANZ      $C$L711,AR6--         ; [CPU_] |4259| 
        ; branchcc occurs ; [] |4259| 
        B         $C$L743,UNC           ; [CPU_] |4259| 
        ; branch occurs ; [] |4259| 
$C$L712:    
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4240| 
        MOV       *-SP[61],AL           ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4239,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4239| 
        MOV       *-SP[47],AL           ; [CPU_] |4239| 
$C$L713:    
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4240| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4240| 
        MOV       *XAR1++,AL            ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4239,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4239| 
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4239,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4239| 
        B         $C$L713,LT            ; [CPU_] |4239| 
        ; branchcc occurs ; [] |4239| 
        B         $C$L743,UNC           ; [CPU_] |4239| 
        ; branch occurs ; [] |4239| 
$C$L714:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 4217,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4217| 
        ADD       ACC,#1591 << 1        ; [CPU_] |4217| 
        MOVL      XAR6,ACC              ; [CPU_] |4217| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4217| 
        MOV       *XAR4++,AL            ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4218,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4218| 
        ADD       ACC,#3183 << 0        ; [CPU_] |4218| 
        MOVL      XAR6,ACC              ; [CPU_] |4218| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4218| 
        MOV       *XAR4++,AL            ; [CPU_] |4218| 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4219| 
        ADD       ACC,#199 << 4         ; [CPU_] |4219| 
        MOVL      XAR6,ACC              ; [CPU_] |4219| 
	.dwpsn	file "../Source/prod.c",line 4221,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4221| 
	.dwpsn	file "../Source/prod.c",line 4219,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4219| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4219| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4223,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4223| 
        ANDB      AL,#0xff              ; [CPU_] |4223| 
        MOV       *XAR4++,AL            ; [CPU_] |4223| 
	.dwpsn	file "../Source/prod.c",line 4224,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4224| 
        LSR       AL,8                  ; [CPU_] |4224| 
        MOV       *XAR4++,AL            ; [CPU_] |4224| 
	.dwpsn	file "../Source/prod.c",line 4222,column 18,is_stmt,isa 0
        BANZ      $C$L716,AR6--         ; [CPU_] |4222| 
        ; branchcc occurs ; [] |4222| 
	.dwpsn	file "../Source/prod.c",line 4227,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4227| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4229,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4229| 
        ANDB      AL,#0xff              ; [CPU_] |4229| 
        MOV       *XAR4++,AL            ; [CPU_] |4229| 
	.dwpsn	file "../Source/prod.c",line 4230,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4230| 
        LSR       AL,8                  ; [CPU_] |4230| 
        MOV       *XAR4++,AL            ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4228,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |4228| 
        ; branchcc occurs ; [] |4228| 
	.dwpsn	file "../Source/prod.c",line 4218,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4218| 
        ADD       *-SP[61],#11          ; [CPU_] |4218| 
	.dwpsn	file "../Source/prod.c",line 4216,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4216| 
        ADDB      XAR0,#8               ; [CPU_] |4216| 
        ADDB      XAR7,#8               ; [CPU_] |4216| 
        SUBB      XAR6,#1               ; [CPU_U] |4216| 
        MOVZ      AR3,AR6               ; [CPU_] |4216| 
        CMP       AR6,#-1               ; [CPU_] |4216| 
        B         $C$L715,NEQ           ; [CPU_] |4216| 
        ; branchcc occurs ; [] |4216| 
        B         $C$L743,UNC           ; [CPU_] |4216| 
        ; branch occurs ; [] |4216| 
$C$L718:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 4163,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4163| 
        ADD       ACC,#1567 << 1        ; [CPU_] |4163| 
        MOVL      XAR6,ACC              ; [CPU_] |4163| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4163| 
        MOV       *XAR4++,AL            ; [CPU_] |4163| 
	.dwpsn	file "../Source/prod.c",line 4164,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4164| 
        ADD       ACC,#3135 << 0        ; [CPU_] |4164| 
        MOVL      XAR6,ACC              ; [CPU_] |4164| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4164| 
	.dwpsn	file "../Source/prod.c",line 4168,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4168| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4164,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4164| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4175,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4175| 
        ANDB      AL,#0xff              ; [CPU_] |4175| 
        MOV       *XAR4++,AL            ; [CPU_] |4175| 
	.dwpsn	file "../Source/prod.c",line 4176,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4176| 
        LSR       AL,8                  ; [CPU_] |4176| 
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4174,column 18,is_stmt,isa 0
        BANZ      $C$L720,AR0--         ; [CPU_] |4174| 
        ; branchcc occurs ; [] |4174| 
	.dwpsn	file "../Source/prod.c",line 4181,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4181| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4188,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4188| 
        ANDB      AL,#0xff              ; [CPU_] |4188| 
        MOV       *XAR4++,AL            ; [CPU_] |4188| 
	.dwpsn	file "../Source/prod.c",line 4189,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4189| 
        LSR       AL,8                  ; [CPU_] |4189| 
        MOV       *XAR4++,AL            ; [CPU_] |4189| 
	.dwpsn	file "../Source/prod.c",line 4187,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4187| 
        ; branchcc occurs ; [] |4187| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4194,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4194| 
        ANDB      AL,#0xff              ; [CPU_] |4194| 
        MOV       *XAR4++,AL            ; [CPU_] |4194| 
	.dwpsn	file "../Source/prod.c",line 4195,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4195| 
        LSR       AL,8                  ; [CPU_] |4195| 
        MOV       *XAR4++,AL            ; [CPU_] |4195| 
	.dwpsn	file "../Source/prod.c",line 4193,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4193| 
        ; branchcc occurs ; [] |4193| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4200,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4200| 
        ANDB      AL,#0xff              ; [CPU_] |4200| 
        MOV       *XAR4++,AL            ; [CPU_] |4200| 
	.dwpsn	file "../Source/prod.c",line 4201,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4201| 
        LSR       AL,8                  ; [CPU_] |4201| 
        MOV       *XAR4++,AL            ; [CPU_] |4201| 
	.dwpsn	file "../Source/prod.c",line 4199,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4199| 
        ; branchcc occurs ; [] |4199| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4206,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4206| 
        ANDB      AL,#0xff              ; [CPU_] |4206| 
        MOV       *XAR4++,AL            ; [CPU_] |4206| 
	.dwpsn	file "../Source/prod.c",line 4207,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4207| 
        LSR       AL,8                  ; [CPU_] |4207| 
        MOV       *XAR4++,AL            ; [CPU_] |4207| 
	.dwpsn	file "../Source/prod.c",line 4205,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4205| 
        ; branchcc occurs ; [] |4205| 
	.dwpsn	file "../Source/prod.c",line 4162,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4162| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4162| 
        MOVL      XAR0,#88              ; [CPU_] |4162| 
        ADDB      ACC,#12               ; [CPU_] |4162| 
        ADDB      XAR1,#12              ; [CPU_] |4162| 
        ADDB      XAR7,#12              ; [CPU_] |4162| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4162| 
	.dwpsn	file "../Source/prod.c",line 4164,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4164| 
	.dwpsn	file "../Source/prod.c",line 4162,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4162| 
	.dwpsn	file "../Source/prod.c",line 4164,column 6,is_stmt,isa 0
        ADD       *-SP[61],#22          ; [CPU_] |4164| 
	.dwpsn	file "../Source/prod.c",line 4162,column 17,is_stmt,isa 0
        MOVL      ACC,XT                ; [CPU_] |4162| 
        SUBB      XAR0,#1               ; [CPU_U] |4162| 
        ADDB      ACC,#12               ; [CPU_] |4162| 
        MOVL      XT,ACC                ; [CPU_] |4162| 
        MOV       *-SP[47],AR0          ; [CPU_] |4162| 
        MOVL      ACC,P                 ; [CPU_] |4162| 
        ADDB      ACC,#12               ; [CPU_] |4162| 
        MOVL      P,ACC                 ; [CPU_] |4162| 
        CMP       AR0,#-1               ; [CPU_] |4162| 
        B         $C$L719,NEQ           ; [CPU_] |4162| 
        ; branchcc occurs ; [] |4162| 
        B         $C$L743,UNC           ; [CPU_] |4162| 
        ; branch occurs ; [] |4162| 
$C$L725:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4155,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4155| 
        MOV       *-SP[61],AL           ; [CPU_] |4155| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4153,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4153| 
        MOV       *XAR4++,AL            ; [CPU_] |4153| 
	.dwpsn	file "../Source/prod.c",line 4154,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4154| 
        MOV       *XAR4++,AL            ; [CPU_] |4154| 
	.dwpsn	file "../Source/prod.c",line 4155,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4155| 
	.dwpsn	file "../Source/prod.c",line 4152,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4155,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4155| 
	.dwpsn	file "../Source/prod.c",line 4152,column 17,is_stmt,isa 0
        BANZ      $C$L726,AR6--         ; [CPU_] |4152| 
        ; branchcc occurs ; [] |4152| 
        B         $C$L743,UNC           ; [CPU_] |4152| 
        ; branch occurs ; [] |4152| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4143,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4143| 
        MOVB      XAR0,#36              ; [CPU_] |4143| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4143| 
        MOVL      XAR0,#80              ; [CPU_] |4143| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4143| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4143| 
	.dwpsn	file "../Source/prod.c",line 4145,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |4145| 
	.dwpsn	file "../Source/prod.c",line 4143,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4143| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4145,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4145| 
	.dwpsn	file "../Source/prod.c",line 4144,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4144| 
        ; branch occurs ; [] |4144| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4129,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4129| 
        MOVB      XAR0,#38              ; [CPU_] |4129| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4129| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4129| 
	.dwpsn	file "../Source/prod.c",line 4130,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4130| 
	.dwpsn	file "../Source/prod.c",line 4129,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4129| 
	.dwpsn	file "../Source/prod.c",line 4130,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4130| 
	.dwpsn	file "../Source/prod.c",line 4129,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4129| 
	.dwpsn	file "../Source/prod.c",line 4130,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4130| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4130| 
	.dwpsn	file "../Source/prod.c",line 4135,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4135| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4134,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4134| 
        ANDB      AL,#0xff              ; [CPU_] |4134| 
        MOV       *XAR4++,AL            ; [CPU_] |4134| 
	.dwpsn	file "../Source/prod.c",line 4135,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4135| 
        LSR       AL,8                  ; [CPU_] |4135| 
        MOV       *XAR4++,AL            ; [CPU_] |4135| 
	.dwpsn	file "../Source/prod.c",line 4133,column 17,is_stmt,isa 0
        BANZ      $C$L729,AR6--         ; [CPU_] |4133| 
        ; branchcc occurs ; [] |4133| 
        B         $C$L743,UNC           ; [CPU_] |4133| 
        ; branch occurs ; [] |4133| 
$C$L730:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4119,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4119| 
        MOV       *-SP[61],AL           ; [CPU_] |4119| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L731:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4119| 
	.dwpsn	file "../Source/prod.c",line 4118,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4118| 
	.dwpsn	file "../Source/prod.c",line 4119,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4119| 
	.dwpsn	file "../Source/prod.c",line 4118,column 17,is_stmt,isa 0
        BANZ      $C$L731,AR6--         ; [CPU_] |4118| 
        ; branchcc occurs ; [] |4118| 
        B         $C$L743,UNC           ; [CPU_] |4118| 
        ; branch occurs ; [] |4118| 
$C$L732:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4102,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4102| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4104,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4104| 
        ANDB      AL,#0xff              ; [CPU_] |4104| 
        MOV       *XAR4++,AL            ; [CPU_] |4104| 
	.dwpsn	file "../Source/prod.c",line 4105,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4105| 
        LSR       AL,8                  ; [CPU_] |4105| 
        MOV       *XAR4++,AL            ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4103,column 18,is_stmt,isa 0
        BANZ      $C$L734,AR0--         ; [CPU_] |4103| 
        ; branchcc occurs ; [] |4103| 
	.dwpsn	file "../Source/prod.c",line 4101,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4101| 
	.dwpsn	file "../Source/prod.c",line 4105,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4101,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4101| 
        ; branchcc occurs ; [] |4101| 
	.dwpsn	file "../Source/prod.c",line 4110,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4110| 
        MOVL      ACC,XAR5              ; [CPU_] |4110| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4110| 
        MOVL      XAR6,ACC              ; [CPU_] |4110| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4110| 
        ANDB      AL,#0xff              ; [CPU_] |4110| 
        MOV       *XAR4++,AL            ; [CPU_] |4110| 
	.dwpsn	file "../Source/prod.c",line 4111,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4111| 
        ADD       ACC,#1607 << 1        ; [CPU_] |4111| 
        MOVL      XAR5,ACC              ; [CPU_] |4111| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4111| 
        LSR       AL,8                  ; [CPU_] |4111| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4111| 
$C$L735:    
        ADD       *-SP[61],#2           ; [CPU_] |4111| 
	.dwpsn	file "../Source/prod.c",line 4114,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4114| 
        ; branch occurs ; [] |4114| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3756,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3756| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3756| 
        MOVZ      AR4,AR4               ; [CPU_] |3756| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3758,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3758| 
        ANDB      AL,#0xff              ; [CPU_] |3758| 
        MOV       *XAR1++,AL            ; [CPU_] |3758| 
	.dwpsn	file "../Source/prod.c",line 3759,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3759| 
        LSR       AL,8                  ; [CPU_] |3759| 
        MOV       *XAR1++,AL            ; [CPU_] |3759| 
	.dwpsn	file "../Source/prod.c",line 3757,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3757| 
        ; branchcc occurs ; [] |3757| 
	.dwpsn	file "../Source/prod.c",line 3763,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3763| 
        ANDB      AL,#0xff              ; [CPU_] |3763| 
	.dwpsn	file "../Source/prod.c",line 3764,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3764| 
	.dwpsn	file "../Source/prod.c",line 3763,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3763| 
	.dwpsn	file "../Source/prod.c",line 3764,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3764| 
        LSR       AL,8                  ; [CPU_] |3764| 
        MOV       *XAR1++,AL            ; [CPU_] |3764| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3764| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3768,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3768| 
        ANDB      AL,#0xff              ; [CPU_] |3768| 
        MOV       *XAR1++,AL            ; [CPU_] |3768| 
	.dwpsn	file "../Source/prod.c",line 3769,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3769| 
        LSR       AL,8                  ; [CPU_] |3769| 
        MOV       *XAR1++,AL            ; [CPU_] |3769| 
	.dwpsn	file "../Source/prod.c",line 3767,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3767| 
        ; branchcc occurs ; [] |3767| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3773,column 5,is_stmt,isa 0
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_strlen")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3773| 
        ; call occurs [#_strlen] ; [] |3773| 
	.dwpsn	file "../Source/prod.c",line 3774,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3774| 
	.dwpsn	file "../Source/prod.c",line 3759,column 6,is_stmt,isa 0
        ADD       *-SP[61],#11          ; [CPU_] |3759| 
	.dwpsn	file "../Source/prod.c",line 3775,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3775| 
        B         $C$L743,EQ            ; [CPU_] |3775| 
        ; branchcc occurs ; [] |3775| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3774,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3774| 
	.dwpsn	file "../Source/prod.c",line 3775,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3775| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3776,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3776| 
	.dwpsn	file "../Source/prod.c",line 3775,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3775| 
	.dwpsn	file "../Source/prod.c",line 3776,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3776| 
        INC       *-SP[61]              ; [CPU_] |3776| 
	.dwpsn	file "../Source/prod.c",line 3775,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3775| 
        B         $C$L739,HI            ; [CPU_] |3775| 
        ; branchcc occurs ; [] |3775| 
        B         $C$L743,UNC           ; [CPU_] |3775| 
        ; branch occurs ; [] |3775| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3742,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3742| 
        MOVL      XAR0,#66              ; [CPU_] |3742| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3742| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3742| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3742| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3742| 
	.dwpsn	file "../Source/prod.c",line 3745,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3745| 
        ; branch occurs ; [] |3745| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3736,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3736| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3736| 
$C$L742:    
        MOV       *-SP[61],#3           ; [CPU_] |3736| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5727,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |5727| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5727| 
        ; call occurs [#_scia_send_bin] ; [] |5727| 
	.dwpsn	file "../Source/prod.c",line 5729,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5729| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5729| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5729| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5729| 
        CMPB      AL,#240               ; [CPU_] |5729| 
        B         $C$L634,NEQ           ; [CPU_] |5729| 
        ; branchcc occurs ; [] |5729| 
	.dwpsn	file "../Source/prod.c",line 5730,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5730| 
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("_delay_us")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5730| 
        ; call occurs [#_delay_us] ; [] |5730| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5731,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5731| 
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5731| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5731| 
        B         $C$L634,UNC           ; [CPU_] |5731| 
        ; branch occurs ; [] |5731| 
	.dwattr $C$DW$277, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$277, DW_AT_TI_end_line(0x1682)
	.dwattr $C$DW$277, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$277

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1479	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1479, DW_AT_name("get_fattime")
	.dwattr $C$DW$1479, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1479, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1479, DW_AT_external
	.dwattr $C$DW$1479, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1479, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1479, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1479, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1479, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1479, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1479, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1479, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1479

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec 10 2019",0
	.align	2
$C$FSL62:	.string	"11:48:58",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resettare
	.global	_ad7738_resetlimit
	.global	_ad7738_resetpeak
	.global	_ad7738_resetvall
	.global	_mcbsp_xmit
	.global	_latch_dac
	.global	_ad7738_setcal
	.global	_ad7738_settemp
	.global	_conf_default
	.global	_ad7738_init
	.global	_SPICANReadSetT0Message
	.global	_SPICAN_T0_RTS
	.global	_dac_setmode
	.global	_ad7738_monclr
	.global	_maf_rst
	.global	_velf_rst
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_SPICANInit
	.global	_extio_init
	.global	_gpio_init
	.global	_ssr_set
	.global	_uart_set_dir
	.global	_lcd_init
	.global	_lcd_clear
	.global	_led_init
	.global	_led_set
	.global	_InitPieVectTable
	.global	_delay_us
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_sys_init
	.global	_lcd_dputs
	.global	_lcd_puts
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_SPICANReadStat
	.global	_scia_send_bin
	.global	_scia_puts
	.global	_sprintf
	.global	_SPICANRead
	.global	_scia_getparam
	.global	_port4004
	.global	_secureRamFuncs_runstart
	.global	_atoi
	.global	_port400e
	.global	_Flash28_API_LoadEnd
	.global	_Flash28_API_LoadStart
	.global	_secureRamFuncs_loadstart
	.global	_Flash28_API_RunStart
	.global	_secureRamFuncs_loadend
	.global	_ad7738_tempstart
	.global	_conf_write
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_rawrdy
	.global	_ad7738_monrdy
	.global	_ad7738_getlimitchgd
	.global	_ad7738_getlimitst
	.global	_conf_read
	.global	_tagdetect
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_strtod
	.global	_atol
	.global	_ad7738_getmon
	.global	_ds1820read
	.global	_prod_getnext
	.global	_Flash_CPUScaleFactor
	.global	_Flash_CallbackPtr
	.global	_ad7738_getvall
	.global	_ad7738_getpeak
	.global	_strlen
	.global	_ad7738_getraw
	.global	_prod_getavail
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1481	.dwtag  DW_TAG_member
	.dwattr $C$DW$1481, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1481, DW_AT_name("fs_type")
	.dwattr $C$DW$1481, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1481, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1481, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1482	.dwtag  DW_TAG_member
	.dwattr $C$DW$1482, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1482, DW_AT_name("drv")
	.dwattr $C$DW$1482, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1482, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1482, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1483	.dwtag  DW_TAG_member
	.dwattr $C$DW$1483, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1483, DW_AT_name("csize")
	.dwattr $C$DW$1483, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1483, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1483, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1484	.dwtag  DW_TAG_member
	.dwattr $C$DW$1484, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1484, DW_AT_name("n_fats")
	.dwattr $C$DW$1484, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1484, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1484, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1485	.dwtag  DW_TAG_member
	.dwattr $C$DW$1485, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1485, DW_AT_name("wflag")
	.dwattr $C$DW$1485, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1485, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1485, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1486	.dwtag  DW_TAG_member
	.dwattr $C$DW$1486, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1486, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1486, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1486, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1486, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1487	.dwtag  DW_TAG_member
	.dwattr $C$DW$1487, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1487, DW_AT_name("id")
	.dwattr $C$DW$1487, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1487, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1487, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1488	.dwtag  DW_TAG_member
	.dwattr $C$DW$1488, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1488, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1488, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1488, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1488, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1489	.dwtag  DW_TAG_member
	.dwattr $C$DW$1489, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1489, DW_AT_name("last_clust")
	.dwattr $C$DW$1489, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1489, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1489, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1490	.dwtag  DW_TAG_member
	.dwattr $C$DW$1490, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1490, DW_AT_name("free_clust")
	.dwattr $C$DW$1490, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1490, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1490, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1491	.dwtag  DW_TAG_member
	.dwattr $C$DW$1491, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1491, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1491, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1491, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1491, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1492	.dwtag  DW_TAG_member
	.dwattr $C$DW$1492, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1492, DW_AT_name("cdir")
	.dwattr $C$DW$1492, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1492, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1492, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1493	.dwtag  DW_TAG_member
	.dwattr $C$DW$1493, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1493, DW_AT_name("n_fatent")
	.dwattr $C$DW$1493, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1493, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1493, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1494	.dwtag  DW_TAG_member
	.dwattr $C$DW$1494, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1494, DW_AT_name("fsize")
	.dwattr $C$DW$1494, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1494, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1494, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1495	.dwtag  DW_TAG_member
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1495, DW_AT_name("fatbase")
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1495, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1495, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1496	.dwtag  DW_TAG_member
	.dwattr $C$DW$1496, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1496, DW_AT_name("dirbase")
	.dwattr $C$DW$1496, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1496, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1496, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1497, DW_AT_name("database")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1498, DW_AT_name("winsect")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1499, DW_AT_name("win")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1500, DW_AT_name("fs")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1501, DW_AT_name("id")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1502, DW_AT_name("flag")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1503, DW_AT_name("pad1")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1504, DW_AT_name("fptr")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1505, DW_AT_name("fsize")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1506, DW_AT_name("org_clust")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1507, DW_AT_name("curr_clust")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1508, DW_AT_name("dsect")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1509, DW_AT_name("dir_sect")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1510, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1511, DW_AT_name("cltbl")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1512, DW_AT_name("buf")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1513, DW_AT_name("year")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1514, DW_AT_name("month")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1515, DW_AT_name("mday")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1516, DW_AT_name("wday")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1517, DW_AT_name("hour")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1518, DW_AT_name("min")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1519, DW_AT_name("sec")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1520, DW_AT_name("adc")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1521, DW_AT_name("adw")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1522, DW_AT_name("pos")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1523, DW_AT_name("vel")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1524, DW_AT_name("ci")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1525, DW_AT_name("bslope")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1526, DW_AT_name("tcx")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1527, DW_AT_name("tcy")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1528, DW_AT_name("tcz")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1529	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1529, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1530, DW_AT_name("what")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1531, DW_AT_name("ch")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1532, DW_AT_name("dslopep")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1533, DW_AT_name("dslopen")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1534, DW_AT_name("dint")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1535, DW_AT_name("gain")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1536, DW_AT_name("offset")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1537	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1537, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1538, DW_AT_name("what")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1539, DW_AT_name("ch")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1540, DW_AT_name("adec")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1541	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1541, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1542, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1542, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1542, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1543, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1543, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1543, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1544, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1544, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1544, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1545, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1545, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1545, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1546, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1546, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1546, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1547, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1547, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1547, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1548, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1548, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1548, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1549, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1549, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1549, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1550, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1550, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1550, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1551, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1551, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1551, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1552, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1552, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1552, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1553, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1553, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1553, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1554, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1554, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1555, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1555, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1556, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1556, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1557, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1557, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1557, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("all")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1559, DW_AT_name("bit")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1574, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1574, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1575, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1575, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1575, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("all")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1577, DW_AT_name("bit")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("all")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1595, DW_AT_name("bit")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("all")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1613, DW_AT_name("bit")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("all")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1631, DW_AT_name("bit")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("all")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1649, DW_AT_name("bit")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("all")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1667, DW_AT_name("bit")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("all")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1685, DW_AT_name("bit")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("rsvd1")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("rsvd2")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("all")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1693, DW_AT_name("bit")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("rsvd1")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("rsvd2")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("all")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1701, DW_AT_name("bit")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("rsvd1")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("rsvd2")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("all")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1709, DW_AT_name("bit")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("rsvd1")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("rsvd2")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("all")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1717, DW_AT_name("bit")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("rsvd1")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("all")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1723, DW_AT_name("bit")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("rsvd1")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("all")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1729, DW_AT_name("bit")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("rsvd1")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("all")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1735, DW_AT_name("bit")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("rsvd1")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("all")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1741, DW_AT_name("bit")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1750, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1750, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1751, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1751, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1751, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1756, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1756, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1757, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1757, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("all")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1759, DW_AT_name("bit")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("all")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1777, DW_AT_name("bit")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("all")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1795, DW_AT_name("bit")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("all")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1813, DW_AT_name("bit")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("rsvd1")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("rsvd2")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("all")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1819, DW_AT_name("bit")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("rsvd1")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("rsvd2")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("all")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1825, DW_AT_name("bit")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("rsvd1")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1826, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1826, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("rsvd2")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("all")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1831, DW_AT_name("bit")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("rsvd1")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("rsvd2")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1835, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1835, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("all")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1837, DW_AT_name("bit")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1838, DW_AT_name("GPADAT")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1839, DW_AT_name("GPASET")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1840, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1841, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1842, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1843, DW_AT_name("GPBSET")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1844, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1845, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1846, DW_AT_name("rsvd1")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1847, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1848, DW_AT_name("GPDSET")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1849, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1850, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1851, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1852, DW_AT_name("GPESET")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1853, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1854, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1855, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1856, DW_AT_name("GPFSET")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1857, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1858, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1859, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1860, DW_AT_name("GPGSET")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1861, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1862, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1863, DW_AT_name("rsvd2")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1864	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1864)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1865, DW_AT_name("what")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1866, DW_AT_name("ch")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1867, DW_AT_name("limit")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1868, DW_AT_name("limits")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1869, DW_AT_name("limitr")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1870	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1870, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1871, DW_AT_name("usn")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1872, DW_AT_name("uname")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1873, DW_AT_name("rxdir")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1874, DW_AT_name("baud")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1875, DW_AT_name("tagiden")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1876, DW_AT_name("tarepersist")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1877, DW_AT_name("filter")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1878, DW_AT_name("diffwin")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1879, DW_AT_name("ch")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1880, DW_AT_name("sensor")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1881, DW_AT_name("vfd")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1882, DW_AT_name("dac")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1883, DW_AT_name("lim")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1884, DW_AT_name("velfilter")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1885, DW_AT_name("cntperin")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1886, DW_AT_name("magic")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1887	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1887)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1888, DW_AT_name("ssn")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1889, DW_AT_name("slbl")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1890, DW_AT_name("tagid")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1891, DW_AT_name("method")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1892, DW_AT_name("date")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1893, DW_AT_name("range")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1894, DW_AT_name("unit")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1895, DW_AT_name("ounit")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1896, DW_AT_name("ufactor")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1897, DW_AT_name("points")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1898, DW_AT_name("mass")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1899, DW_AT_name("adc")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1900, DW_AT_name("slope")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1901, DW_AT_name("intercept")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1902, DW_AT_name("shunt")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1903, DW_AT_name("base")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1904, DW_AT_name("tare")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1905, DW_AT_name("dacgain")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1906, DW_AT_name("dacoff")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1907, DW_AT_name("ch")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1908	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1908, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1909	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1909)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1910	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1910, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1911	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$6)

$C$DW$T$174	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$1911)


$C$DW$T$175	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_byte_size(0x101)
$C$DW$1912	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1912, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$175

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1913	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$10)

$C$DW$T$197	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$197, DW_AT_type(*$C$DW$1913)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1914	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$36)

$C$DW$1915	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$1914)

$C$DW$T$297	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$297, DW_AT_type(*$C$DW$1915)

$C$DW$1916	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$36)

$C$DW$T$298	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1916)


$C$DW$T$299	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$T$299, DW_AT_language(DW_LANG_C)
$C$DW$1917	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$299


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1918	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1918, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87


$C$DW$T$306	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$306, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$306, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$306, DW_AT_byte_size(0x03)
$C$DW$1919	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1919, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$306

$C$DW$T$307	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$307, DW_AT_address_class(0x20)

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1920	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1920, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1921	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1921, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1922	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1922, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1923	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$12)

$C$DW$T$333	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$333, DW_AT_type(*$C$DW$1923)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1924	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1924, DW_AT_type(*$C$DW$T$90)

$C$DW$T$336	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$336, DW_AT_type(*$C$DW$1924)


$C$DW$T$337	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$337, DW_AT_type(*$C$DW$T$336)
	.dwattr $C$DW$T$337, DW_AT_language(DW_LANG_C)
$C$DW$1925	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$337

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$352	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$352, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$352, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$352, DW_AT_byte_size(0x08)
$C$DW$1926	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1926, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$352

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1927	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1927, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1928	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1928, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1929	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1929, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1930	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1930, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$371	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$371, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$371, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$371, DW_AT_byte_size(0x06)
$C$DW$1931	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1931, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$371

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1932	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1932, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1933	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1933, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$357	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$357, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$357, DW_AT_address_class(0x20)

$C$DW$1934	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1934, DW_AT_type(*$C$DW$T$5)

$C$DW$T$178	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$1934)

$C$DW$T$179	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$T$179, DW_AT_address_class(0x20)


$C$DW$T$372	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$372, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$372, DW_AT_language(DW_LANG_C)
$C$DW$1935	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$372


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$373, DW_AT_byte_size(0x400)
$C$DW$1936	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1936, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$373


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$374, DW_AT_byte_size(0x08)
$C$DW$1937	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1937, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$374


$C$DW$T$379	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$379, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$379, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$379, DW_AT_byte_size(0x64)
$C$DW$1938	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1938, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$379


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x40)
$C$DW$1939	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1939, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$380

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1940	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1940, DW_AT_name("AL")
	.dwattr $C$DW$1940, DW_AT_location[DW_OP_reg0]

$C$DW$1941	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1941, DW_AT_name("AH")
	.dwattr $C$DW$1941, DW_AT_location[DW_OP_reg1]

$C$DW$1942	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1942, DW_AT_name("PL")
	.dwattr $C$DW$1942, DW_AT_location[DW_OP_reg2]

$C$DW$1943	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1943, DW_AT_name("PH")
	.dwattr $C$DW$1943, DW_AT_location[DW_OP_reg3]

$C$DW$1944	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1944, DW_AT_name("SP")
	.dwattr $C$DW$1944, DW_AT_location[DW_OP_reg20]

$C$DW$1945	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1945, DW_AT_name("XT")
	.dwattr $C$DW$1945, DW_AT_location[DW_OP_reg21]

$C$DW$1946	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1946, DW_AT_name("T")
	.dwattr $C$DW$1946, DW_AT_location[DW_OP_reg22]

$C$DW$1947	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1947, DW_AT_name("ST0")
	.dwattr $C$DW$1947, DW_AT_location[DW_OP_reg23]

$C$DW$1948	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1948, DW_AT_name("ST1")
	.dwattr $C$DW$1948, DW_AT_location[DW_OP_reg24]

$C$DW$1949	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1949, DW_AT_name("PC")
	.dwattr $C$DW$1949, DW_AT_location[DW_OP_reg25]

$C$DW$1950	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1950, DW_AT_name("RPC")
	.dwattr $C$DW$1950, DW_AT_location[DW_OP_reg26]

$C$DW$1951	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1951, DW_AT_name("FP")
	.dwattr $C$DW$1951, DW_AT_location[DW_OP_reg28]

$C$DW$1952	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1952, DW_AT_name("DP")
	.dwattr $C$DW$1952, DW_AT_location[DW_OP_reg29]

$C$DW$1953	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1953, DW_AT_name("SXM")
	.dwattr $C$DW$1953, DW_AT_location[DW_OP_reg30]

$C$DW$1954	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1954, DW_AT_name("PM")
	.dwattr $C$DW$1954, DW_AT_location[DW_OP_reg31]

$C$DW$1955	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1955, DW_AT_name("OVM")
	.dwattr $C$DW$1955, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1956	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1956, DW_AT_name("PAGE0")
	.dwattr $C$DW$1956, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("AMODE")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("INTM")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("IFR")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1960	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1960, DW_AT_name("IER")
	.dwattr $C$DW$1960, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1961	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1961, DW_AT_name("V")
	.dwattr $C$DW$1961, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1962	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1962, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1962, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1963	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1963, DW_AT_name("VOL")
	.dwattr $C$DW$1963, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1964	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1964, DW_AT_name("AR0")
	.dwattr $C$DW$1964, DW_AT_location[DW_OP_reg4]

$C$DW$1965	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1965, DW_AT_name("XAR0")
	.dwattr $C$DW$1965, DW_AT_location[DW_OP_reg5]

$C$DW$1966	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1966, DW_AT_name("AR1")
	.dwattr $C$DW$1966, DW_AT_location[DW_OP_reg6]

$C$DW$1967	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1967, DW_AT_name("XAR1")
	.dwattr $C$DW$1967, DW_AT_location[DW_OP_reg7]

$C$DW$1968	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1968, DW_AT_name("AR2")
	.dwattr $C$DW$1968, DW_AT_location[DW_OP_reg8]

$C$DW$1969	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1969, DW_AT_name("XAR2")
	.dwattr $C$DW$1969, DW_AT_location[DW_OP_reg9]

$C$DW$1970	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1970, DW_AT_name("AR3")
	.dwattr $C$DW$1970, DW_AT_location[DW_OP_reg10]

$C$DW$1971	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1971, DW_AT_name("XAR3")
	.dwattr $C$DW$1971, DW_AT_location[DW_OP_reg11]

$C$DW$1972	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1972, DW_AT_name("AR4")
	.dwattr $C$DW$1972, DW_AT_location[DW_OP_reg12]

$C$DW$1973	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1973, DW_AT_name("XAR4")
	.dwattr $C$DW$1973, DW_AT_location[DW_OP_reg13]

$C$DW$1974	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1974, DW_AT_name("AR5")
	.dwattr $C$DW$1974, DW_AT_location[DW_OP_reg14]

$C$DW$1975	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1975, DW_AT_name("XAR5")
	.dwattr $C$DW$1975, DW_AT_location[DW_OP_reg15]

$C$DW$1976	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1976, DW_AT_name("AR6")
	.dwattr $C$DW$1976, DW_AT_location[DW_OP_reg16]

$C$DW$1977	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1977, DW_AT_name("XAR6")
	.dwattr $C$DW$1977, DW_AT_location[DW_OP_reg17]

$C$DW$1978	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1978, DW_AT_name("AR7")
	.dwattr $C$DW$1978, DW_AT_location[DW_OP_reg18]

$C$DW$1979	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1979, DW_AT_name("XAR7")
	.dwattr $C$DW$1979, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

