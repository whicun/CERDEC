;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.7.LTS *
;* Date/Time created: Fri Dec 20 12:47:17 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.7.LTS Copyright (c) 1996-2017 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\ebenton\Documents\CERDEC TS\Firmware\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL1,32		; _VEL_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL2,32		; _POS_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
	.dwendtag $C$DW$5


$C$DW$6	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$6, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$6, DW_AT_declaration
	.dwattr $C$DW$6, DW_AT_external
$C$DW$7	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$7, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$6


$C$DW$8	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$8, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$8, DW_AT_declaration
	.dwattr $C$DW$8, DW_AT_external
$C$DW$9	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$9, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$8


$C$DW$10	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$10, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$10, DW_AT_declaration
	.dwattr $C$DW$10, DW_AT_external
$C$DW$11	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$11, DW_AT_type(*$C$DW$T$11)

$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$10


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$15, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
	.dwendtag $C$DW$15


$C$DW$16	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$16, DW_AT_name("SPICANCheckInts")
	.dwattr $C$DW$16, DW_AT_TI_symbol_name("_SPICANCheckInts")
	.dwattr $C$DW$16, DW_AT_declaration
	.dwattr $C$DW$16, DW_AT_external
$C$DW$17	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$16


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("conf_default")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwendtag $C$DW$18


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("SPICANWaitForTXBuf")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$19


$C$DW$21	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$21, DW_AT_name("SPICANRoutine")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("_SPICANRoutine")
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
	.dwendtag $C$DW$21


$C$DW$22	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$22, DW_AT_name("velf_rst")
	.dwattr $C$DW$22, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$22, DW_AT_declaration
	.dwattr $C$DW$22, DW_AT_external
	.dwendtag $C$DW$22


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("dac_setmode")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
$C$DW$24	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$24, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$23


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("ad7738_init")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
	.dwendtag $C$DW$25


$C$DW$26	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$26, DW_AT_name("maf_rst")
	.dwattr $C$DW$26, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$26, DW_AT_declaration
	.dwattr $C$DW$26, DW_AT_external
	.dwendtag $C$DW$26


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("SPICANReadSetT0Message")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
$C$DW$28	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$28, DW_AT_type(*$C$DW$T$36)

$C$DW$29	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$29, DW_AT_type(*$C$DW$T$36)

$C$DW$30	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$30, DW_AT_type(*$C$DW$T$168)

	.dwendtag $C$DW$27

$C$DW$31	.dwtag  DW_TAG_variable
	.dwattr $C$DW$31, DW_AT_name("UNITS")
	.dwattr $C$DW$31, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$31, DW_AT_declaration
	.dwattr $C$DW$31, DW_AT_external

$C$DW$32	.dwtag  DW_TAG_variable
	.dwattr $C$DW$32, DW_AT_name("METHOD")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$32, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external

$C$DW$33	.dwtag  DW_TAG_variable
	.dwattr $C$DW$33, DW_AT_name("BAUD")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$33, DW_AT_type(*$C$DW$T$339)
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external

$C$DW$34	.dwtag  DW_TAG_variable
	.dwattr $C$DW$34, DW_AT_name("BITMAP")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$34, DW_AT_type(*$C$DW$T$300)
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external

$C$DW$35	.dwtag  DW_TAG_variable
	.dwattr $C$DW$35, DW_AT_name("LPV")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external

$C$DW$36	.dwtag  DW_TAG_variable
	.dwattr $C$DW$36, DW_AT_name("INTERFACE")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$36, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("ds1820start")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("configCAN")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38


$C$DW$39	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$39, DW_AT_name("latch_dac")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external
	.dwendtag $C$DW$39


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("SPICANInit")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_SPICANInit")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwendtag $C$DW$40


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("extio_init")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
	.dwendtag $C$DW$41


$C$DW$42	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$42, DW_AT_name("gpio_init")
	.dwattr $C$DW$42, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$42, DW_AT_declaration
	.dwattr $C$DW$42, DW_AT_external
	.dwendtag $C$DW$42


$C$DW$43	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$43, DW_AT_name("ssr_set")
	.dwattr $C$DW$43, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$43, DW_AT_declaration
	.dwattr $C$DW$43, DW_AT_external
$C$DW$44	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$44, DW_AT_type(*$C$DW$T$36)

$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$43


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
$C$DW$47	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$46


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("lcd_init")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
	.dwendtag $C$DW$48


$C$DW$49	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$49, DW_AT_name("lcd_clear")
	.dwattr $C$DW$49, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$49, DW_AT_declaration
	.dwattr $C$DW$49, DW_AT_external
	.dwendtag $C$DW$49


$C$DW$50	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$50, DW_AT_name("led_init")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external
	.dwendtag $C$DW$50


$C$DW$51	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$51, DW_AT_name("led_set")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external
$C$DW$52	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$52, DW_AT_type(*$C$DW$T$36)

$C$DW$53	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$53, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$51


$C$DW$54	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$54, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$54, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$54, DW_AT_declaration
	.dwattr $C$DW$54, DW_AT_external
	.dwendtag $C$DW$54


$C$DW$55	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$55, DW_AT_name("delay_us")
	.dwattr $C$DW$55, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$55, DW_AT_declaration
	.dwattr $C$DW$55, DW_AT_external
$C$DW$56	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$56, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$55


$C$DW$57	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$57, DW_AT_name("InitECan")
	.dwattr $C$DW$57, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$57, DW_AT_declaration
	.dwattr $C$DW$57, DW_AT_external
	.dwendtag $C$DW$57


$C$DW$58	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$58, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$58, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$58, DW_AT_declaration
	.dwattr $C$DW$58, DW_AT_external
	.dwendtag $C$DW$58


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("flash_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
	.dwendtag $C$DW$59


$C$DW$60	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$60, DW_AT_name("shunt_switch")
	.dwattr $C$DW$60, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$60, DW_AT_declaration
	.dwattr $C$DW$60, DW_AT_external
$C$DW$61	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$61, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$60


$C$DW$62	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$62, DW_AT_name("reboot")
	.dwattr $C$DW$62, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$62, DW_AT_declaration
	.dwattr $C$DW$62, DW_AT_external
	.dwendtag $C$DW$62


$C$DW$63	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$63, DW_AT_name("sys_init")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
	.dwendtag $C$DW$63


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$163)

$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$64


$C$DW$67	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$67, DW_AT_name("lcd_puts")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external
$C$DW$68	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$68, DW_AT_type(*$C$DW$T$163)

$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$67


$C$DW$70	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$70, DW_AT_name("scia_init")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$70


$C$DW$72	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$72, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
$C$DW$73	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$73, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$72

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$74	.dwtag  DW_TAG_variable
	.dwattr $C$DW$74, DW_AT_name("cmd_mode")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$74, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$74, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$74, DW_AT_external


$C$DW$75	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$75, DW_AT_name("scia_getparam")
	.dwattr $C$DW$75, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$75, DW_AT_declaration
	.dwattr $C$DW$75, DW_AT_external
$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$163)

$C$DW$77	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$77, DW_AT_type(*$C$DW$T$163)

$C$DW$78	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$75


$C$DW$79	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$79, DW_AT_name("SPICANRead")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("_SPICANRead")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external
$C$DW$80	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$79


$C$DW$81	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$81, DW_AT_name("scia_puts")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external
$C$DW$82	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$81


$C$DW$83	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$83, DW_AT_name("sprintf")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$83, DW_AT_declaration
	.dwattr $C$DW$83, DW_AT_external
$C$DW$84	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$163)

$C$DW$85	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$180)

$C$DW$86	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$83


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
$C$DW$88	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$163)

$C$DW$89	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$87


$C$DW$90	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$90, DW_AT_name("SPICANReadStat")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_SPICANReadStat")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external
	.dwendtag $C$DW$90

$C$DW$91	.dwtag  DW_TAG_variable
	.dwattr $C$DW$91, DW_AT_name("port4004")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external

$C$DW$92	.dwtag  DW_TAG_variable
	.dwattr $C$DW$92, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external


$C$DW$93	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$93, DW_AT_name("atoi")
	.dwattr $C$DW$93, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$93, DW_AT_declaration
	.dwattr $C$DW$93, DW_AT_external
$C$DW$94	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$93

$C$DW$95	.dwtag  DW_TAG_variable
	.dwattr $C$DW$95, DW_AT_name("port400e")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$298)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$96	.dwtag  DW_TAG_variable
	.dwattr $C$DW$96, DW_AT_name("autoidchanged")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$96, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$96, DW_AT_external

$C$DW$97	.dwtag  DW_TAG_variable
	.dwattr $C$DW$97, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$97, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$97, DW_AT_declaration
	.dwattr $C$DW$97, DW_AT_external

$C$DW$98	.dwtag  DW_TAG_variable
	.dwattr $C$DW$98, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$98, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$98, DW_AT_declaration
	.dwattr $C$DW$98, DW_AT_external

$C$DW$99	.dwtag  DW_TAG_variable
	.dwattr $C$DW$99, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external

$C$DW$100	.dwtag  DW_TAG_variable
	.dwattr $C$DW$100, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external

$C$DW$101	.dwtag  DW_TAG_variable
	.dwattr $C$DW$101, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external


$C$DW$102	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$102, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$102, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$102, DW_AT_declaration
	.dwattr $C$DW$102, DW_AT_external
	.dwendtag $C$DW$102


$C$DW$103	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$103, DW_AT_name("conf_write")
	.dwattr $C$DW$103, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$103, DW_AT_declaration
	.dwattr $C$DW$103, DW_AT_external
	.dwendtag $C$DW$103


$C$DW$104	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$104, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$104, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$104, DW_AT_declaration
	.dwattr $C$DW$104, DW_AT_external
	.dwendtag $C$DW$104


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105


$C$DW$106	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$106, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
	.dwendtag $C$DW$106


$C$DW$107	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$107, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$107, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$107, DW_AT_declaration
	.dwattr $C$DW$107, DW_AT_external
	.dwendtag $C$DW$107


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
	.dwendtag $C$DW$108


$C$DW$109	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$109, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$109, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$109, DW_AT_declaration
	.dwattr $C$DW$109, DW_AT_external
$C$DW$110	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$109


$C$DW$111	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$111, DW_AT_name("conf_read")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$111, DW_AT_declaration
	.dwattr $C$DW$111, DW_AT_external
	.dwendtag $C$DW$111


$C$DW$112	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$112, DW_AT_name("tagdetect")
	.dwattr $C$DW$112, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$112, DW_AT_declaration
	.dwattr $C$DW$112, DW_AT_external
$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$112


$C$DW$114	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$114, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$114, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$114, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$114, DW_AT_declaration
	.dwattr $C$DW$114, DW_AT_external
$C$DW$115	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$163)

$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$114


$C$DW$117	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$117, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$117, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$117, DW_AT_declaration
	.dwattr $C$DW$117, DW_AT_external
	.dwendtag $C$DW$117


$C$DW$118	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$118, DW_AT_name("strtod")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$118, DW_AT_declaration
	.dwattr $C$DW$118, DW_AT_external
$C$DW$119	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$180)

$C$DW$120	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$359)

	.dwendtag $C$DW$118

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$121	.dwtag  DW_TAG_variable
	.dwattr $C$DW$121, DW_AT_name("VEL_U")
	.dwattr $C$DW$121, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$121, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$121, DW_AT_external

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$122	.dwtag  DW_TAG_variable
	.dwattr $C$DW$122, DW_AT_name("POS_U")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$122, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$122, DW_AT_external


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
$C$DW$124	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$123


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("memcpy")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
$C$DW$126	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$3)

$C$DW$127	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$148)

$C$DW$128	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$125


$C$DW$129	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$129, DW_AT_name("atol")
	.dwattr $C$DW$129, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$129, DW_AT_declaration
	.dwattr $C$DW$129, DW_AT_external
$C$DW$130	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$129


$C$DW$131	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$131, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external
	.dwendtag $C$DW$131


$C$DW$132	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$132, DW_AT_name("ds1820read")
	.dwattr $C$DW$132, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$132, DW_AT_declaration
	.dwattr $C$DW$132, DW_AT_external
	.dwendtag $C$DW$132


$C$DW$133	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$133, DW_AT_name("prod_getnext")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external
	.dwendtag $C$DW$133

$C$DW$134	.dwtag  DW_TAG_variable
	.dwattr $C$DW$134, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$134, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$134, DW_AT_declaration
	.dwattr $C$DW$134, DW_AT_external

$C$DW$135	.dwtag  DW_TAG_variable
	.dwattr $C$DW$135, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$135, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$135, DW_AT_declaration
	.dwattr $C$DW$135, DW_AT_external


$C$DW$136	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$136, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$136, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$136, DW_AT_declaration
	.dwattr $C$DW$136, DW_AT_external
	.dwendtag $C$DW$136


$C$DW$137	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$137, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$137, DW_AT_declaration
	.dwattr $C$DW$137, DW_AT_external
	.dwendtag $C$DW$137


$C$DW$138	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$138, DW_AT_name("strlen")
	.dwattr $C$DW$138, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$138, DW_AT_declaration
	.dwattr $C$DW$138, DW_AT_external
$C$DW$139	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$180)

	.dwendtag $C$DW$138


$C$DW$140	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$140, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$140, DW_AT_declaration
	.dwattr $C$DW$140, DW_AT_external
	.dwendtag $C$DW$140


$C$DW$141	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$141, DW_AT_name("prod_getavail")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$141, DW_AT_declaration
	.dwattr $C$DW$141, DW_AT_external
	.dwendtag $C$DW$141

	.global	_autoid
_autoid:	.usect	".ebss",4,1,0
$C$DW$142	.dwtag  DW_TAG_variable
	.dwattr $C$DW$142, DW_AT_name("autoid")
	.dwattr $C$DW$142, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$142, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$142, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",4,1,0
$C$DW$143	.dwtag  DW_TAG_variable
	.dwattr $C$DW$143, DW_AT_name("tagwasthere")
	.dwattr $C$DW$143, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$143, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$143, DW_AT_external


$C$DW$144	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$144, DW_AT_name("tagid")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$144, DW_AT_declaration
	.dwattr $C$DW$144, DW_AT_external
$C$DW$145	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$144

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$146	.dwtag  DW_TAG_variable
	.dwattr $C$DW$146, DW_AT_name("rtc")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$146, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$146, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$147, DW_AT_declaration
	.dwattr $C$DW$147, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$148	.dwtag  DW_TAG_variable
	.dwattr $C$DW$148, DW_AT_name("tsensor")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$148, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$148, DW_AT_external

$C$DW$149	.dwtag  DW_TAG_variable
	.dwattr $C$DW$149, DW_AT_name("_ctypes_")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$176)
	.dwattr $C$DW$149, DW_AT_declaration
	.dwattr $C$DW$149, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$150	.dwtag  DW_TAG_variable
	.dwattr $C$DW$150, DW_AT_name("fileOb")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$150, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$150, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$151	.dwtag  DW_TAG_variable
	.dwattr $C$DW$151, DW_AT_name("Fatfs")
	.dwattr $C$DW$151, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$151, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$151, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$152	.dwtag  DW_TAG_variable
	.dwattr $C$DW$152, DW_AT_name("conf_data")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$152, DW_AT_declaration
	.dwattr $C$DW$152, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\bin\opt2000.exe C:\\Users\\ebenton\\AppData\\Local\\Temp\\{6D578659-0B67-47DC-A9D9-B36218DB7270} C:\\Users\\ebenton\\AppData\\Local\\Temp\\{72B3F413-75C5-4683-B017-15BDED2A8CB2} 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\bin\ac2000.exe -@C:\\Users\\ebenton\\AppData\\Local\\Temp\\{F5AD91A2-8E50-4452-A990-51F80F5ED58B} 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$153	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$153, DW_AT_name("update_units")
	.dwattr $C$DW$153, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$153, DW_AT_high_pc(0x00)
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$153, DW_AT_external
	.dwattr $C$DW$153, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$153, DW_AT_TI_begin_line(0x17da)
	.dwattr $C$DW$153, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$153, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6106,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$154	.dwtag  DW_TAG_variable
	.dwattr $C$DW$154, DW_AT_name("buff")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$154, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6106 | void update_units(void) {                                              
; 6108 | int l;                                                                 
; 6109 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6111,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6111 | lcd_clear();                                                           
; 6112 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$155, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$155, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6111| 
        ; call occurs [#_lcd_clear] ; [] |6111| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6113,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6113 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6113| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6113| 
        ADDL      XAR4,ACC              ; [CPU_] |6113| 
        MOV       AL,AR1                ; [CPU_] |6113| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6113| 
$C$DW$156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$156, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$156, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6113| 
        ; call occurs [#_lcd_puts] ; [] |6113| 
	.dwpsn	file "../Source/prod.c",line 6114,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6114 | switch (conf_data.vfd[l].what) {                                       
; 6115 | case VFD_LOAD:                                                         
; 6116 | case VFD_PEAK:                                                         
; 6117 | case VFD_VALL:                                                         
; 6118 | case VFD_POSI:                                                         
; 6119 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6114| 
        CMPB      AL,#4                 ; [CPU_] |6114| 
        B         $C$L2,LOS             ; [CPU_] |6114| 
        ; branchcc occurs ; [] |6114| 
        CMPB      AL,#5                 ; [CPU_] |6114| 
        B         $C$L8,EQ              ; [CPU_] |6114| 
        ; branchcc occurs ; [] |6114| 
        CMPB      AL,#6                 ; [CPU_] |6114| 
        B         $C$L7,EQ              ; [CPU_] |6114| 
        ; branchcc occurs ; [] |6114| 
        B         $C$L10,UNC            ; [CPU_] |6114| 
        ; branch occurs ; [] |6114| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6120,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6120 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6120| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6120| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6120| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6120| 
        ADDB      AL,#1                 ; [CPU_] |6120| 
        MOVL      XAR4,XAR3             ; [CPU_] |6120| 
        MOV       *-SP[3],AL            ; [CPU_] |6120| 
$C$DW$157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$157, DW_AT_name("_sprintf")
	.dwattr $C$DW$157, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6120| 
        ; call occurs [#_sprintf] ; [] |6120| 
	.dwpsn	file "../Source/prod.c",line 6121,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6121 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6121| 
        ADD       AL,AR1                ; [CPU_] |6121| 
        MOVL      XAR4,XAR3             ; [CPU_] |6121| 
$C$DW$158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$158, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$158, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6121| 
        ; call occurs [#_lcd_puts] ; [] |6121| 
	.dwpsn	file "../Source/prod.c",line 6122,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6122 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6122| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6122| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6122| 
        B         $C$L3,EQ              ; [CPU_] |6122| 
        ; branchcc occurs ; [] |6122| 
	.dwpsn	file "../Source/prod.c",line 6123,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6123 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6123| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6123| 
        ADD       AL,AR1                ; [CPU_] |6123| 
$C$DW$159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$159, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$159, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6123| 
        ; call occurs [#_lcd_puts] ; [] |6123| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6126,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6126 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6127 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6126| 
        CMPB      AL,#3                 ; [CPU_] |6126| 
        B         $C$L6,EQ              ; [CPU_] |6126| 
        ; branchcc occurs ; [] |6126| 
	.dwpsn	file "../Source/prod.c",line 6128,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6128 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6129 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6130 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6128| 
        CMPB      AL,#4                 ; [CPU_] |6128| 
        B         $C$L5,EQ              ; [CPU_] |6128| 
        ; branchcc occurs ; [] |6128| 
	.dwpsn	file "../Source/prod.c",line 6131,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6131 | lcd_puts(                                                              
; 6132 |                 (char*) UNITS[0x0f                                     
; 6133 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6134 |                 18 + 20 * l);                                          
; 6136 | break;                                                                 
; 6137 | case VFD_LIMIT:                                                        
; 6138 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6139 | lcd_puts(buff, 5 + 20 * l);                                            
; 6140 | break;                                                                 
; 6141 | case VFD_TEMP:                                                         
; 6142 | #if(VFD==1)                                                            
; 6143 | buff[0] = 0xb0;                                                        
; 6144 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6131| 
        MOV       T,#10                 ; [CPU_] |6131| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6131| 
        ADDL      ACC,XAR6              ; [CPU_] |6131| 
        MOVL      XAR4,ACC              ; [CPU_] |6131| 
        MOVB      XAR0,#42              ; [CPU_] |6131| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6131| 
        MPYB      ACC,T,#152            ; [CPU_] |6131| 
        ADDL      ACC,XAR6              ; [CPU_] |6131| 
        MOVL      XAR4,ACC              ; [CPU_] |6131| 
        MOVB      XAR0,#125             ; [CPU_] |6131| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6131| 
        ANDB      AL,#0x0f              ; [CPU_] |6131| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6131| 
        MOV       ACC,AL << 1           ; [CPU_] |6131| 
        ADDL      XAR4,ACC              ; [CPU_] |6131| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6131| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6131| 
        B         $C$L9,UNC             ; [CPU_] |6131| 
        ; branch occurs ; [] |6131| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6129,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6129| 
        MOVL      XAR4,#$C$FSL1         ; [CPU_U] |6129| 
	.dwpsn	file "../Source/prod.c",line 6130,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6130| 
        ; branch occurs ; [] |6130| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6127,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6127| 
	.dwpsn	file "../Source/prod.c",line 6128,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6128| 
        ; branch occurs ; [] |6128| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6145,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6145 | buff[0] = 0xdf;                                                        
; 6146 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6145| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6145| 
	.dwpsn	file "../Source/prod.c",line 6147,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6147 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6147| 
	.dwpsn	file "../Source/prod.c",line 6148,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6148 | buff[2] = '\0';                                                        
; 6149 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6148| 
	.dwpsn	file "../Source/prod.c",line 6150,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6150 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6150| 
        ; branch occurs ; [] |6150| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6138,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6138| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6138| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6138| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6138| 
        ADDB      AL,#1                 ; [CPU_] |6138| 
        MOVL      XAR4,XAR3             ; [CPU_] |6138| 
        MOV       *-SP[3],AL            ; [CPU_] |6138| 
$C$DW$160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$160, DW_AT_name("_sprintf")
	.dwattr $C$DW$160, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6138| 
        ; call occurs [#_sprintf] ; [] |6138| 
	.dwpsn	file "../Source/prod.c",line 6139,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6139| 
        MOVL      XAR4,XAR3             ; [CPU_] |6139| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6139| 
$C$DW$161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$161, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$161, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6139| 
        ; call occurs [#_lcd_puts] ; [] |6139| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6112,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6112| 
        SUBB      XAR6,#1               ; [CPU_U] |6112| 
        MOVZ      AR0,AR6               ; [CPU_] |6112| 
        ADDB      XAR2,#3               ; [CPU_] |6112| 
        ADDB      XAR1,#20              ; [CPU_] |6112| 
        MOV       *-SP[4],AR6           ; [CPU_] |6112| 
        CMP       AR0,#-1               ; [CPU_] |6112| 
        B         $C$L1,NEQ             ; [CPU_] |6112| 
        ; branchcc occurs ; [] |6112| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$162, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$153, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$153, DW_AT_TI_end_line(0x1809)
	.dwattr $C$DW$153, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$153

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$163	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$163, DW_AT_name("print_vfd")
	.dwattr $C$DW$163, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$163, DW_AT_high_pc(0x00)
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$163, DW_AT_external
	.dwattr $C$DW$163, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$163, DW_AT_TI_begin_line(0x1765)
	.dwattr $C$DW$163, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$163, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5989,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$164	.dwtag  DW_TAG_variable
	.dwattr $C$DW$164, DW_AT_name("buff")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5989 | void print_vfd(void) {                                                 
; 5990 | int l;                                                                 
; 5991 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$165	.dwtag  DW_TAG_variable
	.dwattr $C$DW$165, DW_AT_name("l")
	.dwattr $C$DW$165, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$165, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$165, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5993,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5993 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5993| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5993| 
        ; call occurs [#_scia_puts] ; [] |5993| 
	.dwpsn	file "../Source/prod.c",line 5994,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5994 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5994| 
        MOVL      XAR2,#_conf_data+3122 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5995,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5995 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5995| 
        MOVB      AL,#1                 ; [CPU_] |5995| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5995| 
        ADD       AL,AR1                ; [CPU_] |5995| 
        MOV       *-SP[3],AL            ; [CPU_] |5995| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5995| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5995| 
        ADDL      XAR4,ACC              ; [CPU_] |5995| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5995| 
        MOVL      XAR4,XAR3             ; [CPU_] |5995| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5995| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_sprintf")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5995| 
        ; call occurs [#_sprintf] ; [] |5995| 
	.dwpsn	file "../Source/prod.c",line 5996,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5996 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5996| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("_scia_puts")
	.dwattr $C$DW$168, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5996| 
        ; call occurs [#_scia_puts] ; [] |5996| 
	.dwpsn	file "../Source/prod.c",line 5998,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5998 | switch (conf_data.vfd[l].what) {                                       
; 5999 | case VFD_LOAD:                                                         
; 6000 | case VFD_PEAK:                                                         
; 6001 | case VFD_VALL:                                                         
; 6002 | case VFD_POSI:                                                         
; 6003 | case VFD_VELO:                                                         
; 6004 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 6005 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 6006 |         scia_puts(buff);                                               
; 6007 |         break;                                                         
; 6008 | case VFD_LIMIT:                                                        
; 6009 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 6010 |         scia_puts(buff);                                               
; 6011 |         break;                                                         
; 6012 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5998| 
        CMPB      AL,#4                 ; [CPU_] |5998| 
        B         $C$L13,LOS            ; [CPU_] |5998| 
        ; branchcc occurs ; [] |5998| 
        CMPB      AL,#5                 ; [CPU_] |5998| 
        B         $C$L12,EQ             ; [CPU_] |5998| 
        ; branchcc occurs ; [] |5998| 
        CMPB      AL,#6                 ; [CPU_] |5998| 
        B         $C$L16,NEQ            ; [CPU_] |5998| 
        ; branchcc occurs ; [] |5998| 
	.dwpsn	file "../Source/prod.c",line 6013,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6013 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |6013| 
	.dwpsn	file "../Source/prod.c",line 6014,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6014 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |6014| 
        ; branch occurs ; [] |6014| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 6009,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |6009| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6009| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6009| 
        ADDB      AL,#1                 ; [CPU_] |6009| 
        MOV       *-SP[3],AL            ; [CPU_] |6009| 
	.dwpsn	file "../Source/prod.c",line 6011,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |6011| 
        ; branch occurs ; [] |6011| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 6004,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |6004| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6004| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6004| 
        ADDB      AL,#1                 ; [CPU_] |6004| 
        MOV       *-SP[3],AL            ; [CPU_] |6004| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |6004| 
        MOV       *-SP[4],AL            ; [CPU_] |6004| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |6004| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_sprintf")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6004| 
        ; call occurs [#_sprintf] ; [] |6004| 
	.dwpsn	file "../Source/prod.c",line 6006,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6006| 
$C$L15:    
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("_scia_puts")
	.dwattr $C$DW$170, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6006| 
        ; call occurs [#_scia_puts] ; [] |6006| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 6016,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6016 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6016| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("_scia_puts")
	.dwattr $C$DW$171, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6016| 
        ; call occurs [#_scia_puts] ; [] |6016| 
	.dwpsn	file "../Source/prod.c",line 5994,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5994| 
        ADDB      XAR2,#3               ; [CPU_] |5994| 
        MOV       AL,AR1                ; [CPU_] |5994| 
        CMPB      AL,#4                 ; [CPU_] |5994| 
        B         $C$L11,LT             ; [CPU_] |5994| 
        ; branchcc occurs ; [] |5994| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$163, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$163, DW_AT_TI_end_line(0x1782)
	.dwattr $C$DW$163, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$163

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$173	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$173, DW_AT_name("print_sensor")
	.dwattr $C$DW$173, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$173, DW_AT_high_pc(0x00)
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$173, DW_AT_external
	.dwattr $C$DW$173, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$173, DW_AT_TI_begin_line(0x170e)
	.dwattr $C$DW$173, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$173, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5902,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$174	.dwtag  DW_TAG_variable
	.dwattr $C$DW$174, DW_AT_name("buff")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$175	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$175, DW_AT_name("ss")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$176	.dwtag  DW_TAG_variable
	.dwattr $C$DW$176, DW_AT_name("ss")
	.dwattr $C$DW$176, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$176, DW_AT_type(*$C$DW$T$198)
	.dwattr $C$DW$176, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$177	.dwtag  DW_TAG_variable
	.dwattr $C$DW$177, DW_AT_name("j")
	.dwattr $C$DW$177, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$177, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$177, DW_AT_location[DW_OP_reg0]

$C$DW$178	.dwtag  DW_TAG_variable
	.dwattr $C$DW$178, DW_AT_name("j")
	.dwattr $C$DW$178, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$178, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$178, DW_AT_location[DW_OP_breg20 -7]

$C$DW$179	.dwtag  DW_TAG_variable
	.dwattr $C$DW$179, DW_AT_name("j")
	.dwattr $C$DW$179, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$179, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$179, DW_AT_location[DW_OP_breg20 -7]

$C$DW$180	.dwtag  DW_TAG_variable
	.dwattr $C$DW$180, DW_AT_name("j")
	.dwattr $C$DW$180, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$180, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$180, DW_AT_location[DW_OP_breg20 -7]

$C$DW$181	.dwtag  DW_TAG_variable
	.dwattr $C$DW$181, DW_AT_name("j")
	.dwattr $C$DW$181, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$181, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$181, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5902 | void print_sensor(int ss) {                                            
; 5903 | int j;                                                                 
; 5904 | static char buff[100];                                                 
; 5906 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5902| 
	.dwpsn	file "../Source/prod.c",line 5907,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5907 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5908 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5909 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5907| 
        MPYB      P,T,#152              ; [CPU_] |5907| 
        MOVL      ACC,XAR3              ; [CPU_] |5907| 
        ADDL      ACC,P                 ; [CPU_] |5907| 
        MOVL      XAR2,ACC              ; [CPU_] |5907| 
        MOVB      XAR0,#118             ; [CPU_] |5907| 
        MOVL      *-SP[12],P            ; [CPU_] |5907| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5907| 
        B         $C$L28,EQ             ; [CPU_] |5907| 
        ; branchcc occurs ; [] |5907| 
	.dwpsn	file "../Source/prod.c",line 5910,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5910 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5910| 
        MOVL      ACC,XAR2              ; [CPU_] |5910| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5910| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5910| 
        ADDB      ACC,#82               ; [CPU_] |5910| 
        MOVL      XAR4,XAR1             ; [CPU_] |5910| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5910| 
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_name("_sprintf")
	.dwattr $C$DW$182, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5910| 
        ; call occurs [#_sprintf] ; [] |5910| 
	.dwpsn	file "../Source/prod.c",line 5911,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5911 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5911| 
$C$DW$183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5911| 
        ; call occurs [#_scia_puts] ; [] |5911| 
	.dwpsn	file "../Source/prod.c",line 5912,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5912 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5912| 
        MOVL      ACC,XAR2              ; [CPU_] |5912| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5912| 
        ADDB      ACC,#98               ; [CPU_] |5912| 
        MOVL      XAR4,XAR1             ; [CPU_] |5912| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5912| 
$C$DW$184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$184, DW_AT_name("_sprintf")
	.dwattr $C$DW$184, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5912| 
        ; call occurs [#_sprintf] ; [] |5912| 
	.dwpsn	file "../Source/prod.c",line 5913,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5913 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5913| 
$C$DW$185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5913| 
        ; call occurs [#_scia_puts] ; [] |5913| 
	.dwpsn	file "../Source/prod.c",line 5914,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5914 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5915 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5914| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5914| 
        MOVL      XAR4,XAR2             ; [CPU_] |5914| 
        ADDB      XAR4,#114             ; [CPU_] |5914| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5914| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5914| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5914| 
        MOVL      XAR4,XAR1             ; [CPU_] |5914| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5914| 
$C$DW$186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$186, DW_AT_name("_sprintf")
	.dwattr $C$DW$186, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5914| 
        ; call occurs [#_sprintf] ; [] |5914| 
	.dwpsn	file "../Source/prod.c",line 5916,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5916 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5916| 
$C$DW$187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$187, DW_AT_name("_scia_puts")
	.dwattr $C$DW$187, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5916| 
        ; call occurs [#_scia_puts] ; [] |5916| 
	.dwpsn	file "../Source/prod.c",line 5917,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5917 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5918 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5917| 
        MOVB      XAR0,#118             ; [CPU_] |5917| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5917| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5917| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5917| 
        ADDL      XAR4,ACC              ; [CPU_] |5917| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5917| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5917| 
        MOVL      XAR4,XAR1             ; [CPU_] |5917| 
$C$DW$188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$188, DW_AT_name("_sprintf")
	.dwattr $C$DW$188, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5917| 
        ; call occurs [#_sprintf] ; [] |5917| 
	.dwpsn	file "../Source/prod.c",line 5919,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5919 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5919| 
$C$DW$189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5919| 
        ; call occurs [#_scia_puts] ; [] |5919| 
	.dwpsn	file "../Source/prod.c",line 5920,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5920 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5921 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5920| 
        MOVB      XAR0,#124             ; [CPU_] |5920| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5920| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5920| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5920| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5920| 
        ANDB      AL,#0x0f              ; [CPU_] |5920| 
        MOV       ACC,AL << 1           ; [CPU_] |5920| 
        ADDL      XAR4,ACC              ; [CPU_] |5920| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5920| 
        MOVL      XAR4,XAR1             ; [CPU_] |5920| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5920| 
$C$DW$190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$190, DW_AT_name("_sprintf")
	.dwattr $C$DW$190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5920| 
        ; call occurs [#_sprintf] ; [] |5920| 
	.dwpsn	file "../Source/prod.c",line 5922,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5922 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5922| 
$C$DW$191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5922| 
        ; call occurs [#_scia_puts] ; [] |5922| 
	.dwpsn	file "../Source/prod.c",line 5923,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5923 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5924 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#125             ; [CPU_] |5923| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5923| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5923| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5923| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5923| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5923| 
        MOV       ACC,AL << 1           ; [CPU_] |5923| 
        ADDL      ACC,XAR6              ; [CPU_] |5923| 
        MOVL      XAR4,ACC              ; [CPU_] |5923| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5923| 
        MOVL      XAR4,XAR1             ; [CPU_] |5923| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5923| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5923| 
        ; call occurs [#_sprintf] ; [] |5923| 
	.dwpsn	file "../Source/prod.c",line 5925,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5925 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5925| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5925| 
        ; call occurs [#_scia_puts] ; [] |5925| 
	.dwpsn	file "../Source/prod.c",line 5926,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5926 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5927 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5926| 
        MOVB      XAR0,#126             ; [CPU_] |5926| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5926| 
        MOVL      XAR4,XAR1             ; [CPU_] |5926| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5926| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5926| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5926| 
        ; call occurs [#_sprintf] ; [] |5926| 
	.dwpsn	file "../Source/prod.c",line 5928,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5928 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5928| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5928| 
        ; call occurs [#_scia_puts] ; [] |5928| 
	.dwpsn	file "../Source/prod.c",line 5929,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5929 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5930 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5929| 
        MOVB      XAR0,#122             ; [CPU_] |5929| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5929| 
        MOVL      XAR4,XAR1             ; [CPU_] |5929| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5929| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5929| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5929| 
        ; call occurs [#_sprintf] ; [] |5929| 
	.dwpsn	file "../Source/prod.c",line 5931,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5931 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5931| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5931| 
        ; call occurs [#_scia_puts] ; [] |5931| 
	.dwpsn	file "../Source/prod.c",line 5932,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5932 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5933 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5932| 
        MOVB      XAR0,#222             ; [CPU_] |5932| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5932| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5932| 
        MOVL      XAR4,XAR1             ; [CPU_] |5932| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5932| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_sprintf")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5932| 
        ; call occurs [#_sprintf] ; [] |5932| 
	.dwpsn	file "../Source/prod.c",line 5934,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5934 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5934| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5934| 
        ; call occurs [#_scia_puts] ; [] |5934| 
	.dwpsn	file "../Source/prod.c",line 5935,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5935 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5936 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5935| 
        MOVB      XAR0,#224             ; [CPU_] |5935| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5935| 
        MOVL      XAR4,XAR1             ; [CPU_] |5935| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5935| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5935| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_sprintf")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5935| 
        ; call occurs [#_sprintf] ; [] |5935| 
	.dwpsn	file "../Source/prod.c",line 5937,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5937 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5937| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5937| 
        ; call occurs [#_scia_puts] ; [] |5937| 
	.dwpsn	file "../Source/prod.c",line 5938,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5938 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5939 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5938| 
        MOVB      XAR0,#228             ; [CPU_] |5938| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5938| 
        MOVL      XAR4,XAR1             ; [CPU_] |5938| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5938| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5938| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_sprintf")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5938| 
        ; call occurs [#_sprintf] ; [] |5938| 
	.dwpsn	file "../Source/prod.c",line 5940,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5940 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5940| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5940| 
        ; call occurs [#_scia_puts] ; [] |5940| 
	.dwpsn	file "../Source/prod.c",line 5941,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5941 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5942 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5941| 
        MOVB      XAR0,#230             ; [CPU_] |5941| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5941| 
        MOVL      XAR4,XAR1             ; [CPU_] |5941| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5941| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5941| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5941| 
        ; call occurs [#_sprintf] ; [] |5941| 
	.dwpsn	file "../Source/prod.c",line 5943,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5943 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5943| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5943| 
        ; call occurs [#_scia_puts] ; [] |5943| 
	.dwpsn	file "../Source/prod.c",line 5945,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5946 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5947 |                         conf_data.sensor[ss].points);                  
; 5948 |         scia_puts(buff);                                               
; 5950 |         scia_puts("  Point:");                                         
; 5951 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5952 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5953 |                 scia_puts(buff);                                       
; 5955 |         scia_puts("\r\n  Mass: ");                                     
; 5956 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5957 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5958 |                 scia_puts(buff);                                       
; 5960 |         scia_puts("\r\n  Count:");                                     
; 5961 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5962 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5963 |                 scia_puts(buff);                                       
; 5965 |         scia_puts("\r\n  Slope:    ");                                 
; 5966 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5967 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5968 |                 scia_puts(buff);                                       
; 5970 |         scia_puts("\r\n  Intercept:");                                 
; 5971 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5972 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5973 |                 scia_puts(buff);                                       
; 5975 |         scia_puts("\r\n");                                             
; 5976 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#118             ; [CPU_] |5945| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5945| 
        CMPB      AL,#2                 ; [CPU_] |5945| 
        B         $C$L17,EQ             ; [CPU_] |5945| 
        ; branchcc occurs ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5977,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5977 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5978 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5977| 
        MOVB      XAR0,#178             ; [CPU_] |5977| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5977| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5977| 
        MOVL      XAR4,XAR1             ; [CPU_] |5977| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5977| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5977| 
        ; call occurs [#_sprintf] ; [] |5977| 
	.dwpsn	file "../Source/prod.c",line 5979,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5979 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5979| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5979| 
        ; call occurs [#_scia_puts] ; [] |5979| 
	.dwpsn	file "../Source/prod.c",line 5980,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5980 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5981 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5980| 
        MOVB      XAR0,#200             ; [CPU_] |5980| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5980| 
        MOVL      XAR4,XAR1             ; [CPU_] |5980| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5980| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5980| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_sprintf")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5980| 
        ; call occurs [#_sprintf] ; [] |5980| 
	.dwpsn	file "../Source/prod.c",line 5982,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5982 | scia_puts(buff);                                                       
; 5985 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5982| 
        B         $C$L29,UNC            ; [CPU_] |5982| 
        ; branch occurs ; [] |5982| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5946,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5946| 
        MOVB      XAR0,#128             ; [CPU_] |5946| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5946| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5946| 
        MOVL      XAR4,XAR1             ; [CPU_] |5946| 
        MOV       *-SP[3],AL            ; [CPU_] |5946| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_sprintf")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5946| 
        ; call occurs [#_sprintf] ; [] |5946| 
	.dwpsn	file "../Source/prod.c",line 5948,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5948| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_scia_puts")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5948| 
        ; call occurs [#_scia_puts] ; [] |5948| 
	.dwpsn	file "../Source/prod.c",line 5950,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5950| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5950| 
        ; call occurs [#_scia_puts] ; [] |5950| 
	.dwpsn	file "../Source/prod.c",line 5951,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5951| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5951,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5951| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5951| 
        B         $C$L27,LT             ; [CPU_] |5951| 
        ; branchcc occurs ; [] |5951| 
	.dwpsn	file "../Source/prod.c",line 5955,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5955| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5955| 
        ; call occurs [#_scia_puts] ; [] |5955| 
	.dwpsn	file "../Source/prod.c",line 5956,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5956| 
        MOV       *-SP[7],AL            ; [CPU_] |5956| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5956,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5956| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5956| 
        B         $C$L26,LT             ; [CPU_] |5956| 
        ; branchcc occurs ; [] |5956| 
	.dwpsn	file "../Source/prod.c",line 5960,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5960| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5960| 
        ; call occurs [#_scia_puts] ; [] |5960| 
	.dwpsn	file "../Source/prod.c",line 5961,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5961| 
        MOV       *-SP[7],AL            ; [CPU_] |5961| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5961,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5961| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5961| 
        B         $C$L25,LT             ; [CPU_] |5961| 
        ; branchcc occurs ; [] |5961| 
	.dwpsn	file "../Source/prod.c",line 5965,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5965| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5965| 
        ; call occurs [#_scia_puts] ; [] |5965| 
	.dwpsn	file "../Source/prod.c",line 5966,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5966| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5966,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5966| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5966| 
        ADDB      AL,#-1                ; [CPU_] |5966| 
        CMP       AL,*-SP[7]            ; [CPU_] |5966| 
        B         $C$L24,GT             ; [CPU_] |5966| 
        ; branchcc occurs ; [] |5966| 
	.dwpsn	file "../Source/prod.c",line 5970,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5970| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5970| 
        ; call occurs [#_scia_puts] ; [] |5970| 
	.dwpsn	file "../Source/prod.c",line 5971,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5971| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5971,column 16,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |5971| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5971| 
        ADDB      AL,#-1                ; [CPU_] |5971| 
        CMP       AL,*-SP[7]            ; [CPU_] |5971| 
        B         $C$L23,GT             ; [CPU_] |5971| 
        ; branchcc occurs ; [] |5971| 
	.dwpsn	file "../Source/prod.c",line 5975,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5975| 
	.dwpsn	file "../Source/prod.c",line 5976,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5976| 
        ; branch occurs ; [] |5976| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5972,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5972| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5972| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5972| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5972| 
        MOV       ACC,AL << 1           ; [CPU_] |5972| 
        ADDL      ACC,XAR6              ; [CPU_] |5972| 
        ADDL      ACC,XAR3              ; [CPU_] |5972| 
        MOVL      XAR4,ACC              ; [CPU_] |5972| 
        MOVB      XAR0,#200             ; [CPU_] |5972| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5972| 
        MOVL      XAR4,XAR1             ; [CPU_] |5972| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5972| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5972| 
        ; call occurs [#_sprintf] ; [] |5972| 
	.dwpsn	file "../Source/prod.c",line 5973,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5973| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5973| 
        ; call occurs [#_scia_puts] ; [] |5973| 
	.dwpsn	file "../Source/prod.c",line 5971,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5971| 
        B         $C$L22,UNC            ; [CPU_] |5971| 
        ; branch occurs ; [] |5971| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5967,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5967| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5967| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5967| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5967| 
        MOV       ACC,AL << 1           ; [CPU_] |5967| 
        ADDL      ACC,XAR6              ; [CPU_] |5967| 
        ADDL      ACC,XAR3              ; [CPU_] |5967| 
        MOVL      XAR4,ACC              ; [CPU_] |5967| 
        MOVB      XAR0,#178             ; [CPU_] |5967| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5967| 
        MOVL      XAR4,XAR1             ; [CPU_] |5967| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5967| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_sprintf")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5967| 
        ; call occurs [#_sprintf] ; [] |5967| 
	.dwpsn	file "../Source/prod.c",line 5968,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5968| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_scia_puts")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5968| 
        ; call occurs [#_scia_puts] ; [] |5968| 
	.dwpsn	file "../Source/prod.c",line 5966,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5966| 
        B         $C$L21,UNC            ; [CPU_] |5966| 
        ; branch occurs ; [] |5966| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5962,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5962| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5962| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5962| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5962| 
        ADDL      ACC,XAR6              ; [CPU_] |5962| 
        ADDL      ACC,XAR3              ; [CPU_] |5962| 
        MOVL      XAR4,ACC              ; [CPU_] |5962| 
        MOVB      XAR0,#154             ; [CPU_] |5962| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5962| 
        MOVL      XAR4,XAR1             ; [CPU_] |5962| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5962| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_sprintf")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5962| 
        ; call occurs [#_sprintf] ; [] |5962| 
	.dwpsn	file "../Source/prod.c",line 5963,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5963| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5963| 
        ; call occurs [#_scia_puts] ; [] |5963| 
	.dwpsn	file "../Source/prod.c",line 5961,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5961| 
	.dwpsn	file "../Source/prod.c",line 5963,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5963| 
	.dwpsn	file "../Source/prod.c",line 5961,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5961| 
        ; branch occurs ; [] |5961| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5957,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5957| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5957| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5957| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5957| 
        ADDL      ACC,XAR6              ; [CPU_] |5957| 
        ADDL      ACC,XAR3              ; [CPU_] |5957| 
        MOVL      XAR4,ACC              ; [CPU_] |5957| 
        MOVB      XAR0,#130             ; [CPU_] |5957| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5957| 
        MOVL      XAR4,XAR1             ; [CPU_] |5957| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5957| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_sprintf")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5957| 
        ; call occurs [#_sprintf] ; [] |5957| 
	.dwpsn	file "../Source/prod.c",line 5958,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5958| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5958| 
        ; call occurs [#_scia_puts] ; [] |5958| 
	.dwpsn	file "../Source/prod.c",line 5956,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5956| 
	.dwpsn	file "../Source/prod.c",line 5958,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5958| 
	.dwpsn	file "../Source/prod.c",line 5956,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5956| 
        ; branch occurs ; [] |5956| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5952,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5952| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5952| 
        ADD       AH,AL                 ; [CPU_] |5952| 
        MOV       *-SP[7],AH            ; [CPU_] |5952| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5952| 
        MOVL      XAR4,XAR1             ; [CPU_] |5952| 
        MOV       *-SP[3],AH            ; [CPU_] |5952| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_sprintf")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5952| 
        ; call occurs [#_sprintf] ; [] |5952| 
	.dwpsn	file "../Source/prod.c",line 5953,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5953| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5953| 
        ; call occurs [#_scia_puts] ; [] |5953| 
        MOV       AL,*-SP[7]            ; [CPU_] |5953| 
	.dwpsn	file "../Source/prod.c",line 5951,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5951| 
        ; branch occurs ; [] |5951| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5908,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5908| 
$C$L29:    
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_scia_puts")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5908| 
        ; call occurs [#_scia_puts] ; [] |5908| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$173, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$173, DW_AT_TI_end_line(0x1762)
	.dwattr $C$DW$173, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$173

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$228	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$228, DW_AT_name("print_limits")
	.dwattr $C$DW$228, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$228, DW_AT_high_pc(0x00)
	.dwattr $C$DW$228, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$228, DW_AT_external
	.dwattr $C$DW$228, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$228, DW_AT_TI_begin_line(0x17a9)
	.dwattr $C$DW$228, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$228, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 6057,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$229	.dwtag  DW_TAG_variable
	.dwattr $C$DW$229, DW_AT_name("buff")
	.dwattr $C$DW$229, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$229, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$229, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 6057 | void print_limits(void) {                                              
; 6058 | int ii;                                                                
; 6059 | static char buff[64];                                                  
; 6060 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$230	.dwtag  DW_TAG_variable
	.dwattr $C$DW$230, DW_AT_name("ii")
	.dwattr $C$DW$230, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$230, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$230, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$231	.dwtag  DW_TAG_variable
	.dwattr $C$DW$231, DW_AT_name("up")
	.dwattr $C$DW$231, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$231, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$231, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 6062,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6062 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |6062| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_scia_puts")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6062| 
        ; call occurs [#_scia_puts] ; [] |6062| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6064,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6064 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |6064| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#1591 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 6065,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6065 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |6065| 
        MOVB      AL,#1                 ; [CPU_] |6065| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6065| 
        ADD       AL,*-SP[9]            ; [CPU_] |6065| 
        MOVL      XAR4,XAR2             ; [CPU_] |6065| 
        MOV       *-SP[3],AL            ; [CPU_] |6065| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_sprintf")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6065| 
        ; call occurs [#_sprintf] ; [] |6065| 
	.dwpsn	file "../Source/prod.c",line 6066,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6066 | scia_puts(buff);                                                       
; 6068 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6066| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_scia_puts")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6066| 
        ; call occurs [#_scia_puts] ; [] |6066| 
	.dwpsn	file "../Source/prod.c",line 6070,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6070 | switch (conf_data.lim[ii].what) {                                      
; 6071 | case VFD_LOAD:                                                         
; 6072 | case VFD_PEAK:                                                         
; 6073 | case VFD_VALL:                                                         
; 6074 |         up =                                                           
; 6075 |                         UNITS[0x0f                                     
; 6076 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 6077 |         break;                                                         
; 6078 | case VFD_POSI:                                                         
; 6079 |         up = POS_U;                                                    
; 6080 |         break;                                                         
; 6081 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |6070| 
        B         $C$L40,NTC            ; [CPU_] |6070| 
        ; branchcc occurs ; [] |6070| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |6070| 
        CMPB      AL,#2                 ; [CPU_] |6070| 
        B         $C$L32,LOS            ; [CPU_] |6070| 
        ; branchcc occurs ; [] |6070| 
        CMPB      AL,#3                 ; [CPU_] |6070| 
        B         $C$L31,EQ             ; [CPU_] |6070| 
        ; branchcc occurs ; [] |6070| 
        CMPB      AL,#4                 ; [CPU_] |6070| 
        B         $C$L33,NEQ            ; [CPU_] |6070| 
        ; branchcc occurs ; [] |6070| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6082,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6082 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |6082| 
	.dwpsn	file "../Source/prod.c",line 6083,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6083 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |6083| 
        ; branch occurs ; [] |6083| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 6079,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |6079| 
	.dwpsn	file "../Source/prod.c",line 6080,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |6080| 
        ; branch occurs ; [] |6080| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 6074,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |6074| 
        MOV       T,#10                 ; [CPU_] |6074| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |6074| 
        ADDL      ACC,XAR6              ; [CPU_] |6074| 
        MOVL      XAR4,ACC              ; [CPU_] |6074| 
        MOVB      XAR0,#42              ; [CPU_] |6074| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6074| 
        MPYB      ACC,T,#152            ; [CPU_] |6074| 
        ADDL      ACC,XAR6              ; [CPU_] |6074| 
        MOVL      XAR4,ACC              ; [CPU_] |6074| 
        MOVB      XAR0,#125             ; [CPU_] |6074| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6074| 
        ANDB      AL,#0x0f              ; [CPU_] |6074| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6074| 
        MOV       ACC,AL << 1           ; [CPU_] |6074| 
        ADDL      XAR4,ACC              ; [CPU_] |6074| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |6074| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 6086,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6086 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 6087 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |6086| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6086| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |6086| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6086| 
        ADDL      XAR4,ACC              ; [CPU_] |6086| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6086| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6086| 
        MOVL      XAR4,XAR2             ; [CPU_] |6086| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |6086| 
        ADDB      AL,#1                 ; [CPU_] |6086| 
        MOV       *-SP[5],AL            ; [CPU_] |6086| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_sprintf")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6086| 
        ; call occurs [#_sprintf] ; [] |6086| 
	.dwpsn	file "../Source/prod.c",line 6088,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6088 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6088| 
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6088| 
        ; call occurs [#_scia_puts] ; [] |6088| 
	.dwpsn	file "../Source/prod.c",line 6089,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6089 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 6090 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 6091 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 6092 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |6089| 
        B         $C$L34,TC             ; [CPU_] |6089| 
        ; branchcc occurs ; [] |6089| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |6089| 
        B         $C$L35,UNC            ; [CPU_] |6089| 
        ; branch occurs ; [] |6089| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |6089| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |6089| 
        B         $C$L36,TC             ; [CPU_] |6089| 
        ; branchcc occurs ; [] |6089| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |6089| 
        B         $C$L37,UNC            ; [CPU_] |6089| 
        ; branch occurs ; [] |6089| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |6089| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |6089| 
        B         $C$L38,TC             ; [CPU_] |6089| 
        ; branchcc occurs ; [] |6089| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |6089| 
        B         $C$L39,UNC            ; [CPU_] |6089| 
        ; branch occurs ; [] |6089| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |6089| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |6089| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |6089| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |6089| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |6089| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |6089| 
        MOVL      XAR4,XAR2             ; [CPU_] |6089| 
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_name("_sprintf")
	.dwattr $C$DW$237, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6089| 
        ; call occurs [#_sprintf] ; [] |6089| 
	.dwpsn	file "../Source/prod.c",line 6093,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6093 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6093| 
$C$DW$238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$238, DW_AT_name("_scia_puts")
	.dwattr $C$DW$238, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6093| 
        ; call occurs [#_scia_puts] ; [] |6093| 
	.dwpsn	file "../Source/prod.c",line 6094,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6094 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 6095 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |6094| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6094| 
        MOVL      XAR4,XAR2             ; [CPU_] |6094| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |6094| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6094| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6094| 
$C$DW$239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$239, DW_AT_name("_sprintf")
	.dwattr $C$DW$239, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6094| 
        ; call occurs [#_sprintf] ; [] |6094| 
	.dwpsn	file "../Source/prod.c",line 6096,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6096 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6096| 
$C$DW$240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$240, DW_AT_name("_scia_puts")
	.dwattr $C$DW$240, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6096| 
        ; call occurs [#_scia_puts] ; [] |6096| 
	.dwpsn	file "../Source/prod.c",line 6097,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6097 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6098 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6097| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6097| 
        MOVL      XAR4,XAR2             ; [CPU_] |6097| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6097| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6097| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6097| 
$C$DW$241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$241, DW_AT_name("_sprintf")
	.dwattr $C$DW$241, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6097| 
        ; call occurs [#_sprintf] ; [] |6097| 
	.dwpsn	file "../Source/prod.c",line 6099,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6099 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6099| 
	.dwpsn	file "../Source/prod.c",line 6100,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6100 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6100| 
        ; branch occurs ; [] |6100| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6101,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6101 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6101| 
$C$L41:    
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6101| 
        ; call occurs [#_scia_puts] ; [] |6101| 
	.dwpsn	file "../Source/prod.c",line 6064,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |6064| 
        INC       *-SP[9]               ; [CPU_] |6064| 
        MOV       AL,*-SP[9]            ; [CPU_] |6064| 
        CMPB      AL,#4                 ; [CPU_] |6064| 
        B         $C$L30,LT             ; [CPU_] |6064| 
        ; branchcc occurs ; [] |6064| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$228, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$228, DW_AT_TI_end_line(0x17d8)
	.dwattr $C$DW$228, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$228

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$244	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$244, DW_AT_name("print_dac")
	.dwattr $C$DW$244, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$244, DW_AT_high_pc(0x00)
	.dwattr $C$DW$244, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$244, DW_AT_external
	.dwattr $C$DW$244, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$244, DW_AT_TI_begin_line(0x1785)
	.dwattr $C$DW$244, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$244, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 6021,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$245	.dwtag  DW_TAG_variable
	.dwattr $C$DW$245, DW_AT_name("buff")
	.dwattr $C$DW$245, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$245, DW_AT_type(*$C$DW$T$382)
	.dwattr $C$DW$245, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 6021 | void print_dac(void) {                                                 
; 6022 | int l;                                                                 
; 6023 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$246	.dwtag  DW_TAG_variable
	.dwattr $C$DW$246, DW_AT_name("l")
	.dwattr $C$DW$246, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$246, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$246, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 6025,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6025 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |6025| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_scia_puts")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6025| 
        ; call occurs [#_scia_puts] ; [] |6025| 
	.dwpsn	file "../Source/prod.c",line 6027,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |6027| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3134 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 6028,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6028 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |6028| 
        MOVB      AL,#1                 ; [CPU_] |6028| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6028| 
        ADD       AL,AR1                ; [CPU_] |6028| 
        MOV       *-SP[3],AL            ; [CPU_] |6028| 
        MOVL      XAR4,XAR3             ; [CPU_] |6028| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_sprintf")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6028| 
        ; call occurs [#_sprintf] ; [] |6028| 
	.dwpsn	file "../Source/prod.c",line 6029,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6029 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6029| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_scia_puts")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6029| 
        ; call occurs [#_scia_puts] ; [] |6029| 
	.dwpsn	file "../Source/prod.c",line 6031,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6031 | sprintf(buff,                                                          
; 6032 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 6033 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 6034 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |6031| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6031| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6031| 
        MOVL      XAR4,XAR3             ; [CPU_] |6031| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6031| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |6031| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6031| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |6031| 
        MOVL      *-SP[8],ACC           ; [CPU_] |6031| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_sprintf")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6031| 
        ; call occurs [#_sprintf] ; [] |6031| 
	.dwpsn	file "../Source/prod.c",line 6035,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6035 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6035| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6035| 
        ; call occurs [#_scia_puts] ; [] |6035| 
	.dwpsn	file "../Source/prod.c",line 6037,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6037 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |6037| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6037| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |6037| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6037| 
        ADDL      XAR4,ACC              ; [CPU_] |6037| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |6037| 
        MOVL      XAR4,XAR3             ; [CPU_] |6037| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6037| 
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_sprintf")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6037| 
        ; call occurs [#_sprintf] ; [] |6037| 
	.dwpsn	file "../Source/prod.c",line 6038,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6038 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6038| 
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6038| 
        ; call occurs [#_scia_puts] ; [] |6038| 
	.dwpsn	file "../Source/prod.c",line 6040,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6040 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6040| 
        CMPB      AL,#7                 ; [CPU_] |6040| 
        B         $C$L43,EQ             ; [CPU_] |6040| 
        ; branchcc occurs ; [] |6040| 
	.dwpsn	file "../Source/prod.c",line 6041,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6041 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |6041| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6041| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6041| 
        ADDB      AL,#1                 ; [CPU_] |6041| 
        MOVL      XAR4,XAR3             ; [CPU_] |6041| 
        MOV       *-SP[3],AL            ; [CPU_] |6041| 
$C$DW$254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$254, DW_AT_name("_sprintf")
	.dwattr $C$DW$254, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6041| 
        ; call occurs [#_sprintf] ; [] |6041| 
	.dwpsn	file "../Source/prod.c",line 6042,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6042 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |6042| 
$C$DW$255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$255, DW_AT_name("_scia_puts")
	.dwattr $C$DW$255, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6042| 
        ; call occurs [#_scia_puts] ; [] |6042| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 6045,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6045 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 6046 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 6047 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 6048 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 6049 |         scia_puts(buff);                                               
; 6050 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6045| 
        CMPB      AL,#3                 ; [CPU_] |6045| 
        B         $C$L44,EQ             ; [CPU_] |6045| 
        ; branchcc occurs ; [] |6045| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |6045| 
        CMPB      AL,#4                 ; [CPU_] |6045| 
        B         $C$L44,EQ             ; [CPU_] |6045| 
        ; branchcc occurs ; [] |6045| 
	.dwpsn	file "../Source/prod.c",line 6051,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6051 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |6051| 
        B         $C$L45,UNC            ; [CPU_] |6051| 
        ; branch occurs ; [] |6051| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 6047,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |6047| 
        MOVB      XAR0,#8               ; [CPU_] |6047| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6047| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6047| 
        MOVB      XAR0,#10              ; [CPU_] |6047| 
        MOVL      XAR4,XAR3             ; [CPU_] |6047| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6047| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |6047| 
        MOVL      *-SP[6],ACC           ; [CPU_] |6047| 
$C$DW$256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$256, DW_AT_name("_sprintf")
	.dwattr $C$DW$256, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6047| 
        ; call occurs [#_sprintf] ; [] |6047| 
	.dwpsn	file "../Source/prod.c",line 6049,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |6049| 
$C$L45:    
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("_scia_puts")
	.dwattr $C$DW$257, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6049| 
        ; call occurs [#_scia_puts] ; [] |6049| 
	.dwpsn	file "../Source/prod.c",line 6027,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |6027| 
        ADDB      XAR2,#12              ; [CPU_] |6027| 
        MOV       AL,AR1                ; [CPU_] |6027| 
        CMPB      AL,#4                 ; [CPU_] |6027| 
        B         $C$L42,LT             ; [CPU_] |6027| 
        ; branchcc occurs ; [] |6027| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$244, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$244, DW_AT_TI_end_line(0x17a6)
	.dwattr $C$DW$244, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$244

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$259	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$259, DW_AT_name("print_channel")
	.dwattr $C$DW$259, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$259, DW_AT_high_pc(0x00)
	.dwattr $C$DW$259, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$259, DW_AT_external
	.dwattr $C$DW$259, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$259, DW_AT_TI_begin_line(0x16f3)
	.dwattr $C$DW$259, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$259, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5875,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$260	.dwtag  DW_TAG_variable
	.dwattr $C$DW$260, DW_AT_name("buff")
	.dwattr $C$DW$260, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$260, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$260, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$261	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$261, DW_AT_name("ch")
	.dwattr $C$DW$261, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$261, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$261, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$262	.dwtag  DW_TAG_variable
	.dwattr $C$DW$262, DW_AT_name("ch")
	.dwattr $C$DW$262, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$262, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$262, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5875 | void print_channel(Uint16 ch) {                                        
; 5876 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5875| 
	.dwpsn	file "../Source/prod.c",line 5878,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5878 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5878| 
        MOVZ      AR1,AR2               ; [CPU_] |5878| 
        MOVB      AH,#1                 ; [CPU_] |5878| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5878| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5878| 
        ADD       AH,AR1                ; [CPU_] |5878| 
        MOVL      XAR4,XAR3             ; [CPU_] |5878| 
        MOV       *-SP[3],AH            ; [CPU_] |5878| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_sprintf")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5878| 
        ; call occurs [#_sprintf] ; [] |5878| 
	.dwpsn	file "../Source/prod.c",line 5879,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5879 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5879| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_scia_puts")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5879| 
        ; call occurs [#_scia_puts] ; [] |5879| 
	.dwpsn	file "../Source/prod.c",line 5881,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5881 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5881| 
        MOV       T,AR1                 ; [CPU_] |5881| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5881| 
        MPYU      ACC,T,AL              ; [CPU_] |5881| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5881| 
        ADDL      XAR1,ACC              ; [CPU_] |5881| 
        MOVB      XAR0,#44              ; [CPU_] |5881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5881| 
        MOVL      XAR4,XAR3             ; [CPU_] |5881| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5881| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5881| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_sprintf")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5881| 
        ; call occurs [#_sprintf] ; [] |5881| 
	.dwpsn	file "../Source/prod.c",line 5882,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5882 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5882| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("_scia_puts")
	.dwattr $C$DW$266, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5882| 
        ; call occurs [#_scia_puts] ; [] |5882| 
	.dwpsn	file "../Source/prod.c",line 5892,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5892 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5892| 
        MOVB      XAR0,#42              ; [CPU_] |5892| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5892| 
        MOVL      XAR4,XAR3             ; [CPU_] |5892| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5892| 
        ADDB      AL,#1                 ; [CPU_] |5892| 
        MOV       *-SP[3],AL            ; [CPU_] |5892| 
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_name("_sprintf")
	.dwattr $C$DW$267, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5892| 
        ; call occurs [#_sprintf] ; [] |5892| 
	.dwpsn	file "../Source/prod.c",line 5893,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5893 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5893| 
$C$DW$268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$268, DW_AT_name("_scia_puts")
	.dwattr $C$DW$268, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5893| 
        ; call occurs [#_scia_puts] ; [] |5893| 
	.dwpsn	file "../Source/prod.c",line 5895,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5895 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5895| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5895| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5895| 
        B         $C$L46,EQ             ; [CPU_] |5895| 
        ; branchcc occurs ; [] |5895| 
	.dwpsn	file "../Source/prod.c",line 5896,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5896 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5896| 
$C$DW$269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$269, DW_AT_name("_scia_puts")
	.dwattr $C$DW$269, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5896| 
        ; call occurs [#_scia_puts] ; [] |5896| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$270, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$259, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$259, DW_AT_TI_end_line(0x170a)
	.dwattr $C$DW$259, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$259

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$271	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$271, DW_AT_name("matchTag")
	.dwattr $C$DW$271, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$271, DW_AT_high_pc(0x00)
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$271, DW_AT_external
	.dwattr $C$DW$271, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$271, DW_AT_TI_begin_line(0x16cf)
	.dwattr $C$DW$271, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$271, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5839,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$272	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$272, DW_AT_name("ch")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5839 | void matchTag(Uint16 ch) {                                             
; 5840 | Uint16 sns;                                                            
; 5841 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$273	.dwtag  DW_TAG_variable
	.dwattr $C$DW$273, DW_AT_name("ch")
	.dwattr $C$DW$273, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$273, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$273, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$274	.dwtag  DW_TAG_variable
	.dwattr $C$DW$274, DW_AT_name("sns")
	.dwattr $C$DW$274, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$274, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$274, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$275	.dwtag  DW_TAG_variable
	.dwattr $C$DW$275, DW_AT_name("tag")
	.dwattr $C$DW$275, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$275, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$275, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U25
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5843,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5843 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5843| 
	.dwpsn	file "../Source/prod.c",line 5839,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5839| 
	.dwpsn	file "../Source/prod.c",line 5843,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5843| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5843| 
        MOVL      XAR1,ACC              ; [CPU_] |5843| 
	.dwpsn	file "../Source/prod.c",line 5845,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5845 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5845| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5845| 
	.dwpsn	file "../Source/prod.c",line 5843,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5843| 
	.dwpsn	file "../Source/prod.c",line 5845,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5846 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5845| 
        B         $C$L50,EQ             ; [CPU_] |5845| 
        ; branchcc occurs ; [] |5845| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |5845| 
        B         $C$L50,HIS            ; [CPU_] |5845| 
        ; branchcc occurs ; [] |5845| 
	.dwpsn	file "../Source/prod.c",line 5849,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5849 | tag = tagid(ch);                                                       
; 5850 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5851 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_name("_tagid")
	.dwattr $C$DW$276, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5849| 
        ; call occurs [#_tagid] ; [] |5849| 
        MOVB      XAR6,#0               ; [CPU_] |5849| 
        MOVL      XAR3,ACC              ; [CPU_] |5849| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5849| 
        MOV       *-SP[2],#0            ; [CPU_] |5849| 
        MOV       *-SP[1],#0            ; [CPU_] |5849| 
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$277, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5849| 
        ; call occurs [#ULL$$CMP] ; [] |5849| 
        CMPB      AL,#0                 ; [CPU_] |5849| 
        B         $C$L50,EQ             ; [CPU_] |5849| 
        ; branchcc occurs ; [] |5849| 
        MOVB      ACC,#0                ; [CPU_] |5849| 
        SUBB      ACC,#1                ; [CPU_] |5849| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5849| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5849| 
        MOVL      ACC,XAR3              ; [CPU_] |5849| 
$C$DW$278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$278, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$278, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5849| 
        ; call occurs [#ULL$$CMP] ; [] |5849| 
        CMPB      AL,#0                 ; [CPU_] |5849| 
        B         $C$L50,EQ             ; [CPU_] |5849| 
        ; branchcc occurs ; [] |5849| 
	.dwpsn	file "../Source/prod.c",line 5852,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5852 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5852| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5852| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5852| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5854,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5854 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5856 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5854| 
        ADDB      XAR0,#114             ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5857,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5857 | continue;                       // not calibrated                      
; 5860 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5857| 
        B         $C$L48,EQ             ; [CPU_] |5857| 
        ; branchcc occurs ; [] |5857| 
	.dwpsn	file "../Source/prod.c",line 5861,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5861 | continue;                       // doesn't match, skip                 
; 5864 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5861| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5861| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5861| 
        MOVL      ACC,XAR3              ; [CPU_] |5861| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5861| 
$C$DW$279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$279, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$279, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5861| 
        ; call occurs [#ULL$$CMP] ; [] |5861| 
        CMPB      AL,#0                 ; [CPU_] |5861| 
        B         $C$L49,EQ             ; [CPU_] |5861| 
        ; branchcc occurs ; [] |5861| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5854,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5854| 
        MOVL      XAR0,ACC              ; [CPU_] |5854| 
        ADDB      XAR4,#1               ; [CPU_] |5854| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5854| 
        ; branchcc occurs ; [] |5854| 
        B         $C$L50,UNC            ; [CPU_] |5854| 
        ; branch occurs ; [] |5854| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5865,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5865 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5865| 
	.dwpsn	file "../Source/prod.c",line 5866,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5866 | conf_data.ch[ch].ci = sns;                                             
; 5868 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5866| 
        MOV       T,*-SP[5]             ; [CPU_] |5866| 
        MPYU      ACC,T,AL              ; [CPU_] |5866| 
        ADDL      ACC,XAR2              ; [CPU_] |5866| 
        MOVL      XAR5,ACC              ; [CPU_] |5866| 
        MOVB      XAR0,#42              ; [CPU_] |5866| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5866| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$280, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$271, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$271, DW_AT_TI_end_line(0x16ef)
	.dwattr $C$DW$271, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$271

	.sect	".text"
	.clink
	.global	_main

$C$DW$281	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$281, DW_AT_name("main")
	.dwattr $C$DW$281, DW_AT_low_pc(_main)
	.dwattr $C$DW$281, DW_AT_high_pc(0x00)
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$281, DW_AT_external
	.dwattr $C$DW$281, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$281, DW_AT_TI_begin_line(0x7e)
	.dwattr $C$DW$281, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$281, DW_AT_TI_max_frame_size(-152)
	.dwpsn	file "../Source/prod.c",line 126,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$282	.dwtag  DW_TAG_variable
	.dwattr $C$DW$282, DW_AT_name("buff")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("cmdbuff")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$375)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 126 | void main(void) {                                                      
; 127 | int i, j, k;                            // general purpose indics      
; 129 | double version;                 // for firmware version print          
; 131 | static char buff[1024];         // output buffer                       
; 133 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 134 | Uint16 cmdlen;                  // the length of the command           
; 136 | adccnt_t* cntp;                 // point to ad7738 count data          
; 137 | adcwt_t* wtp;                           // point to ad7738 load data   
; 139 | Uint16 ch;                              // channel number              
; 140 | Uint16 ss;                              // sensor number               
; 141 | Uint16 pt;                              // point number                
; 143 | Uint16 tagch = 0;                       // channel number for autoid   
; 145 | char unsaved = 0;                       // change to setup not saved   
; 147 | Uint16 slen;                            // string lenght               
; 149 | double scale;                           // input float value           
; 151 | Uint16 flash_ret;                       // return value of flash access
; 152 | double tempvalue;                       // temperature value in F      
; 154 | double volt[3];                 // input value in mv/v                 
; 155 | long long dsum[2];                      // read count for input value  
; 156 | Uint16 dacc[3];                 // dac out count                       
; 157 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 159 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 161 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 163 | Uint16 line;                            // vfd diplay line             
; 165 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 167 | int ds_en = 0;                  // enabled for data streamming         
; 168 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 169 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 170 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 171 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 172 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 173 | Uint16 ds_sn = 0;                       // data packet serial number   
; 174 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 176 | Uint32 temp32;                                                         
; 177 | float ftemp;                                                           
; 178 | long templg;                                                           
; 179 | Uint16 temp16;                                                         
; 180 | int tempint;                                                           
; 181 | double tempft;                                                         
; 183 | Uint16 *intp;                                                          
; 185 | const char *ccp;                                                       
; 187 | #ifdef SDHCCARD                                                        
; 188 | FATFS *fs;                              // pointer to fatfs            
; 190 | FRESULT res;// Fatfs reseult code                                      
; 191 | FIL *fp;// pointer to file object                                      
; 193 | Uint32 fsize;                                                          
; 195 | char sd_write;// should write to SD card                               
; 196 | char sd_close;// file need to be closed                                
; 197 | Uint32 sd_cnt;                                                         
; 199 | FILINFO Finfo;                                                         
; 200 | DIR dir;// Directory object                                            
; 201 | long p1;                                                               
; 202 | UINT s1, s2;                                                           
; 204 | rtc.year = 2010;                                                       
; 205 | rtc.month = 8;                                                         
; 206 | rtc.mday = 27;                                                         
; 207 | rtc.hour = 12;                                                         
; 208 | rtc.min = 0;                                                           
; 209 | rtc.sec = 0;                                                           
; 210 | #endif                                                                 
; 212 | // KS - 2014-02-11                                                     
; 213 | //DownloadFlag = 0;     // removed for release                         
; 215 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 150           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 133 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AR4   assigned to $O$C42
;* AR5   assigned to $O$C43
;* AR1   assigned to $O$C44
;* PL    assigned to $O$C45
;* AR6   assigned to $O$C46
;* AL    assigned to $O$C47
;* AR1   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C54
;* AL    assigned to $O$C55
;* AL    assigned to $O$C57
;* AR1   assigned to $O$C58
;* AH    assigned to $O$C59
;* AL    assigned to $O$C60
;* AL    assigned to $O$C61
;* AR5   assigned to $O$C62
;* AR4   assigned to $O$C63
;* AL    assigned to $O$C65
;* AL    assigned to $O$C67
;* AL    assigned to $O$C68
;* AL    assigned to $O$C69
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C73
;* AL    assigned to $O$C75
;* AL    assigned to $O$C77
;* AH    assigned to $O$C78
;* AL    assigned to $O$C79
;* AR1   assigned to $O$C80
;* AR1   assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR3   assigned to $O$C86
;* AL    assigned to $O$C88
;* AR6   assigned to $O$C89
;* AR1   assigned to $O$C90
;* AL    assigned to $O$C92
;* AR5   assigned to $O$C93
;* AL    assigned to $O$C94
;* AH    assigned to $O$C95
;* AR7   assigned to $O$C97
;* AR5   assigned to $O$C98
;* AR4   assigned to $O$C99
;* AL    assigned to $O$C100
;* AR3   assigned to $O$C101
;* AL    assigned to $O$C102
;* AR1   assigned to $O$C104
;* AR1   assigned to $O$C105
;* AR5   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR1   assigned to $O$C109
;* AR1   assigned to $O$C110
;* AR1   assigned to $O$C111
;* AH    assigned to $O$C112
;* AH    assigned to $O$C113
;* AR1   assigned to $O$C114
;* AL    assigned to $O$C115
;* AR1   assigned to $O$C116
;* AR5   assigned to $O$C118
;* AR1   assigned to $O$C119
;* AL    assigned to $O$C120
;* AL    assigned to $O$C121
;* AR1   assigned to $O$C122
;* AR1   assigned to $O$C124
;* AR7   assigned to $O$C125
;* AL    assigned to $O$C126
;* AR4   assigned to $O$C127
;* AR1   assigned to $O$C128
;* AL    assigned to $O$C129
;* AR1   assigned to $O$C130
;* AR1   assigned to $O$C131
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C137
;* AL    assigned to $O$C139
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AR4   assigned to $O$C142
;* AR5   assigned to $O$C143
;* AR5   assigned to $O$C144
;* AR0   assigned to $O$W1
;* AR4   assigned to $O$U143
;* AR1   assigned to $O$U330
;* AR1   assigned to $O$U359
;* AR1   assigned to $O$U568
;* AR1   assigned to $O$U696
;* AR1   assigned to $O$U795
;* AR1   assigned to $O$U832
;* AR5   assigned to $O$U848
;* AL    assigned to $O$U1006
;* AR1   assigned to $O$U984
;* AR1   assigned to $O$U1074
;* AR1   assigned to $O$U974
;* AR6   assigned to $O$U1275
;* AR1   assigned to $O$U1301
;* AR7   assigned to $O$U1537
;* XT    assigned to $O$U1564
;* PL    assigned to $O$U1565
;* AR5   assigned to $O$U1589
;* PL    assigned to $O$U1594
;* PL    assigned to $O$U1601
;* AR7   assigned to $O$U1603
;* AR5   assigned to $O$U1604
;* AR5   assigned to $O$U1618
;* XT    assigned to $O$U1660
;* PL    assigned to $O$U1661
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L42
;* AR3   assigned to $O$L54
;* AR3   assigned to $O$L57
;* AR3   assigned to $O$L111
$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("ccp")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_breg20 -104]

$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("tempft")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_breg20 -12]

$C$DW$286	.dwtag  DW_TAG_variable
	.dwattr $C$DW$286, DW_AT_name("templg")
	.dwattr $C$DW$286, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$286, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$286, DW_AT_location[DW_OP_breg20 -14]

$C$DW$287	.dwtag  DW_TAG_variable
	.dwattr $C$DW$287, DW_AT_name("ds_ct")
	.dwattr $C$DW$287, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$287, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$287, DW_AT_location[DW_OP_breg20 -47]

$C$DW$288	.dwtag  DW_TAG_variable
	.dwattr $C$DW$288, DW_AT_name("ds_sn")
	.dwattr $C$DW$288, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$288, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$288, DW_AT_location[DW_OP_breg20 -49]

$C$DW$289	.dwtag  DW_TAG_variable
	.dwattr $C$DW$289, DW_AT_name("ds_bm")
	.dwattr $C$DW$289, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$289, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$289, DW_AT_location[DW_OP_breg20 -50]

$C$DW$290	.dwtag  DW_TAG_variable
	.dwattr $C$DW$290, DW_AT_name("ds_dec")
	.dwattr $C$DW$290, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$290, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$290, DW_AT_location[DW_OP_breg20 -51]

$C$DW$291	.dwtag  DW_TAG_variable
	.dwattr $C$DW$291, DW_AT_name("ds_dn")
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$291, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$291, DW_AT_location[DW_OP_breg20 -52]

$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("ds_stop")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_breg20 -53]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("ds_en")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_breg20 -54]

$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("bincmdresult")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -47]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("line")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -55]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("daccbm")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -56]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("tempvalue")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -106]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("scale")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -16]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("unsaved")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -48]

$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("tagch")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_breg20 -143]

$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("ss")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_breg20 -57]

$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("ch")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_breg20 -58]

$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("version")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_breg20 -18]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR4   assigned to $O$U31
;* AR7   assigned to $O$U31
;* AR5   assigned to $O$U35
;* AR5   assigned to $O$U35
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR7   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR5   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR4   assigned to $O$U258
;* AR1   assigned to $O$U258
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U427
;* AR1   assigned to $O$U427
;* AR1   assigned to $O$U427
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR1   assigned to $O$U405
;* AR5   assigned to $O$U405
;* AR7   assigned to $O$U405
;* AR1   assigned to $O$U296
;* AR1   assigned to $O$U589
;* AR1   assigned to $O$U589
;* AR1   assigned to $O$U634
;* AR1   assigned to $O$U634
;* AR4   assigned to $O$K823
;* AR4   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR4   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR5   assigned to $O$K823
;* AR5   assigned to $O$K823
;* AR1   assigned to $O$K823
;* AR1   assigned to $O$U877
;* AR1   assigned to $O$U877
;* AR1   assigned to $O$U899
;* AR3   assigned to $O$U899
;* AR1   assigned to $O$U899
;* AR6   assigned to $O$U857
;* AL    assigned to $O$U857
;* AR1   assigned to $O$U925
;* AR1   assigned to $O$U925
;* AR1   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR5   assigned to $O$U1005
;* AR5   assigned to $O$U1005
;* AR5   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR4   assigned to $O$U1005
;* AR4   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR7   assigned to $O$U1005
;* AR1   assigned to $O$K313
;* AR7   assigned to $O$U1140
;* AR7   assigned to $O$U1140
;* AR7   assigned to $O$U1140
;* AR7   assigned to $O$U1140
;* AR4   assigned to $O$U1142
;* AR4   assigned to $O$U1142
;* AR4   assigned to $O$U1142
;* AR4   assigned to $O$U1142
;* AR3   assigned to $O$U1176
;* AR1   assigned to $O$U1176
;* AR1   assigned to $O$U1176
;* AR1   assigned to $O$U1182
;* AR4   assigned to $O$U1194
;* AR4   assigned to $O$U1191
;* AR7   assigned to $O$U1191
;* PL    assigned to $O$U1191
;* AR7   assigned to $O$U1191
;* AR4   assigned to $O$U1191
;* AR5   assigned to $O$U1251
;* AR4   assigned to $O$U1251
;* AR5   assigned to $O$U1330
;* AR5   assigned to $O$U1330
;* AR4   assigned to $O$U1326
;* AR4   assigned to $O$U1326
;* AR5   assigned to $O$U1385
;* AR5   assigned to $O$U1385
;* PL    assigned to $O$U1391
;* AR7   assigned to $O$U1391
;* AR6   assigned to $O$U1392
;* AR6   assigned to $O$U1392
;* AR5   assigned to $O$U1428
;* AR5   assigned to $O$U1428
;* PL    assigned to $O$U1431
;* AR1   assigned to $O$U1431
;* AR6   assigned to $O$U1432
;* AR7   assigned to $O$U1432
;* AR5   assigned to $O$U1470
;* AR5   assigned to $O$U1470
;* AR0   assigned to $O$U1505
;* AR5   assigned to $O$U1505
;* AR4   assigned to $O$U1540
;* AR1   assigned to $O$U1540
;* AR5   assigned to $O$U1540
;* AR5   assigned to $O$U1540
;* AR4   assigned to $O$U1629
;* AR5   assigned to $O$U1629
;* AR4   assigned to $O$U1629
;* AR5   assigned to $O$U1638
;* AR3   assigned to _intp
$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("intp")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_reg10]

;* AR3   assigned to _intp
$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("intp")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_reg10]

;* AR6   assigned to _intp
$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("intp")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("intp")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("intp")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("intp")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("intp")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("intp")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("intp")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("intp")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("intp")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg12]

;* AR1   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("intp")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("intp")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("intp")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$168)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("tempint")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("tempint")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("temp16")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg10]

$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("temp16")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_breg20 -59]

$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("temp32")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_breg20 -64]

;* AL    assigned to _temp32
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("temp32")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("cmethod")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg6]

$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("cmethod")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _flash_ret
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("flash_ret")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("flash_ret")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("flash_ret")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("flash_ret")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("slen")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("slen")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("slen")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("slen")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("slen")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("slen")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("pt")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("pt")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg0]

$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("pt")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_breg20 -59]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("pt")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _pt
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("pt")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("pt")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("pt")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_reg12]

$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("pt")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _pt
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("pt")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("wtp")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("wtp")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("wtp")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("wtp")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_reg12]

$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("cmdlen")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_breg20 -59]

;* AL    assigned to _cmdlen
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("cmdlen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg0]

$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("cmdlen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_breg20 -47]

$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("cmdlen")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _cmdlen
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("cmdlen")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("cmdlen")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("cmdlen")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_reg0]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("k")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -59]

$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("k")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_breg20 -60]

$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("k")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_breg20 -60]

$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("k")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _k
$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("k")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_reg16]

$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("k")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_breg20 -59]

$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("k")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("k")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg2]

$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("k")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_breg20 -47]

;* PL    assigned to _k
$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("k")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("k")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("j")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_reg10]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("j")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -47]

$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("j")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_breg20 -47]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("j")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -47]

;* AR1   assigned to _j
$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("j")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_reg6]

$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("j")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_breg20 -47]

$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("j")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_breg20 -47]

$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("j")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_breg20 -47]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("j")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -47]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("j")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -60]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("j")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -60]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("j")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -47]

$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("j")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_breg20 -59]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("j")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -61]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("j")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -48]

$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("j")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_breg20 -48]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("j")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -48]

$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("j")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_breg20 -48]

$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("j")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_breg20 -48]

$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("j")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_breg20 -48]

$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("j")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_breg20 -47]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("j")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -61]

;* AR1   assigned to _i
$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("i")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("i")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("i")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_reg0]

$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("i")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_breg20 -47]

;* AR7   assigned to _i
$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("i")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("i")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _i
$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("i")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_reg18]

$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("i")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_breg20 -47]

;* AL    assigned to _i
$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("i")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("i")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("i")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("i")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_reg0]

$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("i")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_breg20 -47]

$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("i")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_breg20 -47]

$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("i")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_breg20 -48]

;* AL    assigned to _i
$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("i")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("i")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("i")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("i")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("i")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_reg16]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("i")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -47]

;* AR6   assigned to _i
$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("i")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_reg16]

$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("volt")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_breg20 -24]

$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("dsum")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$354)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_breg20 -32]

$C$DW$473	.dwtag  DW_TAG_variable
	.dwattr $C$DW$473, DW_AT_name("dacc")
	.dwattr $C$DW$473, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$473, DW_AT_type(*$C$DW$T$307)
	.dwattr $C$DW$473, DW_AT_location[DW_OP_breg20 -35]

$C$DW$474	.dwtag  DW_TAG_variable
	.dwattr $C$DW$474, DW_AT_name("sampcnt")
	.dwattr $C$DW$474, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$474, DW_AT_type(*$C$DW$T$335)
	.dwattr $C$DW$474, DW_AT_location[DW_OP_breg20 -38]

$C$DW$475	.dwtag  DW_TAG_variable
	.dwattr $C$DW$475, DW_AT_name("data")
	.dwattr $C$DW$475, DW_AT_TI_symbol_name("_data")
	.dwattr $C$DW$475, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$475, DW_AT_location[DW_OP_breg20 -46]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#144               ; [CPU_] 
	.dwcfi	cfa_offset, -152
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$476, DW_AT_name("_sys_init")
	.dwattr $C$DW$476, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |216| 
        ; call occurs [#_sys_init] ; [] |216| 
	.dwpsn	file "../Source/prod.c",line 218,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 218 | delay_us(30000);                        // delay for 30 ms             
; 220 | // Clear all interrupts and initialize PIE vector table:               
; 221 | // Disable CPU interrupts                                              
; 222 | DINT;                                                                  
; 223 | // Initialize PIE control registers to their default state.            
; 224 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 225 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |218| 
$C$DW$477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$477, DW_AT_name("_delay_us")
	.dwattr $C$DW$477, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |218| 
        ; call occurs [#_delay_us] ; [] |218| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | InitPieCtrl();                                                         
; 227 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$478, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$478, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |226| 
        ; call occurs [#_InitPieCtrl] ; [] |226| 
	.dwpsn	file "../Source/prod.c",line 228,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 228 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |228| 
	.dwpsn	file "../Source/prod.c",line 229,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 229 | IFR = 0x0000;                                                          
; 230 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 231 | // Service Routines (ISR).                                             
; 232 | // This will populate the entire table, even if the interrupt          
; 233 | // is not used in this example.  This is useful for debug purposes.    
; 234 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 235 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |229| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$479, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$479, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |236| 
        ; call occurs [#_InitPieVectTable] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$480, DW_AT_name("_gpio_init")
	.dwattr $C$DW$480, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |238| 
        ; call occurs [#_gpio_init] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$481, DW_AT_name("_extio_init")
	.dwattr $C$DW$481, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |239| 
        ; call occurs [#_extio_init] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 240,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 240 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$482, DW_AT_name("_InitECan")
	.dwattr $C$DW$482, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |240| 
        ; call occurs [#_InitECan] ; [] |240| 
	.dwpsn	file "../Source/prod.c",line 241,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 241 | configCAN();                                                           
; 243 | // Set SD select output as appropriate (Usually high)                  
; 244 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 257 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$483, DW_AT_name("_configCAN")
	.dwattr $C$DW$483, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |241| 
        ; call occurs [#_configCAN] ; [] |241| 
	.dwpsn	file "../Source/prod.c",line 258,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 258 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 259 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 261 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |258| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |258| 
        MOVL      ACC,XAR5              ; [CPU_] |258| 
        SUBL      XAR4,ACC              ; [CPU_] |258| 
        MOVL      ACC,XAR4              ; [CPU_] |258| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |258| 
$C$DW$484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$484, DW_AT_name("_memcpy")
	.dwattr $C$DW$484, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |258| 
        ; call occurs [#_memcpy] ; [] |258| 
	.dwpsn	file "../Source/prod.c",line 262,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 262 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 263 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |262| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |262| 
        MOVL      ACC,XAR5              ; [CPU_] |262| 
        SUBL      XAR4,ACC              ; [CPU_] |262| 
        MOVL      ACC,XAR4              ; [CPU_] |262| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |262| 
$C$DW$485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$485, DW_AT_name("_memcpy")
	.dwattr $C$DW$485, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |262| 
        ; call occurs [#_memcpy] ; [] |262| 
	.dwpsn	file "../Source/prod.c",line 280,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 280 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |280| 
        MOV       AH,#479               ; [CPU_] |280| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |280| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 290,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 290 | Flash_CallbackPtr = NULL;                                              
; 292 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |290| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |290| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$486, DW_AT_name("_flash_init")
	.dwattr $C$DW$486, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |293| 
        ; call occurs [#_flash_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 295,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 295 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$487, DW_AT_name("_led_init")
	.dwattr $C$DW$487, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |295| 
        ; call occurs [#_led_init] ; [] |295| 
	.dwpsn	file "../Source/prod.c",line 296,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 296 | lcd_init();                             // lcd/vfd display             
; 298 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$488, DW_AT_name("_lcd_init")
	.dwattr $C$DW$488, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |296| 
        ; call occurs [#_lcd_init] ; [] |296| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$489, DW_AT_name("_ssr_set")
	.dwattr $C$DW$489, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$490, DW_AT_name("_ssr_set")
	.dwattr $C$DW$490, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 302,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 302 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |302| 
        MOVB      AH,#0                 ; [CPU_] |302| 
$C$DW$491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$491, DW_AT_name("_ssr_set")
	.dwattr $C$DW$491, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |302| 
        ; call occurs [#_ssr_set] ; [] |302| 
	.dwpsn	file "../Source/prod.c",line 303,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 303 | ssr_set(3, 0);                  // indicate gui not connected          
; 305 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |303| 
        MOVB      AH,#0                 ; [CPU_] |303| 
$C$DW$492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$492, DW_AT_name("_ssr_set")
	.dwattr $C$DW$492, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |303| 
        ; call occurs [#_ssr_set] ; [] |303| 
	.dwpsn	file "../Source/prod.c",line 318,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_conf_read")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |318| 
        ; call occurs [#_conf_read] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |319| 
        MOV       AH,#21930             ; [CPU_] |319| 
        MOVW      DP,#_conf_data+3220   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3220  ; [CPU_] |319| 
        B         $C$L51,EQ             ; [CPU_] |319| 
        ; branchcc occurs ; [] |319| 
	.dwpsn	file "../Source/prod.c",line 320,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 320 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_conf_default")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |320| 
        ; call occurs [#_conf_default] ; [] |320| 
	.dwpsn	file "../Source/prod.c",line 321,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 321 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_conf_write")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |321| 
        ; call occurs [#_conf_write] ; [] |321| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |324| 
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |324| 
        ; call occurs [#_shunt_switch] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 326,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 326 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |326| 
        ; call occurs [#_ad7738_init] ; [] |326| 
	.dwpsn	file "../Source/prod.c",line 327,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 327 | ad7738_setcal();                                                       
; 329 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |327| 
        ; call occurs [#_ad7738_setcal] ; [] |327| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR4,#_autoid         ; [CPU_U] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 330,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 330 | autoid[i] = 0;                                                         
;----------------------------------------------------------------------
        MOV       *XAR4++,#0            ; [CPU_] |330| 
	.dwpsn	file "../Source/prod.c",line 331,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 331 | tagwasthere[i] = 0;                                                    
; 333 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOV       *XAR5++,#0            ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 329,column 14,is_stmt,isa 0
        BANZ      $C$L52,AR6--          ; [CPU_] |329| 
        ; branchcc occurs ; [] |329| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |335| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_delay_us")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |335| 
        ; call occurs [#_delay_us] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | lcd_clear();                                                           
; 338 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |337| 
        ; call occurs [#_lcd_clear] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |339| 
        MOVL      XAR0,#44              ; [CPU_] |339| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      *-SP[4],ACC           ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |339| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_sprintf")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |341| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |341| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |341| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |341| 
        MOVL      XAR4,XAR1             ; [CPU_] |341| 
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_sprintf")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |341| 
        ; call occurs [#_sprintf] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 342,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 342 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |342| 
        MOVL      XAR4,XAR1             ; [CPU_] |342| 
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |342| 
        ; call occurs [#_lcd_dputs] ; [] |342| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |343| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |343| 
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |343| 
        ; call occurs [#_lcd_dputs] ; [] |343| 
	.dwpsn	file "../Source/prod.c",line 345,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 345 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |345| 
	.dwpsn	file "../Source/prod.c",line 346,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |346| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 348,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 348 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |348| 
        TBIT      AL,#4                 ; [CPU_] |348| 
        B         $C$L54,TC             ; [CPU_] |348| 
        ; branchcc occurs ; [] |348| 
	.dwpsn	file "../Source/prod.c",line 349,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 349 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |349| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 352,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 352 | if (1 & i) {                                                           
; 353 |         led_set( LED1, LED_RED);                                       
; 354 |         led_set( LED2, LED_RED);                                       
; 355 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |352| 
        B         $C$L55,TC             ; [CPU_] |352| 
        ; branchcc occurs ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 356,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 356 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |356| 
        MOVB      AH,#2                 ; [CPU_] |356| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_led_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |356| 
        ; call occurs [#_led_set] ; [] |356| 
	.dwpsn	file "../Source/prod.c",line 357,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |357| 
        B         $C$L56,UNC            ; [CPU_] |357| 
        ; branch occurs ; [] |357| 
$C$L55:    
	.dwpsn	file "../Source/prod.c",line 353,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |353| 
        MOVB      AH,#1                 ; [CPU_] |353| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_led_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |353| 
        ; call occurs [#_led_set] ; [] |353| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |354| 
$C$L56:    
        MOVB      AL,#2                 ; [CPU_] |354| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_led_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 359,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 359 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |359| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_delay_us")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |359| 
        ; call occurs [#_delay_us] ; [] |359| 
	.dwpsn	file "../Source/prod.c",line 346,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |346| 
        MOV       AL,AR1                ; [CPU_] |346| 
        CMPB      AL,#100               ; [CPU_] |346| 
        B         $C$L53,LT             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 362,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 362 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |362| 
        MOVB      AH,#0                 ; [CPU_] |362| 
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_led_set")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |362| 
        ; call occurs [#_led_set] ; [] |362| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |363| 
        MOVB      AH,#0                 ; [CPU_] |363| 
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_led_set")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |363| 
        ; call occurs [#_led_set] ; [] |363| 
        MOV       AL,AR1                ; [CPU_] |363| 
	.dwpsn	file "../Source/prod.c",line 365,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 365 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |365| 
        CMPB      AL,#20                ; [CPU_] |365| 
        B         $C$L58,GEQ            ; [CPU_] |365| 
        ; branchcc occurs ; [] |365| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |366| 
        MOVL      XAR4,XAR5             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 368 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |368| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |366| 
        INC       *+XAR4[0]             ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 368,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |368| 
        CMPB      AL,#4                 ; [CPU_] |368| 
        B         $C$L57,LT             ; [CPU_] |368| 
        ; branchcc occurs ; [] |368| 
	.dwpsn	file "../Source/prod.c",line 369,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 369 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |369| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |369| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |372| 
        MOVB      AL,#40                ; [CPU_] |372| 
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |372| 
        ; call occurs [#_lcd_dputs] ; [] |372| 
	.dwpsn	file "../Source/prod.c",line 374,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 374 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_conf_write")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |374| 
        ; call occurs [#_conf_write] ; [] |374| 
$C$L58:    
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |377| 
        MOVL      XAR0,#74              ; [CPU_] |377| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |377| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |377| 
        MOVB      XAR0,#35              ; [CPU_] |377| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |377| 
        ADDL      XAR4,ACC              ; [CPU_] |377| 
        MOVL      XAR0,#88              ; [CPU_] |377| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 145,column 15,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |145| 
	.dwpsn	file "../Source/prod.c",line 157,column 13,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |157| 
	.dwpsn	file "../Source/prod.c",line 167,column 12,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |167| 
	.dwpsn	file "../Source/prod.c",line 168,column 14,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[52],#60          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 16,is_stmt,isa 0
        MOV       *-SP[51],#1           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 172,column 15,is_stmt,isa 0
        MOV       *-SP[50],#15          ; [CPU_] |172| 
	.dwpsn	file "../Source/prod.c",line 173,column 15,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |173| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
        MOVL      *+FP[AR0],ACC         ; [CPU_] |377| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |143| 
        MOV       *+FP[AR0],#0          ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 379,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 379 | switch (conf_data.rxdir) {                                             
; 380 | case SDIR_RS232:                        // RS232, 0                    
; 381 |         led_set( LED1, LED_RED);                                       
; 382 |         led_set( LED2, LED_RED);                                       
; 383 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 384 |         scia_init(temp32);                                             
; 385 |         break;                                                         
; 386 | case SDIR_RS485:                        // RS485, 1                    
; 387 |         led_set( LED1, LED_GREEN);                                     
; 388 |         led_set( LED2, LED_RED);                                       
; 389 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 390 |         scia_init(temp32);                                             
; 391 |         break;                                                         
; 392 | case SDIR_ENET:                 // Ethernet, 2                         
; 393 |         led_set( LED1, LED_RED);                                       
; 394 |         led_set( LED2, LED_GREEN);                                     
; 395 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 396 |         scia_init(921600L);                                            
; 397 |         //scia_init( 460800L );                                        
; 398 |         break;                                                         
; 399 | case SDIR_USB:                  // USB, 3                              
; 400 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 401 |         led_set( LED1, LED_GREEN);                                     
; 402 |         led_set( LED2, LED_GREEN);                                     
; 403 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 404 |         // the USB chip can't handle 921600bps without dropping bytes  
; 405 |         // it seems 460800bps is fine so far.                          
; 406 |         // the client (PC Host) side can use any baudrate.             
; 407 |         scia_init(460800L);                                            
; 408 |         break;                                                         
; 409 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |379| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |379| 
        B         $C$L64,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#1                 ; [CPU_] |379| 
        B         $C$L63,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#2                 ; [CPU_] |379| 
        B         $C$L60,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
        CMPB      AL,#3                 ; [CPU_] |379| 
        B         $C$L59,EQ             ; [CPU_] |379| 
        ; branchcc occurs ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |411| 
        MOVB      AH,#1                 ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_led_set")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |411| 
        ; call occurs [#_led_set] ; [] |411| 
	.dwpsn	file "../Source/prod.c",line 412,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 412 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |412| 
        MOVB      AH,#2                 ; [CPU_] |412| 
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_led_set")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |412| 
        ; call occurs [#_led_set] ; [] |412| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 414 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |413| 
        MOVL      XAR0,#72              ; [CPU_] |413| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |413| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |413| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |413| 
        MOVB      XAR0,#34              ; [CPU_] |413| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |413| 
	.dwpsn	file "../Source/prod.c",line 415,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L61,UNC            ; [CPU_] |415| 
        ; branch occurs ; [] |415| 
$C$L59:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |401| 
        MOVB      AH,#2                 ; [CPU_] |401| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |400| 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_led_set")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |401| 
        ; call occurs [#_led_set] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 402,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |402| 
        MOVB      AH,#2                 ; [CPU_] |402| 
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_led_set")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |402| 
        ; call occurs [#_led_set] ; [] |402| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 403,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |403| 
        MOVL      XAR0,#72              ; [CPU_] |403| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |403| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |403| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |403| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |403| 
        ADDL      XAR4,ACC              ; [CPU_] |403| 
        MOVL      XAR0,#44              ; [CPU_] |403| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |403| 
        MOVL      *-SP[4],ACC           ; [CPU_] |403| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |403| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_sprintf")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |403| 
        ; call occurs [#_sprintf] ; [] |403| 
	.dwpsn	file "../Source/prod.c",line 407,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |407| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        B         $C$L62,UNC            ; [CPU_] |408| 
        ; branch occurs ; [] |408| 
$C$L60:    
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |393| 
        MOVB      AH,#1                 ; [CPU_] |393| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_led_set")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |393| 
        ; call occurs [#_led_set] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |394| 
        MOVB      AH,#2                 ; [CPU_] |394| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_led_set")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |394| 
        ; call occurs [#_led_set] ; [] |394| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 395,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |395| 
        MOVL      XAR0,#72              ; [CPU_] |395| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |395| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |395| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |395| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |395| 
$C$L61:    
        ADDL      XAR4,ACC              ; [CPU_] |395| 
        MOVL      XAR0,#44              ; [CPU_] |395| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |395| 
        MOVL      *-SP[4],ACC           ; [CPU_] |395| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |395| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_sprintf")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |395| 
        ; call occurs [#_sprintf] ; [] |395| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |396| 
$C$L62:    
        MOVL      ACC,XAR4              ; [CPU_] |396| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        B         $C$L66,UNC            ; [CPU_] |398| 
        ; branch occurs ; [] |398| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 387,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |387| 
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |391| 
        ; branch occurs ; [] |391| 
$C$L64:    
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |381| 
$C$L65:    
        MOVB      AL,#1                 ; [CPU_] |381| 
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_led_set")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |381| 
        ; call occurs [#_led_set] ; [] |381| 
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |382| 
        MOVB      AH,#1                 ; [CPU_] |382| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_led_set")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |382| 
        ; call occurs [#_led_set] ; [] |382| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 383,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |383| 
        MOVL      XAR0,#72              ; [CPU_] |383| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |383| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |383| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |383| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |383| 
        ADDL      XAR4,ACC              ; [CPU_] |383| 
        MOVL      XAR0,#88              ; [CPU_] |383| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |383| 
        MOVL      *-SP[4],ACC           ; [CPU_] |383| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |383| 
        MOVL      XAR0,#44              ; [CPU_] |383| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |383| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |383| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_sprintf")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |383| 
        ; call occurs [#_sprintf] ; [] |383| 
        MOVL      ACC,XAR1              ; [CPU_] |383| 
$C$L66:    
	.dwpsn	file "../Source/prod.c",line 384,column 3,is_stmt,isa 0
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_scia_init")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |384| 
        ; call occurs [#_scia_init] ; [] |384| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 417 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |417| 
        ; call occurs [#_lcd_clear] ; [] |417| 
        MOVL      XAR0,#44              ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |418| 
	.dwpsn	file "../Source/prod.c",line 417,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |417| 
	.dwpsn	file "../Source/prod.c",line 418,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 420 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |418| 
        ; call occurs [#_lcd_dputs] ; [] |418| 
	.dwpsn	file "../Source/prod.c",line 421,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 421 | uart_set_dir(conf_data.rxdir);                                         
; 423 | // initalize hardware and SFCLIB buffers                               
; 424 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 426 | // Enable global Interrupts and higher priority real-time debug events:
; 427 | EINT;                                                                  
; 428 | // Enable Global interrupt INTM                                        
; 429 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |421| 
        MOVL      XAR0,#40              ; [CPU_] |421| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |421| 
        MOVB      XAR0,#34              ; [CPU_] |421| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |421| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |421| 
        ; call occurs [#_uart_set_dir] ; [] |421| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 431,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 431 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 433 |         for (i = 0; i < 50; i++)                // 1s                  
; 435 |                 delay_us(20000);                // delay for 20ms      
; 437 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |431| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |431| 
        CMPB      AL,#3                 ; [CPU_] |431| 
        B         $C$L76,NEQ            ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |439| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 441,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 441 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 443 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L70,UNC            ; [CPU_] |441| 
        ; branch occurs ; [] |441| 
$C$L67:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L70,EQ             ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 443,column 4,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |443| 
$C$L68:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 445,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 445 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |445| 
        MOVL      XAR4,XAR1             ; [CPU_] |445| 
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |445| 
        ; call occurs [#_scia_rx_getcmd] ; [] |445| 
        MOV       T,*-SP[47]            ; [CPU_] |445| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | lcd_puts(cmdbuff, 20 * j);                                             
; 447 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |446| 
        MOVL      XAR4,XAR1             ; [CPU_] |446| 
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |446| 
        ; call occurs [#_lcd_puts] ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 448 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |448| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 448,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |448| 
        B         $C$L69,LT             ; [CPU_] |448| 
        ; branchcc occurs ; [] |448| 
	.dwpsn	file "../Source/prod.c",line 449,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 449 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |449| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 444,column 4,is_stmt,isa 0
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |444| 
        ; call occurs [#_scia_rx_getcmds] ; [] |444| 
        CMPB      AL,#0                 ; [CPU_] |444| 
        B         $C$L68,NEQ            ; [CPU_] |444| 
        ; branchcc occurs ; [] |444| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 441,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |441| 
        TBIT      AL,#5                 ; [CPU_] |441| 
        B         $C$L67,NTC            ; [CPU_] |441| 
        ; branchcc occurs ; [] |441| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
        SPM       #0                    ; [CPU_] 
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_scia_puts")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 454 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |454| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_delay_us")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |454| 
        ; call occurs [#_delay_us] ; [] |454| 
	.dwpsn	file "../Source/prod.c",line 455,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 455 | scia_puts("E\r");                                                      
; 456 | j = 0;                                                                 
; 457 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |455| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_scia_puts")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |455| 
        ; call occurs [#_scia_puts] ; [] |455| 
	.dwpsn	file "../Source/prod.c",line 458,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 458 | for (i = 0; i < WTT; i++)               // 10s                         
; 460 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |458| 
	.dwpsn	file "../Source/prod.c",line 456,column 3,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |456| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 461,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |461| 
        ; call occurs [#_scia_rx_getcmds] ; [] |461| 
        CMPB      AL,#0                 ; [CPU_] |461| 
        B         $C$L72,EQ             ; [CPU_] |461| 
        ; branchcc occurs ; [] |461| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 462,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 462 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |462| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |462| 
        ; call occurs [#_scia_rx_getcmd] ; [] |462| 
	.dwpsn	file "../Source/prod.c",line 463,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |463| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 465,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 465 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |465| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_delay_us")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |465| 
        ; call occurs [#_delay_us] ; [] |465| 
        MOV       AL,*-SP[47]           ; [CPU_] |465| 
	.dwpsn	file "../Source/prod.c",line 466,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |466| 
        B         $C$L73,LT             ; [CPU_] |466| 
        ; branchcc occurs ; [] |466| 
	.dwpsn	file "../Source/prod.c",line 468,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 468 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |468| 
	.dwpsn	file "../Source/prod.c",line 469,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 469 | i = WTT - 10;                                                          
; 473 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |469| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 458,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |458| 
        CMP       AR1,#500              ; [CPU_] |458| 
        B         $C$L71,LT             ; [CPU_] |458| 
        ; branchcc occurs ; [] |458| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |474| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_scia_puts")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_delay_us")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |476| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_scia_puts")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_delay_us")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |478| 
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_scia_puts")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
	.dwpsn	file "../Source/prod.c",line 479,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 479 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |479| 
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_delay_us")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |479| 
        ; call occurs [#_delay_us] ; [] |479| 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |480| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_scia_puts")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |480| 
        ; call occurs [#_scia_puts] ; [] |480| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 482,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 482 | j = 0;                                                                 
; 483 | for (i = 0; i < 100; i++)               // 2s                          
; 485 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[47],#0           ; [CPU_] |482| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 486,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |486| 
        ; call occurs [#_scia_rx_getcmds] ; [] |486| 
        CMPB      AL,#0                 ; [CPU_] |486| 
        B         $C$L75,EQ             ; [CPU_] |486| 
        ; branchcc occurs ; [] |486| 
        MOVL      XAR0,#88              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |487| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |487| 
        ; call occurs [#_scia_rx_getcmd] ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR0,#88              ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        MOV       T,*-SP[47]            ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MPYB      ACC,T,#20             ; [CPU_] |488| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |488| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |488| 
        ; call occurs [#_lcd_puts] ; [] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 489 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[47]              ; [CPU_] |489| 
	.dwpsn	file "../Source/prod.c",line 488,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |488| 
	.dwpsn	file "../Source/prod.c",line 489,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |489| 
        B         $C$L75,LT             ; [CPU_] |489| 
        ; branchcc occurs ; [] |489| 
	.dwpsn	file "../Source/prod.c",line 490,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 490 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[47],#1           ; [CPU_] |490| 
$C$L75:    
	.dwpsn	file "../Source/prod.c",line 493,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 493 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |493| 
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_delay_us")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |493| 
        ; call occurs [#_delay_us] ; [] |493| 
	.dwpsn	file "../Source/prod.c",line 483,column 15,is_stmt,isa 0
        BANZ      $C$L74,AR3--          ; [CPU_] |483| 
        ; branchcc occurs ; [] |483| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 496,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 496 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |496| 
        B         $C$L78,UNC            ; [CPU_] |496| 
        ; branch occurs ; [] |496| 
$C$L76:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L77:    
	.dwpsn	file "../Source/prod.c",line 435,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |435| 
        SPM       #0                    ; [CPU_] 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_delay_us")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |435| 
        ; call occurs [#_delay_us] ; [] |435| 
	.dwpsn	file "../Source/prod.c",line 433,column 15,is_stmt,isa 0
        BANZ      $C$L77,AR3--          ; [CPU_] |433| 
        ; branchcc occurs ; [] |433| 
$C$L78:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 499,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 499 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 501 | #ifdef SDHCCARD                                                        
; 503 | // check SD card                                                       
; 504 | lcd_puts( "SD Card Testing...", 0 );                                   
; 505 | sd_write = 0;                                                          
; 506 | sd_close = 0;                                                          
; 507 | sd_cnt = 0;                                                            
; 508 | fp = NULL;                                                             
; 510 | f_mount( 0, &Fatfs );                                                  
; 512 | res = f_getfree( "0:", &fsize, &fs );                                  
; 514 | sprintf( buff, "%02X", res );                                          
; 515 | lcd_puts( buff, 18 );                                                  
; 517 | if( !res )                                                             
; 519 |         switch( fs->fs_type & 3 )                                      
; 521 |                 case 1:                                                
; 522 |                 lcd_puts( "FAT12", 20 );                               
; 523 |                 break;                                                 
; 524 |                 case 2:                                                
; 525 |                 lcd_puts( "FAT16", 20 );                               
; 526 |                 break;                                                 
; 527 |                 case 3:                                                
; 528 |                 lcd_puts( "FAT32", 20 );                               
; 529 |                 break;                                                 
; 532 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 533 |         lcd_puts( buff, 40 );                                          
; 535 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 536 |         lcd_puts( buff, 60 );                                          
; 538 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 540 |                 switch( res )                                          
; 542 |                         case CT_MMC:                                   
; 543 |                         lcd_puts( "on MMC", 26 );                      
; 544 |                         break;                                         
; 545 |                         case CT_SD1:                                   
; 546 |                         lcd_puts( "on SDV1", 26 );                     
; 547 |                         break;                                         
; 548 |                         case CT_SD2:                                   
; 549 |                         lcd_puts( "on SDV2", 26 );                     
; 550 |                         break;                                         
; 551 |                         case CT_SD2|CT_BLOCK:                          
; 552 |                         lcd_puts( "on SDHC", 26 );                     
; 553 |                         break;                                         
; 554 |                         default:                                       
; 555 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 556 |                         break;                                         
; 561 | else                                                                   
; 563 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 579 | for( i = 0; i < 100; i++ )                      // 2s                  
; 581 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 583 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |499| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |499| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |499| 
	.dwpsn	file "../Source/prod.c",line 585,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 585 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |585| 
        MOVB      AH,#2                 ; [CPU_] |585| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_led_set")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |585| 
        ; call occurs [#_led_set] ; [] |585| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |586| 
        MOVB      AH,#0                 ; [CPU_] |586| 
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_led_set")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |586| 
        ; call occurs [#_led_set] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_update_units")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |588| 
        ; call occurs [#_update_units] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |590| 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |590| 
	.dwpsn	file "../Source/prod.c",line 591,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 591 | ad7738_resetvall( BM_ALL);              // reset valley                
; 592 | line = 0;                                                              
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | // main loop                                                           
; 596 | //=====================================================================
;     | =====//                                                                
; 597 | Uint16 data[8];                                                        
; 598 | Uint16 data2[8];                                                       
; 599 | Uint16 data3[8];                                                       
; 600 | int n;                                                                 
; 601 | Uint16 res_1;                                                          
; 602 | volatile Uint16 res_2;                                                 
; 603 | res_1 = 0;                                                             
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |591| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |591| 
        ; call occurs [#_ad7738_resetvall] ; [] |591| 
	.dwpsn	file "../Source/prod.c",line 604,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 604 | SPICANCheckInts(604);                                                  
;----------------------------------------------------------------------
        MOV       AL,#604               ; [CPU_] |604| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |604| 
        ; call occurs [#_SPICANCheckInts] ; [] |604| 
	.dwpsn	file "../Source/prod.c",line 605,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 605 | SPICANInit();                                                          
;----------------------------------------------------------------------
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_SPICANInit")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_SPICANInit          ; [CPU_] |605| 
        ; call occurs [#_SPICANInit] ; [] |605| 
	.dwpsn	file "../Source/prod.c",line 606,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 606 | SPICANCheckInts(606);                                                  
; 607 | for(n = 0; n < 8; n++)                                                 
;----------------------------------------------------------------------
        MOV       AL,#606               ; [CPU_] |606| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_SPICANCheckInts")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_SPICANCheckInts     ; [CPU_] |606| 
        ; call occurs [#_SPICANCheckInts] ; [] |606| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#46              ; [CPU_U] 
        MOVZ      AR4,AR4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 609,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 609 | data[n] = 0xFF;                                                        
;----------------------------------------------------------------------
        RPT       #7
||     MOV       *XAR4++,#255          ; [CPU_] |609| 
	.dwpsn	file "../Source/prod.c",line 612,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 612 | data[0] = SPICANReadStat();                                            
;----------------------------------------------------------------------
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_SPICANReadStat")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_SPICANReadStat      ; [CPU_] |612| 
        ; call occurs [#_SPICANReadStat] ; [] |612| 
        MOV       *-SP[46],AL           ; [CPU_] |612| 
	.dwpsn	file "../Source/prod.c",line 613,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 613 | data[1] = SPICANRead(0x2A);                                            
;----------------------------------------------------------------------
        MOVB      AL,#42                ; [CPU_] |613| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |613| 
        ; call occurs [#_SPICANRead] ; [] |613| 
        MOV       *-SP[45],AL           ; [CPU_] |613| 
	.dwpsn	file "../Source/prod.c",line 614,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 614 | data[2] = SPICANRead(0x29);                                            
;----------------------------------------------------------------------
        MOVB      AL,#41                ; [CPU_] |614| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |614| 
        ; call occurs [#_SPICANRead] ; [] |614| 
        MOV       *-SP[44],AL           ; [CPU_] |614| 
	.dwpsn	file "../Source/prod.c",line 615,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 615 | data[3] = SPICANRead(0x28);                                            
;----------------------------------------------------------------------
        MOVB      AL,#40                ; [CPU_] |615| 
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |615| 
        ; call occurs [#_SPICANRead] ; [] |615| 
        MOV       *-SP[43],AL           ; [CPU_] |615| 
	.dwpsn	file "../Source/prod.c",line 616,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 616 | data[4] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |616| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |616| 
        ; call occurs [#_SPICANRead] ; [] |616| 
        MOV       *-SP[42],AL           ; [CPU_] |616| 
	.dwpsn	file "../Source/prod.c",line 617,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 617 | data[5] = SPICANRead(0x60);                                            
;----------------------------------------------------------------------
        MOVB      AL,#96                ; [CPU_] |617| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |617| 
        ; call occurs [#_SPICANRead] ; [] |617| 
        MOV       *-SP[41],AL           ; [CPU_] |617| 
	.dwpsn	file "../Source/prod.c",line 618,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 618 | data[6] = SPICANRead(0x70);                                            
;----------------------------------------------------------------------
        MOVB      AL,#112               ; [CPU_] |618| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |618| 
        ; call occurs [#_SPICANRead] ; [] |618| 
        MOV       *-SP[40],AL           ; [CPU_] |618| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 619 | data[7] = SPICANRead(0x0F);                                            
;----------------------------------------------------------------------
        MOVB      AL,#15                ; [CPU_] |619| 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |619| 
        ; call occurs [#_SPICANRead] ; [] |619| 
	.dwpsn	file "../Source/prod.c",line 621,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 621 | SPICANReadSetT0Message(0xA1, 8, data);                                 
;----------------------------------------------------------------------
        MOVZ      AR4,SP                ; [CPU_] |621| 
	.dwpsn	file "../Source/prod.c",line 619,column 2,is_stmt,isa 0
        MOV       *-SP[39],AL           ; [CPU_] |619| 
	.dwpsn	file "../Source/prod.c",line 621,column 2,is_stmt,isa 0
        MOVB      AH,#8                 ; [CPU_] |621| 
        MOVB      AL,#161               ; [CPU_] |621| 
        SUBB      XAR4,#46              ; [CPU_U] |621| 
        MOVZ      AR4,AR4               ; [CPU_] |621| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_SPICANReadSetT0Message")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_SPICANReadSetT0Message ; [CPU_] |621| 
        ; call occurs [#_SPICANReadSetT0Message] ; [] |621| 
	.dwpsn	file "../Source/prod.c",line 622,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 622 | SPICANWaitForTXBuf(0);                                                 
; 623 | //      SPICAN_T0_RTS();                                               
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |622| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_SPICANWaitForTXBuf")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_SPICANWaitForTXBuf  ; [CPU_] |622| 
        ; call occurs [#_SPICANWaitForTXBuf] ; [] |622| 
	.dwpsn	file "../Source/prod.c",line 625,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 625 | data[0] = res_1;                                                       
; 626 | data[0] = data[0] + 1;                                                 
;----------------------------------------------------------------------
        MOVB      *-SP[46],#1,UNC       ; [CPU_] |625| 
	.dwpsn	file "../Source/prod.c",line 627,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 627 | data[1] = data[1] + 1;                                                 
; 628 | data[2] = data[2] + 1;                                                 
; 629 | data[3] = data[3] + 1;                                                 
; 630 | data[4] = data[4] + 1;                                                 
; 631 | data[5] = data[5] + 1;                                                 
; 632 | data[6] = data[6] + 1;                                                 
;----------------------------------------------------------------------
        INC       *-SP[45]              ; [CPU_] |627| 
	.dwpsn	file "../Source/prod.c",line 634,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 634 | data[0] = SPICANRead(0x30);                                            
;----------------------------------------------------------------------
        MOVB      AL,#48                ; [CPU_] |634| 
	.dwpsn	file "../Source/prod.c",line 628,column 2,is_stmt,isa 0
        INC       *-SP[44]              ; [CPU_] |628| 
	.dwpsn	file "../Source/prod.c",line 629,column 2,is_stmt,isa 0
        INC       *-SP[43]              ; [CPU_] |629| 
	.dwpsn	file "../Source/prod.c",line 630,column 2,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |630| 
	.dwpsn	file "../Source/prod.c",line 631,column 2,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |631| 
	.dwpsn	file "../Source/prod.c",line 632,column 2,is_stmt,isa 0
        INC       *-SP[40]              ; [CPU_] |632| 
	.dwpsn	file "../Source/prod.c",line 634,column 2,is_stmt,isa 0
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |634| 
        ; call occurs [#_SPICANRead] ; [] |634| 
        MOV       *-SP[46],AL           ; [CPU_] |634| 
	.dwpsn	file "../Source/prod.c",line 635,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 635 | data[1] = SPICANRead(0x40);                                            
;----------------------------------------------------------------------
        MOVB      AL,#64                ; [CPU_] |635| 
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |635| 
        ; call occurs [#_SPICANRead] ; [] |635| 
        MOV       *-SP[45],AL           ; [CPU_] |635| 
	.dwpsn	file "../Source/prod.c",line 636,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 636 | data[2] = SPICANRead(0x2B);                                            
;----------------------------------------------------------------------
        MOVB      AL,#43                ; [CPU_] |636| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |636| 
        ; call occurs [#_SPICANRead] ; [] |636| 
        MOV       *-SP[44],AL           ; [CPU_] |636| 
	.dwpsn	file "../Source/prod.c",line 637,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 637 | data[3] = SPICANRead(0x2C);                                            
;----------------------------------------------------------------------
        MOVB      AL,#44                ; [CPU_] |637| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |637| 
        ; call occurs [#_SPICANRead] ; [] |637| 
        MOV       *-SP[43],AL           ; [CPU_] |637| 
	.dwpsn	file "../Source/prod.c",line 638,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 638 | data[4] = SPICANRead(SPICAN_TXB0D0 + 4);                               
;----------------------------------------------------------------------
        MOVB      AL,#58                ; [CPU_] |638| 
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |638| 
        ; call occurs [#_SPICANRead] ; [] |638| 
        MOV       *-SP[42],AL           ; [CPU_] |638| 
	.dwpsn	file "../Source/prod.c",line 639,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 639 | data[5] = SPICANRead(SPICAN_TXB0D0 + 5);                               
;----------------------------------------------------------------------
        MOVB      AL,#59                ; [CPU_] |639| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |639| 
        ; call occurs [#_SPICANRead] ; [] |639| 
        MOV       *-SP[41],AL           ; [CPU_] |639| 
	.dwpsn	file "../Source/prod.c",line 640,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 640 | data[6] = SPICANRead(SPICAN_TXB0D0 + 6);                               
; 642 | volatile Uint16 interrupts;                                            
; 643 | char buff_ints[80];                                                    
; 645 | for (;;) {                                                             
; 647 | //              Uint16 should_send;                                    
; 648 | //              // Check interrupts for what all happened              
; 649 | //              interrupts = SPICANRead(0x2C);                         
; 650 | //              delay_us(10);                                          
; 652 | //              // TX Interrupts                                       
; 653 | //              buff_ints[0] = interrupts;                             
; 654 | //              // RX Interrupts                                       
; 655 | //              if(interrupts > 0x00 && interrupts != 0xFF)            
; 656 | //              {                                                      
; 657 | //                      sprintf(buff_ints, "There were interrupts %d",
;     | interrupts);                                                           
; 658 | // //                   printf("%s", buff_ints);                       
; 659 | //              }                                                      
; 660 |         SPICANRoutine();                                               
; 661 |         // data[7] = SPICANReadBufs(data2, data3);                     
; 662 | //              should_send = SPICANReadBufs(data2, data3);            
; 664 | //              res_1 = SPICANRead(0x2C);                              
; 665 | //              delay_us(10);                                          
; 666 | //              res_2 = (res_1 & 0xFC);                                
; 667 | //              SPICANBitModify(0x2C, 0x03, 0x00);                     
; 668 | //              // delay_us(10);                                       
; 669 | //              res_2 = SPICANReadInts();                              
; 670 | //              // SPICANWrite(0x2C, res_2);                           
; 671 | // //           res_2 = SPICANRead(0x2C);                              
; 672 | // //           res_2 = 0x00;                                          
; 673 | //              if((res_2 & 0x01) == 0x01)                             
; 674 | //              {                                                      
; 675 | //                      SPICANWaitForTXBuf(0);                         
; 676 | //                      SPICANReadSetT0Message(0xA2, 8, data2);        
; 677 | //                      SPICANWaitForTXBuf(0);                         
; 678 | //                      SPICAN_T0_RTS();                               
; 679 | //                      res_2 = SPICANRead(0x2C);                      
; 680 | //              }                                                      
; 681 | //              else if((res_2 & 0x02) == 0x02)                        
; 682 | //              {                                                      
; 683 | //                      SPICANWaitForTXBuf(0);                         
; 684 | //                      SPICANReadSetT0Message(0xA3, 8, data3);        
; 685 | //                      SPICANWaitForTXBuf(0);                         
; 686 | //                      SPICAN_T0_RTS();                               
; 687 | //              }                                                      
; 689 |         // Check for any errors                                        
; 690 |         data[6] = SPICANRead(0x2D);                                    
; 692 |         // check SW2 for reset command                                 
; 693 |         if (!(0x0010 & INBTTN)) {                                      
; 695 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 696 |                 ad7738_resetpeak(0x0f);                                
; 697 |                 ad7738_resetvall(0x0f);                                
; 699 | #if(0)                                                                 
; 700 |                 // DEBUG: tagid                                        
; 701 |                 lcd_clear();                                           
; 702 |                 for( i = 0; i < 4; i++ )                               
; 704 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 705 |                         lcd_puts( buff, i * 20 );                      
; 707 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 709 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 711 |                 // DEBUG: tagid                                        
; 712 |                 update_units();                                        
; 713 | #endif                                                                 
; 717 | #ifdef SDHCCARD                                                        
; 718 |         // write to SD card file if flag set                           
; 719 |         if( sd_write && fp )                                           
; 721 |                 if( prod_getavail() > 31 || sd_close )                 
; 723 |                         led_set( LED2, LED_RED );                      
; 725 |                         k = 32;                                        
; 727 |                         while( prod_getavail() && k-- )                
; 729 |                                 wtp = prod_getnext();                  
; 731 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 733 |                                         intp = (Uint16*)&wtp->adw[i];  
; 735 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 737 |                                         for( j = 0; j < 2; j++ )       
; 739 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 740 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 741 |                                                 intp++;                
; 744 |                                 sd_cnt++;                              
; 747 |                         if( sd_close )                                 
; 749 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 750 |                                 if( res )                              
; 752 |                                         sprintf( buff, "%02X ", res ); 
; 753 |                                         scia_puts( buff );             
; 756 |                                 res = f_close( fp );                   
; 757 |                                 fp = NULL;                             
; 759 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 760 |                                 scia_puts( buff );                     
; 762 |                                 sd_write = 0;                          
; 763 |                                 sd_close = 0;                          
; 766 |                         led_set( LED2, LED_OFF );                      
; 769 | #endif                                                                 
; 771 |         //=============================================================
;     | =====================//                                                
; 772 |         // update the vfd
;     |                          //                                            
; 773 |         //=============================================================
;     | =====================//                                                
; 774 |         // if there is new "monitor data" ready                        
; 775 |         if (ad7738_monrdy()) {                                         
; 776 |                 // clear the ready flag                                
; 777 |                 ad7738_monclr();                                       
; 779 |                 // display the appropriate data                        
; 780 |                 switch (conf_data.vfd[line].what) {                    
; 781 |                 case VFD_LOAD:                                         
; 782 |                         wtp = ad7738_getmon();                         
; 783 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 784 |                         goto VFD_LINE_BUFF;                            
; 786 |                 case VFD_PEAK:                                         
; 787 |                         wtp = ad7738_getpeak();                        
; 788 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 789 |                         goto VFD_LINE_BUFF;                            
; 791 |                 case VFD_VALL:                                         
; 792 |                         wtp = ad7738_getvall();                        
; 793 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 794 |                         goto VFD_LINE_BUFF;                            
; 796 |                 case VFD_POSI:                                         
; 797 |                         wtp = ad7738_getmon();                         
; 798 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 799 |                         goto VFD_LINE_BUFF;                            
; 801 |                 case VFD_VELO:                                         
; 802 |                         wtp = ad7738_getmon();                         
; 803 |                         //wtp = ad7738_getpeak();                      
; 804 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 806 |                         // display appropriate decimal points          
; 807 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 808 |                         case 0:                                        
; 809 |                                 sprintf(buff, "%10.0f", tempft);       
; 810 |                                 break;                                 
; 811 |                         case 1:                                        
; 812 |                                 sprintf(buff, "%10.1f", tempft);       
; 813 |                                 break;                                 
; 814 |                         case 2:                                        
; 815 |                                 sprintf(buff, "%10.2f", tempft);       
; 816 |                                 break;                                 
; 817 |                         case 3:                                        
; 818 |                                 sprintf(buff, "%10.3f", tempft);       
; 819 |                                 break;                                 
; 820 |                         case 4:                                        
; 821 |                                 sprintf(buff, "%10.4f", tempft);       
; 822 |                                 break;                                 
; 823 |                         case 5:                                        
; 824 |                                 sprintf(buff, "%10.5f", tempft);       
; 825 |                                 break;                                 
; 827 |                         break;                                         
; 829 |                 case VFD_LIMIT:                                        
; 830 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 831 |                         sprintf(buff, "  %s",                          
; 832 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 833 |                         break;                                         
; 834 |                 case VFD_TEMP:                                         
; 835 |                         sprintf(buff, "%10.1f", tempvalue);            
; 836 |                         break;                                         
; 839 |                 // print to LCD                                        
; 840 |                 lcd_puts(buff, 7 + 20 * line);                         
; 842 |                 line++;                                                
; 843 |                 if (line >= VFD_MAX) {                                 
; 844 |                         line = 0;                                      
; 848 |         //=============================================================
;     | =====================//                                                
; 849 |         // temperature sensor reading
;     |                  //                                                    
; 850 |         //=============================================================
;     | =====================//                                                
; 852 |         // if its time to start a temp conversion...                   
; 853 |         if (ad7738_tempstart()) {                                      
; 854 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 857 |         // if its time to start a temp reading...                      
; 858 |         else if (ad7738_tempread()) {                                  
; 859 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 860 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 863 |         //=============================================================
;     | =====================//                                                
; 864 |         // Auto ID detection
;     |                  //                                                    
; 865 |         //=============================================================
;     | =====================//                                                
; 866 |         // check for changes in the load cells connected by "TAG ID"   
; 867 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 868 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 870 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 872 |                                 // new loadcell just plugged in        
; 873 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 874 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 876 |                                         DINT;                          
; 877 |                                         maf_rst();                     
; 878 |                                         ad7738_setcal();               
; 879 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 880 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 881 |                                         EINT;                          
; 883 |                                         lcd_clear();                   
; 884 |                                         update_units();                
; 885 |                                         autoidchanged = 1;             
; 888 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 889 |                 } else {                                               
; 891 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 893 |                         if (autoid[tagch]) {                           
; 894 |                                 autoid[tagch] = 0;                     
; 895 |                                 lcd_clear();                           
; 896 |                                 update_units();                        
; 897 |                                 autoidchanged = 1;                     
; 901 |                 tagch++;                                               
; 902 |                 if (tagch >= CHS_MAX) {                                
; 903 |                         tagch = 0;                                     
; 907 |         //=============================================================
;     | =====================//                                                
; 908 |         // Data streamming
;     |                          //                                            
; 909 |         //=============================================================
;     | =====================//                                                
; 910 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 911 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 912 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 913 |                 //      taking into account decimation, etc.           
; 914 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 916 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 918 |                         ds_ct = 0;                                     
; 919 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 920 |                         j = 0;                                         
; 921 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 922 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 923 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 924 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 925 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 926 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 927 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 929 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 930 |                                 wtp = prod_getnext();                  
; 931 |                                 if (--k) {                             
; 932 |                                         continue;
;     |          // decimation                                                 
; 934 |                                 k = ds_dec;                            
; 935 |                                 ds_ct++;                               
; 937 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 938 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 939 |                                         if (ds_bm & ch) {              
; 940 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 941 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 942 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 943 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 944 |                                                         intp++;        
; 947 |                                         ch <<= 1;
;     |          // next channel                                               
; 950 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 951 |                                         if (ds_bm & ch) {              
; 952 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 953 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 954 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 955 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 956 |                                                         intp++;        
; 959 |                                         ch <<= 1;
;     |          // next channel                                               
; 962 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 963 |                                         if (ds_bm & ch) {              
; 964 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 965 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 966 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 967 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 968 |                                                         intp++;        
; 971 |                                         ch <<= 1;
;     |          // next channel                                               
; 975 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 977 |                         if (ds_stop) {                                 
; 978 |                                 ds_en = 0;                             
; 981 |                         scia_send_bin(buff, j);         // send data   
; 983 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 984 |                 } else if (ad7738_getlimitchgd()) {                    
; 985 |                         j = 0;                                         
; 986 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 987 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 988 |                         for (i = 0; i < LIM_MAX; i++) {                
; 989 |                                 buff[j++] = ad7738_getlimitst(i);      
; 991 |                         scia_send_bin(buff, j);         // send data   
; 992 |                 } else if (autoidchanged) {                            
; 993 |                         autoidchanged = 0;                             
; 995 |                         j = 0;                                         
; 996 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 997 |                         buff[j++] = GetAutoId;                  // 1,  
; 998 |                         buff[j++] = conf_data.tagiden;                 
; 999 |                         for (i = 0; i < CHS_MAX; i++) {                
; 1000 |                                 buff[j++] = autoid[i];                 
; 1002 |                         scia_send_bin(buff, j);         // send data   
; 1008 |         //=============================================================
;     | =====================//                                                
; 1009 |         // serial command processing
;     |                  //                                                    
; 1010 |         //=============================================================
;     | =====================//                                                
; 1012 |         //=============================================================
;     | =====================//                                                
; 1013 |         // Check for available command in the command buffer
;     |                  //                                                    
; 1014 |         //=============================================================
;     | =====================//                                                
; 1015 |         if (0 == scia_rx_getcmds()) {                                  
; 1016 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 1019 |         //=============================================================
;     | =====================//                                                
; 1020 |         // Read one command from command buffer
;     |                  //                                                    
; 1021 |         //=============================================================
;     | =====================//                                                
; 1022 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 1024 |         //=============================================================
;     | =====================//                                                
; 1025 |         // Empty command
;     |                          //                                            
; 1026 |         //=============================================================
;     | =====================//                                                
; 1027 |         if (0 == cmdlen) {                                             
; 1028 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 1029 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 1030 |                 continue;                                              
; 1033 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 1035 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1036 |                 // ASCII command mode processing
;     |                                  //                                    
; 1037 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 1039 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 1042 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1043 |                 // Current configuration print out
;     |                          //                                            
; 1044 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 1046 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 1110 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1112 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1114 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1117 |                         case 'A':                               // all 
; 1119 |                                 version = VERSION;                     
; 1120 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1121 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1122 |                                 scia_puts(buff);                       
; 1123 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1124 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1125 |                                 scia_puts(buff);                       
; 1126 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1127 |                                 scia_puts(buff);                       
; 1128 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1129 |                                                 conf_data.uname);      
; 1130 |                                 scia_puts(buff);                       
; 1132 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1133 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1134 |                                 scia_puts(buff);                       
; 1135 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1136 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1137 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1138 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1139 |                                         scia_puts(buff);               
; 1141 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1142 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1143 |                                 scia_puts(buff);                       
; 1145 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1146 |                                                 conf_data.filter);     
; 1147 |                                 scia_puts(buff);                       
; 1149 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1150 |                                         scia_puts("\r\n");             
; 1151 |                                         print_channel(ch);
;     |          // channel info                                               
; 1152 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1155 |                                 scia_puts("\r\n");                     
; 1156 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1157 |                                                 conf_data.velfilter);  
; 1158 |                                 scia_puts(buff);                       
; 1159 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1160 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1161 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1162 |                                         scia_puts(buff);               
; 1164 |                                 print_vfd();                           
; 1165 |                                 print_dac();                           
; 1166 |                                 print_limits();                        
; 1167 |                                 break;                                 
; 1169 |                         case 'S':
;     |  // sensor list                                                        
; 1171 |                                 scia_puts("\r\n");                     
; 1173 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1174 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1175 |                                         scia_puts(buff);               
; 1176 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1178 |                                 break;                                 
; 1180 |                         case 'D':
;     |  // Display settings                                                   
; 1182 |                                 print_vfd();                           
; 1183 |                                 break;                                 
; 1185 |                         case 'O':
;     |  // DAC settings                                                       
; 1187 |                                 print_dac();                           
; 1188 |                                 break;                                 
; 1190 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1192 |                                 print_limits();                        
; 1193 |                                 break;                                 
; 1195 |                         default:                                       
; 1196 |                                 goto INVALIDCMD;                       
; 1199 |                         break;                                         
; 1201 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1202 |                         // Unit config commands
;     |                                  //                                    
; 1203 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1204 |                 case 'U':                                       // Unit
; 1206 |                         if (cmdlen < 2) {                              
; 1207 |                                 goto INVALIDCMD;                       
; 1210 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1213 |                         case 'S':
;     |  // unit serial number                                                 
; 1215 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1216 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1217 |                                 conf_data.usn = atol(cmdbuff);         
; 1219 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1220 |                                 scia_puts(buff);                       
; 1221 |                                 unsaved = 1;                           
; 1222 |                                 break;                                 
; 1224 |                         case 'N':
;     |  // unit name                                                          
; 1226 |                                 j = sizeof(conf_data.uname) - 1;       
; 1227 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1228 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1229 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1231 |                                         cmdlen = j;                    
; 1232 |                                         cmdbuff[j] = '\0';             
; 1234 |                                 // also copy the null terminater       
; 1235 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1236 |                                                 cmdlen + 1);           
; 1237 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1239 |                                 scia_puts(cmdbuff);                    
; 1240 |                                 scia_puts("\r\n");                     
; 1241 |                                 unsaved = 1;                           
; 1242 |                                 break;                                 
; 1244 |                         case 'C':
;     |  // current sensor                                                     
; 1246 |                                 // channel number                      
; 1247 |                                 j = CHS_MAX;                           
; 1248 |                                 do {                                   
; 1249 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1250 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1251 |                                         ch = atoi(cmdbuff);            
; 1252 |                                         scia_puts(cmdbuff);            
; 1253 |                                         if (ch > 0 && ch <= j) {       
; 1254 |                                                 break;
;     |          // valid input channel number                                 
; 1256 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1257 |                                 } while (j);                           
; 1258 |                                 scia_puts("\r\n");                     
; 1259 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1261 |                                 // sensor number                       
; 1262 |                                 j = SENSPCH;                           
; 1263 |                                 do {                                   
; 1264 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1265 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1266 |                                         ss = atoi(cmdbuff);            
; 1267 |                                         scia_puts(cmdbuff);            
; 1268 |                                         if (ss > 0 && ss <= j) {       
; 1269 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1271 |                                                 break;                 
; 1273 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1274 |                                 } while (j);                           
; 1275 |                                 scia_puts("\r\n");                     
; 1276 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1278 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1279 |                                                 ch + 1, ss + 1);       
; 1280 |                                 scia_puts(buff);                       
; 1281 |                                 print_sensor(ss);                      
; 1282 |                                 unsaved = 1;                           
; 1284 |                                 DINT;                                  
; 1285 |                                 conf_data.ch[ch].ci = ss;              
; 1286 |                                 ad7738_setcal();                       
; 1288 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1289 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1290 |                                 EINT;                                  
; 1292 |                                 update_units();                        
; 1293 |                                 break;                                 
; 1295 |                         case 'I':
;     |  // interface                                                          
; 1297 |                                 for (j = 0; j < 4; j++) {              
; 1298 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1299 |                                         scia_puts(buff);               
; 1300 |                                         if (j < 3) {                   
; 1301 |                                                 scia_puts(", ");       
; 1304 |                                 scia_puts("\r\n");                     
; 1305 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1306 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1307 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1308 |                                 scia_puts(cmdbuff);                    
; 1309 |                                 scia_puts("\r\n");                     
; 1310 |                                 if (cmdlen == 0) {                     
; 1311 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1312 |                                         break;                         
; 1314 |                                 pt = atoi(cmdbuff);                    
; 1315 |                                 if (pt > 3) {                          
; 1316 |                                         scia_puts(                     
; 1317 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1318 |                                         break;                         
; 1320 |                                 conf_data.rxdir = pt;                  
; 1321 |                                 sprintf(buff,                          
; 1322 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1323 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1324 |                                 scia_puts(buff);                       
; 1325 |                                 scia_puts(                             
; 1326 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1327 |                                 unsaved = 1;                           
; 1328 |                                 break;                                 
; 1330 |                         case 'B':
;     |  // baudrate                                                           
; 1332 |                                 if (conf_data.rxdir == SDIR_USB        
; 1333 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1334 |                                         scia_puts(                     
; 1335 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1336 |                                         break;                         
; 1339 |                                 for (j = 0; j < 8; j++) {              
; 1340 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1341 |                                         scia_puts(buff);               
; 1342 |                                         if (j < 7) {                   
; 1343 |                                                 scia_puts(", ");       
; 1346 |                                 scia_puts("\r\n");                     
; 1347 |                                 cmdlen = sprintf(buff,                 
; 1348 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1349 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1350 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1351 |                                 scia_puts(cmdbuff);                    
; 1352 |                                 scia_puts("\r\n");                     
; 1353 |                                 if (cmdlen == 0) {                     
; 1354 |                                         scia_puts(                     
; 1355 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1356 |                                         break;                         
; 1358 |                                 pt = atoi(cmdbuff);                    
; 1359 |                                 if (pt > 7) {                          
; 1360 |                                         scia_puts(                     
; 1361 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1362 |                                         break;                         
; 1364 |                                 conf_data.baud = pt;                   
; 1365 |                                 sprintf(buff,                          
; 1366 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1367 |                                                 BAUD[conf_data.baud]); 
; 1368 |                                 scia_puts(buff);                       
; 1369 |                                 scia_puts(                             
; 1370 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1371 |                                 unsaved = 1;                           
; 1372 |                                 break;                                 
; 1374 |                         case 'F':
;     |  // averaging filter size                                              
; 1376 |                                 j = MAF_MAX;                           
; 1377 |                                 do {                                   
; 1378 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1379 |                                                         j);            
; 1380 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1381 |                                         i = atoi(cmdbuff);             
; 1382 |                                         scia_puts(cmdbuff);            
; 1383 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1384 |                                                 break;
;     |          // valid number input                                         
; 1386 |                                         scia_puts(                     
; 1387 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1388 |                                 } while (j);                           
; 1389 |                                 scia_puts("\r\n");                     
; 1391 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1392 |                                                 i);                    
; 1393 |                                 scia_puts(buff);                       
; 1394 |                                 unsaved = 1;                           
; 1396 |                                 // update new value                    
; 1397 |                                 DINT;                                  
; 1398 |                                 conf_data.filter = i;                  
; 1399 |                                 maf_rst();                             
; 1400 |                                 EINT;                                  
; 1401 |                                 break;                                 
; 1403 |                         case 'W':
;     |  // diff window ratio                                                  
; 1405 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1406 |                                                 conf_data.diffwin);    
; 1407 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1408 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1409 |                                 scia_puts(cmdbuff);                    
; 1410 |                                 scia_puts("\r\n");                     
; 1412 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1413 |                                                 conf_data.diffwin);    
; 1414 |                                 scia_puts(buff);                       
; 1415 |                                 unsaved = 1;                           
; 1417 |                                 DINT;                                  
; 1418 |                                 ad7738_setcal();                       
; 1419 |                                 maf_rst();                             
; 1420 |                                 EINT;                                  
; 1421 |                                 break;                                 
; 1423 |                         default:                                       
; 1424 |                                 goto INVALIDCMD;                       
; 1427 |                         break;                                         
; 1429 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1430 |                         // Board calibration
;     |                                  //                                    
; 1431 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1432 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1434 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1435 |                                 goto INVALIDCMD;                       
; 1438 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1439 |                                 goto INVALIDCMD;                       
; 1440 |                                 // invalid calibration method          
; 1443 |                         // channel index                               
; 1444 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1445 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1446 |                                 goto INVALIDCMD;                       
; 1447 |                                 // invalid channel number              
; 1449 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1451 |                         volt[0] = 0;                                   
; 1452 |                         volt[1] = 0;                                   
; 1453 |                         for (j = 3; j < cmdlen; j++) {                 
; 1454 |                                 if (cmdbuff[j] == 'X') {               
; 1455 |                                         j++;                           
; 1456 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1459 |                                 if (cmdbuff[j] == 'Y') {               
; 1460 |                                         j++;                           
; 1461 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1465 |                         if (volt[0] == volt[1]) {                      
; 1466 |                                 goto INVALIDCMD;                       
; 1467 |                                 // invalid parameters                  
; 1470 |                         lcd_clear();                                   
; 1471 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1472 |                         lcd_puts(buff, 20);                            
; 1473 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1474 |                         lcd_puts(buff, 40);                            
; 1475 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1476 |                         lcd_puts(buff, 60);                            
; 1478 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1481 |                         case 'C':
;     |  // board ADC calibration                                              
; 1483 |                                 lcd_puts("Board Calibration...", 0);   
; 1485 |                                 sprintf(buff,                          
; 1486 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1487 |                                                 ch + 1);               
; 1488 |                                 scia_puts(buff);                       
; 1500 |                                 for (j = 0; j < 2; j++) {              
; 1501 |                                         sprintf(buff,                  
; 1502 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1503 |                                                         volt[j]);      
; 1504 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1505 |                                         scia_puts("Reading ... ");     
; 1507 |                                         dsum[j] = 0;                   
; 1508 |                                         sampcnt = CAL_SAMPLES;         
; 1509 |                                         while (sampcnt--) {            
; 1510 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1511 |                                                         delay_us(1);
;     |                  // wait                                               
; 1513 |                                                 cntp = ad7738_getraw();
; 1514 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1517 |                                         scia_puts("done\r\n");         
; 1520 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1521 |                                                 / (dsum[1] - dsum[0]); 
; 1523 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1524 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1525 |                                 scia_puts(buff);                       
; 1526 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1527 |                                 break;                                 
; 1529 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1531 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1532 |                                                 || volt[1] < -10) {    
; 1533 |                                         lcd_clear();                   
; 1534 |                                         update_units();                
; 1535 |                                         goto INVALIDCMD;               
; 1536 |                                         // invalid parameters          
; 1539 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1541 |                                 sprintf(buff,                          
; 1542 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1543 |                                                 ch + 1);               
; 1544 |                                 scia_puts(buff);                       
; 1545 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1546 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1548 |                                 for (j = 0; j < 2; j++) {              
; 1549 |                                         if (volt[j] < 0) {             
; 1550 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1551 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1552 |                                         } else {                       
; 1553 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1554 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1556 |                                         if (dsum[0] <= 0) {            
; 1557 |                                                 dacc[j] = 0;           
; 1558 |                                         } else if (dsum[0] >= 0xffff) {
; 1559 |                                                 dacc[j] = 0xffff;      
; 1560 |                                         } else {                       
; 1561 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1564 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1565 |                                         scia_puts(buff);               
; 1566 |                                         cmdbuff[0] = '\0';             
; 1568 |                                         do {                           
; 1569 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1570 |                                                 latch_dac();           
; 1572 |                                                 do {                   
; 1573 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1574 | 
;     |  sizeof(cmdbuff));                                                     
; 1575 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1576 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1578 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1579 |                                                         break;
;     |                  // done                                               
; 1582 |                                                 i = atoi(cmdbuff + 1); 
; 1583 |                                                 if (i == 0) {          
; 1584 |                                                         i = 1;         
; 1587 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1589 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1590 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1591 |                                                         } else {       
; 1592 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1594 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1596 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1597 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1598 |                                                         } else {       
; 1599 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1602 |                                         } while (i);                   
; 1604 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1605 |                                         scia_puts(buff);               
; 1608 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1610 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1611 |                                 cmdbuff[0] = '\0';                     
; 1613 |                                 do {                                   
; 1614 |                                         mcbsp_xmit(dacc[2], ch);       
; 1615 |                                         latch_dac();                   
; 1617 |                                         do {                           
; 1618 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1619 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1620 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1622 |                                         if ('S' == cmdbuff[0]) {       
; 1623 |                                                 break;
;     |          // done                                                       
; 1626 |                                         i = atoi(cmdbuff + 1);         
; 1627 |                                         if (i == 0) {                  
; 1628 |                                                 i = 1;                 
; 1631 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1633 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1634 |                                                         dacc[2] += i;  
; 1635 |                                                 } else {               
; 1636 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1638 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1640 |                                                 if (dacc[2] >= i) {    
; 1641 |                                                         dacc[2] -= i;  
; 1642 |                                                 } else {               
; 1643 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1646 |                                 } while (i);                           
; 1648 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1649 |                                 scia_puts(buff);                       
; 1651 |                                 // do the calculations                 
; 1652 |                                 if (volt[0] < 0) {                     
; 1653 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1654 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1655 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1656 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1657 |                                 } else {                               
; 1658 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1659 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1660 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1661 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1663 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1665 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1667 |                                 sprintf(buff,                          
; 1668 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1669 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1670 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1671 |                                 scia_puts(buff);                       
; 1673 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1674 |                                 break;                                 
; 1676 |                         default:                                       
; 1677 |                                 goto INVALIDCMD;                       
; 1680 |                         unsaved = 1;                                   
; 1681 |                         lcd_clear();                                   
; 1682 |                         update_units();                                
; 1684 |                         DINT;                                          
; 1685 |                         ad7738_setcal();                               
; 1686 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1687 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1688 |                         EINT;                                          
; 1689 |                         break;                                         
; 1691 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1692 |                         // Channel sensor calibration
;     |                                  //                                    
; 1693 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1694 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1696 |                         if (cmdlen < 2) {                              
; 1697 |                                 goto INVALIDCMD;                       
; 1700 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1701 |                                         && 'S' != cmdbuff[1]) {        
; 1702 |                                 goto INVALIDCMD;                       
; 1703 |                                 // invalid calibration method          
; 1705 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1707 |                         lcd_clear();                                   
; 1708 |                         lcd_puts("Sensor Calibration..", 0);           
; 1710 |                         // === read informations ====                  
; 1711 |                         // channel number                              
; 1712 |                         j = CHS_MAX;                                   
; 1713 |                         do {                                           
; 1714 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1715 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1716 |                                 ch = atoi(cmdbuff);                    
; 1717 |                                 scia_puts(cmdbuff);                    
; 1718 |                                 if (ch > 0 && ch <= j) {               
; 1719 |                                         break;
;     |  // valid input channel number                                         
; 1721 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1722 |                         } while (j);                                   
; 1723 |                         scia_puts("\r\n");                             
; 1724 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1726 |                         // sensor number                               
; 1727 |                         j = SENSPCH;                                   
; 1728 |                         do {                                           
; 1729 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1730 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1731 |                                 ss = atoi(cmdbuff);                    
; 1732 |                                 scia_puts(cmdbuff);                    
; 1733 |                                 if (ss > 0 && ss <= j) {               
; 1734 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1736 |                                         break;                         
; 1738 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1739 |                         } while (j);                                   
; 1740 |                         scia_puts("\r\n");                             
; 1741 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1743 |                         // put on the vfd                              
; 1744 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1745 |                         lcd_puts(buff, 20);                            
; 1747 |                         // sensor serial number                        
; 1748 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1749 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1750 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1751 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1753 |                                 cmdlen = j;                            
; 1754 |                                 cmdbuff[j] = '\0';                     
; 1756 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1757 |                         scia_puts(cmdbuff);                            
; 1758 |                         scia_puts("\r\n");                             
; 1760 |                         // sensor label                                
; 1761 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1762 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1763 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1764 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1766 |                                 cmdlen = j;                            
; 1767 |                                 cmdbuff[j] = '\0';                     
; 1769 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1770 |                         scia_puts(cmdbuff);                            
; 1771 |                         scia_puts("\r\n");                             
; 1773 |                         // unit                                        
; 1774 |                         for (j = 0; j < 7; j++) {                      
; 1775 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1777 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1778 |                         scia_puts(buff);                               
; 1779 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1780 |                                         sizeof(cmdbuff));              
; 1781 |                         tsensor.unit = atoi(cmdbuff);                  
; 1783 |                         switch (tsensor.unit) {                        
; 1784 |                         case 0:                                 // lb  
; 1785 |                         case 1:                                 // kg  
; 1786 |                                 tsensor.unit |= 0x10;                  
; 1787 |                                 break;                                 
; 1788 |                         case 2:                                 // in  
; 1789 |                         case 3:                                 // cm  
; 1790 |                         case 4:                                 // mm  
; 1791 |                                 tsensor.unit |= 0x20;                  
; 1792 |                                 break;                                 
; 1793 |                         case 5:                                 // ps  
; 1794 |                                 tsensor.unit |= 0x30;                  
; 1795 |                                 break;                                 
; 1796 |                         case 6:                                 // nm  
; 1797 |                                 tsensor.unit |= 0x40;                  
; 1798 |                                 break;                                 
; 1799 |                         case 7:                                        
; 1800 |                         case 8:                                        
; 1801 |                         case 15:                                       
; 1802 |                                 tsensor.unit |= 0xf0;                  
; 1803 |                                 break;                                 
; 1804 |                         default:                                       
; 1805 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1806 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1807 |                                 break;                                 
; 1809 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1810 |                         tsensor.ufactor = 1;                    // 1:1 
; 1812 |                         scia_puts(cmdbuff);                            
; 1813 |                         scia_puts("\r\n");                             
; 1815 |                         // range                                       
; 1816 |                         j = 1;                                         
; 1817 |                         do {                                           
; 1818 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1819 |                                 tsensor.range = atof(cmdbuff);         
; 1820 |                                 if (tsensor.range != 0) {              
; 1821 |                                         break;                         
; 1823 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1824 |                         } while (j);                                   
; 1825 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1826 |                         scia_puts(cmdbuff);                            
; 1827 |                         scia_puts("\r\n");                             
; 1829 |                         tsensor.tagid = tagid(ch);                     
; 1831 |                         if (tsensor.tagid == 0) {                      
; 1832 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1833 |                         } else {                                       
; 1834 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1836 |                         scia_puts(buff);                               
; 1838 |                         switch (cmethod)
;     |  // on method code                                                     
; 1841 |                         case 'V':
;     |  // mv/v cal                                                           
; 1843 |                                 lcd_puts("Method: mv/v", 40);          
; 1845 |                                 tsensor.method = MD_RUN_MVV;           
; 1846 |                                 tsensor.points = 1;                    
; 1848 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1849 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1850 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1851 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1852 |                                 if (tsensor.slope[0] == 0) {           
; 1853 |                                         tsensor.slope[0] = 1;          
; 1855 |                                 scia_puts(cmdbuff);                    
; 1856 |                                 scia_puts("\r\n");                     
; 1858 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1859 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1861 |                                 scia_puts("Reading ... ");             
; 1863 |                                 dsum[0] = 0;                           
; 1864 |                                 sampcnt = CAL_SAMPLES;                 
; 1865 |                                 while (sampcnt--) {                    
; 1866 |                                         while (0 == ad7738_rawrdy()) { 
; 1867 |                                                 delay_us(1);
;     |          // wait                                                       
; 1870 |                                         cntp = ad7738_getraw();        
; 1871 |                                         dsum[0] += cntp->adc[ch];      
; 1873 |                                 scia_puts("done\r\n");                 
; 1875 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1876 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1877 |                                 break;                                 
; 1879 |                         case 'M':
;     |  // mass cal                                                           
; 1881 |                                 tsensor.method = MD_RUN_MAS;           
; 1883 |                                 // calibration points for mass cal only
; 1884 |                                 j = PNT_MAX;                           
; 1885 |                                 do {                                   
; 1886 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1887 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1888 |                                         tsensor.points = atoi(cmdbuff);
; 1889 |                                         scia_puts(cmdbuff);            
; 1890 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1891 |                                                 break;                 
; 1893 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1895 |                                 } while (j);                           
; 1896 |                                 scia_puts("\r\n");                     
; 1898 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1899 |                                 lcd_puts(buff, 40);                    
; 1901 |                                 // calculate the default point values  
; 1902 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1903 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1904 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1907 |                                 // read in value with default provided 
; 1908 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1909 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1910 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1911 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1913 |                                         // zero length response set the
;     |  default                                                               
; 1914 |                                         if (cmdlen > 0) {              
; 1915 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1917 |                                         scia_puts(cmdbuff);            
; 1918 |                                         scia_puts("\r\n");             
; 1921 |                                 // TODO: sort the list of points       
; 1923 |                                 // read adc count for each point       
; 1924 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1925 |                                         sprintf(buff,                  
; 1926 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1927 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1928 |                                                         j + 1);        
; 1929 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1930 |                                         scia_puts("Reading ... ");     
; 1932 |                                         dsum[0] = 0;                   
; 1933 |                                         sampcnt = CAL_SAMPLES;         
; 1934 |                                         while (sampcnt--) {            
; 1935 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1936 |                                                         delay_us(1);
;     |                  // wait                                               
; 1939 |                                                 cntp = ad7738_getraw();
; 1940 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1942 |                                         scia_puts("done\r\n");         
; 1943 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1946 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1947 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1948 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1949 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1950 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1951 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1952 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1953 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1954 | 
;     |  * tsensor.adc[j];                                                     
; 1956 |                                 break;                                 
; 1958 |                         case 'S':
;     |  // shunt cal                                                          
; 1960 |                                 lcd_puts("Method: shunt", 40);         
; 1962 |                                 tsensor.method = MD_RUN_SHT;           
; 1963 |                                 tsensor.points = 1;                    
; 1965 |                                 sprintf(buff,                          
; 1966 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1967 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1968 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1969 |                                 scia_puts(cmdbuff);                    
; 1970 |                                 scale = atof(cmdbuff);                 
; 1971 |                                 if (scale == 0) {                      
; 1972 |                                         scale = 1.46;                  
; 1973 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1975 |                                 scia_puts("\r\n");                     
; 1977 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1978 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1980 |                                 scia_puts("Reading ... ");             
; 1982 |                                 for (j = 0; j < 2; j++) {              
; 1983 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1985 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1986 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1987 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1989 |                                                 DINT;                  
; 1990 |                                                 maf_rst();             
; 1991 |                                                 EINT;                  
; 1992 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1995 |                                         dsum[j] = 0;                   
; 1996 |                                         sampcnt = CAL_SAMPLES;         
; 1997 |                                         while (sampcnt--) {            
; 1998 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1999 |                                                         delay_us(1);
;     |                  // wait                                               
; 2002 |                                                 cntp = ad7738_getraw();
; 2003 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 2007 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 2008 |                                 DINT;                                  
; 2009 |                                 maf_rst();                             
; 2010 |                                 EINT;                                  
; 2012 |                                 scia_puts("done\r\n");                 
; 2014 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 2015 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 2016 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 2017 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 2018 |                                 break;                                 
; 2020 |                         default:                                       
; 2021 |                                 lcd_clear();                           
; 2022 |                                 update_units();                        
; 2023 |                                 goto INVALIDCMD;                       
; 2026 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 2027 |                         scia_getparam(                                 
; 2028 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 2029 |                                         cmdbuff, sizeof(cmdbuff));     
; 2030 |                         scia_puts("Reading ... ");                     
; 2032 |                         for (j = 0; j < 2; j++) {                      
; 2033 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 2035 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 2036 |                                         for (i = 0; i < 50; i++) {     
; 2037 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 2039 |                                         DINT;                          
; 2040 |                                         maf_rst();                     
; 2041 |                                         EINT;                          
; 2042 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 2045 |                                 dsum[j] = 0;                           
; 2046 |                                 sampcnt = CAL_SAMPLES;                 
; 2047 |                                 while (sampcnt--) {                    
; 2048 |                                         while (0 == ad7738_rawrdy()) { 
; 2049 |                                                 delay_us(1);
;     |          // wait                                                       
; 2052 |                                         cntp = ad7738_getraw();        
; 2053 |                                         dsum[j] += cntp->adc[ch];      
; 2055 |                                 dsum[j] /= CAL_SAMPLES;                
; 2057 |                                 pt = 0;                                
; 2058 |                                 if (tsensor.points > 2) {              
; 2059 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 2060 |                                                 pt++;                  
; 2063 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 2064 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 2067 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 2068 |                         DINT;                                          
; 2069 |                         maf_rst();                                     
; 2070 |                         EINT;                                          
; 2072 |                         scia_puts("done\r\n");                         
; 2074 |                         tsensor.shunt = volt[1] - volt[0];             
; 2076 |                         // setup some other members of the structure   
; 2077 |                         tsensor.tare = 0;                              
; 2078 |                         tsensor.dacgain = 1;                           
; 2079 |                         tsensor.dacoff = 0;                            
; 2080 |                         tsensor.ch = ch;                               
; 2082 |                         DINT;                                          
; 2083 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 2084 |                                         sizeof(sconf_t));              
; 2086 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 2088 |                         ad7738_setcal();                               
; 2089 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 2090 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 2091 |                         EINT;                                          
; 2093 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 2094 |                                         ch + 1, ss + 1);               
; 2095 |                         scia_puts(buff);                               
; 2096 |                         print_sensor(ss);                              
; 2098 |                         unsaved = 1;                                   
; 2099 |                         lcd_clear();                                   
; 2100 |                         update_units();                                
; 2101 |                         break;                                         
; 2103 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2104 |                         // sensor config commands
;     |                                          //                            
; 2105 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2106 |                 case 'S':                               // sensor      
; 2108 |                         if (cmdlen < 2) {                              
; 2109 |                                 goto INVALIDCMD;                       
; 2112 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2113 |                                         && 'D' != cmdbuff[1]) {        
; 2114 |                                 goto INVALIDCMD;                       
; 2115 |                                 // invalid command                     
; 2117 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2137 |                         // sensor number                               
; 2138 |                         j = SENSPCH;                                   
; 2139 |                         do {                                           
; 2140 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2141 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2142 |                                 ss = atoi(cmdbuff);                    
; 2143 |                                 scia_puts(cmdbuff);                    
; 2144 |                                 if (ss > 0 && ss <= j) {               
; 2145 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2147 |                                         break;                         
; 2149 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2150 |                         } while (j);                                   
; 2151 |                         scia_puts("\r\n");                             
; 2152 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2154 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2157 |                         case 'N':
;     |  // change sensor label                                                
; 2159 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2160 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2161 |                                                 ss + 1, j);            
; 2162 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2163 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2165 |                                         cmdlen = j;                    
; 2166 |                                         cmdbuff[j] = '\0';             
; 2168 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2169 |                                                 cmdlen + 1);           
; 2170 |                                 scia_puts(cmdbuff);                    
; 2171 |                                 scia_puts("\r\n");                     
; 2172 |                                 unsaved = 1;                           
; 2174 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2175 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2176 |                                 scia_puts(buff);                       
; 2177 |                                 break;                                 
; 2179 |                         case 'U':
;     |  // change the output unit                                             
; 2181 |                                 scale = 0;                             
; 2183 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2184 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2186 |                                         do {                           
; 2187 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2188 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2189 |                                                 j = atoi(cmdbuff);     
; 2190 |                                                 scia_puts(cmdbuff);    
; 2191 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2192 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2194 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2195 |                                         scia_puts("\r\n");             
; 2197 |                                         switch (j) {                   
; 2198 |                                         case 0:                        
; 2199 |                                                 scale = 1;             
; 2200 |                                                 j |= 0x10;             
; 2201 |                                                 break;                 
; 2202 |                                         case 1:                        
; 2203 |                                                 scale = LB_TO_KG;      
; 2204 |                                                 j |= 0x10;             
; 2205 |                                                 break;                 
; 2206 |                                         case 7:                        
; 2207 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2208 |                                                 j |= 0xf0;             
; 2209 |                                                 break;                 
; 2211 |                                         break;                         
; 2213 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2215 |                                         do {                           
; 2216 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2217 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2218 |                                                 j = atoi(cmdbuff);     
; 2219 |                                                 scia_puts(cmdbuff);    
; 2220 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2221 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2223 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2224 |                                         scia_puts("\r\n");             
; 2226 |                                         switch (j) {                   
; 2227 |                                         case 0:                        
; 2228 |                                                 scale = 1.0 / LB_TO_KG;
; 2229 |                                                 j |= 0x10;             
; 2230 |                                                 break;                 
; 2231 |                                         case 1:                        
; 2232 |                                                 scale = 1;             
; 2233 |                                                 j |= 0x10;             
; 2234 |                                                 break;                 
; 2235 |                                         case 7:                        
; 2236 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2237 |                                                 j |= 0xf0;             
; 2238 |                                                 break;                 
; 2240 |                                         break;                         
; 2242 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2244 |                                         do {                           
; 2245 |                                                 scia_getparam(         
; 2246 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2247 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2248 |                                                 j = atoi(cmdbuff);     
; 2249 |                                                 scia_puts(cmdbuff);    
; 2250 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2251 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2253 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2254 |                                         scia_puts("\r\n");             
; 2256 |                                         switch (j) {                   
; 2257 |                                         case 2:                        
; 2258 |                                                 scale = 1;             
; 2259 |                                                 j |= 0x20;             
; 2260 |                                                 break;                 
; 2261 |                                         case 3:                        
; 2262 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2263 |                                                 j |= 0x20;             
; 2264 |                                                 break;                 
; 2265 |                                         case 4:                        
; 2266 |                                                 scale = IN_TO_MM;      
; 2267 |                                                 j |= 0x20;             
; 2268 |                                                 break;                 
; 2269 |                                         case 7:                        
; 2270 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2271 |                                                 j |= 0xf0;             
; 2272 |                                                 break;                 
; 2274 |                                         break;                         
; 2276 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2278 |                                         do {                           
; 2279 |                                                 scia_getparam(         
; 2280 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2281 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2282 |                                                 j = atoi(cmdbuff);     
; 2283 |                                                 scia_puts(cmdbuff);    
; 2284 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2285 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2287 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2288 |                                         scia_puts("\r\n");             
; 2290 |                                         switch (j) {                   
; 2291 |                                         case 2:                        
; 2292 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2293 |                                                 j |= 0x20;             
; 2294 |                                                 break;                 
; 2295 |                                         case 3:                        
; 2296 |                                                 scale = 1;             
; 2297 |                                                 j |= 0x20;             
; 2298 |                                                 break;                 
; 2299 |                                         case 4:                        
; 2300 |                                                 scale = 10;            
; 2301 |                                                 j |= 0x20;             
; 2302 |                                                 break;                 
; 2303 |                                         case 7:                        
; 2304 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2305 |                                                 j |= 0xf0;             
; 2306 |                                                 break;                 
; 2308 |                                         break;                         
; 2310 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2312 |                                         do {                           
; 2313 |                                                 scia_getparam(         
; 2314 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2315 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2316 |                                                 j = atoi(cmdbuff);     
; 2317 |                                                 scia_puts(cmdbuff);    
; 2318 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2319 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2321 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2322 |                                         scia_puts("\r\n");             
; 2324 |                                         switch (j) {                   
; 2325 |                                         case 2:                        
; 2326 |                                                 scale = 1.0 / IN_TO_MM;
; 2327 |                                                 j |= 0x20;             
; 2328 |                                                 break;                 
; 2329 |                                         case 3:                        
; 2330 |                                                 scale = 0.1;           
; 2331 |                                                 j |= 0x20;             
; 2332 |                                                 break;                 
; 2333 |                                         case 4:                        
; 2334 |                                                 scale = 1;             
; 2335 |                                                 j |= 0x20;             
; 2336 |                                                 break;                 
; 2337 |                                         case 7:                        
; 2338 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2339 |                                                 j |= 0xf0;             
; 2340 |                                                 break;                 
; 2342 |                                         break;                         
; 2344 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2346 |                                         do {                           
; 2347 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2348 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2349 |                                                 j = atoi(cmdbuff);     
; 2350 |                                                 scia_puts(cmdbuff);    
; 2351 |                                                 if (j != 5 && j != 7) {
; 2352 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2354 |                                         } while (j != 5 && j != 7);    
; 2355 |                                         scia_puts("\r\n");             
; 2357 |                                         switch (j) {                   
; 2358 |                                         case 5:                        
; 2359 |                                                 scale = 1;             
; 2360 |                                                 j |= 0x30;             
; 2361 |                                                 break;                 
; 2362 |                                         case 7:                        
; 2363 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2364 |                                                 j |= 0xf0;             
; 2365 |                                                 break;                 
; 2367 |                                         break;                         
; 2369 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2371 |                                         do {                           
; 2372 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2373 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2374 |                                                 j = atoi(cmdbuff);     
; 2375 |                                                 scia_puts(cmdbuff);    
; 2376 |                                                 if (j != 6 && j != 7) {
; 2377 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2379 |                                         } while (j != 6 && j != 7);    
; 2380 |                                         scia_puts("\r\n");             
; 2382 |                                         switch (j) {                   
; 2383 |                                         case 6:                        
; 2384 |                                                 scale = 1;             
; 2385 |                                                 j |= 0x40;             
; 2386 |                                                 break;                 
; 2387 |                                         case 7:                        
; 2388 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2389 |                                                 j |= 0xf0;             
; 2390 |                                                 break;                 
; 2392 |                                         break;                         
; 2394 |                                 default:                               
; 2395 |                                         break;                         
; 2398 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2399 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2400 |                                         break;                         
; 2403 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2404 |                                         scia_puts(                     
; 2405 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2406 |                                         break;                         
; 2409 |                                 conf_data.sensor[ss].ounit = j;        
; 2410 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2411 |                                 unsaved = 1;                           
; 2413 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2414 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2415 |                                 scia_puts(buff);                       
; 2417 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2418 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2419 |                                                 update_units();        
; 2420 |                                                 DINT;                  
; 2421 |                                                 ad7738_setcal();       
; 2422 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2423 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2424 |                                                 EINT;                  
; 2427 |                                 break;                                 
; 2429 |                         case 'B':
;     |  // change percent base                                                
; 2431 |                                 // base                                
; 2432 |                                 j = 1;                                 
; 2433 |                                 do {                                   
; 2434 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2435 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2436 |                                         scale = atof(cmdbuff);         
; 2437 |                                         scia_puts(cmdbuff);            
; 2438 |                                         if (scale != 0) {              
; 2439 |                                                 break;                 
; 2441 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2442 |                                 } while (j);                           
; 2443 |                                 scia_puts("\r\n");                     
; 2444 |                                 conf_data.sensor[ss].base = scale;     
; 2445 |                                 unsaved = 1;                           
; 2447 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2448 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2449 |                                 scia_puts(buff);                       
; 2451 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2452 |                                         // output unit is percent      
; 2453 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2454 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2456 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2457 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2458 |                                                         // changed is f
;     | or the current sensor                                                  
; 2459 |                                                         DINT;          
; 2460 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2461 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2462 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2463 |                                                         EINT;          
; 2467 |                                 break;                                 
; 2469 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2471 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2472 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2473 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2474 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2475 |                                 scia_puts(cmdbuff);                    
; 2476 |                                 scia_puts("\r\n");                     
; 2478 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2479 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2480 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2481 |                                 scia_puts(cmdbuff);                    
; 2482 |                                 scia_puts("\r\n");                     
; 2483 |                                 unsaved = 1;                           
; 2485 |                                 sprintf(buff,                          
; 2486 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2487 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2488 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2489 |                                 scia_puts(buff);                       
; 2491 |                                 DINT;                                  
; 2492 |                                 ad7738_setcal();                       
; 2493 |                                 EINT;                                  
; 2494 |                                 break;                                 
; 2496 |                         default:                                       
; 2497 |                                 goto INVALIDCMD;                       
; 2500 |                         break;                                         
; 2502 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2503 |                         // Encoder config commands
;     |                                  //                                    
; 2504 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2505 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2507 |                         if (cmdlen < 2) {                              
; 2508 |                                 goto INVALIDCMD;                       
; 2511 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2514 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2516 |                                 j = MAF_MAX;                           
; 2517 |                                 do {                                   
; 2518 |                                         sprintf(buff,                  
; 2519 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2520 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2521 |                                         i = atoi(cmdbuff);             
; 2522 |                                         scia_puts(cmdbuff);            
; 2523 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2524 |                                                 break;
;     |          // valid number input                                         
; 2526 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2527 |                                 } while (j);                           
; 2528 |                                 scia_puts("\r\n");                     
; 2530 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2531 |                                                 i);                    
; 2532 |                                 scia_puts(buff);                       
; 2533 |                                 unsaved = 1;                           
; 2535 |                                 // update new value                    
; 2536 |                                 DINT;                                  
; 2537 |                                 conf_data.velfilter = i;               
; 2538 |                                 ad7738_setcal();                       
; 2539 |                                 velf_rst();                            
; 2540 |                                 EINT;                                  
; 2541 |                                 break;                                 
; 2543 |                         case 'P':
;     |  // count per inch                                                     
; 2545 |                                 // channel number                      
; 2546 |                                 j = ENC_MAX;                           
; 2547 |                                 do {                                   
; 2548 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2549 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2550 |                                         ss = atoi(cmdbuff);            
; 2551 |                                         scia_puts(cmdbuff);            
; 2552 |                                         if (ss > 0 && ss <= j) {       
; 2553 |                                                 break;
;     |          // valid input line number                                    
; 2555 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2556 |                                 } while (j);                           
; 2557 |                                 scia_puts("\r\n");                     
; 2558 |                                 ss--;
;     |  // line number, convert to index                                      
; 2560 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2561 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2562 |                                 templg = atol(cmdbuff);                
; 2563 |                                 scia_puts(cmdbuff);                    
; 2564 |                                 scia_puts("\r\n");                     
; 2565 |                                 if (templg == 0) {                     
; 2566 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2567 |                                         break;                         
; 2569 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2570 |                                                 ss + 1, templg);       
; 2571 |                                 scia_puts(buff);                       
; 2572 |                                 unsaved = 1;                           
; 2574 |                                 // update new value                    
; 2575 |                                 DINT;                                  
; 2576 |                                 conf_data.cntperin[ss] = templg;       
; 2577 |                                 ad7738_setcal();                       
; 2578 |                                 velf_rst();                            
; 2579 |                                 EINT;                                  
; 2580 |                                 break;                                 
; 2582 |                         break;                                         
; 2584 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2585 |                         // Display command
;     |                                  //                                    
; 2586 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2587 |                 case 'D':                                              
; 2589 |                         if (cmdlen < 2) {                              
; 2590 |                                 goto INVALIDCMD;                       
; 2593 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2595 |                         case 'S':
;     |  // selection                                                          
; 2597 |                                 // line number                         
; 2598 |                                 j = VFD_MAX;                           
; 2599 |                                 do {                                   
; 2600 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2601 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2602 |                                         ss = atoi(cmdbuff);            
; 2603 |                                         scia_puts(cmdbuff);            
; 2604 |                                         if (ss > 0 && ss <= j) {       
; 2605 |                                                 break;
;     |          // valid input line number                                    
; 2607 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2608 |                                 } while (j);                           
; 2609 |                                 scia_puts("\r\n");                     
; 2610 |                                 ss--;
;     |  // line number, convert to index                                      
; 2612 |                                 // what                                
; 2613 |                                 for (j = 0; j < 7; j++) {              
; 2614 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2615 |                                         scia_puts(buff);               
; 2616 |                                         if (j < 6) {                   
; 2617 |                                                 scia_puts(", ");       
; 2620 |                                 scia_puts("\r\n");                     
; 2621 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2622 |                                                 ss + 1);               
; 2623 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2624 |                                 pt = atoi(cmdbuff);                    
; 2625 |                                 if (pt >= 7) {                         
; 2626 |                                         pt = 0;                        
; 2627 |                                         scia_puts(                     
; 2628 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2630 |                                 scia_puts(cmdbuff);                    
; 2631 |                                 scia_puts("\r\n");                     
; 2632 |                                 conf_data.vfd[ss].what = pt;           
; 2634 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2636 |                                 case VFD_LOAD:                         
; 2637 |                                 case VFD_PEAK:                         
; 2638 |                                 case VFD_VALL:                         
; 2640 |                                         j = CHS_MAX;                   
; 2641 |                                         goto VFD_CHANNEL;              
; 2643 |                                 case VFD_POSI:                         
; 2644 |                                 case VFD_VELO:                         
; 2646 |                                         j = ENC_MAX;                   
; 2648 |                                         VFD_CHANNEL:                   
; 2649 |                                         // channel number              
; 2650 |                                         do {                           
; 2651 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2652 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2653 |                                                 ch = atoi(cmdbuff);    
; 2654 |                                                 scia_puts(cmdbuff);    
; 2655 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2656 |                                                         break;
;     |          // valid input channel number                                 
; 2658 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2659 |                                         } while (j);                   
; 2660 |                                         scia_puts("\r\n");             
; 2661 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2662 |                                         conf_data.vfd[ss].ch = ch;     
; 2664 |                                         // digits after decimal point  
; 2665 |                                         j = 1;                         
; 2666 |                                         do {                           
; 2667 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2668 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2669 |                                                 i = atoi(cmdbuff);     
; 2670 |                                                 if (i >= 0 && i <= 5) {
; 2671 |                                                         break;         
; 2673 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2674 |                                         } while (j);                   
; 2675 |                                         scia_puts(cmdbuff);            
; 2676 |                                         scia_puts("\r\n");             
; 2677 |                                         conf_data.vfd[ss].adec = i;    
; 2679 |                                         sprintf(buff,                  
; 2680 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2681 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2682 |                                         scia_puts(buff);               
; 2683 |                                         break;                         
; 2685 |                                 case VFD_LIMIT:                        
; 2686 |                                         // channel number              
; 2687 |                                         j = CHS_MAX;                   
; 2688 |                                         do {                           
; 2689 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2690 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2691 |                                                 ch = atoi(cmdbuff);    
; 2692 |                                                 scia_puts(cmdbuff);    
; 2693 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2694 |                                                         break;
;     |          // valid input channel number                                 
; 2696 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2697 |                                         } while (j);                   
; 2698 |                                         scia_puts("\r\n");             
; 2699 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2700 |                                         conf_data.vfd[ss].ch = ch;     
; 2702 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2703 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2704 |                                         scia_puts(buff);               
; 2705 |                                         break;                         
; 2706 |                                 case VFD_TEMP:                         
; 2707 |                                         // no more info                
; 2708 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2709 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2710 |                                         scia_puts(buff);               
; 2711 |                                         break;                         
; 2714 |                                 lcd_clear();                           
; 2715 |                                 update_units();                        
; 2716 |                                 unsaved = 1;                           
; 2717 |                                 break;                                 
; 2719 |                         default:                                       
; 2720 |                                 goto INVALIDCMD;                       
; 2723 |                         break;                                         
; 2725 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2726 |                         // DAC out command
;     |                                  //                                    
; 2727 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2728 |                 case 'O':                                              
; 2730 |                         if (cmdlen < 2) {                              
; 2731 |                                 goto INVALIDCMD;                       
; 2734 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2736 |                         case 'S':
;     |  // selection                                                          
; 2738 |                                 // DAC channel number                  
; 2739 |                                 j = DAC_MAX;                           
; 2740 |                                 do {                                   
; 2741 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2742 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2743 |                                         ss = atoi(cmdbuff);            
; 2744 |                                         scia_puts(cmdbuff);            
; 2745 |                                         if (ss > 0 && ss <= j) {       
; 2746 |                                                 break;
;     |          // valid input channel number                                 
; 2748 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2749 |                                 } while (j);                           
; 2750 |                                 scia_puts("\r\n");                     
; 2751 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2753 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2754 |                                 for (j = 0; j < 5; j++) {              
; 2755 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2756 |                                         scia_puts(buff);               
; 2757 |                                         scia_puts(", ");               
; 2759 |                                 j = 7;                                 
; 2760 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2761 |                                 scia_puts(buff);                       
; 2762 |                                 scia_puts("\r\n");                     
; 2763 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2764 |                                                 ss + 1);               
; 2765 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2766 |                                 pt = atoi(cmdbuff);                    
; 2767 |                                 if (pt >= 5 && pt != 7) {              
; 2768 |                                         pt = 0;                        
; 2769 |                                         scia_puts(                     
; 2770 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2772 |                                 scia_puts(cmdbuff);                    
; 2773 |                                 scia_puts("\r\n");                     
; 2774 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2776 |                                 if ( VFD_VOLT != pt) {                 
; 2778 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2779 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2780 |                                                 j = CHS_MAX;           
; 2781 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2782 |                                                 j = ENC_MAX;           
; 2785 |                                         // linked load/... channel numb
;     | er                                                                     
; 2786 |                                         do {                           
; 2787 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2788 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2789 |                                                 ch = atoi(cmdbuff);    
; 2790 |                                                 scia_puts(cmdbuff);    
; 2791 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2792 |                                                         break;
;     |          // valid input channel number                                 
; 2794 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2795 |                                         } while (j);                   
; 2796 |                                         scia_puts("\r\n");             
; 2797 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2798 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2800 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2801 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2802 |                                                 // gain                
; 2803 |                                                 if ( VFD_POSI == pt) { 
; 2804 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2805 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2806 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2808 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2809 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2810 |                                                 scia_puts(cmdbuff);    
; 2811 |                                                 scia_puts("\r\n");     
; 2813 |                                                 // offset              
; 2814 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2815 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2816 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2817 |                                                 scia_puts(cmdbuff);    
; 2818 |                                                 scia_puts("\r\n");     
; 2822 |                                 unsaved = 1;                           
; 2824 |                                 // print result                        
; 2825 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2826 |                                                 LPV[pt]);              
; 2827 |                                 scia_puts(buff);                       
; 2829 |                                 if ( VFD_VOLT == pt) {                 
; 2830 |                                         scia_puts("\r\n");             
; 2831 |                                 } else {                               
; 2832 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2833 |                                         scia_puts(buff);               
; 2835 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2836 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2837 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2838 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2839 |                                                 scia_puts(buff);       
; 2843 |                                 DINT;                                  
; 2844 |                                 ad7738_setcal();                       
; 2845 |                                 EINT;                                  
; 2846 |                                 break;                                 
; 2848 |                         case 'D':
;     |  // direct voltage output                                              
; 2850 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2851 |                                                 || 'V' != cmdbuff[3]) {
; 2852 |                                         goto INVALIDCMD;               
; 2855 |                                 // channel index                       
; 2856 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2857 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2858 |                                         goto INVALIDCMD;               
; 2859 |                                         // invalid channel number      
; 2861 |                                 ss--;
;     |  // change to zero based index                                         
; 2863 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2864 |                                         goto INVALIDCMD;               
; 2865 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2868 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2869 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2870 |                                         goto INVALIDCMD;               
; 2871 |                                         // invalid voltage             
; 2874 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2875 |                                 if (volt[0] < 0) {                     
; 2876 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2877 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2878 |                                 } else {                               
; 2879 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2880 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2883 |                                 if (dsum[0] <= 0) {                    
; 2884 |                                         dacc[0] = 0;                   
; 2885 |                                 } else if (dsum[0] >= 0xffff) {        
; 2886 |                                         dacc[0] = 0xffff;              
; 2887 |                                 } else {                               
; 2888 |                                         dacc[0] = (Uint16) dsum[0];    
; 2891 |                                 mcbsp_xmit(dacc[0], ss);               
; 2892 |                                 latch_dac();                           
; 2894 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2895 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2896 |                                 scia_puts(buff);                       
; 2898 |                                 break;                                 
; 2900 |                         default:                                       
; 2901 |                                 goto INVALIDCMD;                       
; 2904 |                         break;                                         
; 2906 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2907 |                         // LIMIT command
;     |                                          //                            
; 2908 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2909 |                 case 'L':                                              
; 2911 |                         if (cmdlen < 2) {                              
; 2912 |                                 goto INVALIDCMD;                       
; 2915 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2917 |                         case 'S':
;     |  // selection                                                          
; 2919 |                                 // LIMIT channel number                
; 2920 |                                 j = LIM_MAX;                           
; 2921 |                                 do {                                   
; 2922 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2923 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2924 |                                         ss = atoi(cmdbuff);            
; 2925 |                                         scia_puts(cmdbuff);            
; 2926 |                                         if (ss > 0 && ss <= j) {       
; 2927 |                                                 break;
;     |          // valid input channel number                                 
; 2929 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2930 |                                 } while (j);                           
; 2931 |                                 scia_puts("\r\n");                     
; 2932 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2934 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2935 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2936 |                                 scia_puts(cmdbuff);                    
; 2937 |                                 scia_puts("\r\n");                     
; 2939 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2941 |                                         // set on flag                 
; 2942 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2944 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2945 |                                         for (j = 0; j < 5; j++) {      
; 2946 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2947 |                                                 scia_puts(buff);       
; 2948 |                                                 if (j < 4) {           
; 2949 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2952 |                                         scia_puts("\r\n");             
; 2953 |                                         sprintf(buff,                  
; 2954 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2955 |                                                         ss + 1);       
; 2956 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2957 |                                         pt = atoi(cmdbuff);            
; 2958 |                                         if (pt >= 5) {                 
; 2959 |                                                 pt = 0;                
; 2960 |                                                 scia_puts(             
; 2961 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2963 |                                         scia_puts(cmdbuff);            
; 2964 |                                         scia_puts("\r\n");             
; 2965 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2967 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2968 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2969 |                                                 j = CHS_MAX;           
; 2970 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2971 |                                                 j = ENC_MAX;           
; 2974 |                                         // linked load/... channel numb
;     | er                                                                     
; 2975 |                                         do {                           
; 2976 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2977 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2978 |                                                 ch = atoi(cmdbuff);    
; 2979 |                                                 scia_puts(cmdbuff);    
; 2980 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2981 |                                                         break;
;     |          // valid input channel number                                 
; 2983 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2984 |                                         } while (j);                   
; 2985 |                                         scia_puts("\r\n");             
; 2986 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2987 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2989 |                                         // NO/NC                       
; 2990 |                                         scia_getparam(                 
; 2991 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2992 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2993 |                                         scia_puts(cmdbuff);            
; 2994 |                                         scia_puts("\r\n");             
; 2996 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2998 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2999 |                                         } else {                       
; 3000 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 3003 |                                         scia_getparam(                 
; 3004 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 3005 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3006 |                                         scia_puts(cmdbuff);            
; 3007 |                                         scia_puts("\r\n");             
; 3009 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 3011 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 3012 |                                         } else {                       
; 3013 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 3016 |                                         scia_getparam(                 
; 3017 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 3018 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 3019 |                                         scia_puts(cmdbuff);            
; 3020 |                                         scia_puts("\r\n");             
; 3022 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 3024 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 3025 |                                         } else {                       
; 3026 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 3029 |                                         // unit (output)               
; 3030 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 3031 |                                         case VFD_LOAD:                 
; 3032 |                                         case VFD_PEAK:                 
; 3033 |                                         case VFD_VALL:                 
; 3034 |                                                 ccp =                  
; 3035 |                                                                 UNITS[0
;     | x0f                                                                    
; 3036 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 3037 |                                                 break;                 
; 3038 |                                         case VFD_POSI:                 
; 3039 |                                                 ccp = POS_U;           
; 3040 |                                                 break;                 
; 3041 |                                         case VFD_VELO:                 
; 3042 |                                                 ccp = VEL_U;           
; 3043 |                                                 break;                 
; 3046 |                                         // set value                   
; 3047 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 3048 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3049 |                                         scia_puts(cmdbuff);            
; 3050 |                                         scia_puts("\r\n");             
; 3052 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 3053 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3054 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3056 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 3057 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 3058 |                                         scia_puts(cmdbuff);            
; 3059 |                                         scia_puts("\r\n");             
; 3061 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 3062 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 3063 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 3064 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 3066 |                                         // print result                
; 3067 |                                         sprintf(buff,                  
; 3068 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 3069 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 3070 |                                         scia_puts(buff);               
; 3072 |                                         sprintf(buff,                  
; 3073 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 3074 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 3075 | 
;     |  "NC" : "NO",                                                          
; 3076 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 3077 | 
;     |  "ON" : "OFF",                                                         
; 3078 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 3079 |                                         scia_puts(buff);               
; 3080 |                                         sprintf(buff,                  
; 3081 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 3082 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 3083 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 3084 |                                         scia_puts(buff);               
; 3086 |                                 } else
;     |  // turn off                                                           
; 3088 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 3089 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 3092 |                                 unsaved = 1;                           
; 3094 |                                 DINT;                                  
; 3095 |                                 ad7738_setcal();                       
; 3096 |                                 EINT;                                  
; 3097 |                                 break;                                 
; 3099 |                         default:                                       
; 3100 |                                 goto INVALIDCMD;                       
; 3103 |                         break;                                         
; 3105 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3106 |                         // reset commands
;     |                                          //                            
; 3107 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3108 |                 case 'R':                                              
; 3110 |                         if (cmdlen < 2) {                              
; 3111 |                                 goto INVALIDCMD;                       
; 3114 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3116 |                         case 'T':
;     |  // tare                                                               
; 3118 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3119 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3120 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3121 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3122 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3123 |                                 } else {                               
; 3124 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3125 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3126 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3128 |                                 break;                                 
; 3130 |                         case 'P':
;     |  // peak                                                               
; 3132 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3133 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3134 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3135 |                                 } else {                               
; 3136 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3138 |                                 break;                                 
; 3140 |                         case 'V':
;     |  // valley                                                             
; 3142 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3143 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3144 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3145 |                                 } else {                               
; 3146 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3148 |                                 break;                                 
; 3150 |                         case 'S':
;     |  // shunt switch                                                       
; 3152 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3153 |                                         shunt_switch(1);               
; 3154 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3155 |                                 } else {                               
; 3156 |                                         shunt_switch(0);               
; 3157 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3159 |                                 break;                                 
; 3161 |                         case 'L':
;     |  // limit                                                              
; 3163 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3164 |                                 ch--;                                  
; 3166 |                                 ad7738_resetlimit(ch);                 
; 3167 |                                 break;                                 
; 3169 |                         case 'I':
;     |  // posItion                                                           
; 3171 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3172 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3173 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3174 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3175 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3176 |                                 } else {                               
; 3177 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3178 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3179 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3181 |                                 break;                                 
; 3183 |                         default:                                       
; 3184 |                                 goto INVALIDCMD;                       
; 3186 |                         break;                                         
; 3188 | #ifdef SDHCCARD                                                        
; 3190 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3191 |                         // Stream to SD Card
;     |                                  //                                    
; 3192 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3193 |                         case 'W':// Write control                      
; 3195 |                         if( cmdlen < 2 )                               
; 3197 |                                 goto INVALIDCMD;                       
; 3200 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3202 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3204 |                                 if( cmdlen < 3 )                       
; 3206 |                                         goto INVALIDCMD;               
; 3209 |                                 if( sd_write )                         
; 3211 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3212 |                                         break;                         
; 3215 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3216 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3218 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3220 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3221 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3223 |                                 if( !res )                             
; 3225 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3226 |                                         if( res || cmdlen != temp16 )  
; 3228 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3229 |                                                 scia_puts( buff );     
; 3230 |                                                 f_close( fp );         
; 3231 |                                                 fp = NULL;             
; 3232 |                                                 break;                 
; 3249 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3251 |                                         if( res )                      
; 3253 |                                                 f_close( fp );         
; 3254 |                                                 fp = NULL;             
; 3255 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3256 |                                                 break;                 
; 3259 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3260 |                                         scia_puts( buff );             
; 3262 |                                         prod_init();                   
; 3263 |                                         sd_write = 1;                  
; 3264 |                                         sd_cnt = 0;                    
; 3265 |                                         break;                         
; 3268 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3269 |                                 scia_puts( buff );                     
; 3270 |                                 break;                                 
; 3272 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3274 |                                 if( sd_write )                         
; 3276 |                                         sd_close = 1;                  
; 3277 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3278 |                                         break;                         
; 3280 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3281 |                                 break;                                 
; 3283 |                                 case 'L':
;     |          // list files                                                 
; 3285 |                                 if( sd_write )                         
; 3287 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3288 |                                         break;                         
; 3291 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3292 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3294 |                                 res = f_opendir(&dir, "0:");           
; 3295 |                                 if (res)                               
; 3297 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3298 |                                         scia_puts( buff );             
; 3299 |                                         break;                         
; 3302 |                                 p1 = s1 = s2 = 0;                      
; 3303 |                                 for(;;)                                
; 3305 |                                         res = f_readdir(&dir, &Finfo); 
; 3306 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3307 |                                         break;                         
; 3308 |                                         if (Finfo.fattrib & AM_DIR)    
; 3310 |                                                 s2++;                  
; 3312 |                                         else                           
; 3314 |                                                 s1++;                  
; 3315 |                                                 p1 += Finfo.fsize;     
; 3317 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3318 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3319 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3320 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3321 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3322 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3323 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3324 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3325 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3326 |                                         scia_puts( buff );             
; 3328 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3329 |                                 scia_puts( buff );                     
; 3330 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3332 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3333 |                                         scia_puts( buff );             
; 3335 |                                 break;                                 
; 3337 |                                 case 'G':
;     |          // get a file                                                 
; 3339 |                                 if( sd_write )                         
; 3341 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3342 |                                         break;                         
; 3345 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3346 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3348 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3350 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3351 |                                 res = f_open( fp, buff, FA_READ );     
; 3352 |                                 if (res)                               
; 3354 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3355 |                                         scia_puts( buff );             
; 3356 |                                         break;                         
; 3359 |                                 do                                     
; 3361 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3362 |                                         scia_send( buff, temp16 );     
; 3363 |                                 }while( !res && temp16 == 512 );       
; 3365 |                                 f_close( fp );                         
; 3366 |                                 fp = NULL;                             
; 3367 |                                 break;                                 
; 3369 |                                 case 'R':
;     |          // remove a file                                              
; 3371 |                                 if( sd_write )                         
; 3373 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3374 |                                         break;                         
; 3377 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3378 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3380 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3382 |                                 res = f_unlink( buff );                
; 3384 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3385 |                                 scia_puts( buff );                     
; 3386 |                                 break;                                 
; 3388 |                                 default:                               
; 3389 |                                 goto INVALIDCMD;                       
; 3392 |                         break;                                         
; 3393 | #endif                                                                 
; 3395 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3396 |                         // Flash memory access commands
;     |                                    //                                  
; 3397 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3398 |                 case 'F':                                       // flas
;     | h access                                                               
; 3400 |                         if (cmdlen < 2) {                              
; 3401 |                                 goto INVALIDCMD;                       
; 3404 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3406 |                         case 'W':
;     |  // write flash                                                        
; 3408 |                                 if (unsaved) {                         
; 3409 |                                         // flash writing               
; 3410 |                                         lcd_clear();                   
; 3411 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3412 |                                         scia_puts("Flash writing..."); 
; 3414 |                                         for (i = 0; i < 50; i++) {     
; 3415 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3418 |                                         DINT;                          
; 3419 |                                         flash_ret = conf_write();      
; 3420 |                                         EINT;                          
; 3422 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3423 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3424 |                                                 unsaved = 0;           
; 3425 |                                         } else {                       
; 3426 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3428 |                                         lcd_clear();                   
; 3429 |                                         update_units();                
; 3430 |                                         break;                         
; 3432 |                                 scia_puts(                             
; 3433 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3434 |                                 break;                                 
; 3436 |                         case 'R':
;     |  // read flash                                                         
; 3438 |                                 // flash reading                       
; 3439 |                                 conf_read();                           
; 3441 |                                 DINT;                                  
; 3442 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3443 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3444 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3445 |                                 EINT;                                  
; 3447 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3448 |                                 unsaved = 0;                           
; 3450 |                                 update_units();                        
; 3452 |                                 break;                                 
; 3454 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3456 |                                 conf_default();                        
; 3458 |                                 // flash writing                       
; 3459 |                                 lcd_clear();                           
; 3460 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3461 |                                 scia_puts("Flash write...");           
; 3463 |                                 for (i = 0; i < 50; i++) {             
; 3464 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3467 |                                 DINT;                                  
; 3468 |                                 flash_ret = conf_write();              
; 3469 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3470 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3471 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3472 |                                 EINT;                                  
; 3474 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3475 |                                         scia_puts(                     
; 3476 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3477 |                                         unsaved = 0;                   
; 3478 |                                 } else {                               
; 3479 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3481 |                                 lcd_clear();                           
; 3482 |                                 update_units();                        
; 3483 |                                 break;                                 
; 3485 |                         default:                                       
; 3486 |                                 goto INVALIDCMD;                       
; 3489 |                         break;                                         
; 3491 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3492 |                         // Help manu
;     |                                  //                                    
; 3493 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3494 |                 case 'H':                               // help menu   
; 3496 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3498 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3499 |                         scia_puts(                                     
; 3500 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3501 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3502 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3503 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3504 |                         scia_puts("\r\n");                             
; 3506 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3507 |                         scia_puts("UN          Set unit name.\r\n");   
; 3508 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3509 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3510 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3511 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3512 |                         scia_puts("\r\n");                             
; 3514 |                         scia_puts(                                     
; 3515 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3516 |                         scia_puts(                                     
; 3517 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3518 |                         scia_puts("\r\n");                             
; 3520 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3521 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3522 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3523 |                         scia_puts("\r\n");                             
; 3525 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3526 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3527 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3528 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3529 |                         scia_puts("\r\n");                             
; 3531 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3532 |                         scia_puts(                                     
; 3533 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3534 |                         scia_puts("\r\n");                             
; 3536 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3537 |                         scia_puts("\r\n");                             
; 3539 |                         scia_puts(                                     
; 3540 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3541 |                         scia_puts(                                     
; 3542 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3543 |                         scia_puts("\r\n");                             
; 3545 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3546 |                         scia_puts("\r\n");                             
; 3548 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3549 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3550 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3551 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3552 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3553 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3554 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3555 |                         scia_puts("\r\n");                             
; 3557 | #ifdef SDHCCARD                                                        
; 3558 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3559 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3560 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3561 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3562 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3563 |                         scia_puts( "\r\n" );                           
; 3564 | #endif                                                                 
; 3566 |                         scia_puts(                                     
; 3567 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3568 |                         scia_puts(                                     
; 3569 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3570 |                         scia_puts(                                     
; 3571 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3572 |                         scia_puts("\r\n");                             
; 3574 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3576 |                         // not implemented                             
; 3577 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3579 |                         scia_puts("\r\n");                             
; 3581 |                         break;                                         
; 3583 |                 case 'X':                                              
; 3585 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3587 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3589 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3592 |                         cmd_mode = SCI_MODE_BIN;                       
; 3593 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3595 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3597 |                         break;                                         
; 3599 |                 case 'Z':                                              
; 3601 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3603 |                         for (i = 0; i < 100; i++)       // 2s          
; 3605 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3608 |                         reboot();                                      
; 3609 |                         break;                                         
; 3633 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3634 |                         // Invalid commands
;     |                                  //                                    
; 3635 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3636 |                 default:                                               
; 3638 |                         INVALIDCMD:                                    
; 3640 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3641 |                         scia_puts(cmdbuff);                            
; 3642 |                         scia_puts("\", ignored.\r\n");                 
; 3643 |                         break;                                         
; 3645 |                 } // switch on 1st byte                                
; 3647 |                 if (unsaved) {                                         
; 3648 |                         scia_puts(                                     
; 3649 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3652 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3653 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3654 |                 // BIN command mode processing
;     |                          //                                            
; 3655 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3657 |                 // ------------------------------------------------    
; 3658 |                 // DEBUG: put received command on LCD                  
; 3667 |                 // ------------------------------------------------    
; 3668 |                 if (cmdlen < 2) {                                      
; 3669 |                         // INVALID COMMAND, less than 2 byte           
; 3670 |                         // may need to send NACK back                  
; 3671 |                         continue;                                      
; 3674 |                 for (i = 0; i < 2; i++) {                              
; 3675 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3678 |                 j = 2;                                  // buff length 
; 3679 |                 bincmdresult = Error_UnImpl;                           
; 3681 |                 // DEBUG, sending the command back                     
; 3682 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3684 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3686 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3689 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3804 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3806 |                 case CheckAddress:                                     
; 3808 |                         buff[j++] = 0;                                 
; 3809 |                         bincmdresult = OK_SendResult;                  
; 3810 |                         break;                                         
; 3812 |                 case SetAddress:                                       
; 3814 |                         buff[j] = cmdbuff[j];                          
; 3815 |                         j++;                                           
; 3816 |                         bincmdresult = OK_SendResult;                  
; 3817 |                         break;                                         
; 3819 |                 case RemoveAddress:                                    
; 3821 |                         buff[j] = cmdbuff[j];                          
; 3822 |                         j++;                                           
; 3823 |                         bincmdresult = OK_SendResult;                  
; 3824 |                         break;                                         
; 3826 |                 case GetUnitInfo:                                      
; 3828 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3829 |                         for (i = 0; i < 2; i++) {                      
; 3830 |                                 buff[j++] = 0xff & *intp;              
; 3831 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3832 |                                 intp++;                                
; 3835 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3836 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3838 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3839 |                         for (i = 0; i < 2; i++) {                      
; 3840 |                                 buff[j++] = 0xff & *intp;              
; 3841 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3842 |                                 intp++;                                
; 3845 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3846 |                         buff[j++] = slen;                              
; 3847 |                         for (i = 0; i < slen; i++) {                   
; 3848 |                                 buff[j++] = conf_data.uname[i]; // name
; 3850 |                         bincmdresult = OK_SendResult;                  
; 3852 |                         break;                                         
; 3854 |                 case SetUnitSN:                                        
; 3856 |                         if (cmdlen < 6) {                              
; 3857 |                                 bincmdresult = Error_Invalid;          
; 3858 |                                 break;                                 
; 3861 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3862 |                         for (i = 0; i < 2; i++) {                      
; 3863 |                                 *intp = cmdbuff[j];                    
; 3864 |                                 buff[j++] = 0xff & *intp;              
; 3865 |                                 *intp += cmdbuff[j] << 8;              
; 3866 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3867 |                                 intp++;                                
; 3869 |                         unsaved = 1;                                   
; 3871 |                         bincmdresult = OK_SendResult;                  
; 3872 |                         break;                                         
; 3874 |                 case SetUnitName:                                      
; 3876 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3877 |                                 bincmdresult = Error_Invalid;          
; 3878 |                                 break;                                 
; 3881 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3882 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3884 |                         conf_data.uname[i] = '\0';                     
; 3885 |                         unsaved = 1;                                   
; 3887 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3888 |                         buff[j++] = slen;                              
; 3889 |                         for (i = 0; i < slen; i++) {                   
; 3890 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3892 |                         bincmdresult = OK_SendResult;                  
; 3893 |                         break;                                         
; 3895 |                 case GetInterface:                                     
; 3897 |                         buff[j++] = conf_data.rxdir;                   
; 3899 |                         if (conf_data.rxdir == SDIR_RS485              
; 3900 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3901 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3902 |                                 for (i = 0; i < 2; i++) {              
; 3903 |                                         buff[j++] = 0xff & *intp;      
; 3904 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3905 |                                         intp++;                        
; 3908 |                         bincmdresult = OK_SendResult;                  
; 3909 |                         break;                                         
; 3911 |                 case SetInterface:                                     
; 3913 |                         if (cmdlen < 3) {                              
; 3914 |                                 bincmdresult = Error_Invalid;          
; 3915 |                                 break;                                 
; 3917 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3918 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3919 |                                 bincmdresult = Error_Invalid;          
; 3920 |                                 break;                                 
; 3923 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3924 |                                 if (cmdlen < 7) {                      
; 3925 |                                         bincmdresult = Error_Invalid;  
; 3926 |                                         break;                         
; 3929 |                                 temp32 = 0;                            
; 3930 |                                 for (k = 6; k > 2; k--) {              
; 3931 |                                         temp32 += cmdbuff[k];          
; 3932 |                                         temp32 <<= 8;                  
; 3935 |                                 for (i = 0; i < 8; i++) {              
; 3936 |                                         if (temp32 == BAUD[i]) {       
; 3937 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3938 |                                                 break;                 
; 3941 |                                 if (i == 8) {                          
; 3942 |                                         bincmdresult = Error_Invalid;  
; 3943 |                                         break;                         
; 3947 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3949 |                         while (j < cmdlen) {                           
; 3950 |                                 buff[j] = cmdbuff[j];                  
; 3951 |                                 j++;                                   
; 3953 |                         unsaved = 1;                                   
; 3954 |                         bincmdresult = OK_SendResult;                  
; 3955 |                         break;                                         
; 3957 |                 case GetChannel:                                       
; 3959 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3960 |                                 bincmdresult = Error_Invalid;          
; 3961 |                                 break;                                 
; 3963 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3965 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3967 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3969 |                                 buff[j++] = 0;                         
; 3972 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3973 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3975 |                                 buff[j++] = 0xff & *intp;              
; 3976 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3977 |                                 intp++;                                
; 3980 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3981 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3983 |                                 buff[j++] = 0xff & *intp;              
; 3984 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3985 |                                 intp++;                                
; 3988 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3989 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3991 |                                 buff[j++] = 0xff & *intp;              
; 3992 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3993 |                                 intp++;                                
; 3996 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3997 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3999 |                                 buff[j++] = 0xff & *intp;              
; 4000 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4001 |                                 intp++;                                
; 4004 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 4005 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 4007 |                                 buff[j++] = 0xff & *intp;              
; 4008 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4009 |                                 intp++;                                
; 4012 |                         bincmdresult = OK_SendResult;                  
; 4013 |                         break;                                         
; 4015 |                 case GetSensor:                                        
; 4017 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4018 |                                 bincmdresult = Error_Invalid;          
; 4019 |                                 break;                                 
; 4021 |                         ss = cmdbuff[2];                               
; 4022 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4024 |                         // sensor serial name                          
; 4025 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 4026 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4027 |                         for (i = 0; i < slen; i++) {                   
; 4028 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 4031 |                         // sensor name/label                           
; 4032 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4033 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4034 |                         for (i = 0; i < slen; i++) {                   
; 4035 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4038 |                         // TAGID                                       
; 4039 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 4040 |                         for (i = 0; i < 4; i++) {                      
; 4041 |                                 buff[j++] = 0xff & *intp;              
; 4042 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4043 |                                 intp++;                                
; 4046 |                         // Method                                      
; 4047 |                         buff[j++] = conf_data.sensor[ss].method;       
; 4049 |                         // Date                                        
; 4050 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 4051 |                         for (i = 0; i < 2; i++) {                      
; 4052 |                                 buff[j++] = 0xff & *intp;              
; 4053 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4054 |                                 intp++;                                
; 4057 |                         // Range                                       
; 4058 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 4059 |                         for (i = 0; i < 2; i++) {                      
; 4060 |                                 buff[j++] = 0xff & *intp;              
; 4061 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4062 |                                 intp++;                                
; 4065 |                         // Unit                                        
; 4066 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 4068 |                         // Output Unit                                 
; 4069 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 4071 |                         // Unit Factor                                 
; 4072 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 4073 |                         for (i = 0; i < 2; i++) {                      
; 4074 |                                 buff[j++] = 0xff & *intp;              
; 4075 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4076 |                                 intp++;                                
; 4079 |                         // calibration points.                         
; 4080 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 4081 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 4082 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 4083 |                                         // mass point                  
; 4084 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 4085 |                                         for (i = 0; i < 2; i++) {      
; 4086 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4087 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4088 |                                                 intp++;                
; 4090 |                                         // adc counts point            
; 4091 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 4092 |                                         for (i = 0; i < 2; i++) {      
; 4093 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4094 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4095 |                                                 intp++;                
; 4099 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4100 |                                         // slope point                 
; 4101 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4102 |                                         for (i = 0; i < 2; i++) {      
; 4103 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4104 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4105 |                                                 intp++;                
; 4107 |                                         // intercept point             
; 4108 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4109 |                                         for (i = 0; i < 2; i++) {      
; 4110 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4111 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4112 |                                                 intp++;                
; 4115 |                         } else {                                       
; 4116 |                                 buff[j++] = 0;                         
; 4117 |                                 // slope                               
; 4118 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4119 |                                 for (i = 0; i < 2; i++) {              
; 4120 |                                         buff[j++] = 0xff & *intp;      
; 4121 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4122 |                                         intp++;                        
; 4124 |                                 // intercept                           
; 4125 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4126 |                                 for (i = 0; i < 2; i++) {              
; 4127 |                                         buff[j++] = 0xff & *intp;      
; 4128 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4129 |                                         intp++;                        
; 4133 |                         // shunt                                       
; 4134 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4135 |                         for (i = 0; i < 2; i++) {                      
; 4136 |                                 buff[j++] = 0xff & *intp;              
; 4137 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4138 |                                 intp++;                                
; 4141 |                         // base                                        
; 4142 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4143 |                         for (i = 0; i < 2; i++) {                      
; 4144 |                                 buff[j++] = 0xff & *intp;              
; 4145 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4146 |                                 intp++;                                
; 4149 |                         // DAC calibration gain                        
; 4150 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4151 |                         for (i = 0; i < 2; i++) {                      
; 4152 |                                 buff[j++] = 0xff & *intp;              
; 4153 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4154 |                                 intp++;                                
; 4157 |                         // DAC calibration offset                      
; 4158 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4159 |                         for (i = 0; i < 2; i++) {                      
; 4160 |                                 buff[j++] = 0xff & *intp;              
; 4161 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4162 |                                 intp++;                                
; 4165 |                         // channel calibrated on                       
; 4166 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4168 |                         bincmdresult = OK_SendResult;                  
; 4169 |                         break;                                         
; 4171 |                 case GetQEPChannels:                                   
; 4173 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4174 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4175 |                                 for (i = 0; i < 2; i++) {              
; 4176 |                                         buff[j++] = 0xff & *intp;      
; 4177 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4178 |                                         intp++;                        
; 4182 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4183 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4185 |                         bincmdresult = OK_SendResult;                  
; 4186 |                         break;                                         
; 4188 |                 case GetCurSensor:                                     
; 4190 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4191 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4194 |                         bincmdresult = OK_SendResult;                  
; 4195 |                         break;                                         
; 4197 |                 case GetAFilterSize:                                   
; 4199 |                         // filter size                                 
; 4200 |                         intp = (Uint16*) &conf_data.filter;            
; 4201 |                         buff[j++] = 0xff & *intp;                      
; 4202 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4203 |                         // filter window                               
; 4204 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4205 |                         for (i = 0; i < 2; i++) {                      
; 4206 |                                 buff[j++] = 0xff & *intp;              
; 4207 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4208 |                                 intp++;                                
; 4210 |                         bincmdresult = OK_SendResult;                  
; 4211 |                         break;                                         
; 4213 |                 case GetAutoId:                                        
; 4215 |                         buff[j++] = conf_data.tagiden;                 
; 4216 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4217 |                                 buff[j++] = autoid[i];                 
; 4219 |                         bincmdresult = OK_SendResult;                  
; 4220 |                         break;                                         
; 4222 |                 case GetDisplay:                                       
; 4224 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4225 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4226 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4227 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4229 |                         bincmdresult = OK_SendResult;                  
; 4230 |                         break;                                         
; 4232 |                 case GetDAC:                                           
; 4234 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4235 |                                 buff[j++] = conf_data.dac[i].what;     
; 4236 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4238 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4239 |                                 //{                                    
; 4240 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4241 |                                 //}                                    
; 4242 |                                 //else                                 
; 4243 |                                 //{                                    
; 4244 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4245 |                                 //}                                    
; 4246 |                                 for (k = 0; k < 2; k++) {              
; 4247 |                                         buff[j++] = 0xff & *intp;      
; 4248 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4249 |                                         intp++;                        
; 4251 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4252 |                                 //{                                    
; 4253 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4254 |                                 //}                                    
; 4255 |                                 //else                                 
; 4256 |                                 //{                                    
; 4257 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4258 |                                 //}                                    
; 4259 |                                 for (k = 0; k < 2; k++) {              
; 4260 |                                         buff[j++] = 0xff & *intp;      
; 4261 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4262 |                                         intp++;                        
; 4264 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4265 |                                 for (k = 0; k < 2; k++) {              
; 4266 |                                         buff[j++] = 0xff & *intp;      
; 4267 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4268 |                                         intp++;                        
; 4270 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4271 |                                 for (k = 0; k < 2; k++) {              
; 4272 |                                         buff[j++] = 0xff & *intp;      
; 4273 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4274 |                                         intp++;                        
; 4276 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4277 |                                 for (k = 0; k < 2; k++) {              
; 4278 |                                         buff[j++] = 0xff & *intp;      
; 4279 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4280 |                                         intp++;                        
; 4283 |                         bincmdresult = OK_SendResult;                  
; 4284 |                         break;                                         
; 4286 |                 case GetLIMIT:                                         
; 4288 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4289 |                                 buff[j++] = conf_data.lim[i].what;     
; 4290 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4291 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4293 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4294 |                                 for (k = 0; k < 2; k++) {              
; 4295 |                                         buff[j++] = 0xff & *intp;      
; 4296 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4297 |                                         intp++;                        
; 4299 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4300 |                                 for (k = 0; k < 2; k++) {              
; 4301 |                                         buff[j++] = 0xff & *intp;      
; 4302 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4303 |                                         intp++;                        
; 4306 |                         bincmdresult = OK_SendResult;                  
; 4307 |                         break;                                         
; 4309 |                 case GetLIMITStatus:                                   
; 4311 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4312 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4314 |                         bincmdresult = OK_SendResult;                  
; 4315 |                         break;                                         
; 4317 |                         // Heat Cal commands.                          
; 4318 |                 case GetTCLoadA:                                       
; 4319 |                 case GetTCLoadB:                                       
; 4320 |                 case GetTCLoadC:                                       
; 4321 |                 case GetTCLoadD:                                       
; 4323 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4324 |                         intp = (Uint16*) &temp16;                      
; 4325 |                         buff[j++] = 0xff & *intp;                      
; 4326 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4328 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4329 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4330 |                         intp = (Uint16*) &templg;                      
; 4331 |                         for (i = 0; i < 2; i++) {                      
; 4332 |                                 buff[j++] = 0xff & *intp;              
; 4333 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4334 |                                 intp++;                                
; 4336 |                         bincmdresult = OK_SendResult;                  
; 4337 |                         break;                                         
; 4339 |                 case GetTCTemp:                                        
; 4341 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4342 |                         intp = (Uint16*) &temp16;                      
; 4343 |                         buff[j++] = 0xff & *intp;                      
; 4344 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4345 |                         bincmdresult = OK_SendResult;                  
; 4346 |                         break;                                         
; 4348 |                 case GetTCStatus:                                      
; 4350 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4351 |                         for (i = 0; i < 2; i++) {                      
; 4352 |                                 buff[j++] = 0xff & *intp;              
; 4353 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4354 |                                 intp++;                                
; 4357 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4358 |                                 temp16 = 0x80;                         
; 4359 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4360 |                                         temp16 |= 0x01;                
; 4362 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4363 |                                         temp16 |= 0x02;                
; 4365 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4366 |                                         temp16 |= 0x04;                
; 4368 |                                 buff[j++] = 0xff & temp16;             
; 4370 |                         bincmdresult = OK_SendResult;                  
; 4371 |                         break;                                         
; 4373 |                 case GetTCParam:                                       
; 4375 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4376 |                                 bincmdresult = Error_Invalid;          
; 4377 |                                 break;                                 
; 4380 |                         ch = cmdbuff[2];                               
; 4381 |                         buff[j++] = ch;                                
; 4383 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4384 |                         for (k = 0; k < 2; k++) {                      
; 4385 |                                 buff[j++] = 0xff & *intp;              
; 4386 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4387 |                                 intp++;                                
; 4389 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4390 |                         for (k = 0; k < 2; k++) {                      
; 4391 |                                 buff[j++] = 0xff & *intp;              
; 4392 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4393 |                                 intp++;                                
; 4395 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4396 |                         for (k = 0; k < 2; k++) {                      
; 4397 |                                 buff[j++] = 0xff & *intp;              
; 4398 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4399 |                                 intp++;                                
; 4401 |                         bincmdresult = OK_SendResult;                  
; 4402 |                         break;                                         
; 4404 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4405 | #if 1                                                                  
; 4406 |                 case Open_SSR_IN1:                                     
; 4407 |                         ssr_set(0, SSR_OPEN);                          
; 4408 |                         break;                                         
; 4410 |                 case Close_SSR_IN1:                                    
; 4411 |                         ssr_set(0, SSR_CLOSE);                         
; 4412 |                         break;                                         
; 4413 | #endif                                                                 
; 4415 |                 case SetTCParam:                                       
; 4417 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4418 |                                 bincmdresult = Error_Invalid;          
; 4419 |                                 break;                                 
; 4422 |                         ch = cmdbuff[2];                               
; 4423 |                         buff[j++] = ch;                                
; 4425 |                         k = 3;                                         
; 4426 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4427 |                         for (i = 0; i < 2; i++) {                      
; 4428 |                                 *intp = cmdbuff[k++];                  
; 4429 |                                 *intp += cmdbuff[k++] << 8;            
; 4430 |                                 intp++;                                
; 4432 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4433 |                         for (i = 0; i < 2; i++) {                      
; 4434 |                                 *intp = cmdbuff[k++];                  
; 4435 |                                 *intp += cmdbuff[k++] << 8;            
; 4436 |                                 intp++;                                
; 4438 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4439 |                         for (i = 0; i < 2; i++) {                      
; 4440 |                                 *intp = cmdbuff[k++];                  
; 4441 |                                 *intp += cmdbuff[k++] << 8;            
; 4442 |                                 intp++;                                
; 4445 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4446 |                         for (k = 0; k < 2; k++) {                      
; 4447 |                                 buff[j++] = 0xff & *intp;              
; 4448 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4449 |                                 intp++;                                
; 4451 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4452 |                         for (k = 0; k < 2; k++) {                      
; 4453 |                                 buff[j++] = 0xff & *intp;              
; 4454 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4455 |                                 intp++;                                
; 4457 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4458 |                         for (k = 0; k < 2; k++) {                      
; 4459 |                                 buff[j++] = 0xff & *intp;              
; 4460 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4461 |                                 intp++;                                
; 4463 |                         unsaved = 1;                                   
; 4464 |                         bincmdresult = OK_SendResult;                  
; 4465 |                         break;                                         
; 4467 |                 case SetBCalParam:                                     
; 4469 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4470 |                                         || cmdbuff[3] != 2) {          
; 4471 |                                 bincmdresult = Error_Invalid;          
; 4472 |                                 break;                                 
; 4475 |                         ch = cmdbuff[2];                               
; 4476 |                         buff[j++] = ch;                                
; 4477 |                         buff[j] = cmdbuff[j++];                        
; 4479 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4480 |                                 intp = (Uint16*) &volt[k];             
; 4481 |                                 for (i = 0; i < 2; i++) {              
; 4482 |                                         *intp = cmdbuff[j];            
; 4483 |                                         buff[j++] = 0xff & *intp;      
; 4484 |                                         *intp += cmdbuff[j] << 8;      
; 4485 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4486 |                                         intp++;                        
; 4489 |                         bincmdresult = OK_SendResult;                  
; 4490 |                         break;                                         
; 4492 |                 case StartBCRead:                                      
; 4494 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4495 |                                         || cmdbuff[3] >= 2) {          
; 4496 |                                 bincmdresult = Error_Invalid;          
; 4497 |                                 break;                                 
; 4500 |                         k = cmdbuff[3];                                
; 4501 |                         intp = (Uint16*) &tempft;                      
; 4502 |                         for (i = 0; i < 2; i++) {                      
; 4503 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4504 |                                 intp++;                                
; 4506 |                         if (volt[k] != tempft) {                       
; 4507 |                                 bincmdresult = Error_Invalid;          
; 4508 |                                 break;                                 
; 4510 |                         lcd_clear();                                   
; 4511 |                         lcd_puts("Board Calibration...", 0);           
; 4512 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4513 |                         lcd_puts(buff, 20);                            
; 4514 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4515 |                         lcd_puts(buff, 40);                            
; 4516 |                         lcd_puts("Reading ... ", 60);                  
; 4518 |                         dsum[k] = 0;                                   
; 4519 |                         sampcnt = CAL_SAMPLES;                         
; 4520 |                         while (sampcnt--) {                            
; 4521 |                                 while (0 == ad7738_rawrdy()) {         
; 4522 |                                         delay_us(1);
;     |  // wait                                                               
; 4524 |                                 cntp = ad7738_getraw();                
; 4525 |                                 dsum[k] += cntp->adc[ch];              
; 4527 |                         if (1 == k) {                                  
; 4528 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4529 |                                                 / (dsum[1] - dsum[0]); 
; 4531 |                                 unsaved = 1;                           
; 4532 |                                 DINT;                                  
; 4533 |                                 ad7738_setcal();                       
; 4534 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4535 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4536 |                                 EINT;                                  
; 4538 |                         for (i = 0; i < cmdlen; i++) {                 
; 4539 |                                 buff[i] = cmdbuff[i];                  
; 4541 |                         j = cmdlen;                                    
; 4542 |                         bincmdresult = OK_SendResult;                  
; 4544 |                         lcd_clear();                                   
; 4545 |                         update_units();                                
; 4546 |                         break;                                         
; 4548 |                 case SetDCalParam:                                     
; 4550 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4551 |                                         || (0x07 | daccbm) != 0x07) {  
; 4552 |                                 bincmdresult = Error_Invalid;          
; 4553 |                                 break;                                 
; 4555 |                         ch = cmdbuff[2];                               
; 4556 |                         buff[j++] = ch;                                
; 4558 |                         for (k = 0; k < 3; k++) {                      
; 4559 |                                 intp = (Uint16*) &volt[k];             
; 4560 |                                 for (i = 0; i < 2; i++) {              
; 4561 |                                         *intp = cmdbuff[j];            
; 4562 |                                         buff[j++] = 0xff & *intp;      
; 4563 |                                         *intp += cmdbuff[j] << 8;      
; 4564 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4565 |                                         intp++;                        
; 4569 |                         // order: - o +                                
; 4570 |                         // do the calculations                         
; 4571 |                         conf_data.dac[ch].dslopen =                    
; 4572 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4573 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4574 |                         conf_data.dac[ch].dslopep =                    
; 4575 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4576 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4577 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4578 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4580 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4581 |                         daccbm = 0;                                    
; 4583 |                         unsaved = 1;                                   
; 4585 |                         DINT;                                          
; 4586 |                         ad7738_setcal();                               
; 4587 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4588 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4589 |                         EINT;                                          
; 4591 |                         bincmdresult = OK_SendResult;                  
; 4592 |                         break;                                         
; 4594 |                 case StartDCRead:                                      
; 4596 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4597 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4598 |                                 bincmdresult = Error_Invalid;          
; 4599 |                                 break;                                 
; 4602 |                         if (daccbm == 0) {                             
; 4603 |                                 ch = cmdbuff[2];                       
; 4604 |                         } else {                                       
; 4605 |                                 if (ch != cmdbuff[2]) {                
; 4606 |                                         bincmdresult = Error_Invalid;  
; 4607 |                                         break;                         
; 4610 |                         buff[j++] = ch;                                
; 4611 |                         k = cmdbuff[j];                                
; 4612 |                         buff[j++] = k;                                 
; 4614 |                         intp = (Uint16*) &volt[k];                     
; 4615 |                         for (i = 0; i < 2; i++) {                      
; 4616 |                                 *intp = cmdbuff[j];                    
; 4617 |                                 buff[j++] = 0xff & *intp;              
; 4618 |                                 *intp += cmdbuff[j] << 8;              
; 4619 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4620 |                                 intp++;                                
; 4622 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4623 |                                 bincmdresult = Error_Invalid;          
; 4624 |                                 break;                                 
; 4627 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4628 |                         if (dsum[0] <= 0) {                            
; 4629 |                                 dacc[k] = 0;                           
; 4630 |                         } else if (dsum[0] >= 0xffff) {                
; 4631 |                                 dacc[k] = 0xffff;                      
; 4632 |                         } else {                                       
; 4633 |                                 dacc[k] = (Uint16) dsum[0];            
; 4636 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4638 |                         mcbsp_xmit(dacc[k], ch);                       
; 4639 |                         latch_dac();                                   
; 4641 |                         daccbm |= (0x1 << k);                          
; 4643 |                         bincmdresult = OK_SendResult;                  
; 4644 |                         break;                                         
; 4646 |                 case SetSensorCalPa:                                   
; 4648 |                         if (cmdlen < 20) {                             
; 4649 |                                 bincmdresult = Error_Invalid;          
; 4650 |                                 break;                                 
; 4652 |                         k = 2;                                         
; 4653 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4654 |                         ss = cmdbuff[k++];              // sensor index
; 4655 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4656 |                                 bincmdresult = Error_Invalid;          
; 4657 |                                 break;                                 
; 4660 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4661 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4662 |                                 bincmdresult = Error_Invalid;          
; 4663 |                                 break;                                 
; 4665 |                         for (i = 0; i < tempint; i++) {                
; 4666 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4668 |                         tsensor.ssn[i] = '\0';                         
; 4670 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4671 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4672 |                                 bincmdresult = Error_Invalid;          
; 4673 |                                 break;                                 
; 4675 |                         for (i = 0; i < tempint; i++) {                
; 4676 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4678 |                         tsensor.slbl[i] = '\0';                        
; 4680 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4682 |                         intp = (Uint16*) &tsensor.date; // date        
; 4683 |                         for (i = 0; i < 2; i++) {                      
; 4684 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4685 |                                 k += 2;                                
; 4686 |                                 intp++;                                
; 4689 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4690 |                         for (i = 0; i < 2; i++) {                      
; 4691 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4692 |                                 k += 2;                                
; 4693 |                                 intp++;                                
; 4695 |                         tsensor.base = tsensor.range;                  
; 4697 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4698 |                         switch (tsensor.unit) {                        
; 4699 |                         case 0:                                 // lb  
; 4700 |                         case 1:                                 // kg  
; 4701 |                                 tsensor.unit |= UNIT_WT;               
; 4702 |                                 break;                                 
; 4703 |                         case 2:                                 // in  
; 4704 |                         case 3:                                 // cm  
; 4705 |                         case 4:                                 // mm  
; 4706 |                                 tsensor.unit |= UNIT_LT;               
; 4707 |                                 break;                                 
; 4708 |                         case 5:                                 // ps  
; 4709 |                                 tsensor.unit |= UNIT_PR;               
; 4710 |                                 break;                                 
; 4711 |                         case 6:                                 // nm  
; 4712 |                                 tsensor.unit |= UNIT_TQ;               
; 4713 |                                 break;                                 
; 4714 |                         case 7:                                        
; 4715 |                         case 8:                                        
; 4716 |                         case 15:                                       
; 4717 |                                 tsensor.unit |= 0xf0;                  
; 4718 |                                 break;                                 
; 4719 |                         default:                                       
; 4720 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4721 |                                 break;                                 
; 4723 |                         tsensor.ounit = tsensor.unit;                  
; 4724 |                         tsensor.ufactor = 1;                           
; 4726 |                         switch (tsensor.method) {                      
; 4727 |                         case MD_RUN_MVV:                               
; 4729 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4730 |                                 for (i = 0; i < 2; i++) {              
; 4731 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4732 |                                         k += 2;                        
; 4733 |                                         intp++;                        
; 4735 |                                 if (tsensor.slope[0] == 0) {           
; 4736 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4738 |                                 tsensor.points = 1;                    
; 4739 |                                 break;                                 
; 4741 |                         case MD_RUN_MAS:                               
; 4743 |                                 tsensor.points = cmdbuff[k++];         
; 4744 |                                 if (tsensor.points > PNT_MAX) {        
; 4745 |                                         tsensor.method = MD_UNCALED;   
; 4746 |                                         break;                         
; 4749 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4750 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4751 |                                         for (i = 0; i < 2; i++) {      
; 4752 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4753 |                                                 k += 2;                
; 4754 |                                                 intp++;                
; 4757 |                                 break;                                 
; 4759 |                         case MD_RUN_SHT:                               
; 4761 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4762 |                                 for (i = 0; i < 2; i++) {              
; 4763 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4764 |                                         k += 2;                        
; 4765 |                                         intp++;                        
; 4767 |                                 if (scale == 0) {                      
; 4768 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4770 |                                 tsensor.points = 1;                    
; 4771 |                                 break;                                 
; 4773 |                         default:                                       
; 4775 |                                 tsensor.method = MD_UNCALED;           
; 4776 |                                 break;                                 
; 4779 |                         if (tsensor.method == MD_UNCALED) {            
; 4780 |                                 bincmdresult = Error_Invalid;          
; 4781 |                                 break;                                 
; 4783 |                         tsensor.tare = 0;                              
; 4784 |                         tsensor.dacgain = 1;                           
; 4785 |                         tsensor.dacoff = 0;                            
; 4786 |                         tsensor.ch = ch;                               
; 4788 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4789 |                                 buff[j] = cmdbuff[j++];                
; 4791 |                         bincmdresult = OK_SendResult;                  
; 4792 |                         break;                                         
; 4794 |                 case StartSCRead:                                      
; 4796 |                         if (cmdlen < 5) {                              
; 4797 |                                 bincmdresult = Error_Invalid;          
; 4798 |                                 break;                                 
; 4800 |                         k = 2;                                         
; 4801 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4802 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4803 |                                 bincmdresult = Error_Invalid;          
; 4804 |                                 break;                                 
; 4807 |                         lcd_clear();                                   
; 4808 |                         lcd_puts("Sensor Calibration..", 0);           
; 4809 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4810 |                         lcd_puts(buff, 20);                            
; 4811 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4812 |                         lcd_puts(buff, 40);                            
; 4814 |                         switch (tsensor.method) {                      
; 4816 |                         case MD_RUN_MVV:                               
; 4818 |                                 lcd_puts("Reading zero point...", 60); 
; 4820 |                                 dsum[0] = 0;                           
; 4821 |                                 sampcnt = CAL_SAMPLES;                 
; 4822 |                                 while (sampcnt--) {                    
; 4823 |                                         while (0 == ad7738_rawrdy()) { 
; 4824 |                                                 delay_us(1);
;     |          // wait                                                       
; 4827 |                                         cntp = ad7738_getraw();        
; 4828 |                                         dsum[0] += cntp->adc[ch];      
; 4830 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4831 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4833 |                                 bincmdresult = OK_SendResult;          
; 4834 |                                 break;                                 
; 4836 |                         case MD_RUN_MAS:                               
; 4838 |                                 pt = cmdbuff[k++];                     
; 4839 |                                 intp = (Uint16*) &scale;               
; 4840 |                                 for (i = 0; i < 2; i++) {              
; 4841 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4842 |                                         k += 2;                        
; 4843 |                                         intp++;                        
; 4845 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4846 |                                         bincmdresult = Error_Invalid;  
; 4847 |                                         break;                         
; 4849 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4850 |                                 lcd_puts(buff, 60);                    
; 4852 |                                 dsum[0] = 0;                           
; 4853 |                                 sampcnt = CAL_SAMPLES;                 
; 4854 |                                 while (sampcnt--) {                    
; 4855 |                                         while (0 == ad7738_rawrdy()) { 
; 4856 |                                                 delay_us(1);
;     |          // wait                                                       
; 4859 |                                         cntp = ad7738_getraw();        
; 4860 |                                         dsum[0] += cntp->adc[ch];      
; 4862 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4864 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4866 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4867 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4868 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4869 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4870 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4871 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4872 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4873 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4874 | 
;     |          * tsensor.adc[k];                                             
; 4878 |                                 bincmdresult = OK_SendResult;          
; 4879 |                                 break;                                 
; 4881 |                         case MD_RUN_SHT:                               
; 4883 |                                 lcd_puts("Reading zero point...", 60); 
; 4885 |                                 for (k = 0; k < 2; k++) {              
; 4886 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4888 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4889 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4890 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4892 |                                                 DINT;                  
; 4893 |                                                 maf_rst();             
; 4894 |                                                 EINT;                  
; 4895 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4898 |                                         dsum[k] = 0;                   
; 4899 |                                         sampcnt = CAL_SAMPLES;         
; 4900 |                                         while (sampcnt--) {            
; 4901 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4902 |                                                         delay_us(1);
;     |                  // wait                                               
; 4905 |                                                 cntp = ad7738_getraw();
; 4906 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4910 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4911 |                                 DINT;                                  
; 4912 |                                 maf_rst();                             
; 4913 |                                 EINT;                                  
; 4915 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4916 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4917 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4918 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4920 |                                 bincmdresult = OK_SendResult;          
; 4921 |                                 break;                                 
; 4923 |                         default:                                       
; 4925 |                                 bincmdresult = Error_Invalid;          
; 4926 |                                 break;                                 
; 4928 |                         lcd_clear();                                   
; 4929 |                         update_units();                                
; 4931 |                         if (bincmdresult != OK_SendResult) {           
; 4932 |                                 break;                                 
; 4934 |                         for (i = 0; i < cmdlen; i++) {                 
; 4935 |                                 buff[i] = cmdbuff[i];                  
; 4937 |                         j = cmdlen;                                    
; 4938 |                         break;                                         
; 4940 |                 case StartSCShuntRd:                                   
; 4942 |                         if (cmdlen < 5) {                              
; 4943 |                                 bincmdresult = Error_Invalid;          
; 4944 |                                 break;                                 
; 4946 |                         k = 2;                                         
; 4947 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4948 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4949 |                                 bincmdresult = Error_Invalid;          
; 4950 |                                 break;                                 
; 4953 |                         lcd_clear();                                   
; 4954 |                         lcd_puts("Sensor Calibration..", 0);           
; 4955 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4956 |                         lcd_puts(buff, 20);                            
; 4957 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4958 |                         lcd_puts(buff, 40);                            
; 4959 |                         lcd_puts("Reading shunt value...", 60);        
; 4961 |                         for (k = 0; k < 2; k++) {                      
; 4962 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4964 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4965 |                                         for (i = 0; i < 50; i++) {     
; 4966 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4968 |                                         DINT;                          
; 4969 |                                         maf_rst();                     
; 4970 |                                         EINT;                          
; 4971 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4974 |                                 dsum[k] = 0;                           
; 4975 |                                 sampcnt = CAL_SAMPLES;                 
; 4976 |                                 while (sampcnt--) {                    
; 4977 |                                         while (0 == ad7738_rawrdy()) { 
; 4978 |                                                 delay_us(1);
;     |          // wait                                                       
; 4981 |                                         cntp = ad7738_getraw();        
; 4982 |                                         dsum[k] += cntp->adc[ch];      
; 4984 |                                 dsum[k] /= CAL_SAMPLES;                
; 4986 |                                 pt = 0;                                
; 4987 |                                 if (tsensor.points > 2) {              
; 4988 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4989 |                                                 pt++;                  
; 4992 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4993 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4996 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4997 |                         DINT;                                          
; 4998 |                         maf_rst();                                     
; 4999 |                         EINT;                                          
; 5001 |                         tsensor.shunt = volt[1] - volt[0];             
; 5003 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 5005 |                         DINT;                                          
; 5006 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 5007 |                                         sizeof(sconf_t));              
; 5009 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 5011 |                         ad7738_setcal();                               
; 5012 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5013 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5014 |                         EINT;                                          
; 5016 |                         unsaved = 1;                                   
; 5018 |                         lcd_clear();                                   
; 5019 |                         update_units();                                
; 5021 |                         for (i = 0; i < cmdlen; i++) {                 
; 5022 |                                 buff[i] = cmdbuff[i];                  
; 5024 |                         j = cmdlen;                                    
; 5025 |                         bincmdresult = OK_SendResult;                  
; 5026 |                         break;                                         
; 5028 |                 case SetSensorName:                                    
; 5030 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 5031 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 5032 |                                 bincmdresult = Error_Invalid;          
; 5033 |                                 break;                                 
; 5035 |                         ss = cmdbuff[2];                               
; 5036 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5038 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 5039 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 5040 |                         for (i = 0; i < slen; i++) {                   
; 5041 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 5043 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 5044 |                         unsaved = 1;                                   
; 5046 |                         // sensor name/label                           
; 5047 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 5048 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 5049 |                         for (i = 0; i < slen; i++) {                   
; 5050 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 5053 |                         bincmdresult = OK_SendResult;                  
; 5054 |                         break;                                         
; 5056 |                 case SetSensorOUnit:                                   
; 5058 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5059 |                                 bincmdresult = Error_Invalid;          
; 5060 |                                 break;                                 
; 5063 |                         ss = cmdbuff[2];                               
; 5064 |                         pt = cmdbuff[3];                               
; 5066 |                         if (pt != UNIT_PC                              
; 5067 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 5068 |                                 bincmdresult = Error_Invalid;          
; 5069 |                                 break;                                 
; 5072 |                         conf_data.sensor[ss].ounit = pt;               
; 5073 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5074 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 5076 |                         if (pt == UNIT_PC) {                           
; 5077 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5078 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5079 |                         } else if (conf_data.sensor[ss].ounit          
; 5080 |                                         == conf_data.sensor[ss].unit) {
; 5081 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 5082 |                         } else {                                       
; 5083 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 5084 |                                 case UNIT_LB:
;     |  // pond                                                               
; 5086 |                                         if (pt == UNIT_KG) {           
; 5087 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 5089 |                                         break;                         
; 5091 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 5093 |                                         if (pt == UNIT_LB) {           
; 5094 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5096 |                                         break;                         
; 5098 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5100 |                                         switch (pt) {                  
; 5101 |                                         case UNIT_CM:                  
; 5102 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5103 |                                                 break;                 
; 5104 |                                         case UNIT_MM:                  
; 5105 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5106 |                                                 break;                 
; 5108 |                                         break;                         
; 5110 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5112 |                                         switch (pt) {                  
; 5113 |                                         case UNIT_IN:                  
; 5114 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5115 |                                                 break;                 
; 5116 |                                         case UNIT_MM:                  
; 5117 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5118 |                                                 break;                 
; 5120 |                                         break;                         
; 5122 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5124 |                                         switch (pt) {                  
; 5125 |                                         case UNIT_IN:                  
; 5126 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5127 |                                                 break;                 
; 5128 |                                         case UNIT_CM:                  
; 5129 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5130 |                                                 break;                 
; 5132 |                                         break;                         
; 5134 |                                 default:                               
; 5136 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5137 |                                         break;                         
; 5141 |                         unsaved = 1;                                   
; 5143 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5144 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5145 |                                         update_units();                
; 5146 |                                         DINT;                          
; 5147 |                                         ad7738_setcal();               
; 5148 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5149 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5150 |                                         EINT;                          
; 5154 |                         bincmdresult = OK_SendResult;                  
; 5155 |                         break;                                         
; 5157 |                 case SetSensorBase:                                    
; 5159 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5160 |                                 bincmdresult = Error_Invalid;          
; 5161 |                                 break;                                 
; 5163 |                         ss = cmdbuff[2];                               
; 5164 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5166 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5167 |                         for (i = 0; i < 2; i++) {                      
; 5168 |                                 *intp = cmdbuff[j];                    
; 5169 |                                 buff[j++] = 0xff & *intp;              
; 5170 |                                 *intp += cmdbuff[j] << 8;              
; 5171 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5172 |                                 intp++;                                
; 5174 |                         unsaved = 1;                                   
; 5176 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5177 |                                 // output unit is percent              
; 5178 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5179 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5181 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5182 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5183 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5184 |                                                 DINT;                  
; 5185 |                                                 ad7738_setcal();       
; 5186 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5187 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5188 |                                                 EINT;                  
; 5193 |                         bincmdresult = OK_SendResult;                  
; 5194 |                         break;                                         
; 5196 |                 case SetQEPChannels:                                   
; 5198 |                         if (cmdlen < 6) {                              
; 5199 |                                 bincmdresult = Error_Invalid;          
; 5200 |                                 break;                                 
; 5203 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5204 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5205 |                                 for (i = 0; i < 2; i++) {              
; 5206 |                                         *intp = cmdbuff[j];            
; 5207 |                                         buff[j++] = 0xff & *intp;      
; 5208 |                                         *intp += cmdbuff[j] << 8;      
; 5209 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5210 |                                         intp++;                        
; 5214 |                         conf_data.velfilter = cmdbuff[j];              
; 5215 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5216 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5217 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5219 |                         unsaved = 1;                                   
; 5221 |                         DINT;                                          
; 5222 |                         ad7738_setcal();                               
; 5223 |                         velf_rst();                                    
; 5224 |                         EINT;                                          
; 5226 |                         bincmdresult = OK_SendResult;                  
; 5227 |                         break;                                         
; 5229 |                         //case SetEnCntperin: // not needed            
; 5230 |                         //break;                                       
; 5232 |                 case SetCurSensor:                                     
; 5234 |                         if (cmdlen < 4||                               
; 5235 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5236 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5237 |                                 bincmdresult = Error_Invalid;          
; 5238 |                                 break;                                 
; 5241 |                         ch = cmdbuff[2];                               
; 5242 |                         ss = cmdbuff[3];                               
; 5244 |                         if (autoid[ch]) {                              
; 5245 |                                 bincmdresult = Error_Exe;              
; 5246 |                                 break;                                 
; 5249 |                         DINT;                                          
; 5250 |                         conf_data.ch[ch].ci = ss;                      
; 5251 |                         ad7738_setcal();                               
; 5253 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5254 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5255 |                         EINT;                                          
; 5257 |                         update_units();                                
; 5258 |                         unsaved = 1;                                   
; 5260 |                         buff[j++] = ch;                                
; 5261 |                         buff[j++] = ss;                                
; 5262 |                         bincmdresult = OK_SendResult;                  
; 5263 |                         break;                                         
; 5265 |                 case SetAFilterSize:                                   
; 5267 |                         if (cmdlen < 4) {                              
; 5268 |                                 bincmdresult = Error_Invalid;          
; 5269 |                                 break;                                 
; 5272 |                         // filter length                               
; 5273 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5274 |                         if (temp16 > MAF_MAX) {                        
; 5275 |                                 bincmdresult = Error_Invalid;          
; 5276 |                                 break;                                 
; 5279 |                         // filter diff window                          
; 5280 |                         intp = (Uint16*) &tempft;                      
; 5281 |                         for (i = 0; i < 2; i++) {                      
; 5282 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5283 |                                 intp++;                                
; 5286 |                         DINT;                                          
; 5287 |                         conf_data.filter = temp16;                     
; 5288 |                         conf_data.diffwin = tempft;                    
; 5289 |                         maf_rst();                                     
; 5290 |                         EINT;                                          
; 5292 |                         unsaved = 1;                                   
; 5294 |                         buff[j++] = 0xff & temp16;                     
; 5295 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5297 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5298 |                         buff[j++] = 0xff & intp[0];                    
; 5299 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5300 |                         buff[j++] = 0xff & intp[1];                    
; 5301 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5303 |                         bincmdresult = OK_SendResult;                  
; 5304 |                         break;                                         
; 5306 |                 case SetAutoId:                                        
; 5308 |                         if (cmdlen < 3) {                              
; 5309 |                                 bincmdresult = Error_Invalid;          
; 5310 |                                 break;                                 
; 5313 |                         conf_data.tagiden = cmdbuff[2];                
; 5314 |                         if (!conf_data.tagiden) {                      
; 5315 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5316 |                                         tagwasthere[i] = 0;            
; 5317 |                                         autoid[i] = 0;                 
; 5319 |                                 update_units();                        
; 5321 |                         unsaved = 1;                                   
; 5323 |                         buff[j] = cmdbuff[j++];                        
; 5324 |                         bincmdresult = OK_SendResult;                  
; 5325 |                         break;                                         
; 5327 |                 case SetDisplayLine:                                   
; 5329 |                         if (cmdlen < 14) {                             
; 5330 |                                 bincmdresult = Error_Invalid;          
; 5331 |                                 break;                                 
; 5334 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5335 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5336 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5337 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5338 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5339 |                                         || cmdbuff[13] > 5) {          
; 5340 |                                 bincmdresult = Error_Invalid;          
; 5341 |                                 break;                                 
; 5344 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5345 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5346 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5347 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5348 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5349 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5350 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5352 |                         unsaved = 1;                                   
; 5354 |                         lcd_clear();                                   
; 5355 |                         update_units();                                
; 5356 |                         bincmdresult = OK_SendResult;                  
; 5357 |                         break;                                         
; 5359 |                 case SetDACCh:                                         
; 5361 |                         if (cmdlen < 42) {                             
; 5362 |                                 bincmdresult = Error_Invalid;          
; 5363 |                                 break;                                 
; 5366 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5367 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5368 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5369 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5370 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5371 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5372 |                                 bincmdresult = Error_Invalid;          
; 5373 |                                 break;                                 
; 5376 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5377 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5378 |                                 buff[j++] = conf_data.dac[i].what;     
; 5379 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5380 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5382 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5383 |                                 //{                                    
; 5384 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5385 |                                 //}                                    
; 5386 |                                 //else                                 
; 5387 |                                 //{                                    
; 5388 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5389 |                                 //}                                    
; 5390 |                                 for (k = 0; k < 2; k++) {              
; 5391 |                                         *intp = cmdbuff[j];            
; 5392 |                                         buff[j++] = 0xff & *intp;      
; 5393 |                                         *intp += cmdbuff[j] << 8;      
; 5394 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5395 |                                         intp++;                        
; 5398 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5399 |                                 //{                                    
; 5400 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5401 |                                 //}                                    
; 5402 |                                 //else                                 
; 5403 |                                 //{                                    
; 5404 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5405 |                                 //}                                    
; 5406 |                                 for (k = 0; k < 2; k++) {              
; 5407 |                                         *intp = cmdbuff[j];            
; 5408 |                                         buff[j++] = 0xff & *intp;      
; 5409 |                                         *intp += cmdbuff[j] << 8;      
; 5410 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5411 |                                         intp++;                        
; 5414 |                         unsaved = 1;                                   
; 5416 |                         DINT;                                          
; 5417 |                         ad7738_setcal();                               
; 5418 |                         EINT;                                          
; 5419 |                         bincmdresult = OK_SendResult;                  
; 5420 |                         break;                                         
; 5422 |                 case SetLIMITCh:                                       
; 5424 |                         if (cmdlen < 46) {                             
; 5425 |                                 bincmdresult = Error_Invalid;          
; 5426 |                                 break;                                 
; 5429 |                         if (cmdbuff[2]                                 
; 5430 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5431 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5432 |                                 bincmdresult = Error_Invalid;          
; 5433 |                                 break;                                 
; 5436 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5437 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5438 |                                 buff[j++] = conf_data.lim[i].what;     
; 5439 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5440 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5441 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5442 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5444 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5445 |                                 for (k = 0; k < 2; k++) {              
; 5446 |                                         *intp = cmdbuff[j];            
; 5447 |                                         buff[j++] = 0xff & *intp;      
; 5448 |                                         *intp += cmdbuff[j] << 8;      
; 5449 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5450 |                                         intp++;                        
; 5452 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5453 |                                 for (k = 0; k < 2; k++) {              
; 5454 |                                         *intp = cmdbuff[j];            
; 5455 |                                         buff[j++] = 0xff & *intp;      
; 5456 |                                         *intp += cmdbuff[j] << 8;      
; 5457 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5458 |                                         intp++;                        
; 5461 |                         unsaved = 1;                                   
; 5463 |                         DINT;                                          
; 5464 |                         ad7738_setcal();                               
; 5465 |                         EINT;                                          
; 5467 |                         bincmdresult = OK_SendResult;                  
; 5468 |                         break;                                         
; 5470 |                 case Tare:                                             
; 5472 |                         if (cmdlen < 3) {                              
; 5473 |                                 //bincmdresult = Error_Invalid;        
; 5474 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5475 |                                 ad7738_resetpeak(0xff);                
; 5476 |                                 ad7738_resetvall(0xff);                
; 5477 |                                 unsaved = 1;                           
; 5479 |                                 buff[j++] = 0xff;                      
; 5480 |                                 bincmdresult = OK_SendResult;          
; 5481 |                                 break;                                 
; 5484 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5485 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5486 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5487 |                         unsaved = 1;                                   
; 5489 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5490 |                         bincmdresult = OK_SendResult;                  
; 5491 |                         break;                                         
; 5493 |                 case ResetPkVly:                                       
; 5495 |                         if (cmdlen < 3) {                              
; 5496 |                                 bincmdresult = Error_Invalid;          
; 5497 |                                 break;                                 
; 5500 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5501 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5502 |                         unsaved = 1;                                   
; 5504 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5505 |                         bincmdresult = OK_SendResult;                  
; 5506 |                         break;                                         
; 5508 |                 case ResetPk:                                          
; 5510 |                         if (cmdlen < 3) {                              
; 5511 |                                 bincmdresult = Error_Invalid;          
; 5512 |                                 break;                                 
; 5515 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5516 |                         unsaved = 1;                                   
; 5518 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5519 |                         bincmdresult = OK_SendResult;                  
; 5520 |                         break;                                         
; 5522 |                 case ResetVly:                                         
; 5524 |                         if (cmdlen < 3) {                              
; 5525 |                                 bincmdresult = Error_Invalid;          
; 5526 |                                 break;                                 
; 5529 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5530 |                         unsaved = 1;                                   
; 5532 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5533 |                         bincmdresult = OK_SendResult;                  
; 5534 |                         break;                                         
; 5536 |                 case ResetLIMIT:                                       
; 5538 |                         if (cmdlen < 3) {                              
; 5539 |                                 bincmdresult = Error_Invalid;          
; 5540 |                                 break;                                 
; 5543 |                         k = 0x01;                                      
; 5544 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5545 |                                 if (k & cmdbuff[2]) {                  
; 5546 |                                         ad7738_resetlimit(i);          
; 5548 |                                 k <<= 1;                               
; 5550 |                         unsaved = 1;                                   
; 5552 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5553 |                         bincmdresult = OK_SendResult;                  
; 5554 |                         break;                                         
; 5556 |                 case ResetPosition:                                    
; 5558 |                         if (cmdlen < 3) {                              
; 5559 |                                 bincmdresult = Error_Invalid;          
; 5560 |                                 break;                                 
; 5563 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5564 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5565 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5566 |                         unsaved = 1;                                   
; 5568 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5569 |                         bincmdresult = OK_SendResult;                  
; 5570 |                         break;                                         
; 5572 |                 case SetShuntSwitch:                                   
; 5574 |                         if (cmdlen < 3) {                              
; 5575 |                                 bincmdresult = Error_Invalid;          
; 5576 |                                 break;                                 
; 5579 |                         shunt_switch(cmdbuff[2]);                      
; 5580 |                         unsaved = 1;                                   
; 5582 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5583 |                         bincmdresult = OK_SendResult;                  
; 5584 |                         break;                                         
; 5586 |                 case SetDirectVolt:                                    
; 5588 |                         if (cmdlen < 7) {                              
; 5589 |                                 bincmdresult = Error_Invalid;          
; 5590 |                                 break;                                 
; 5593 |                         ss = cmdbuff[j];                               
; 5594 |                         buff[j++] = ss;                                
; 5596 |                         intp = (Uint16*) &volt[0];                     
; 5597 |                         for (k = 0; k < 2; k++) {                      
; 5598 |                                 *intp = cmdbuff[j];                    
; 5599 |                                 buff[j++] = 0xff & *intp;              
; 5600 |                                 *intp += cmdbuff[j] << 8;              
; 5601 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5602 |                                 intp++;                                
; 5605 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5606 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5607 |                                 bincmdresult = Error_Invalid;          
; 5608 |                                 break;                                 
; 5611 |                         if (volt[0] < 0) {                             
; 5612 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5613 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5614 |                         } else {                                       
; 5615 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5616 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5619 |                         if (dsum[0] <= 0) {                            
; 5620 |                                 dacc[0] = 0;                           
; 5621 |                         } else if (dsum[0] >= 0xffff) {                
; 5622 |                                 dacc[0] = 0xffff;                      
; 5623 |                         } else {                                       
; 5624 |                                 dacc[0] = (Uint16) dsum[0];            
; 5627 |                         mcbsp_xmit(dacc[0], ss);                       
; 5628 |                         latch_dac();                                   
; 5630 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5631 |                         buff[j++] = 0xff & dacc[0];                    
; 5632 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5634 |                         bincmdresult = OK_SendResult;                  
; 5635 |                         break;                                         
; 5637 |                 case GetAllFlash:                                      
; 5639 |                         break;                                         
; 5641 |                 case SetAllFlash:                                      
; 5643 |                         break;                                         
; 5645 |                 case FlashMemWrite:                                    
; 5647 |                         bincmdresult = OK_SendResult;                  
; 5648 |                         if (unsaved) {                                 
; 5649 |                                 // flash writing                       
; 5650 |                                 lcd_clear();                           
; 5651 |                                 lcd_puts("Flash writing...", 0);       
; 5653 |                                 for (i = 0; i < 50; i++) {             
; 5654 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5657 |                                 DINT;                                  
; 5658 |                                 flash_ret = conf_write();              
; 5659 |                                 EINT;                                  
; 5661 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5662 |                                         lcd_puts("Done", 16);          
; 5663 |                                         unsaved = 0;                   
; 5664 |                                 } else {                               
; 5665 |                                         lcd_puts("Fail", 16);          
; 5666 |                                         bincmdresult = Error_Exe;      
; 5669 |                                 for (i = 0; i < 50; i++) {             
; 5670 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5672 |                                 lcd_clear();                           
; 5673 |                                 update_units();                        
; 5675 |                         break;                                         
; 5677 |                 case FlashMemDefault:                                  
; 5679 |                         conf_default();                                
; 5681 |                         // flash writing                               
; 5682 |                         lcd_clear();                                   
; 5683 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5685 |                         for (i = 0; i < 50; i++) {                     
; 5686 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5689 |                         DINT;                                          
; 5690 |                         flash_ret = conf_write();                      
; 5691 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5692 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5693 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5694 |                         EINT;                                          
; 5696 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5697 |                                 lcd_puts("Done", 31);                  
; 5698 |                                 unsaved = 0;                           
; 5699 |                                 bincmdresult = OK_SendResult;          
; 5700 |                         } else {                                       
; 5701 |                                 lcd_puts("Fail", 31);                  
; 5702 |                                 bincmdresult = Error_Exe;              
; 5704 |                         for (i = 0; i < 50; i++) {                     
; 5705 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5707 |                         lcd_clear();                                   
; 5708 |                         update_units();                                
; 5710 |                         break;                                         
; 5712 |                 case FlashMemRead:                                     
; 5714 |                         // flash reading                               
; 5715 |                         conf_read();                                   
; 5717 |                         DINT;                                          
; 5718 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5719 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5720 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5721 |                         EINT;                                          
; 5723 |                         unsaved = 0;                                   
; 5724 |                         update_units();                                
; 5725 |                         bincmdresult = OK_SendResult;                  
; 5726 |                         break;                                         
; 5728 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |640| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |640| 
        ; call occurs [#_SPICANRead] ; [] |640| 
        MOVL      XAR0,#40              ; [CPU_] |640| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |640| 
        MOV       *-SP[40],AL           ; [CPU_] |640| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 592,column 2,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |592| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L635,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L79:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5730,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5730 | if (cmdlen < 6) {                                                      
; 5731 |         bincmdresult = Error_Invalid;                                  
; 5732 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5730| 
        B         $C$L321,LO            ; [CPU_] |5730| 
        ; branchcc occurs ; [] |5730| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5735,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5735 | ds_dn = cmdbuff[2];                                                    
; 5736 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5735| 
	.dwpsn	file "../Source/prod.c",line 5737,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5737 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5737| 
	.dwpsn	file "../Source/prod.c",line 5735,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5735| 
        ADDB      ACC,#2                ; [CPU_] |5735| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5735| 
	.dwpsn	file "../Source/prod.c",line 5737,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5738 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5737| 
	.dwpsn	file "../Source/prod.c",line 5735,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5735| 
        MOV       *-SP[52],AL           ; [CPU_] |5735| 
	.dwpsn	file "../Source/prod.c",line 5737,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5737| 
        ADDB      ACC,#4                ; [CPU_] |5737| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5737| 
	.dwpsn	file "../Source/prod.c",line 5739,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5739 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5739| 
	.dwpsn	file "../Source/prod.c",line 5737,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5737| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5737| 
        MOV       *-SP[51],AL           ; [CPU_] |5737| 
	.dwpsn	file "../Source/prod.c",line 5739,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5741 | tempint = 0;                                                           
; 5742 | k = 0x01;                                                              
; 5743 | for (i = 0; i < 8; i++) {                                              
; 5744 |         if (ds_bm & k) {                                               
; 5745 |                 tempint++;                                             
; 5747 |         k <<= 1;                                                       
; 5750 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5751 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5752 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5753 | //                                      ds_en = 0;                     
; 5754 | //                                      bincmdresult = Error_Invalid;  
; 5755 | //                                      break;                         
; 5756 | //                              }                                      
; 5758 | ds_en = 1;                                                             
; 5759 | ds_stop = 0;                                                           
; 5760 | ds_sn = 0;                                                             
; 5762 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5763 | //                              ad7738_setlimitchgd();                 
; 5765 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5739| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5739| 
        MOV       *-SP[50],AL           ; [CPU_] |5739| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5766,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5766 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5766| 
	.dwpsn	file "../Source/prod.c",line 5758,column 5,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |5758| 
	.dwpsn	file "../Source/prod.c",line 5759,column 5,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |5759| 
	.dwpsn	file "../Source/prod.c",line 5760,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |5760| 
	.dwpsn	file "../Source/prod.c",line 5767,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5767 | j++;                                                                   
; 5769 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[61],#6           ; [CPU_] |5767| 
	.dwpsn	file "../Source/prod.c",line 5770,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5770 | break;                                                                 
; 5772 | case StopStream:                                                       
; 5774 | ds_stop = 1;                                                           
; 5775 | bincmdresult = OK_SendResult;                                          
; 5776 | break;                                                                 
; 5778 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5780 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5770| 
        ; branch occurs ; [] |5770| 
$C$L80:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4942,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4942| 
        B         $C$L321,LO            ; [CPU_] |4942| 
        ; branchcc occurs ; [] |4942| 
	.dwpsn	file "../Source/prod.c",line 4947,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4947| 
        MOVL      ACC,XAR4              ; [CPU_] |4947| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4947| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4947| 
        MOVL      XAR0,#66              ; [CPU_] |4947| 
        ADDB      ACC,#2                ; [CPU_] |4947| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4947| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4947| 
        CMPL      ACC,XAR6              ; [CPU_] |4947| 
        B         $C$L321,NEQ           ; [CPU_] |4947| 
        ; branchcc occurs ; [] |4947| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4947| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4947| 
        CMPL      ACC,XAR6              ; [CPU_] |4947| 
        B         $C$L321,NEQ           ; [CPU_] |4947| 
        ; branchcc occurs ; [] |4947| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4947| 
        MOVL      XAR0,#64              ; [CPU_] |4947| 
        MOVL      ACC,XAR5              ; [CPU_] |4947| 
        ADDB      ACC,#4                ; [CPU_] |4947| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4947| 
        MOVB      XAR0,#36              ; [CPU_] |4947| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4947| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4947| 
        B         $C$L321,NEQ           ; [CPU_] |4947| 
        ; branchcc occurs ; [] |4947| 
	.dwpsn	file "../Source/prod.c",line 4953,column 5,is_stmt,isa 0
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4953| 
        ; call occurs [#_lcd_clear] ; [] |4953| 
	.dwpsn	file "../Source/prod.c",line 4954,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4954| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4954| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4954| 
        ; call occurs [#_lcd_puts] ; [] |4954| 
	.dwpsn	file "../Source/prod.c",line 4955,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4955| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4955| 
        MOVL      XAR0,#44              ; [CPU_] |4955| 
        ADD       AL,*-SP[58]           ; [CPU_] |4955| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4955| 
        MOV       *-SP[3],AL            ; [CPU_] |4955| 
        MOVB      AL,#1                 ; [CPU_] |4955| 
        ADD       AL,*-SP[57]           ; [CPU_] |4955| 
        MOV       *-SP[4],AL            ; [CPU_] |4955| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4955| 
        MOVL      XAR4,XAR3             ; [CPU_] |4955| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_sprintf")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4955| 
        ; call occurs [#_sprintf] ; [] |4955| 
	.dwpsn	file "../Source/prod.c",line 4956,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4956| 
        MOVL      XAR4,XAR3             ; [CPU_] |4956| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4956| 
        ; call occurs [#_lcd_puts] ; [] |4956| 
	.dwpsn	file "../Source/prod.c",line 4957,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4957| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4957| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4957| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4957| 
        MOVL      XAR0,#58              ; [CPU_] |4957| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4957| 
        MOVB      XAR1,#36              ; [CPU_] |4957| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4957| 
        ADDL      ACC,XAR6              ; [CPU_] |4957| 
        MOVL      XAR4,ACC              ; [CPU_] |4957| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4957| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4957| 
        MOVL      XAR4,XAR3             ; [CPU_] |4957| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_sprintf")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4957| 
        ; call occurs [#_sprintf] ; [] |4957| 
	.dwpsn	file "../Source/prod.c",line 4958,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4958| 
        MOVL      XAR4,XAR3             ; [CPU_] |4958| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4958| 
        ; call occurs [#_lcd_puts] ; [] |4958| 
	.dwpsn	file "../Source/prod.c",line 4959,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4959| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4959| 
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4959| 
        ; call occurs [#_lcd_puts] ; [] |4959| 
        MOVL      XAR0,#78              ; [CPU_] |4959| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4959| 
        MOVZ      AR0,*-SP[58]          ; [CPU_] |4959| 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOV       T,*-SP[57]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4961,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4961| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOV       *-SP[60],AL           ; [CPU_] |4961| 
        MOVZ      AR3,AR4               ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4962,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4962| 
        B         $C$L83,LEQ            ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
	.dwpsn	file "../Source/prod.c",line 4964,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4964| 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4964| 
        ; call occurs [#_shunt_switch] ; [] |4964| 
        MOV       *-SP[48],#49          ; [CPU_] 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4966,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4966| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_delay_us")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4966| 
        ; call occurs [#_delay_us] ; [] |4966| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |4966| 
	.dwpsn	file "../Source/prod.c",line 4965,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4965| 
        MOVZ      AR0,AR6               ; [CPU_] |4965| 
        MOV       *-SP[48],AR6          ; [CPU_] |4965| 
        CMP       AR0,#-1               ; [CPU_] |4965| 
        B         $C$L82,NEQ            ; [CPU_] |4965| 
        ; branchcc occurs ; [] |4965| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4969,column 7,is_stmt,isa 0
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_maf_rst")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4969| 
        ; call occurs [#_maf_rst] ; [] |4969| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4971,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4971| 
        SPM       #0                    ; [CPU_] 
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_delay_us")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4971| 
        ; call occurs [#_delay_us] ; [] |4971| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4974,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4974| 
	.dwpsn	file "../Source/prod.c",line 4975,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4975| 
	.dwpsn	file "../Source/prod.c",line 4974,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4974| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4974| 
	.dwpsn	file "../Source/prod.c",line 4976,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4976| 
	.dwpsn	file "../Source/prod.c",line 4975,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4975| 
	.dwpsn	file "../Source/prod.c",line 4976,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4976| 
        MOVB      ACC,#0                ; [CPU_] |4976| 
        SUBB      ACC,#1                ; [CPU_] |4976| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4976| 
        B         $C$L86,EQ             ; [CPU_] |4976| 
        ; branchcc occurs ; [] |4976| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4977,column 14,is_stmt,isa 0
        B         $C$L85,UNC            ; [CPU_] |4977| 
        ; branch occurs ; [] |4977| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4978,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4978| 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("_delay_us")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4978| 
        ; call occurs [#_delay_us] ; [] |4978| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4977,column 14,is_stmt,isa 0
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$589, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4977| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4977| 
        CMPB      AL,#0                 ; [CPU_] |4977| 
        B         $C$L84,EQ             ; [CPU_] |4977| 
        ; branchcc occurs ; [] |4977| 
	.dwpsn	file "../Source/prod.c",line 4981,column 7,is_stmt,isa 0
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4981| 
        ; call occurs [#_ad7738_getraw] ; [] |4981| 
	.dwpsn	file "../Source/prod.c",line 4982,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4982| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4982| 
        ADDL      XAR4,ACC              ; [CPU_] |4982| 
        MOVL      XAR0,#34              ; [CPU_] |4982| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4982| 
        MOVL      XAR0,#34              ; [CPU_] |4982| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4982| 
        ASR64     ACC:P,16              ; [CPU_] |4982| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4982| 
        MOVL      XAR0,#34              ; [CPU_] |4982| 
        ASR64     ACC:P,16              ; [CPU_] |4982| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4982| 
        MOVL      XAR0,#34              ; [CPU_] |4982| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |4982| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4982| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |4982| 
        MOVL      *+XAR3[0],P           ; [CPU_] |4982| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4982| 
	.dwpsn	file "../Source/prod.c",line 4976,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4976| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4976| 
        MOVB      ACC,#0                ; [CPU_] |4976| 
        SUBB      ACC,#1                ; [CPU_] |4976| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4976| 
        B         $C$L85,NEQ            ; [CPU_] |4976| 
        ; branchcc occurs ; [] |4976| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4984,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4984| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4984| 
        MOV       *-SP[2],#0            ; [CPU_] |4984| 
        MOV       *-SP[1],#0            ; [CPU_] |4984| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |4984| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |4984| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4984| 
        ; call occurs [#LL$$DIV] ; [] |4984| 
	.dwpsn	file "../Source/prod.c",line 4987,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4987| 
        MOVB      XAR0,#46              ; [CPU_] |4987| 
	.dwpsn	file "../Source/prod.c",line 4984,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |4984| 
	.dwpsn	file "../Source/prod.c",line 4986,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4986| 
	.dwpsn	file "../Source/prod.c",line 4984,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |4984| 
	.dwpsn	file "../Source/prod.c",line 4987,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4987| 
        CMPB      AL,#2                 ; [CPU_] |4987| 
        B         $C$L89,LEQ            ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4988,column 7,is_stmt,isa 0
        B         $C$L88,UNC            ; [CPU_] |4988| 
        ; branch occurs ; [] |4988| 
$C$L87:    
	.dwpsn	file "../Source/prod.c",line 4989,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4989| 
$C$L88:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4988,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4988| 
        B         $C$L89,HIS            ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
        MOVB      AL,#1                 ; [CPU_] |4988| 
        ADD       AL,AR4                ; [CPU_] |4988| 
        MOVZ      AR5,AL                ; [CPU_] |4988| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4988| 
        ADDL      ACC,XAR1              ; [CPU_] |4988| 
        MOVL      XAR6,ACC              ; [CPU_] |4988| 
        MOVB      XAR0,#72              ; [CPU_] |4988| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4988| 
        MOVL      XAR0,#32              ; [CPU_] |4988| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4988| 
        MOVL      XAR0,#32              ; [CPU_] |4988| 
        ASR64     ACC:P,16              ; [CPU_] |4988| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4988| 
        MOVL      XAR0,#32              ; [CPU_] |4988| 
        ASR64     ACC:P,16              ; [CPU_] |4988| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4988| 
        MOVL      *-SP[4],P             ; [CPU_] |4988| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4988| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4988| 
        MOVL      P,*-SP[32]            ; [CPU_] |4988| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$592, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4988| 
        ; call occurs [#LL$$CMP] ; [] |4988| 
        CMPB      AL,#0                 ; [CPU_] |4988| 
        B         $C$L87,GT             ; [CPU_] |4988| 
        ; branchcc occurs ; [] |4988| 
$C$L89:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4992,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4992| 
        ADDL      ACC,XAR1              ; [CPU_] |4992| 
        MOVL      XAR4,ACC              ; [CPU_] |4992| 
        MOVL      XAR0,#88              ; [CPU_] |4992| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4992| 
        MOVB      XAR0,#96              ; [CPU_] |4992| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4992| 
        MOVL      XAR0,#38              ; [CPU_] |4992| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4992| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4992| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4992| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4992| 
        ; call occurs [#FS$$MPY] ; [] |4992| 
        MOVL      XAR0,#30              ; [CPU_] |4992| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4992| 
        MOVL      P,*XAR3++             ; [CPU_] |4992| 
        MOVL      ACC,*XAR3++           ; [CPU_] |4992| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4992| 
        ; call occurs [#LL$$TOFS] ; [] |4992| 
        MOVL      XAR0,#30              ; [CPU_] |4992| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4992| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4992| 
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4992| 
        ; call occurs [#FS$$MPY] ; [] |4992| 
        MOVL      XAR0,#88              ; [CPU_] |4992| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4992| 
        MOVB      XAR1,#118             ; [CPU_] |4992| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4992| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4992| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4992| 
        ; call occurs [#FS$$ADD] ; [] |4992| 
        MOVL      XAR0,#36              ; [CPU_] |4992| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4992| 
        MOVL      XAR0,#36              ; [CPU_] |4992| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4961,column 17,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4961| 
	.dwpsn	file "../Source/prod.c",line 4992,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4992| 
        MOV       AL,*-SP[60]           ; [CPU_] |4992| 
	.dwpsn	file "../Source/prod.c",line 4961,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4961| 
        B         $C$L81,LT             ; [CPU_] |4961| 
        ; branchcc occurs ; [] |4961| 
	.dwpsn	file "../Source/prod.c",line 4996,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4996| 
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4996| 
        ; call occurs [#_shunt_switch] ; [] |4996| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4998,column 5,is_stmt,isa 0
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_maf_rst")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4998| 
        ; call occurs [#_maf_rst] ; [] |4998| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5001,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |5001| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5001| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |5001| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |5001| 
        ; call occurs [#FS$$SUB] ; [] |5001| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |5001| 
        MOVL      XAR0,#36              ; [CPU_] |5001| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |5001| 
        MOVB      XAR0,#140             ; [CPU_] |5001| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5001| 
        MOV       AL,*-SP[58]           ; [CPU_] |5001| 
	.dwpsn	file "../Source/prod.c",line 5003,column 5,is_stmt,isa 0
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_tagid")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5003| 
        ; call occurs [#_tagid] ; [] |5003| 
        MOVL      XAR4,XAR1             ; [CPU_] |5003| 
        ADDB      XAR4,#32              ; [CPU_] |5003| 
        MOVL      *+XAR4[0],P           ; [CPU_] |5003| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |5003| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5006,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |5006| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |5006| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5006| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5006| 
        MOV       AL,*-SP[57]           ; [CPU_] |5006| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5009,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5011,column 5,is_stmt,isa 0
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5011| 
        ; call occurs [#_ad7738_setcal] ; [] |5011| 
        MOVZ      AR1,*-SP[47]          ; [CPU_] |5011| 
	.dwpsn	file "../Source/prod.c",line 5012,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5012| 
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5012| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5012| 
        MOV       AL,AR1                ; [CPU_] |5012| 
	.dwpsn	file "../Source/prod.c",line 5013,column 5,is_stmt,isa 0
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5013| 
        ; call occurs [#_ad7738_resetvall] ; [] |5013| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5018,column 5,is_stmt,isa 0
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5018| 
        ; call occurs [#_lcd_clear] ; [] |5018| 
	.dwpsn	file "../Source/prod.c",line 5019,column 5,is_stmt,isa 0
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_update_units")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5019| 
        ; call occurs [#_update_units] ; [] |5019| 
        MOVL      XAR0,#42              ; [CPU_] |5019| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5019| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5021,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |5021| 
$C$L90:    
	.dwpsn	file "../Source/prod.c",line 5022,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5022| 
	.dwpsn	file "../Source/prod.c",line 5021,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |5021| 
	.dwpsn	file "../Source/prod.c",line 5022,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5022| 
	.dwpsn	file "../Source/prod.c",line 5021,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |5021| 
	.dwpsn	file "../Source/prod.c",line 5022,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5022| 
	.dwpsn	file "../Source/prod.c",line 5021,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |5021| 
        B         $C$L90,HI             ; [CPU_] |5021| 
        ; branchcc occurs ; [] |5021| 
	.dwpsn	file "../Source/prod.c",line 5024,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |5024| 
	.dwpsn	file "../Source/prod.c",line 5026,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5026| 
        ; branch occurs ; [] |5026| 
$C$L91:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4796,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4796| 
        B         $C$L321,LO            ; [CPU_] |4796| 
        ; branchcc occurs ; [] |4796| 
	.dwpsn	file "../Source/prod.c",line 4801,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4801| 
        MOVL      XAR0,#66              ; [CPU_] |4801| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4801| 
        ADDB      ACC,#2                ; [CPU_] |4801| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4801| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4801| 
        CMPL      ACC,XAR6              ; [CPU_] |4801| 
        B         $C$L321,NEQ           ; [CPU_] |4801| 
        ; branchcc occurs ; [] |4801| 
        MOVZ      AR6,*-SP[57]          ; [CPU_] |4801| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4801| 
        CMPL      ACC,XAR6              ; [CPU_] |4801| 
        B         $C$L321,NEQ           ; [CPU_] |4801| 
        ; branchcc occurs ; [] |4801| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4801| 
        MOVL      XAR0,#64              ; [CPU_] |4801| 
        MOVL      ACC,XAR5              ; [CPU_] |4801| 
        ADDB      ACC,#4                ; [CPU_] |4801| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4801| 
        MOVB      XAR0,#36              ; [CPU_] |4801| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4801| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4801| 
        B         $C$L321,NEQ           ; [CPU_] |4801| 
        ; branchcc occurs ; [] |4801| 
	.dwpsn	file "../Source/prod.c",line 4807,column 5,is_stmt,isa 0
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4807| 
        ; call occurs [#_lcd_clear] ; [] |4807| 
	.dwpsn	file "../Source/prod.c",line 4808,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4808| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4808| 
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4808| 
        ; call occurs [#_lcd_puts] ; [] |4808| 
	.dwpsn	file "../Source/prod.c",line 4809,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4809| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4809| 
        MOVL      XAR0,#44              ; [CPU_] |4809| 
        ADD       AL,*-SP[58]           ; [CPU_] |4809| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4809| 
        MOV       *-SP[3],AL            ; [CPU_] |4809| 
        MOVB      AL,#1                 ; [CPU_] |4809| 
        ADD       AL,*-SP[57]           ; [CPU_] |4809| 
        MOV       *-SP[4],AL            ; [CPU_] |4809| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4809| 
        MOVL      XAR4,XAR1             ; [CPU_] |4809| 
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_sprintf")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4809| 
        ; call occurs [#_sprintf] ; [] |4809| 
	.dwpsn	file "../Source/prod.c",line 4810,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4810| 
	.dwpsn	file "../Source/prod.c",line 4809,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4809| 
	.dwpsn	file "../Source/prod.c",line 4810,column 5,is_stmt,isa 0
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4810| 
        ; call occurs [#_lcd_puts] ; [] |4810| 
	.dwpsn	file "../Source/prod.c",line 4811,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4811| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4811| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4811| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4811| 
        MOVL      XAR0,#58              ; [CPU_] |4811| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4811| 
        MOVB      XAR1,#36              ; [CPU_] |4811| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4811| 
        ADDL      ACC,XAR6              ; [CPU_] |4811| 
        MOVL      XAR4,ACC              ; [CPU_] |4811| 
        MOVL      XAR0,#44              ; [CPU_] |4811| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4811| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4811| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4811| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_sprintf")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4811| 
        ; call occurs [#_sprintf] ; [] |4811| 
        MOVL      XAR0,#44              ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4812,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4812| 
	.dwpsn	file "../Source/prod.c",line 4811,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4811| 
	.dwpsn	file "../Source/prod.c",line 4812,column 5,is_stmt,isa 0
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4812| 
        ; call occurs [#_lcd_puts] ; [] |4812| 
	.dwpsn	file "../Source/prod.c",line 4814,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4814| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4814| 
        MOVB      XAR1,#36              ; [CPU_] |4814| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4814| 
        CMPB      AL,#1                 ; [CPU_] |4814| 
        B         $C$L92,EQ             ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
        CMPB      AL,#2                 ; [CPU_] |4814| 
        B         $C$L105,EQ            ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
        CMPB      AL,#3                 ; [CPU_] |4814| 
        B         $C$L96,EQ             ; [CPU_] |4814| 
        ; branchcc occurs ; [] |4814| 
        B         $C$L112,UNC           ; [CPU_] |4814| 
        ; branch occurs ; [] |4814| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4818,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4818| 
        MOVB      AL,#60                ; [CPU_] |4818| 
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4818| 
        ; call occurs [#_lcd_puts] ; [] |4818| 
	.dwpsn	file "../Source/prod.c",line 4820,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4820| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4821| 
	.dwpsn	file "../Source/prod.c",line 4820,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4820| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4822| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4821| 
        MOV       T,*-SP[58]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4820,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4820| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4822| 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBL      *-SP[38],ACC          ; [CPU_] |4822| 
	.dwpsn	file "../Source/prod.c",line 4820,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4820| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4822| 
        SUBB      ACC,#1                ; [CPU_] |4822| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4822| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4822| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L95,NEQ            ; [CPU_] |4822| 
        ; branchcc occurs ; [] |4822| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4823,column 14,is_stmt,isa 0
        B         $C$L94,UNC            ; [CPU_] |4823| 
        ; branch occurs ; [] |4823| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4824,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4824| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_delay_us")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4824| 
        ; call occurs [#_delay_us] ; [] |4824| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4823,column 14,is_stmt,isa 0
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4823| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4823| 
        CMPB      AL,#0                 ; [CPU_] |4823| 
        B         $C$L93,EQ             ; [CPU_] |4823| 
        ; branchcc occurs ; [] |4823| 
	.dwpsn	file "../Source/prod.c",line 4827,column 7,is_stmt,isa 0
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4827| 
        ; call occurs [#_ad7738_getraw] ; [] |4827| 
	.dwpsn	file "../Source/prod.c",line 4828,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4828| 
        ADDL      XAR4,ACC              ; [CPU_] |4828| 
        MOVL      XAR0,#28              ; [CPU_] |4828| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4828| 
        MOVL      XAR0,#28              ; [CPU_] |4828| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4828| 
        ASR64     ACC:P,16              ; [CPU_] |4828| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4828| 
        MOVL      XAR0,#28              ; [CPU_] |4828| 
        ASR64     ACC:P,16              ; [CPU_] |4828| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4828| 
        MOVL      XAR0,#28              ; [CPU_] |4828| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4828| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4828| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4828| 
        MOVL      *-SP[32],P            ; [CPU_] |4828| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4828| 
	.dwpsn	file "../Source/prod.c",line 4822,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4822| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4822| 
        MOVB      ACC,#0                ; [CPU_] |4822| 
        SUBB      ACC,#1                ; [CPU_] |4822| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4822| 
        B         $C$L94,NEQ            ; [CPU_] |4822| 
        ; branchcc occurs ; [] |4822| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4830,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4830| 
	.dwpsn	file "../Source/prod.c",line 4834,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4834| 
        ; branch occurs ; [] |4834| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4883,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4883| 
        MOVB      AL,#60                ; [CPU_] |4883| 
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4883| 
        ; call occurs [#_lcd_puts] ; [] |4883| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4885,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4885| 
        MOV       *-SP[60],AL           ; [CPU_] |4885| 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4886,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4886| 
        B         $C$L99,LEQ            ; [CPU_] |4886| 
        ; branchcc occurs ; [] |4886| 
	.dwpsn	file "../Source/prod.c",line 4888,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4888| 
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4888| 
        ; call occurs [#_shunt_switch] ; [] |4888| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4890,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4890| 
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_delay_us")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4890| 
        ; call occurs [#_delay_us] ; [] |4890| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4890| 
	.dwpsn	file "../Source/prod.c",line 4889,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4889| 
        MOVZ      AR0,AR6               ; [CPU_] |4889| 
        MOV       *-SP[47],AR6          ; [CPU_] |4889| 
        CMP       AR0,#-1               ; [CPU_] |4889| 
        B         $C$L98,NEQ            ; [CPU_] |4889| 
        ; branchcc occurs ; [] |4889| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4893,column 8,is_stmt,isa 0
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_maf_rst")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4893| 
        ; call occurs [#_maf_rst] ; [] |4893| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4895,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4895| 
        SPM       #0                    ; [CPU_] 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_delay_us")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4895| 
        ; call occurs [#_delay_us] ; [] |4895| 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4898,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4898| 
	.dwpsn	file "../Source/prod.c",line 4899,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4899| 
	.dwpsn	file "../Source/prod.c",line 4898,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4898| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4898| 
	.dwpsn	file "../Source/prod.c",line 4900,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4900| 
	.dwpsn	file "../Source/prod.c",line 4899,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4899| 
	.dwpsn	file "../Source/prod.c",line 4900,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4900| 
        MOVB      ACC,#0                ; [CPU_] |4900| 
        SUBB      ACC,#1                ; [CPU_] |4900| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4900| 
        B         $C$L101,EQ            ; [CPU_] |4900| 
        ; branchcc occurs ; [] |4900| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4901,column 15,is_stmt,isa 0
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4901| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4901| 
        CMPB      AL,#0                 ; [CPU_] |4901| 
        B         $C$L104,EQ            ; [CPU_] |4901| 
        ; branchcc occurs ; [] |4901| 
	.dwpsn	file "../Source/prod.c",line 4905,column 8,is_stmt,isa 0
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4905| 
        ; call occurs [#_ad7738_getraw] ; [] |4905| 
	.dwpsn	file "../Source/prod.c",line 4906,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4906| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4906| 
        ADDL      XAR4,ACC              ; [CPU_] |4906| 
        MOVL      XAR0,#26              ; [CPU_] |4906| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4906| 
        MOVL      XAR0,#26              ; [CPU_] |4906| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4906| 
        ASR64     ACC:P,16              ; [CPU_] |4906| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4906| 
        MOVL      XAR0,#26              ; [CPU_] |4906| 
        ASR64     ACC:P,16              ; [CPU_] |4906| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4906| 
        MOVL      XAR0,#26              ; [CPU_] |4906| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4906| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4906| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4906| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4906| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4906| 
	.dwpsn	file "../Source/prod.c",line 4900,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4900| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4900| 
        MOVB      ACC,#0                ; [CPU_] |4900| 
        SUBB      ACC,#1                ; [CPU_] |4900| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4900| 
        B         $C$L100,NEQ           ; [CPU_] |4900| 
        ; branchcc occurs ; [] |4900| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4885,column 18,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |4885| 
        ADDB      XAR1,#4               ; [CPU_] |4885| 
        MOV       AL,*-SP[60]           ; [CPU_] |4885| 
        CMPB      AL,#2                 ; [CPU_] |4885| 
        B         $C$L97,LT             ; [CPU_] |4885| 
        ; branchcc occurs ; [] |4885| 
	.dwpsn	file "../Source/prod.c",line 4910,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4910| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4910| 
        ; call occurs [#_shunt_switch] ; [] |4910| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4912,column 6,is_stmt,isa 0
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("_maf_rst")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4912| 
        ; call occurs [#_maf_rst] ; [] |4912| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4915,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4915| 
        MOV       AH,#17948             ; [CPU_] |4915| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4915| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4915| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4915| 
        ; call occurs [#FS$$MPY] ; [] |4915| 
        MOVL      XAR1,ACC              ; [CPU_] |4915| 
        MOVL      P,*-SP[28]            ; [CPU_] |4915| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4915| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4915| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4915| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4915| 
        ; call occurs [#LL$$TOFS] ; [] |4915| 
        MOVL      XAR0,#88              ; [CPU_] |4915| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4915| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4915| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4915| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4915| 
        ; call occurs [#FS$$MPY] ; [] |4915| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4915| 
        MOVL      ACC,XAR1              ; [CPU_] |4915| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4915| 
        ; call occurs [#FS$$DIV] ; [] |4915| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4915| 
        MOVB      XAR0,#96              ; [CPU_] |4915| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4915| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4917,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4917| 
        MOVL      XAR0,#52              ; [CPU_] |4917| 
        ADDB      ACC,#96               ; [CPU_] |4917| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4917| 
        MOVL      XAR0,#88              ; [CPU_] |4917| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4917| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4917| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4917| 
        ; call occurs [#FS$$NEG] ; [] |4917| 
        MOVB      XAR0,#96              ; [CPU_] |4917| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4917| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4917| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4917| 
        ; call occurs [#FS$$MPY] ; [] |4917| 
        MOVL      XAR1,ACC              ; [CPU_] |4917| 
        MOVL      P,*-SP[32]            ; [CPU_] |4917| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4917| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4917| 
        ; call occurs [#LL$$TOFS] ; [] |4917| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4917| 
        MOVL      ACC,XAR1              ; [CPU_] |4917| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4917| 
        ; call occurs [#FS$$MPY] ; [] |4917| 
        MOVL      XAR6,ACC              ; [CPU_] |4917| 
        MOV       AL,#16384             ; [CPU_] |4917| 
        MOV       AH,#17948             ; [CPU_] |4917| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4917| 
        MOVL      ACC,XAR6              ; [CPU_] |4917| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4917| 
        ; call occurs [#FS$$DIV] ; [] |4917| 
        MOVL      XAR0,#36              ; [CPU_] |4917| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4917| 
        MOVB      XAR1,#118             ; [CPU_] |4917| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4917| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4920,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4920| 
	.dwpsn	file "../Source/prod.c",line 4921,column 6,is_stmt,isa 0
        B         $C$L113,UNC           ; [CPU_] |4921| 
        ; branch occurs ; [] |4921| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4902,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4902| 
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("_delay_us")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4902| 
        ; call occurs [#_delay_us] ; [] |4902| 
	.dwpsn	file "../Source/prod.c",line 4901,column 15,is_stmt,isa 0
        B         $C$L100,UNC           ; [CPU_] |4901| 
        ; branch occurs ; [] |4901| 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4838,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4838| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4838,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4838| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |4838| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        SUBB      XAR5,#16              ; [CPU_U] |4839| 
        MOVZ      AR5,AR5               ; [CPU_] |4839| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4841,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4841| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4841| 
        MOV       *XAR5++,AL            ; [CPU_] |4841| 
	.dwpsn	file "../Source/prod.c",line 4842,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4842| 
	.dwpsn	file "../Source/prod.c",line 4840,column 18,is_stmt,isa 0
        BANZ      $C$L106,AR6--         ; [CPU_] |4840| 
        ; branchcc occurs ; [] |4840| 
	.dwpsn	file "../Source/prod.c",line 4845,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4845| 
        MOVB      XAR0,#46              ; [CPU_] |4845| 
        MOV       AL,*-SP[47]           ; [CPU_] |4845| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4845| 
        B         $C$L112,HIS           ; [CPU_] |4845| 
        ; branchcc occurs ; [] |4845| 
        MOVL      XAR0,#36              ; [CPU_] |4845| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4845| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4845| 
        ADDL      ACC,XAR6              ; [CPU_] |4845| 
        ADDB      ACC,#48               ; [CPU_] |4845| 
        MOVL      XAR1,ACC              ; [CPU_] |4845| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4845| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4845| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4845| 
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4845| 
        ; call occurs [#FS$$CMP] ; [] |4845| 
        CMPB      AL,#0                 ; [CPU_] |4845| 
        B         $C$L112,NEQ           ; [CPU_] |4845| 
        ; branchcc occurs ; [] |4845| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4849| 
        MOVB      AL,#1                 ; [CPU_] |4849| 
        MOVL      XAR0,#44              ; [CPU_] |4849| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4849| 
        ADD       AL,*-SP[47]           ; [CPU_] |4849| 
        MOV       *-SP[3],AL            ; [CPU_] |4849| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4849| 
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("_sprintf")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4849| 
        ; call occurs [#_sprintf] ; [] |4849| 
        MOVL      XAR0,#44              ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4850,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4850| 
	.dwpsn	file "../Source/prod.c",line 4849,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4849| 
	.dwpsn	file "../Source/prod.c",line 4850,column 6,is_stmt,isa 0
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4850| 
        ; call occurs [#_lcd_puts] ; [] |4850| 
	.dwpsn	file "../Source/prod.c",line 4852,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4852| 
	.dwpsn	file "../Source/prod.c",line 4853,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4853| 
	.dwpsn	file "../Source/prod.c",line 4852,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4852| 
	.dwpsn	file "../Source/prod.c",line 4853,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4853| 
	.dwpsn	file "../Source/prod.c",line 4852,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |4852| 
	.dwpsn	file "../Source/prod.c",line 4854,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4854| 
	.dwpsn	file "../Source/prod.c",line 4852,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |4852| 
	.dwpsn	file "../Source/prod.c",line 4854,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4854| 
        MOVB      ACC,#0                ; [CPU_] |4854| 
        SUBB      ACC,#1                ; [CPU_] |4854| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4854| 
        B         $C$L108,EQ            ; [CPU_] |4854| 
        ; branchcc occurs ; [] |4854| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4855,column 14,is_stmt,isa 0
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4855| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4855| 
        CMPB      AL,#0                 ; [CPU_] |4855| 
        B         $C$L111,EQ            ; [CPU_] |4855| 
        ; branchcc occurs ; [] |4855| 
	.dwpsn	file "../Source/prod.c",line 4859,column 7,is_stmt,isa 0
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4859| 
        ; call occurs [#_ad7738_getraw] ; [] |4859| 
	.dwpsn	file "../Source/prod.c",line 4860,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4860| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4860| 
        ADDL      XAR4,ACC              ; [CPU_] |4860| 
        MOVL      XAR0,#24              ; [CPU_] |4860| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4860| 
        MOVL      XAR0,#24              ; [CPU_] |4860| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4860| 
        ASR64     ACC:P,16              ; [CPU_] |4860| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4860| 
        MOVL      XAR0,#24              ; [CPU_] |4860| 
        ASR64     ACC:P,16              ; [CPU_] |4860| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4860| 
        MOVL      XAR0,#24              ; [CPU_] |4860| 
        ADDUL     P,*-SP[32]            ; [CPU_] |4860| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |4860| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4860| 
        MOVL      *-SP[32],P            ; [CPU_] |4860| 
        MOVL      *-SP[30],ACC          ; [CPU_] |4860| 
	.dwpsn	file "../Source/prod.c",line 4854,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4854| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4854| 
        MOVB      ACC,#0                ; [CPU_] |4854| 
        SUBB      ACC,#1                ; [CPU_] |4854| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4854| 
        B         $C$L107,NEQ           ; [CPU_] |4854| 
        ; branchcc occurs ; [] |4854| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4862,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4862| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4862| 
        MOV       *-SP[2],#0            ; [CPU_] |4862| 
        MOV       *-SP[1],#0            ; [CPU_] |4862| 
        MOVL      P,*-SP[32]            ; [CPU_] |4862| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4862| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4862| 
        ; call occurs [#LL$$DIV] ; [] |4862| 
        ADDB      XAR1,#24              ; [CPU_] |4862| 
	.dwpsn	file "../Source/prod.c",line 4864,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4864| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4864| 
	.dwpsn	file "../Source/prod.c",line 4862,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4862| 
	.dwpsn	file "../Source/prod.c",line 4864,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4864| 
        MOV       AL,*-SP[47]           ; [CPU_] |4864| 
        SUB       AL,AR6                ; [CPU_] |4864| 
        MOVZ      AR7,AL                ; [CPU_] |4864| 
        MOVL      XAR4,#65535           ; [CPU_U] |4864| 
        MOVL      ACC,XAR4              ; [CPU_] |4864| 
        CMPL      ACC,XAR7              ; [CPU_] |4864| 
        B         $C$L103,NEQ           ; [CPU_] |4864| 
        ; branchcc occurs ; [] |4864| 
	.dwpsn	file "../Source/prod.c",line 4867,column 12,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |4867| 
        B         $C$L110,UNC           ; [CPU_] |4867| 
        ; branch occurs ; [] |4867| 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4868,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4868| 
        MOVB      AL,#10                ; [CPU_] |4868| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4868| 
        MOV       T,*-SP[58]            ; [CPU_] |4868| 
        MPYU      ACC,T,AL              ; [CPU_] |4868| 
        MOVL      XAR0,#88              ; [CPU_] |4868| 
        ADDL      ACC,XAR6              ; [CPU_] |4868| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4868| 
        MOVL      XAR0,#36              ; [CPU_] |4868| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4868| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[47]           ; [CPU_] |4868| 
        MOV       ACC,AL << 1           ; [CPU_] |4868| 
        ADDL      ACC,XAR6              ; [CPU_] |4868| 
        MOVL      XAR3,ACC              ; [CPU_] |4868| 
        MOVB      XAR0,#48              ; [CPU_] |4868| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4868| 
        MOVB      XAR0,#50              ; [CPU_] |4868| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4868| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4868| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4868| 
        ; call occurs [#FS$$SUB] ; [] |4868| 
        MOVL      XAR0,#42              ; [CPU_] |4868| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4868| 
        MOVB      XAR0,#74              ; [CPU_] |4868| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4868| 
        MOVB      XAR0,#72              ; [CPU_] |4868| 
        SUBL      ACC,*+XAR3[AR0]       ; [CPU_] |4868| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4868| 
        ; call occurs [#L$$TOFS] ; [] |4868| 
        MOVL      XAR0,#42              ; [CPU_] |4868| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4868| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4868| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4868| 
        ; call occurs [#FS$$DIV] ; [] |4868| 
        MOVL      XAR0,#88              ; [CPU_] |4868| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4868| 
        MOVB      XAR1,#44              ; [CPU_] |4868| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |4868| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4868| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4868| 
        ; call occurs [#FS$$DIV] ; [] |4868| 
        MOVB      XAR0,#96              ; [CPU_] |4868| 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4868| 
	.dwpsn	file "../Source/prod.c",line 4872,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4872| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4872| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4872| 
        MOVB      XAR1,#44              ; [CPU_] |4872| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |4872| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4872| 
        ; call occurs [#FS$$MPY] ; [] |4872| 
        MOVL      XAR0,#88              ; [CPU_] |4872| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4872| 
        MOVB      XAR0,#72              ; [CPU_] |4872| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4872| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4872| 
        ; call occurs [#L$$TOFS] ; [] |4872| 
        MOVL      XAR0,#88              ; [CPU_] |4872| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4872| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4872| 
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4872| 
        ; call occurs [#FS$$MPY] ; [] |4872| 
        MOVB      XAR0,#48              ; [CPU_] |4872| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4872| 
        MOVL      ACC,*+XAR3[AR0]       ; [CPU_] |4872| 
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4872| 
        ; call occurs [#FS$$SUB] ; [] |4872| 
        MOVB      XAR0,#118             ; [CPU_] |4872| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR3[AR0],ACC       ; [CPU_] |4872| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4867,column 43,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4867| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4867,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4867| 
        ADDB      AL,#-1                ; [CPU_] |4867| 
        CMP       AL,*-SP[47]           ; [CPU_] |4867| 
        B         $C$L109,GT            ; [CPU_] |4867| 
        ; branchcc occurs ; [] |4867| 
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        B         $C$L103,UNC           ; [CPU_] |4879| 
        ; branch occurs ; [] |4879| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4856,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4856| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("_delay_us")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4856| 
        ; call occurs [#_delay_us] ; [] |4856| 
	.dwpsn	file "../Source/prod.c",line 4855,column 14,is_stmt,isa 0
        B         $C$L107,UNC           ; [CPU_] |4855| 
        ; branch occurs ; [] |4855| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4846,column 7,is_stmt,isa 0
        MOV       *-SP[47],#2           ; [CPU_] |4846| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4928,column 5,is_stmt,isa 0
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4928| 
        ; call occurs [#_lcd_clear] ; [] |4928| 
	.dwpsn	file "../Source/prod.c",line 4929,column 5,is_stmt,isa 0
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("_update_units")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4929| 
        ; call occurs [#_update_units] ; [] |4929| 
        MOV       AL,*-SP[47]           ; [CPU_] |4929| 
	.dwpsn	file "../Source/prod.c",line 4932,column 6,is_stmt,isa 0
        B         $C$L318,NEQ           ; [CPU_] |4932| 
        ; branchcc occurs ; [] |4932| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4934,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4934| 
$C$L114:    
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4934,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4934| 
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4934,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4934| 
	.dwpsn	file "../Source/prod.c",line 4935,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4935| 
	.dwpsn	file "../Source/prod.c",line 4934,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4934| 
        B         $C$L114,HI            ; [CPU_] |4934| 
        ; branchcc occurs ; [] |4934| 
	.dwpsn	file "../Source/prod.c",line 4937,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4937| 
	.dwpsn	file "../Source/prod.c",line 4938,column 5,is_stmt,isa 0
        B         $C$L318,UNC           ; [CPU_] |4938| 
        ; branch occurs ; [] |4938| 
$C$L115:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4648,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4648| 
        B         $C$L321,LO            ; [CPU_] |4648| 
        ; branchcc occurs ; [] |4648| 
	.dwpsn	file "../Source/prod.c",line 4653,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4653| 
        MOV       *-SP[58],AL           ; [CPU_] |4653| 
	.dwpsn	file "../Source/prod.c",line 4655,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4655| 
	.dwpsn	file "../Source/prod.c",line 4654,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4654| 
        MOV       *-SP[57],AL           ; [CPU_] |4654| 
	.dwpsn	file "../Source/prod.c",line 4655,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4655| 
        MOV       AL,*-SP[58]           ; [CPU_] |4655| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4655| 
        CMPB      AL,#4                 ; [CPU_] |4655| 
        B         $C$L321,HIS           ; [CPU_] |4655| 
        ; branchcc occurs ; [] |4655| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4655| 
        B         $C$L321,HIS           ; [CPU_] |4655| 
        ; branchcc occurs ; [] |4655| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4661,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4661| 
        MOVL      ACC,XAR4              ; [CPU_] |4661| 
        ADDB      ACC,#4                ; [CPU_] |4661| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4661| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4661| 
        CMPB      AL,#16                ; [CPU_] |4661| 
        B         $C$L321,HIS           ; [CPU_] |4661| 
        ; branchcc occurs ; [] |4661| 
	.dwpsn	file "../Source/prod.c",line 4665,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4665| 
        MOVL      XAR0,#64              ; [CPU_] |4665| 
        CMPB      AL,#0                 ; [CPU_] |4665| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4665| 
        B         $C$L116,LEQ           ; [CPU_] |4665| 
        ; branchcc occurs ; [] |4665| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4665| 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4665| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4665| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4665| 
        MOVL      XAR0,ACC              ; [CPU_] |4665| 
	.dwpsn	file "../Source/prod.c",line 4666,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4666| 
        ADD       AL,AR4                ; [CPU_] |4666| 
        MOVZ      AR6,AL                ; [CPU_] |4666| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4666| 
	.dwpsn	file "../Source/prod.c",line 4665,column 17,is_stmt,isa 0
        B         $C$L117,UNC           ; [CPU_] |4665| 
        ; branch occurs ; [] |4665| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4660,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4660| 
	.dwpsn	file "../Source/prod.c",line 4665,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4665| 
$C$L117:    
	.dwpsn	file "../Source/prod.c",line 4668,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4668| 
        MOVL      XAR0,#86              ; [CPU_] |4668| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4670,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4670| 
        MOVL      XAR4,ACC              ; [CPU_] |4670| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4670| 
        CMPB      AL,#16                ; [CPU_] |4670| 
        B         $C$L321,HIS           ; [CPU_] |4670| 
        ; branchcc occurs ; [] |4670| 
        ADDB      XAR4,#1               ; [CPU_] |4670| 
	.dwpsn	file "../Source/prod.c",line 4675,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4675| 
	.dwpsn	file "../Source/prod.c",line 4670,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4670| 
        MOVL      P,XAR4                ; [CPU_] |4670| 
	.dwpsn	file "../Source/prod.c",line 4675,column 17,is_stmt,isa 0
        B         $C$L119,LEQ           ; [CPU_] |4675| 
        ; branchcc occurs ; [] |4675| 
        MOVZ      AR5,AL                ; [CPU_] |4675| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4676,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4676| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L118:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4676| 
        MOV       *XAR4++,AL            ; [CPU_] |4676| 
        ADDB      XAR7,#1               ; [CPU_] |4676| 
        MOVL      P,XAR7                ; [CPU_] |4676| 
	.dwpsn	file "../Source/prod.c",line 4675,column 17,is_stmt,isa 0
        BANZ      $C$L118,AR0--         ; [CPU_] |4675| 
        ; branchcc occurs ; [] |4675| 
        B         $C$L120,UNC           ; [CPU_] |4675| 
        ; branch occurs ; [] |4675| 
$C$L119:    
	.dwpsn	file "../Source/prod.c",line 4675,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4675| 
$C$L120:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4678,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4678| 
        ADD       ACC,AR5               ; [CPU_] |4678| 
        MOVL      XAR4,ACC              ; [CPU_] |4678| 
        MOVB      XAR0,#16              ; [CPU_] |4678| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4678| 
	.dwpsn	file "../Source/prod.c",line 4680,column 5,is_stmt,isa 0
        MOVL      XAR0,#56              ; [CPU_] |4680| 
        MOV       AL,*XAR7              ; [CPU_] |4680| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4680| 
        ADDB      XAR7,#1               ; [CPU_] |4680| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4680| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4680| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4684,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4684| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4684| 
	.dwpsn	file "../Source/prod.c",line 4685,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4685| 
	.dwpsn	file "../Source/prod.c",line 4684,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4684| 
        MOV       *XAR5++,AL            ; [CPU_] |4684| 
	.dwpsn	file "../Source/prod.c",line 4685,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4685| 
        MOVL      P,XAR7                ; [CPU_] |4685| 
	.dwpsn	file "../Source/prod.c",line 4683,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L122:    
	.dwpsn	file "../Source/prod.c",line 4691,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4691| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4691,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4691| 
        MOV       *XAR0++,AL            ; [CPU_] |4691| 
	.dwpsn	file "../Source/prod.c",line 4692,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4692| 
        MOVL      P,XAR5                ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4690,column 17,is_stmt,isa 0
        BANZ      $C$L122,AR6--         ; [CPU_] |4690| 
        ; branchcc occurs ; [] |4690| 
	.dwpsn	file "../Source/prod.c",line 4695,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4695| 
        MOVB      XAR0,#40              ; [CPU_] |4695| 
	.dwpsn	file "../Source/prod.c",line 4697,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4697| 
	.dwpsn	file "../Source/prod.c",line 4695,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4695| 
        MOVB      XAR0,#142             ; [CPU_] |4695| 
	.dwpsn	file "../Source/prod.c",line 4697,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4697| 
	.dwpsn	file "../Source/prod.c",line 4695,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4695| 
	.dwpsn	file "../Source/prod.c",line 4697,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4697| 
        MOV       AL,*XAR7              ; [CPU_] |4697| 
        ADDB      XAR7,#1               ; [CPU_] |4697| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4697| 
	.dwpsn	file "../Source/prod.c",line 4698,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4698| 
	.dwpsn	file "../Source/prod.c",line 4697,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4697| 
	.dwpsn	file "../Source/prod.c",line 4698,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4698| 
        CMPB      AL,#6                 ; [CPU_] |4698| 
        B         $C$L123,GT            ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
        CMPB      AL,#6                 ; [CPU_] |4698| 
        B         $C$L126,EQ            ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
        CMPB      AL,#1                 ; [CPU_] |4698| 
        B         $C$L129,LOS           ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
        MOV       AH,AL                 ; [CPU_] |4698| 
        ADDB      AH,#-2                ; [CPU_] |4698| 
        CMPB      AH,#2                 ; [CPU_] |4698| 
        B         $C$L128,LOS           ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
        CMPB      AL,#5                 ; [CPU_] |4698| 
        B         $C$L127,EQ            ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
        B         $C$L124,UNC           ; [CPU_] |4698| 
        ; branch occurs ; [] |4698| 
$C$L123:    
        MOV       AH,AL                 ; [CPU_] |4698| 
        ADDB      AH,#-7                ; [CPU_] |4698| 
        CMPB      AH,#1                 ; [CPU_] |4698| 
        B         $C$L125,LOS           ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
        CMPB      AL,#15                ; [CPU_] |4698| 
        B         $C$L125,EQ            ; [CPU_] |4698| 
        ; branchcc occurs ; [] |4698| 
$C$L124:    
	.dwpsn	file "../Source/prod.c",line 4720,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4720| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4720| 
	.dwpsn	file "../Source/prod.c",line 4721,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4721| 
        ; branch occurs ; [] |4721| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4717,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4717| 
	.dwpsn	file "../Source/prod.c",line 4718,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4718| 
        ; branch occurs ; [] |4718| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4712,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4713| 
        ; branch occurs ; [] |4713| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4709,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4709| 
	.dwpsn	file "../Source/prod.c",line 4710,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4710| 
        ; branch occurs ; [] |4710| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4706,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4706| 
	.dwpsn	file "../Source/prod.c",line 4707,column 6,is_stmt,isa 0
        B         $C$L130,UNC           ; [CPU_] |4707| 
        ; branch occurs ; [] |4707| 
$C$L129:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4701,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4701| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4723,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4723| 
        MOVB      XAR0,#43              ; [CPU_] |4723| 
        ADDB      XAR7,#42              ; [CPU_] |4723| 
        MOV       AL,*XAR7              ; [CPU_] |4723| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4723| 
	.dwpsn	file "../Source/prod.c",line 4724,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4724| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4724| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4726,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4726| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4726| 
        CMPB      AL,#1                 ; [CPU_] |4726| 
        B         $C$L137,EQ            ; [CPU_] |4726| 
        ; branchcc occurs ; [] |4726| 
        CMPB      AL,#2                 ; [CPU_] |4726| 
        B         $C$L131,EQ            ; [CPU_] |4726| 
        ; branchcc occurs ; [] |4726| 
        CMPB      AL,#3                 ; [CPU_] |4726| 
        B         $C$L135,EQ            ; [CPU_] |4726| 
        ; branchcc occurs ; [] |4726| 
        B         $C$L134,UNC           ; [CPU_] |4726| 
        ; branch occurs ; [] |4726| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4743| 
        MOVB      XAR0,#46              ; [CPU_] |4743| 
        MOV       AL,*XAR7              ; [CPU_] |4743| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4743| 
	.dwpsn	file "../Source/prod.c",line 4744,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4744| 
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4743| 
	.dwpsn	file "../Source/prod.c",line 4744,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4744| 
        CMPB      AL,#12                ; [CPU_] |4744| 
        B         $C$L134,GT            ; [CPU_] |4744| 
        ; branchcc occurs ; [] |4744| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4743| 
	.dwpsn	file "../Source/prod.c",line 4749,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4749| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4743| 
        MOVL      P,XAR6                ; [CPU_] |4743| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4757| 
        B         $C$L140,LEQ           ; [CPU_] |4757| 
        ; branchcc occurs ; [] |4757| 
	.dwpsn	file "../Source/prod.c",line 4750,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4750| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4750| 
        ADDB      ACC,#48               ; [CPU_] |4750| 
        MOVL      XAR0,ACC              ; [CPU_] |4750| 
$C$L133:    
	.dwpsn	file "../Source/prod.c",line 4752,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4752| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4752| 
	.dwpsn	file "../Source/prod.c",line 4753,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4752,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4752| 
        MOV       *XAR0++,AL            ; [CPU_] |4752| 
	.dwpsn	file "../Source/prod.c",line 4753,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4753| 
        MOVL      P,XAR5                ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4751,column 19,is_stmt,isa 0
        BANZ      $C$L133,AR6--         ; [CPU_] |4751| 
        ; branchcc occurs ; [] |4751| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4749,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4749| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L132,UNC           ; [CPU_] |4749| 
        ; branch occurs ; [] |4749| 
$C$L134:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4775,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4775| 
	.dwpsn	file "../Source/prod.c",line 4776,column 6,is_stmt,isa 0
        B         $C$L140,UNC           ; [CPU_] |4776| 
        ; branch occurs ; [] |4776| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4761,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4761| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#16              ; [CPU_U] |4761| 
        MOVZ      AR0,AR5               ; [CPU_] |4761| 
$C$L136:    
	.dwpsn	file "../Source/prod.c",line 4763,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4763| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4763| 
	.dwpsn	file "../Source/prod.c",line 4764,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4764| 
	.dwpsn	file "../Source/prod.c",line 4763,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4763| 
        MOV       *XAR0++,AL            ; [CPU_] |4763| 
	.dwpsn	file "../Source/prod.c",line 4764,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4764| 
        MOVL      P,XAR5                ; [CPU_] |4764| 
	.dwpsn	file "../Source/prod.c",line 4762,column 18,is_stmt,isa 0
        BANZ      $C$L136,AR6--         ; [CPU_] |4762| 
        ; branchcc occurs ; [] |4762| 
	.dwpsn	file "../Source/prod.c",line 4767,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4767| 
        MOV       AH,#0                 ; [CPU_] |4767| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4767| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |4767| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4767| 
        ; call occurs [#FS$$CMP] ; [] |4767| 
        CMPB      AL,#0                 ; [CPU_] |4767| 
        B         $C$L139,NEQ           ; [CPU_] |4767| 
        ; branchcc occurs ; [] |4767| 
	.dwpsn	file "../Source/prod.c",line 4768,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4768| 
        MOV       AH,#16314             ; [CPU_] |4768| 
        MOVL      *-SP[16],ACC          ; [CPU_] |4768| 
        B         $C$L139,UNC           ; [CPU_] |4768| 
        ; branch occurs ; [] |4768| 
$C$L137:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L138:    
	.dwpsn	file "../Source/prod.c",line 4731,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4731| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4731| 
	.dwpsn	file "../Source/prod.c",line 4732,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4731,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4731| 
        MOV       *XAR0++,AL            ; [CPU_] |4731| 
	.dwpsn	file "../Source/prod.c",line 4732,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4732| 
        MOVL      P,XAR5                ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4730,column 18,is_stmt,isa 0
        BANZ      $C$L138,AR6--         ; [CPU_] |4730| 
        ; branchcc occurs ; [] |4730| 
	.dwpsn	file "../Source/prod.c",line 4735,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4735| 
        MOVL      XAR0,#88              ; [CPU_] |4735| 
        MOVL      ACC,XAR1              ; [CPU_] |4735| 
        ADDB      ACC,#96               ; [CPU_] |4735| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4735| 
        MOVL      XAR0,#52              ; [CPU_] |4735| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4735| 
        MOV       AL,#0                 ; [CPU_] |4735| 
        MOV       AH,#0                 ; [CPU_] |4735| 
        MOVB      XAR0,#96              ; [CPU_] |4735| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4735| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4735| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4735| 
        ; call occurs [#FS$$CMP] ; [] |4735| 
        CMPB      AL,#0                 ; [CPU_] |4735| 
        B         $C$L139,NEQ           ; [CPU_] |4735| 
        ; branchcc occurs ; [] |4735| 
	.dwpsn	file "../Source/prod.c",line 4736,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4736| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4736| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4736| 
$C$L139:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4738,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4738| 
$C$L140:    
	.dwpsn	file "../Source/prod.c",line 4779,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4779| 
        MOVB      XAR0,#36              ; [CPU_] |4779| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4779| 
        B         $C$L321,EQ            ; [CPU_] |4779| 
        ; branchcc occurs ; [] |4779| 
	.dwpsn	file "../Source/prod.c",line 4783,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4783| 
        MOV       AL,#0                 ; [CPU_] |4783| 
        MOV       AH,#0                 ; [CPU_] |4783| 
	.dwpsn	file "../Source/prod.c",line 4784,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4784| 
	.dwpsn	file "../Source/prod.c",line 4783,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4783| 
	.dwpsn	file "../Source/prod.c",line 4784,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4784| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4784| 
	.dwpsn	file "../Source/prod.c",line 4785,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4785| 
        MOV       AL,#0                 ; [CPU_] |4785| 
        MOV       AH,#0                 ; [CPU_] |4785| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4785| 
	.dwpsn	file "../Source/prod.c",line 4786,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4786| 
        MOV       AL,*-SP[58]           ; [CPU_] |4786| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4786| 
        MOVZ      AR6,*-SP[59]          ; [CPU_] |4786| 
	.dwpsn	file "../Source/prod.c",line 4788,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4788| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L142,UNC           ; [CPU_] |4788| 
        ; branch occurs ; [] |4788| 
$C$L141:    
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOV       PL,*-SP[61]           ; [CPU_] |4789| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |4789| 
        ADD       ACC,PL                ; [CPU_] |4789| 
        MOVL      XAR7,ACC              ; [CPU_] |4789| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4789| 
        ADD       ACC,PL                ; [CPU_] |4789| 
        MOVL      XAR4,ACC              ; [CPU_] |4789| 
	.dwpsn	file "../Source/prod.c",line 4788,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4788| 
	.dwpsn	file "../Source/prod.c",line 4789,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4789| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4789| 
        MOV       AL,PL                 ; [CPU_] |4789| 
        ADDB      AL,#1                 ; [CPU_] |4789| 
        MOV       *-SP[61],AL           ; [CPU_] |4789| 
$C$L142:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4788,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4788| 
        B         $C$L141,HI            ; [CPU_] |4788| 
        ; branchcc occurs ; [] |4788| 
        B         $C$L743,UNC           ; [CPU_] |4788| 
        ; branch occurs ; [] |4788| 
$C$L143:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4596,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4596| 
        B         $C$L321,LO            ; [CPU_] |4596| 
        ; branchcc occurs ; [] |4596| 
        MOVL      ACC,XAR4              ; [CPU_] |4596| 
        MOVL      XAR0,#66              ; [CPU_] |4596| 
        ADDB      ACC,#2                ; [CPU_] |4596| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4596| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4596| 
        B         $C$L321,LT            ; [CPU_] |4596| 
        ; branchcc occurs ; [] |4596| 
        MOVL      XAR5,XAR4             ; [CPU_] |4596| 
        MOVL      XAR0,#66              ; [CPU_] |4596| 
        CMPB      AL,#4                 ; [CPU_] |4596| 
        ADDB      XAR5,#2               ; [CPU_] |4596| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4596| 
        B         $C$L321,GEQ           ; [CPU_] |4596| 
        ; branchcc occurs ; [] |4596| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4596| 
        B         $C$L321,LT            ; [CPU_] |4596| 
        ; branchcc occurs ; [] |4596| 
        CMPB      AH,#2                 ; [CPU_] |4596| 
        B         $C$L321,GT            ; [CPU_] |4596| 
        ; branchcc occurs ; [] |4596| 
        MOV       AH,*-SP[56]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        B         $C$L144,EQ            ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
	.dwpsn	file "../Source/prod.c",line 4605,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4605| 
        MOVZ      AR6,*-SP[58]          ; [CPU_] |4605| 
        MOVL      XAR0,#66              ; [CPU_] |4605| 
        MOVU      ACC,AL                ; [CPU_] |4605| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4605| 
        CMPL      ACC,XAR6              ; [CPU_] |4605| 
        B         $C$L145,EQ            ; [CPU_] |4605| 
        ; branchcc occurs ; [] |4605| 
        B         $C$L321,UNC           ; [CPU_] |4605| 
        ; branch occurs ; [] |4605| 
$C$L144:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4603,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4603| 
        MOVL      XAR0,#66              ; [CPU_] |4603| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4603| 
        MOV       *-SP[58],AL           ; [CPU_] |4603| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4603| 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4611| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4610,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4610| 
        MOV       *-SP[47],AL           ; [CPU_] |4610| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4610| 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4611| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4614,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4614| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4611,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |4611| 
	.dwpsn	file "../Source/prod.c",line 4614,column 5,is_stmt,isa 0
        SUBB      XAR4,#24              ; [CPU_U] |4614| 
        MOVZ      AR4,AR4               ; [CPU_] |4614| 
	.dwpsn	file "../Source/prod.c",line 4612,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4612| 
	.dwpsn	file "../Source/prod.c",line 4614,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4614| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4614| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4616,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4616| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4616| 
	.dwpsn	file "../Source/prod.c",line 4617,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4617| 
        MOV       *XAR7++,AL            ; [CPU_] |4617| 
	.dwpsn	file "../Source/prod.c",line 4618,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4618| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4618| 
        MOV       *XAR4++,AL            ; [CPU_] |4618| 
	.dwpsn	file "../Source/prod.c",line 4619,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4619| 
        MOV       *XAR7++,AL            ; [CPU_] |4619| 
	.dwpsn	file "../Source/prod.c",line 4615,column 17,is_stmt,isa 0
        BANZ      $C$L146,AR6--         ; [CPU_] |4615| 
        ; branchcc occurs ; [] |4615| 
	.dwpsn	file "../Source/prod.c",line 4622,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4622| 
        SUBB      XAR4,#24              ; [CPU_U] |4622| 
        MOVZ      AR4,AR4               ; [CPU_] |4622| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4622| 
        ADDL      XAR4,ACC              ; [CPU_] |4622| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4622| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4622| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4622| 
        MOVL      ACC,XAR1              ; [CPU_] |4622| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4622| 
        ; call occurs [#FS$$CMP] ; [] |4622| 
        CMPB      AL,#0                 ; [CPU_] |4622| 
        B         $C$L321,LT            ; [CPU_] |4622| 
        ; branchcc occurs ; [] |4622| 
        MOV       AL,#0                 ; [CPU_] |4622| 
        MOV       AH,#16672             ; [CPU_] |4622| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4622| 
        MOVL      ACC,XAR1              ; [CPU_] |4622| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4622| 
        ; call occurs [#FS$$CMP] ; [] |4622| 
        CMPB      AL,#0                 ; [CPU_] |4622| 
        B         $C$L321,GT            ; [CPU_] |4622| 
        ; branchcc occurs ; [] |4622| 
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4627| 
        MOV       AH,#16672             ; [CPU_] |4627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4627| 
        MOVL      ACC,XAR1              ; [CPU_] |4627| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4627| 
        ; call occurs [#FS$$ADD] ; [] |4627| 
        MOVL      XAR6,ACC              ; [CPU_] |4627| 
        MOV       AL,#65024             ; [CPU_] |4627| 
        MOV       AH,#18175             ; [CPU_] |4627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4627| 
        MOVL      ACC,XAR6              ; [CPU_] |4627| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$657, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4627| 
        ; call occurs [#FS$$MPY] ; [] |4627| 
        MOVL      XAR6,ACC              ; [CPU_] |4627| 
        MOV       AL,#0                 ; [CPU_] |4627| 
        MOV       AH,#16672             ; [CPU_] |4627| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4627| 
        MOVL      ACC,XAR6              ; [CPU_] |4627| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4627| 
        ; call occurs [#FS$$DIV] ; [] |4627| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4627| 
        ; call occurs [#FS$$TOLL] ; [] |4627| 
	.dwpsn	file "../Source/prod.c",line 4628,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4628| 
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4618,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4618| 
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4628,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |4628| 
        CMP64     ACC:P                 ; [CPU_] |4628| 
        B         $C$L148,LEQ           ; [CPU_] |4628| 
        ; branchcc occurs ; [] |4628| 
	.dwpsn	file "../Source/prod.c",line 4630,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4630| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4630| 
        MOV       *-SP[2],#0            ; [CPU_] |4630| 
        MOV       *-SP[1],#0            ; [CPU_] |4630| 
        MOVL      P,*-SP[32]            ; [CPU_] |4630| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |4630| 
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$660, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4630| 
        ; call occurs [#LL$$CMP] ; [] |4630| 
        CMPB      AL,#0                 ; [CPU_] |4630| 
        B         $C$L147,GEQ           ; [CPU_] |4630| 
        ; branchcc occurs ; [] |4630| 
	.dwpsn	file "../Source/prod.c",line 4633,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4633| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4633| 
        MOVU      ACC,AR4               ; [CPU_] |4633| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4633| 
        MOVL      XAR1,ACC              ; [CPU_] |4633| 
        MOV       AL,*-SP[32]           ; [CPU_] |4633| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4633| 
        B         $C$L149,UNC           ; [CPU_] |4633| 
        ; branch occurs ; [] |4633| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4631,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4631| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4631| 
        MOVU      ACC,AR4               ; [CPU_] |4631| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4631| 
        MOVL      XAR1,ACC              ; [CPU_] |4631| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4631| 
	.dwpsn	file "../Source/prod.c",line 4632,column 5,is_stmt,isa 0
        B         $C$L149,UNC           ; [CPU_] |4632| 
        ; branch occurs ; [] |4632| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4629,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4629| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] |4629| 
        MOVU      ACC,AR4               ; [CPU_] |4629| 
        ADD       ACC,*-SP[59]          ; [CPU_] |4629| 
        MOVL      XAR1,ACC              ; [CPU_] |4629| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4629| 
$C$L149:    
	.dwpsn	file "../Source/prod.c",line 4636,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4636| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4636| 
        ; call occurs [#_dac_setmode] ; [] |4636| 
	.dwpsn	file "../Source/prod.c",line 4638,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4638| 
        MOV       AH,*-SP[47]           ; [CPU_] |4638| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4638| 
        ; call occurs [#_mcbsp_xmit] ; [] |4638| 
	.dwpsn	file "../Source/prod.c",line 4639,column 5,is_stmt,isa 0
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("_latch_dac")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4639| 
        ; call occurs [#_latch_dac] ; [] |4639| 
	.dwpsn	file "../Source/prod.c",line 4641,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4641| 
        MOV       T,*-SP[59]            ; [CPU_] |4641| 
        LSL       AL,T                  ; [CPU_] |4641| 
        OR        *-SP[56],AL           ; [CPU_] |4641| 
	.dwpsn	file "../Source/prod.c",line 4644,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4644| 
        ; branch occurs ; [] |4644| 
$C$L150:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4550,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4550| 
        B         $C$L321,LO            ; [CPU_] |4550| 
        ; branchcc occurs ; [] |4550| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4550| 
        MOVL      XAR0,#66              ; [CPU_] |4550| 
        MOVL      ACC,XAR5              ; [CPU_] |4550| 
        ADDB      ACC,#2                ; [CPU_] |4550| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4550| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4550| 
        MOVZ      AR7,AR6               ; [CPU_] |4550| 
        MOV       AL,*-SP[58]           ; [CPU_] |4550| 
        MOVU      ACC,AL                ; [CPU_] |4550| 
        CMPL      ACC,XAR7              ; [CPU_] |4550| 
        B         $C$L321,NEQ           ; [CPU_] |4550| 
        ; branchcc occurs ; [] |4550| 
        MOV       AL,*-SP[56]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4550| 
        CMPB      AL,#7                 ; [CPU_] |4550| 
        B         $C$L321,NEQ           ; [CPU_] |4550| 
        ; branchcc occurs ; [] |4550| 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4556| 
        MOVL      ACC,XAR5              ; [CPU_] |4556| 
        MOVL      XAR0,#66              ; [CPU_] |4556| 
	.dwpsn	file "../Source/prod.c",line 4555,column 5,is_stmt,isa 0
        MOV       *-SP[58],AR6          ; [CPU_] |4555| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4556,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4556| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4556| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4556| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[61],#3           ; [CPU_] |4556| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4559,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4559| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L152:    
	.dwpsn	file "../Source/prod.c",line 4561,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4561| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4561| 
	.dwpsn	file "../Source/prod.c",line 4562,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4562| 
        MOV       *XAR7++,AL            ; [CPU_] |4562| 
	.dwpsn	file "../Source/prod.c",line 4563,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4563| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4563| 
        MOV       *XAR0++,AL            ; [CPU_] |4563| 
	.dwpsn	file "../Source/prod.c",line 4564,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4564| 
        MOV       *XAR7++,AL            ; [CPU_] |4564| 
	.dwpsn	file "../Source/prod.c",line 4560,column 18,is_stmt,isa 0
        BANZ      $C$L152,AR6--         ; [CPU_] |4560| 
        ; branchcc occurs ; [] |4560| 
	.dwpsn	file "../Source/prod.c",line 4558,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4558| 
	.dwpsn	file "../Source/prod.c",line 4564,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4564| 
	.dwpsn	file "../Source/prod.c",line 4558,column 17,is_stmt,isa 0
        BANZ      $C$L151,AR4--         ; [CPU_] |4558| 
        ; branchcc occurs ; [] |4558| 
	.dwpsn	file "../Source/prod.c",line 4571,column 5,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |4571| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4571| 
        ; call occurs [#U$$TOFS] ; [] |4571| 
        MOVL      XAR3,ACC              ; [CPU_] |4571| 
        MOV       AL,*-SP[35]           ; [CPU_] |4571| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4571| 
        ; call occurs [#U$$TOFS] ; [] |4571| 
        MOVL      XAR0,#86              ; [CPU_] |4571| 
        MOV       T,*-SP[58]            ; [CPU_] |4571| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4571| 
        MOVL      XAR0,#40              ; [CPU_] |4571| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4571| 
        MOVB      AL,#12                ; [CPU_] |4571| 
        MPYU      ACC,T,AL              ; [CPU_] |4571| 
        MOVL      XAR0,#88              ; [CPU_] |4571| 
        ADDL      ACC,XAR6              ; [CPU_] |4571| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4571| 
        MOVL      XAR0,#86              ; [CPU_] |4571| 
        MOVL      *-SP[2],XAR3          ; [CPU_] |4571| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4571| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4571| 
        ; call occurs [#FS$$SUB] ; [] |4571| 
        MOVL      XAR0,#42              ; [CPU_] |4571| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4571| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4571| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4571| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4571| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4571| 
        ; call occurs [#FS$$SUB] ; [] |4571| 
        MOVL      XAR0,#42              ; [CPU_] |4571| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4571| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4571| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4571| 
        ; call occurs [#FS$$DIV] ; [] |4571| 
        MOVL      XAR0,#88              ; [CPU_] |4571| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4571| 
        MOVL      XAR1,#3138            ; [CPU_] |4571| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4571| 
	.dwpsn	file "../Source/prod.c",line 4574,column 5,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |4574| 
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4574| 
        ; call occurs [#U$$TOFS] ; [] |4574| 
        MOVL      *-SP[2],XAR3          ; [CPU_] |4574| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4574| 
        ; call occurs [#FS$$SUB] ; [] |4574| 
        MOVL      XAR1,ACC              ; [CPU_] |4574| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4574| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4574| 
        MOVL      ACC,*-SP[20]          ; [CPU_] |4574| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4574| 
        ; call occurs [#FS$$SUB] ; [] |4574| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4574| 
        MOVL      ACC,XAR1              ; [CPU_] |4574| 
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4574| 
        ; call occurs [#FS$$DIV] ; [] |4574| 
        MOVL      XAR0,#88              ; [CPU_] |4574| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4574| 
        MOVL      XAR1,#3136            ; [CPU_] |4574| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4574| 
	.dwpsn	file "../Source/prod.c",line 4577,column 5,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |4577| 
        MOVL      XAR0,#3138            ; [CPU_] |4577| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4577| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4577| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4577| 
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4577| 
        ; call occurs [#FS$$MPY] ; [] |4577| 
        MOVL      XAR0,#86              ; [CPU_] |4577| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4577| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4577| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4577| 
        ; call occurs [#FS$$SUB] ; [] |4577| 
        MOVL      XAR0,#3140            ; [CPU_] |4577| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4577| 
	.dwpsn	file "../Source/prod.c",line 4580,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4580| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4580| 
        ; call occurs [#_dac_setmode] ; [] |4580| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4586,column 5,is_stmt,isa 0
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4586| 
        ; call occurs [#_ad7738_setcal] ; [] |4586| 
        MOVL      XAR0,#78              ; [CPU_] |4586| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4586| 
	.dwpsn	file "../Source/prod.c",line 4587,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4587| 
        MOVL      XAR1,ACC              ; [CPU_] |4587| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4587| 
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4587| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4587| 
	.dwpsn	file "../Source/prod.c",line 4588,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4588| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4588| 
        ; call occurs [#_ad7738_resetvall] ; [] |4588| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4581,column 5,is_stmt,isa 0
        MOV       *-SP[56],#0           ; [CPU_] |4581| 
	.dwpsn	file "../Source/prod.c",line 4592,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |4592| 
        ; branch occurs ; [] |4592| 
$C$L153:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4494,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4494| 
        B         $C$L321,LO            ; [CPU_] |4494| 
        ; branchcc occurs ; [] |4494| 
        MOVL      XAR0,#88              ; [CPU_] |4494| 
        MOVL      ACC,XAR4              ; [CPU_] |4494| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4494| 
        MOVL      XAR0,#66              ; [CPU_] |4494| 
        ADDB      ACC,#2                ; [CPU_] |4494| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4494| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4494| 
        MOV       AL,*-SP[58]           ; [CPU_] |4494| 
        MOVU      ACC,AL                ; [CPU_] |4494| 
        CMPL      ACC,XAR6              ; [CPU_] |4494| 
        B         $C$L321,NEQ           ; [CPU_] |4494| 
        ; branchcc occurs ; [] |4494| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4494| 
        B         $C$L321,LT            ; [CPU_] |4494| 
        ; branchcc occurs ; [] |4494| 
        CMPB      AL,#2                 ; [CPU_] |4494| 
        B         $C$L321,GEQ           ; [CPU_] |4494| 
        ; branchcc occurs ; [] |4494| 
	.dwpsn	file "../Source/prod.c",line 4500,column 5,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4500| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4501| 
	.dwpsn	file "../Source/prod.c",line 4500,column 5,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |4500| 
        ADDB      XAR4,#4               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4500| 
	.dwpsn	file "../Source/prod.c",line 4501,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4501| 
        MOVZ      AR7,AR6               ; [CPU_] |4501| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4503,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4503| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4503| 
	.dwpsn	file "../Source/prod.c",line 4502,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4502| 
        ADDB      XAR4,#2               ; [CPU_] |4502| 
	.dwpsn	file "../Source/prod.c",line 4503,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4503| 
	.dwpsn	file "../Source/prod.c",line 4502,column 17,is_stmt,isa 0
        BANZ      $C$L154,AR6--         ; [CPU_] |4502| 
        ; branchcc occurs ; [] |4502| 
	.dwpsn	file "../Source/prod.c",line 4506,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4506| 
        SUBB      XAR4,#24              ; [CPU_U] |4506| 
        MOVZ      AR1,AR4               ; [CPU_] |4506| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4506| 
        ADDL      XAR1,ACC              ; [CPU_] |4506| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4506| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4506| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4506| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4506| 
        ; call occurs [#FS$$CMP] ; [] |4506| 
        CMPB      AL,#0                 ; [CPU_] |4506| 
        B         $C$L321,NEQ           ; [CPU_] |4506| 
        ; branchcc occurs ; [] |4506| 
	.dwpsn	file "../Source/prod.c",line 4510,column 5,is_stmt,isa 0
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4510| 
        ; call occurs [#_lcd_clear] ; [] |4510| 
	.dwpsn	file "../Source/prod.c",line 4511,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4511| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4511| 
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4511| 
        ; call occurs [#_lcd_puts] ; [] |4511| 
	.dwpsn	file "../Source/prod.c",line 4512,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4512| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4512| 
        MOVL      XAR0,#44              ; [CPU_] |4512| 
        ADD       AL,*-SP[58]           ; [CPU_] |4512| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4512| 
        MOV       *-SP[3],AL            ; [CPU_] |4512| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4512| 
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_sprintf")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4512| 
        ; call occurs [#_sprintf] ; [] |4512| 
        MOVL      XAR0,#44              ; [CPU_] |4512| 
	.dwpsn	file "../Source/prod.c",line 4513,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4513| 
	.dwpsn	file "../Source/prod.c",line 4512,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4512| 
	.dwpsn	file "../Source/prod.c",line 4513,column 5,is_stmt,isa 0
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4513| 
        ; call occurs [#_lcd_puts] ; [] |4513| 
	.dwpsn	file "../Source/prod.c",line 4514,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4514| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4514| 
        MOVL      XAR0,#44              ; [CPU_] |4514| 
        ADD       AL,*-SP[47]           ; [CPU_] |4514| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4514| 
        MOV       *-SP[3],AL            ; [CPU_] |4514| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4514| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4514| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4514| 
        MOVL      XAR4,XAR1             ; [CPU_] |4514| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_sprintf")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4514| 
        ; call occurs [#_sprintf] ; [] |4514| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4514,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4514| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4515| 
        ; call occurs [#_lcd_puts] ; [] |4515| 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4516| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4516| 
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4516| 
        ; call occurs [#_lcd_puts] ; [] |4516| 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4518| 
        SUBB      XAR4,#32              ; [CPU_U] |4518| 
        MOVZ      AR1,AR4               ; [CPU_] |4518| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4516| 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4518| 
        ADDL      XAR1,ACC              ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4519| 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4518| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4518| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4520,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4520| 
	.dwpsn	file "../Source/prod.c",line 4519,column 5,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |4519| 
	.dwpsn	file "../Source/prod.c",line 4520,column 5,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |4520| 
        MOVB      ACC,#0                ; [CPU_] |4520| 
        SUBB      ACC,#1                ; [CPU_] |4520| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4520| 
        B         $C$L157,EQ            ; [CPU_] |4520| 
        ; branchcc occurs ; [] |4520| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4521,column 13,is_stmt,isa 0
        B         $C$L156,UNC           ; [CPU_] |4521| 
        ; branch occurs ; [] |4521| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4522,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4522| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("_delay_us")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4522| 
        ; call occurs [#_delay_us] ; [] |4522| 
$C$L156:    
	.dwpsn	file "../Source/prod.c",line 4521,column 13,is_stmt,isa 0
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4521| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4521| 
        CMPB      AL,#0                 ; [CPU_] |4521| 
        B         $C$L155,EQ            ; [CPU_] |4521| 
        ; branchcc occurs ; [] |4521| 
	.dwpsn	file "../Source/prod.c",line 4524,column 6,is_stmt,isa 0
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4524| 
        ; call occurs [#_ad7738_getraw] ; [] |4524| 
	.dwpsn	file "../Source/prod.c",line 4525,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |4525| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4525| 
        ADDL      XAR4,ACC              ; [CPU_] |4525| 
        MOVL      XAR0,#22              ; [CPU_] |4525| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4525| 
        MOVL      XAR0,#22              ; [CPU_] |4525| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4525| 
        ASR64     ACC:P,16              ; [CPU_] |4525| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4525| 
        MOVL      XAR0,#22              ; [CPU_] |4525| 
        ASR64     ACC:P,16              ; [CPU_] |4525| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4525| 
        MOVL      XAR0,#22              ; [CPU_] |4525| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4525| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4525| 
        MOVL      XAR0,#22              ; [CPU_] |4525| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4525| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4525| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4525| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4525| 
	.dwpsn	file "../Source/prod.c",line 4520,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4520| 
        SUBL      *-SP[38],ACC          ; [CPU_] |4520| 
        MOVB      ACC,#0                ; [CPU_] |4520| 
        SUBB      ACC,#1                ; [CPU_] |4520| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |4520| 
        B         $C$L156,NEQ           ; [CPU_] |4520| 
        ; branchcc occurs ; [] |4520| 
$C$L157:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4527,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4527| 
        B         $C$L158,NEQ           ; [CPU_] |4527| 
        ; branchcc occurs ; [] |4527| 
	.dwpsn	file "../Source/prod.c",line 4528,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |4528| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4528| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4528| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4528| 
        ; call occurs [#FS$$SUB] ; [] |4528| 
        MOVL      XAR6,ACC              ; [CPU_] |4528| 
        MOV       AL,#16384             ; [CPU_] |4528| 
        MOV       AH,#17948             ; [CPU_] |4528| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4528| 
        MOVL      ACC,XAR6              ; [CPU_] |4528| 
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4528| 
        ; call occurs [#FS$$MPY] ; [] |4528| 
        MOVL      XAR1,ACC              ; [CPU_] |4528| 
        MOVL      P,*-SP[28]            ; [CPU_] |4528| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4528| 
        SUBUL     P,*-SP[32]            ; [CPU_] |4528| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |4528| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4528| 
        ; call occurs [#LL$$TOFS] ; [] |4528| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4528| 
        MOVL      ACC,XAR1              ; [CPU_] |4528| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4528| 
        ; call occurs [#FS$$DIV] ; [] |4528| 
        MOVL      XAR0,#40              ; [CPU_] |4528| 
        MOV       T,*-SP[58]            ; [CPU_] |4528| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4528| 
        MOVL      XAR6,ACC              ; [CPU_] |4528| 
        MOVB      AL,#10                ; [CPU_] |4528| 
        MPYU      ACC,T,AL              ; [CPU_] |4528| 
        ADDL      ACC,XAR7              ; [CPU_] |4528| 
        MOVL      XAR4,ACC              ; [CPU_] |4528| 
        MOVB      XAR0,#44              ; [CPU_] |4528| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4528| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4533,column 6,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4533| 
        ; call occurs [#_ad7738_setcal] ; [] |4533| 
        MOVL      XAR0,#78              ; [CPU_] |4533| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4533| 
	.dwpsn	file "../Source/prod.c",line 4534,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |4534| 
        MOVL      XAR1,ACC              ; [CPU_] |4534| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4534| 
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4534| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4534| 
	.dwpsn	file "../Source/prod.c",line 4535,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4535| 
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4535| 
        ; call occurs [#_ad7738_resetvall] ; [] |4535| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4531,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |4531| 
$C$L158:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4538,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4538| 
$C$L159:    
	.dwpsn	file "../Source/prod.c",line 4539,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4539| 
	.dwpsn	file "../Source/prod.c",line 4538,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4538| 
	.dwpsn	file "../Source/prod.c",line 4539,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4539| 
	.dwpsn	file "../Source/prod.c",line 4538,column 17,is_stmt,isa 0
        MOV       AL,*-SP[59]           ; [CPU_] |4538| 
	.dwpsn	file "../Source/prod.c",line 4539,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4539| 
	.dwpsn	file "../Source/prod.c",line 4538,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4538| 
        B         $C$L159,HI            ; [CPU_] |4538| 
        ; branchcc occurs ; [] |4538| 
	.dwpsn	file "../Source/prod.c",line 4541,column 5,is_stmt,isa 0
        MOV       *-SP[61],AL           ; [CPU_] |4541| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4544,column 5,is_stmt,isa 0
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4544| 
        ; call occurs [#_lcd_clear] ; [] |4544| 
	.dwpsn	file "../Source/prod.c",line 4545,column 5,is_stmt,isa 0
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_update_units")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4545| 
        ; call occurs [#_update_units] ; [] |4545| 
	.dwpsn	file "../Source/prod.c",line 4546,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4546| 
        ; branch occurs ; [] |4546| 
$C$L160:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4469,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4469| 
        B         $C$L321,LO            ; [CPU_] |4469| 
        ; branchcc occurs ; [] |4469| 
        MOVL      ACC,XAR4              ; [CPU_] |4469| 
        MOVL      XAR0,#66              ; [CPU_] |4469| 
        ADDB      ACC,#2                ; [CPU_] |4469| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4469| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4469| 
        B         $C$L321,LT            ; [CPU_] |4469| 
        ; branchcc occurs ; [] |4469| 
        MOVL      XAR5,XAR4             ; [CPU_] |4469| 
        MOVL      XAR0,#66              ; [CPU_] |4469| 
        CMPB      AL,#4                 ; [CPU_] |4469| 
        ADDB      XAR5,#2               ; [CPU_] |4469| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4469| 
        B         $C$L321,GEQ           ; [CPU_] |4469| 
        ; branchcc occurs ; [] |4469| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4469| 
        CMPB      AH,#2                 ; [CPU_] |4469| 
        B         $C$L321,NEQ           ; [CPU_] |4469| 
        ; branchcc occurs ; [] |4469| 
	.dwpsn	file "../Source/prod.c",line 4476,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4476| 
        MOVL      XAR0,#66              ; [CPU_] |4476| 
	.dwpsn	file "../Source/prod.c",line 4475,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4475| 
	.dwpsn	file "../Source/prod.c",line 4479,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4479| 
	.dwpsn	file "../Source/prod.c",line 4476,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4476| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4476| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4476| 
	.dwpsn	file "../Source/prod.c",line 4477,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4477| 
        MOV       *-SP[61],#4           ; [CPU_] |4477| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4479,column 10,is_stmt,isa 0
        B         $C$L163,UNC           ; [CPU_] |4479| 
        ; branch occurs ; [] |4479| 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4480,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4480| 
        SUBB      XAR4,#24              ; [CPU_U] |4480| 
        MOVZ      AR4,AR4               ; [CPU_] |4480| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4480| 
        MOVL      XAR0,#44              ; [CPU_] |4480| 
        ADDL      XAR4,ACC              ; [CPU_] |4480| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4480| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4482,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4482| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4482| 
	.dwpsn	file "../Source/prod.c",line 4483,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4483| 
        MOV       *XAR7++,AL            ; [CPU_] |4483| 
	.dwpsn	file "../Source/prod.c",line 4484,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4484| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4484| 
        MOV       *XAR4++,AL            ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4485,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4485| 
        MOV       *XAR7++,AL            ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4481,column 18,is_stmt,isa 0
        BANZ      $C$L162,AR6--         ; [CPU_] |4481| 
        ; branchcc occurs ; [] |4481| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4485,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4479,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4479| 
        MOV       PL,AL                 ; [CPU_] |4479| 
$C$L163:    
	.dwpsn	file "../Source/prod.c",line 4479,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4479| 
        MOV       AL,PL                 ; [CPU_] |4479| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4479| 
        B         $C$L161,LT            ; [CPU_] |4479| 
        ; branchcc occurs ; [] |4479| 
        B         $C$L743,UNC           ; [CPU_] |4479| 
        ; branch occurs ; [] |4479| 
$C$L164:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5424,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5424| 
        B         $C$L321,LO            ; [CPU_] |5424| 
        ; branchcc occurs ; [] |5424| 
	.dwpsn	file "../Source/prod.c",line 5429,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5429| 
        MOVL      XAR0,#66              ; [CPU_] |5429| 
        MOVL      ACC,XAR7              ; [CPU_] |5429| 
        ADDB      ACC,#2                ; [CPU_] |5429| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5429| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GT            ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOVB      XAR0,#13              ; [CPU_] |5429| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GT            ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOVB      XAR0,#24              ; [CPU_] |5429| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GT            ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOVB      XAR0,#35              ; [CPU_] |5429| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GT            ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GEQ           ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOVB      XAR0,#14              ; [CPU_] |5429| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GEQ           ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOVB      XAR0,#25              ; [CPU_] |5429| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GEQ           ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOVB      XAR0,#36              ; [CPU_] |5429| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5429| 
        CMPB      AL,#4                 ; [CPU_] |5429| 
        B         $C$L321,GEQ           ; [CPU_] |5429| 
        ; branchcc occurs ; [] |5429| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5437,column 6,is_stmt,isa 0
        MOVL      XAR0,#3182            ; [CPU_] |5437| 
        MOV       AL,*XAR7              ; [CPU_] |5437| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5437| 
        ADDB      XAR7,#1               ; [CPU_] |5437| 
	.dwpsn	file "../Source/prod.c",line 5438,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5438| 
	.dwpsn	file "../Source/prod.c",line 5442,column 6,is_stmt,isa 0
        MOVL      XAR1,P                ; [CPU_] |5442| 
	.dwpsn	file "../Source/prod.c",line 5439,column 6,is_stmt,isa 0
        MOVL      XAR0,#3183            ; [CPU_] |5439| 
	.dwpsn	file "../Source/prod.c",line 5438,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5438| 
	.dwpsn	file "../Source/prod.c",line 5439,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5439| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5439| 
        ADDB      XAR7,#1               ; [CPU_] |5439| 
	.dwpsn	file "../Source/prod.c",line 5440,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5440| 
	.dwpsn	file "../Source/prod.c",line 5441,column 6,is_stmt,isa 0
        MOVL      XAR0,#3184            ; [CPU_] |5441| 
	.dwpsn	file "../Source/prod.c",line 5440,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5440| 
	.dwpsn	file "../Source/prod.c",line 5441,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5441| 
        ANDB      AL,#0xfe              ; [CPU_] |5441| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5441| 
	.dwpsn	file "../Source/prod.c",line 5442,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5442| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5442| 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5446,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5446| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5446| 
	.dwpsn	file "../Source/prod.c",line 5447,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5447| 
        MOV       *XAR4++,AL            ; [CPU_] |5447| 
	.dwpsn	file "../Source/prod.c",line 5448,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5448| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5448| 
        MOV       *XAR1++,AL            ; [CPU_] |5448| 
	.dwpsn	file "../Source/prod.c",line 5449,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5449| 
        MOV       *XAR4++,AL            ; [CPU_] |5449| 
	.dwpsn	file "../Source/prod.c",line 5445,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR0--         ; [CPU_] |5445| 
        ; branchcc occurs ; [] |5445| 
	.dwpsn	file "../Source/prod.c",line 5452,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5452| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L167:    
	.dwpsn	file "../Source/prod.c",line 5454,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5454| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5454| 
	.dwpsn	file "../Source/prod.c",line 5455,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5455| 
        MOV       *XAR4++,AL            ; [CPU_] |5455| 
	.dwpsn	file "../Source/prod.c",line 5456,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5456| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5456| 
        MOV       *XAR1++,AL            ; [CPU_] |5456| 
	.dwpsn	file "../Source/prod.c",line 5457,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5457| 
        MOV       *XAR4++,AL            ; [CPU_] |5457| 
	.dwpsn	file "../Source/prod.c",line 5453,column 18,is_stmt,isa 0
        BANZ      $C$L167,AR0--         ; [CPU_] |5453| 
        ; branchcc occurs ; [] |5453| 
	.dwpsn	file "../Source/prod.c",line 5436,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5436| 
	.dwpsn	file "../Source/prod.c",line 5439,column 6,is_stmt,isa 0
        MOVZ      AR0,AR3               ; [CPU_] |5439| 
        ADD       *-SP[61],#11          ; [CPU_] |5439| 
	.dwpsn	file "../Source/prod.c",line 5436,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5436| 
        ADDB      XAR6,#8               ; [CPU_] |5436| 
        ADDB      ACC,#8                ; [CPU_] |5436| 
        SUBB      XAR0,#1               ; [CPU_U] |5436| 
        MOVZ      AR3,AR0               ; [CPU_] |5436| 
        MOVL      P,ACC                 ; [CPU_] |5436| 
        CMP       AR0,#-1               ; [CPU_] |5436| 
        B         $C$L165,NEQ           ; [CPU_] |5436| 
        ; branchcc occurs ; [] |5436| 
        B         $C$L176,UNC           ; [CPU_] |5436| 
        ; branch occurs ; [] |5436| 
$C$L168:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5361,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5361| 
        B         $C$L321,LO            ; [CPU_] |5361| 
        ; branchcc occurs ; [] |5361| 
	.dwpsn	file "../Source/prod.c",line 5366,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5366| 
        MOVL      XAR0,#66              ; [CPU_] |5366| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5366| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L169,LEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        CMPB      AL,#7                 ; [CPU_] |5366| 
        B         $C$L321,NEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5366| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L170,LEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        CMPB      AL,#7                 ; [CPU_] |5366| 
        B         $C$L321,NEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5366| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L171,LEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        CMPB      AL,#7                 ; [CPU_] |5366| 
        B         $C$L321,NEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
$C$L171:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5366| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L172,LEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        CMPB      AL,#7                 ; [CPU_] |5366| 
        B         $C$L321,NEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
$C$L172:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5366| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L321,GEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        MOVB      XAR0,#13              ; [CPU_] |5366| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L321,GEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        MOVB      XAR0,#23              ; [CPU_] |5366| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L321,GEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        MOVB      XAR0,#33              ; [CPU_] |5366| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5366| 
        CMPB      AL,#4                 ; [CPU_] |5366| 
        B         $C$L321,GEQ           ; [CPU_] |5366| 
        ; branchcc occurs ; [] |5366| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5377,column 6,is_stmt,isa 0
        MOVL      XAR0,#3134            ; [CPU_] |5377| 
        MOV       AL,*XAR7              ; [CPU_] |5377| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5377| 
	.dwpsn	file "../Source/prod.c",line 5380,column 6,is_stmt,isa 0
        MOVL      XAR1,P                ; [CPU_] |5380| 
	.dwpsn	file "../Source/prod.c",line 5377,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5377| 
	.dwpsn	file "../Source/prod.c",line 5378,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5378| 
	.dwpsn	file "../Source/prod.c",line 5379,column 6,is_stmt,isa 0
        MOVL      XAR0,#3135            ; [CPU_] |5379| 
	.dwpsn	file "../Source/prod.c",line 5378,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5378| 
	.dwpsn	file "../Source/prod.c",line 5379,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5379| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |5379| 
        ADDB      XAR7,#1               ; [CPU_] |5379| 
	.dwpsn	file "../Source/prod.c",line 5380,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5380| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5380| 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5391,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5391| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5391| 
	.dwpsn	file "../Source/prod.c",line 5392,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5392| 
        MOV       *XAR4++,AL            ; [CPU_] |5392| 
	.dwpsn	file "../Source/prod.c",line 5393,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5393| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5393| 
        MOV       *XAR1++,AL            ; [CPU_] |5393| 
	.dwpsn	file "../Source/prod.c",line 5394,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5394| 
        MOV       *XAR4++,AL            ; [CPU_] |5394| 
	.dwpsn	file "../Source/prod.c",line 5390,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR0--         ; [CPU_] |5390| 
        ; branchcc occurs ; [] |5390| 
	.dwpsn	file "../Source/prod.c",line 5400,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |5400| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L175:    
	.dwpsn	file "../Source/prod.c",line 5407,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5407| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5407| 
	.dwpsn	file "../Source/prod.c",line 5408,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5408| 
        MOV       *XAR4++,AL            ; [CPU_] |5408| 
	.dwpsn	file "../Source/prod.c",line 5409,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5409| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5409| 
        MOV       *XAR1++,AL            ; [CPU_] |5409| 
	.dwpsn	file "../Source/prod.c",line 5410,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5410| 
        MOV       *XAR4++,AL            ; [CPU_] |5410| 
	.dwpsn	file "../Source/prod.c",line 5406,column 18,is_stmt,isa 0
        BANZ      $C$L175,AR0--         ; [CPU_] |5406| 
        ; branchcc occurs ; [] |5406| 
	.dwpsn	file "../Source/prod.c",line 5376,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5376| 
	.dwpsn	file "../Source/prod.c",line 5379,column 6,is_stmt,isa 0
        MOVZ      AR0,AR3               ; [CPU_] |5379| 
        ADD       *-SP[61],#10          ; [CPU_] |5379| 
	.dwpsn	file "../Source/prod.c",line 5376,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |5376| 
        ADDB      XAR6,#12              ; [CPU_] |5376| 
        ADDB      ACC,#12               ; [CPU_] |5376| 
        SUBB      XAR0,#1               ; [CPU_U] |5376| 
        MOVZ      AR3,AR0               ; [CPU_] |5376| 
        MOVL      P,ACC                 ; [CPU_] |5376| 
        CMP       AR0,#-1               ; [CPU_] |5376| 
        B         $C$L173,NEQ           ; [CPU_] |5376| 
        ; branchcc occurs ; [] |5376| 
$C$L176:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5417,column 5,is_stmt,isa 0
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5417| 
        ; call occurs [#_ad7738_setcal] ; [] |5417| 
	.dwpsn	file "../Source/prod.c",line 5420,column 5,is_stmt,isa 0
        B         $C$L188,UNC           ; [CPU_] |5420| 
        ; branch occurs ; [] |5420| 
$C$L177:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5329,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5329| 
        B         $C$L321,LO            ; [CPU_] |5329| 
        ; branchcc occurs ; [] |5329| 
	.dwpsn	file "../Source/prod.c",line 5334,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5334| 
        MOVL      XAR0,#66              ; [CPU_] |5334| 
        MOVL      ACC,XAR7              ; [CPU_] |5334| 
        ADDB      ACC,#2                ; [CPU_] |5334| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5334| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#8               ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#11              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GT            ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#9               ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#12              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#4                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVL      ACC,XAR7              ; [CPU_] |5334| 
        MOVL      XAR0,#64              ; [CPU_] |5334| 
        ADDB      ACC,#4                ; [CPU_] |5334| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5334| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#10              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVB      XAR0,#13              ; [CPU_] |5334| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5334| 
        CMPB      AL,#6                 ; [CPU_] |5334| 
        B         $C$L321,GEQ           ; [CPU_] |5334| 
        ; branchcc occurs ; [] |5334| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L178:    
	.dwpsn	file "../Source/prod.c",line 5345,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5345| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5345,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5347,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5347| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5347| 
        ADDB      XAR7,#1               ; [CPU_] |5347| 
	.dwpsn	file "../Source/prod.c",line 5348,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5348| 
        MOV       *XAR4++,AL            ; [CPU_] |5348| 
	.dwpsn	file "../Source/prod.c",line 5349,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5349| 
        ADDB      XAR7,#1               ; [CPU_] |5349| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5349| 
	.dwpsn	file "../Source/prod.c",line 5350,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5344,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5350,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5344,column 17,is_stmt,isa 0
        BANZ      $C$L178,AR6--         ; [CPU_] |5344| 
        ; branchcc occurs ; [] |5344| 
	.dwpsn	file "../Source/prod.c",line 5354,column 5,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5354| 
        ; call occurs [#_lcd_clear] ; [] |5354| 
	.dwpsn	file "../Source/prod.c",line 5355,column 5,is_stmt,isa 0
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_update_units")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5355| 
        ; call occurs [#_update_units] ; [] |5355| 
	.dwpsn	file "../Source/prod.c",line 5350,column 6,is_stmt,isa 0
        ADD       *-SP[61],#12          ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5357,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5357| 
        ; branch occurs ; [] |5357| 
$C$L179:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5308,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5308| 
        B         $C$L321,LO            ; [CPU_] |5308| 
        ; branchcc occurs ; [] |5308| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5313,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5313| 
        MOVB      XAR0,#36              ; [CPU_] |5313| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5313| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5314,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5314| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5314| 
        B         $C$L181,NEQ           ; [CPU_] |5314| 
        ; branchcc occurs ; [] |5314| 
        MOVL      XAR0,#80              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
        MOVL      XAR5,#_tagwasthere    ; [CPU_U] 
$C$L180:    
	.dwpsn	file "../Source/prod.c",line 5316,column 7,is_stmt,isa 0
        MOV       *XAR5++,#0            ; [CPU_] |5316| 
	.dwpsn	file "../Source/prod.c",line 5317,column 7,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |5317| 
	.dwpsn	file "../Source/prod.c",line 5315,column 18,is_stmt,isa 0
        BANZ      $C$L180,AR6--         ; [CPU_] |5315| 
        ; branchcc occurs ; [] |5315| 
	.dwpsn	file "../Source/prod.c",line 5319,column 6,is_stmt,isa 0
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_update_units")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5319| 
        ; call occurs [#_update_units] ; [] |5319| 
$C$L181:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5323,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5323| 
	.dwpsn	file "../Source/prod.c",line 5325,column 5,is_stmt,isa 0
        B         $C$L235,UNC           ; [CPU_] |5325| 
        ; branch occurs ; [] |5325| 
$C$L182:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5267,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5267| 
        B         $C$L321,LO            ; [CPU_] |5267| 
        ; branchcc occurs ; [] |5267| 
	.dwpsn	file "../Source/prod.c",line 5273,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5273| 
        ADDB      XAR4,#2               ; [CPU_] |5273| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5273| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5273| 
        MOVZ      AR3,AL                ; [CPU_] |5273| 
	.dwpsn	file "../Source/prod.c",line 5274,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5274| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5274| 
        CMP       AR3,#4096             ; [CPU_] |5274| 
        B         $C$L321,HI            ; [CPU_] |5274| 
        ; branchcc occurs ; [] |5274| 
	.dwpsn	file "../Source/prod.c",line 5280,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5280| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5280| 
        MOVZ      AR7,AR6               ; [CPU_] |5280| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L183:    
	.dwpsn	file "../Source/prod.c",line 5282,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5282| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5281,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5281| 
        ADDB      XAR4,#2               ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5282,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5281,column 17,is_stmt,isa 0
        BANZ      $C$L183,AR6--         ; [CPU_] |5281| 
        ; branchcc occurs ; [] |5281| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5287,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5287| 
        MOVB      XAR1,#38              ; [CPU_] |5287| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5287| 
	.dwpsn	file "../Source/prod.c",line 5288,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5288| 
        MOVB      XAR1,#40              ; [CPU_] |5288| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5288| 
	.dwpsn	file "../Source/prod.c",line 5289,column 5,is_stmt,isa 0
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_maf_rst")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5289| 
        ; call occurs [#_maf_rst] ; [] |5289| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5294,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5294| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5294| 
	.dwpsn	file "../Source/prod.c",line 5298,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5294,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5294| 
	.dwpsn	file "../Source/prod.c",line 5295,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5295| 
        LSR       AL,8                  ; [CPU_] |5295| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5295| 
	.dwpsn	file "../Source/prod.c",line 5298,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5298| 
        MOVB      XAR1,#40              ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5299| 
        MOVL      XAR0,#50              ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5298,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5298| 
        ANDB      AL,#0xff              ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5298,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5299,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5300,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5300| 
	.dwpsn	file "../Source/prod.c",line 5299,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5299| 
        LSR       AL,8                  ; [CPU_] |5299| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5299| 
	.dwpsn	file "../Source/prod.c",line 5300,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5300| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5300| 
	.dwpsn	file "../Source/prod.c",line 5301,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5300,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5300| 
	.dwpsn	file "../Source/prod.c",line 5301,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5301| 
        MOV       *-SP[61],#8           ; [CPU_] |5301| 
	.dwpsn	file "../Source/prod.c",line 5304,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5304| 
        ; branch occurs ; [] |5304| 
$C$L184:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5234,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5234| 
        B         $C$L321,LO            ; [CPU_] |5234| 
        ; branchcc occurs ; [] |5234| 
        MOVL      ACC,XAR4              ; [CPU_] |5234| 
        MOVL      XAR0,#66              ; [CPU_] |5234| 
        ADDB      ACC,#2                ; [CPU_] |5234| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5234| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5234| 
        B         $C$L321,LT            ; [CPU_] |5234| 
        ; branchcc occurs ; [] |5234| 
        MOVL      XAR5,XAR4             ; [CPU_] |5234| 
        MOVL      XAR0,#66              ; [CPU_] |5234| 
        CMPB      AL,#4                 ; [CPU_] |5234| 
        ADDB      XAR5,#2               ; [CPU_] |5234| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5234| 
        B         $C$L321,GEQ           ; [CPU_] |5234| 
        ; branchcc occurs ; [] |5234| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5234| 
        B         $C$L321,LT            ; [CPU_] |5234| 
        ; branchcc occurs ; [] |5234| 
        CMPB      AH,#20                ; [CPU_] |5234| 
        B         $C$L321,GEQ           ; [CPU_] |5234| 
        ; branchcc occurs ; [] |5234| 
	.dwpsn	file "../Source/prod.c",line 5244,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5244| 
        MOVL      XAR0,#66              ; [CPU_] |5244| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5244| 
        MOVL      XAR0,#80              ; [CPU_] |5244| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5244| 
	.dwpsn	file "../Source/prod.c",line 5242,column 5,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |5242| 
	.dwpsn	file "../Source/prod.c",line 5244,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[58]          ; [CPU_] |5244| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5244| 
        B         $C$L319,NEQ           ; [CPU_] |5244| 
        ; branchcc occurs ; [] |5244| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5250,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5250| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5250| 
        MOVB      AL,#10                ; [CPU_] |5250| 
        MOV       T,*-SP[58]            ; [CPU_] |5250| 
        MPYU      ACC,T,AL              ; [CPU_] |5250| 
        ADDL      ACC,XAR6              ; [CPU_] |5250| 
        MOVL      XAR4,ACC              ; [CPU_] |5250| 
        MOVB      XAR0,#42              ; [CPU_] |5250| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |5250| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5251,column 5,is_stmt,isa 0
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5251| 
        ; call occurs [#_ad7738_setcal] ; [] |5251| 
        MOVL      XAR0,#78              ; [CPU_] |5251| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5253,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5253| 
        MOVL      XAR1,ACC              ; [CPU_] |5253| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5253| 
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5253| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5253| 
	.dwpsn	file "../Source/prod.c",line 5254,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5254| 
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5254| 
        ; call occurs [#_ad7738_resetvall] ; [] |5254| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5257,column 5,is_stmt,isa 0
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("_update_units")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5257| 
        ; call occurs [#_update_units] ; [] |5257| 
	.dwpsn	file "../Source/prod.c",line 5260,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5260| 
        MOV       AL,*-SP[58]           ; [CPU_] |5260| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5260| 
        MOV       AL,*-SP[57]           ; [CPU_] |5260| 
	.dwpsn	file "../Source/prod.c",line 5261,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5261| 
        MOV       *-SP[61],#4           ; [CPU_] |5261| 
	.dwpsn	file "../Source/prod.c",line 5263,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5263| 
        ; branch occurs ; [] |5263| 
$C$L185:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5198,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5198| 
        B         $C$L321,LO            ; [CPU_] |5198| 
        ; branchcc occurs ; [] |5198| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L186:    
	.dwpsn	file "../Source/prod.c",line 5204,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5204| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L187:    
	.dwpsn	file "../Source/prod.c",line 5206,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5206| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5206| 
	.dwpsn	file "../Source/prod.c",line 5207,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5207| 
        MOV       *XAR5++,AL            ; [CPU_] |5207| 
	.dwpsn	file "../Source/prod.c",line 5208,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5208| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5208| 
        MOV       *XAR1++,AL            ; [CPU_] |5208| 
	.dwpsn	file "../Source/prod.c",line 5209,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5209| 
        MOV       *XAR5++,AL            ; [CPU_] |5209| 
	.dwpsn	file "../Source/prod.c",line 5205,column 18,is_stmt,isa 0
        BANZ      $C$L187,AR6--         ; [CPU_] |5205| 
        ; branchcc occurs ; [] |5205| 
	.dwpsn	file "../Source/prod.c",line 5203,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5209,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |5209| 
	.dwpsn	file "../Source/prod.c",line 5203,column 17,is_stmt,isa 0
        BANZ      $C$L186,AR4--         ; [CPU_] |5203| 
        ; branchcc occurs ; [] |5203| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5214| 
        MOVL      XAR0,#3214            ; [CPU_] |5214| 
        MOV       AL,*XAR7              ; [CPU_] |5214| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5214| 
	.dwpsn	file "../Source/prod.c",line 5215,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5215| 
        ANDB      AL,#0xff              ; [CPU_] |5215| 
        MOV       *XAR5++,AL            ; [CPU_] |5215| 
	.dwpsn	file "../Source/prod.c",line 5216,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5216| 
        ADD       ACC,#1607 << 1        ; [CPU_] |5216| 
        MOVL      XAR6,ACC              ; [CPU_] |5216| 
	.dwpsn	file "../Source/prod.c",line 5214,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5214| 
	.dwpsn	file "../Source/prod.c",line 5216,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5216| 
        ADD       *+XAR6[0],AL          ; [CPU_] |5216| 
	.dwpsn	file "../Source/prod.c",line 5217,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5217| 
        LSR       AL,8                  ; [CPU_] |5217| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5217| 
	.dwpsn	file "../Source/prod.c",line 5216,column 5,is_stmt,isa 0
        ADD       *-SP[61],#2           ; [CPU_] |5216| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5222,column 5,is_stmt,isa 0
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5222| 
        ; call occurs [#_ad7738_setcal] ; [] |5222| 
	.dwpsn	file "../Source/prod.c",line 5223,column 5,is_stmt,isa 0
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_velf_rst")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5223| 
        ; call occurs [#_velf_rst] ; [] |5223| 
$C$L188:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5227| 
        ; branch occurs ; [] |5227| 
$C$L189:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5159,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5159| 
        B         $C$L321,LO            ; [CPU_] |5159| 
        ; branchcc occurs ; [] |5159| 
        MOVL      ACC,XAR4              ; [CPU_] |5159| 
        MOVL      XAR0,#66              ; [CPU_] |5159| 
        ADDB      ACC,#2                ; [CPU_] |5159| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5159| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5159| 
        B         $C$L321,LT            ; [CPU_] |5159| 
        ; branchcc occurs ; [] |5159| 
        MOVL      XAR5,XAR4             ; [CPU_] |5159| 
        MOVL      XAR0,#66              ; [CPU_] |5159| 
        CMPB      AL,#20                ; [CPU_] |5159| 
        ADDB      XAR5,#2               ; [CPU_] |5159| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5159| 
        B         $C$L321,GEQ           ; [CPU_] |5159| 
        ; branchcc occurs ; [] |5159| 
	.dwpsn	file "../Source/prod.c",line 5163,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5163| 
	.dwpsn	file "../Source/prod.c",line 5164,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5164| 
	.dwpsn	file "../Source/prod.c",line 5166,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5166| 
	.dwpsn	file "../Source/prod.c",line 5164,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5164| 
	.dwpsn	file "../Source/prod.c",line 5166,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5166| 
        ADDB      ACC,#2                ; [CPU_] |5166| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5166| 
        MOVL      XAR0,#40              ; [CPU_] |5166| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5166| 
        MOV       T,*-SP[57]            ; [CPU_] |5166| 
        MOVB      AL,#152               ; [CPU_] |5166| 
        MPYU      ACC,T,AL              ; [CPU_] |5166| 
        ADDL      ACC,XAR6              ; [CPU_] |5166| 
        ADDB      ACC,#224              ; [CPU_] |5166| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5166| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5168,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5168| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5168| 
	.dwpsn	file "../Source/prod.c",line 5169,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5169| 
        MOV       *XAR5++,AL            ; [CPU_] |5169| 
	.dwpsn	file "../Source/prod.c",line 5170,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5170| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5170| 
        MOV       *XAR7++,AL            ; [CPU_] |5170| 
	.dwpsn	file "../Source/prod.c",line 5171,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5171| 
        MOV       *XAR5++,AL            ; [CPU_] |5171| 
	.dwpsn	file "../Source/prod.c",line 5167,column 17,is_stmt,isa 0
        BANZ      $C$L190,AR6--         ; [CPU_] |5167| 
        ; branchcc occurs ; [] |5167| 
	.dwpsn	file "../Source/prod.c",line 5176,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5176| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5176| 
        MOVB      AL,#152               ; [CPU_] |5176| 
        MPYU      ACC,T,AL              ; [CPU_] |5176| 
        ADDL      ACC,XAR6              ; [CPU_] |5176| 
        MOVL      XAR1,ACC              ; [CPU_] |5176| 
        MOVB      XAR0,#125             ; [CPU_] |5176| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5176| 
        CMPB      AL,#247               ; [CPU_] |5176| 
        B         $C$L193,NEQ           ; [CPU_] |5176| 
        ; branchcc occurs ; [] |5176| 
	.dwpsn	file "../Source/prod.c",line 5178,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |5178| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5178| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5178| 
        MOV       AL,#0                 ; [CPU_] |5178| 
        MOV       AH,#17096             ; [CPU_] |5178| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5178| 
        ; call occurs [#FS$$DIV] ; [] |5178| 
        MOVB      XAR0,#126             ; [CPU_] |5178| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5178| 
        MOVL      XAR0,#40              ; [CPU_] |5178| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5178| 
	.dwpsn	file "../Source/prod.c",line 5181,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5181| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5182,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5182| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5182| 
        CMPL      ACC,XAR6              ; [CPU_] |5182| 
        B         $C$L192,NEQ           ; [CPU_] |5182| 
        ; branchcc occurs ; [] |5182| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5185,column 8,is_stmt,isa 0
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5185| 
        ; call occurs [#_ad7738_setcal] ; [] |5185| 
        MOVL      XAR0,#78              ; [CPU_] |5185| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5185| 
	.dwpsn	file "../Source/prod.c",line 5186,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5186| 
        MOVL      XAR4,ACC              ; [CPU_] |5186| 
        MOVL      XAR0,#88              ; [CPU_] |5186| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5186| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5186| 
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5186| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5186| 
        MOVL      XAR0,#88              ; [CPU_] |5186| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5186| 
	.dwpsn	file "../Source/prod.c",line 5187,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5187| 
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5187| 
        ; call occurs [#_ad7738_resetvall] ; [] |5187| 
 clrc INTM
$C$L192:    
	.dwpsn	file "../Source/prod.c",line 5181,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5181| 
        ADDB      XAR1,#10              ; [CPU_] |5181| 
        MOV       AL,*-SP[58]           ; [CPU_] |5181| 
        CMPB      AL,#4                 ; [CPU_] |5181| 
        B         $C$L191,LO            ; [CPU_] |5181| 
        ; branchcc occurs ; [] |5181| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 5170,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5170| 
	.dwpsn	file "../Source/prod.c",line 5194,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |5194| 
        ; branch occurs ; [] |5194| 
$C$L194:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5058,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5058| 
        B         $C$L321,LO            ; [CPU_] |5058| 
        ; branchcc occurs ; [] |5058| 
        MOVL      ACC,XAR4              ; [CPU_] |5058| 
        MOVL      XAR0,#66              ; [CPU_] |5058| 
        ADDB      ACC,#2                ; [CPU_] |5058| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5058| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5058| 
        B         $C$L321,LT            ; [CPU_] |5058| 
        ; branchcc occurs ; [] |5058| 
        MOVL      XAR5,XAR4             ; [CPU_] |5058| 
        MOVL      XAR0,#66              ; [CPU_] |5058| 
        CMPB      AL,#20                ; [CPU_] |5058| 
        ADDB      XAR5,#2               ; [CPU_] |5058| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5058| 
        B         $C$L321,GEQ           ; [CPU_] |5058| 
        ; branchcc occurs ; [] |5058| 
	.dwpsn	file "../Source/prod.c",line 5063,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5063| 
        MOVL      XAR0,#66              ; [CPU_] |5063| 
        MOV       *-SP[57],AL           ; [CPU_] |5063| 
        ADDB      XAR5,#2               ; [CPU_] |5063| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5063| 
	.dwpsn	file "../Source/prod.c",line 5064,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |5064| 
        MOV       AL,AR6                ; [CPU_] |5064| 
        CMPB      AL,#247               ; [CPU_] |5064| 
        B         $C$L195,EQ            ; [CPU_] |5064| 
        ; branchcc occurs ; [] |5064| 
	.dwpsn	file "../Source/prod.c",line 5066,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5066| 
        MOVL      XAR0,#66              ; [CPU_] |5066| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5066| 
        MOVL      XAR0,#40              ; [CPU_] |5066| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5066| 
        MOVB      AL,#152               ; [CPU_] |5066| 
        MOV       T,*-SP[57]            ; [CPU_] |5066| 
        MPYU      ACC,T,AL              ; [CPU_] |5066| 
        ADDL      ACC,XAR7              ; [CPU_] |5066| 
        MOVL      XAR4,ACC              ; [CPU_] |5066| 
        MOVB      XAR0,#124             ; [CPU_] |5066| 
        MOV       PH,#0                 ; [CPU_] |5066| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5066| 
        ANDB      AL,#0xf0              ; [CPU_] |5066| 
        MOVU      ACC,AL                ; [CPU_] |5066| 
        MOVL      XAR7,ACC              ; [CPU_] |5066| 
        MOV       AL,AR6                ; [CPU_] |5066| 
        ANDB      AL,#240               ; [CPU_] |5066| 
        MOV       PL,AL                 ; [CPU_] |5066| 
        MOVL      ACC,XAR7              ; [CPU_] |5066| 
        CMPL      ACC,P                 ; [CPU_] |5066| 
        B         $C$L321,NEQ           ; [CPU_] |5066| 
        ; branchcc occurs ; [] |5066| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5072,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5072| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |5072| 
        MOVB      AL,#152               ; [CPU_] |5072| 
        MOV       T,*-SP[57]            ; [CPU_] |5072| 
        MPYU      ACC,T,AL              ; [CPU_] |5072| 
        ADDL      ACC,XAR7              ; [CPU_] |5072| 
        MOVL      XAR1,ACC              ; [CPU_] |5072| 
        MOVB      XAR0,#125             ; [CPU_] |5072| 
	.dwpsn	file "../Source/prod.c",line 5073,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5073| 
	.dwpsn	file "../Source/prod.c",line 5072,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |5072| 
	.dwpsn	file "../Source/prod.c",line 5073,column 5,is_stmt,isa 0
        MOV       AL,*-SP[57]           ; [CPU_] |5073| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5073| 
	.dwpsn	file "../Source/prod.c",line 5074,column 5,is_stmt,isa 0
        ADDB      XAR1,#124             ; [CPU_] |5074| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5074| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5074| 
        MOV       AL,AR6                ; [CPU_] |5074| 
        MOV       *-SP[61],#4           ; [CPU_] |5074| 
	.dwpsn	file "../Source/prod.c",line 5076,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |5076| 
        B         $C$L205,EQ            ; [CPU_] |5076| 
        ; branchcc occurs ; [] |5076| 
	.dwpsn	file "../Source/prod.c",line 5079,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5079| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |5079| 
        B         $C$L204,EQ            ; [CPU_] |5079| 
        ; branchcc occurs ; [] |5079| 
	.dwpsn	file "../Source/prod.c",line 5083,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5083| 
        CMPB      AL,#34                ; [CPU_] |5083| 
        B         $C$L196,GT            ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
        CMPB      AL,#34                ; [CPU_] |5083| 
        B         $C$L200,EQ            ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
        CMPB      AL,#16                ; [CPU_] |5083| 
        B         $C$L203,EQ            ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
        CMPB      AL,#17                ; [CPU_] |5083| 
        B         $C$L202,EQ            ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
        B         $C$L204,UNC           ; [CPU_] |5083| 
        ; branch occurs ; [] |5083| 
$C$L196:    
        CMPB      AL,#35                ; [CPU_] |5083| 
        B         $C$L198,EQ            ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
        CMPB      AL,#36                ; [CPU_] |5083| 
        B         $C$L204,NEQ           ; [CPU_] |5083| 
        ; branchcc occurs ; [] |5083| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5124,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5124| 
        B         $C$L197,EQ            ; [CPU_] |5124| 
        ; branchcc occurs ; [] |5124| 
        CMPB      AL,#35                ; [CPU_] |5124| 
        B         $C$L207,NEQ           ; [CPU_] |5124| 
        ; branchcc occurs ; [] |5124| 
	.dwpsn	file "../Source/prod.c",line 5129,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5129| 
        MOV       AH,#15820             ; [CPU_] |5129| 
	.dwpsn	file "../Source/prod.c",line 5130,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5130| 
        ; branch occurs ; [] |5130| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5126,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5126| 
        MOV       AH,#15649             ; [CPU_] |5126| 
	.dwpsn	file "../Source/prod.c",line 5127,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5127| 
        ; branch occurs ; [] |5127| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5112,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5112| 
        B         $C$L199,EQ            ; [CPU_] |5112| 
        ; branchcc occurs ; [] |5112| 
        CMPB      AL,#36                ; [CPU_] |5112| 
        B         $C$L207,NEQ           ; [CPU_] |5112| 
        ; branchcc occurs ; [] |5112| 
	.dwpsn	file "../Source/prod.c",line 5117,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5117| 
        MOV       AH,#16672             ; [CPU_] |5117| 
	.dwpsn	file "../Source/prod.c",line 5118,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5118| 
        ; branch occurs ; [] |5118| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5114,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5114| 
        MOV       AH,#16073             ; [CPU_] |5114| 
	.dwpsn	file "../Source/prod.c",line 5115,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5115| 
        ; branch occurs ; [] |5115| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5100,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5100| 
        B         $C$L201,EQ            ; [CPU_] |5100| 
        ; branchcc occurs ; [] |5100| 
        CMPB      AL,#36                ; [CPU_] |5100| 
        B         $C$L207,NEQ           ; [CPU_] |5100| 
        ; branchcc occurs ; [] |5100| 
	.dwpsn	file "../Source/prod.c",line 5105,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5105| 
        MOV       AH,#16843             ; [CPU_] |5105| 
	.dwpsn	file "../Source/prod.c",line 5106,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5106| 
        ; branch occurs ; [] |5106| 
$C$L201:    
	.dwpsn	file "../Source/prod.c",line 5102,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5102| 
        MOV       AH,#16418             ; [CPU_] |5102| 
	.dwpsn	file "../Source/prod.c",line 5103,column 8,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5103| 
        ; branch occurs ; [] |5103| 
$C$L202:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5093,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5093| 
        B         $C$L207,NEQ           ; [CPU_] |5093| 
        ; branchcc occurs ; [] |5093| 
	.dwpsn	file "../Source/prod.c",line 5094,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |5094| 
        MOV       AH,#16397             ; [CPU_] |5094| 
        B         $C$L206,UNC           ; [CPU_] |5094| 
        ; branch occurs ; [] |5094| 
$C$L203:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5086,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |5086| 
        B         $C$L207,NEQ           ; [CPU_] |5086| 
        ; branchcc occurs ; [] |5086| 
	.dwpsn	file "../Source/prod.c",line 5087,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |5087| 
        MOV       AH,#16104             ; [CPU_] |5087| 
        B         $C$L206,UNC           ; [CPU_] |5087| 
        ; branch occurs ; [] |5087| 
$C$L204:    
	.dwpsn	file "../Source/prod.c",line 5081,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |5081| 
	.dwpsn	file "../Source/prod.c",line 5082,column 5,is_stmt,isa 0
        B         $C$L206,UNC           ; [CPU_] |5082| 
        ; branch occurs ; [] |5082| 
$C$L205:    
	.dwpsn	file "../Source/prod.c",line 5077,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |5077| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5077| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5077| 
        MOV       AL,#0                 ; [CPU_] |5077| 
        MOV       AH,#17096             ; [CPU_] |5077| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5077| 
        ; call occurs [#FS$$DIV] ; [] |5077| 
$C$L206:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |5077| 
$C$L207:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5143,column 10,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |5143| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L208:    
	.dwpsn	file "../Source/prod.c",line 5144,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |5144| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5144| 
        CMPL      ACC,XAR6              ; [CPU_] |5144| 
        B         $C$L209,NEQ           ; [CPU_] |5144| 
        ; branchcc occurs ; [] |5144| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5145,column 7,is_stmt,isa 0
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_update_units")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5145| 
        ; call occurs [#_update_units] ; [] |5145| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5147,column 7,is_stmt,isa 0
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5147| 
        ; call occurs [#_ad7738_setcal] ; [] |5147| 
        MOVL      XAR0,#78              ; [CPU_] |5147| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5147| 
	.dwpsn	file "../Source/prod.c",line 5148,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |5148| 
        MOVL      XAR4,ACC              ; [CPU_] |5148| 
        MOVL      XAR0,#88              ; [CPU_] |5148| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5148| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5148| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5148| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5148| 
        MOVL      XAR0,#88              ; [CPU_] |5148| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5148| 
	.dwpsn	file "../Source/prod.c",line 5149,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5149| 
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5149| 
        ; call occurs [#_ad7738_resetvall] ; [] |5149| 
 clrc INTM
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 5143,column 18,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |5143| 
        ADDB      XAR1,#10              ; [CPU_] |5143| 
        MOV       AL,*-SP[58]           ; [CPU_] |5143| 
        CMPB      AL,#4                 ; [CPU_] |5143| 
        B         $C$L208,LO            ; [CPU_] |5143| 
        ; branchcc occurs ; [] |5143| 
        B         $C$L305,UNC           ; [CPU_] |5143| 
        ; branch occurs ; [] |5143| 
$C$L210:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5030,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5030| 
        B         $C$L321,LO            ; [CPU_] |5030| 
        ; branchcc occurs ; [] |5030| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5030| 
        MOVL      XAR0,#66              ; [CPU_] |5030| 
        MOVL      ACC,XAR7              ; [CPU_] |5030| 
        ADDB      ACC,#2                ; [CPU_] |5030| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5030| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5030| 
        B         $C$L321,LT            ; [CPU_] |5030| 
        ; branchcc occurs ; [] |5030| 
        ADDB      XAR4,#2               ; [CPU_] |5030| 
        MOVL      XAR0,#66              ; [CPU_] |5030| 
        CMPB      AL,#20                ; [CPU_] |5030| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5030| 
        B         $C$L321,GEQ           ; [CPU_] |5030| 
        ; branchcc occurs ; [] |5030| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5030| 
        MOVB      AH,#4                 ; [CPU_] |5030| 
        ADD       AH,AR6                ; [CPU_] |5030| 
        CMP       AH,*-SP[59]           ; [CPU_] |5030| 
        B         $C$L321,HI            ; [CPU_] |5030| 
        ; branchcc occurs ; [] |5030| 
	.dwpsn	file "../Source/prod.c",line 5035,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |5035| 
	.dwpsn	file "../Source/prod.c",line 5036,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5036| 
        MOVL      XAR0,#66              ; [CPU_] |5036| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |5036| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5036| 
        MOV       AL,*-SP[57]           ; [CPU_] |5036| 
        MOV       @_buff$1+2,AL         ; [CPU_] |5036| 
        MOV       AL,AR6                ; [CPU_] |5036| 
	.dwpsn	file "../Source/prod.c",line 5038,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |5038| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |5038| 
        B         $C$L211,HIS           ; [CPU_] |5038| 
        ; branchcc occurs ; [] |5038| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |5038| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 5040,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5040| 
        MOVB      XAR5,#0               ; [CPU_] |5040| 
	.dwpsn	file "../Source/prod.c",line 5040,column 17,is_stmt,isa 0
        B         $C$L213,EQ            ; [CPU_] |5040| 
        ; branchcc occurs ; [] |5040| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#98               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 5041,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5041| 
	.dwpsn	file "../Source/prod.c",line 5040,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |5040| 
	.dwpsn	file "../Source/prod.c",line 5041,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5041| 
	.dwpsn	file "../Source/prod.c",line 5040,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |5040| 
	.dwpsn	file "../Source/prod.c",line 5041,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5041| 
	.dwpsn	file "../Source/prod.c",line 5040,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |5040| 
        B         $C$L212,HI            ; [CPU_] |5040| 
        ; branchcc occurs ; [] |5040| 
$C$L213:    
	.dwpsn	file "../Source/prod.c",line 5043,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5043| 
        MOVB      AL,#152               ; [CPU_] |5043| 
        MOV       T,*-SP[57]            ; [CPU_] |5043| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5043| 
        MPYU      P,T,AL                ; [CPU_] |5043| 
        MOVL      ACC,P                 ; [CPU_] |5043| 
        ADD       ACC,AR5               ; [CPU_] |5043| 
        ADDL      ACC,XAR6              ; [CPU_] |5043| 
        MOVL      XAR4,ACC              ; [CPU_] |5043| 
        MOVB      XAR0,#98              ; [CPU_] |5043| 
	.dwpsn	file "../Source/prod.c",line 5047,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5047| 
	.dwpsn	file "../Source/prod.c",line 5043,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5043| 
	.dwpsn	file "../Source/prod.c",line 5047,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |5047| 
        MOVL      XAR4,ACC              ; [CPU_] |5047| 
        MOVL      XAR1,ACC              ; [CPU_] |5047| 
        ADDB      XAR4,#98              ; [CPU_] |5047| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("_strlen")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |5047| 
        ; call occurs [#_strlen] ; [] |5047| 
	.dwpsn	file "../Source/prod.c",line 5048,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5048| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5048| 
	.dwpsn	file "../Source/prod.c",line 5049,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5049| 
	.dwpsn	file "../Source/prod.c",line 5048,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |5048| 
	.dwpsn	file "../Source/prod.c",line 5049,column 17,is_stmt,isa 0
        B         $C$L305,EQ            ; [CPU_] |5049| 
        ; branchcc occurs ; [] |5049| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#98              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5049,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |5049| 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5050,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |5050| 
	.dwpsn	file "../Source/prod.c",line 5049,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |5049| 
	.dwpsn	file "../Source/prod.c",line 5050,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |5050| 
        INC       *-SP[61]              ; [CPU_] |5050| 
	.dwpsn	file "../Source/prod.c",line 5049,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |5049| 
        B         $C$L214,HI            ; [CPU_] |5049| 
        ; branchcc occurs ; [] |5049| 
        B         $C$L305,UNC           ; [CPU_] |5049| 
        ; branch occurs ; [] |5049| 
$C$L215:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5588,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5588| 
        B         $C$L321,LO            ; [CPU_] |5588| 
        ; branchcc occurs ; [] |5588| 
	.dwpsn	file "../Source/prod.c",line 5593,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5593| 
	.dwpsn	file "../Source/prod.c",line 5594,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5594| 
	.dwpsn	file "../Source/prod.c",line 5593,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5593| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5593| 
        MOV       *-SP[57],AL           ; [CPU_] |5593| 
	.dwpsn	file "../Source/prod.c",line 5594,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5594| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5594| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5594| 
	.dwpsn	file "../Source/prod.c",line 5596,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5596| 
        SUBB      XAR5,#24              ; [CPU_U] |5596| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5596| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L216:    
	.dwpsn	file "../Source/prod.c",line 5598,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5598| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5598| 
	.dwpsn	file "../Source/prod.c",line 5599,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5599| 
        MOV       *XAR1++,AL            ; [CPU_] |5599| 
	.dwpsn	file "../Source/prod.c",line 5600,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5600| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5600| 
        MOV       *XAR5++,AL            ; [CPU_] |5600| 
	.dwpsn	file "../Source/prod.c",line 5601,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5601| 
        MOV       *XAR1++,AL            ; [CPU_] |5601| 
	.dwpsn	file "../Source/prod.c",line 5597,column 17,is_stmt,isa 0
        BANZ      $C$L216,AR6--         ; [CPU_] |5597| 
        ; branchcc occurs ; [] |5597| 
        MOV       AL,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5605,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5605| 
        B         $C$L321,HIS           ; [CPU_] |5605| 
        ; branchcc occurs ; [] |5605| 
        MOVL      XAR0,#40              ; [CPU_] |5605| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5605| 
        MOVB      AL,#12                ; [CPU_] |5605| 
        MOV       T,*-SP[57]            ; [CPU_] |5605| 
        MPYU      ACC,T,AL              ; [CPU_] |5605| 
        ADDL      ACC,XAR6              ; [CPU_] |5605| 
        ADD       ACC,#1567 << 1        ; [CPU_] |5605| 
        MOVL      XAR4,ACC              ; [CPU_] |5605| 
        MOVL      XAR0,#88              ; [CPU_] |5605| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5605| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5605| 
        CMPB      AL,#7                 ; [CPU_] |5605| 
        B         $C$L321,NEQ           ; [CPU_] |5605| 
        ; branchcc occurs ; [] |5605| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5605| 
        MOV       *-SP[47],#0           ; [CPU_] |5605| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5605| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5605| 
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5605| 
        ; call occurs [#FS$$CMP] ; [] |5605| 
        CMPB      AL,#0                 ; [CPU_] |5605| 
        B         $C$L217,GEQ           ; [CPU_] |5605| 
        ; branchcc occurs ; [] |5605| 
        MOV       *-SP[47],#1           ; [CPU_] |5605| 
$C$L217:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L321,NEQ           ; [CPU_] |5605| 
        ; branchcc occurs ; [] |5605| 
        MOV       AL,#0                 ; [CPU_] |5605| 
        MOV       AH,#16672             ; [CPU_] |5605| 
        MOV       *-SP[47],#0           ; [CPU_] |5605| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5605| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5605| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5605| 
        ; call occurs [#FS$$CMP] ; [] |5605| 
        CMPB      AL,#0                 ; [CPU_] |5605| 
        B         $C$L218,LEQ           ; [CPU_] |5605| 
        ; branchcc occurs ; [] |5605| 
        MOV       *-SP[47],#1           ; [CPU_] |5605| 
$C$L218:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L321,NEQ           ; [CPU_] |5605| 
        ; branchcc occurs ; [] |5605| 
	.dwpsn	file "../Source/prod.c",line 5612,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5612| 
        MOV       AH,#0                 ; [CPU_] |5612| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5612| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5612| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5612| 
        ; call occurs [#FS$$CMP] ; [] |5612| 
        CMPB      AL,#0                 ; [CPU_] |5612| 
        B         $C$L219,GEQ           ; [CPU_] |5612| 
        ; branchcc occurs ; [] |5612| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |5612| 
        MOVL      XAR0,#88              ; [CPU_] |5612| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5612| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5612| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5612| 
        B         $C$L220,UNC           ; [CPU_] |5612| 
        ; branch occurs ; [] |5612| 
$C$L219:    
        MOVL      ACC,*-SP[24]          ; [CPU_] |5612| 
        MOVL      XAR0,#88              ; [CPU_] |5612| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5612| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5612| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5612| 
$C$L220:    
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$723, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5612| 
        ; call occurs [#FS$$MPY] ; [] |5612| 
        MOVL      XAR0,#88              ; [CPU_] |5612| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5612| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5612| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5612| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5612| 
        ; call occurs [#FS$$ADD] ; [] |5612| 
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5612| 
        ; call occurs [#FS$$TOLL] ; [] |5612| 
	.dwpsn	file "../Source/prod.c",line 5619,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5619| 
	.dwpsn	file "../Source/prod.c",line 5612,column 6,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |5612| 
	.dwpsn	file "../Source/prod.c",line 5600,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |5600| 
	.dwpsn	file "../Source/prod.c",line 5612,column 6,is_stmt,isa 0
        MOVL      *-SP[30],ACC          ; [CPU_] |5612| 
	.dwpsn	file "../Source/prod.c",line 5619,column 5,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |5619| 
        CMP64     ACC:P                 ; [CPU_] |5619| 
        B         $C$L222,LEQ           ; [CPU_] |5619| 
        ; branchcc occurs ; [] |5619| 
	.dwpsn	file "../Source/prod.c",line 5621,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5621| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5621| 
        MOV       *-SP[2],#0            ; [CPU_] |5621| 
        MOV       *-SP[1],#0            ; [CPU_] |5621| 
        MOVL      P,*-SP[32]            ; [CPU_] |5621| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |5621| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$726, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5621| 
        ; call occurs [#LL$$CMP] ; [] |5621| 
        CMPB      AL,#0                 ; [CPU_] |5621| 
        B         $C$L221,GEQ           ; [CPU_] |5621| 
        ; branchcc occurs ; [] |5621| 
	.dwpsn	file "../Source/prod.c",line 5624,column 6,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |5624| 
        MOV       *-SP[35],AL           ; [CPU_] |5624| 
        B         $C$L223,UNC           ; [CPU_] |5624| 
        ; branch occurs ; [] |5624| 
$C$L221:    
	.dwpsn	file "../Source/prod.c",line 5622,column 6,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |5622| 
	.dwpsn	file "../Source/prod.c",line 5623,column 5,is_stmt,isa 0
        B         $C$L223,UNC           ; [CPU_] |5623| 
        ; branch occurs ; [] |5623| 
$C$L222:    
	.dwpsn	file "../Source/prod.c",line 5620,column 6,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |5620| 
$C$L223:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5627,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5627| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5627| 
        ; call occurs [#_mcbsp_xmit] ; [] |5627| 
	.dwpsn	file "../Source/prod.c",line 5628,column 5,is_stmt,isa 0
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_latch_dac")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5628| 
        ; call occurs [#_latch_dac] ; [] |5628| 
	.dwpsn	file "../Source/prod.c",line 5631,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5631| 
        ANDB      AL,#0xff              ; [CPU_] |5631| 
        MOV       *XAR1++,AL            ; [CPU_] |5631| 
	.dwpsn	file "../Source/prod.c",line 5632,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |5632| 
        LSR       AL,8                  ; [CPU_] |5632| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5632| 
$C$L224:    
        ADD       *-SP[61],#2           ; [CPU_] |5632| 
	.dwpsn	file "../Source/prod.c",line 5635,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5635| 
        ; branch occurs ; [] |5635| 
$C$L225:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5524,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5524| 
        B         $C$L321,LO            ; [CPU_] |5524| 
        ; branchcc occurs ; [] |5524| 
	.dwpsn	file "../Source/prod.c",line 5529,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5529| 
$C$L226:    
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5529| 
$C$L227:    
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5529| 
        ; call occurs [#_ad7738_resetvall] ; [] |5529| 
$C$L228:    
	.dwpsn	file "../Source/prod.c",line 5532,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5532| 
        MOVL      XAR0,#66              ; [CPU_] |5532| 
        ADDB      ACC,#2                ; [CPU_] |5532| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5532| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5532| 
        ANDB      AL,#0x0f              ; [CPU_] |5532| 
	.dwpsn	file "../Source/prod.c",line 5534,column 5,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5534| 
        ; branch occurs ; [] |5534| 
$C$L229:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5510,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5510| 
        B         $C$L321,LO            ; [CPU_] |5510| 
        ; branchcc occurs ; [] |5510| 
	.dwpsn	file "../Source/prod.c",line 5515,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5515| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5515| 
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5515| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5515| 
	.dwpsn	file "../Source/prod.c",line 5520,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5520| 
        ; branch occurs ; [] |5520| 
$C$L230:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5574,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5574| 
        B         $C$L321,LO            ; [CPU_] |5574| 
        ; branchcc occurs ; [] |5574| 
	.dwpsn	file "../Source/prod.c",line 5579,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5579| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5579| 
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5579| 
        ; call occurs [#_shunt_switch] ; [] |5579| 
	.dwpsn	file "../Source/prod.c",line 5584,column 5,is_stmt,isa 0
        B         $C$L228,UNC           ; [CPU_] |5584| 
        ; branch occurs ; [] |5584| 
$C$L231:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5558,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5558| 
        B         $C$L321,LO            ; [CPU_] |5558| 
        ; branchcc occurs ; [] |5558| 
	.dwpsn	file "../Source/prod.c",line 5563,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5563| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5563| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5563| 
        ; call occurs [#_ad7738_resettare] ; [] |5563| 
	.dwpsn	file "../Source/prod.c",line 5564,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5564| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5564| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5564| 
	.dwpsn	file "../Source/prod.c",line 5565,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5565| 
	.dwpsn	file "../Source/prod.c",line 5570,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5570| 
        ; branch occurs ; [] |5570| 
$C$L232:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5538,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5538| 
        B         $C$L321,LO            ; [CPU_] |5538| 
        ; branchcc occurs ; [] |5538| 
	.dwpsn	file "../Source/prod.c",line 5543,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5543| 
	.dwpsn	file "../Source/prod.c",line 5544,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5544| 
$C$L233:    
        MOV       AL,*-SP[47]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5545,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5545| 
        B         $C$L234,EQ            ; [CPU_] |5545| 
        ; branchcc occurs ; [] |5545| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5546,column 7,is_stmt,isa 0
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5546| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5546| 
$C$L234:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5544,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5544| 
	.dwpsn	file "../Source/prod.c",line 5548,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5548| 
        MOV       *-SP[47],AL           ; [CPU_] |5548| 
	.dwpsn	file "../Source/prod.c",line 5544,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5544| 
        CMPB      AL,#4                 ; [CPU_] |5544| 
        B         $C$L233,LT            ; [CPU_] |5544| 
        ; branchcc occurs ; [] |5544| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5552,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5552| 
        ANDB      AL,#0x0f              ; [CPU_] |5552| 
$C$L235:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5552| 
        MOVL      XAR0,#66              ; [CPU_] |5552| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5552| 
	.dwpsn	file "../Source/prod.c",line 5554,column 5,is_stmt,isa 0
        B         $C$L238,UNC           ; [CPU_] |5554| 
        ; branch occurs ; [] |5554| 
$C$L236:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5495,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5495| 
        B         $C$L321,LO            ; [CPU_] |5495| 
        ; branchcc occurs ; [] |5495| 
	.dwpsn	file "../Source/prod.c",line 5500,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5500| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5500| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5500| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5500| 
	.dwpsn	file "../Source/prod.c",line 5506,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5506| 
        ; branch occurs ; [] |5506| 
$C$L237:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5472,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5472| 
        B         $C$L240,LO            ; [CPU_] |5472| 
        ; branchcc occurs ; [] |5472| 
	.dwpsn	file "../Source/prod.c",line 5484,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5484| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5484| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5484| 
        ; call occurs [#_ad7738_resettare] ; [] |5484| 
	.dwpsn	file "../Source/prod.c",line 5485,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5485| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5485| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5485| 
	.dwpsn	file "../Source/prod.c",line 5486,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5486| 
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5486| 
        ; call occurs [#_ad7738_resetvall] ; [] |5486| 
	.dwpsn	file "../Source/prod.c",line 5489,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5489| 
        MOVL      ACC,XAR1              ; [CPU_] |5489| 
        ADDB      ACC,#2                ; [CPU_] |5489| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5489| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5489| 
        ANDB      AL,#0xff              ; [CPU_] |5489| 
$C$L238:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5489| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5489| 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5487,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5487| 
	.dwpsn	file "../Source/prod.c",line 5491,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |5491| 
        ; branch occurs ; [] |5491| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5474,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5474| 
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5474| 
        ; call occurs [#_ad7738_resettare] ; [] |5474| 
	.dwpsn	file "../Source/prod.c",line 5475,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5475| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5475| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5475| 
	.dwpsn	file "../Source/prod.c",line 5476,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5476| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5476| 
        ; call occurs [#_ad7738_resetvall] ; [] |5476| 
	.dwpsn	file "../Source/prod.c",line 5479,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5479| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5479| 
	.dwpsn	file "../Source/prod.c",line 5481,column 6,is_stmt,isa 0
        B         $C$L239,UNC           ; [CPU_] |5481| 
        ; branch occurs ; [] |5481| 
$C$L241:    
	.dwpsn	file "../Source/prod.c",line 5647,column 5,is_stmt,isa 0
        MOV       AL,*-SP[48]           ; [CPU_] |5647| 
        MOV       *-SP[47],#0           ; [CPU_] |5647| 
	.dwpsn	file "../Source/prod.c",line 5648,column 5,is_stmt,isa 0
        B         $C$L318,EQ            ; [CPU_] |5648| 
        ; branchcc occurs ; [] |5648| 
	.dwpsn	file "../Source/prod.c",line 5650,column 6,is_stmt,isa 0
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5650| 
        ; call occurs [#_lcd_clear] ; [] |5650| 
	.dwpsn	file "../Source/prod.c",line 5651,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5651| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5651| 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5651| 
        ; call occurs [#_lcd_puts] ; [] |5651| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5654,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5654| 
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_delay_us")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5654| 
        ; call occurs [#_delay_us] ; [] |5654| 
	.dwpsn	file "../Source/prod.c",line 5653,column 18,is_stmt,isa 0
        BANZ      $C$L242,AR3--         ; [CPU_] |5653| 
        ; branchcc occurs ; [] |5653| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5658,column 6,is_stmt,isa 0
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_conf_write")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5658| 
        ; call occurs [#_conf_write] ; [] |5658| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5661,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5661| 
        B         $C$L243,NEQ           ; [CPU_] |5661| 
        ; branchcc occurs ; [] |5661| 
	.dwpsn	file "../Source/prod.c",line 5662,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5662| 
        MOVB      AL,#16                ; [CPU_] |5662| 
        SPM       #0                    ; [CPU_] 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5662| 
        ; call occurs [#_lcd_puts] ; [] |5662| 
	.dwpsn	file "../Source/prod.c",line 5663,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5663| 
	.dwpsn	file "../Source/prod.c",line 5664,column 6,is_stmt,isa 0
        B         $C$L244,UNC           ; [CPU_] |5664| 
        ; branch occurs ; [] |5664| 
$C$L243:    
	.dwpsn	file "../Source/prod.c",line 5665,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5665| 
        MOVB      AL,#16                ; [CPU_] |5665| 
        SPM       #0                    ; [CPU_] 
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5665| 
        ; call occurs [#_lcd_puts] ; [] |5665| 
	.dwpsn	file "../Source/prod.c",line 5666,column 7,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5666| 
$C$L244:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L245:    
	.dwpsn	file "../Source/prod.c",line 5670,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5670| 
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_delay_us")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5670| 
        ; call occurs [#_delay_us] ; [] |5670| 
	.dwpsn	file "../Source/prod.c",line 5669,column 18,is_stmt,isa 0
        BANZ      $C$L245,AR3--         ; [CPU_] |5669| 
        ; branchcc occurs ; [] |5669| 
        B         $C$L317,UNC           ; [CPU_] |5669| 
        ; branch occurs ; [] |5669| 
$C$L246:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4417,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4417| 
        B         $C$L321,LO            ; [CPU_] |4417| 
        ; branchcc occurs ; [] |4417| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4417| 
        MOVL      XAR0,#66              ; [CPU_] |4417| 
        MOVL      ACC,XAR7              ; [CPU_] |4417| 
        ADDB      ACC,#2                ; [CPU_] |4417| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4417| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4417| 
        B         $C$L321,LT            ; [CPU_] |4417| 
        ; branchcc occurs ; [] |4417| 
        ADDB      XAR4,#2               ; [CPU_] |4417| 
        MOVL      XAR0,#66              ; [CPU_] |4417| 
        CMPB      AL,#4                 ; [CPU_] |4417| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4417| 
        B         $C$L321,GEQ           ; [CPU_] |4417| 
        ; branchcc occurs ; [] |4417| 
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4422| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4423| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4426| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4423| 
	.dwpsn	file "../Source/prod.c",line 4426,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4426| 
        ADDB      ACC,#2                ; [CPU_] |4426| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4426| 
        MOVL      XAR0,#40              ; [CPU_] |4426| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4426| 
        MOV       T,*-SP[58]            ; [CPU_] |4426| 
        MOVB      AL,#10                ; [CPU_] |4426| 
        MPYU      ACC,T,AL              ; [CPU_] |4426| 
        ADDL      ACC,XAR6              ; [CPU_] |4426| 
        ADDB      ACC,#46               ; [CPU_] |4426| 
        MOVL      XAR4,ACC              ; [CPU_] |4426| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L247:    
	.dwpsn	file "../Source/prod.c",line 4428,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4428| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4428| 
        ADDB      XAR7,#1               ; [CPU_] |4428| 
	.dwpsn	file "../Source/prod.c",line 4429,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4429| 
        ADD       *XAR4++,AL            ; [CPU_] |4429| 
	.dwpsn	file "../Source/prod.c",line 4427,column 17,is_stmt,isa 0
        BANZ      $C$L247,AR6--         ; [CPU_] |4427| 
        ; branchcc occurs ; [] |4427| 
	.dwpsn	file "../Source/prod.c",line 4432,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4432| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4432| 
        MOVB      AL,#10                ; [CPU_] |4432| 
        MPYU      ACC,T,AL              ; [CPU_] |4432| 
        ADDL      ACC,XAR6              ; [CPU_] |4432| 
        MOVL      XAR5,ACC              ; [CPU_] |4432| 
        ADDB      ACC,#48               ; [CPU_] |4432| 
        MOVL      XAR4,ACC              ; [CPU_] |4432| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4432| 
$C$L248:    
	.dwpsn	file "../Source/prod.c",line 4434,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4434| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4434| 
        ADDB      XAR7,#1               ; [CPU_] |4434| 
	.dwpsn	file "../Source/prod.c",line 4435,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4435| 
        ADD       *XAR4++,AL            ; [CPU_] |4435| 
	.dwpsn	file "../Source/prod.c",line 4433,column 17,is_stmt,isa 0
        BANZ      $C$L248,AR6--         ; [CPU_] |4433| 
        ; branchcc occurs ; [] |4433| 
	.dwpsn	file "../Source/prod.c",line 4438,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4438| 
        ADDB      ACC,#50               ; [CPU_] |4438| 
        MOVL      XAR4,ACC              ; [CPU_] |4438| 
        MOVL      P,ACC                 ; [CPU_] |4438| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4440,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4440| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4440| 
        ADDB      XAR7,#1               ; [CPU_] |4440| 
	.dwpsn	file "../Source/prod.c",line 4441,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4441| 
        ADD       *XAR4++,AL            ; [CPU_] |4441| 
	.dwpsn	file "../Source/prod.c",line 4439,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4439| 
        ; branchcc occurs ; [] |4439| 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4445| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4445| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4445| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4447,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4447| 
        ANDB      AL,#0xff              ; [CPU_] |4447| 
        MOV       *XAR4++,AL            ; [CPU_] |4447| 
	.dwpsn	file "../Source/prod.c",line 4448,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4448| 
        LSR       AL,8                  ; [CPU_] |4448| 
        MOV       *XAR4++,AL            ; [CPU_] |4448| 
	.dwpsn	file "../Source/prod.c",line 4446,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4446| 
        ; branchcc occurs ; [] |4446| 
	.dwpsn	file "../Source/prod.c",line 4451,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4451| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4453,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4453| 
        ANDB      AL,#0xff              ; [CPU_] |4453| 
        MOV       *XAR4++,AL            ; [CPU_] |4453| 
	.dwpsn	file "../Source/prod.c",line 4454,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4454| 
        LSR       AL,8                  ; [CPU_] |4454| 
        MOV       *XAR4++,AL            ; [CPU_] |4454| 
	.dwpsn	file "../Source/prod.c",line 4452,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4452| 
        ; branchcc occurs ; [] |4452| 
	.dwpsn	file "../Source/prod.c",line 4457,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4457| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L252:    
	.dwpsn	file "../Source/prod.c",line 4459,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4459| 
        ANDB      AL,#0xff              ; [CPU_] |4459| 
        MOV       *XAR4++,AL            ; [CPU_] |4459| 
	.dwpsn	file "../Source/prod.c",line 4460,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4460| 
        LSR       AL,8                  ; [CPU_] |4460| 
        MOV       *XAR4++,AL            ; [CPU_] |4460| 
	.dwpsn	file "../Source/prod.c",line 4458,column 17,is_stmt,isa 0
        BANZ      $C$L252,AR6--         ; [CPU_] |4458| 
        ; branchcc occurs ; [] |4458| 
	.dwpsn	file "../Source/prod.c",line 4448,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4448| 
	.dwpsn	file "../Source/prod.c",line 4465,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |4465| 
        ; branch occurs ; [] |4465| 
$C$L253:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4375,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4375| 
        B         $C$L321,LO            ; [CPU_] |4375| 
        ; branchcc occurs ; [] |4375| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4375| 
        MOVL      XAR0,#66              ; [CPU_] |4375| 
        MOVL      ACC,XAR5              ; [CPU_] |4375| 
        ADDB      ACC,#2                ; [CPU_] |4375| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4375| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4375| 
        B         $C$L321,LT            ; [CPU_] |4375| 
        ; branchcc occurs ; [] |4375| 
        ADDB      XAR4,#2               ; [CPU_] |4375| 
        MOVL      XAR0,#66              ; [CPU_] |4375| 
        CMPB      AL,#4                 ; [CPU_] |4375| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4375| 
        B         $C$L321,GEQ           ; [CPU_] |4375| 
        ; branchcc occurs ; [] |4375| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        MOV       *-SP[58],AL           ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4381,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4381| 
	.dwpsn	file "../Source/prod.c",line 4383,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4383| 
        MOVL      XAR0,#66              ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4381,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4381| 
	.dwpsn	file "../Source/prod.c",line 4383,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4383| 
        MOVL      XAR0,#40              ; [CPU_] |4383| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4383| 
        MOVB      AL,#10                ; [CPU_] |4383| 
        MOV       T,*-SP[58]            ; [CPU_] |4383| 
        MPYU      ACC,T,AL              ; [CPU_] |4383| 
        ADDL      ACC,XAR6              ; [CPU_] |4383| 
        ADDB      ACC,#46               ; [CPU_] |4383| 
        MOVL      XAR5,ACC              ; [CPU_] |4383| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4385,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4385| 
        ANDB      AL,#0xff              ; [CPU_] |4385| 
        MOV       *XAR4++,AL            ; [CPU_] |4385| 
	.dwpsn	file "../Source/prod.c",line 4386,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4386| 
        LSR       AL,8                  ; [CPU_] |4386| 
        MOV       *XAR4++,AL            ; [CPU_] |4386| 
	.dwpsn	file "../Source/prod.c",line 4384,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR0--         ; [CPU_] |4384| 
        ; branchcc occurs ; [] |4384| 
	.dwpsn	file "../Source/prod.c",line 4389,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4389| 
        MPYU      ACC,T,AL              ; [CPU_] |4389| 
        ADDL      ACC,XAR6              ; [CPU_] |4389| 
        MOVL      XAR5,ACC              ; [CPU_] |4389| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4389| 
        ADDB      XAR5,#48              ; [CPU_] |4389| 
$C$L255:    
	.dwpsn	file "../Source/prod.c",line 4391,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4391| 
        ANDB      AL,#0xff              ; [CPU_] |4391| 
        MOV       *XAR4++,AL            ; [CPU_] |4391| 
	.dwpsn	file "../Source/prod.c",line 4392,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4392| 
        LSR       AL,8                  ; [CPU_] |4392| 
        MOV       *XAR4++,AL            ; [CPU_] |4392| 
	.dwpsn	file "../Source/prod.c",line 4390,column 17,is_stmt,isa 0
        BANZ      $C$L255,AR6--         ; [CPU_] |4390| 
        ; branchcc occurs ; [] |4390| 
	.dwpsn	file "../Source/prod.c",line 4395,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4395| 
	.dwpsn	file "../Source/prod.c",line 4386,column 6,is_stmt,isa 0
        MOV       *-SP[61],#15          ; [CPU_] |4386| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4395,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4395| 
$C$L256:    
	.dwpsn	file "../Source/prod.c",line 4397,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4397| 
        ANDB      AL,#0xff              ; [CPU_] |4397| 
        MOV       *XAR4++,AL            ; [CPU_] |4397| 
	.dwpsn	file "../Source/prod.c",line 4398,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4398| 
        LSR       AL,8                  ; [CPU_] |4398| 
        MOV       *XAR4++,AL            ; [CPU_] |4398| 
	.dwpsn	file "../Source/prod.c",line 4396,column 17,is_stmt,isa 0
        BANZ      $C$L256,AR0--         ; [CPU_] |4396| 
        ; branchcc occurs ; [] |4396| 
        B         $C$L743,UNC           ; [CPU_] |4396| 
        ; branch occurs ; [] |4396| 
$C$L257:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4017,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4017| 
        B         $C$L321,LO            ; [CPU_] |4017| 
        ; branchcc occurs ; [] |4017| 
        MOVL      ACC,XAR4              ; [CPU_] |4017| 
        MOVL      XAR0,#66              ; [CPU_] |4017| 
        ADDB      ACC,#2                ; [CPU_] |4017| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4017| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4017| 
        B         $C$L321,LT            ; [CPU_] |4017| 
        ; branchcc occurs ; [] |4017| 
        MOVL      XAR5,XAR4             ; [CPU_] |4017| 
        MOVL      XAR0,#66              ; [CPU_] |4017| 
        CMPB      AL,#20                ; [CPU_] |4017| 
        ADDB      XAR5,#2               ; [CPU_] |4017| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4017| 
        B         $C$L321,GEQ           ; [CPU_] |4017| 
        ; branchcc occurs ; [] |4017| 
	.dwpsn	file "../Source/prod.c",line 4021,column 5,is_stmt,isa 0
        MOV       *-SP[57],AL           ; [CPU_] |4021| 
	.dwpsn	file "../Source/prod.c",line 4022,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |4022| 
	.dwpsn	file "../Source/prod.c",line 4025,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4025| 
        MOVL      XAR0,#66              ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4022,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |4022| 
	.dwpsn	file "../Source/prod.c",line 4025,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4025| 
        MOVL      XAR0,#40              ; [CPU_] |4025| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4025| 
        MOVB      AL,#152               ; [CPU_] |4025| 
        MOV       T,*-SP[57]            ; [CPU_] |4025| 
        MPYU      ACC,T,AL              ; [CPU_] |4025| 
        ADDL      ACC,XAR6              ; [CPU_] |4025| 
        ADDB      ACC,#82               ; [CPU_] |4025| 
        MOVL      XAR4,ACC              ; [CPU_] |4025| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_strlen")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4025| 
        ; call occurs [#_strlen] ; [] |4025| 
        MOVZ      AR6,AL                ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4026,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |4026| 
	.dwpsn	file "../Source/prod.c",line 4027,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4027| 
	.dwpsn	file "../Source/prod.c",line 4026,column 5,is_stmt,isa 0
        MOV       *-SP[61],#4           ; [CPU_] |4026| 
	.dwpsn	file "../Source/prod.c",line 4027,column 17,is_stmt,isa 0
        B         $C$L259,EQ            ; [CPU_] |4027| 
        ; branchcc occurs ; [] |4027| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[57]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#82               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4027,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4027| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 4028,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4028| 
	.dwpsn	file "../Source/prod.c",line 4027,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4027| 
	.dwpsn	file "../Source/prod.c",line 4028,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4028| 
	.dwpsn	file "../Source/prod.c",line 4027,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4027| 
	.dwpsn	file "../Source/prod.c",line 4028,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4028| 
	.dwpsn	file "../Source/prod.c",line 4027,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4027| 
        B         $C$L258,HI            ; [CPU_] |4027| 
        ; branchcc occurs ; [] |4027| 
$C$L259:    
	.dwpsn	file "../Source/prod.c",line 4032,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4032| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4032| 
        MOVB      AL,#152               ; [CPU_] |4032| 
        MOV       T,*-SP[57]            ; [CPU_] |4032| 
        MPYU      ACC,T,AL              ; [CPU_] |4032| 
        ADDL      ACC,XAR6              ; [CPU_] |4032| 
        MOVL      XAR4,ACC              ; [CPU_] |4032| 
        MOVL      XAR1,ACC              ; [CPU_] |4032| 
        ADDB      XAR4,#98              ; [CPU_] |4032| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_strlen")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4032| 
        ; call occurs [#_strlen] ; [] |4032| 
        MOVL      XAR0,#44              ; [CPU_] |4032| 
	.dwpsn	file "../Source/prod.c",line 4033,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[61]          ; [CPU_] |4033| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4032,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |4032| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4032| 
	.dwpsn	file "../Source/prod.c",line 4033,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |4033| 
        MOVL      XAR4,ACC              ; [CPU_] |4033| 
        MOV       AL,AR7                ; [CPU_] |4033| 
        ADDB      AL,#1                 ; [CPU_] |4033| 
        MOV       *XAR4++,AR6           ; [CPU_] |4033| 
        MOV       *-SP[61],AL           ; [CPU_] |4033| 
        MOV       AL,AR6                ; [CPU_] |4033| 
	.dwpsn	file "../Source/prod.c",line 4034,column 17,is_stmt,isa 0
        B         $C$L261,EQ            ; [CPU_] |4034| 
        ; branchcc occurs ; [] |4034| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4034,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4034| 
        ADDB      XAR5,#98              ; [CPU_] 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 4035,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4034,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4034| 
	.dwpsn	file "../Source/prod.c",line 4035,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4034,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4034| 
	.dwpsn	file "../Source/prod.c",line 4035,column 6,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |4035| 
	.dwpsn	file "../Source/prod.c",line 4034,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4034| 
        B         $C$L260,HI            ; [CPU_] |4034| 
        ; branchcc occurs ; [] |4034| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 4039,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4039| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#114             ; [CPU_] |4039| 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 4041,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4041| 
        ANDB      AL,#0xff              ; [CPU_] |4041| 
        MOV       *XAR4++,AL            ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4042,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4042| 
        LSR       AL,8                  ; [CPU_] |4042| 
        MOV       *XAR4++,AL            ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4040,column 17,is_stmt,isa 0
        BANZ      $C$L262,AR0--         ; [CPU_] |4040| 
        ; branchcc occurs ; [] |4040| 
	.dwpsn	file "../Source/prod.c",line 4047,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4047| 
	.dwpsn	file "../Source/prod.c",line 4050,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4050| 
	.dwpsn	file "../Source/prod.c",line 4047,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4047| 
        MOV       *XAR4++,AL            ; [CPU_] |4047| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4050,column 5,is_stmt,isa 0
        ADDB      XAR5,#120             ; [CPU_] |4050| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 4052,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4052| 
        ANDB      AL,#0xff              ; [CPU_] |4052| 
        MOV       *XAR4++,AL            ; [CPU_] |4052| 
	.dwpsn	file "../Source/prod.c",line 4053,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4053| 
        LSR       AL,8                  ; [CPU_] |4053| 
        MOV       *XAR4++,AL            ; [CPU_] |4053| 
	.dwpsn	file "../Source/prod.c",line 4051,column 17,is_stmt,isa 0
        BANZ      $C$L263,AR0--         ; [CPU_] |4051| 
        ; branchcc occurs ; [] |4051| 
	.dwpsn	file "../Source/prod.c",line 4058,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4058| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#122             ; [CPU_] |4058| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 4060,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4060| 
        ANDB      AL,#0xff              ; [CPU_] |4060| 
        MOV       *XAR4++,AL            ; [CPU_] |4060| 
	.dwpsn	file "../Source/prod.c",line 4061,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4061| 
        LSR       AL,8                  ; [CPU_] |4061| 
        MOV       *XAR4++,AL            ; [CPU_] |4061| 
	.dwpsn	file "../Source/prod.c",line 4059,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |4059| 
        ; branchcc occurs ; [] |4059| 
	.dwpsn	file "../Source/prod.c",line 4066,column 5,is_stmt,isa 0
        MOVB      XAR0,#124             ; [CPU_] |4066| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4066| 
	.dwpsn	file "../Source/prod.c",line 4072,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4066,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4066| 
	.dwpsn	file "../Source/prod.c",line 4069,column 5,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |4069| 
	.dwpsn	file "../Source/prod.c",line 4066,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4066| 
	.dwpsn	file "../Source/prod.c",line 4069,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4069| 
	.dwpsn	file "../Source/prod.c",line 4072,column 5,is_stmt,isa 0
        ADDB      XAR5,#126             ; [CPU_] |4072| 
	.dwpsn	file "../Source/prod.c",line 4069,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |4069| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4069| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 4074,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4074| 
        ANDB      AL,#0xff              ; [CPU_] |4074| 
        MOV       *XAR4++,AL            ; [CPU_] |4074| 
	.dwpsn	file "../Source/prod.c",line 4075,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4075| 
        LSR       AL,8                  ; [CPU_] |4075| 
        MOV       *XAR4++,AL            ; [CPU_] |4075| 
	.dwpsn	file "../Source/prod.c",line 4073,column 17,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |4073| 
        ; branchcc occurs ; [] |4073| 
	.dwpsn	file "../Source/prod.c",line 4042,column 6,is_stmt,isa 0
        ADD       *-SP[61],#23          ; [CPU_] |4042| 
	.dwpsn	file "../Source/prod.c",line 4080,column 5,is_stmt,isa 0
        MOVB      XAR0,#118             ; [CPU_] |4080| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4080| 
        CMPB      AL,#2                 ; [CPU_] |4080| 
        B         $C$L268,EQ            ; [CPU_] |4080| 
        ; branchcc occurs ; [] |4080| 
	.dwpsn	file "../Source/prod.c",line 4118,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4118| 
        ADDB      ACC,#178              ; [CPU_] |4118| 
        MOVL      XAR5,ACC              ; [CPU_] |4118| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4116,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4116| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 4120,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4120| 
        ANDB      AL,#0xff              ; [CPU_] |4120| 
        MOV       *XAR4++,AL            ; [CPU_] |4120| 
	.dwpsn	file "../Source/prod.c",line 4121,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4121| 
        LSR       AL,8                  ; [CPU_] |4121| 
        MOV       *XAR4++,AL            ; [CPU_] |4121| 
	.dwpsn	file "../Source/prod.c",line 4119,column 18,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |4119| 
        ; branchcc occurs ; [] |4119| 
	.dwpsn	file "../Source/prod.c",line 4125,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4125| 
        ADDB      ACC,#200              ; [CPU_] |4125| 
        MOVL      XAR5,ACC              ; [CPU_] |4125| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4116,column 6,is_stmt,isa 0
        ADD       *-SP[61],#9           ; [CPU_] |4116| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 4127,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4127| 
        ANDB      AL,#0xff              ; [CPU_] |4127| 
        MOV       *XAR4++,AL            ; [CPU_] |4127| 
	.dwpsn	file "../Source/prod.c",line 4128,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4128| 
        LSR       AL,8                  ; [CPU_] |4128| 
        MOV       *XAR4++,AL            ; [CPU_] |4128| 
	.dwpsn	file "../Source/prod.c",line 4126,column 18,is_stmt,isa 0
        BANZ      $C$L267,AR0--         ; [CPU_] |4126| 
        ; branchcc occurs ; [] |4126| 
        B         $C$L277,UNC           ; [CPU_] |4126| 
        ; branch occurs ; [] |4126| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4081,column 6,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4081| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4082,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4082| 
	.dwpsn	file "../Source/prod.c",line 4081,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4081| 
        INC       *-SP[61]              ; [CPU_] |4081| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4082,column 11,is_stmt,isa 0
        B         $C$L272,UNC           ; [CPU_] |4082| 
        ; branch occurs ; [] |4082| 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4084,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |4084| 
        MOVL      XAR0,#40              ; [CPU_] |4084| 
        MOV       T,*-SP[57]            ; [CPU_] |4084| 
        MOVL      XAR6,ACC              ; [CPU_] |4084| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4084| 
        MOVB      AL,#76                ; [CPU_] |4084| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |4084| 
        ADDL      ACC,XAR6              ; [CPU_] |4084| 
        LSL       ACC,1                 ; [CPU_] |4084| 
        ADDL      ACC,XAR7              ; [CPU_] |4084| 
        ADDB      ACC,#130              ; [CPU_] |4084| 
        MOVL      XAR7,ACC              ; [CPU_] |4084| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#154              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 4086,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4086| 
        ANDB      AL,#0xff              ; [CPU_] |4086| 
        MOV       *XAR4++,AL            ; [CPU_] |4086| 
	.dwpsn	file "../Source/prod.c",line 4087,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4087| 
        LSR       AL,8                  ; [CPU_] |4087| 
        MOV       *XAR4++,AL            ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4085,column 19,is_stmt,isa 0
        BANZ      $C$L270,AR6--         ; [CPU_] |4085| 
        ; branchcc occurs ; [] |4085| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 4093,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4093| 
        ANDB      AL,#0xff              ; [CPU_] |4093| 
        MOV       *XAR4++,AL            ; [CPU_] |4093| 
	.dwpsn	file "../Source/prod.c",line 4094,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4094| 
        LSR       AL,8                  ; [CPU_] |4094| 
        MOV       *XAR4++,AL            ; [CPU_] |4094| 
	.dwpsn	file "../Source/prod.c",line 4092,column 19,is_stmt,isa 0
        BANZ      $C$L271,AR0--         ; [CPU_] |4092| 
        ; branchcc occurs ; [] |4092| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4087,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4082,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4082| 
        MOV       PL,AL                 ; [CPU_] |4082| 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 4082,column 18,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4082| 
        MOV       AL,PL                 ; [CPU_] |4082| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |4082| 
        B         $C$L269,LT            ; [CPU_] |4082| 
        ; branchcc occurs ; [] |4082| 
	.dwpsn	file "../Source/prod.c",line 4099,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4099| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L276,UNC           ; [CPU_] |4099| 
        ; branch occurs ; [] |4099| 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 4101,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4101| 
        MOVL      XAR0,#40              ; [CPU_] |4101| 
        MOV       T,*-SP[57]            ; [CPU_] |4101| 
        MOVL      P,ACC                 ; [CPU_] |4101| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4101| 
        MOVB      AL,#76                ; [CPU_] |4101| 
        MPYU      ACC,T,AL              ; [CPU_] |4101| 
        ADDL      ACC,P                 ; [CPU_] |4101| 
        LSL       ACC,1                 ; [CPU_] |4101| 
        ADDL      ACC,XAR6              ; [CPU_] |4101| 
        ADDB      ACC,#178              ; [CPU_] |4101| 
        MOVL      XAR7,ACC              ; [CPU_] |4101| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#200              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 4103,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4103| 
        ANDB      AL,#0xff              ; [CPU_] |4103| 
        MOV       *XAR4++,AL            ; [CPU_] |4103| 
	.dwpsn	file "../Source/prod.c",line 4104,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4104| 
        LSR       AL,8                  ; [CPU_] |4104| 
        MOV       *XAR4++,AL            ; [CPU_] |4104| 
	.dwpsn	file "../Source/prod.c",line 4102,column 19,is_stmt,isa 0
        BANZ      $C$L274,AR6--         ; [CPU_] |4102| 
        ; branchcc occurs ; [] |4102| 
	.dwpsn	file "../Source/prod.c",line 4108,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4108| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4110,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4110| 
        ANDB      AL,#0xff              ; [CPU_] |4110| 
        MOV       *XAR4++,AL            ; [CPU_] |4110| 
	.dwpsn	file "../Source/prod.c",line 4111,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4111| 
        LSR       AL,8                  ; [CPU_] |4111| 
        MOV       *XAR4++,AL            ; [CPU_] |4111| 
	.dwpsn	file "../Source/prod.c",line 4109,column 19,is_stmt,isa 0
        BANZ      $C$L275,AR0--         ; [CPU_] |4109| 
        ; branchcc occurs ; [] |4109| 
	.dwpsn	file "../Source/prod.c",line 4099,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4099| 
	.dwpsn	file "../Source/prod.c",line 4104,column 8,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4104| 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4115,column 5,is_stmt,isa 0
        MOVB      XAR0,#128             ; [CPU_] |4115| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4115| 
        ADDB      AL,#-1                ; [CPU_] |4115| 
        CMP       AL,AR5                ; [CPU_] |4115| 
        B         $C$L273,GT            ; [CPU_] |4115| 
        ; branchcc occurs ; [] |4115| 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4134,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4134| 
        ADDB      ACC,#222              ; [CPU_] |4134| 
        MOVL      XAR5,ACC              ; [CPU_] |4134| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4136,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4136| 
        ANDB      AL,#0xff              ; [CPU_] |4136| 
        MOV       *XAR4++,AL            ; [CPU_] |4136| 
	.dwpsn	file "../Source/prod.c",line 4137,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4137| 
        LSR       AL,8                  ; [CPU_] |4137| 
        MOV       *XAR4++,AL            ; [CPU_] |4137| 
	.dwpsn	file "../Source/prod.c",line 4135,column 17,is_stmt,isa 0
        BANZ      $C$L278,AR0--         ; [CPU_] |4135| 
        ; branchcc occurs ; [] |4135| 
	.dwpsn	file "../Source/prod.c",line 4142,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4142| 
        ADDB      ACC,#224              ; [CPU_] |4142| 
        MOVL      XAR5,ACC              ; [CPU_] |4142| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4144,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4144| 
        ANDB      AL,#0xff              ; [CPU_] |4144| 
        MOV       *XAR4++,AL            ; [CPU_] |4144| 
	.dwpsn	file "../Source/prod.c",line 4145,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4145| 
        LSR       AL,8                  ; [CPU_] |4145| 
        MOV       *XAR4++,AL            ; [CPU_] |4145| 
	.dwpsn	file "../Source/prod.c",line 4143,column 17,is_stmt,isa 0
        BANZ      $C$L279,AR0--         ; [CPU_] |4143| 
        ; branchcc occurs ; [] |4143| 
	.dwpsn	file "../Source/prod.c",line 4150,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4150| 
        ADDB      ACC,#228              ; [CPU_] |4150| 
        MOVL      XAR5,ACC              ; [CPU_] |4150| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4152,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4152| 
        ANDB      AL,#0xff              ; [CPU_] |4152| 
        MOV       *XAR4++,AL            ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4153,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4153| 
        LSR       AL,8                  ; [CPU_] |4153| 
        MOV       *XAR4++,AL            ; [CPU_] |4153| 
	.dwpsn	file "../Source/prod.c",line 4151,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4151| 
        ; branchcc occurs ; [] |4151| 
	.dwpsn	file "../Source/prod.c",line 4158,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4158| 
        ADDB      ACC,#230              ; [CPU_] |4158| 
        MOVL      XAR5,ACC              ; [CPU_] |4158| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L281:    
	.dwpsn	file "../Source/prod.c",line 4160,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4160| 
        ANDB      AL,#0xff              ; [CPU_] |4160| 
        MOV       *XAR4++,AL            ; [CPU_] |4160| 
	.dwpsn	file "../Source/prod.c",line 4161,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4161| 
        LSR       AL,8                  ; [CPU_] |4161| 
        MOV       *XAR4++,AL            ; [CPU_] |4161| 
	.dwpsn	file "../Source/prod.c",line 4159,column 17,is_stmt,isa 0
        BANZ      $C$L281,AR0--         ; [CPU_] |4159| 
        ; branchcc occurs ; [] |4159| 
	.dwpsn	file "../Source/prod.c",line 4166,column 5,is_stmt,isa 0
        MOVB      XAR0,#232             ; [CPU_] |4166| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4166| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4166| 
	.dwpsn	file "../Source/prod.c",line 4137,column 6,is_stmt,isa 0
        ADD       *-SP[61],#17          ; [CPU_] |4137| 
	.dwpsn	file "../Source/prod.c",line 4169,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4169| 
        ; branch occurs ; [] |4169| 
$C$L282:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3959,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3959| 
        B         $C$L321,LO            ; [CPU_] |3959| 
        ; branchcc occurs ; [] |3959| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3959| 
        MOVL      XAR0,#66              ; [CPU_] |3959| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3959| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3959| 
        B         $C$L321,LT            ; [CPU_] |3959| 
        ; branchcc occurs ; [] |3959| 
        CMPB      AL,#4                 ; [CPU_] |3959| 
        B         $C$L321,GEQ           ; [CPU_] |3959| 
        ; branchcc occurs ; [] |3959| 
	.dwpsn	file "../Source/prod.c",line 3963,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3963| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3963| 
	.dwpsn	file "../Source/prod.c",line 3965,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3965| 
        MOVL      XAR0,#40              ; [CPU_] |3965| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3965| 
        MPYB      ACC,T,#10             ; [CPU_] |3965| 
        ADDL      ACC,XAR6              ; [CPU_] |3965| 
        MOVL      XAR4,ACC              ; [CPU_] |3965| 
        MOVL      XAR7,ACC              ; [CPU_] |3965| 
        MOVB      XAR0,#42              ; [CPU_] |3965| 
        MOVL      P,ACC                 ; [CPU_] |3965| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3965| 
	.dwpsn	file "../Source/prod.c",line 3972,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3972| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3972| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3965,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3965| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3969,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3969| 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 3975,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3975| 
        ANDB      AL,#0xff              ; [CPU_] |3975| 
        MOV       *XAR4++,AL            ; [CPU_] |3975| 
	.dwpsn	file "../Source/prod.c",line 3976,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3976| 
        LSR       AL,8                  ; [CPU_] |3976| 
        MOV       *XAR4++,AL            ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3973,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR6--         ; [CPU_] |3973| 
        ; branchcc occurs ; [] |3973| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L284:    
	.dwpsn	file "../Source/prod.c",line 3983,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3983| 
        ANDB      AL,#0xff              ; [CPU_] |3983| 
        MOV       *XAR4++,AL            ; [CPU_] |3983| 
	.dwpsn	file "../Source/prod.c",line 3984,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3984| 
        LSR       AL,8                  ; [CPU_] |3984| 
        MOV       *XAR4++,AL            ; [CPU_] |3984| 
	.dwpsn	file "../Source/prod.c",line 3981,column 17,is_stmt,isa 0
        BANZ      $C$L284,AR6--         ; [CPU_] |3981| 
        ; branchcc occurs ; [] |3981| 
	.dwpsn	file "../Source/prod.c",line 3988,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3988| 
        ADDB      XAR5,#46              ; [CPU_] |3988| 
        MOVL      XAR7,XAR5             ; [CPU_] |3988| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3991,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3991| 
        ANDB      AL,#0xff              ; [CPU_] |3991| 
        MOV       *XAR4++,AL            ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3992,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3992| 
        LSR       AL,8                  ; [CPU_] |3992| 
        MOV       *XAR4++,AL            ; [CPU_] |3992| 
	.dwpsn	file "../Source/prod.c",line 3989,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3989| 
        ; branchcc occurs ; [] |3989| 
	.dwpsn	file "../Source/prod.c",line 3996,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3996| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3999,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3999| 
        ANDB      AL,#0xff              ; [CPU_] |3999| 
        MOV       *XAR4++,AL            ; [CPU_] |3999| 
	.dwpsn	file "../Source/prod.c",line 4000,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4000| 
        LSR       AL,8                  ; [CPU_] |4000| 
        MOV       *XAR4++,AL            ; [CPU_] |4000| 
	.dwpsn	file "../Source/prod.c",line 3997,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3997| 
        ; branchcc occurs ; [] |3997| 
	.dwpsn	file "../Source/prod.c",line 3969,column 6,is_stmt,isa 0
        MOV       *-SP[61],#28          ; [CPU_] |3969| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L287:    
	.dwpsn	file "../Source/prod.c",line 4007,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4007| 
        ANDB      AL,#0xff              ; [CPU_] |4007| 
        MOV       *XAR4++,AL            ; [CPU_] |4007| 
	.dwpsn	file "../Source/prod.c",line 4008,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4008| 
        LSR       AL,8                  ; [CPU_] |4008| 
        MOV       *XAR4++,AL            ; [CPU_] |4008| 
	.dwpsn	file "../Source/prod.c",line 4005,column 17,is_stmt,isa 0
        BANZ      $C$L287,AR6--         ; [CPU_] |4005| 
        ; branchcc occurs ; [] |4005| 
        B         $C$L743,UNC           ; [CPU_] |4005| 
        ; branch occurs ; [] |4005| 
$C$L288:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3913,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3913| 
        B         $C$L321,LO            ; [CPU_] |3913| 
        ; branchcc occurs ; [] |3913| 
	.dwpsn	file "../Source/prod.c",line 3917,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3917| 
        B         $C$L289,EQ            ; [CPU_] |3917| 
        ; branchcc occurs ; [] |3917| 
        CMPB      AL,#1                 ; [CPU_] |3917| 
        B         $C$L289,EQ            ; [CPU_] |3917| 
        ; branchcc occurs ; [] |3917| 
        CMPB      AL,#2                 ; [CPU_] |3917| 
        B         $C$L289,EQ            ; [CPU_] |3917| 
        ; branchcc occurs ; [] |3917| 
        ADDB      XAR4,#2               ; [CPU_] |3917| 
        MOVL      XAR0,#66              ; [CPU_] |3917| 
        CMPB      AL,#3                 ; [CPU_] |3917| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3917| 
        B         $C$L321,NEQ           ; [CPU_] |3917| 
        ; branchcc occurs ; [] |3917| 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3923,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3923| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3923| 
        MOVL      XAR4,XAR5             ; [CPU_] |3923| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3923| 
        ADDB      XAR5,#2               ; [CPU_] |3923| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3923| 
        ADDB      XAR4,#6               ; [CPU_] |3923| 
        B         $C$L294,NEQ           ; [CPU_] |3923| 
        ; branchcc occurs ; [] |3923| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3924,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3924| 
        B         $C$L321,LO            ; [CPU_] |3924| 
        ; branchcc occurs ; [] |3924| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3929,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3929| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L290:    
	.dwpsn	file "../Source/prod.c",line 3931,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3931| 
        ADDL      ACC,XT                ; [CPU_] |3931| 
	.dwpsn	file "../Source/prod.c",line 3932,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3930,column 18,is_stmt,isa 0
        BANZ      $C$L290,AR6--         ; [CPU_] |3930| 
        ; branchcc occurs ; [] |3930| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3935,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3935| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3936,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3936| 
        B         $C$L292,EQ            ; [CPU_] |3936| 
        ; branchcc occurs ; [] |3936| 
	.dwpsn	file "../Source/prod.c",line 3935,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3935| 
        ADDB      XAR4,#1               ; [CPU_] |3935| 
        BANZ      $C$L291,AR0--         ; [CPU_] |3935| 
        ; branchcc occurs ; [] |3935| 
        B         $C$L293,UNC           ; [CPU_] |3935| 
        ; branch occurs ; [] |3935| 
$C$L292:    
	.dwpsn	file "../Source/prod.c",line 3937,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3937| 
        MOVB      XAR0,#35              ; [CPU_] |3937| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3937| 
$C$L293:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3941,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3941| 
        B         $C$L321,EQ            ; [CPU_] |3941| 
        ; branchcc occurs ; [] |3941| 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3947,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3947| 
        MOVL      XAR0,#66              ; [CPU_] |3947| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3947| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3947| 
        ADDB      ACC,#2                ; [CPU_] |3947| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3947| 
        MOVB      XAR0,#34              ; [CPU_] |3947| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3947| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3947| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3947| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3947| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L295:    
	.dwpsn	file "../Source/prod.c",line 3950,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3950| 
        MOV       *XAR4++,AL            ; [CPU_] |3950| 
	.dwpsn	file "../Source/prod.c",line 3949,column 12,is_stmt,isa 0
        INC       *-SP[61]              ; [CPU_] |3949| 
        MOV       AL,*-SP[59]           ; [CPU_] |3949| 
	.dwpsn	file "../Source/prod.c",line 3950,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3950| 
	.dwpsn	file "../Source/prod.c",line 3949,column 12,is_stmt,isa 0
        CMP       AL,*-SP[61]           ; [CPU_] |3949| 
        B         $C$L295,HI            ; [CPU_] |3949| 
        ; branchcc occurs ; [] |3949| 
        B         $C$L305,UNC           ; [CPU_] |3949| 
        ; branch occurs ; [] |3949| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3897,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3897| 
        MOVB      XAR0,#34              ; [CPU_] |3897| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3897| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3897| 
	.dwpsn	file "../Source/prod.c",line 3899,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3899| 
	.dwpsn	file "../Source/prod.c",line 3897,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3897| 
        MOV       *-SP[61],#3           ; [CPU_] |3897| 
	.dwpsn	file "../Source/prod.c",line 3899,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3899| 
        CMPB      AL,#1                 ; [CPU_] |3899| 
        B         $C$L297,EQ            ; [CPU_] |3899| 
        ; branchcc occurs ; [] |3899| 
        MOVB      XAR1,#34              ; [CPU_] |3899| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3899| 
        B         $C$L743,NEQ           ; [CPU_] |3899| 
        ; branchcc occurs ; [] |3899| 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3901,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3901| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3901| 
        MOVL      XAR0,#74              ; [CPU_] |3901| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3901| 
        MOVL      XAR0,#44              ; [CPU_] |3901| 
        ADDL      ACC,XAR6              ; [CPU_] |3901| 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3901| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3901| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3904,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3904| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |3904| 
$C$L298:    
	.dwpsn	file "../Source/prod.c",line 3903,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3903| 
        ANDB      AL,#0xff              ; [CPU_] |3903| 
        MOV       *XAR4++,AL            ; [CPU_] |3903| 
	.dwpsn	file "../Source/prod.c",line 3904,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3904| 
        LSR       AL,8                  ; [CPU_] |3904| 
        MOV       *XAR4++,AL            ; [CPU_] |3904| 
	.dwpsn	file "../Source/prod.c",line 3902,column 18,is_stmt,isa 0
        BANZ      $C$L298,AR6--         ; [CPU_] |3902| 
        ; branchcc occurs ; [] |3902| 
        B         $C$L743,UNC           ; [CPU_] |3902| 
        ; branch occurs ; [] |3902| 
$C$L299:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3876,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3876| 
        B         $C$L321,LO            ; [CPU_] |3876| 
        ; branchcc occurs ; [] |3876| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3876| 
        MOVL      XAR0,#66              ; [CPU_] |3876| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3876| 
        ADDB      AL,#3                 ; [CPU_] |3876| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3876| 
        CMP       AL,*-SP[59]           ; [CPU_] |3876| 
        B         $C$L321,HI            ; [CPU_] |3876| 
        ; branchcc occurs ; [] |3876| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3881,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3881| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L301,UNC           ; [CPU_] |3881| 
        ; branch occurs ; [] |3881| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3882,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3882| 
        ADD       PL,AL                 ; [CPU_] |3882| 
        MOVL      ACC,XAR7              ; [CPU_] |3882| 
        ADD       ACC,PL                ; [CPU_] |3882| 
        MOVL      XAR7,ACC              ; [CPU_] |3882| 
	.dwpsn	file "../Source/prod.c",line 3881,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3881| 
	.dwpsn	file "../Source/prod.c",line 3882,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3882| 
        MOV       *XAR4++,AL            ; [CPU_] |3882| 
$C$L301:    
	.dwpsn	file "../Source/prod.c",line 3881,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3881| 
        MOVL      XAR0,#66              ; [CPU_] |3881| 
        MOVL      ACC,XAR7              ; [CPU_] |3881| 
        ADDB      ACC,#2                ; [CPU_] |3881| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3881| 
        MOV       AL,AR6                ; [CPU_] |3881| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3881| 
        B         $C$L300,LT            ; [CPU_] |3881| 
        ; branchcc occurs ; [] |3881| 
	.dwpsn	file "../Source/prod.c",line 3884,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3884| 
        MOVL      XAR0,#76              ; [CPU_] |3884| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3884| 
	.dwpsn	file "../Source/prod.c",line 3887,column 5,is_stmt,isa 0
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_strlen")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3887| 
        ; call occurs [#_strlen] ; [] |3887| 
	.dwpsn	file "../Source/prod.c",line 3888,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3888| 
	.dwpsn	file "../Source/prod.c",line 3889,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3889| 
	.dwpsn	file "../Source/prod.c",line 3888,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3888| 
        MOV       *-SP[61],#3           ; [CPU_] |3888| 
	.dwpsn	file "../Source/prod.c",line 3889,column 17,is_stmt,isa 0
        B         $C$L305,EQ            ; [CPU_] |3889| 
        ; branchcc occurs ; [] |3889| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3889,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3889| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L302:    
	.dwpsn	file "../Source/prod.c",line 3890,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3890| 
	.dwpsn	file "../Source/prod.c",line 3889,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3889| 
	.dwpsn	file "../Source/prod.c",line 3890,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3890| 
        INC       *-SP[61]              ; [CPU_] |3890| 
	.dwpsn	file "../Source/prod.c",line 3889,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3889| 
        B         $C$L302,HI            ; [CPU_] |3889| 
        ; branchcc occurs ; [] |3889| 
	.dwpsn	file "../Source/prod.c",line 3893,column 5,is_stmt,isa 0
        B         $C$L305,UNC           ; [CPU_] |3893| 
        ; branch occurs ; [] |3893| 
$C$L303:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3856,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3856| 
        B         $C$L321,LO            ; [CPU_] |3856| 
        ; branchcc occurs ; [] |3856| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3861,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3861| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3861| 
        MOVL      XAR0,#86              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3863,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3863| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3863| 
	.dwpsn	file "../Source/prod.c",line 3864,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3864| 
        MOV       *XAR5++,AL            ; [CPU_] |3864| 
	.dwpsn	file "../Source/prod.c",line 3865,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |3865| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3865| 
        MOV       *XAR4++,AL            ; [CPU_] |3865| 
	.dwpsn	file "../Source/prod.c",line 3866,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3866| 
        MOV       *XAR5++,AL            ; [CPU_] |3866| 
	.dwpsn	file "../Source/prod.c",line 3862,column 17,is_stmt,isa 0
        BANZ      $C$L304,AR6--         ; [CPU_] |3862| 
        ; branchcc occurs ; [] |3862| 
	.dwpsn	file "../Source/prod.c",line 3866,column 6,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |3866| 
$C$L305:    
	.dwpsn	file "../Source/prod.c",line 3869,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |3869| 
	.dwpsn	file "../Source/prod.c",line 3872,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |3872| 
        ; branch occurs ; [] |3872| 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 5781,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5781 | cmd_mode = SCI_MODE_ASCII;                                             
; 5782 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5783 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5784 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5781| 
	.dwpsn	file "../Source/prod.c",line 5787,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5787 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_update_units")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5787| 
        ; call occurs [#_update_units] ; [] |5787| 
	.dwpsn	file "../Source/prod.c",line 5780,column 5,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |5780| 
	.dwpsn	file "../Source/prod.c",line 5788,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5788 | break;                                                                 
; 5790 | default:                                                               
; 5792 | // send back NACK?                                                     
; 5794 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L743,UNC           ; [CPU_] |5788| 
        ; branch occurs ; [] |5788| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 5774,column 5,is_stmt,isa 0
        MOV       *-SP[53],#1           ; [CPU_] |5774| 
	.dwpsn	file "../Source/prod.c",line 5776,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5776| 
        ; branch occurs ; [] |5776| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 4411,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4411| 
	.dwpsn	file "../Source/prod.c",line 4412,column 5,is_stmt,isa 0
        B         $C$L310,UNC           ; [CPU_] |4412| 
        ; branch occurs ; [] |4412| 
$C$L309:    
	.dwpsn	file "../Source/prod.c",line 4407,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4407| 
$C$L310:    
        MOVB      AL,#0                 ; [CPU_] |4407| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_ssr_set")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4407| 
        ; call occurs [#_ssr_set] ; [] |4407| 
	.dwpsn	file "../Source/prod.c",line 4408,column 5,is_stmt,isa 0
        B         $C$L318,UNC           ; [CPU_] |4408| 
        ; branch occurs ; [] |4408| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 5715,column 5,is_stmt,isa 0
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_conf_read")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5715| 
        ; call occurs [#_conf_read] ; [] |5715| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5718,column 5,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5718| 
        ; call occurs [#_ad7738_setcal] ; [] |5718| 
	.dwpsn	file "../Source/prod.c",line 5719,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5719| 
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5719| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5719| 
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5720| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5720| 
        ; call occurs [#_ad7738_resetvall] ; [] |5720| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5724,column 5,is_stmt,isa 0
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_update_units")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5724| 
        ; call occurs [#_update_units] ; [] |5724| 
	.dwpsn	file "../Source/prod.c",line 5723,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5723| 
	.dwpsn	file "../Source/prod.c",line 5726,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |5726| 
        ; branch occurs ; [] |5726| 
$C$L312:    
	.dwpsn	file "../Source/prod.c",line 5679,column 5,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_conf_default")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5679| 
        ; call occurs [#_conf_default] ; [] |5679| 
	.dwpsn	file "../Source/prod.c",line 5682,column 5,is_stmt,isa 0
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5682| 
        ; call occurs [#_lcd_clear] ; [] |5682| 
	.dwpsn	file "../Source/prod.c",line 5683,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5683| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5683| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5683| 
        ; call occurs [#_lcd_puts] ; [] |5683| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5686,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5686| 
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_delay_us")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5686| 
        ; call occurs [#_delay_us] ; [] |5686| 
	.dwpsn	file "../Source/prod.c",line 5685,column 17,is_stmt,isa 0
        BANZ      $C$L313,AR3--         ; [CPU_] |5685| 
        ; branchcc occurs ; [] |5685| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5690,column 5,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_conf_write")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5690| 
        ; call occurs [#_conf_write] ; [] |5690| 
        MOVZ      AR1,AL                ; [CPU_] |5690| 
	.dwpsn	file "../Source/prod.c",line 5691,column 5,is_stmt,isa 0
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5691| 
        ; call occurs [#_ad7738_setcal] ; [] |5691| 
	.dwpsn	file "../Source/prod.c",line 5692,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5692| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5692| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5692| 
	.dwpsn	file "../Source/prod.c",line 5693,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5693| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5693| 
        ; call occurs [#_ad7738_resetvall] ; [] |5693| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5696,column 5,is_stmt,isa 0
        B         $C$L314,NEQ           ; [CPU_] |5696| 
        ; branchcc occurs ; [] |5696| 
	.dwpsn	file "../Source/prod.c",line 5697,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5697| 
        MOVB      AL,#31                ; [CPU_] |5697| 
        SPM       #0                    ; [CPU_] 
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5697| 
        ; call occurs [#_lcd_puts] ; [] |5697| 
	.dwpsn	file "../Source/prod.c",line 5698,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5698| 
	.dwpsn	file "../Source/prod.c",line 5699,column 6,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5699| 
	.dwpsn	file "../Source/prod.c",line 5700,column 5,is_stmt,isa 0
        B         $C$L315,UNC           ; [CPU_] |5700| 
        ; branch occurs ; [] |5700| 
$C$L314:    
	.dwpsn	file "../Source/prod.c",line 5701,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5701| 
        MOVB      AL,#31                ; [CPU_] |5701| 
        SPM       #0                    ; [CPU_] 
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5701| 
        ; call occurs [#_lcd_puts] ; [] |5701| 
	.dwpsn	file "../Source/prod.c",line 5702,column 6,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |5702| 
$C$L315:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5705,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5705| 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_delay_us")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5705| 
        ; call occurs [#_delay_us] ; [] |5705| 
	.dwpsn	file "../Source/prod.c",line 5704,column 17,is_stmt,isa 0
        BANZ      $C$L316,AR3--         ; [CPU_] |5704| 
        ; branchcc occurs ; [] |5704| 
$C$L317:    
	.dwpsn	file "../Source/prod.c",line 5707,column 5,is_stmt,isa 0
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5707| 
        ; call occurs [#_lcd_clear] ; [] |5707| 
	.dwpsn	file "../Source/prod.c",line 5708,column 5,is_stmt,isa 0
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_update_units")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5708| 
        ; call occurs [#_update_units] ; [] |5708| 
$C$L318:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5797,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5797 | switch (bincmdresult) {                                                
; 5798 | case OK_SendResult:                                                    
; 5799 |         scia_send_bin(buff, j);         // send back                   
; 5801 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5802 |                 delay_us(2000);                 // 2ms                 
; 5803 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5805 |         break;                                                         
; 5807 | case Error_UnImpl:                                                     
; 5809 |         buff[1] = CmdUnImpl;                                           
; 5810 |         buff[2] = cmdbuff[1];                                          
; 5811 |         scia_send_bin(buff, 3);         // send back                   
; 5812 |         break;                                                         
; 5814 | case Error_Invalid:                                                    
; 5816 |         buff[1] = CmdInvalid;                                          
; 5817 |         buff[2] = cmdbuff[1];                                          
; 5818 |         scia_send_bin(buff, 3);         // send back                   
; 5819 |         break;                                                         
; 5821 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L743,EQ            ; [CPU_] |5797| 
        ; branchcc occurs ; [] |5797| 
        CMPB      AL,#1                 ; [CPU_] |5797| 
        B         $C$L322,EQ            ; [CPU_] |5797| 
        ; branchcc occurs ; [] |5797| 
        CMPB      AL,#2                 ; [CPU_] |5797| 
        B         $C$L321,EQ            ; [CPU_] |5797| 
        ; branchcc occurs ; [] |5797| 
        CMPB      AL,#3                 ; [CPU_] |5797| 
        B         $C$L635,NEQ           ; [CPU_] |5797| 
        ; branchcc occurs ; [] |5797| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5823,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5823 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5823| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5823| 
$C$L320:    
	.dwpsn	file "../Source/prod.c",line 5824,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5824 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5824| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5824| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5824| 
	.dwpsn	file "../Source/prod.c",line 5825,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5825 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5825| 
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5825| 
        ; call occurs [#_scia_send_bin] ; [] |5825| 
	.dwpsn	file "../Source/prod.c",line 5826,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5826 | break;                                                                 
; 5828 | default:                                                               
; 5830 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L635,UNC           ; [CPU_] |5826| 
        ; branch occurs ; [] |5826| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5816,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5816| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5816| 
	.dwpsn	file "../Source/prod.c",line 5819,column 5,is_stmt,isa 0
        B         $C$L320,UNC           ; [CPU_] |5819| 
        ; branch occurs ; [] |5819| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 5809,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5809| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5809| 
	.dwpsn	file "../Source/prod.c",line 5812,column 5,is_stmt,isa 0
        B         $C$L320,UNC           ; [CPU_] |5812| 
        ; branch occurs ; [] |5812| 
$C$L323:    
	.dwpsn	file "../Source/prod.c",line 1039,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1039| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1039| 
        CMPB      AL,#79                ; [CPU_] |1039| 
        B         $C$L325,GT            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#79                ; [CPU_] |1039| 
        B         $C$L446,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#69                ; [CPU_] |1039| 
        B         $C$L324,GT            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#69                ; [CPU_] |1039| 
        B         $C$L506,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#66                ; [CPU_] |1039| 
        B         $C$L592,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#67                ; [CPU_] |1039| 
        B         $C$L533,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#68                ; [CPU_] |1039| 
        B         $C$L515,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        B         $C$L626,UNC           ; [CPU_] |1039| 
        ; branch occurs ; [] |1039| 
$C$L324:    
        CMPB      AL,#70                ; [CPU_] |1039| 
        B         $C$L497,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#72                ; [CPU_] |1039| 
        B         $C$L631,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#76                ; [CPU_] |1039| 
        B         $C$L469,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        B         $C$L626,UNC           ; [CPU_] |1039| 
        ; branch occurs ; [] |1039| 
$C$L325:    
        CMPB      AL,#85                ; [CPU_] |1039| 
        B         $C$L326,GT            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#85                ; [CPU_] |1039| 
        B         $C$L327,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#80                ; [CPU_] |1039| 
        B         $C$L432,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#82                ; [CPU_] |1039| 
        B         $C$L417,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#83                ; [CPU_] |1039| 
        B         $C$L354,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        B         $C$L626,UNC           ; [CPU_] |1039| 
        ; branch occurs ; [] |1039| 
$C$L326:    
        CMPB      AL,#88                ; [CPU_] |1039| 
        B         $C$L629,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        CMPB      AL,#90                ; [CPU_] |1039| 
        B         $C$L627,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        B         $C$L626,UNC           ; [CPU_] |1039| 
        ; branch occurs ; [] |1039| 
$C$L327:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1207,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1207| 
        B         $C$L626,LO            ; [CPU_] |1207| 
        ; branchcc occurs ; [] |1207| 
	.dwpsn	file "../Source/prod.c",line 1210,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1210| 
        CMPB      AL,#73                ; [CPU_] |1210| 
        B         $C$L328,GT            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        CMPB      AL,#73                ; [CPU_] |1210| 
        B         $C$L342,EQ            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        CMPB      AL,#66                ; [CPU_] |1210| 
        B         $C$L331,EQ            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        CMPB      AL,#67                ; [CPU_] |1210| 
        B         $C$L350,EQ            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        CMPB      AL,#70                ; [CPU_] |1210| 
        B         $C$L348,EQ            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        B         $C$L626,UNC           ; [CPU_] |1210| 
        ; branch occurs ; [] |1210| 
$C$L328:    
        CMPB      AL,#78                ; [CPU_] |1210| 
        B         $C$L329,EQ            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        CMPB      AL,#83                ; [CPU_] |1210| 
        B         $C$L339,EQ            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        CMPB      AL,#87                ; [CPU_] |1210| 
        B         $C$L337,EQ            ; [CPU_] |1210| 
        ; branchcc occurs ; [] |1210| 
        B         $C$L626,UNC           ; [CPU_] |1210| 
        ; branch occurs ; [] |1210| 
$C$L329:    
	.dwpsn	file "../Source/prod.c",line 1227,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1227| 
        MOVL      XAR0,#44              ; [CPU_] |1227| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1227| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1227| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1227| 
        MOVL      XAR4,XAR1             ; [CPU_] |1227| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_sprintf")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1227| 
        ; call occurs [#_sprintf] ; [] |1227| 
	.dwpsn	file "../Source/prod.c",line 1228,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1228| 
        MOV       AL,#1024              ; [CPU_] |1228| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1228| 
	.dwpsn	file "../Source/prod.c",line 1227,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1227| 
	.dwpsn	file "../Source/prod.c",line 1228,column 6,is_stmt,isa 0
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1228| 
        ; call occurs [#_scia_getparam] ; [] |1228| 
        CMPB      AL,#31                ; [CPU_] |1228| 
        B         $C$L330,LOS           ; [CPU_] |1228| 
        ; branchcc occurs ; [] |1228| 
	.dwpsn	file "../Source/prod.c",line 1232,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1232| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1232| 
	.dwpsn	file "../Source/prod.c",line 1231,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1231| 
	.dwpsn	file "../Source/prod.c",line 1232,column 7,is_stmt,isa 0
        MOVB      XAR1,#31              ; [CPU_] |1232| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1232| 
$C$L330:    
	.dwpsn	file "../Source/prod.c",line 1235,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1235| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1235| 
        MOVL      XAR0,#86              ; [CPU_] |1235| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1235| 
        MOVB      AH,#1                 ; [CPU_] |1235| 
        ADD       AH,AL                 ; [CPU_] |1235| 
        MOVU      ACC,AH                ; [CPU_] |1235| 
        MOVL      XAR5,XAR1             ; [CPU_] |1235| 
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_memcpy")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1235| 
        ; call occurs [#_memcpy] ; [] |1235| 
        MOVL      XAR4,XAR1             ; [CPU_] |1235| 
	.dwpsn	file "../Source/prod.c",line 1239,column 6,is_stmt,isa 0
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_puts")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1239| 
        ; call occurs [#_scia_puts] ; [] |1239| 
	.dwpsn	file "../Source/prod.c",line 1240,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1240| 
	.dwpsn	file "../Source/prod.c",line 1242,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1242| 
        ; branch occurs ; [] |1242| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1332,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1332| 
        MOVB      XAR0,#34              ; [CPU_] |1332| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1332| 
        CMPB      AL,#3                 ; [CPU_] |1332| 
        B         $C$L336,EQ            ; [CPU_] |1332| 
        ; branchcc occurs ; [] |1332| 
        MOVB      XAR1,#34              ; [CPU_] |1332| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1332| 
        CMPB      AL,#2                 ; [CPU_] |1332| 
        B         $C$L336,EQ            ; [CPU_] |1332| 
        ; branchcc occurs ; [] |1332| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1339,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1339| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1339| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1340,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1340| 
        MOVL      XAR0,#44              ; [CPU_] |1340| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1340| 
        MOV       *-SP[3],AL            ; [CPU_] |1340| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1340| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1340| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1340| 
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_sprintf")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1340| 
        ; call occurs [#_sprintf] ; [] |1340| 
        MOVL      XAR0,#44              ; [CPU_] |1340| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1340| 
	.dwpsn	file "../Source/prod.c",line 1341,column 7,is_stmt,isa 0
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_scia_puts")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1341| 
        ; call occurs [#_scia_puts] ; [] |1341| 
        MOV       AL,*-SP[47]           ; [CPU_] |1341| 
	.dwpsn	file "../Source/prod.c",line 1342,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1342| 
        B         $C$L333,GEQ           ; [CPU_] |1342| 
        ; branchcc occurs ; [] |1342| 
	.dwpsn	file "../Source/prod.c",line 1343,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1343| 
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_scia_puts")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1343| 
        ; call occurs [#_scia_puts] ; [] |1343| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1339,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1339| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1339| 
        B         $C$L332,LT            ; [CPU_] |1339| 
        ; branchcc occurs ; [] |1339| 
	.dwpsn	file "../Source/prod.c",line 1346,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1346| 
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_scia_puts")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1346| 
        ; call occurs [#_scia_puts] ; [] |1346| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1347,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1347| 
        MOVB      XAR0,#35              ; [CPU_] |1347| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1347| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1347| 
        MOV       *-SP[3],AL            ; [CPU_] |1347| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1347| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1347| 
        MOVL      XAR0,#74              ; [CPU_] |1347| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1347| 
        ADDL      ACC,XAR6              ; [CPU_] |1347| 
        MOVL      XAR4,ACC              ; [CPU_] |1347| 
        MOVL      XAR0,#44              ; [CPU_] |1347| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1347| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1347| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1347| 
        MOVL      XAR4,XAR1             ; [CPU_] |1347| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_sprintf")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1347| 
        ; call occurs [#_sprintf] ; [] |1347| 
	.dwpsn	file "../Source/prod.c",line 1350,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1350| 
	.dwpsn	file "../Source/prod.c",line 1347,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1347| 
	.dwpsn	file "../Source/prod.c",line 1350,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1350| 
	.dwpsn	file "../Source/prod.c",line 1347,column 6,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |1347| 
	.dwpsn	file "../Source/prod.c",line 1350,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1350| 
        MOVL      XAR5,XAR1             ; [CPU_] |1350| 
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1350| 
        ; call occurs [#_scia_getparam] ; [] |1350| 
        MOVL      XAR4,XAR1             ; [CPU_] |1350| 
	.dwpsn	file "../Source/prod.c",line 1351,column 6,is_stmt,isa 0
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_scia_puts")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1351| 
        ; call occurs [#_scia_puts] ; [] |1351| 
	.dwpsn	file "../Source/prod.c",line 1352,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1352| 
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_scia_puts")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1352| 
        ; call occurs [#_scia_puts] ; [] |1352| 
        MOV       AL,*-SP[47]           ; [CPU_] |1352| 
	.dwpsn	file "../Source/prod.c",line 1353,column 6,is_stmt,isa 0
        B         $C$L335,EQ            ; [CPU_] |1353| 
        ; branchcc occurs ; [] |1353| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_atoi")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1358| 
        ; call occurs [#_atoi] ; [] |1358| 
        CMPB      AL,#7                 ; [CPU_] |1358| 
        B         $C$L334,HI            ; [CPU_] |1358| 
        ; branchcc occurs ; [] |1358| 
	.dwpsn	file "../Source/prod.c",line 1364,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1364| 
        MOVB      XAR1,#35              ; [CPU_] |1364| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1364| 
	.dwpsn	file "../Source/prod.c",line 1365,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1365| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1364,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1364| 
	.dwpsn	file "../Source/prod.c",line 1365,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1365| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1365| 
        MOVL      XAR0,#74              ; [CPU_] |1365| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1365| 
	.dwpsn	file "../Source/prod.c",line 1372,column 6,is_stmt,isa 0
        B         $C$L345,UNC           ; [CPU_] |1372| 
        ; branch occurs ; [] |1372| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1360,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1360| 
	.dwpsn	file "../Source/prod.c",line 1362,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1362| 
        ; branch occurs ; [] |1362| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1354,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1354| 
	.dwpsn	file "../Source/prod.c",line 1356,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1356| 
        ; branch occurs ; [] |1356| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1334,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1334| 
	.dwpsn	file "../Source/prod.c",line 1336,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1336| 
        ; branch occurs ; [] |1336| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1405,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1405| 
        MOVB      XAR0,#40              ; [CPU_] |1405| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1405| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1405| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1405| 
        MOVL      XAR0,#44              ; [CPU_] |1405| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1405| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1405| 
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_sprintf")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1405| 
        ; call occurs [#_sprintf] ; [] |1405| 
        MOVL      XAR0,#44              ; [CPU_] |1405| 
	.dwpsn	file "../Source/prod.c",line 1407,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1407| 
	.dwpsn	file "../Source/prod.c",line 1405,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1405| 
	.dwpsn	file "../Source/prod.c",line 1407,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1407| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1407| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1407| 
        ; call occurs [#_scia_getparam] ; [] |1407| 
        MOVL      XAR0,#86              ; [CPU_] |1407| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1407,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1407| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_strtod")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1408,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1408| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1408| 
        MOVB      XAR1,#40              ; [CPU_] |1408| 
        MOVL      XAR0,#86              ; [CPU_] |1408| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1408| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1408| 
	.dwpsn	file "../Source/prod.c",line 1409,column 6,is_stmt,isa 0
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_scia_puts")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1409| 
        ; call occurs [#_scia_puts] ; [] |1409| 
	.dwpsn	file "../Source/prod.c",line 1410,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1410| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_puts")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1410| 
        ; call occurs [#_scia_puts] ; [] |1410| 
	.dwpsn	file "../Source/prod.c",line 1412,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1412| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1412| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1412| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1412| 
        MOVB      XAR1,#40              ; [CPU_] |1412| 
        MOVL      XAR0,#44              ; [CPU_] |1412| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1412| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1412| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1412| 
        MOVL      XAR4,XAR1             ; [CPU_] |1412| 
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_sprintf")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1412| 
        ; call occurs [#_sprintf] ; [] |1412| 
        MOVL      XAR4,XAR1             ; [CPU_] |1412| 
	.dwpsn	file "../Source/prod.c",line 1414,column 6,is_stmt,isa 0
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_puts")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1414| 
        ; call occurs [#_scia_puts] ; [] |1414| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1418,column 6,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1418| 
        ; call occurs [#_ad7738_setcal] ; [] |1418| 
$C$L338:    
	.dwpsn	file "../Source/prod.c",line 1419,column 6,is_stmt,isa 0
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_maf_rst")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1419| 
        ; call occurs [#_maf_rst] ; [] |1419| 
	.dwpsn	file "../Source/prod.c",line 1421,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |1421| 
        ; branch occurs ; [] |1421| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1215,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1215| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1215| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1215| 
        MOV       AL,#1024              ; [CPU_] |1215| 
        MOVL      XAR5,XAR1             ; [CPU_] |1215| 
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1215| 
        ; call occurs [#_scia_getparam] ; [] |1215| 
        MOVL      XAR4,XAR1             ; [CPU_] |1215| 
	.dwpsn	file "../Source/prod.c",line 1217,column 6,is_stmt,isa 0
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_atol")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1217| 
        ; call occurs [#_atol] ; [] |1217| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1217| 
	.dwpsn	file "../Source/prod.c",line 1219,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1219| 
	.dwpsn	file "../Source/prod.c",line 1217,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1217| 
	.dwpsn	file "../Source/prod.c",line 1219,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1219| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1219| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1219| 
$C$L340:    
        MOVL      XAR0,#44              ; [CPU_] |1219| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1219| 
        MOVL      XAR4,XAR1             ; [CPU_] |1219| 
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_sprintf")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1219| 
        ; call occurs [#_sprintf] ; [] |1219| 
        MOVL      XAR4,XAR1             ; [CPU_] |1219| 
$C$L341:    
	.dwpsn	file "../Source/prod.c",line 1220,column 6,is_stmt,isa 0
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1220| 
        ; call occurs [#_scia_puts] ; [] |1220| 
	.dwpsn	file "../Source/prod.c",line 1222,column 6,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |1222| 
        ; branch occurs ; [] |1222| 
$C$L342:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1297,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1297| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] |1297| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1298,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1298| 
        MOVL      XAR0,#44              ; [CPU_] |1298| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1298| 
        MOV       *-SP[3],AL            ; [CPU_] |1298| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1298| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1298| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1298| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_sprintf")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1298| 
        ; call occurs [#_sprintf] ; [] |1298| 
        MOVL      XAR0,#44              ; [CPU_] |1298| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1298| 
	.dwpsn	file "../Source/prod.c",line 1299,column 7,is_stmt,isa 0
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_scia_puts")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1299| 
        ; call occurs [#_scia_puts] ; [] |1299| 
        MOV       AL,*-SP[47]           ; [CPU_] |1299| 
	.dwpsn	file "../Source/prod.c",line 1300,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1300| 
        B         $C$L344,GEQ           ; [CPU_] |1300| 
        ; branchcc occurs ; [] |1300| 
	.dwpsn	file "../Source/prod.c",line 1301,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1301| 
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_scia_puts")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1301| 
        ; call occurs [#_scia_puts] ; [] |1301| 
$C$L344:    
	.dwpsn	file "../Source/prod.c",line 1297,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1297| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1297| 
        B         $C$L343,LT            ; [CPU_] |1297| 
        ; branchcc occurs ; [] |1297| 
	.dwpsn	file "../Source/prod.c",line 1304,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1304| 
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_scia_puts")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1304| 
        ; call occurs [#_scia_puts] ; [] |1304| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1305| 
        MOVB      XAR0,#34              ; [CPU_] |1305| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1305| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1305| 
        MOV       *-SP[3],AL            ; [CPU_] |1305| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1305| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1305| 
        MOVL      XAR0,#72              ; [CPU_] |1305| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1305| 
        ADDL      ACC,XAR6              ; [CPU_] |1305| 
        MOVL      XAR4,ACC              ; [CPU_] |1305| 
        MOVL      XAR0,#44              ; [CPU_] |1305| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1305| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1305| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1305| 
        MOVL      XAR4,XAR1             ; [CPU_] |1305| 
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_sprintf")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1305| 
        ; call occurs [#_sprintf] ; [] |1305| 
	.dwpsn	file "../Source/prod.c",line 1307,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1307| 
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1305| 
	.dwpsn	file "../Source/prod.c",line 1307,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1307| 
        MOV       AL,#1024              ; [CPU_] |1307| 
        MOVL      XAR5,XAR1             ; [CPU_] |1307| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1307| 
        ; call occurs [#_scia_getparam] ; [] |1307| 
        MOV       *-SP[47],AL           ; [CPU_] |1307| 
        MOVL      XAR4,XAR1             ; [CPU_] |1307| 
	.dwpsn	file "../Source/prod.c",line 1308,column 6,is_stmt,isa 0
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_scia_puts")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1308| 
        ; call occurs [#_scia_puts] ; [] |1308| 
	.dwpsn	file "../Source/prod.c",line 1309,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1309| 
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1309| 
        ; call occurs [#_scia_puts] ; [] |1309| 
        MOV       AL,*-SP[47]           ; [CPU_] |1309| 
	.dwpsn	file "../Source/prod.c",line 1310,column 6,is_stmt,isa 0
        B         $C$L347,EQ            ; [CPU_] |1310| 
        ; branchcc occurs ; [] |1310| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_atoi")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1314| 
        ; call occurs [#_atoi] ; [] |1314| 
        CMPB      AL,#3                 ; [CPU_] |1314| 
        B         $C$L346,HI            ; [CPU_] |1314| 
        ; branchcc occurs ; [] |1314| 
	.dwpsn	file "../Source/prod.c",line 1320,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1320| 
        MOVB      XAR1,#34              ; [CPU_] |1320| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1320| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1321| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1321| 
	.dwpsn	file "../Source/prod.c",line 1320,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1320| 
	.dwpsn	file "../Source/prod.c",line 1321,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1321| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1321| 
        MOVL      XAR0,#72              ; [CPU_] |1321| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1321| 
$C$L345:    
        ADDL      ACC,XAR6              ; [CPU_] |1321| 
        MOVL      XAR4,ACC              ; [CPU_] |1321| 
        MOVL      XAR0,#44              ; [CPU_] |1321| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1321| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1321| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1321| 
        MOVL      XAR4,XAR1             ; [CPU_] |1321| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_sprintf")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1321| 
        ; call occurs [#_sprintf] ; [] |1321| 
        MOVL      XAR4,XAR1             ; [CPU_] |1321| 
	.dwpsn	file "../Source/prod.c",line 1324,column 6,is_stmt,isa 0
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_puts")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1324| 
        ; call occurs [#_scia_puts] ; [] |1324| 
	.dwpsn	file "../Source/prod.c",line 1325,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1325| 
	.dwpsn	file "../Source/prod.c",line 1328,column 6,is_stmt,isa 0
        B         $C$L341,UNC           ; [CPU_] |1328| 
        ; branch occurs ; [] |1328| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1316,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1316| 
	.dwpsn	file "../Source/prod.c",line 1318,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1318| 
        ; branch occurs ; [] |1318| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1311,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1311| 
	.dwpsn	file "../Source/prod.c",line 1312,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |1312| 
        ; branch occurs ; [] |1312| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1378,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1378| 
        MOVL      XAR0,#44              ; [CPU_] |1378| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1378| 
        MOV       *-SP[3],#4096         ; [CPU_] |1378| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1378| 
        MOVL      XAR4,XAR1             ; [CPU_] |1378| 
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_sprintf")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1378| 
        ; call occurs [#_sprintf] ; [] |1378| 
	.dwpsn	file "../Source/prod.c",line 1380,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1378,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1378| 
	.dwpsn	file "../Source/prod.c",line 1380,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1380| 
        MOV       AL,#1024              ; [CPU_] |1380| 
        MOVL      XAR5,XAR1             ; [CPU_] |1380| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1380| 
        ; call occurs [#_scia_getparam] ; [] |1380| 
	.dwpsn	file "../Source/prod.c",line 1381,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1381| 
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_atoi")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1381| 
        ; call occurs [#_atoi] ; [] |1381| 
        MOV       *-SP[47],AL           ; [CPU_] |1381| 
	.dwpsn	file "../Source/prod.c",line 1382,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1382| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_scia_puts")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1382| 
        ; call occurs [#_scia_puts] ; [] |1382| 
        MOV       AL,*-SP[47]           ; [CPU_] |1382| 
	.dwpsn	file "../Source/prod.c",line 1384,column 8,is_stmt,isa 0
        B         $C$L349,LEQ           ; [CPU_] |1384| 
        ; branchcc occurs ; [] |1384| 
        CMP       AL,#4096              ; [CPU_] |1384| 
        B         $C$L349,GT            ; [CPU_] |1384| 
        ; branchcc occurs ; [] |1384| 
	.dwpsn	file "../Source/prod.c",line 1389,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1389| 
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_scia_puts")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1389| 
        ; call occurs [#_scia_puts] ; [] |1389| 
	.dwpsn	file "../Source/prod.c",line 1391,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1391| 
        MOVL      XAR0,#44              ; [CPU_] |1391| 
        MOV       AL,*-SP[47]           ; [CPU_] |1391| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1391| 
        MOV       *-SP[3],AL            ; [CPU_] |1391| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1391| 
        MOVL      XAR4,XAR1             ; [CPU_] |1391| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_sprintf")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1391| 
        ; call occurs [#_sprintf] ; [] |1391| 
        MOVL      XAR4,XAR1             ; [CPU_] |1391| 
	.dwpsn	file "../Source/prod.c",line 1393,column 6,is_stmt,isa 0
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_scia_puts")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1393| 
        ; call occurs [#_scia_puts] ; [] |1393| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1398,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1398| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1398| 
        MOV       AL,*-SP[47]           ; [CPU_] |1398| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1398| 
	.dwpsn	file "../Source/prod.c",line 1401,column 6,is_stmt,isa 0
        B         $C$L338,UNC           ; [CPU_] |1401| 
        ; branch occurs ; [] |1401| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1386,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1386| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_scia_puts")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1386| 
        ; call occurs [#_scia_puts] ; [] |1386| 
	.dwpsn	file "../Source/prod.c",line 1377,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1377| 
        ; branch occurs ; [] |1377| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1249| 
        MOVL      XAR0,#44              ; [CPU_] |1249| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1249| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1249| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1249| 
        MOVL      XAR4,XAR1             ; [CPU_] |1249| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_sprintf")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1249| 
        ; call occurs [#_sprintf] ; [] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1250| 
	.dwpsn	file "../Source/prod.c",line 1249,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1249| 
	.dwpsn	file "../Source/prod.c",line 1250,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1250| 
        MOV       AL,#1024              ; [CPU_] |1250| 
        MOVL      XAR5,XAR1             ; [CPU_] |1250| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1250| 
        ; call occurs [#_scia_getparam] ; [] |1250| 
	.dwpsn	file "../Source/prod.c",line 1251,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1251| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_atoi")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1251| 
        ; call occurs [#_atoi] ; [] |1251| 
        MOV       *-SP[58],AL           ; [CPU_] |1251| 
	.dwpsn	file "../Source/prod.c",line 1252,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1252| 
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_scia_puts")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1252| 
        ; call occurs [#_scia_puts] ; [] |1252| 
        MOV       AL,*-SP[58]           ; [CPU_] |1252| 
	.dwpsn	file "../Source/prod.c",line 1254,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1254| 
        CMPB      AL,#4                 ; [CPU_] |1254| 
        B         $C$L353,HIS           ; [CPU_] |1254| 
        ; branchcc occurs ; [] |1254| 
	.dwpsn	file "../Source/prod.c",line 1258,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1258| 
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_scia_puts")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1258| 
        ; call occurs [#_scia_puts] ; [] |1258| 
	.dwpsn	file "../Source/prod.c",line 1259,column 6,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1259| 
$C$L351:    
	.dwpsn	file "../Source/prod.c",line 1264,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1264| 
        MOVL      XAR0,#44              ; [CPU_] |1264| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1264| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1264| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1264| 
        MOVL      XAR4,XAR1             ; [CPU_] |1264| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_sprintf")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1264| 
        ; call occurs [#_sprintf] ; [] |1264| 
	.dwpsn	file "../Source/prod.c",line 1265,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1265| 
	.dwpsn	file "../Source/prod.c",line 1264,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1264| 
	.dwpsn	file "../Source/prod.c",line 1265,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1265| 
        MOV       AL,#1024              ; [CPU_] |1265| 
        MOVL      XAR5,XAR1             ; [CPU_] |1265| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1265| 
        ; call occurs [#_scia_getparam] ; [] |1265| 
	.dwpsn	file "../Source/prod.c",line 1266,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1266| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_atoi")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1266| 
        ; call occurs [#_atoi] ; [] |1266| 
        MOV       *-SP[57],AL           ; [CPU_] |1266| 
	.dwpsn	file "../Source/prod.c",line 1267,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1267| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_scia_puts")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1267| 
        ; call occurs [#_scia_puts] ; [] |1267| 
        MOV       AL,*-SP[57]           ; [CPU_] |1267| 
	.dwpsn	file "../Source/prod.c",line 1271,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1271| 
        CMPB      AL,#20                ; [CPU_] |1271| 
        B         $C$L352,HIS           ; [CPU_] |1271| 
        ; branchcc occurs ; [] |1271| 
	.dwpsn	file "../Source/prod.c",line 1275,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1275| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1275| 
        ; call occurs [#_scia_puts] ; [] |1275| 
	.dwpsn	file "../Source/prod.c",line 1278,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1278| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1278| 
        MOVL      XAR0,#44              ; [CPU_] |1278| 
        MOV       AH,*-SP[57]           ; [CPU_] |1278| 
        ADD       AL,*-SP[58]           ; [CPU_] |1278| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1278| 
        MOV       *-SP[3],AL            ; [CPU_] |1278| 
        MOV       *-SP[4],AH            ; [CPU_] |1278| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1278| 
        DEC       *-SP[57]              ; [CPU_] |1278| 
        MOVL      XAR4,XAR1             ; [CPU_] |1278| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_sprintf")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1278| 
        ; call occurs [#_sprintf] ; [] |1278| 
        MOVL      XAR4,XAR1             ; [CPU_] |1278| 
	.dwpsn	file "../Source/prod.c",line 1280,column 6,is_stmt,isa 0
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_scia_puts")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1280| 
        ; call occurs [#_scia_puts] ; [] |1280| 
        MOV       AL,*-SP[57]           ; [CPU_] |1280| 
	.dwpsn	file "../Source/prod.c",line 1281,column 6,is_stmt,isa 0
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_print_sensor")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1281| 
        ; call occurs [#_print_sensor] ; [] |1281| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1285,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1285| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1285| 
        MOVB      AL,#10                ; [CPU_] |1285| 
        MOV       T,*-SP[58]            ; [CPU_] |1285| 
        MPYU      ACC,T,AL              ; [CPU_] |1285| 
        ADDL      ACC,XAR6              ; [CPU_] |1285| 
        MOVL      XAR4,ACC              ; [CPU_] |1285| 
        MOVB      XAR0,#42              ; [CPU_] |1285| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] |1285| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1285| 
	.dwpsn	file "../Source/prod.c",line 1286,column 6,is_stmt,isa 0
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1286| 
        ; call occurs [#_ad7738_setcal] ; [] |1286| 
        MOVL      XAR0,#78              ; [CPU_] |1286| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1286| 
	.dwpsn	file "../Source/prod.c",line 1288,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1288| 
        MOVL      XAR1,ACC              ; [CPU_] |1288| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1288| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1288| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1288| 
	.dwpsn	file "../Source/prod.c",line 1289,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1289| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1289| 
        ; call occurs [#_ad7738_resetvall] ; [] |1289| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1293,column 6,is_stmt,isa 0
        B         $C$L529,UNC           ; [CPU_] |1293| 
        ; branch occurs ; [] |1293| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 1273,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1273| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_scia_puts")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1273| 
        ; call occurs [#_scia_puts] ; [] |1273| 
	.dwpsn	file "../Source/prod.c",line 1263,column 6,is_stmt,isa 0
        B         $C$L351,UNC           ; [CPU_] |1263| 
        ; branch occurs ; [] |1263| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 1256,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1256| 
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_puts")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1256| 
        ; call occurs [#_scia_puts] ; [] |1256| 
	.dwpsn	file "../Source/prod.c",line 1248,column 6,is_stmt,isa 0
        B         $C$L350,UNC           ; [CPU_] |1248| 
        ; branch occurs ; [] |1248| 
$C$L354:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2109,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2109| 
        B         $C$L626,LO            ; [CPU_] |2109| 
        ; branchcc occurs ; [] |2109| 
	.dwpsn	file "../Source/prod.c",line 2114,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2114| 
        CMPB      AL,#78                ; [CPU_] |2114| 
        B         $C$L355,EQ            ; [CPU_] |2114| 
        ; branchcc occurs ; [] |2114| 
        CMPB      AL,#85                ; [CPU_] |2114| 
        B         $C$L355,EQ            ; [CPU_] |2114| 
        ; branchcc occurs ; [] |2114| 
        CMPB      AL,#66                ; [CPU_] |2114| 
        B         $C$L355,EQ            ; [CPU_] |2114| 
        ; branchcc occurs ; [] |2114| 
        CMPB      AL,#68                ; [CPU_] |2114| 
        B         $C$L626,NEQ           ; [CPU_] |2114| 
        ; branchcc occurs ; [] |2114| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 2117,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2117| 
	.dwpsn	file "../Source/prod.c",line 2138,column 5,is_stmt,isa 0
        MOV       *-SP[47],#20          ; [CPU_] |2138| 
$C$L356:    
	.dwpsn	file "../Source/prod.c",line 2140,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2140| 
        MOVL      XAR0,#44              ; [CPU_] |2140| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2140| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2140| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2140| 
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_sprintf")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2140| 
        ; call occurs [#_sprintf] ; [] |2140| 
        MOVL      XAR0,#44              ; [CPU_] |2140| 
	.dwpsn	file "../Source/prod.c",line 2141,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2141| 
	.dwpsn	file "../Source/prod.c",line 2140,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2140| 
	.dwpsn	file "../Source/prod.c",line 2141,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2141| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2141| 
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2141| 
        ; call occurs [#_scia_getparam] ; [] |2141| 
        MOVL      XAR0,#86              ; [CPU_] |2141| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2141| 
	.dwpsn	file "../Source/prod.c",line 2142,column 6,is_stmt,isa 0
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_atoi")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2142| 
        ; call occurs [#_atoi] ; [] |2142| 
        MOVL      XAR0,#86              ; [CPU_] |2142| 
        MOV       *-SP[57],AL           ; [CPU_] |2142| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2142| 
	.dwpsn	file "../Source/prod.c",line 2143,column 6,is_stmt,isa 0
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_scia_puts")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2143| 
        ; call occurs [#_scia_puts] ; [] |2143| 
        MOV       AL,*-SP[57]           ; [CPU_] |2143| 
	.dwpsn	file "../Source/prod.c",line 2147,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2147| 
        CMPB      AL,#20                ; [CPU_] |2147| 
        B         $C$L416,HIS           ; [CPU_] |2147| 
        ; branchcc occurs ; [] |2147| 
	.dwpsn	file "../Source/prod.c",line 2151,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2151| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_puts")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2151| 
        ; call occurs [#_scia_puts] ; [] |2151| 
	.dwpsn	file "../Source/prod.c",line 2152,column 5,is_stmt,isa 0
        DEC       *-SP[57]              ; [CPU_] |2152| 
	.dwpsn	file "../Source/prod.c",line 2154,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2154| 
        CMPB      AL,#66                ; [CPU_] |2154| 
        B         $C$L411,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#68                ; [CPU_] |2154| 
        B         $C$L408,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#78                ; [CPU_] |2154| 
        B         $C$L406,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#85                ; [CPU_] |2154| 
        B         $C$L626,NEQ           ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
	.dwpsn	file "../Source/prod.c",line 2183,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2183| 
	.dwpsn	file "../Source/prod.c",line 2181,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2181| 
        MOV       AH,#0                 ; [CPU_] |2181| 
	.dwpsn	file "../Source/prod.c",line 2183,column 6,is_stmt,isa 0
        MOV       T,*-SP[57]            ; [CPU_] |2183| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2183| 
	.dwpsn	file "../Source/prod.c",line 2181,column 6,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |2181| 
	.dwpsn	file "../Source/prod.c",line 2183,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2183| 
        MPYU      ACC,T,AL              ; [CPU_] |2183| 
        ADDL      ACC,XAR6              ; [CPU_] |2183| 
        ADDB      ACC,#124              ; [CPU_] |2183| 
        MOVL      XAR1,ACC              ; [CPU_] |2183| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2183| 
        CMPB      AL,#35                ; [CPU_] |2183| 
        B         $C$L357,GT            ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
        CMPB      AL,#35                ; [CPU_] |2183| 
        B         $C$L373,EQ            ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
        CMPB      AL,#16                ; [CPU_] |2183| 
        B         $C$L393,EQ            ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
        CMPB      AL,#17                ; [CPU_] |2183| 
        B         $C$L389,EQ            ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
        CMPB      AL,#34                ; [CPU_] |2183| 
        B         $C$L380,EQ            ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
        B         $C$L397,UNC           ; [CPU_] |2183| 
        ; branch occurs ; [] |2183| 
$C$L357:    
        CMPB      AL,#36                ; [CPU_] |2183| 
        B         $C$L366,EQ            ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
        CMPB      AL,#53                ; [CPU_] |2183| 
        B         $C$L362,EQ            ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
        CMPB      AL,#70                ; [CPU_] |2183| 
        B         $C$L397,NEQ           ; [CPU_] |2183| 
        ; branchcc occurs ; [] |2183| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2372,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2372| 
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2372| 
        MOV       AL,#1024              ; [CPU_] |2372| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2372| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2372| 
        ; call occurs [#_scia_getparam] ; [] |2372| 
        MOVL      XAR0,#86              ; [CPU_] |2372| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2372| 
	.dwpsn	file "../Source/prod.c",line 2374,column 8,is_stmt,isa 0
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_atoi")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2374| 
        ; call occurs [#_atoi] ; [] |2374| 
        MOVL      XAR0,#86              ; [CPU_] |2374| 
        MOV       *-SP[47],AL           ; [CPU_] |2374| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2374| 
	.dwpsn	file "../Source/prod.c",line 2375,column 8,is_stmt,isa 0
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_scia_puts")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2375| 
        ; call occurs [#_scia_puts] ; [] |2375| 
        MOV       AL,*-SP[47]           ; [CPU_] |2375| 
	.dwpsn	file "../Source/prod.c",line 2376,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2376| 
        B         $C$L359,EQ            ; [CPU_] |2376| 
        ; branchcc occurs ; [] |2376| 
        CMPB      AL,#7                 ; [CPU_] |2376| 
        B         $C$L360,EQ            ; [CPU_] |2376| 
        ; branchcc occurs ; [] |2376| 
	.dwpsn	file "../Source/prod.c",line 2377,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2377| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_scia_puts")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2377| 
        ; call occurs [#_scia_puts] ; [] |2377| 
$C$L359:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2379,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2379| 
        B         $C$L360,EQ            ; [CPU_] |2379| 
        ; branchcc occurs ; [] |2379| 
        CMPB      AL,#7                 ; [CPU_] |2379| 
        B         $C$L358,NEQ           ; [CPU_] |2379| 
        ; branchcc occurs ; [] |2379| 
$C$L360:    
	.dwpsn	file "../Source/prod.c",line 2380,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2380| 
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_puts")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2380| 
        ; call occurs [#_scia_puts] ; [] |2380| 
        MOV       AL,*-SP[47]           ; [CPU_] |2380| 
	.dwpsn	file "../Source/prod.c",line 2382,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2382| 
        B         $C$L361,EQ            ; [CPU_] |2382| 
        ; branchcc occurs ; [] |2382| 
        CMPB      AL,#7                 ; [CPU_] |2382| 
        B         $C$L396,EQ            ; [CPU_] |2382| 
        ; branchcc occurs ; [] |2382| 
        B         $C$L397,UNC           ; [CPU_] |2382| 
        ; branch occurs ; [] |2382| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2384,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2384| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2384| 
        MOV       AL,*-SP[47]           ; [CPU_] |2384| 
	.dwpsn	file "../Source/prod.c",line 2385,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2385| 
	.dwpsn	file "../Source/prod.c",line 2386,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2386| 
        ; branch occurs ; [] |2386| 
$C$L362:    
	.dwpsn	file "../Source/prod.c",line 2347,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2347| 
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2347| 
        MOV       AL,#1024              ; [CPU_] |2347| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2347| 
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2347| 
        ; call occurs [#_scia_getparam] ; [] |2347| 
        MOVL      XAR0,#86              ; [CPU_] |2347| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2347| 
	.dwpsn	file "../Source/prod.c",line 2349,column 8,is_stmt,isa 0
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_atoi")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2349| 
        ; call occurs [#_atoi] ; [] |2349| 
        MOVL      XAR0,#86              ; [CPU_] |2349| 
        MOV       *-SP[47],AL           ; [CPU_] |2349| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2349| 
	.dwpsn	file "../Source/prod.c",line 2350,column 8,is_stmt,isa 0
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_scia_puts")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2350| 
        ; call occurs [#_scia_puts] ; [] |2350| 
        MOV       AL,*-SP[47]           ; [CPU_] |2350| 
	.dwpsn	file "../Source/prod.c",line 2351,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2351| 
        B         $C$L363,EQ            ; [CPU_] |2351| 
        ; branchcc occurs ; [] |2351| 
        CMPB      AL,#7                 ; [CPU_] |2351| 
        B         $C$L364,EQ            ; [CPU_] |2351| 
        ; branchcc occurs ; [] |2351| 
	.dwpsn	file "../Source/prod.c",line 2352,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2352| 
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_puts")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2352| 
        ; call occurs [#_scia_puts] ; [] |2352| 
$C$L363:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2354,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2354| 
        B         $C$L364,EQ            ; [CPU_] |2354| 
        ; branchcc occurs ; [] |2354| 
        CMPB      AL,#7                 ; [CPU_] |2354| 
        B         $C$L362,NEQ           ; [CPU_] |2354| 
        ; branchcc occurs ; [] |2354| 
$C$L364:    
	.dwpsn	file "../Source/prod.c",line 2355,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2355| 
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_scia_puts")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2355| 
        ; call occurs [#_scia_puts] ; [] |2355| 
        MOV       AL,*-SP[47]           ; [CPU_] |2355| 
	.dwpsn	file "../Source/prod.c",line 2357,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2357| 
        B         $C$L365,EQ            ; [CPU_] |2357| 
        ; branchcc occurs ; [] |2357| 
        CMPB      AL,#7                 ; [CPU_] |2357| 
        B         $C$L396,EQ            ; [CPU_] |2357| 
        ; branchcc occurs ; [] |2357| 
        B         $C$L397,UNC           ; [CPU_] |2357| 
        ; branch occurs ; [] |2357| 
$C$L365:    
	.dwpsn	file "../Source/prod.c",line 2359,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2359| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2359| 
        MOV       AL,*-SP[47]           ; [CPU_] |2359| 
	.dwpsn	file "../Source/prod.c",line 2360,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2360| 
	.dwpsn	file "../Source/prod.c",line 2361,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2361| 
        ; branch occurs ; [] |2361| 
$C$L366:    
	.dwpsn	file "../Source/prod.c",line 2313,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2313| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2313| 
        MOV       AL,#1024              ; [CPU_] |2313| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2313| 
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2313| 
        ; call occurs [#_scia_getparam] ; [] |2313| 
        MOVL      XAR0,#86              ; [CPU_] |2313| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2313| 
	.dwpsn	file "../Source/prod.c",line 2316,column 8,is_stmt,isa 0
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_atoi")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2316| 
        ; call occurs [#_atoi] ; [] |2316| 
        MOVL      XAR0,#86              ; [CPU_] |2316| 
        MOV       *-SP[47],AL           ; [CPU_] |2316| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2316| 
	.dwpsn	file "../Source/prod.c",line 2317,column 8,is_stmt,isa 0
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_puts")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2317| 
        ; call occurs [#_scia_puts] ; [] |2317| 
        MOV       AL,*-SP[47]           ; [CPU_] |2317| 
	.dwpsn	file "../Source/prod.c",line 2318,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2318| 
        B         $C$L367,EQ            ; [CPU_] |2318| 
        ; branchcc occurs ; [] |2318| 
        CMPB      AL,#3                 ; [CPU_] |2318| 
        B         $C$L368,EQ            ; [CPU_] |2318| 
        ; branchcc occurs ; [] |2318| 
        CMPB      AL,#4                 ; [CPU_] |2318| 
        B         $C$L369,EQ            ; [CPU_] |2318| 
        ; branchcc occurs ; [] |2318| 
        CMPB      AL,#7                 ; [CPU_] |2318| 
        B         $C$L370,EQ            ; [CPU_] |2318| 
        ; branchcc occurs ; [] |2318| 
	.dwpsn	file "../Source/prod.c",line 2319,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2319| 
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_puts")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2319| 
        ; call occurs [#_scia_puts] ; [] |2319| 
$C$L367:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2321,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2321| 
        B         $C$L370,EQ            ; [CPU_] |2321| 
        ; branchcc occurs ; [] |2321| 
$C$L368:    
        CMPB      AL,#3                 ; [CPU_] |2321| 
        B         $C$L370,EQ            ; [CPU_] |2321| 
        ; branchcc occurs ; [] |2321| 
$C$L369:    
        CMPB      AL,#4                 ; [CPU_] |2321| 
        B         $C$L370,EQ            ; [CPU_] |2321| 
        ; branchcc occurs ; [] |2321| 
        CMPB      AL,#7                 ; [CPU_] |2321| 
        B         $C$L366,NEQ           ; [CPU_] |2321| 
        ; branchcc occurs ; [] |2321| 
$C$L370:    
	.dwpsn	file "../Source/prod.c",line 2322,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2322| 
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_scia_puts")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2322| 
        ; call occurs [#_scia_puts] ; [] |2322| 
        MOV       AL,*-SP[47]           ; [CPU_] |2322| 
	.dwpsn	file "../Source/prod.c",line 2324,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2324| 
        B         $C$L372,EQ            ; [CPU_] |2324| 
        ; branchcc occurs ; [] |2324| 
        CMPB      AL,#3                 ; [CPU_] |2324| 
        B         $C$L371,EQ            ; [CPU_] |2324| 
        ; branchcc occurs ; [] |2324| 
        CMPB      AL,#4                 ; [CPU_] |2324| 
        B         $C$L388,EQ            ; [CPU_] |2324| 
        ; branchcc occurs ; [] |2324| 
        CMPB      AL,#7                 ; [CPU_] |2324| 
        B         $C$L396,EQ            ; [CPU_] |2324| 
        ; branchcc occurs ; [] |2324| 
        B         $C$L397,UNC           ; [CPU_] |2324| 
        ; branch occurs ; [] |2324| 
$C$L371:    
	.dwpsn	file "../Source/prod.c",line 2330,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2330| 
        MOV       AH,#15820             ; [CPU_] |2330| 
	.dwpsn	file "../Source/prod.c",line 2332,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2332| 
        ; branch occurs ; [] |2332| 
$C$L372:    
	.dwpsn	file "../Source/prod.c",line 2326,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2326| 
        MOV       AH,#15649             ; [CPU_] |2326| 
	.dwpsn	file "../Source/prod.c",line 2328,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2328| 
        ; branch occurs ; [] |2328| 
$C$L373:    
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2279| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2279| 
        MOV       AL,#1024              ; [CPU_] |2279| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2279| 
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2279| 
        ; call occurs [#_scia_getparam] ; [] |2279| 
        MOVL      XAR0,#86              ; [CPU_] |2279| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2279| 
	.dwpsn	file "../Source/prod.c",line 2282,column 8,is_stmt,isa 0
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_atoi")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2282| 
        ; call occurs [#_atoi] ; [] |2282| 
        MOVL      XAR0,#86              ; [CPU_] |2282| 
        MOV       *-SP[47],AL           ; [CPU_] |2282| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2282| 
	.dwpsn	file "../Source/prod.c",line 2283,column 8,is_stmt,isa 0
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2283| 
        ; call occurs [#_scia_puts] ; [] |2283| 
        MOV       AL,*-SP[47]           ; [CPU_] |2283| 
	.dwpsn	file "../Source/prod.c",line 2284,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2284| 
        B         $C$L374,EQ            ; [CPU_] |2284| 
        ; branchcc occurs ; [] |2284| 
        CMPB      AL,#3                 ; [CPU_] |2284| 
        B         $C$L375,EQ            ; [CPU_] |2284| 
        ; branchcc occurs ; [] |2284| 
        CMPB      AL,#4                 ; [CPU_] |2284| 
        B         $C$L376,EQ            ; [CPU_] |2284| 
        ; branchcc occurs ; [] |2284| 
        CMPB      AL,#7                 ; [CPU_] |2284| 
        B         $C$L377,EQ            ; [CPU_] |2284| 
        ; branchcc occurs ; [] |2284| 
	.dwpsn	file "../Source/prod.c",line 2285,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2285| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_puts")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2285| 
        ; call occurs [#_scia_puts] ; [] |2285| 
$C$L374:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2287,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2287| 
        B         $C$L377,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
$C$L375:    
        CMPB      AL,#3                 ; [CPU_] |2287| 
        B         $C$L377,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
$C$L376:    
        CMPB      AL,#4                 ; [CPU_] |2287| 
        B         $C$L377,EQ            ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
        CMPB      AL,#7                 ; [CPU_] |2287| 
        B         $C$L373,NEQ           ; [CPU_] |2287| 
        ; branchcc occurs ; [] |2287| 
$C$L377:    
	.dwpsn	file "../Source/prod.c",line 2288,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2288| 
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_scia_puts")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2288| 
        ; call occurs [#_scia_puts] ; [] |2288| 
        MOV       AL,*-SP[47]           ; [CPU_] |2288| 
	.dwpsn	file "../Source/prod.c",line 2290,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2290| 
        B         $C$L379,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
        CMPB      AL,#3                 ; [CPU_] |2290| 
        B         $C$L388,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
        CMPB      AL,#4                 ; [CPU_] |2290| 
        B         $C$L378,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
        CMPB      AL,#7                 ; [CPU_] |2290| 
        B         $C$L396,EQ            ; [CPU_] |2290| 
        ; branchcc occurs ; [] |2290| 
        B         $C$L397,UNC           ; [CPU_] |2290| 
        ; branch occurs ; [] |2290| 
$C$L378:    
	.dwpsn	file "../Source/prod.c",line 2300,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2300| 
        MOV       AH,#16672             ; [CPU_] |2300| 
	.dwpsn	file "../Source/prod.c",line 2302,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2302| 
        ; branch occurs ; [] |2302| 
$C$L379:    
	.dwpsn	file "../Source/prod.c",line 2292,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2292| 
        MOV       AH,#16073             ; [CPU_] |2292| 
	.dwpsn	file "../Source/prod.c",line 2294,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2294| 
        ; branch occurs ; [] |2294| 
$C$L380:    
	.dwpsn	file "../Source/prod.c",line 2245,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2245| 
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2245| 
        MOV       AL,#1024              ; [CPU_] |2245| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2245| 
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2245| 
        ; call occurs [#_scia_getparam] ; [] |2245| 
        MOVL      XAR0,#86              ; [CPU_] |2245| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2245| 
	.dwpsn	file "../Source/prod.c",line 2248,column 8,is_stmt,isa 0
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_atoi")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2248| 
        ; call occurs [#_atoi] ; [] |2248| 
        MOVL      XAR0,#86              ; [CPU_] |2248| 
        MOV       *-SP[47],AL           ; [CPU_] |2248| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2248| 
	.dwpsn	file "../Source/prod.c",line 2249,column 8,is_stmt,isa 0
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2249| 
        ; call occurs [#_scia_puts] ; [] |2249| 
        MOV       AL,*-SP[47]           ; [CPU_] |2249| 
	.dwpsn	file "../Source/prod.c",line 2250,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2250| 
        B         $C$L381,EQ            ; [CPU_] |2250| 
        ; branchcc occurs ; [] |2250| 
        CMPB      AL,#3                 ; [CPU_] |2250| 
        B         $C$L382,EQ            ; [CPU_] |2250| 
        ; branchcc occurs ; [] |2250| 
        CMPB      AL,#4                 ; [CPU_] |2250| 
        B         $C$L383,EQ            ; [CPU_] |2250| 
        ; branchcc occurs ; [] |2250| 
        CMPB      AL,#7                 ; [CPU_] |2250| 
        B         $C$L384,EQ            ; [CPU_] |2250| 
        ; branchcc occurs ; [] |2250| 
	.dwpsn	file "../Source/prod.c",line 2251,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2251| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_puts")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2251| 
        ; call occurs [#_scia_puts] ; [] |2251| 
$C$L381:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2253,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2253| 
        B         $C$L384,EQ            ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
$C$L382:    
        CMPB      AL,#3                 ; [CPU_] |2253| 
        B         $C$L384,EQ            ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
$C$L383:    
        CMPB      AL,#4                 ; [CPU_] |2253| 
        B         $C$L384,EQ            ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
        CMPB      AL,#7                 ; [CPU_] |2253| 
        B         $C$L380,NEQ           ; [CPU_] |2253| 
        ; branchcc occurs ; [] |2253| 
$C$L384:    
	.dwpsn	file "../Source/prod.c",line 2254,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2254| 
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_scia_puts")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2254| 
        ; call occurs [#_scia_puts] ; [] |2254| 
        MOV       AL,*-SP[47]           ; [CPU_] |2254| 
	.dwpsn	file "../Source/prod.c",line 2256,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2256| 
        B         $C$L388,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
        CMPB      AL,#3                 ; [CPU_] |2256| 
        B         $C$L387,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
        CMPB      AL,#4                 ; [CPU_] |2256| 
        B         $C$L385,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
        CMPB      AL,#7                 ; [CPU_] |2256| 
        B         $C$L396,EQ            ; [CPU_] |2256| 
        ; branchcc occurs ; [] |2256| 
        B         $C$L397,UNC           ; [CPU_] |2256| 
        ; branch occurs ; [] |2256| 
$C$L385:    
	.dwpsn	file "../Source/prod.c",line 2266,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2266| 
        MOV       AH,#16843             ; [CPU_] |2266| 
$C$L386:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2266| 
        MOV       AL,*-SP[47]           ; [CPU_] |2266| 
	.dwpsn	file "../Source/prod.c",line 2267,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2267| 
	.dwpsn	file "../Source/prod.c",line 2268,column 8,is_stmt,isa 0
        B         $C$L401,UNC           ; [CPU_] |2268| 
        ; branch occurs ; [] |2268| 
$C$L387:    
	.dwpsn	file "../Source/prod.c",line 2262,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2262| 
        MOV       AH,#16418             ; [CPU_] |2262| 
	.dwpsn	file "../Source/prod.c",line 2264,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2264| 
        ; branch occurs ; [] |2264| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2258,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2258| 
	.dwpsn	file "../Source/prod.c",line 2260,column 8,is_stmt,isa 0
        B         $C$L386,UNC           ; [CPU_] |2260| 
        ; branch occurs ; [] |2260| 
$C$L389:    
	.dwpsn	file "../Source/prod.c",line 2216,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2216| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2216| 
        MOV       AL,#1024              ; [CPU_] |2216| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2216| 
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2216| 
        ; call occurs [#_scia_getparam] ; [] |2216| 
        MOVL      XAR0,#86              ; [CPU_] |2216| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2216| 
	.dwpsn	file "../Source/prod.c",line 2218,column 8,is_stmt,isa 0
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_atoi")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2218| 
        ; call occurs [#_atoi] ; [] |2218| 
        MOVL      XAR0,#86              ; [CPU_] |2218| 
        MOV       *-SP[47],AL           ; [CPU_] |2218| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2218| 
	.dwpsn	file "../Source/prod.c",line 2219,column 8,is_stmt,isa 0
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2219| 
        ; call occurs [#_scia_puts] ; [] |2219| 
        MOV       AL,*-SP[47]           ; [CPU_] |2219| 
	.dwpsn	file "../Source/prod.c",line 2220,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2220| 
        B         $C$L391,EQ            ; [CPU_] |2220| 
        ; branchcc occurs ; [] |2220| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2220| 
        B         $C$L390,EQ            ; [CPU_] |2220| 
        ; branchcc occurs ; [] |2220| 
	.dwpsn	file "../Source/prod.c",line 2221,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2221| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_puts")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2221| 
        ; call occurs [#_scia_puts] ; [] |2221| 
$C$L390:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2223,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2223| 
        B         $C$L391,EQ            ; [CPU_] |2223| 
        ; branchcc occurs ; [] |2223| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2223| 
        B         $C$L389,NEQ           ; [CPU_] |2223| 
        ; branchcc occurs ; [] |2223| 
$C$L391:    
	.dwpsn	file "../Source/prod.c",line 2224,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2224| 
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_scia_puts")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2224| 
        ; call occurs [#_scia_puts] ; [] |2224| 
        MOV       AL,*-SP[47]           ; [CPU_] |2224| 
	.dwpsn	file "../Source/prod.c",line 2226,column 7,is_stmt,isa 0
        B         $C$L392,EQ            ; [CPU_] |2226| 
        ; branchcc occurs ; [] |2226| 
        CMPB      AL,#1                 ; [CPU_] |2226| 
        B         $C$L399,EQ            ; [CPU_] |2226| 
        ; branchcc occurs ; [] |2226| 
        CMPB      AL,#7                 ; [CPU_] |2226| 
        B         $C$L396,EQ            ; [CPU_] |2226| 
        ; branchcc occurs ; [] |2226| 
        B         $C$L397,UNC           ; [CPU_] |2226| 
        ; branch occurs ; [] |2226| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2228,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2228| 
        MOV       AH,#16397             ; [CPU_] |2228| 
	.dwpsn	file "../Source/prod.c",line 2230,column 8,is_stmt,isa 0
        B         $C$L400,UNC           ; [CPU_] |2230| 
        ; branch occurs ; [] |2230| 
$C$L393:    
	.dwpsn	file "../Source/prod.c",line 2187,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2187| 
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2187| 
        MOV       AL,#1024              ; [CPU_] |2187| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2187| 
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2187| 
        ; call occurs [#_scia_getparam] ; [] |2187| 
        MOVL      XAR0,#86              ; [CPU_] |2187| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2187| 
	.dwpsn	file "../Source/prod.c",line 2189,column 8,is_stmt,isa 0
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_atoi")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2189| 
        ; call occurs [#_atoi] ; [] |2189| 
        MOVL      XAR0,#86              ; [CPU_] |2189| 
        MOV       *-SP[47],AL           ; [CPU_] |2189| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2189| 
	.dwpsn	file "../Source/prod.c",line 2190,column 8,is_stmt,isa 0
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_puts")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2190| 
        ; call occurs [#_scia_puts] ; [] |2190| 
        MOV       AL,*-SP[47]           ; [CPU_] |2190| 
	.dwpsn	file "../Source/prod.c",line 2191,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2191| 
        B         $C$L395,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2191| 
        B         $C$L394,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
	.dwpsn	file "../Source/prod.c",line 2192,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2192| 
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_scia_puts")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2192| 
        ; call occurs [#_scia_puts] ; [] |2192| 
$C$L394:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2194,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2194| 
        B         $C$L395,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2194| 
        B         $C$L393,NEQ           ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2195,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2195| 
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_scia_puts")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2195| 
        ; call occurs [#_scia_puts] ; [] |2195| 
        MOV       AL,*-SP[47]           ; [CPU_] |2195| 
	.dwpsn	file "../Source/prod.c",line 2197,column 7,is_stmt,isa 0
        B         $C$L399,EQ            ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
        CMPB      AL,#1                 ; [CPU_] |2197| 
        B         $C$L398,EQ            ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
        CMPB      AL,#7                 ; [CPU_] |2197| 
        B         $C$L397,NEQ           ; [CPU_] |2197| 
        ; branchcc occurs ; [] |2197| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2207,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2207| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2207| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2207| 
        MOV       AL,#0                 ; [CPU_] |2207| 
        MOV       AH,#17096             ; [CPU_] |2207| 
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2207| 
        ; call occurs [#FS$$DIV] ; [] |2207| 
        MOVL      *-SP[16],ACC          ; [CPU_] |2207| 
        MOV       AL,*-SP[47]           ; [CPU_] |2207| 
	.dwpsn	file "../Source/prod.c",line 2208,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2208| 
        MOV       *-SP[47],AL           ; [CPU_] |2208| 
$C$L397:    
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2398| 
        MOV       AH,#0                 ; [CPU_] |2398| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2398| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2398| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2398| 
        ; call occurs [#FS$$CMP] ; [] |2398| 
        CMPB      AL,#0                 ; [CPU_] |2398| 
        B         $C$L402,NEQ           ; [CPU_] |2398| 
        ; branchcc occurs ; [] |2398| 
	.dwpsn	file "../Source/prod.c",line 2399,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2399| 
	.dwpsn	file "../Source/prod.c",line 2400,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2400| 
        ; branch occurs ; [] |2400| 
$C$L398:    
	.dwpsn	file "../Source/prod.c",line 2203,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2203| 
        MOV       AH,#16104             ; [CPU_] |2203| 
	.dwpsn	file "../Source/prod.c",line 2205,column 8,is_stmt,isa 0
        B         $C$L400,UNC           ; [CPU_] |2205| 
        ; branch occurs ; [] |2205| 
$C$L399:    
	.dwpsn	file "../Source/prod.c",line 2199,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2199| 
$C$L400:    
        MOVL      *-SP[16],ACC          ; [CPU_] |2199| 
        MOV       AL,*-SP[47]           ; [CPU_] |2199| 
	.dwpsn	file "../Source/prod.c",line 2200,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2200| 
$C$L401:    
        MOV       *-SP[47],AL           ; [CPU_] |2200| 
$C$L402:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2403,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2403| 
        B         $C$L405,EQ            ; [CPU_] |2403| 
        ; branchcc occurs ; [] |2403| 
	.dwpsn	file "../Source/prod.c",line 2409,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2409| 
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2413| 
	.dwpsn	file "../Source/prod.c",line 2410,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2410| 
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2413| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2410,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2410| 
	.dwpsn	file "../Source/prod.c",line 2413,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2413| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2413| 
        ADD       AL,*-SP[57]           ; [CPU_] |2413| 
        MOV       *-SP[3],AL            ; [CPU_] |2413| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2413| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2413| 
        ANDB      AL,#0x0f              ; [CPU_] |2413| 
        MOV       ACC,AL << 1           ; [CPU_] |2413| 
        ADDL      ACC,XAR6              ; [CPU_] |2413| 
        MOVL      XAR4,ACC              ; [CPU_] |2413| 
        MOVL      XAR0,#44              ; [CPU_] |2413| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2413| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2413| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2413| 
        MOVL      XAR4,XAR1             ; [CPU_] |2413| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_sprintf")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2413| 
        ; call occurs [#_sprintf] ; [] |2413| 
        MOVL      XAR4,XAR1             ; [CPU_] |2413| 
	.dwpsn	file "../Source/prod.c",line 2415,column 6,is_stmt,isa 0
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_scia_puts")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2415| 
        ; call occurs [#_scia_puts] ; [] |2415| 
        MOVL      XAR0,#40              ; [CPU_] |2415| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2415| 
	.dwpsn	file "../Source/prod.c",line 2417,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2417| 
	.dwpsn	file "../Source/prod.c",line 2411,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2411| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L403:    
	.dwpsn	file "../Source/prod.c",line 2418,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2418| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2418| 
        CMPL      ACC,XAR6              ; [CPU_] |2418| 
        B         $C$L404,NEQ           ; [CPU_] |2418| 
        ; branchcc occurs ; [] |2418| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2419,column 8,is_stmt,isa 0
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_update_units")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2419| 
        ; call occurs [#_update_units] ; [] |2419| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2421,column 8,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2421| 
        ; call occurs [#_ad7738_setcal] ; [] |2421| 
        MOVL      XAR0,#78              ; [CPU_] |2421| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2421| 
	.dwpsn	file "../Source/prod.c",line 2422,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2422| 
        MOVL      XAR4,ACC              ; [CPU_] |2422| 
        MOVL      XAR0,#88              ; [CPU_] |2422| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2422| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2422| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2422| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2422| 
        MOVL      XAR0,#88              ; [CPU_] |2422| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2422| 
	.dwpsn	file "../Source/prod.c",line 2423,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2423| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2423| 
        ; call occurs [#_ad7738_resetvall] ; [] |2423| 
 clrc INTM
$C$L404:    
	.dwpsn	file "../Source/prod.c",line 2417,column 19,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2417| 
        ADDB      XAR1,#10              ; [CPU_] |2417| 
        MOV       AL,*-SP[58]           ; [CPU_] |2417| 
        CMPB      AL,#4                 ; [CPU_] |2417| 
        B         $C$L403,LO            ; [CPU_] |2417| 
        ; branchcc occurs ; [] |2417| 
        B         $C$L633,UNC           ; [CPU_] |2417| 
        ; branch occurs ; [] |2417| 
$C$L405:    
	.dwpsn	file "../Source/prod.c",line 2404,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2404| 
	.dwpsn	file "../Source/prod.c",line 2406,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2406| 
        ; branch occurs ; [] |2406| 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2160,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2160| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2160| 
        MOVL      XAR0,#44              ; [CPU_] |2160| 
        ADD       AL,*-SP[57]           ; [CPU_] |2160| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2160| 
        MOV       *-SP[3],AL            ; [CPU_] |2160| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2160| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2160| 
        MOV       *-SP[47],AL           ; [CPU_] |2160| 
        MOVL      XAR4,XAR1             ; [CPU_] |2160| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("_sprintf")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2160| 
        ; call occurs [#_sprintf] ; [] |2160| 
	.dwpsn	file "../Source/prod.c",line 2162,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2162| 
        MOV       AL,#1024              ; [CPU_] |2162| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2162| 
	.dwpsn	file "../Source/prod.c",line 2160,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2160| 
	.dwpsn	file "../Source/prod.c",line 2162,column 6,is_stmt,isa 0
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2162| 
        ; call occurs [#_scia_getparam] ; [] |2162| 
        MOVZ      AR6,AL                ; [CPU_] |2162| 
        CMPB      AL,#15                ; [CPU_] |2162| 
        B         $C$L407,LOS           ; [CPU_] |2162| 
        ; branchcc occurs ; [] |2162| 
	.dwpsn	file "../Source/prod.c",line 2166,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2166| 
        MOVB      XAR0,#15              ; [CPU_] |2166| 
	.dwpsn	file "../Source/prod.c",line 2165,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2165| 
	.dwpsn	file "../Source/prod.c",line 2166,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2166| 
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2168,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2168| 
        MOVB      AL,#152               ; [CPU_] |2168| 
        MOV       T,*-SP[57]            ; [CPU_] |2168| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2168| 
        MOVL      XAR0,#86              ; [CPU_] |2168| 
        MPYU      ACC,T,AL              ; [CPU_] |2168| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2168| 
        ADDL      ACC,XAR7              ; [CPU_] |2168| 
        ADDB      ACC,#98               ; [CPU_] |2168| 
        MOVL      XAR1,ACC              ; [CPU_] |2168| 
        MOVL      XAR4,ACC              ; [CPU_] |2168| 
        MOVB      AH,#1                 ; [CPU_] |2168| 
        ADD       AH,AR6                ; [CPU_] |2168| 
        MOVU      ACC,AH                ; [CPU_] |2168| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_memcpy")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2168| 
        ; call occurs [#_memcpy] ; [] |2168| 
        MOVL      XAR0,#86              ; [CPU_] |2168| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2168| 
	.dwpsn	file "../Source/prod.c",line 2170,column 6,is_stmt,isa 0
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_scia_puts")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2170| 
        ; call occurs [#_scia_puts] ; [] |2170| 
	.dwpsn	file "../Source/prod.c",line 2171,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2171| 
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_scia_puts")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2171| 
        ; call occurs [#_scia_puts] ; [] |2171| 
	.dwpsn	file "../Source/prod.c",line 2174,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2174| 
        MOV       AL,*-SP[47]           ; [CPU_] |2174| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2174| 
        MOV       *-SP[3],AL            ; [CPU_] |2174| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2174| 
	.dwpsn	file "../Source/prod.c",line 2177,column 6,is_stmt,isa 0
        B         $C$L340,UNC           ; [CPU_] |2177| 
        ; branch occurs ; [] |2177| 
$C$L408:    
	.dwpsn	file "../Source/prod.c",line 2471,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2471| 
        MOVB      AL,#152               ; [CPU_] |2471| 
        MOV       T,*-SP[57]            ; [CPU_] |2471| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2471| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2471| 
        MPYU      ACC,T,AL              ; [CPU_] |2471| 
        MOVB      XAR0,#124             ; [CPU_] |2471| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2471| 
        ADDL      ACC,XAR6              ; [CPU_] |2471| 
        MOVL      XAR1,ACC              ; [CPU_] |2471| 
        MOVB      AL,#1                 ; [CPU_] |2471| 
        ADD       AL,*-SP[57]           ; [CPU_] |2471| 
        MOV       *-SP[47],AL           ; [CPU_] |2471| 
        MOV       *-SP[3],AL            ; [CPU_] |2471| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2471| 
        MOVL      XAR0,#70              ; [CPU_] |2471| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2471| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2471| 
        MOV       ACC,AL << 1           ; [CPU_] |2471| 
        ADDL      ACC,XAR6              ; [CPU_] |2471| 
        MOVL      XAR4,ACC              ; [CPU_] |2471| 
        MOVL      XAR0,#44              ; [CPU_] |2471| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2471| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2471| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2471| 
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_sprintf")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2471| 
        ; call occurs [#_sprintf] ; [] |2471| 
        MOVL      XAR0,#44              ; [CPU_] |2471| 
	.dwpsn	file "../Source/prod.c",line 2473,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2473| 
	.dwpsn	file "../Source/prod.c",line 2471,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2471| 
	.dwpsn	file "../Source/prod.c",line 2473,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2473| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2473| 
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2473| 
        ; call occurs [#_scia_getparam] ; [] |2473| 
        MOVL      XAR0,#86              ; [CPU_] |2473| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2473,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2473| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_strtod")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2474,column 6,is_stmt,isa 0
        MOVB      XAR0,#228             ; [CPU_] |2474| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2474| 
        MOVL      XAR0,#86              ; [CPU_] |2474| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2474| 
	.dwpsn	file "../Source/prod.c",line 2475,column 6,is_stmt,isa 0
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_scia_puts")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2475| 
        ; call occurs [#_scia_puts] ; [] |2475| 
	.dwpsn	file "../Source/prod.c",line 2476,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2476| 
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_scia_puts")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2476| 
        ; call occurs [#_scia_puts] ; [] |2476| 
	.dwpsn	file "../Source/prod.c",line 2478,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2478| 
        MOVL      XAR0,#44              ; [CPU_] |2478| 
        MOV       AL,*-SP[47]           ; [CPU_] |2478| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2478| 
        MOV       *-SP[3],AL            ; [CPU_] |2478| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2478| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_sprintf")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2478| 
        ; call occurs [#_sprintf] ; [] |2478| 
        MOVL      XAR0,#44              ; [CPU_] |2478| 
	.dwpsn	file "../Source/prod.c",line 2479,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2479| 
	.dwpsn	file "../Source/prod.c",line 2478,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2478| 
	.dwpsn	file "../Source/prod.c",line 2479,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2479| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2479| 
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2479| 
        ; call occurs [#_scia_getparam] ; [] |2479| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_strtod")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2480,column 6,is_stmt,isa 0
        MOVB      XAR0,#230             ; [CPU_] |2480| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2480| 
        MOVL      XAR0,#86              ; [CPU_] |2480| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2480| 
	.dwpsn	file "../Source/prod.c",line 2481,column 6,is_stmt,isa 0
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_scia_puts")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2481| 
        ; call occurs [#_scia_puts] ; [] |2481| 
	.dwpsn	file "../Source/prod.c",line 2482,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2482| 
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_scia_puts")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2482| 
        ; call occurs [#_scia_puts] ; [] |2482| 
	.dwpsn	file "../Source/prod.c",line 2485,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2485| 
        MOVB      XAR0,#228             ; [CPU_] |2485| 
        MOV       AL,*-SP[47]           ; [CPU_] |2485| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2485| 
        MOV       *-SP[3],AL            ; [CPU_] |2485| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2485| 
        MOVB      XAR0,#230             ; [CPU_] |2485| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2485| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2485| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2485| 
$C$L409:    
        MOVL      XAR0,#44              ; [CPU_] |2485| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2485| 
        MOVL      XAR4,XAR1             ; [CPU_] |2485| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_sprintf")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2485| 
        ; call occurs [#_sprintf] ; [] |2485| 
        MOVL      XAR4,XAR1             ; [CPU_] |2485| 
	.dwpsn	file "../Source/prod.c",line 2489,column 6,is_stmt,isa 0
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_puts")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2489| 
        ; call occurs [#_scia_puts] ; [] |2489| 
$C$L410:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2492,column 6,is_stmt,isa 0
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2492| 
        ; call occurs [#_ad7738_setcal] ; [] |2492| 
	.dwpsn	file "../Source/prod.c",line 2494,column 6,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |2494| 
        ; branch occurs ; [] |2494| 
$C$L411:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[57]           ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2434,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2434| 
        MOV       AL,*-SP[47]           ; [CPU_] |2434| 
        MOVL      XAR0,#44              ; [CPU_] |2434| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2434| 
        MOV       *-SP[3],AL            ; [CPU_] |2434| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2434| 
        MOVL      XAR4,XAR1             ; [CPU_] |2434| 
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_sprintf")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2434| 
        ; call occurs [#_sprintf] ; [] |2434| 
	.dwpsn	file "../Source/prod.c",line 2435,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2435| 
	.dwpsn	file "../Source/prod.c",line 2434,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2434| 
	.dwpsn	file "../Source/prod.c",line 2435,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2435| 
        MOV       AL,#1024              ; [CPU_] |2435| 
        MOVL      XAR5,XAR1             ; [CPU_] |2435| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2435| 
        ; call occurs [#_scia_getparam] ; [] |2435| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_strtod")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2437,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2437| 
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_scia_puts")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2437| 
        ; call occurs [#_scia_puts] ; [] |2437| 
	.dwpsn	file "../Source/prod.c",line 2439,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2439| 
        MOV       AH,#0                 ; [CPU_] |2439| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2439| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2439| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2439| 
        ; call occurs [#FS$$CMP] ; [] |2439| 
        CMPB      AL,#0                 ; [CPU_] |2439| 
        B         $C$L415,EQ            ; [CPU_] |2439| 
        ; branchcc occurs ; [] |2439| 
	.dwpsn	file "../Source/prod.c",line 2443,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2443| 
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_scia_puts")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2443| 
        ; call occurs [#_scia_puts] ; [] |2443| 
	.dwpsn	file "../Source/prod.c",line 2444,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2444| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2444| 
        MOVB      AL,#152               ; [CPU_] |2444| 
        MOV       T,*-SP[57]            ; [CPU_] |2444| 
        MPYU      ACC,T,AL              ; [CPU_] |2444| 
        ADDL      ACC,XAR6              ; [CPU_] |2444| 
        MOVL      XAR1,ACC              ; [CPU_] |2444| 
        MOVB      XAR0,#224             ; [CPU_] |2444| 
	.dwpsn	file "../Source/prod.c",line 2447,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2447| 
	.dwpsn	file "../Source/prod.c",line 2444,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |2444| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2444| 
	.dwpsn	file "../Source/prod.c",line 2447,column 6,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2447| 
        MOV       AL,*-SP[47]           ; [CPU_] |2447| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2447| 
        MOV       *-SP[3],AL            ; [CPU_] |2447| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2447| 
        MOVL      XAR0,#44              ; [CPU_] |2447| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2447| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2447| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_sprintf")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2447| 
        ; call occurs [#_sprintf] ; [] |2447| 
        MOVL      XAR0,#44              ; [CPU_] |2447| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2447| 
	.dwpsn	file "../Source/prod.c",line 2449,column 6,is_stmt,isa 0
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_scia_puts")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2449| 
        ; call occurs [#_scia_puts] ; [] |2449| 
	.dwpsn	file "../Source/prod.c",line 2445,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2445| 
	.dwpsn	file "../Source/prod.c",line 2451,column 6,is_stmt,isa 0
        MOVB      XAR0,#125             ; [CPU_] |2451| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2451| 
        CMPB      AL,#247               ; [CPU_] |2451| 
        B         $C$L633,NEQ           ; [CPU_] |2451| 
        ; branchcc occurs ; [] |2451| 
	.dwpsn	file "../Source/prod.c",line 2453,column 7,is_stmt,isa 0
        MOVB      XAR0,#224             ; [CPU_] |2453| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2453| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2453| 
        MOV       AL,#0                 ; [CPU_] |2453| 
        MOV       AH,#17096             ; [CPU_] |2453| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2453| 
        ; call occurs [#FS$$DIV] ; [] |2453| 
        MOVB      XAR0,#126             ; [CPU_] |2453| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2453| 
        MOVL      XAR0,#40              ; [CPU_] |2453| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2453| 
	.dwpsn	file "../Source/prod.c",line 2456,column 12,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |2456| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2457,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[57]          ; [CPU_] |2457| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2457| 
        CMPL      ACC,XAR6              ; [CPU_] |2457| 
        B         $C$L414,NEQ           ; [CPU_] |2457| 
        ; branchcc occurs ; [] |2457| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2460,column 9,is_stmt,isa 0
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2460| 
        ; call occurs [#_ad7738_setcal] ; [] |2460| 
        MOVL      XAR0,#78              ; [CPU_] |2460| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2460| 
	.dwpsn	file "../Source/prod.c",line 2461,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2461| 
        MOVL      XAR4,ACC              ; [CPU_] |2461| 
        MOVL      XAR0,#88              ; [CPU_] |2461| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2461| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2461| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2461| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2461| 
        MOVL      XAR0,#88              ; [CPU_] |2461| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2461| 
	.dwpsn	file "../Source/prod.c",line 2462,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2462| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2462| 
        ; call occurs [#_ad7738_resetvall] ; [] |2462| 
 clrc INTM
$C$L414:    
	.dwpsn	file "../Source/prod.c",line 2456,column 20,is_stmt,isa 0
        INC       *-SP[58]              ; [CPU_] |2456| 
        ADDB      XAR1,#10              ; [CPU_] |2456| 
        MOV       AL,*-SP[58]           ; [CPU_] |2456| 
        CMPB      AL,#4                 ; [CPU_] |2456| 
        B         $C$L413,LO            ; [CPU_] |2456| 
        ; branchcc occurs ; [] |2456| 
        B         $C$L633,UNC           ; [CPU_] |2456| 
        ; branch occurs ; [] |2456| 
$C$L415:    
	.dwpsn	file "../Source/prod.c",line 2441,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2441| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_scia_puts")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2441| 
        ; call occurs [#_scia_puts] ; [] |2441| 
	.dwpsn	file "../Source/prod.c",line 2433,column 6,is_stmt,isa 0
        B         $C$L412,UNC           ; [CPU_] |2433| 
        ; branch occurs ; [] |2433| 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 2149,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2149| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_scia_puts")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2149| 
        ; call occurs [#_scia_puts] ; [] |2149| 
	.dwpsn	file "../Source/prod.c",line 2139,column 5,is_stmt,isa 0
        B         $C$L356,UNC           ; [CPU_] |2139| 
        ; branch occurs ; [] |2139| 
$C$L417:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3111,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3111| 
        B         $C$L626,LO            ; [CPU_] |3111| 
        ; branchcc occurs ; [] |3111| 
	.dwpsn	file "../Source/prod.c",line 3114,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3114| 
        CMPB      AL,#83                ; [CPU_] |3114| 
        B         $C$L418,GT            ; [CPU_] |3114| 
        ; branchcc occurs ; [] |3114| 
        CMPB      AL,#83                ; [CPU_] |3114| 
        B         $C$L422,EQ            ; [CPU_] |3114| 
        ; branchcc occurs ; [] |3114| 
        CMPB      AL,#73                ; [CPU_] |3114| 
        B         $C$L427,EQ            ; [CPU_] |3114| 
        ; branchcc occurs ; [] |3114| 
        CMPB      AL,#76                ; [CPU_] |3114| 
        B         $C$L431,EQ            ; [CPU_] |3114| 
        ; branchcc occurs ; [] |3114| 
        CMPB      AL,#80                ; [CPU_] |3114| 
        B         $C$L424,EQ            ; [CPU_] |3114| 
        ; branchcc occurs ; [] |3114| 
        B         $C$L626,UNC           ; [CPU_] |3114| 
        ; branch occurs ; [] |3114| 
$C$L418:    
        CMPB      AL,#84                ; [CPU_] |3114| 
        B         $C$L420,EQ            ; [CPU_] |3114| 
        ; branchcc occurs ; [] |3114| 
        CMPB      AL,#86                ; [CPU_] |3114| 
        B         $C$L626,NEQ           ; [CPU_] |3114| 
        ; branchcc occurs ; [] |3114| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3142,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3142| 
        B         $C$L419,LOS           ; [CPU_] |3142| 
        ; branchcc occurs ; [] |3142| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L419,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3142,column 6,is_stmt,isa 0
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_atoi")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3142| 
        ; call occurs [#_atoi] ; [] |3142| 
        CMPB      AL,#4                 ; [CPU_] |3142| 
        B         $C$L419,GT            ; [CPU_] |3142| 
        ; branchcc occurs ; [] |3142| 
        CMPB      AL,#0                 ; [CPU_] |3142| 
        B         $C$L419,LEQ           ; [CPU_] |3142| 
        ; branchcc occurs ; [] |3142| 
	.dwpsn	file "../Source/prod.c",line 3144,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3144| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3144| 
        ADD       ACC,AR5               ; [CPU_] |3144| 
        MOVL      XAR4,ACC              ; [CPU_] |3144| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3144| 
	.dwpsn	file "../Source/prod.c",line 3145,column 6,is_stmt,isa 0
        B         $C$L429,UNC           ; [CPU_] |3145| 
        ; branch occurs ; [] |3145| 
$C$L419:    
	.dwpsn	file "../Source/prod.c",line 3146,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3146| 
        B         $C$L429,UNC           ; [CPU_] |3146| 
        ; branch occurs ; [] |3146| 
$C$L420:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3118,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3118| 
        B         $C$L421,LOS           ; [CPU_] |3118| 
        ; branchcc occurs ; [] |3118| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L421,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3118,column 6,is_stmt,isa 0
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("_atoi")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3118| 
        ; call occurs [#_atoi] ; [] |3118| 
        CMPB      AL,#4                 ; [CPU_] |3118| 
        MOVZ      AR4,AL                ; [CPU_] |3118| 
        B         $C$L421,GT            ; [CPU_] |3118| 
        ; branchcc occurs ; [] |3118| 
        CMPB      AL,#0                 ; [CPU_] |3118| 
        B         $C$L421,LEQ           ; [CPU_] |3118| 
        ; branchcc occurs ; [] |3118| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3120,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3120| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3120| 
	.dwpsn	file "../Source/prod.c",line 3123,column 6,is_stmt,isa 0
        B         $C$L428,UNC           ; [CPU_] |3123| 
        ; branch occurs ; [] |3123| 
$C$L421:    
	.dwpsn	file "../Source/prod.c",line 3124,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3124| 
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3124| 
        ; call occurs [#_ad7738_resettare] ; [] |3124| 
	.dwpsn	file "../Source/prod.c",line 3125,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3125| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3125| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3125| 
	.dwpsn	file "../Source/prod.c",line 3126,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3126| 
        B         $C$L429,UNC           ; [CPU_] |3126| 
        ; branch occurs ; [] |3126| 
$C$L422:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3152,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3152| 
        B         $C$L423,LOS           ; [CPU_] |3152| 
        ; branchcc occurs ; [] |3152| 
        MOVL      ACC,XAR4              ; [CPU_] |3152| 
        MOVL      XAR0,#66              ; [CPU_] |3152| 
        ADDB      ACC,#2                ; [CPU_] |3152| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3152| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3152| 
        CMPB      AL,#67                ; [CPU_] |3152| 
        B         $C$L423,NEQ           ; [CPU_] |3152| 
        ; branchcc occurs ; [] |3152| 
	.dwpsn	file "../Source/prod.c",line 3153,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3153| 
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3153| 
        ; call occurs [#_shunt_switch] ; [] |3153| 
	.dwpsn	file "../Source/prod.c",line 3154,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3154| 
	.dwpsn	file "../Source/prod.c",line 3155,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3155| 
        ; branch occurs ; [] |3155| 
$C$L423:    
	.dwpsn	file "../Source/prod.c",line 3156,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3156| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3156| 
        ; call occurs [#_shunt_switch] ; [] |3156| 
	.dwpsn	file "../Source/prod.c",line 3157,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3157| 
        B         $C$L632,UNC           ; [CPU_] |3157| 
        ; branch occurs ; [] |3157| 
$C$L424:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3132,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3132| 
        B         $C$L426,LOS           ; [CPU_] |3132| 
        ; branchcc occurs ; [] |3132| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L426,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3132,column 6,is_stmt,isa 0
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_atoi")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3132| 
        ; call occurs [#_atoi] ; [] |3132| 
        CMPB      AL,#4                 ; [CPU_] |3132| 
        B         $C$L426,GT            ; [CPU_] |3132| 
        ; branchcc occurs ; [] |3132| 
        CMPB      AL,#0                 ; [CPU_] |3132| 
        B         $C$L426,LEQ           ; [CPU_] |3132| 
        ; branchcc occurs ; [] |3132| 
	.dwpsn	file "../Source/prod.c",line 3134,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3134| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3134| 
        ADD       ACC,AR5               ; [CPU_] |3134| 
        MOVL      XAR4,ACC              ; [CPU_] |3134| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3134| 
$C$L425:    
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3134| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3134| 
	.dwpsn	file "../Source/prod.c",line 3135,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3135| 
        ; branch occurs ; [] |3135| 
$C$L426:    
	.dwpsn	file "../Source/prod.c",line 3136,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3136| 
        B         $C$L425,UNC           ; [CPU_] |3136| 
        ; branch occurs ; [] |3136| 
$C$L427:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3171,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3171| 
        B         $C$L430,LOS           ; [CPU_] |3171| 
        ; branchcc occurs ; [] |3171| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L430,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3171,column 6,is_stmt,isa 0
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_atoi")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3171| 
        ; call occurs [#_atoi] ; [] |3171| 
        CMPB      AL,#2                 ; [CPU_] |3171| 
        B         $C$L430,GT            ; [CPU_] |3171| 
        ; branchcc occurs ; [] |3171| 
        CMPB      AL,#0                 ; [CPU_] |3171| 
        B         $C$L430,LEQ           ; [CPU_] |3171| 
        ; branchcc occurs ; [] |3171| 
	.dwpsn	file "../Source/prod.c",line 3173,column 7,is_stmt,isa 0
        MOVB      XAR6,#3               ; [CPU_] |3173| 
        ADD       AR6,AL                ; [CPU_] |3173| 
        MOVL      XAR0,#78              ; [CPU_] |3173| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3173| 
        ADD       ACC,AR6               ; [CPU_] |3173| 
$C$L428:    
        MOVL      XAR1,ACC              ; [CPU_] |3173| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3173| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3173| 
        ; call occurs [#_ad7738_resettare] ; [] |3173| 
	.dwpsn	file "../Source/prod.c",line 3174,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3174| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3174| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3174| 
	.dwpsn	file "../Source/prod.c",line 3175,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3175| 
$C$L429:    
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3175| 
        ; call occurs [#_ad7738_resetvall] ; [] |3175| 
	.dwpsn	file "../Source/prod.c",line 3176,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3176| 
        ; branch occurs ; [] |3176| 
$C$L430:    
	.dwpsn	file "../Source/prod.c",line 3177,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3177| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3177| 
        ; call occurs [#_ad7738_resettare] ; [] |3177| 
	.dwpsn	file "../Source/prod.c",line 3178,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3178| 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3178| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3178| 
	.dwpsn	file "../Source/prod.c",line 3179,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3179| 
        B         $C$L429,UNC           ; [CPU_] |3179| 
        ; branch occurs ; [] |3179| 
$C$L431:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3163,column 6,is_stmt,isa 0
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_atoi")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3163| 
        ; call occurs [#_atoi] ; [] |3163| 
	.dwpsn	file "../Source/prod.c",line 3166,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3166| 
        MOV       *-SP[58],AL           ; [CPU_] |3166| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3166| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3166| 
	.dwpsn	file "../Source/prod.c",line 3167,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3167| 
        ; branch occurs ; [] |3167| 
$C$L432:    
	.dwpsn	file "../Source/prod.c",line 1114,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1114| 
        CMPB      AL,#76                ; [CPU_] |1114| 
        B         $C$L433,GT            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#76                ; [CPU_] |1114| 
        B         $C$L441,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#65                ; [CPU_] |1114| 
        B         $C$L434,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#68                ; [CPU_] |1114| 
        B         $C$L445,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        B         $C$L626,UNC           ; [CPU_] |1114| 
        ; branch occurs ; [] |1114| 
$C$L433:    
        CMPB      AL,#79                ; [CPU_] |1114| 
        B         $C$L444,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#83                ; [CPU_] |1114| 
        B         $C$L442,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        B         $C$L626,UNC           ; [CPU_] |1114| 
        ; branch occurs ; [] |1114| 
$C$L434:    
	.dwpsn	file "../Source/prod.c",line 1119,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1119| 
	.dwpsn	file "../Source/prod.c",line 1120,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1120| 
	.dwpsn	file "../Source/prod.c",line 1119,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1119| 
	.dwpsn	file "../Source/prod.c",line 1120,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1120| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1120| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1120| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1120| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1120| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1120| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1120| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1120| 
        MOVL      XAR4,XAR1             ; [CPU_] |1120| 
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_sprintf")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1120| 
        ; call occurs [#_sprintf] ; [] |1120| 
	.dwpsn	file "../Source/prod.c",line 1122,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1122| 
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_scia_puts")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1122| 
        ; call occurs [#_scia_puts] ; [] |1122| 
	.dwpsn	file "../Source/prod.c",line 1123,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1123| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1123| 
        LSR       AL,8                  ; [CPU_] |1123| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1123| 
        MOV       *-SP[3],AL            ; [CPU_] |1123| 
        IN        AL,*(04004H)          ; [CPU_] |1123| 
        MOVL      XAR4,XAR1             ; [CPU_] |1123| 
        ANDB      AL,#0xff              ; [CPU_] |1123| 
        MOV       *-SP[4],AL            ; [CPU_] |1123| 
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_sprintf")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1123| 
        ; call occurs [#_sprintf] ; [] |1123| 
	.dwpsn	file "../Source/prod.c",line 1125,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1125| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_scia_puts")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1125| 
        ; call occurs [#_scia_puts] ; [] |1125| 
	.dwpsn	file "../Source/prod.c",line 1126,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1126| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1126| 
        MOVL      XAR0,#44              ; [CPU_] |1126| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1126| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1126| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1126| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1126| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_sprintf")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1126| 
        ; call occurs [#_sprintf] ; [] |1126| 
        MOVL      XAR0,#44              ; [CPU_] |1126| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1126| 
	.dwpsn	file "../Source/prod.c",line 1127,column 6,is_stmt,isa 0
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_scia_puts")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1127| 
        ; call occurs [#_scia_puts] ; [] |1127| 
	.dwpsn	file "../Source/prod.c",line 1128,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1128| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1128| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1128| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1128| 
        MOVL      XAR0,#44              ; [CPU_] |1128| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1128| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1128| 
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_sprintf")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1128| 
        ; call occurs [#_sprintf] ; [] |1128| 
        MOVL      XAR0,#44              ; [CPU_] |1128| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1128| 
	.dwpsn	file "../Source/prod.c",line 1130,column 6,is_stmt,isa 0
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_scia_puts")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1130| 
        ; call occurs [#_scia_puts] ; [] |1130| 
	.dwpsn	file "../Source/prod.c",line 1132,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1132| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1132| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1132| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1132| 
        MOVL      XAR0,#72              ; [CPU_] |1132| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1132| 
        ADDL      ACC,XAR6              ; [CPU_] |1132| 
        MOVL      XAR4,ACC              ; [CPU_] |1132| 
        MOVL      XAR0,#44              ; [CPU_] |1132| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1132| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1132| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1132| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_sprintf")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1132| 
        ; call occurs [#_sprintf] ; [] |1132| 
        MOVL      XAR0,#44              ; [CPU_] |1132| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1132| 
	.dwpsn	file "../Source/prod.c",line 1134,column 6,is_stmt,isa 0
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_scia_puts")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1134| 
        ; call occurs [#_scia_puts] ; [] |1134| 
	.dwpsn	file "../Source/prod.c",line 1135,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1135| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1135| 
        B         $C$L435,EQ            ; [CPU_] |1135| 
        ; branchcc occurs ; [] |1135| 
        MOVB      XAR0,#34              ; [CPU_] |1135| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1135| 
        CMPB      AL,#1                 ; [CPU_] |1135| 
        B         $C$L436,NEQ           ; [CPU_] |1135| 
        ; branchcc occurs ; [] |1135| 
$C$L435:    
	.dwpsn	file "../Source/prod.c",line 1137,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1137| 
        MOVL      XAR0,#74              ; [CPU_] |1137| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1137| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1137| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1137| 
        ADDL      ACC,XAR6              ; [CPU_] |1137| 
        MOVL      XAR4,ACC              ; [CPU_] |1137| 
        MOVL      XAR0,#44              ; [CPU_] |1137| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1137| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1137| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1137| 
        MOVL      XAR4,XAR1             ; [CPU_] |1137| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_sprintf")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1137| 
        ; call occurs [#_sprintf] ; [] |1137| 
        MOVL      XAR4,XAR1             ; [CPU_] |1137| 
	.dwpsn	file "../Source/prod.c",line 1139,column 7,is_stmt,isa 0
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_scia_puts")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1139| 
        ; call occurs [#_scia_puts] ; [] |1139| 
$C$L436:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1141,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1141| 
        B         $C$L437,NEQ           ; [CPU_] |1141| 
        ; branchcc occurs ; [] |1141| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1141| 
        B         $C$L438,UNC           ; [CPU_] |1141| 
        ; branch occurs ; [] |1141| 
$C$L437:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1141| 
$C$L438:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1141| 
        MOVL      XAR0,#44              ; [CPU_] |1141| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1141| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1141| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1141| 
        MOVL      XAR4,XAR1             ; [CPU_] |1141| 
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_sprintf")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1141| 
        ; call occurs [#_sprintf] ; [] |1141| 
        MOVL      XAR4,XAR1             ; [CPU_] |1141| 
	.dwpsn	file "../Source/prod.c",line 1143,column 6,is_stmt,isa 0
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_scia_puts")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1143| 
        ; call occurs [#_scia_puts] ; [] |1143| 
	.dwpsn	file "../Source/prod.c",line 1145,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1145| 
        MOVB      XAR0,#38              ; [CPU_] |1145| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1145| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1145| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1145| 
        MOVL      XAR0,#44              ; [CPU_] |1145| 
        MOV       *-SP[3],AL            ; [CPU_] |1145| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1145| 
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_sprintf")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1145| 
        ; call occurs [#_sprintf] ; [] |1145| 
        MOVL      XAR0,#44              ; [CPU_] |1145| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1145| 
	.dwpsn	file "../Source/prod.c",line 1147,column 6,is_stmt,isa 0
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_scia_puts")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1147| 
        ; call occurs [#_scia_puts] ; [] |1147| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1149,column 11,is_stmt,isa 0
        MOV       *-SP[58],#0           ; [CPU_] |1149| 
$C$L439:    
	.dwpsn	file "../Source/prod.c",line 1150,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1150| 
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_scia_puts")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1150| 
        ; call occurs [#_scia_puts] ; [] |1150| 
        MOV       AL,*-SP[58]           ; [CPU_] |1150| 
	.dwpsn	file "../Source/prod.c",line 1151,column 7,is_stmt,isa 0
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_print_channel")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1151| 
        ; call occurs [#_print_channel] ; [] |1151| 
	.dwpsn	file "../Source/prod.c",line 1152,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1152| 
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_print_sensor")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1152| 
        ; call occurs [#_print_sensor] ; [] |1152| 
	.dwpsn	file "../Source/prod.c",line 1149,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1149| 
        INC       *-SP[58]              ; [CPU_] |1149| 
        MOV       AL,*-SP[58]           ; [CPU_] |1149| 
        CMPB      AL,#4                 ; [CPU_] |1149| 
        B         $C$L439,LO            ; [CPU_] |1149| 
        ; branchcc occurs ; [] |1149| 
	.dwpsn	file "../Source/prod.c",line 1155,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1155| 
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_scia_puts")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1155| 
        ; call occurs [#_scia_puts] ; [] |1155| 
	.dwpsn	file "../Source/prod.c",line 1156,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1156| 
        MOVL      XAR0,#3214            ; [CPU_] |1156| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1156| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1156| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1156| 
        MOVL      XAR0,#44              ; [CPU_] |1156| 
        MOV       *-SP[3],AL            ; [CPU_] |1156| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1156| 
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_sprintf")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1156| 
        ; call occurs [#_sprintf] ; [] |1156| 
        MOVL      XAR0,#44              ; [CPU_] |1156| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1156| 
	.dwpsn	file "../Source/prod.c",line 1158,column 6,is_stmt,isa 0
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_scia_puts")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1158| 
        ; call occurs [#_scia_puts] ; [] |1158| 
        MOVL      XAR0,#40              ; [CPU_] |1158| 
	.dwpsn	file "../Source/prod.c",line 1159,column 11,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |1159| 
	.dwpsn	file "../Source/prod.c",line 1158,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1158| 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L440:    
	.dwpsn	file "../Source/prod.c",line 1160,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1160| 
        MOVB      AL,#65                ; [CPU_] |1160| 
        MOVL      XAR0,#44              ; [CPU_] |1160| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1160| 
        ADD       AL,*-SP[47]           ; [CPU_] |1160| 
        MOV       *-SP[3],AL            ; [CPU_] |1160| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1160| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1160| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1160| 
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_sprintf")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1160| 
        ; call occurs [#_sprintf] ; [] |1160| 
        MOVL      XAR0,#44              ; [CPU_] |1160| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1160| 
	.dwpsn	file "../Source/prod.c",line 1162,column 7,is_stmt,isa 0
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_scia_puts")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1162| 
        ; call occurs [#_scia_puts] ; [] |1162| 
	.dwpsn	file "../Source/prod.c",line 1159,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1159| 
	.dwpsn	file "../Source/prod.c",line 1162,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |1162| 
	.dwpsn	file "../Source/prod.c",line 1159,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1159| 
        B         $C$L440,LT            ; [CPU_] |1159| 
        ; branchcc occurs ; [] |1159| 
	.dwpsn	file "../Source/prod.c",line 1164,column 6,is_stmt,isa 0
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_print_vfd")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1164| 
        ; call occurs [#_print_vfd] ; [] |1164| 
	.dwpsn	file "../Source/prod.c",line 1165,column 6,is_stmt,isa 0
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_print_dac")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1165| 
        ; call occurs [#_print_dac] ; [] |1165| 
$C$L441:    
	.dwpsn	file "../Source/prod.c",line 1166,column 6,is_stmt,isa 0
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_print_limits")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1166| 
        ; call occurs [#_print_limits] ; [] |1166| 
	.dwpsn	file "../Source/prod.c",line 1167,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1167| 
        ; branch occurs ; [] |1167| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1171,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1171| 
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_scia_puts")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1171| 
        ; call occurs [#_scia_puts] ; [] |1171| 
	.dwpsn	file "../Source/prod.c",line 1173,column 11,is_stmt,isa 0
        MOV       *-SP[57],#0           ; [CPU_] |1173| 
$C$L443:    
	.dwpsn	file "../Source/prod.c",line 1174,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1174| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1174| 
        MOVL      XAR0,#44              ; [CPU_] |1174| 
        ADD       AL,*-SP[57]           ; [CPU_] |1174| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1174| 
        MOVZ      AR1,AL                ; [CPU_] |1174| 
        MOV       *-SP[3],AL            ; [CPU_] |1174| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1174| 
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_sprintf")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1174| 
        ; call occurs [#_sprintf] ; [] |1174| 
        MOVL      XAR0,#44              ; [CPU_] |1174| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1174| 
	.dwpsn	file "../Source/prod.c",line 1175,column 7,is_stmt,isa 0
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_scia_puts")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1175| 
        ; call occurs [#_scia_puts] ; [] |1175| 
        MOV       AL,*-SP[57]           ; [CPU_] |1175| 
	.dwpsn	file "../Source/prod.c",line 1176,column 7,is_stmt,isa 0
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_print_sensor")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1176| 
        ; call occurs [#_print_sensor] ; [] |1176| 
	.dwpsn	file "../Source/prod.c",line 1173,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1173| 
        MOV       *-SP[57],AR1          ; [CPU_] |1173| 
        CMPB      AL,#20                ; [CPU_] |1173| 
        B         $C$L443,LO            ; [CPU_] |1173| 
        ; branchcc occurs ; [] |1173| 
        B         $C$L633,UNC           ; [CPU_] |1173| 
        ; branch occurs ; [] |1173| 
$C$L444:    
	.dwpsn	file "../Source/prod.c",line 1187,column 6,is_stmt,isa 0
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_print_dac")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1187| 
        ; call occurs [#_print_dac] ; [] |1187| 
	.dwpsn	file "../Source/prod.c",line 1188,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1188| 
        ; branch occurs ; [] |1188| 
$C$L445:    
	.dwpsn	file "../Source/prod.c",line 1182,column 6,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_print_vfd")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1182| 
        ; call occurs [#_print_vfd] ; [] |1182| 
	.dwpsn	file "../Source/prod.c",line 1183,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1183| 
        ; branch occurs ; [] |1183| 
$C$L446:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2731,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2731| 
        B         $C$L626,LO            ; [CPU_] |2731| 
        ; branchcc occurs ; [] |2731| 
	.dwpsn	file "../Source/prod.c",line 2734,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2734| 
        CMPB      AL,#68                ; [CPU_] |2734| 
        B         $C$L447,EQ            ; [CPU_] |2734| 
        ; branchcc occurs ; [] |2734| 
        CMPB      AL,#83                ; [CPU_] |2734| 
        B         $C$L453,EQ            ; [CPU_] |2734| 
        ; branchcc occurs ; [] |2734| 
        B         $C$L626,UNC           ; [CPU_] |2734| 
        ; branch occurs ; [] |2734| 
$C$L447:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2852,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2852| 
        B         $C$L626,LO            ; [CPU_] |2852| 
        ; branchcc occurs ; [] |2852| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L626,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L626,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2856,column 6,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_atoi")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2856| 
        ; call occurs [#_atoi] ; [] |2856| 
        MOV       *-SP[57],AL           ; [CPU_] |2856| 
	.dwpsn	file "../Source/prod.c",line 2858,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2858| 
        CMPB      AL,#4                 ; [CPU_] |2858| 
        B         $C$L626,HIS           ; [CPU_] |2858| 
        ; branchcc occurs ; [] |2858| 
	.dwpsn	file "../Source/prod.c",line 2864,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2864| 
        MOV       *-SP[57],AL           ; [CPU_] |2864| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2864| 
        MOV       T,AL                  ; [CPU_] |2864| 
        MOVB      AL,#12                ; [CPU_] |2864| 
        MPYU      ACC,T,AL              ; [CPU_] |2864| 
        ADDL      ACC,XAR6              ; [CPU_] |2864| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2864| 
        MOVL      XAR1,ACC              ; [CPU_] |2864| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2864| 
        CMPB      AL,#7                 ; [CPU_] |2864| 
        B         $C$L626,NEQ           ; [CPU_] |2864| 
        ; branchcc occurs ; [] |2864| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_strtod")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      XAR0,#88              ; [CPU_] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2868,column 6,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |2868| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2870,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2870| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2870| 
        MOVL      ACC,XAR6              ; [CPU_] |2870| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2870| 
        ; call occurs [#FS$$CMP] ; [] |2870| 
        CMPB      AL,#0                 ; [CPU_] |2870| 
        B         $C$L626,LT            ; [CPU_] |2870| 
        ; branchcc occurs ; [] |2870| 
        MOV       AL,#0                 ; [CPU_] |2870| 
        MOV       AH,#16672             ; [CPU_] |2870| 
        MOVL      XAR0,#88              ; [CPU_] |2870| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2870| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2870| 
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2870| 
        ; call occurs [#FS$$CMP] ; [] |2870| 
        CMPB      AL,#0                 ; [CPU_] |2870| 
        B         $C$L626,GT            ; [CPU_] |2870| 
        ; branchcc occurs ; [] |2870| 
	.dwpsn	file "../Source/prod.c",line 2876,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2876| 
        MOV       AH,#0                 ; [CPU_] |2876| 
        MOVL      XAR0,#88              ; [CPU_] |2876| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2876| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2876| 
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2876| 
        ; call occurs [#FS$$CMP] ; [] |2876| 
        CMPB      AL,#0                 ; [CPU_] |2876| 
        B         $C$L448,GEQ           ; [CPU_] |2876| 
        ; branchcc occurs ; [] |2876| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2876| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2876| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2876| 
        B         $C$L449,UNC           ; [CPU_] |2876| 
        ; branch occurs ; [] |2876| 
$C$L448:    
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2876| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2876| 
$C$L449:    
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2876| 
        ; call occurs [#FS$$MPY] ; [] |2876| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2876| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2876| 
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2876| 
        ; call occurs [#FS$$ADD] ; [] |2876| 
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2876| 
        ; call occurs [#FS$$TOLL] ; [] |2876| 
	.dwpsn	file "../Source/prod.c",line 2883,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2876,column 7,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |2876| 
        MOVL      *-SP[30],ACC          ; [CPU_] |2876| 
	.dwpsn	file "../Source/prod.c",line 2883,column 6,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |2883| 
        CMP64     ACC:P                 ; [CPU_] |2883| 
        B         $C$L451,LEQ           ; [CPU_] |2883| 
        ; branchcc occurs ; [] |2883| 
	.dwpsn	file "../Source/prod.c",line 2885,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2885| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2885| 
        MOV       *-SP[2],#0            ; [CPU_] |2885| 
        MOV       *-SP[1],#0            ; [CPU_] |2885| 
        MOVL      P,*-SP[32]            ; [CPU_] |2885| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2885| 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$973, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2885| 
        ; call occurs [#LL$$CMP] ; [] |2885| 
        CMPB      AL,#0                 ; [CPU_] |2885| 
        B         $C$L450,GEQ           ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
	.dwpsn	file "../Source/prod.c",line 2888,column 7,is_stmt,isa 0
        MOV       AL,*-SP[32]           ; [CPU_] |2888| 
        MOV       *-SP[35],AL           ; [CPU_] |2888| 
        B         $C$L452,UNC           ; [CPU_] |2888| 
        ; branch occurs ; [] |2888| 
$C$L450:    
	.dwpsn	file "../Source/prod.c",line 2886,column 7,is_stmt,isa 0
        MOV       *-SP[35],#65535       ; [CPU_] |2886| 
	.dwpsn	file "../Source/prod.c",line 2887,column 6,is_stmt,isa 0
        B         $C$L452,UNC           ; [CPU_] |2887| 
        ; branch occurs ; [] |2887| 
$C$L451:    
	.dwpsn	file "../Source/prod.c",line 2884,column 7,is_stmt,isa 0
        MOV       *-SP[35],#0           ; [CPU_] |2884| 
$C$L452:    
        MOV       AH,*-SP[57]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2891,column 6,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |2891| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2891| 
        ; call occurs [#_mcbsp_xmit] ; [] |2891| 
	.dwpsn	file "../Source/prod.c",line 2892,column 6,is_stmt,isa 0
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("_latch_dac")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2892| 
        ; call occurs [#_latch_dac] ; [] |2892| 
	.dwpsn	file "../Source/prod.c",line 2894,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2894| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2894| 
        MOVL      XAR0,#44              ; [CPU_] |2894| 
        ADD       AL,*-SP[57]           ; [CPU_] |2894| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2894| 
        MOV       *-SP[3],AL            ; [CPU_] |2894| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |2894| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2894| 
        MOV       AL,*-SP[35]           ; [CPU_] |2894| 
        MOV       *-SP[7],AL            ; [CPU_] |2894| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2894| 
        MOVL      XAR4,XAR1             ; [CPU_] |2894| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("_sprintf")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2894| 
        ; call occurs [#_sprintf] ; [] |2894| 
        MOVL      XAR4,XAR1             ; [CPU_] |2894| 
	.dwpsn	file "../Source/prod.c",line 2898,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2898| 
        ; branch occurs ; [] |2898| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2741,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2741| 
        MOVL      XAR0,#44              ; [CPU_] |2741| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2741| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2741| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2741| 
        MOVL      XAR4,XAR1             ; [CPU_] |2741| 
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("_sprintf")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2741| 
        ; call occurs [#_sprintf] ; [] |2741| 
	.dwpsn	file "../Source/prod.c",line 2742,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2742| 
	.dwpsn	file "../Source/prod.c",line 2741,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2741| 
	.dwpsn	file "../Source/prod.c",line 2742,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2742| 
        MOV       AL,#1024              ; [CPU_] |2742| 
        MOVL      XAR5,XAR1             ; [CPU_] |2742| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2742| 
        ; call occurs [#_scia_getparam] ; [] |2742| 
	.dwpsn	file "../Source/prod.c",line 2743,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2743| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("_atoi")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2743| 
        ; call occurs [#_atoi] ; [] |2743| 
        MOV       *-SP[57],AL           ; [CPU_] |2743| 
	.dwpsn	file "../Source/prod.c",line 2744,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2744| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("_scia_puts")
	.dwattr $C$DW$980, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2744| 
        ; call occurs [#_scia_puts] ; [] |2744| 
        MOV       AL,*-SP[57]           ; [CPU_] |2744| 
	.dwpsn	file "../Source/prod.c",line 2746,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2746| 
        CMPB      AL,#4                 ; [CPU_] |2746| 
        B         $C$L468,HIS           ; [CPU_] |2746| 
        ; branchcc occurs ; [] |2746| 
	.dwpsn	file "../Source/prod.c",line 2750,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2750| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_scia_puts")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2750| 
        ; call occurs [#_scia_puts] ; [] |2750| 
        MOVL      XAR0,#62              ; [CPU_] |2750| 
	.dwpsn	file "../Source/prod.c",line 2754,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2754| 
	.dwpsn	file "../Source/prod.c",line 2750,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2750| 
	.dwpsn	file "../Source/prod.c",line 2754,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2754| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2755,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2755| 
        MOVL      XAR0,#44              ; [CPU_] |2755| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2755| 
        MOV       *-SP[3],AL            ; [CPU_] |2755| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2755| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2755| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2755| 
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_sprintf")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2755| 
        ; call occurs [#_sprintf] ; [] |2755| 
        MOVL      XAR0,#44              ; [CPU_] |2755| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2755| 
	.dwpsn	file "../Source/prod.c",line 2756,column 7,is_stmt,isa 0
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_scia_puts")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2756| 
        ; call occurs [#_scia_puts] ; [] |2756| 
	.dwpsn	file "../Source/prod.c",line 2757,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2757| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_puts")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2757| 
        ; call occurs [#_scia_puts] ; [] |2757| 
	.dwpsn	file "../Source/prod.c",line 2754,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2754| 
	.dwpsn	file "../Source/prod.c",line 2757,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2757| 
	.dwpsn	file "../Source/prod.c",line 2754,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2754| 
        B         $C$L454,LT            ; [CPU_] |2754| 
        ; branchcc occurs ; [] |2754| 
	.dwpsn	file "../Source/prod.c",line 2760,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2760| 
        MOVB      XAR0,#14              ; [CPU_] |2760| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2760| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2760| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2760| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2760| 
        MOVL      XAR0,#44              ; [CPU_] |2760| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2760| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2760| 
        MOVL      XAR4,XAR1             ; [CPU_] |2760| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_sprintf")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2760| 
        ; call occurs [#_sprintf] ; [] |2760| 
	.dwpsn	file "../Source/prod.c",line 2761,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2761| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_puts")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2761| 
        ; call occurs [#_scia_puts] ; [] |2761| 
	.dwpsn	file "../Source/prod.c",line 2762,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2762| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_scia_puts")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2762| 
        ; call occurs [#_scia_puts] ; [] |2762| 
	.dwpsn	file "../Source/prod.c",line 2763,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2763| 
	.dwpsn	file "../Source/prod.c",line 2762,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2762| 
	.dwpsn	file "../Source/prod.c",line 2763,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2763| 
        DEC       *-SP[57]              ; [CPU_] |2763| 
        MOV       *-SP[47],AH           ; [CPU_] |2763| 
        MOV       *-SP[3],AH            ; [CPU_] |2763| 
        MOVL      XAR4,XAR1             ; [CPU_] |2763| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_sprintf")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2763| 
        ; call occurs [#_sprintf] ; [] |2763| 
	.dwpsn	file "../Source/prod.c",line 2765,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2765| 
        MOVL      XAR4,XAR1             ; [CPU_] |2765| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2765| 
        MOV       AL,#1024              ; [CPU_] |2765| 
        MOVL      XAR5,XAR1             ; [CPU_] |2765| 
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2765| 
        ; call occurs [#_scia_getparam] ; [] |2765| 
        MOVL      XAR4,XAR1             ; [CPU_] |2765| 
	.dwpsn	file "../Source/prod.c",line 2766,column 6,is_stmt,isa 0
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_atoi")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2766| 
        ; call occurs [#_atoi] ; [] |2766| 
	.dwpsn	file "../Source/prod.c",line 2759,column 6,is_stmt,isa 0
        MOV       *-SP[60],#7           ; [CPU_] |2759| 
	.dwpsn	file "../Source/prod.c",line 2766,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |2766| 
	.dwpsn	file "../Source/prod.c",line 2767,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2767| 
        B         $C$L455,LO            ; [CPU_] |2767| 
        ; branchcc occurs ; [] |2767| 
        CMPB      AL,#7                 ; [CPU_] |2767| 
        B         $C$L455,EQ            ; [CPU_] |2767| 
        ; branchcc occurs ; [] |2767| 
	.dwpsn	file "../Source/prod.c",line 2769,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2769| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_scia_puts")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2769| 
        ; call occurs [#_scia_puts] ; [] |2769| 
	.dwpsn	file "../Source/prod.c",line 2768,column 7,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2768| 
$C$L455:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2772,column 6,is_stmt,isa 0
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_scia_puts")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2772| 
        ; call occurs [#_scia_puts] ; [] |2772| 
	.dwpsn	file "../Source/prod.c",line 2773,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2773| 
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2773| 
        ; call occurs [#_scia_puts] ; [] |2773| 
	.dwpsn	file "../Source/prod.c",line 2774,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2774| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2774| 
        MOVB      AL,#12                ; [CPU_] |2774| 
        MOV       T,*-SP[57]            ; [CPU_] |2774| 
        MPYU      ACC,T,AL              ; [CPU_] |2774| 
        ADDL      ACC,XAR6              ; [CPU_] |2774| 
        ADD       ACC,#1567 << 1        ; [CPU_] |2774| 
        MOVL      XAR1,ACC              ; [CPU_] |2774| 
        MOV       AL,*-SP[59]           ; [CPU_] |2774| 
	.dwpsn	file "../Source/prod.c",line 2776,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2776| 
	.dwpsn	file "../Source/prod.c",line 2774,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2774| 
	.dwpsn	file "../Source/prod.c",line 2776,column 6,is_stmt,isa 0
        B         $C$L462,EQ            ; [CPU_] |2776| 
        ; branchcc occurs ; [] |2776| 
	.dwpsn	file "../Source/prod.c",line 2778,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2778| 
        B         $C$L457,EQ            ; [CPU_] |2778| 
        ; branchcc occurs ; [] |2778| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2778| 
        B         $C$L457,EQ            ; [CPU_] |2778| 
        ; branchcc occurs ; [] |2778| 
	.dwpsn	file "../Source/prod.c",line 2781,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2781| 
        B         $C$L456,EQ            ; [CPU_] |2781| 
        ; branchcc occurs ; [] |2781| 
        CMPB      AL,#4                 ; [CPU_] |2781| 
        B         $C$L458,NEQ           ; [CPU_] |2781| 
        ; branchcc occurs ; [] |2781| 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2782,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2782| 
        B         $C$L458,UNC           ; [CPU_] |2782| 
        ; branch occurs ; [] |2782| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2780,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2780| 
$C$L458:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2787,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2787| 
        MOV       AL,*-SP[60]           ; [CPU_] |2787| 
        MOVL      XAR0,#44              ; [CPU_] |2787| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2787| 
        MOV       *-SP[3],AL            ; [CPU_] |2787| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2787| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_sprintf")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2787| 
        ; call occurs [#_sprintf] ; [] |2787| 
        MOVL      XAR0,#44              ; [CPU_] |2787| 
	.dwpsn	file "../Source/prod.c",line 2788,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2788| 
	.dwpsn	file "../Source/prod.c",line 2787,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2787| 
	.dwpsn	file "../Source/prod.c",line 2788,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2788| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2788| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2788| 
        ; call occurs [#_scia_getparam] ; [] |2788| 
        MOVL      XAR0,#86              ; [CPU_] |2788| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2788| 
	.dwpsn	file "../Source/prod.c",line 2789,column 8,is_stmt,isa 0
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_atoi")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2789| 
        ; call occurs [#_atoi] ; [] |2789| 
        MOVL      XAR0,#86              ; [CPU_] |2789| 
        MOV       *-SP[58],AL           ; [CPU_] |2789| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2789| 
	.dwpsn	file "../Source/prod.c",line 2790,column 8,is_stmt,isa 0
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_puts")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2790| 
        ; call occurs [#_scia_puts] ; [] |2790| 
        MOV       AL,*-SP[58]           ; [CPU_] |2790| 
	.dwpsn	file "../Source/prod.c",line 2792,column 9,is_stmt,isa 0
        B         $C$L467,EQ            ; [CPU_] |2792| 
        ; branchcc occurs ; [] |2792| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2792| 
        B         $C$L467,LO            ; [CPU_] |2792| 
        ; branchcc occurs ; [] |2792| 
	.dwpsn	file "../Source/prod.c",line 2796,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2796| 
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_puts")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2796| 
        ; call occurs [#_scia_puts] ; [] |2796| 
	.dwpsn	file "../Source/prod.c",line 2798,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2798| 
	.dwpsn	file "../Source/prod.c",line 2796,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2796| 
	.dwpsn	file "../Source/prod.c",line 2798,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2798| 
        MOV       AL,*-SP[59]           ; [CPU_] |2798| 
	.dwpsn	file "../Source/prod.c",line 2801,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2801| 
        B         $C$L460,EQ            ; [CPU_] |2801| 
        ; branchcc occurs ; [] |2801| 
        CMPB      AL,#4                 ; [CPU_] |2801| 
        B         $C$L462,NEQ           ; [CPU_] |2801| 
        ; branchcc occurs ; [] |2801| 
	.dwpsn	file "../Source/prod.c",line 2806,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2806| 
        B         $C$L461,UNC           ; [CPU_] |2806| 
        ; branch occurs ; [] |2806| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2804,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2804| 
$C$L461:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2804| 
        MOVL      XAR0,#44              ; [CPU_] |2804| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2804| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_sprintf")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2804| 
        ; call occurs [#_sprintf] ; [] |2804| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2808,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2808| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] |2808| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2808| 
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2808| 
        ; call occurs [#_scia_getparam] ; [] |2808| 
        MOVL      XAR0,#86              ; [CPU_] |2808| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2808,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2808| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_strtod")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2809,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2809| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2809| 
        MOVL      XAR0,#86              ; [CPU_] |2809| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2809| 
	.dwpsn	file "../Source/prod.c",line 2810,column 8,is_stmt,isa 0
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2810| 
        ; call occurs [#_scia_puts] ; [] |2810| 
	.dwpsn	file "../Source/prod.c",line 2811,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2811| 
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2811| 
        ; call occurs [#_scia_puts] ; [] |2811| 
	.dwpsn	file "../Source/prod.c",line 2814,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2814| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2814| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2814| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2814| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_sprintf")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2814| 
        ; call occurs [#_sprintf] ; [] |2814| 
        MOVL      XAR0,#44              ; [CPU_] |2814| 
	.dwpsn	file "../Source/prod.c",line 2815,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2815| 
	.dwpsn	file "../Source/prod.c",line 2814,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2814| 
	.dwpsn	file "../Source/prod.c",line 2815,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2815| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2815| 
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2815| 
        ; call occurs [#_scia_getparam] ; [] |2815| 
        MOVL      XAR0,#86              ; [CPU_] |2815| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2815,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2815| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_strtod")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2816,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2816| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2816| 
        MOVL      XAR0,#86              ; [CPU_] |2816| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2816| 
	.dwpsn	file "../Source/prod.c",line 2817,column 8,is_stmt,isa 0
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2817| 
        ; call occurs [#_scia_puts] ; [] |2817| 
	.dwpsn	file "../Source/prod.c",line 2818,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2818| 
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2818| 
        ; call occurs [#_scia_puts] ; [] |2818| 
$C$L462:    
	.dwpsn	file "../Source/prod.c",line 2825,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2825| 
        MOV       AL,*-SP[47]           ; [CPU_] |2825| 
        MOVL      XAR0,#62              ; [CPU_] |2825| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2825| 
        MOV       *-SP[3],AL            ; [CPU_] |2825| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2825| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |2825| 
        MOV       ACC,AL << 1           ; [CPU_] |2825| 
        ADDL      ACC,XAR6              ; [CPU_] |2825| 
        MOVL      XAR4,ACC              ; [CPU_] |2825| 
        MOVL      XAR0,#44              ; [CPU_] |2825| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2825| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2825| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2825| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_sprintf")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2825| 
        ; call occurs [#_sprintf] ; [] |2825| 
        MOVL      XAR0,#44              ; [CPU_] |2825| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2825| 
	.dwpsn	file "../Source/prod.c",line 2827,column 6,is_stmt,isa 0
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2827| 
        ; call occurs [#_scia_puts] ; [] |2827| 
	.dwpsn	file "../Source/prod.c",line 2822,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2822| 
        MOV       AL,*-SP[59]           ; [CPU_] |2822| 
	.dwpsn	file "../Source/prod.c",line 2829,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2829| 
        B         $C$L464,EQ            ; [CPU_] |2829| 
        ; branchcc occurs ; [] |2829| 
	.dwpsn	file "../Source/prod.c",line 2832,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2832| 
        MOVB      AL,#1                 ; [CPU_] |2832| 
        MOVL      XAR0,#44              ; [CPU_] |2832| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2832| 
        ADD       AL,*-SP[58]           ; [CPU_] |2832| 
        MOV       *-SP[3],AL            ; [CPU_] |2832| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2832| 
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_sprintf")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2832| 
        ; call occurs [#_sprintf] ; [] |2832| 
        MOVL      XAR0,#44              ; [CPU_] |2832| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2832| 
	.dwpsn	file "../Source/prod.c",line 2833,column 7,is_stmt,isa 0
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2833| 
        ; call occurs [#_scia_puts] ; [] |2833| 
        MOV       AL,*-SP[59]           ; [CPU_] |2833| 
	.dwpsn	file "../Source/prod.c",line 2835,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2835| 
        B         $C$L463,EQ            ; [CPU_] |2835| 
        ; branchcc occurs ; [] |2835| 
        CMPB      AL,#4                 ; [CPU_] |2835| 
        B         $C$L466,NEQ           ; [CPU_] |2835| 
        ; branchcc occurs ; [] |2835| 
$C$L463:    
	.dwpsn	file "../Source/prod.c",line 2836,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2836| 
        MOVB      XAR0,#8               ; [CPU_] |2836| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2836| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2836| 
        MOVB      XAR0,#10              ; [CPU_] |2836| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2836| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2836| 
        MOVL      XAR0,#44              ; [CPU_] |2836| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2836| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2836| 
        MOVL      XAR4,XAR1             ; [CPU_] |2836| 
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_sprintf")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2836| 
        ; call occurs [#_sprintf] ; [] |2836| 
        MOVL      XAR4,XAR1             ; [CPU_] |2836| 
	.dwpsn	file "../Source/prod.c",line 2839,column 8,is_stmt,isa 0
        B         $C$L465,UNC           ; [CPU_] |2839| 
        ; branch occurs ; [] |2839| 
$C$L464:    
	.dwpsn	file "../Source/prod.c",line 2830,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2830| 
$C$L465:    
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2830| 
        ; call occurs [#_scia_puts] ; [] |2830| 
$C$L466:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2844,column 6,is_stmt,isa 0
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2844| 
        ; call occurs [#_ad7738_setcal] ; [] |2844| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2846,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |2846| 
        ; branch occurs ; [] |2846| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2794,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2794| 
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2794| 
        ; call occurs [#_scia_puts] ; [] |2794| 
	.dwpsn	file "../Source/prod.c",line 2786,column 7,is_stmt,isa 0
        B         $C$L459,UNC           ; [CPU_] |2786| 
        ; branch occurs ; [] |2786| 
$C$L468:    
	.dwpsn	file "../Source/prod.c",line 2748,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2748| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2748| 
        ; call occurs [#_scia_puts] ; [] |2748| 
	.dwpsn	file "../Source/prod.c",line 2740,column 6,is_stmt,isa 0
        B         $C$L453,UNC           ; [CPU_] |2740| 
        ; branch occurs ; [] |2740| 
$C$L469:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2912,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2912| 
        B         $C$L626,LO            ; [CPU_] |2912| 
        ; branchcc occurs ; [] |2912| 
	.dwpsn	file "../Source/prod.c",line 2915,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2915| 
        CMPB      AL,#83                ; [CPU_] |2915| 
        B         $C$L626,NEQ           ; [CPU_] |2915| 
        ; branchcc occurs ; [] |2915| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2922,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2922| 
        MOVL      XAR0,#44              ; [CPU_] |2922| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2922| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2922| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2922| 
        MOVL      XAR4,XAR1             ; [CPU_] |2922| 
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_sprintf")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2922| 
        ; call occurs [#_sprintf] ; [] |2922| 
	.dwpsn	file "../Source/prod.c",line 2923,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2923| 
	.dwpsn	file "../Source/prod.c",line 2922,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2922| 
	.dwpsn	file "../Source/prod.c",line 2923,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2923| 
        MOV       AL,#1024              ; [CPU_] |2923| 
        MOVL      XAR5,XAR1             ; [CPU_] |2923| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2923| 
        ; call occurs [#_scia_getparam] ; [] |2923| 
	.dwpsn	file "../Source/prod.c",line 2924,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2924| 
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_atoi")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2924| 
        ; call occurs [#_atoi] ; [] |2924| 
        MOV       *-SP[57],AL           ; [CPU_] |2924| 
	.dwpsn	file "../Source/prod.c",line 2925,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2925| 
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2925| 
        ; call occurs [#_scia_puts] ; [] |2925| 
        MOV       AL,*-SP[57]           ; [CPU_] |2925| 
	.dwpsn	file "../Source/prod.c",line 2927,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2927| 
        CMPB      AL,#4                 ; [CPU_] |2927| 
        B         $C$L496,HIS           ; [CPU_] |2927| 
        ; branchcc occurs ; [] |2927| 
	.dwpsn	file "../Source/prod.c",line 2931,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2931| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2931| 
        ; call occurs [#_scia_puts] ; [] |2931| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2931| 
	.dwpsn	file "../Source/prod.c",line 2934,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2934| 
        MOVL      XAR0,#44              ; [CPU_] |2934| 
        DEC       *-SP[57]              ; [CPU_] |2934| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2934| 
        MOV       *-SP[47],AR1          ; [CPU_] |2934| 
        MOV       *-SP[3],AR1           ; [CPU_] |2934| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2934| 
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_sprintf")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2934| 
        ; call occurs [#_sprintf] ; [] |2934| 
        MOVL      XAR0,#44              ; [CPU_] |2934| 
	.dwpsn	file "../Source/prod.c",line 2935,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2935| 
	.dwpsn	file "../Source/prod.c",line 2934,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2934| 
	.dwpsn	file "../Source/prod.c",line 2935,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2935| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2935| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2935| 
        ; call occurs [#_scia_getparam] ; [] |2935| 
        MOVL      XAR0,#86              ; [CPU_] |2935| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2935| 
	.dwpsn	file "../Source/prod.c",line 2936,column 6,is_stmt,isa 0
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2936| 
        ; call occurs [#_scia_puts] ; [] |2936| 
	.dwpsn	file "../Source/prod.c",line 2937,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2937| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2937| 
        ; call occurs [#_scia_puts] ; [] |2937| 
        MOVL      XAR0,#86              ; [CPU_] |2937| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2937| 
	.dwpsn	file "../Source/prod.c",line 2939,column 6,is_stmt,isa 0
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_atoi")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2939| 
        ; call occurs [#_atoi] ; [] |2939| 
        CMPB      AL,#1                 ; [CPU_] |2939| 
        B         $C$L471,EQ            ; [CPU_] |2939| 
        ; branchcc occurs ; [] |2939| 
	.dwpsn	file "../Source/prod.c",line 3088,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3088| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3088| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |3088| 
        ADDL      ACC,XAR6              ; [CPU_] |3088| 
        ADD       ACC,#199 << 4         ; [CPU_] |3088| 
        MOVL      XAR4,ACC              ; [CPU_] |3088| 
	.dwpsn	file "../Source/prod.c",line 3089,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3089| 
	.dwpsn	file "../Source/prod.c",line 3088,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |3088| 
	.dwpsn	file "../Source/prod.c",line 3089,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |3089| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3089| 
        MOV       *-SP[3],AR1           ; [CPU_] |3089| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3089| 
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_sprintf")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3089| 
        ; call occurs [#_sprintf] ; [] |3089| 
        B         $C$L410,UNC           ; [CPU_] |3089| 
        ; branch occurs ; [] |3089| 
$C$L471:    
	.dwpsn	file "../Source/prod.c",line 2942,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2942| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2942| 
        MOV       AL,*-SP[57]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2942| 
        ADDL      ACC,XAR6              ; [CPU_] |2942| 
        ADD       ACC,#1591 << 1        ; [CPU_] |2942| 
        MOVL      XAR1,ACC              ; [CPU_] |2942| 
        MOVL      XAR0,#62              ; [CPU_] |2942| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2942| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2942| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2945,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2945| 
        MOV       *-SP[60],AL           ; [CPU_] |2945| 
$C$L472:    
	.dwpsn	file "../Source/prod.c",line 2946,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2946| 
        MOVL      XAR0,#88              ; [CPU_] |2946| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2946| 
        MOV       *-SP[3],AL            ; [CPU_] |2946| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2946| 
        MOVL      XAR0,#88              ; [CPU_] |2946| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2946| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2946| 
        MOVL      XAR0,#44              ; [CPU_] |2946| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2946| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2946| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_sprintf")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2946| 
        ; call occurs [#_sprintf] ; [] |2946| 
        MOVL      XAR0,#44              ; [CPU_] |2946| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2946| 
	.dwpsn	file "../Source/prod.c",line 2947,column 8,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2947| 
        ; call occurs [#_scia_puts] ; [] |2947| 
        MOV       AL,*-SP[60]           ; [CPU_] |2947| 
	.dwpsn	file "../Source/prod.c",line 2948,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2948| 
        B         $C$L473,GEQ           ; [CPU_] |2948| 
        ; branchcc occurs ; [] |2948| 
	.dwpsn	file "../Source/prod.c",line 2949,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2949| 
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2949| 
        ; call occurs [#_scia_puts] ; [] |2949| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2945,column 19,is_stmt,isa 0
        INC       *-SP[60]              ; [CPU_] |2945| 
        MOV       AL,*-SP[60]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2945| 
        B         $C$L472,LT            ; [CPU_] |2945| 
        ; branchcc occurs ; [] |2945| 
	.dwpsn	file "../Source/prod.c",line 2952,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2952| 
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2952| 
        ; call occurs [#_scia_puts] ; [] |2952| 
	.dwpsn	file "../Source/prod.c",line 2953,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2953| 
        MOVL      XAR0,#44              ; [CPU_] |2953| 
        MOV       AL,*-SP[47]           ; [CPU_] |2953| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2953| 
        MOV       *-SP[3],AL            ; [CPU_] |2953| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2953| 
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_sprintf")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2953| 
        ; call occurs [#_sprintf] ; [] |2953| 
        MOVL      XAR0,#44              ; [CPU_] |2953| 
	.dwpsn	file "../Source/prod.c",line 2956,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2956| 
	.dwpsn	file "../Source/prod.c",line 2953,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2953| 
	.dwpsn	file "../Source/prod.c",line 2956,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2956| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2956| 
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2956| 
        ; call occurs [#_scia_getparam] ; [] |2956| 
        MOVL      XAR0,#86              ; [CPU_] |2956| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2956| 
	.dwpsn	file "../Source/prod.c",line 2957,column 7,is_stmt,isa 0
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_atoi")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2957| 
        ; call occurs [#_atoi] ; [] |2957| 
        MOV       *-SP[59],AL           ; [CPU_] |2957| 
        CMPB      AL,#5                 ; [CPU_] |2957| 
        B         $C$L474,LO            ; [CPU_] |2957| 
        ; branchcc occurs ; [] |2957| 
	.dwpsn	file "../Source/prod.c",line 2960,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2960| 
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2960| 
        ; call occurs [#_scia_puts] ; [] |2960| 
	.dwpsn	file "../Source/prod.c",line 2959,column 8,is_stmt,isa 0
        MOV       *-SP[59],#0           ; [CPU_] |2959| 
$C$L474:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2963| 
        ; call occurs [#_scia_puts] ; [] |2963| 
	.dwpsn	file "../Source/prod.c",line 2964,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2964| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2964| 
        ; call occurs [#_scia_puts] ; [] |2964| 
        MOV       AL,*-SP[59]           ; [CPU_] |2964| 
	.dwpsn	file "../Source/prod.c",line 2965,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2965| 
	.dwpsn	file "../Source/prod.c",line 2967,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2967| 
        B         $C$L476,EQ            ; [CPU_] |2967| 
        ; branchcc occurs ; [] |2967| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2967| 
        B         $C$L476,EQ            ; [CPU_] |2967| 
        ; branchcc occurs ; [] |2967| 
	.dwpsn	file "../Source/prod.c",line 2970,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2970| 
        B         $C$L475,EQ            ; [CPU_] |2970| 
        ; branchcc occurs ; [] |2970| 
        CMPB      AL,#4                 ; [CPU_] |2970| 
        B         $C$L477,NEQ           ; [CPU_] |2970| 
        ; branchcc occurs ; [] |2970| 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2971,column 8,is_stmt,isa 0
        MOV       *-SP[60],#2           ; [CPU_] |2971| 
        B         $C$L477,UNC           ; [CPU_] |2971| 
        ; branch occurs ; [] |2971| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2969,column 8,is_stmt,isa 0
        MOV       *-SP[60],#4           ; [CPU_] |2969| 
$C$L477:    
        MOV       AL,*-SP[60]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2976,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2976| 
        MOV       AL,*-SP[60]           ; [CPU_] |2976| 
        MOVL      XAR0,#44              ; [CPU_] |2976| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2976| 
        MOV       *-SP[3],AL            ; [CPU_] |2976| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2976| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_sprintf")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2976| 
        ; call occurs [#_sprintf] ; [] |2976| 
        MOVL      XAR0,#44              ; [CPU_] |2976| 
	.dwpsn	file "../Source/prod.c",line 2977,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2977| 
	.dwpsn	file "../Source/prod.c",line 2976,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2976| 
	.dwpsn	file "../Source/prod.c",line 2977,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2977| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2977| 
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2977| 
        ; call occurs [#_scia_getparam] ; [] |2977| 
        MOVL      XAR0,#86              ; [CPU_] |2977| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2977| 
	.dwpsn	file "../Source/prod.c",line 2978,column 8,is_stmt,isa 0
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_atoi")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2978| 
        ; call occurs [#_atoi] ; [] |2978| 
        MOVL      XAR0,#86              ; [CPU_] |2978| 
        MOV       *-SP[58],AL           ; [CPU_] |2978| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2978| 
	.dwpsn	file "../Source/prod.c",line 2979,column 8,is_stmt,isa 0
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2979| 
        ; call occurs [#_scia_puts] ; [] |2979| 
        MOV       AL,*-SP[58]           ; [CPU_] |2979| 
	.dwpsn	file "../Source/prod.c",line 2981,column 9,is_stmt,isa 0
        B         $C$L495,EQ            ; [CPU_] |2981| 
        ; branchcc occurs ; [] |2981| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2981| 
        B         $C$L495,LO            ; [CPU_] |2981| 
        ; branchcc occurs ; [] |2981| 
	.dwpsn	file "../Source/prod.c",line 2985,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2985| 
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2985| 
        ; call occurs [#_scia_puts] ; [] |2985| 
	.dwpsn	file "../Source/prod.c",line 2987,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2987| 
	.dwpsn	file "../Source/prod.c",line 2990,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2990| 
	.dwpsn	file "../Source/prod.c",line 2985,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2985| 
	.dwpsn	file "../Source/prod.c",line 2990,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2990| 
	.dwpsn	file "../Source/prod.c",line 2987,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2987| 
	.dwpsn	file "../Source/prod.c",line 2990,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2990| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2990| 
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2990| 
        ; call occurs [#_scia_getparam] ; [] |2990| 
        MOVL      XAR0,#86              ; [CPU_] |2990| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2990| 
	.dwpsn	file "../Source/prod.c",line 2993,column 7,is_stmt,isa 0
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2993| 
        ; call occurs [#_scia_puts] ; [] |2993| 
	.dwpsn	file "../Source/prod.c",line 2994,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2994| 
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2994| 
        ; call occurs [#_scia_puts] ; [] |2994| 
        MOVL      XAR0,#86              ; [CPU_] |2994| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2994| 
	.dwpsn	file "../Source/prod.c",line 2996,column 7,is_stmt,isa 0
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_atoi")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2996| 
        ; call occurs [#_atoi] ; [] |2996| 
        CMPB      AL,#1                 ; [CPU_] |2996| 
        B         $C$L479,EQ            ; [CPU_] |2996| 
        ; branchcc occurs ; [] |2996| 
	.dwpsn	file "../Source/prod.c",line 3000,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |3000| 
        B         $C$L480,UNC           ; [CPU_] |3000| 
        ; branch occurs ; [] |3000| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2998,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2998| 
$C$L480:    
	.dwpsn	file "../Source/prod.c",line 3003,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3003| 
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |3003| 
        MOV       AL,#1024              ; [CPU_] |3003| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3003| 
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3003| 
        ; call occurs [#_scia_getparam] ; [] |3003| 
        MOVL      XAR0,#86              ; [CPU_] |3003| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3003| 
	.dwpsn	file "../Source/prod.c",line 3006,column 7,is_stmt,isa 0
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3006| 
        ; call occurs [#_scia_puts] ; [] |3006| 
	.dwpsn	file "../Source/prod.c",line 3007,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3007| 
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3007| 
        ; call occurs [#_scia_puts] ; [] |3007| 
        MOVL      XAR0,#86              ; [CPU_] |3007| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3007| 
	.dwpsn	file "../Source/prod.c",line 3009,column 7,is_stmt,isa 0
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_atoi")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3009| 
        ; call occurs [#_atoi] ; [] |3009| 
        CMPB      AL,#1                 ; [CPU_] |3009| 
        B         $C$L481,EQ            ; [CPU_] |3009| 
        ; branchcc occurs ; [] |3009| 
	.dwpsn	file "../Source/prod.c",line 3013,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |3013| 
        B         $C$L482,UNC           ; [CPU_] |3013| 
        ; branch occurs ; [] |3013| 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 3011,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |3011| 
$C$L482:    
	.dwpsn	file "../Source/prod.c",line 3016,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3016| 
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |3016| 
        MOV       AL,#1024              ; [CPU_] |3016| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3016| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3016| 
        ; call occurs [#_scia_getparam] ; [] |3016| 
        MOVL      XAR0,#86              ; [CPU_] |3016| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3016| 
	.dwpsn	file "../Source/prod.c",line 3019,column 7,is_stmt,isa 0
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3019| 
        ; call occurs [#_scia_puts] ; [] |3019| 
	.dwpsn	file "../Source/prod.c",line 3020,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3020| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3020| 
        ; call occurs [#_scia_puts] ; [] |3020| 
        MOVL      XAR0,#86              ; [CPU_] |3020| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3020| 
	.dwpsn	file "../Source/prod.c",line 3022,column 7,is_stmt,isa 0
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_atoi")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3022| 
        ; call occurs [#_atoi] ; [] |3022| 
        CMPB      AL,#1                 ; [CPU_] |3022| 
        B         $C$L483,EQ            ; [CPU_] |3022| 
        ; branchcc occurs ; [] |3022| 
	.dwpsn	file "../Source/prod.c",line 3026,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |3026| 
        B         $C$L484,UNC           ; [CPU_] |3026| 
        ; branch occurs ; [] |3026| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 3024,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |3024| 
$C$L484:    
	.dwpsn	file "../Source/prod.c",line 3030,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3030| 
        CMPB      AL,#2                 ; [CPU_] |3030| 
        B         $C$L486,LOS           ; [CPU_] |3030| 
        ; branchcc occurs ; [] |3030| 
        CMPB      AL,#3                 ; [CPU_] |3030| 
        B         $C$L485,EQ            ; [CPU_] |3030| 
        ; branchcc occurs ; [] |3030| 
        CMPB      AL,#4                 ; [CPU_] |3030| 
        B         $C$L488,NEQ           ; [CPU_] |3030| 
        ; branchcc occurs ; [] |3030| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3042,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |3042| 
	.dwpsn	file "../Source/prod.c",line 3043,column 8,is_stmt,isa 0
        B         $C$L487,UNC           ; [CPU_] |3043| 
        ; branch occurs ; [] |3043| 
$C$L485:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3039,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |3039| 
	.dwpsn	file "../Source/prod.c",line 3040,column 8,is_stmt,isa 0
        B         $C$L487,UNC           ; [CPU_] |3040| 
        ; branch occurs ; [] |3040| 
$C$L486:    
	.dwpsn	file "../Source/prod.c",line 3034,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3034| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3034| 
        MOV       T,#10                 ; [CPU_] |3034| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |3034| 
        ADDL      ACC,XAR6              ; [CPU_] |3034| 
        MOVL      XAR4,ACC              ; [CPU_] |3034| 
        MOVB      XAR0,#42              ; [CPU_] |3034| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |3034| 
        MPYB      ACC,T,#152            ; [CPU_] |3034| 
        ADDL      ACC,XAR6              ; [CPU_] |3034| 
        MOVL      XAR4,ACC              ; [CPU_] |3034| 
        MOVB      XAR0,#125             ; [CPU_] |3034| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3034| 
        MOVL      XAR0,#70              ; [CPU_] |3034| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3034| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |3034| 
        MOV       ACC,AL << 1           ; [CPU_] |3034| 
        ADDL      ACC,XAR6              ; [CPU_] |3034| 
        MOVL      XAR4,ACC              ; [CPU_] |3034| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3034| 
$C$L487:    
        MOVL      XAR0,#48              ; [CPU_] |3034| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3034| 
$C$L488:    
	.dwpsn	file "../Source/prod.c",line 3047,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |3047| 
        MOVL      XAR0,#48              ; [CPU_] |3047| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3047| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3047| 
        MOVL      XAR0,#44              ; [CPU_] |3047| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3047| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3047| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_sprintf")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3047| 
        ; call occurs [#_sprintf] ; [] |3047| 
        MOVL      XAR0,#44              ; [CPU_] |3047| 
	.dwpsn	file "../Source/prod.c",line 3048,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3048| 
	.dwpsn	file "../Source/prod.c",line 3047,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3047| 
	.dwpsn	file "../Source/prod.c",line 3048,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3048| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3048| 
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3048| 
        ; call occurs [#_scia_getparam] ; [] |3048| 
        MOVL      XAR0,#86              ; [CPU_] |3048| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3048| 
	.dwpsn	file "../Source/prod.c",line 3049,column 7,is_stmt,isa 0
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3049| 
        ; call occurs [#_scia_puts] ; [] |3049| 
	.dwpsn	file "../Source/prod.c",line 3050,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3050| 
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3050| 
        ; call occurs [#_scia_puts] ; [] |3050| 
        MOVL      XAR0,#86              ; [CPU_] |3050| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3050,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3050| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_strtod")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3056,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |3056| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |3056| 
	.dwpsn	file "../Source/prod.c",line 3052,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |3052| 
	.dwpsn	file "../Source/prod.c",line 3056,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |3056| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3056| 
        MOVL      XAR0,#44              ; [CPU_] |3056| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3056| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3056| 
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_sprintf")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3056| 
        ; call occurs [#_sprintf] ; [] |3056| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3057,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |3057| 
        MOVL      XAR0,#86              ; [CPU_] |3057| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |3057| 
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |3057| 
        ; call occurs [#_scia_getparam] ; [] |3057| 
        MOVL      XAR0,#86              ; [CPU_] |3057| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3057| 
	.dwpsn	file "../Source/prod.c",line 3058,column 7,is_stmt,isa 0
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3058| 
        ; call occurs [#_scia_puts] ; [] |3058| 
	.dwpsn	file "../Source/prod.c",line 3059,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3059| 
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3059| 
        ; call occurs [#_scia_puts] ; [] |3059| 
        MOVL      XAR0,#86              ; [CPU_] |3059| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 3059,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3059| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_strtod")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 3067,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |3067| 
        MOVL      XAR0,#62              ; [CPU_] |3067| 
	.dwpsn	file "../Source/prod.c",line 3061,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |3061| 
	.dwpsn	file "../Source/prod.c",line 3067,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |3067| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3067| 
        MOV       *-SP[3],AL            ; [CPU_] |3067| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3067| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[59]           ; [CPU_] |3067| 
        MOV       ACC,AL << 1           ; [CPU_] |3067| 
        ADDL      ACC,XAR6              ; [CPU_] |3067| 
        MOVL      XAR4,ACC              ; [CPU_] |3067| 
        MOVL      XAR0,#44              ; [CPU_] |3067| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |3067| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3067| 
        MOVB      AL,#1                 ; [CPU_] |3067| 
        ADD       AL,*-SP[58]           ; [CPU_] |3067| 
        MOV       *-SP[7],AL            ; [CPU_] |3067| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3067| 
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_sprintf")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3067| 
        ; call occurs [#_sprintf] ; [] |3067| 
        MOVL      XAR0,#44              ; [CPU_] |3067| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3067| 
	.dwpsn	file "../Source/prod.c",line 3070,column 7,is_stmt,isa 0
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3070| 
        ; call occurs [#_scia_puts] ; [] |3070| 
	.dwpsn	file "../Source/prod.c",line 3072,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |3072| 
        B         $C$L489,TC            ; [CPU_] |3072| 
        ; branchcc occurs ; [] |3072| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |3072| 
        B         $C$L490,UNC           ; [CPU_] |3072| 
        ; branch occurs ; [] |3072| 
$C$L489:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |3072| 
$C$L490:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |3072| 
        B         $C$L491,TC            ; [CPU_] |3072| 
        ; branchcc occurs ; [] |3072| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |3072| 
        B         $C$L492,UNC           ; [CPU_] |3072| 
        ; branch occurs ; [] |3072| 
$C$L491:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |3072| 
$C$L492:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |3072| 
        B         $C$L493,TC            ; [CPU_] |3072| 
        ; branchcc occurs ; [] |3072| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |3072| 
        B         $C$L494,UNC           ; [CPU_] |3072| 
        ; branch occurs ; [] |3072| 
$C$L493:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |3072| 
$C$L494:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |3072| 
        MOVL      XAR0,#44              ; [CPU_] |3072| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |3072| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |3072| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |3072| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |3072| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3072| 
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_sprintf")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |3072| 
        ; call occurs [#_sprintf] ; [] |3072| 
        MOVL      XAR0,#44              ; [CPU_] |3072| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3072| 
	.dwpsn	file "../Source/prod.c",line 3079,column 7,is_stmt,isa 0
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3079| 
        ; call occurs [#_scia_puts] ; [] |3079| 
	.dwpsn	file "../Source/prod.c",line 3080,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |3080| 
        MOVL      XAR0,#48              ; [CPU_] |3080| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |3080| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |3080| 
        MOVL      *-SP[4],ACC           ; [CPU_] |3080| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3080| 
        MOVL      XAR0,#48              ; [CPU_] |3080| 
        MOVL      *-SP[6],ACC           ; [CPU_] |3080| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |3080| 
        MOVL      *-SP[8],ACC           ; [CPU_] |3080| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3080| 
        MOVL      *-SP[10],ACC          ; [CPU_] |3080| 
	.dwpsn	file "../Source/prod.c",line 3097,column 6,is_stmt,isa 0
        B         $C$L409,UNC           ; [CPU_] |3097| 
        ; branch occurs ; [] |3097| 
$C$L495:    
	.dwpsn	file "../Source/prod.c",line 2983,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2983| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2983| 
        ; call occurs [#_scia_puts] ; [] |2983| 
	.dwpsn	file "../Source/prod.c",line 2975,column 7,is_stmt,isa 0
        B         $C$L478,UNC           ; [CPU_] |2975| 
        ; branch occurs ; [] |2975| 
$C$L496:    
	.dwpsn	file "../Source/prod.c",line 2929,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2929| 
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2929| 
        ; call occurs [#_scia_puts] ; [] |2929| 
	.dwpsn	file "../Source/prod.c",line 2921,column 6,is_stmt,isa 0
        B         $C$L470,UNC           ; [CPU_] |2921| 
        ; branch occurs ; [] |2921| 
$C$L497:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3401,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3401| 
        B         $C$L626,LO            ; [CPU_] |3401| 
        ; branchcc occurs ; [] |3401| 
	.dwpsn	file "../Source/prod.c",line 3404,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3404| 
        CMPB      AL,#68                ; [CPU_] |3404| 
        B         $C$L501,EQ            ; [CPU_] |3404| 
        ; branchcc occurs ; [] |3404| 
        CMPB      AL,#82                ; [CPU_] |3404| 
        B         $C$L500,EQ            ; [CPU_] |3404| 
        ; branchcc occurs ; [] |3404| 
        CMPB      AL,#87                ; [CPU_] |3404| 
        B         $C$L626,NEQ           ; [CPU_] |3404| 
        ; branchcc occurs ; [] |3404| 
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3408,column 6,is_stmt,isa 0
        B         $C$L498,NEQ           ; [CPU_] |3408| 
        ; branchcc occurs ; [] |3408| 
	.dwpsn	file "../Source/prod.c",line 3432,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |3432| 
	.dwpsn	file "../Source/prod.c",line 3434,column 6,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3434| 
        ; branch occurs ; [] |3434| 
$C$L498:    
	.dwpsn	file "../Source/prod.c",line 3410,column 7,is_stmt,isa 0
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3410| 
        ; call occurs [#_lcd_clear] ; [] |3410| 
	.dwpsn	file "../Source/prod.c",line 3411,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3411| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3411| 
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3411| 
        ; call occurs [#_lcd_puts] ; [] |3411| 
	.dwpsn	file "../Source/prod.c",line 3412,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3412| 
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3412| 
        ; call occurs [#_scia_puts] ; [] |3412| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L499:    
	.dwpsn	file "../Source/prod.c",line 3415,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3415| 
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_delay_us")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3415| 
        ; call occurs [#_delay_us] ; [] |3415| 
	.dwpsn	file "../Source/prod.c",line 3414,column 19,is_stmt,isa 0
        BANZ      $C$L499,AR3--         ; [CPU_] |3414| 
        ; branchcc occurs ; [] |3414| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3419,column 7,is_stmt,isa 0
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_conf_write")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3419| 
        ; call occurs [#_conf_write] ; [] |3419| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3422,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3422| 
        B         $C$L504,NEQ           ; [CPU_] |3422| 
        ; branchcc occurs ; [] |3422| 
	.dwpsn	file "../Source/prod.c",line 3423,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |3423| 
	.dwpsn	file "../Source/prod.c",line 3425,column 7,is_stmt,isa 0
        B         $C$L503,UNC           ; [CPU_] |3425| 
        ; branch occurs ; [] |3425| 
$C$L500:    
	.dwpsn	file "../Source/prod.c",line 3439,column 6,is_stmt,isa 0
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_conf_read")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3439| 
        ; call occurs [#_conf_read] ; [] |3439| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3442,column 6,is_stmt,isa 0
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3442| 
        ; call occurs [#_ad7738_setcal] ; [] |3442| 
	.dwpsn	file "../Source/prod.c",line 3443,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3443| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3443| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3443| 
	.dwpsn	file "../Source/prod.c",line 3444,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3444| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3444| 
        ; call occurs [#_ad7738_resetvall] ; [] |3444| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3447,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3447| 
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3447| 
        ; call occurs [#_scia_puts] ; [] |3447| 
	.dwpsn	file "../Source/prod.c",line 3450,column 6,is_stmt,isa 0
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_update_units")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3450| 
        ; call occurs [#_update_units] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3448,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3448| 
	.dwpsn	file "../Source/prod.c",line 3452,column 6,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |3452| 
        ; branch occurs ; [] |3452| 
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 3456,column 6,is_stmt,isa 0
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_conf_default")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3456| 
        ; call occurs [#_conf_default] ; [] |3456| 
	.dwpsn	file "../Source/prod.c",line 3459,column 6,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3459| 
        ; call occurs [#_lcd_clear] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3460,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3460| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3460| 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3460| 
        ; call occurs [#_lcd_puts] ; [] |3460| 
	.dwpsn	file "../Source/prod.c",line 3461,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3461| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3461| 
        ; call occurs [#_scia_puts] ; [] |3461| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 3464,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3464| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_delay_us")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3464| 
        ; call occurs [#_delay_us] ; [] |3464| 
	.dwpsn	file "../Source/prod.c",line 3463,column 18,is_stmt,isa 0
        BANZ      $C$L502,AR3--         ; [CPU_] |3463| 
        ; branchcc occurs ; [] |3463| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3468,column 6,is_stmt,isa 0
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_conf_write")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3468| 
        ; call occurs [#_conf_write] ; [] |3468| 
        MOVZ      AR1,AL                ; [CPU_] |3468| 
	.dwpsn	file "../Source/prod.c",line 3469,column 6,is_stmt,isa 0
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3469| 
        ; call occurs [#_ad7738_setcal] ; [] |3469| 
	.dwpsn	file "../Source/prod.c",line 3470,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3470| 
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3470| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3470| 
	.dwpsn	file "../Source/prod.c",line 3471,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3471| 
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3471| 
        ; call occurs [#_ad7738_resetvall] ; [] |3471| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3474,column 6,is_stmt,isa 0
        B         $C$L504,NEQ           ; [CPU_] |3474| 
        ; branchcc occurs ; [] |3474| 
	.dwpsn	file "../Source/prod.c",line 3475,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3475| 
$C$L503:    
        SPM       #0                    ; [CPU_] 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3475| 
        ; call occurs [#_scia_puts] ; [] |3475| 
	.dwpsn	file "../Source/prod.c",line 3477,column 7,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |3477| 
	.dwpsn	file "../Source/prod.c",line 3478,column 6,is_stmt,isa 0
        B         $C$L505,UNC           ; [CPU_] |3478| 
        ; branch occurs ; [] |3478| 
$C$L504:    
	.dwpsn	file "../Source/prod.c",line 3479,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3479| 
        SPM       #0                    ; [CPU_] 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3479| 
        ; call occurs [#_scia_puts] ; [] |3479| 
$C$L505:    
	.dwpsn	file "../Source/prod.c",line 3481,column 6,is_stmt,isa 0
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3481| 
        ; call occurs [#_lcd_clear] ; [] |3481| 
	.dwpsn	file "../Source/prod.c",line 3482,column 6,is_stmt,isa 0
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_update_units")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3482| 
        ; call occurs [#_update_units] ; [] |3482| 
	.dwpsn	file "../Source/prod.c",line 3483,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3483| 
        ; branch occurs ; [] |3483| 
$C$L506:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2508,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2508| 
        B         $C$L626,LO            ; [CPU_] |2508| 
        ; branchcc occurs ; [] |2508| 
	.dwpsn	file "../Source/prod.c",line 2511,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2511| 
        CMPB      AL,#70                ; [CPU_] |2511| 
        B         $C$L513,EQ            ; [CPU_] |2511| 
        ; branchcc occurs ; [] |2511| 
        CMPB      AL,#80                ; [CPU_] |2511| 
        B         $C$L633,NEQ           ; [CPU_] |2511| 
        ; branchcc occurs ; [] |2511| 
$C$L507:    
	.dwpsn	file "../Source/prod.c",line 2548,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |2548| 
        MOVL      XAR0,#44              ; [CPU_] |2548| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2548| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2548| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2548| 
        MOVL      XAR4,XAR1             ; [CPU_] |2548| 
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_sprintf")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2548| 
        ; call occurs [#_sprintf] ; [] |2548| 
	.dwpsn	file "../Source/prod.c",line 2549,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2549| 
	.dwpsn	file "../Source/prod.c",line 2548,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2548| 
	.dwpsn	file "../Source/prod.c",line 2549,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2549| 
        MOV       AL,#1024              ; [CPU_] |2549| 
        MOVL      XAR5,XAR1             ; [CPU_] |2549| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2549| 
        ; call occurs [#_scia_getparam] ; [] |2549| 
	.dwpsn	file "../Source/prod.c",line 2550,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2550| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_atoi")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2550| 
        ; call occurs [#_atoi] ; [] |2550| 
        MOV       *-SP[57],AL           ; [CPU_] |2550| 
	.dwpsn	file "../Source/prod.c",line 2551,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2551| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2551| 
        ; call occurs [#_scia_puts] ; [] |2551| 
        MOV       AL,*-SP[57]           ; [CPU_] |2551| 
	.dwpsn	file "../Source/prod.c",line 2553,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2553| 
        CMPB      AL,#2                 ; [CPU_] |2553| 
        B         $C$L512,HIS           ; [CPU_] |2553| 
        ; branchcc occurs ; [] |2553| 
	.dwpsn	file "../Source/prod.c",line 2557,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2557| 
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2557| 
        ; call occurs [#_scia_puts] ; [] |2557| 
        MOVZ      AR1,*-SP[57]          ; [CPU_] |2557| 
	.dwpsn	file "../Source/prod.c",line 2560,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |2560| 
        MOVL      XAR0,#44              ; [CPU_] |2560| 
        DEC       *-SP[57]              ; [CPU_] |2560| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2560| 
        MOV       *-SP[3],AR1           ; [CPU_] |2560| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2560| 
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_sprintf")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2560| 
        ; call occurs [#_sprintf] ; [] |2560| 
        MOVL      XAR0,#44              ; [CPU_] |2560| 
	.dwpsn	file "../Source/prod.c",line 2561,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2561| 
	.dwpsn	file "../Source/prod.c",line 2560,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2560| 
	.dwpsn	file "../Source/prod.c",line 2561,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2561| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2561| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2561| 
        ; call occurs [#_scia_getparam] ; [] |2561| 
        MOVL      XAR0,#86              ; [CPU_] |2561| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2561| 
	.dwpsn	file "../Source/prod.c",line 2562,column 6,is_stmt,isa 0
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_atol")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2562| 
        ; call occurs [#_atol] ; [] |2562| 
        MOVL      XAR0,#86              ; [CPU_] |2562| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2562| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2562| 
	.dwpsn	file "../Source/prod.c",line 2563,column 6,is_stmt,isa 0
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2563| 
        ; call occurs [#_scia_puts] ; [] |2563| 
	.dwpsn	file "../Source/prod.c",line 2564,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2564| 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2564| 
        ; call occurs [#_scia_puts] ; [] |2564| 
	.dwpsn	file "../Source/prod.c",line 2565,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2565| 
        B         $C$L508,NEQ           ; [CPU_] |2565| 
        ; branchcc occurs ; [] |2565| 
	.dwpsn	file "../Source/prod.c",line 2566,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2566| 
	.dwpsn	file "../Source/prod.c",line 2567,column 7,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |2567| 
        ; branch occurs ; [] |2567| 
$C$L508:    
	.dwpsn	file "../Source/prod.c",line 2569,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2569| 
        MOVL      XAR0,#44              ; [CPU_] |2569| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2569| 
        MOV       *-SP[3],AR1           ; [CPU_] |2569| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2569| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2569| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2569| 
        MOVL      XAR4,XAR1             ; [CPU_] |2569| 
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_sprintf")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2569| 
        ; call occurs [#_sprintf] ; [] |2569| 
        MOVL      XAR4,XAR1             ; [CPU_] |2569| 
	.dwpsn	file "../Source/prod.c",line 2571,column 6,is_stmt,isa 0
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2571| 
        ; call occurs [#_scia_puts] ; [] |2571| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2576,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2576| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2576| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[57]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2576| 
        ADDL      ACC,XAR6              ; [CPU_] |2576| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2576| 
        MOVL      XAR4,ACC              ; [CPU_] |2576| 
        MOVL      XAR0,#3216            ; [CPU_] |2576| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |2576| 
$C$L509:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2577,column 6,is_stmt,isa 0
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2577| 
        ; call occurs [#_ad7738_setcal] ; [] |2577| 
	.dwpsn	file "../Source/prod.c",line 2578,column 6,is_stmt,isa 0
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2578| 
        ; call occurs [#_velf_rst] ; [] |2578| 
$C$L510:    
 clrc INTM
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 2572,column 6,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |2572| 
	.dwpsn	file "../Source/prod.c",line 2580,column 6,is_stmt,isa 0
        B         $C$L634,UNC           ; [CPU_] |2580| 
        ; branch occurs ; [] |2580| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 2555,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2555| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2555| 
        ; call occurs [#_scia_puts] ; [] |2555| 
	.dwpsn	file "../Source/prod.c",line 2547,column 6,is_stmt,isa 0
        B         $C$L507,UNC           ; [CPU_] |2547| 
        ; branch occurs ; [] |2547| 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 2518,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2518| 
        MOVL      XAR0,#44              ; [CPU_] |2518| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2518| 
        MOV       *-SP[3],#4096         ; [CPU_] |2518| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2518| 
        MOVL      XAR4,XAR1             ; [CPU_] |2518| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_sprintf")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2518| 
        ; call occurs [#_sprintf] ; [] |2518| 
	.dwpsn	file "../Source/prod.c",line 2520,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2520| 
	.dwpsn	file "../Source/prod.c",line 2518,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2518| 
	.dwpsn	file "../Source/prod.c",line 2520,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2520| 
        MOV       AL,#1024              ; [CPU_] |2520| 
        MOVL      XAR5,XAR1             ; [CPU_] |2520| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2520| 
        ; call occurs [#_scia_getparam] ; [] |2520| 
	.dwpsn	file "../Source/prod.c",line 2521,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2521| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_atoi")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2521| 
        ; call occurs [#_atoi] ; [] |2521| 
        MOV       *-SP[47],AL           ; [CPU_] |2521| 
	.dwpsn	file "../Source/prod.c",line 2522,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2522| 
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2522| 
        ; call occurs [#_scia_puts] ; [] |2522| 
        MOV       AL,*-SP[47]           ; [CPU_] |2522| 
	.dwpsn	file "../Source/prod.c",line 2524,column 8,is_stmt,isa 0
        B         $C$L514,LEQ           ; [CPU_] |2524| 
        ; branchcc occurs ; [] |2524| 
        CMP       AL,#4096              ; [CPU_] |2524| 
        B         $C$L514,GT            ; [CPU_] |2524| 
        ; branchcc occurs ; [] |2524| 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2528| 
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2528| 
        ; call occurs [#_scia_puts] ; [] |2528| 
	.dwpsn	file "../Source/prod.c",line 2530,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2530| 
        MOVL      XAR0,#44              ; [CPU_] |2530| 
        MOV       AL,*-SP[47]           ; [CPU_] |2530| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2530| 
        MOV       *-SP[3],AL            ; [CPU_] |2530| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2530| 
        MOVL      XAR4,XAR1             ; [CPU_] |2530| 
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_sprintf")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2530| 
        ; call occurs [#_sprintf] ; [] |2530| 
        MOVL      XAR4,XAR1             ; [CPU_] |2530| 
	.dwpsn	file "../Source/prod.c",line 2532,column 6,is_stmt,isa 0
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2532| 
        ; call occurs [#_scia_puts] ; [] |2532| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2537,column 6,is_stmt,isa 0
        MOVL      XAR0,#3214            ; [CPU_] |2537| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2537| 
        MOV       AL,*-SP[47]           ; [CPU_] |2537| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2537| 
	.dwpsn	file "../Source/prod.c",line 2541,column 6,is_stmt,isa 0
        B         $C$L509,UNC           ; [CPU_] |2541| 
        ; branch occurs ; [] |2541| 
$C$L514:    
	.dwpsn	file "../Source/prod.c",line 2526,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2526| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2526| 
        ; call occurs [#_scia_puts] ; [] |2526| 
	.dwpsn	file "../Source/prod.c",line 2517,column 6,is_stmt,isa 0
        B         $C$L513,UNC           ; [CPU_] |2517| 
        ; branch occurs ; [] |2517| 
$C$L515:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2590,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2590| 
        B         $C$L626,LO            ; [CPU_] |2590| 
        ; branchcc occurs ; [] |2590| 
	.dwpsn	file "../Source/prod.c",line 2593,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2593| 
        CMPB      AL,#83                ; [CPU_] |2593| 
        B         $C$L626,NEQ           ; [CPU_] |2593| 
        ; branchcc occurs ; [] |2593| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 2600,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2600| 
        MOVL      XAR0,#44              ; [CPU_] |2600| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2600| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2600| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2600| 
        MOVL      XAR4,XAR1             ; [CPU_] |2600| 
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_sprintf")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2600| 
        ; call occurs [#_sprintf] ; [] |2600| 
	.dwpsn	file "../Source/prod.c",line 2601,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2601| 
	.dwpsn	file "../Source/prod.c",line 2600,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2600| 
	.dwpsn	file "../Source/prod.c",line 2601,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2601| 
        MOV       AL,#1024              ; [CPU_] |2601| 
        MOVL      XAR5,XAR1             ; [CPU_] |2601| 
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2601| 
        ; call occurs [#_scia_getparam] ; [] |2601| 
	.dwpsn	file "../Source/prod.c",line 2602,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2602| 
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_atoi")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2602| 
        ; call occurs [#_atoi] ; [] |2602| 
        MOV       *-SP[57],AL           ; [CPU_] |2602| 
	.dwpsn	file "../Source/prod.c",line 2603,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2603| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2603| 
        ; call occurs [#_scia_puts] ; [] |2603| 
        MOV       AL,*-SP[57]           ; [CPU_] |2603| 
	.dwpsn	file "../Source/prod.c",line 2605,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2605| 
        CMPB      AL,#4                 ; [CPU_] |2605| 
        B         $C$L532,HIS           ; [CPU_] |2605| 
        ; branchcc occurs ; [] |2605| 
	.dwpsn	file "../Source/prod.c",line 2609,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2609| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2609| 
        ; call occurs [#_scia_puts] ; [] |2609| 
        MOVL      XAR0,#62              ; [CPU_] |2609| 
	.dwpsn	file "../Source/prod.c",line 2613,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2613| 
	.dwpsn	file "../Source/prod.c",line 2609,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2609| 
	.dwpsn	file "../Source/prod.c",line 2613,column 11,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |2613| 
$C$L517:    
	.dwpsn	file "../Source/prod.c",line 2614,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2614| 
        MOVL      XAR0,#44              ; [CPU_] |2614| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2614| 
        MOV       *-SP[3],AL            ; [CPU_] |2614| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2614| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2614| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2614| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_sprintf")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2614| 
        ; call occurs [#_sprintf] ; [] |2614| 
        MOVL      XAR0,#44              ; [CPU_] |2614| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2614| 
	.dwpsn	file "../Source/prod.c",line 2615,column 7,is_stmt,isa 0
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2615| 
        ; call occurs [#_scia_puts] ; [] |2615| 
        MOV       AL,*-SP[47]           ; [CPU_] |2615| 
	.dwpsn	file "../Source/prod.c",line 2616,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2616| 
        B         $C$L518,GEQ           ; [CPU_] |2616| 
        ; branchcc occurs ; [] |2616| 
	.dwpsn	file "../Source/prod.c",line 2617,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2617| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2617| 
        ; call occurs [#_scia_puts] ; [] |2617| 
$C$L518:    
	.dwpsn	file "../Source/prod.c",line 2613,column 18,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |2613| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2613| 
        B         $C$L517,LT            ; [CPU_] |2613| 
        ; branchcc occurs ; [] |2613| 
	.dwpsn	file "../Source/prod.c",line 2620,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2620| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2620| 
        ; call occurs [#_scia_puts] ; [] |2620| 
	.dwpsn	file "../Source/prod.c",line 2621,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2621| 
        MOVL      XAR0,#44              ; [CPU_] |2621| 
	.dwpsn	file "../Source/prod.c",line 2620,column 6,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |2620| 
	.dwpsn	file "../Source/prod.c",line 2621,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2621| 
        MOV       *-SP[3],AH            ; [CPU_] |2621| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2621| 
        DEC       *-SP[57]              ; [CPU_] |2621| 
        MOV       *-SP[47],AH           ; [CPU_] |2621| 
        MOVL      XAR4,XAR1             ; [CPU_] |2621| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_sprintf")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2621| 
        ; call occurs [#_sprintf] ; [] |2621| 
	.dwpsn	file "../Source/prod.c",line 2623,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2623| 
	.dwpsn	file "../Source/prod.c",line 2621,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2621| 
	.dwpsn	file "../Source/prod.c",line 2623,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2623| 
        MOV       AL,#1024              ; [CPU_] |2623| 
        MOVL      XAR5,XAR1             ; [CPU_] |2623| 
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2623| 
        ; call occurs [#_scia_getparam] ; [] |2623| 
        MOVL      XAR4,XAR1             ; [CPU_] |2623| 
	.dwpsn	file "../Source/prod.c",line 2624,column 6,is_stmt,isa 0
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_atoi")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2624| 
        ; call occurs [#_atoi] ; [] |2624| 
        MOVZ      AR1,AL                ; [CPU_] |2624| 
        CMPB      AL,#7                 ; [CPU_] |2624| 
        B         $C$L519,LO            ; [CPU_] |2624| 
        ; branchcc occurs ; [] |2624| 
	.dwpsn	file "../Source/prod.c",line 2627,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2627| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2627| 
        ; call occurs [#_scia_puts] ; [] |2627| 
	.dwpsn	file "../Source/prod.c",line 2626,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2626| 
$C$L519:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2630,column 6,is_stmt,isa 0
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2630| 
        ; call occurs [#_scia_puts] ; [] |2630| 
	.dwpsn	file "../Source/prod.c",line 2631,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2631| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2631| 
        ; call occurs [#_scia_puts] ; [] |2631| 
	.dwpsn	file "../Source/prod.c",line 2632,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2632| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2632| 
        MOVB      AL,#3                 ; [CPU_] |2632| 
        MOV       T,*-SP[57]            ; [CPU_] |2632| 
        MPYU      ACC,T,AL              ; [CPU_] |2632| 
        ADDL      ACC,XAR6              ; [CPU_] |2632| 
        ADD       ACC,#1561 << 1        ; [CPU_] |2632| 
        MOVL      XAR4,ACC              ; [CPU_] |2632| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2632| 
	.dwpsn	file "../Source/prod.c",line 2634,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2634| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2634| 
        CMPB      AL,#2                 ; [CPU_] |2634| 
        B         $C$L523,LOS           ; [CPU_] |2634| 
        ; branchcc occurs ; [] |2634| 
        MOV       AH,AL                 ; [CPU_] |2634| 
        ADDB      AH,#-3                ; [CPU_] |2634| 
        CMPB      AH,#1                 ; [CPU_] |2634| 
        B         $C$L522,LOS           ; [CPU_] |2634| 
        ; branchcc occurs ; [] |2634| 
        CMPB      AL,#5                 ; [CPU_] |2634| 
        B         $C$L520,EQ            ; [CPU_] |2634| 
        ; branchcc occurs ; [] |2634| 
        CMPB      AL,#6                 ; [CPU_] |2634| 
        B         $C$L528,NEQ           ; [CPU_] |2634| 
        ; branchcc occurs ; [] |2634| 
	.dwpsn	file "../Source/prod.c",line 2708,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2708| 
        MOV       AL,*-SP[47]           ; [CPU_] |2708| 
        MOVL      XAR0,#62              ; [CPU_] |2708| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2708| 
        MOV       *-SP[3],AL            ; [CPU_] |2708| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2708| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2708| 
        ADDL      ACC,XAR6              ; [CPU_] |2708| 
        MOVL      XAR4,ACC              ; [CPU_] |2708| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2708| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2708| 
	.dwpsn	file "../Source/prod.c",line 2711,column 7,is_stmt,isa 0
        B         $C$L527,UNC           ; [CPU_] |2711| 
        ; branch occurs ; [] |2711| 
$C$L520:    
	.dwpsn	file "../Source/prod.c",line 2689,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2689| 
        MOVL      XAR0,#44              ; [CPU_] |2689| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2689| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2689| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2689| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_sprintf")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2689| 
        ; call occurs [#_sprintf] ; [] |2689| 
        MOVL      XAR0,#44              ; [CPU_] |2689| 
	.dwpsn	file "../Source/prod.c",line 2690,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2690| 
	.dwpsn	file "../Source/prod.c",line 2689,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2689| 
	.dwpsn	file "../Source/prod.c",line 2690,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2690| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2690| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2690| 
        ; call occurs [#_scia_getparam] ; [] |2690| 
        MOVL      XAR0,#86              ; [CPU_] |2690| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2690| 
	.dwpsn	file "../Source/prod.c",line 2691,column 8,is_stmt,isa 0
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_atoi")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2691| 
        ; call occurs [#_atoi] ; [] |2691| 
        MOVL      XAR0,#86              ; [CPU_] |2691| 
        MOV       *-SP[58],AL           ; [CPU_] |2691| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2691| 
	.dwpsn	file "../Source/prod.c",line 2692,column 8,is_stmt,isa 0
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2692| 
        ; call occurs [#_scia_puts] ; [] |2692| 
        MOV       AL,*-SP[58]           ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2694,column 9,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2694| 
        CMPB      AL,#4                 ; [CPU_] |2694| 
        B         $C$L521,HIS           ; [CPU_] |2694| 
        ; branchcc occurs ; [] |2694| 
	.dwpsn	file "../Source/prod.c",line 2698,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2698| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2698| 
        ; call occurs [#_scia_puts] ; [] |2698| 
	.dwpsn	file "../Source/prod.c",line 2700,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2700| 
	.dwpsn	file "../Source/prod.c",line 2702,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2702| 
        MOVL      XAR0,#62              ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2698,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2698| 
	.dwpsn	file "../Source/prod.c",line 2700,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2700| 
	.dwpsn	file "../Source/prod.c",line 2702,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2702| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2702| 
        MOV       *-SP[3],AL            ; [CPU_] |2702| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2702| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2702| 
        ADDL      ACC,XAR6              ; [CPU_] |2702| 
        MOVL      XAR4,ACC              ; [CPU_] |2702| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2702| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2702| 
        MOVB      AL,#1                 ; [CPU_] |2702| 
        ADD       AL,*-SP[58]           ; [CPU_] |2702| 
        MOV       *-SP[7],AL            ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2705,column 7,is_stmt,isa 0
        B         $C$L527,UNC           ; [CPU_] |2705| 
        ; branch occurs ; [] |2705| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2696,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2696| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2696| 
        ; call occurs [#_scia_puts] ; [] |2696| 
	.dwpsn	file "../Source/prod.c",line 2688,column 7,is_stmt,isa 0
        B         $C$L520,UNC           ; [CPU_] |2688| 
        ; branch occurs ; [] |2688| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2646,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2646| 
        B         $C$L524,UNC           ; [CPU_] |2646| 
        ; branch occurs ; [] |2646| 
$C$L523:    
	.dwpsn	file "../Source/prod.c",line 2640,column 7,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |2640| 
$C$L524:    
        MOV       *-SP[59],AL           ; [CPU_] |2640| 
        MOV       *-SP[48],AL           ; [CPU_] 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2651,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2651| 
        MOV       AL,*-SP[59]           ; [CPU_] |2651| 
        MOVL      XAR0,#44              ; [CPU_] |2651| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2651| 
        MOV       *-SP[3],AL            ; [CPU_] |2651| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2651| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_sprintf")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2651| 
        ; call occurs [#_sprintf] ; [] |2651| 
        MOVL      XAR0,#44              ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2652,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2652| 
	.dwpsn	file "../Source/prod.c",line 2651,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2651| 
	.dwpsn	file "../Source/prod.c",line 2652,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2652| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2652| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2652| 
        ; call occurs [#_scia_getparam] ; [] |2652| 
        MOVL      XAR0,#86              ; [CPU_] |2652| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2652| 
	.dwpsn	file "../Source/prod.c",line 2653,column 8,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_atoi")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2653| 
        ; call occurs [#_atoi] ; [] |2653| 
        MOVL      XAR0,#86              ; [CPU_] |2653| 
        MOV       *-SP[58],AL           ; [CPU_] |2653| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2653| 
	.dwpsn	file "../Source/prod.c",line 2654,column 8,is_stmt,isa 0
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2654| 
        ; call occurs [#_scia_puts] ; [] |2654| 
        MOV       AL,*-SP[58]           ; [CPU_] |2654| 
	.dwpsn	file "../Source/prod.c",line 2656,column 9,is_stmt,isa 0
        B         $C$L531,EQ            ; [CPU_] |2656| 
        ; branchcc occurs ; [] |2656| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        CMP       AL,*-SP[58]           ; [CPU_] |2656| 
        B         $C$L531,LO            ; [CPU_] |2656| 
        ; branchcc occurs ; [] |2656| 
	.dwpsn	file "../Source/prod.c",line 2660,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2660| 
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2660| 
        ; call occurs [#_scia_puts] ; [] |2660| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |2662| 
	.dwpsn	file "../Source/prod.c",line 2660,column 7,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |2660| 
	.dwpsn	file "../Source/prod.c",line 2662,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2662| 
$C$L526:    
	.dwpsn	file "../Source/prod.c",line 2667,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2667| 
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2667| 
        MOV       AL,#1024              ; [CPU_] |2667| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2667| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2667| 
        ; call occurs [#_scia_getparam] ; [] |2667| 
        MOVL      XAR0,#86              ; [CPU_] |2667| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2667| 
	.dwpsn	file "../Source/prod.c",line 2669,column 8,is_stmt,isa 0
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_atoi")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2669| 
        ; call occurs [#_atoi] ; [] |2669| 
        MOV       *-SP[48],AL           ; [CPU_] |2669| 
        CMPB      AL,#0                 ; [CPU_] |2669| 
        B         $C$L530,LT            ; [CPU_] |2669| 
        ; branchcc occurs ; [] |2669| 
        CMPB      AL,#6                 ; [CPU_] |2669| 
        B         $C$L530,GEQ           ; [CPU_] |2669| 
        ; branchcc occurs ; [] |2669| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2675,column 7,is_stmt,isa 0
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2675| 
        ; call occurs [#_scia_puts] ; [] |2675| 
	.dwpsn	file "../Source/prod.c",line 2676,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2676| 
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2676| 
        ; call occurs [#_scia_puts] ; [] |2676| 
        MOV       AL,*-SP[48]           ; [CPU_] |2676| 
	.dwpsn	file "../Source/prod.c",line 2679,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2679| 
        MOVL      XAR0,#62              ; [CPU_] |2679| 
	.dwpsn	file "../Source/prod.c",line 2677,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2677| 
	.dwpsn	file "../Source/prod.c",line 2679,column 7,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |2679| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2679| 
        MOV       *-SP[3],AL            ; [CPU_] |2679| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2679| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2679| 
        ADDL      ACC,XAR6              ; [CPU_] |2679| 
        MOVL      XAR4,ACC              ; [CPU_] |2679| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2679| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2679| 
        MOVB      AL,#1                 ; [CPU_] |2679| 
        ADD       AL,*-SP[58]           ; [CPU_] |2679| 
        MOV       *-SP[7],AL            ; [CPU_] |2679| 
        MOV       AL,*-SP[48]           ; [CPU_] |2679| 
        MOV       *-SP[8],AL            ; [CPU_] |2679| 
$C$L527:    
        MOVL      XAR0,#44              ; [CPU_] |2679| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2679| 
        MOVL      XAR4,XAR1             ; [CPU_] |2679| 
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_sprintf")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2679| 
        ; call occurs [#_sprintf] ; [] |2679| 
        MOVL      XAR4,XAR1             ; [CPU_] |2679| 
	.dwpsn	file "../Source/prod.c",line 2682,column 7,is_stmt,isa 0
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2682| 
        ; call occurs [#_scia_puts] ; [] |2682| 
$C$L528:    
	.dwpsn	file "../Source/prod.c",line 2714,column 6,is_stmt,isa 0
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2714| 
        ; call occurs [#_lcd_clear] ; [] |2714| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2715,column 6,is_stmt,isa 0
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_update_units")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2715| 
        ; call occurs [#_update_units] ; [] |2715| 
	.dwpsn	file "../Source/prod.c",line 2717,column 6,is_stmt,isa 0
        B         $C$L511,UNC           ; [CPU_] |2717| 
        ; branch occurs ; [] |2717| 
$C$L530:    
	.dwpsn	file "../Source/prod.c",line 2673,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2673| 
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2673| 
        ; call occurs [#_scia_puts] ; [] |2673| 
	.dwpsn	file "../Source/prod.c",line 2666,column 7,is_stmt,isa 0
        B         $C$L526,UNC           ; [CPU_] |2666| 
        ; branch occurs ; [] |2666| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 2658,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2658| 
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2658| 
        ; call occurs [#_scia_puts] ; [] |2658| 
	.dwpsn	file "../Source/prod.c",line 2650,column 7,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2650| 
        ; branch occurs ; [] |2650| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 2607,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2607| 
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2607| 
        ; call occurs [#_scia_puts] ; [] |2607| 
	.dwpsn	file "../Source/prod.c",line 2599,column 6,is_stmt,isa 0
        B         $C$L516,UNC           ; [CPU_] |2599| 
        ; branch occurs ; [] |2599| 
$C$L533:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1697,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1697| 
        B         $C$L626,LO            ; [CPU_] |1697| 
        ; branchcc occurs ; [] |1697| 
	.dwpsn	file "../Source/prod.c",line 1702,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1702| 
        CMPB      AL,#86                ; [CPU_] |1702| 
        B         $C$L534,EQ            ; [CPU_] |1702| 
        ; branchcc occurs ; [] |1702| 
        CMPB      AL,#77                ; [CPU_] |1702| 
        B         $C$L534,EQ            ; [CPU_] |1702| 
        ; branchcc occurs ; [] |1702| 
        CMPB      AL,#83                ; [CPU_] |1702| 
        B         $C$L626,NEQ           ; [CPU_] |1702| 
        ; branchcc occurs ; [] |1702| 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 1705,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1705| 
        MOV       *-SP[47],AL           ; [CPU_] |1705| 
	.dwpsn	file "../Source/prod.c",line 1707,column 5,is_stmt,isa 0
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1707| 
        ; call occurs [#_lcd_clear] ; [] |1707| 
	.dwpsn	file "../Source/prod.c",line 1708,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1708| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1708| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1708| 
        ; call occurs [#_lcd_puts] ; [] |1708| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 1714,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1714| 
        MOVL      XAR0,#44              ; [CPU_] |1714| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1714| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |1714| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1714| 
        MOVL      XAR4,XAR1             ; [CPU_] |1714| 
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_sprintf")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1714| 
        ; call occurs [#_sprintf] ; [] |1714| 
	.dwpsn	file "../Source/prod.c",line 1715,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1715| 
	.dwpsn	file "../Source/prod.c",line 1714,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1714| 
	.dwpsn	file "../Source/prod.c",line 1715,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1715| 
        MOV       AL,#1024              ; [CPU_] |1715| 
        MOVL      XAR5,XAR1             ; [CPU_] |1715| 
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1715| 
        ; call occurs [#_scia_getparam] ; [] |1715| 
	.dwpsn	file "../Source/prod.c",line 1716,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1716| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_atoi")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1716| 
        ; call occurs [#_atoi] ; [] |1716| 
        MOV       *-SP[58],AL           ; [CPU_] |1716| 
	.dwpsn	file "../Source/prod.c",line 1717,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1717| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1717| 
        ; call occurs [#_scia_puts] ; [] |1717| 
        MOV       AL,*-SP[58]           ; [CPU_] |1717| 
	.dwpsn	file "../Source/prod.c",line 1719,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1719| 
        CMPB      AL,#4                 ; [CPU_] |1719| 
        B         $C$L591,HIS           ; [CPU_] |1719| 
        ; branchcc occurs ; [] |1719| 
	.dwpsn	file "../Source/prod.c",line 1723,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1723| 
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1723| 
        ; call occurs [#_scia_puts] ; [] |1723| 
	.dwpsn	file "../Source/prod.c",line 1724,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1724| 
$C$L536:    
	.dwpsn	file "../Source/prod.c",line 1729,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1729| 
        MOVL      XAR0,#44              ; [CPU_] |1729| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1729| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1729| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1729| 
        MOVL      XAR4,XAR1             ; [CPU_] |1729| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_sprintf")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1729| 
        ; call occurs [#_sprintf] ; [] |1729| 
	.dwpsn	file "../Source/prod.c",line 1730,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1730| 
	.dwpsn	file "../Source/prod.c",line 1729,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1729| 
	.dwpsn	file "../Source/prod.c",line 1730,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1730| 
        MOV       AL,#1024              ; [CPU_] |1730| 
        MOVL      XAR5,XAR1             ; [CPU_] |1730| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1730| 
        ; call occurs [#_scia_getparam] ; [] |1730| 
	.dwpsn	file "../Source/prod.c",line 1731,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1731| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_atoi")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1731| 
        ; call occurs [#_atoi] ; [] |1731| 
        MOV       *-SP[57],AL           ; [CPU_] |1731| 
	.dwpsn	file "../Source/prod.c",line 1732,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1732| 
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1732| 
        ; call occurs [#_scia_puts] ; [] |1732| 
        MOV       AL,*-SP[57]           ; [CPU_] |1732| 
	.dwpsn	file "../Source/prod.c",line 1736,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1736| 
        CMPB      AL,#20                ; [CPU_] |1736| 
        B         $C$L590,HIS           ; [CPU_] |1736| 
        ; branchcc occurs ; [] |1736| 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1740| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1740| 
        ; call occurs [#_scia_puts] ; [] |1740| 
	.dwpsn	file "../Source/prod.c",line 1744,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1744| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1744| 
        MOVL      XAR0,#44              ; [CPU_] |1744| 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
        MOV       AH,*-SP[57]           ; [CPU_] |1740| 
	.dwpsn	file "../Source/prod.c",line 1744,column 5,is_stmt,isa 0
        ADD       AL,*-SP[58]           ; [CPU_] |1744| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1744| 
        MOV       *-SP[3],AL            ; [CPU_] |1744| 
        MOV       *-SP[4],AH            ; [CPU_] |1744| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1744| 
        DEC       *-SP[57]              ; [CPU_] |1744| 
        MOV       *-SP[59],AH           ; [CPU_] |1744| 
        MOV       *-SP[60],AL           ; [CPU_] |1744| 
        MOVL      XAR4,XAR1             ; [CPU_] |1744| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_sprintf")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1744| 
        ; call occurs [#_sprintf] ; [] |1744| 
	.dwpsn	file "../Source/prod.c",line 1745,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1745| 
        MOVL      XAR4,XAR1             ; [CPU_] |1745| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1745| 
        ; call occurs [#_lcd_puts] ; [] |1745| 
	.dwpsn	file "../Source/prod.c",line 1749,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |1749| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1749| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1749| 
        MOVL      XAR4,XAR1             ; [CPU_] |1749| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_sprintf")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1749| 
        ; call occurs [#_sprintf] ; [] |1749| 
	.dwpsn	file "../Source/prod.c",line 1750,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1750| 
        MOV       AL,#1024              ; [CPU_] |1750| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1750| 
        MOVL      XAR4,XAR1             ; [CPU_] |1750| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1750| 
        ; call occurs [#_scia_getparam] ; [] |1750| 
        CMPB      AL,#15                ; [CPU_] |1750| 
        B         $C$L537,LOS           ; [CPU_] |1750| 
        ; branchcc occurs ; [] |1750| 
	.dwpsn	file "../Source/prod.c",line 1754,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1754| 
        MOVB      XAR0,#15              ; [CPU_] |1754| 
	.dwpsn	file "../Source/prod.c",line 1753,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1753| 
	.dwpsn	file "../Source/prod.c",line 1754,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1754| 
$C$L537:    
	.dwpsn	file "../Source/prod.c",line 1756,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1756| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1756| 
        MOVL      XAR0,#86              ; [CPU_] |1756| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1756| 
        MOVB      AH,#1                 ; [CPU_] |1756| 
        ADD       AH,AL                 ; [CPU_] |1756| 
        MOVU      ACC,AH                ; [CPU_] |1756| 
        MOVL      XAR5,XAR1             ; [CPU_] |1756| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_memcpy")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1756| 
        ; call occurs [#_memcpy] ; [] |1756| 
        MOVL      XAR4,XAR1             ; [CPU_] |1756| 
	.dwpsn	file "../Source/prod.c",line 1757,column 5,is_stmt,isa 0
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1757| 
        ; call occurs [#_scia_puts] ; [] |1757| 
	.dwpsn	file "../Source/prod.c",line 1758,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1758| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1758| 
        ; call occurs [#_scia_puts] ; [] |1758| 
	.dwpsn	file "../Source/prod.c",line 1762,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |1762| 
        MOVL      XAR0,#44              ; [CPU_] |1762| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1762| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1762| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1762| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_sprintf")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1762| 
        ; call occurs [#_sprintf] ; [] |1762| 
        MOVL      XAR0,#44              ; [CPU_] |1762| 
	.dwpsn	file "../Source/prod.c",line 1763,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1763| 
	.dwpsn	file "../Source/prod.c",line 1762,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1762| 
	.dwpsn	file "../Source/prod.c",line 1763,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1763| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1763| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1763| 
        ; call occurs [#_scia_getparam] ; [] |1763| 
        CMPB      AL,#15                ; [CPU_] |1763| 
        B         $C$L538,LOS           ; [CPU_] |1763| 
        ; branchcc occurs ; [] |1763| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1767| 
        MOVB      XAR0,#15              ; [CPU_] |1767| 
	.dwpsn	file "../Source/prod.c",line 1766,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1766| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1767| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 1769,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1769| 
        MOVL      XAR0,#60              ; [CPU_] |1769| 
        MOVL      XAR5,XAR1             ; [CPU_] |1769| 
        ADD       AH,AL                 ; [CPU_] |1769| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1769| 
        MOVU      ACC,AH                ; [CPU_] |1769| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_memcpy")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1769| 
        ; call occurs [#_memcpy] ; [] |1769| 
        MOVL      XAR4,XAR1             ; [CPU_] |1769| 
	.dwpsn	file "../Source/prod.c",line 1770,column 5,is_stmt,isa 0
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1770| 
        ; call occurs [#_scia_puts] ; [] |1770| 
	.dwpsn	file "../Source/prod.c",line 1771,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1771| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1771| 
        ; call occurs [#_scia_puts] ; [] |1771| 
        MOVL      XAR0,#70              ; [CPU_] |1771| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1771| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1774,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1774| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOV       *-SP[61],AL           ; [CPU_] |1774| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
$C$L539:    
	.dwpsn	file "../Source/prod.c",line 1775,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1775| 
        MOVL      XAR0,#88              ; [CPU_] |1775| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1775| 
        MOV       *-SP[3],AL            ; [CPU_] |1775| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1775| 
        MOVL      XAR0,#88              ; [CPU_] |1775| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1775| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1775| 
        MOVL      XAR4,XAR1             ; [CPU_] |1775| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1775| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_sprintf")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1775| 
        ; call occurs [#_sprintf] ; [] |1775| 
	.dwpsn	file "../Source/prod.c",line 1774,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1774| 
        INC       *-SP[61]              ; [CPU_] |1774| 
        MOV       AL,*-SP[61]           ; [CPU_] |1774| 
        CMPB      AL,#7                 ; [CPU_] |1774| 
        B         $C$L539,LT            ; [CPU_] |1774| 
        ; branchcc occurs ; [] |1774| 
	.dwpsn	file "../Source/prod.c",line 1777,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1777| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1777| 
        MOVB      XAR1,#54              ; [CPU_] |1777| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1777| 
	.dwpsn	file "../Source/prod.c",line 1778,column 5,is_stmt,isa 0
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1778| 
        ; call occurs [#_scia_puts] ; [] |1778| 
	.dwpsn	file "../Source/prod.c",line 1779,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1779| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1779| 
        MOV       AL,#1024              ; [CPU_] |1779| 
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1779| 
        MOVL      XAR5,XAR1             ; [CPU_] |1779| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1779| 
        ; call occurs [#_scia_getparam] ; [] |1779| 
        MOVL      XAR4,XAR1             ; [CPU_] |1779| 
	.dwpsn	file "../Source/prod.c",line 1781,column 5,is_stmt,isa 0
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_atoi")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1781| 
        ; call occurs [#_atoi] ; [] |1781| 
        MOVB      XAR0,#42              ; [CPU_] |1781| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1781| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1781| 
	.dwpsn	file "../Source/prod.c",line 1783,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1783| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1783| 
        CMPB      AL,#6                 ; [CPU_] |1783| 
        B         $C$L540,GT            ; [CPU_] |1783| 
        ; branchcc occurs ; [] |1783| 
        CMPB      AL,#6                 ; [CPU_] |1783| 
        B         $C$L543,EQ            ; [CPU_] |1783| 
        ; branchcc occurs ; [] |1783| 
        CMPB      AL,#1                 ; [CPU_] |1783| 
        B         $C$L546,LOS           ; [CPU_] |1783| 
        ; branchcc occurs ; [] |1783| 
        MOV       AH,AL                 ; [CPU_] |1783| 
        ADDB      AH,#-2                ; [CPU_] |1783| 
        CMPB      AH,#2                 ; [CPU_] |1783| 
        B         $C$L545,LOS           ; [CPU_] |1783| 
        ; branchcc occurs ; [] |1783| 
        CMPB      AL,#5                 ; [CPU_] |1783| 
        B         $C$L544,EQ            ; [CPU_] |1783| 
        ; branchcc occurs ; [] |1783| 
        B         $C$L541,UNC           ; [CPU_] |1783| 
        ; branch occurs ; [] |1783| 
$C$L540:    
        MOV       AH,AL                 ; [CPU_] |1783| 
        ADDB      AH,#-7                ; [CPU_] |1783| 
        CMPB      AH,#1                 ; [CPU_] |1783| 
        B         $C$L542,LOS           ; [CPU_] |1783| 
        ; branchcc occurs ; [] |1783| 
        CMPB      AL,#15                ; [CPU_] |1783| 
        B         $C$L542,EQ            ; [CPU_] |1783| 
        ; branchcc occurs ; [] |1783| 
$C$L541:    
	.dwpsn	file "../Source/prod.c",line 1805,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1805| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1805| 
	.dwpsn	file "../Source/prod.c",line 1806,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1806| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1806| 
        ; call occurs [#_scia_puts] ; [] |1806| 
	.dwpsn	file "../Source/prod.c",line 1807,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1807| 
        ; branch occurs ; [] |1807| 
$C$L542:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1802,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1802| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1803| 
        ; branch occurs ; [] |1803| 
$C$L543:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1797,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1797| 
	.dwpsn	file "../Source/prod.c",line 1798,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1798| 
        ; branch occurs ; [] |1798| 
$C$L544:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1794,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1794| 
	.dwpsn	file "../Source/prod.c",line 1795,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1795| 
        ; branch occurs ; [] |1795| 
$C$L545:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1791,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1791| 
	.dwpsn	file "../Source/prod.c",line 1792,column 6,is_stmt,isa 0
        B         $C$L547,UNC           ; [CPU_] |1792| 
        ; branch occurs ; [] |1792| 
$C$L546:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1786,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1786| 
$C$L547:    
	.dwpsn	file "../Source/prod.c",line 1809,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1809| 
        MOVL      XAR4,XAR7             ; [CPU_] |1809| 
        MOVB      XAR0,#43              ; [CPU_] |1809| 
        ADDB      XAR7,#42              ; [CPU_] |1809| 
        MOV       AL,*XAR7              ; [CPU_] |1809| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1809| 
	.dwpsn	file "../Source/prod.c",line 1810,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1810| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1810| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1810| 
        MOVL      XAR0,#86              ; [CPU_] |1810| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1810| 
	.dwpsn	file "../Source/prod.c",line 1812,column 5,is_stmt,isa 0
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1812| 
        ; call occurs [#_scia_puts] ; [] |1812| 
	.dwpsn	file "../Source/prod.c",line 1813,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1813| 
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1813| 
        ; call occurs [#_scia_puts] ; [] |1813| 
$C$L548:    
	.dwpsn	file "../Source/prod.c",line 1818,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1818| 
        MOVL      XAR5,XAR1             ; [CPU_] |1818| 
        MOV       AL,#1024              ; [CPU_] |1818| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1818| 
        ; call occurs [#_scia_getparam] ; [] |1818| 
        MOVL      XAR4,XAR1             ; [CPU_] |1818| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_strtod")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1819,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1819| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1819| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1819,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1819| 
	.dwpsn	file "../Source/prod.c",line 1821,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1821| 
        MOV       AH,#0                 ; [CPU_] |1821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1821| 
        MOVL      ACC,XAR3              ; [CPU_] |1821| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1821| 
        ; call occurs [#FS$$CMP] ; [] |1821| 
        CMPB      AL,#0                 ; [CPU_] |1821| 
        B         $C$L589,EQ            ; [CPU_] |1821| 
        ; branchcc occurs ; [] |1821| 
	.dwpsn	file "../Source/prod.c",line 1825,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1825| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1825| 
        MOVB      XAR1,#142             ; [CPU_] |1825| 
        MOVL      XAR0,#86              ; [CPU_] |1825| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1825| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1825| 
	.dwpsn	file "../Source/prod.c",line 1826,column 5,is_stmt,isa 0
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1826| 
        ; call occurs [#_scia_puts] ; [] |1826| 
	.dwpsn	file "../Source/prod.c",line 1827,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1827| 
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1827| 
        ; call occurs [#_scia_puts] ; [] |1827| 
        MOV       AL,*-SP[58]           ; [CPU_] |1827| 
	.dwpsn	file "../Source/prod.c",line 1829,column 5,is_stmt,isa 0
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_tagid")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1829| 
        ; call occurs [#_tagid] ; [] |1829| 
        MOVL      XAR0,#36              ; [CPU_] |1829| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1829| 
        MOVL      XAR4,XAR5             ; [CPU_] |1829| 
        ADDB      XAR4,#32              ; [CPU_] |1829| 
	.dwpsn	file "../Source/prod.c",line 1831,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1831| 
	.dwpsn	file "../Source/prod.c",line 1829,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1829| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1829| 
	.dwpsn	file "../Source/prod.c",line 1831,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1831| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1831| 
        MOV       *-SP[2],#0            ; [CPU_] |1831| 
        MOV       *-SP[1],#0            ; [CPU_] |1831| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1831| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1831| 
        MOVL      P,XAR4                ; [CPU_] |1831| 
        MOVL      ACC,XAR5              ; [CPU_] |1831| 
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1193, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1831| 
        ; call occurs [#ULL$$CMP] ; [] |1831| 
        CMPB      AL,#0                 ; [CPU_] |1831| 
        B         $C$L549,NEQ           ; [CPU_] |1831| 
        ; branchcc occurs ; [] |1831| 
	.dwpsn	file "../Source/prod.c",line 1832,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1832| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1832| 
	.dwpsn	file "../Source/prod.c",line 1833,column 5,is_stmt,isa 0
        B         $C$L550,UNC           ; [CPU_] |1833| 
        ; branch occurs ; [] |1833| 
$C$L549:    
	.dwpsn	file "../Source/prod.c",line 1834,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL193       ; [CPU_U] |1834| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1834| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1834| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1834| 
$C$L550:    
        MOVL      XAR0,#44              ; [CPU_] |1834| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1834| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_sprintf")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1834| 
        ; call occurs [#_sprintf] ; [] |1834| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1836,column 5,is_stmt,isa 0
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1836| 
        ; call occurs [#_scia_puts] ; [] |1836| 
        MOV       AL,*-SP[47]           ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1838,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1838| 
        B         $C$L564,EQ            ; [CPU_] |1838| 
        ; branchcc occurs ; [] |1838| 
        CMPB      AL,#83                ; [CPU_] |1838| 
        B         $C$L555,EQ            ; [CPU_] |1838| 
        ; branchcc occurs ; [] |1838| 
        CMPB      AL,#86                ; [CPU_] |1838| 
        B         $C$L619,NEQ           ; [CPU_] |1838| 
        ; branchcc occurs ; [] |1838| 
	.dwpsn	file "../Source/prod.c",line 1843,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1843| 
        MOVB      AL,#40                ; [CPU_] |1843| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1843| 
        ; call occurs [#_lcd_puts] ; [] |1843| 
	.dwpsn	file "../Source/prod.c",line 1845,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1845| 
        MOVB      XAR0,#36              ; [CPU_] |1845| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL195       ; [CPU_U] |1848| 
	.dwpsn	file "../Source/prod.c",line 1845,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1845| 
	.dwpsn	file "../Source/prod.c",line 1846,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1846| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1846| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1848| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1848| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1848| 
        MOVL      XAR0,#70              ; [CPU_] |1848| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1848| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1848| 
        MOV       ACC,AL << 1           ; [CPU_] |1848| 
        ADDL      ACC,XAR6              ; [CPU_] |1848| 
        MOVL      XAR4,ACC              ; [CPU_] |1848| 
        MOVL      XAR0,#44              ; [CPU_] |1848| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1848| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1848| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1848| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_sprintf")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1848| 
        ; call occurs [#_sprintf] ; [] |1848| 
        MOVL      XAR0,#44              ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1850| 
	.dwpsn	file "../Source/prod.c",line 1848,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1848| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1850| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1850| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1850| 
        ; call occurs [#_scia_getparam] ; [] |1850| 
        MOVL      XAR0,#86              ; [CPU_] |1850| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1850,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1850| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("_strtod")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1851,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1851| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1851,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1851| 
	.dwpsn	file "../Source/prod.c",line 1852,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1852| 
        MOV       AH,#0                 ; [CPU_] |1852| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1852| 
        MOVL      ACC,XAR6              ; [CPU_] |1852| 
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1852| 
        ; call occurs [#FS$$CMP] ; [] |1852| 
        CMPB      AL,#0                 ; [CPU_] |1852| 
        B         $C$L551,NEQ           ; [CPU_] |1852| 
        ; branchcc occurs ; [] |1852| 
	.dwpsn	file "../Source/prod.c",line 1853,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1853| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1853| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1853| 
$C$L551:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1855,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1855| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1855| 
        ; call occurs [#_scia_puts] ; [] |1855| 
	.dwpsn	file "../Source/prod.c",line 1856,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1856| 
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1856| 
        ; call occurs [#_scia_puts] ; [] |1856| 
	.dwpsn	file "../Source/prod.c",line 1858,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1858| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1858| 
        MOVL      XAR5,XAR1             ; [CPU_] |1858| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1203, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1858| 
        ; call occurs [#_scia_getparam] ; [] |1858| 
	.dwpsn	file "../Source/prod.c",line 1861,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1861| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1861| 
        ; call occurs [#_scia_puts] ; [] |1861| 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1863| 
	.dwpsn	file "../Source/prod.c",line 1864,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1864| 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1863| 
	.dwpsn	file "../Source/prod.c",line 1864,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1864| 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1863| 
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1865| 
	.dwpsn	file "../Source/prod.c",line 1863,column 6,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1863| 
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1865| 
        MOVB      ACC,#0                ; [CPU_] |1865| 
        SUBB      ACC,#1                ; [CPU_] |1865| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1865| 
        B         $C$L554,EQ            ; [CPU_] |1865| 
        ; branchcc occurs ; [] |1865| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1866,column 14,is_stmt,isa 0
        B         $C$L553,UNC           ; [CPU_] |1866| 
        ; branch occurs ; [] |1866| 
$C$L552:    
	.dwpsn	file "../Source/prod.c",line 1867,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1867| 
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_delay_us")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1867| 
        ; call occurs [#_delay_us] ; [] |1867| 
$C$L553:    
	.dwpsn	file "../Source/prod.c",line 1866,column 14,is_stmt,isa 0
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1866| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1866| 
        CMPB      AL,#0                 ; [CPU_] |1866| 
        B         $C$L552,EQ            ; [CPU_] |1866| 
        ; branchcc occurs ; [] |1866| 
	.dwpsn	file "../Source/prod.c",line 1870,column 7,is_stmt,isa 0
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1870| 
        ; call occurs [#_ad7738_getraw] ; [] |1870| 
	.dwpsn	file "../Source/prod.c",line 1871,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1871| 
        ADDL      XAR4,ACC              ; [CPU_] |1871| 
        MOVL      XAR0,#20              ; [CPU_] |1871| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1871| 
        MOVL      XAR0,#20              ; [CPU_] |1871| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1871| 
        ASR64     ACC:P,16              ; [CPU_] |1871| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1871| 
        MOVL      XAR0,#20              ; [CPU_] |1871| 
        ASR64     ACC:P,16              ; [CPU_] |1871| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1871| 
        MOVL      XAR0,#20              ; [CPU_] |1871| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1871| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1871| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1871| 
        MOVL      *-SP[32],P            ; [CPU_] |1871| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1871| 
	.dwpsn	file "../Source/prod.c",line 1865,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1865| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1865| 
        MOVB      ACC,#0                ; [CPU_] |1865| 
        SUBB      ACC,#1                ; [CPU_] |1865| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1865| 
        B         $C$L553,NEQ           ; [CPU_] |1865| 
        ; branchcc occurs ; [] |1865| 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1873,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1873| 
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1873| 
        ; call occurs [#_scia_puts] ; [] |1873| 
	.dwpsn	file "../Source/prod.c",line 1875,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1875| 
        MOVL      XAR0,#52              ; [CPU_] |1875| 
        MOVL      ACC,XAR1              ; [CPU_] |1875| 
        ADDB      ACC,#96               ; [CPU_] |1875| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1875| 
        MOVL      XAR0,#40              ; [CPU_] |1875| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1875| 
        MOV       T,*-SP[58]            ; [CPU_] |1875| 
        MOVB      AL,#10                ; [CPU_] |1875| 
        MPYU      ACC,T,AL              ; [CPU_] |1875| 
        ADDL      ACC,XAR6              ; [CPU_] |1875| 
        ADDB      ACC,#42               ; [CPU_] |1875| 
        MOVL      XAR4,ACC              ; [CPU_] |1875| 
        MOVL      XAR0,#42              ; [CPU_] |1875| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1875| 
	.dwpsn	file "../Source/prod.c",line 1877,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1877| 
        ; branch occurs ; [] |1877| 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1960,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1960| 
        MOVB      AL,#40                ; [CPU_] |1960| 
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1960| 
        ; call occurs [#_lcd_puts] ; [] |1960| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1962| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1962| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL199       ; [CPU_U] |1965| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1962| 
	.dwpsn	file "../Source/prod.c",line 1963,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1963| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1963| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1965| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1965| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1965| 
        MOVL      XAR0,#70              ; [CPU_] |1965| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1965| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1965| 
        MOV       ACC,AL << 1           ; [CPU_] |1965| 
        ADDL      ACC,XAR6              ; [CPU_] |1965| 
        MOVL      XAR4,ACC              ; [CPU_] |1965| 
        MOVL      XAR0,#44              ; [CPU_] |1965| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1965| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1965| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1965| 
        MOVL      XAR4,XAR1             ; [CPU_] |1965| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("_sprintf")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1965| 
        ; call occurs [#_sprintf] ; [] |1965| 
	.dwpsn	file "../Source/prod.c",line 1968,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1968| 
	.dwpsn	file "../Source/prod.c",line 1965,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1965| 
	.dwpsn	file "../Source/prod.c",line 1968,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1968| 
        MOV       AL,#1024              ; [CPU_] |1968| 
        MOVL      XAR5,XAR1             ; [CPU_] |1968| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1968| 
        ; call occurs [#_scia_getparam] ; [] |1968| 
	.dwpsn	file "../Source/prod.c",line 1969,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1969| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1969| 
        ; call occurs [#_scia_puts] ; [] |1969| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_strtod")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[16],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1971,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1971| 
        MOV       AH,#0                 ; [CPU_] |1971| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1971| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |1971| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1971| 
        ; call occurs [#FS$$CMP] ; [] |1971| 
        CMPB      AL,#0                 ; [CPU_] |1971| 
        B         $C$L556,NEQ           ; [CPU_] |1971| 
        ; branchcc occurs ; [] |1971| 
	.dwpsn	file "../Source/prod.c",line 1972,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1972| 
        MOV       AH,#16314             ; [CPU_] |1972| 
	.dwpsn	file "../Source/prod.c",line 1973,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1973| 
	.dwpsn	file "../Source/prod.c",line 1972,column 7,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |1972| 
	.dwpsn	file "../Source/prod.c",line 1973,column 7,is_stmt,isa 0
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1973| 
        ; call occurs [#_scia_puts] ; [] |1973| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1975,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1975| 
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1975| 
        ; call occurs [#_scia_puts] ; [] |1975| 
	.dwpsn	file "../Source/prod.c",line 1977,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1977| 
        MOV       AL,#1024              ; [CPU_] |1977| 
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1977| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1977| 
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1977| 
        ; call occurs [#_scia_getparam] ; [] |1977| 
	.dwpsn	file "../Source/prod.c",line 1980,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1980| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1980| 
        ; call occurs [#_scia_puts] ; [] |1980| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1982,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1982| 
        MOV       *-SP[48],AL           ; [CPU_] |1982| 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L557:    
	.dwpsn	file "../Source/prod.c",line 1983,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1983| 
        B         $C$L559,LEQ           ; [CPU_] |1983| 
        ; branchcc occurs ; [] |1983| 
	.dwpsn	file "../Source/prod.c",line 1985,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1985| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1985| 
        ; call occurs [#_shunt_switch] ; [] |1985| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L558:    
	.dwpsn	file "../Source/prod.c",line 1987,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1987| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("_delay_us")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1987| 
        ; call occurs [#_delay_us] ; [] |1987| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1987| 
	.dwpsn	file "../Source/prod.c",line 1986,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1986| 
        MOVZ      AR0,AR6               ; [CPU_] |1986| 
        MOV       *-SP[47],AR6          ; [CPU_] |1986| 
        CMP       AR0,#-1               ; [CPU_] |1986| 
        B         $C$L558,NEQ           ; [CPU_] |1986| 
        ; branchcc occurs ; [] |1986| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1990,column 8,is_stmt,isa 0
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1990| 
        ; call occurs [#_maf_rst] ; [] |1990| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1992,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1992| 
        SPM       #0                    ; [CPU_] 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("_delay_us")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1992| 
        ; call occurs [#_delay_us] ; [] |1992| 
$C$L559:    
	.dwpsn	file "../Source/prod.c",line 1995,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1995| 
	.dwpsn	file "../Source/prod.c",line 1996,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1996| 
	.dwpsn	file "../Source/prod.c",line 1995,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1995| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1995| 
	.dwpsn	file "../Source/prod.c",line 1997,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1997| 
	.dwpsn	file "../Source/prod.c",line 1996,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1996| 
	.dwpsn	file "../Source/prod.c",line 1997,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1997| 
        MOVB      ACC,#0                ; [CPU_] |1997| 
        SUBB      ACC,#1                ; [CPU_] |1997| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1997| 
        B         $C$L561,EQ            ; [CPU_] |1997| 
        ; branchcc occurs ; [] |1997| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1998,column 15,is_stmt,isa 0
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1998| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1998| 
        CMPB      AL,#0                 ; [CPU_] |1998| 
        B         $C$L563,EQ            ; [CPU_] |1998| 
        ; branchcc occurs ; [] |1998| 
	.dwpsn	file "../Source/prod.c",line 2002,column 8,is_stmt,isa 0
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2002| 
        ; call occurs [#_ad7738_getraw] ; [] |2002| 
	.dwpsn	file "../Source/prod.c",line 2003,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2003| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2003| 
        ADDL      XAR4,ACC              ; [CPU_] |2003| 
        MOVL      XAR0,#18              ; [CPU_] |2003| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2003| 
        MOVL      XAR0,#18              ; [CPU_] |2003| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2003| 
        ASR64     ACC:P,16              ; [CPU_] |2003| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2003| 
        MOVL      XAR0,#18              ; [CPU_] |2003| 
        ASR64     ACC:P,16              ; [CPU_] |2003| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2003| 
        MOVL      XAR0,#18              ; [CPU_] |2003| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |2003| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2003| 
        MOVL      XAR0,#18              ; [CPU_] |2003| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2003| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |2003| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |2003| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2003| 
	.dwpsn	file "../Source/prod.c",line 1997,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1997| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1997| 
        MOVB      ACC,#0                ; [CPU_] |1997| 
        SUBB      ACC,#1                ; [CPU_] |1997| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1997| 
        B         $C$L560,NEQ           ; [CPU_] |1997| 
        ; branchcc occurs ; [] |1997| 
$C$L561:    
	.dwpsn	file "../Source/prod.c",line 1982,column 18,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1982| 
        ADDB      XAR1,#4               ; [CPU_] |1982| 
        MOV       AL,*-SP[48]           ; [CPU_] |1982| 
        CMPB      AL,#2                 ; [CPU_] |1982| 
        B         $C$L557,LT            ; [CPU_] |1982| 
        ; branchcc occurs ; [] |1982| 
	.dwpsn	file "../Source/prod.c",line 2007,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2007| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2007| 
        ; call occurs [#_shunt_switch] ; [] |2007| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2009,column 6,is_stmt,isa 0
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2009| 
        ; call occurs [#_maf_rst] ; [] |2009| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2012,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2012| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2012| 
        ; call occurs [#_scia_puts] ; [] |2012| 
	.dwpsn	file "../Source/prod.c",line 2014,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2014| 
        MOVB      AL,#10                ; [CPU_] |2014| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2014| 
        MOV       T,*-SP[58]            ; [CPU_] |2014| 
        MPYU      ACC,T,AL              ; [CPU_] |2014| 
        MOVL      XAR0,#88              ; [CPU_] |2014| 
        ADDL      ACC,XAR6              ; [CPU_] |2014| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2014| 
        MOV       AL,#16384             ; [CPU_] |2014| 
        MOV       AH,#17948             ; [CPU_] |2014| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2014| 
        MOVL      ACC,*-SP[16]          ; [CPU_] |2014| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2014| 
        ; call occurs [#FS$$MPY] ; [] |2014| 
        MOVL      XAR3,ACC              ; [CPU_] |2014| 
        MOVL      P,*-SP[28]            ; [CPU_] |2014| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |2014| 
        SUBUL     P,*-SP[32]            ; [CPU_] |2014| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |2014| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2014| 
        ; call occurs [#LL$$TOFS] ; [] |2014| 
        MOVL      XAR0,#88              ; [CPU_] |2014| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2014| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2014| 
        MOVB      XAR1,#44              ; [CPU_] |2014| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |2014| 
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2014| 
        ; call occurs [#FS$$MPY] ; [] |2014| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2014| 
        MOVL      ACC,XAR3              ; [CPU_] |2014| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2014| 
        ; call occurs [#FS$$DIV] ; [] |2014| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2014| 
        MOVB      XAR0,#96              ; [CPU_] |2014| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2014| 
	.dwpsn	file "../Source/prod.c",line 2016,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |2016| 
        MOVL      ACC,XAR1              ; [CPU_] |2016| 
        ADDB      ACC,#96               ; [CPU_] |2016| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2016| 
        MOVL      XAR0,#88              ; [CPU_] |2016| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2016| 
        MOVL      XAR0,#42              ; [CPU_] |2016| 
        ADDB      XAR4,#42              ; [CPU_] |2016| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2016| 
$C$L562:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2016| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |2016| 
        ; call occurs [#FS$$NEG] ; [] |2016| 
        MOVB      XAR0,#96              ; [CPU_] |2016| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |2016| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2016| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2016| 
        ; call occurs [#FS$$MPY] ; [] |2016| 
        MOVL      XAR0,#88              ; [CPU_] |2016| 
        MOVL      P,*-SP[32]            ; [CPU_] |2016| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2016| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2016| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2016| 
        ; call occurs [#LL$$TOFS] ; [] |2016| 
        MOVL      XAR0,#88              ; [CPU_] |2016| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2016| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2016| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2016| 
        ; call occurs [#FS$$MPY] ; [] |2016| 
        MOVL      XAR6,ACC              ; [CPU_] |2016| 
        MOV       AL,#16384             ; [CPU_] |2016| 
        MOV       AH,#17948             ; [CPU_] |2016| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2016| 
        MOVL      ACC,XAR6              ; [CPU_] |2016| 
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2016| 
        ; call occurs [#FS$$DIV] ; [] |2016| 
        MOVB      XAR0,#118             ; [CPU_] |2016| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2016| 
	.dwpsn	file "../Source/prod.c",line 2018,column 6,is_stmt,isa 0
        B         $C$L578,UNC           ; [CPU_] |2018| 
        ; branch occurs ; [] |2018| 
$C$L563:    
	.dwpsn	file "../Source/prod.c",line 1999,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1999| 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_delay_us")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1999| 
        ; call occurs [#_delay_us] ; [] |1999| 
	.dwpsn	file "../Source/prod.c",line 1998,column 15,is_stmt,isa 0
        B         $C$L560,UNC           ; [CPU_] |1998| 
        ; branch occurs ; [] |1998| 
$C$L564:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1881,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1881| 
$C$L565:    
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL201       ; [CPU_U] |1886| 
        MOVL      XAR0,#44              ; [CPU_] |1886| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1886| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1886| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1886| 
        MOVL      XAR4,XAR1             ; [CPU_] |1886| 
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_sprintf")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1886| 
        ; call occurs [#_sprintf] ; [] |1886| 
	.dwpsn	file "../Source/prod.c",line 1887,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1887| 
	.dwpsn	file "../Source/prod.c",line 1886,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1886| 
	.dwpsn	file "../Source/prod.c",line 1887,column 7,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1887| 
        MOV       AL,#1024              ; [CPU_] |1887| 
        MOVL      XAR5,XAR1             ; [CPU_] |1887| 
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1887| 
        ; call occurs [#_scia_getparam] ; [] |1887| 
        MOVL      XAR4,XAR1             ; [CPU_] |1887| 
	.dwpsn	file "../Source/prod.c",line 1888,column 7,is_stmt,isa 0
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_atoi")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1888| 
        ; call occurs [#_atoi] ; [] |1888| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1888| 
        MOVB      XAR0,#46              ; [CPU_] |1888| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1888| 
        MOVL      XAR0,#86              ; [CPU_] |1888| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1888| 
	.dwpsn	file "../Source/prod.c",line 1889,column 7,is_stmt,isa 0
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1889| 
        ; call occurs [#_scia_puts] ; [] |1889| 
	.dwpsn	file "../Source/prod.c",line 1891,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1891| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1891| 
        CMPB      AL,#2                 ; [CPU_] |1891| 
        B         $C$L588,LT            ; [CPU_] |1891| 
        ; branchcc occurs ; [] |1891| 
        CMPB      AL,#12                ; [CPU_] |1891| 
        B         $C$L588,GT            ; [CPU_] |1891| 
        ; branchcc occurs ; [] |1891| 
	.dwpsn	file "../Source/prod.c",line 1896,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1896| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1896| 
        ; call occurs [#_scia_puts] ; [] |1896| 
	.dwpsn	file "../Source/prod.c",line 1898,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1898| 
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1898| 
        MOVL      XAR0,#44              ; [CPU_] |1898| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1898| 
        ADDB      XAR7,#46              ; [CPU_] |1898| 
        MOV       AL,*XAR7              ; [CPU_] |1898| 
        MOV       *-SP[3],AL            ; [CPU_] |1898| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1898| 
        MOVL      XAR4,XAR1             ; [CPU_] |1898| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("_sprintf")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1898| 
        ; call occurs [#_sprintf] ; [] |1898| 
	.dwpsn	file "../Source/prod.c",line 1899,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1899| 
	.dwpsn	file "../Source/prod.c",line 1898,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1898| 
	.dwpsn	file "../Source/prod.c",line 1899,column 6,is_stmt,isa 0
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1899| 
        ; call occurs [#_lcd_puts] ; [] |1899| 
	.dwpsn	file "../Source/prod.c",line 1902,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1902,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1902| 
	.dwpsn	file "../Source/prod.c",line 1902,column 11,is_stmt,isa 0
        B         $C$L567,UNC           ; [CPU_] |1902| 
        ; branch occurs ; [] |1902| 
$C$L566:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1903| 
        SUB       AL,*-SP[47]           ; [CPU_] |1903| 
        ADDB      AL,#1                 ; [CPU_] |1903| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1903| 
        ; call occurs [#I$$TOFS] ; [] |1903| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1903| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1903| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1903| 
        ; call occurs [#FS$$MPY] ; [] |1903| 
        MOVL      XAR0,#88              ; [CPU_] |1903| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1903| 
        MOV       AL,*-SP[47]           ; [CPU_] |1903| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1903| 
        ; call occurs [#I$$TOFS] ; [] |1903| 
        MOVL      XAR0,#88              ; [CPU_] |1903| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1903| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1903| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1903| 
        ; call occurs [#FS$$DIV] ; [] |1903| 
        MOVZ      AR6,*-SP[48]          ; [CPU_] |1903| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1903| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1903| 
        ADDL      ACC,XAR1              ; [CPU_] |1903| 
        MOVL      XAR4,ACC              ; [CPU_] |1903| 
        MOVB      XAR0,#48              ; [CPU_] |1903| 
	.dwpsn	file "../Source/prod.c",line 1902,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1902| 
	.dwpsn	file "../Source/prod.c",line 1903,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1903| 
	.dwpsn	file "../Source/prod.c",line 1902,column 38,is_stmt,isa 0
        MOV       *-SP[48],AR6          ; [CPU_] |1902| 
$C$L567:    
	.dwpsn	file "../Source/prod.c",line 1902,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1902| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1902| 
        MOV       *-SP[47],AL           ; [CPU_] |1902| 
        CMP       AL,*-SP[48]           ; [CPU_] |1902| 
        B         $C$L566,GT            ; [CPU_] |1902| 
        ; branchcc occurs ; [] |1902| 
	.dwpsn	file "../Source/prod.c",line 1908,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1908| 
        B         $C$L570,UNC           ; [CPU_] |1908| 
        ; branch occurs ; [] |1908| 
$C$L568:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1909,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1909| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1909| 
        MOVL      XAR0,#44              ; [CPU_] |1909| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1909| 
        ADDL      ACC,XAR1              ; [CPU_] |1909| 
        ADDB      ACC,#48               ; [CPU_] |1909| 
        MOVL      XAR1,ACC              ; [CPU_] |1909| 
        MOVB      AL,#1                 ; [CPU_] |1909| 
        ADD       AL,AR6                ; [CPU_] |1909| 
        MOV       *-SP[3],AL            ; [CPU_] |1909| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1909| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1909| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1909| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_sprintf")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1909| 
        ; call occurs [#_sprintf] ; [] |1909| 
        MOVL      XAR0,#44              ; [CPU_] |1909| 
	.dwpsn	file "../Source/prod.c",line 1911,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1911| 
	.dwpsn	file "../Source/prod.c",line 1909,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1909| 
	.dwpsn	file "../Source/prod.c",line 1911,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1911| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1911| 
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1911| 
        ; call occurs [#_scia_getparam] ; [] |1911| 
        CMPB      AL,#0                 ; [CPU_] |1911| 
        B         $C$L569,EQ            ; [CPU_] |1911| 
        ; branchcc occurs ; [] |1911| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("_strtod")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1915,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1915| 
$C$L569:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1917,column 7,is_stmt,isa 0
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1917| 
        ; call occurs [#_scia_puts] ; [] |1917| 
	.dwpsn	file "../Source/prod.c",line 1918,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1918| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1918| 
        ; call occurs [#_scia_puts] ; [] |1918| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1908,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1908| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L570:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1908,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1908| 
        B         $C$L568,GT            ; [CPU_] |1908| 
        ; branchcc occurs ; [] |1908| 
	.dwpsn	file "../Source/prod.c",line 1924,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1924| 
        B         $C$L575,UNC           ; [CPU_] |1924| 
        ; branch occurs ; [] |1924| 
$C$L571:    
        MOVZ      AR6,*-SP[48]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1925,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1925| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1925| 
        ADDL      ACC,XAR1              ; [CPU_] |1925| 
        ADDB      ACC,#48               ; [CPU_] |1925| 
        MOVL      XAR1,ACC              ; [CPU_] |1925| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1925| 
        MOVL      XAR0,#70              ; [CPU_] |1925| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1925| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1925| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1925| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1925| 
        ANDB      AL,#0x0f              ; [CPU_] |1925| 
        MOV       ACC,AL << 1           ; [CPU_] |1925| 
        ADDL      ACC,XAR7              ; [CPU_] |1925| 
        MOVL      XAR4,ACC              ; [CPU_] |1925| 
        MOVL      XAR0,#44              ; [CPU_] |1925| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1925| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1925| 
        MOVB      AL,#1                 ; [CPU_] |1925| 
        ADD       AL,AR6                ; [CPU_] |1925| 
        MOV       *-SP[7],AL            ; [CPU_] |1925| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1925| 
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_sprintf")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1925| 
        ; call occurs [#_sprintf] ; [] |1925| 
        MOVL      XAR0,#44              ; [CPU_] |1925| 
	.dwpsn	file "../Source/prod.c",line 1929,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1929| 
	.dwpsn	file "../Source/prod.c",line 1925,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1925| 
	.dwpsn	file "../Source/prod.c",line 1929,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1929| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1929| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1929| 
        ; call occurs [#_scia_getparam] ; [] |1929| 
	.dwpsn	file "../Source/prod.c",line 1930,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1930| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1930| 
        ; call occurs [#_scia_puts] ; [] |1930| 
	.dwpsn	file "../Source/prod.c",line 1932,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1932| 
	.dwpsn	file "../Source/prod.c",line 1933,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1933| 
	.dwpsn	file "../Source/prod.c",line 1932,column 7,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |1932| 
	.dwpsn	file "../Source/prod.c",line 1933,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1933| 
	.dwpsn	file "../Source/prod.c",line 1932,column 7,is_stmt,isa 0
        MOV       *-SP[30],#0           ; [CPU_] |1932| 
	.dwpsn	file "../Source/prod.c",line 1934,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1934| 
	.dwpsn	file "../Source/prod.c",line 1932,column 7,is_stmt,isa 0
        MOV       *-SP[29],#0           ; [CPU_] |1932| 
	.dwpsn	file "../Source/prod.c",line 1934,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1934| 
        MOVB      ACC,#0                ; [CPU_] |1934| 
        SUBB      ACC,#1                ; [CPU_] |1934| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1934| 
        B         $C$L574,EQ            ; [CPU_] |1934| 
        ; branchcc occurs ; [] |1934| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1935,column 15,is_stmt,isa 0
        B         $C$L573,UNC           ; [CPU_] |1935| 
        ; branch occurs ; [] |1935| 
$C$L572:    
	.dwpsn	file "../Source/prod.c",line 1936,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1936| 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("_delay_us")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1936| 
        ; call occurs [#_delay_us] ; [] |1936| 
$C$L573:    
	.dwpsn	file "../Source/prod.c",line 1935,column 15,is_stmt,isa 0
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1935| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1935| 
        CMPB      AL,#0                 ; [CPU_] |1935| 
        B         $C$L572,EQ            ; [CPU_] |1935| 
        ; branchcc occurs ; [] |1935| 
	.dwpsn	file "../Source/prod.c",line 1939,column 8,is_stmt,isa 0
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1939| 
        ; call occurs [#_ad7738_getraw] ; [] |1939| 
	.dwpsn	file "../Source/prod.c",line 1940,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1940| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1940| 
        ADDL      XAR4,ACC              ; [CPU_] |1940| 
        MOVL      XAR0,#16              ; [CPU_] |1940| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1940| 
        MOVL      XAR0,#16              ; [CPU_] |1940| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1940| 
        ASR64     ACC:P,16              ; [CPU_] |1940| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1940| 
        MOVL      XAR0,#16              ; [CPU_] |1940| 
        ASR64     ACC:P,16              ; [CPU_] |1940| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1940| 
        MOVL      XAR0,#16              ; [CPU_] |1940| 
        ADDUL     P,*-SP[32]            ; [CPU_] |1940| 
        ADDCL     ACC,*-SP[30]          ; [CPU_] |1940| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1940| 
        MOVL      *-SP[32],P            ; [CPU_] |1940| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1940| 
	.dwpsn	file "../Source/prod.c",line 1934,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1934| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1934| 
        MOVB      ACC,#0                ; [CPU_] |1934| 
        SUBB      ACC,#1                ; [CPU_] |1934| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1934| 
        B         $C$L573,NEQ           ; [CPU_] |1934| 
        ; branchcc occurs ; [] |1934| 
$C$L574:    
	.dwpsn	file "../Source/prod.c",line 1942,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1942| 
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1942| 
        ; call occurs [#_scia_puts] ; [] |1942| 
	.dwpsn	file "../Source/prod.c",line 1943,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1943| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1943| 
        MOV       *-SP[2],#0            ; [CPU_] |1943| 
        MOV       *-SP[1],#0            ; [CPU_] |1943| 
        MOVL      P,*-SP[32]            ; [CPU_] |1943| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1943| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1943| 
        ; call occurs [#LL$$DIV] ; [] |1943| 
        ADDB      XAR1,#24              ; [CPU_] |1943| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1943| 
	.dwpsn	file "../Source/prod.c",line 1924,column 38,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1924| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L575:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1924,column 18,is_stmt,isa 0
        CMP       AL,*-SP[48]           ; [CPU_] |1924| 
        B         $C$L571,GT            ; [CPU_] |1924| 
        ; branchcc occurs ; [] |1924| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1947,column 11,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |1947| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L577,UNC           ; [CPU_] |1947| 
        ; branch occurs ; [] |1947| 
$C$L576:    
        MOV       AL,*-SP[48]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1948,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1948| 
        ADDL      XAR1,ACC              ; [CPU_] |1948| 
        MOVB      XAR0,#48              ; [CPU_] |1948| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1948| 
        MOVB      XAR0,#50              ; [CPU_] |1948| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1948| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1948| 
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1948| 
        ; call occurs [#FS$$SUB] ; [] |1948| 
        MOVL      XAR0,#88              ; [CPU_] |1948| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1948| 
        MOVB      XAR0,#74              ; [CPU_] |1948| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1948| 
        MOVB      XAR0,#72              ; [CPU_] |1948| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1948| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1948| 
        ; call occurs [#L$$TOFS] ; [] |1948| 
        MOVL      XAR0,#88              ; [CPU_] |1948| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1948| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1948| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1948| 
        ; call occurs [#FS$$DIV] ; [] |1948| 
        MOVL      XAR0,#42              ; [CPU_] |1948| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1948| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1948| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1948| 
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1948| 
        ; call occurs [#FS$$DIV] ; [] |1948| 
        MOVB      XAR0,#96              ; [CPU_] |1948| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1948| 
	.dwpsn	file "../Source/prod.c",line 1952,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1952| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1952| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1952| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1952| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1952| 
        ; call occurs [#FS$$MPY] ; [] |1952| 
        MOVL      XAR0,#88              ; [CPU_] |1952| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1952| 
        MOVB      XAR0,#72              ; [CPU_] |1952| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1952| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1952| 
        ; call occurs [#L$$TOFS] ; [] |1952| 
        MOVL      XAR0,#88              ; [CPU_] |1952| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1952| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1952| 
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1952| 
        ; call occurs [#FS$$MPY] ; [] |1952| 
        MOVB      XAR0,#48              ; [CPU_] |1952| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1952| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1952| 
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1952| 
        ; call occurs [#FS$$SUB] ; [] |1952| 
        MOVB      XAR0,#118             ; [CPU_] |1952| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1952| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1947,column 42,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |1947| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[47],AL           ; [CPU_] 
$C$L577:    
        MOV       AL,*-SP[47]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1956,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1956| 
        CMP       AL,*-SP[48]           ; [CPU_] |1956| 
        B         $C$L576,GT            ; [CPU_] |1956| 
        ; branchcc occurs ; [] |1956| 
$C$L578:    
	.dwpsn	file "../Source/prod.c",line 2027,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |2027| 
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |2027| 
        MOV       AL,#1024              ; [CPU_] |2027| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |2027| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2027| 
        ; call occurs [#_scia_getparam] ; [] |2027| 
	.dwpsn	file "../Source/prod.c",line 2030,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |2030| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2030| 
        ; call occurs [#_scia_puts] ; [] |2030| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2032,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2032| 
        MOVZ      AR3,AR4               ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] |2032| 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 2033,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |2033| 
        B         $C$L581,LEQ           ; [CPU_] |2033| 
        ; branchcc occurs ; [] |2033| 
	.dwpsn	file "../Source/prod.c",line 2035,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2035| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2035| 
        ; call occurs [#_shunt_switch] ; [] |2035| 
        MOV       *-SP[47],#49          ; [CPU_] 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 2037,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2037| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("_delay_us")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2037| 
        ; call occurs [#_delay_us] ; [] |2037| 
        MOVZ      AR6,*-SP[47]          ; [CPU_] |2037| 
	.dwpsn	file "../Source/prod.c",line 2036,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |2036| 
        MOVZ      AR0,AR6               ; [CPU_] |2036| 
        MOV       *-SP[47],AR6          ; [CPU_] |2036| 
        CMP       AR0,#-1               ; [CPU_] |2036| 
        B         $C$L580,NEQ           ; [CPU_] |2036| 
        ; branchcc occurs ; [] |2036| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2040,column 7,is_stmt,isa 0
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2040| 
        ; call occurs [#_maf_rst] ; [] |2040| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2042,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |2042| 
        SPM       #0                    ; [CPU_] 
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("_delay_us")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2042| 
        ; call occurs [#_delay_us] ; [] |2042| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 2045,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2046,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2046| 
	.dwpsn	file "../Source/prod.c",line 2045,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2045| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2047,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2046,column 6,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2047,column 6,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |2047| 
        MOVB      ACC,#0                ; [CPU_] |2047| 
        SUBB      ACC,#1                ; [CPU_] |2047| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2047| 
        B         $C$L583,EQ            ; [CPU_] |2047| 
        ; branchcc occurs ; [] |2047| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L582:    
	.dwpsn	file "../Source/prod.c",line 2048,column 14,is_stmt,isa 0
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |2048| 
        ; call occurs [#_ad7738_rawrdy] ; [] |2048| 
        CMPB      AL,#0                 ; [CPU_] |2048| 
        B         $C$L587,EQ            ; [CPU_] |2048| 
        ; branchcc occurs ; [] |2048| 
	.dwpsn	file "../Source/prod.c",line 2052,column 7,is_stmt,isa 0
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |2052| 
        ; call occurs [#_ad7738_getraw] ; [] |2052| 
	.dwpsn	file "../Source/prod.c",line 2053,column 7,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |2053| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2053| 
        ADDL      XAR4,ACC              ; [CPU_] |2053| 
        MOVL      XAR0,#14              ; [CPU_] |2053| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2053| 
        MOVL      XAR0,#14              ; [CPU_] |2053| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2053| 
        ASR64     ACC:P,16              ; [CPU_] |2053| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2053| 
        MOVL      XAR0,#14              ; [CPU_] |2053| 
        ASR64     ACC:P,16              ; [CPU_] |2053| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2053| 
        MOVL      XAR0,#14              ; [CPU_] |2053| 
        ADDUL     P,*+XAR3[0]           ; [CPU_] |2053| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2053| 
        ADDCL     ACC,*+XAR3[2]         ; [CPU_] |2053| 
        MOVL      *+XAR3[0],P           ; [CPU_] |2053| 
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2053| 
	.dwpsn	file "../Source/prod.c",line 2047,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |2047| 
        SUBL      *-SP[38],ACC          ; [CPU_] |2047| 
        MOVB      ACC,#0                ; [CPU_] |2047| 
        SUBB      ACC,#1                ; [CPU_] |2047| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |2047| 
        B         $C$L582,NEQ           ; [CPU_] |2047| 
        ; branchcc occurs ; [] |2047| 
$C$L583:    
	.dwpsn	file "../Source/prod.c",line 2055,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |2055| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2055| 
        MOV       *-SP[2],#0            ; [CPU_] |2055| 
        MOV       *-SP[1],#0            ; [CPU_] |2055| 
        MOVL      P,*+XAR3[0]           ; [CPU_] |2055| 
        MOVL      ACC,*+XAR3[2]         ; [CPU_] |2055| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |2055| 
        ; call occurs [#LL$$DIV] ; [] |2055| 
	.dwpsn	file "../Source/prod.c",line 2058,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |2058| 
        MOVB      XAR0,#46              ; [CPU_] |2058| 
	.dwpsn	file "../Source/prod.c",line 2055,column 6,is_stmt,isa 0
        MOVL      *+XAR3[0],P           ; [CPU_] |2055| 
	.dwpsn	file "../Source/prod.c",line 2057,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |2057| 
	.dwpsn	file "../Source/prod.c",line 2055,column 6,is_stmt,isa 0
        MOVL      *+XAR3[2],ACC         ; [CPU_] |2055| 
	.dwpsn	file "../Source/prod.c",line 2058,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2058| 
        CMPB      AL,#2                 ; [CPU_] |2058| 
        B         $C$L586,LEQ           ; [CPU_] |2058| 
        ; branchcc occurs ; [] |2058| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2059,column 7,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |2059| 
        ; branch occurs ; [] |2059| 
$C$L584:    
	.dwpsn	file "../Source/prod.c",line 2060,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |2060| 
$C$L585:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2059,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |2059| 
        B         $C$L586,HIS           ; [CPU_] |2059| 
        ; branchcc occurs ; [] |2059| 
        MOVB      AL,#1                 ; [CPU_] |2059| 
        ADD       AL,AR4                ; [CPU_] |2059| 
        MOVZ      AR5,AL                ; [CPU_] |2059| 
        MOV       ACC,AR5 << 1          ; [CPU_] |2059| 
        ADDL      ACC,XAR1              ; [CPU_] |2059| 
        MOVL      XAR6,ACC              ; [CPU_] |2059| 
        MOVB      XAR0,#72              ; [CPU_] |2059| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |2059| 
        MOVL      XAR0,#12              ; [CPU_] |2059| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |2059| 
        MOVL      XAR0,#12              ; [CPU_] |2059| 
        ASR64     ACC:P,16              ; [CPU_] |2059| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2059| 
        MOVL      XAR0,#12              ; [CPU_] |2059| 
        ASR64     ACC:P,16              ; [CPU_] |2059| 
        MOVL      *+FP[AR0],P           ; [CPU_] |2059| 
        MOVL      *-SP[4],P             ; [CPU_] |2059| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2059| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |2059| 
        MOVL      P,*-SP[32]            ; [CPU_] |2059| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1279, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2059| 
        ; call occurs [#LL$$CMP] ; [] |2059| 
        CMPB      AL,#0                 ; [CPU_] |2059| 
        B         $C$L584,GT            ; [CPU_] |2059| 
        ; branchcc occurs ; [] |2059| 
$C$L586:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2063,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |2063| 
        ADDL      ACC,XAR1              ; [CPU_] |2063| 
        MOVL      XAR4,ACC              ; [CPU_] |2063| 
        MOVL      XAR0,#88              ; [CPU_] |2063| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2063| 
        MOVB      XAR0,#96              ; [CPU_] |2063| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2063| 
        MOVL      XAR0,#42              ; [CPU_] |2063| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2063| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2063| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |2063| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2063| 
        ; call occurs [#FS$$MPY] ; [] |2063| 
        MOVL      XAR0,#36              ; [CPU_] |2063| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2063| 
        MOVL      P,*XAR3++             ; [CPU_] |2063| 
        MOVL      ACC,*XAR3++           ; [CPU_] |2063| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |2063| 
        ; call occurs [#LL$$TOFS] ; [] |2063| 
        MOVL      XAR0,#36              ; [CPU_] |2063| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2063| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2063| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2063| 
        ; call occurs [#FS$$MPY] ; [] |2063| 
        MOVL      XAR0,#88              ; [CPU_] |2063| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2063| 
        MOVB      XAR1,#118             ; [CPU_] |2063| 
        MOVL      XAR6,*+XAR4[AR1]      ; [CPU_] |2063| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2063| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2063| 
        ; call occurs [#FS$$ADD] ; [] |2063| 
        MOVL      XAR0,#38              ; [CPU_] |2063| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2063| 
        MOVL      XAR0,#38              ; [CPU_] |2063| 
        MOVL      *XAR4++,ACC           ; [CPU_] |2063| 
	.dwpsn	file "../Source/prod.c",line 2032,column 17,is_stmt,isa 0
        INC       *-SP[48]              ; [CPU_] |2032| 
	.dwpsn	file "../Source/prod.c",line 2063,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2063| 
        MOV       AL,*-SP[48]           ; [CPU_] |2063| 
	.dwpsn	file "../Source/prod.c",line 2032,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2032| 
        B         $C$L579,LT            ; [CPU_] |2032| 
        ; branchcc occurs ; [] |2032| 
	.dwpsn	file "../Source/prod.c",line 2067,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2067| 
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |2067| 
        ; call occurs [#_shunt_switch] ; [] |2067| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2069,column 5,is_stmt,isa 0
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |2069| 
        ; call occurs [#_maf_rst] ; [] |2069| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2072,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |2072| 
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2072| 
        ; call occurs [#_scia_puts] ; [] |2072| 
	.dwpsn	file "../Source/prod.c",line 2074,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |2074| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2074| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |2074| 
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |2074| 
        ; call occurs [#FS$$SUB] ; [] |2074| 
        MOVL      XAR0,#36              ; [CPU_] |2074| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |2074| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |2074| 
        MOVB      XAR0,#140             ; [CPU_] |2074| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2074| 
	.dwpsn	file "../Source/prod.c",line 2077,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |2077| 
        MOV       AL,#0                 ; [CPU_] |2077| 
        MOV       AH,#0                 ; [CPU_] |2077| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2077| 
	.dwpsn	file "../Source/prod.c",line 2078,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |2078| 
        MOV       ACC,#32512 << 15      ; [CPU_] |2078| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2078| 
	.dwpsn	file "../Source/prod.c",line 2079,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |2079| 
        MOV       AL,#0                 ; [CPU_] |2079| 
        MOV       AH,#0                 ; [CPU_] |2079| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |2079| 
	.dwpsn	file "../Source/prod.c",line 2080,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |2080| 
        MOV       AL,*-SP[58]           ; [CPU_] |2080| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |2080| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2083,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2083| 
        MOVB      AL,#152               ; [CPU_] |2083| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2083| 
        MOV       T,*-SP[57]            ; [CPU_] |2083| 
        MOVL      XAR7,XAR4             ; [CPU_] |2083| 
        MPYU      ACC,T,AL              ; [CPU_] |2083| 
        ADDL      ACC,XAR6              ; [CPU_] |2083| 
        ADDB      ACC,#82               ; [CPU_] |2083| 
        MOVL      XAR5,ACC              ; [CPU_] |2083| 
        MOVL      XAR0,#42              ; [CPU_] |2083| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |2083| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2083| 
        MOV       AL,*-SP[57]           ; [CPU_] |2083| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2086,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |2086| 
	.dwpsn	file "../Source/prod.c",line 2088,column 5,is_stmt,isa 0
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2088| 
        ; call occurs [#_ad7738_setcal] ; [] |2088| 
        MOVL      XAR0,#78              ; [CPU_] |2088| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2088| 
	.dwpsn	file "../Source/prod.c",line 2089,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |2089| 
        MOVL      XAR1,ACC              ; [CPU_] |2089| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2089| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1289, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2089| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2089| 
	.dwpsn	file "../Source/prod.c",line 2090,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2090| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2090| 
        ; call occurs [#_ad7738_resetvall] ; [] |2090| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2093,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |2093| 
        MOV       AL,*-SP[60]           ; [CPU_] |2093| 
        MOVL      XAR0,#44              ; [CPU_] |2093| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2093| 
        MOV       *-SP[3],AL            ; [CPU_] |2093| 
        MOV       AL,*-SP[59]           ; [CPU_] |2093| 
        MOV       *-SP[4],AL            ; [CPU_] |2093| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2093| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |2093| 
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("_sprintf")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2093| 
        ; call occurs [#_sprintf] ; [] |2093| 
        MOVL      XAR4,XAR1             ; [CPU_] |2093| 
	.dwpsn	file "../Source/prod.c",line 2095,column 5,is_stmt,isa 0
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2095| 
        ; call occurs [#_scia_puts] ; [] |2095| 
        MOV       AL,*-SP[57]           ; [CPU_] |2095| 
	.dwpsn	file "../Source/prod.c",line 2096,column 5,is_stmt,isa 0
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2096| 
        ; call occurs [#_print_sensor] ; [] |2096| 
	.dwpsn	file "../Source/prod.c",line 2101,column 5,is_stmt,isa 0
        B         $C$L528,UNC           ; [CPU_] |2101| 
        ; branch occurs ; [] |2101| 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 2049,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2049| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_delay_us")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |2049| 
        ; call occurs [#_delay_us] ; [] |2049| 
	.dwpsn	file "../Source/prod.c",line 2048,column 14,is_stmt,isa 0
        B         $C$L582,UNC           ; [CPU_] |2048| 
        ; branch occurs ; [] |2048| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1893,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1893| 
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1893| 
        ; call occurs [#_scia_puts] ; [] |1893| 
	.dwpsn	file "../Source/prod.c",line 1885,column 6,is_stmt,isa 0
        B         $C$L565,UNC           ; [CPU_] |1885| 
        ; branch occurs ; [] |1885| 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1823,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1823| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1823| 
        ; call occurs [#_scia_puts] ; [] |1823| 
	.dwpsn	file "../Source/prod.c",line 1817,column 5,is_stmt,isa 0
        B         $C$L548,UNC           ; [CPU_] |1817| 
        ; branch occurs ; [] |1817| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1738,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1738| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1738| 
        ; call occurs [#_scia_puts] ; [] |1738| 
	.dwpsn	file "../Source/prod.c",line 1728,column 5,is_stmt,isa 0
        B         $C$L536,UNC           ; [CPU_] |1728| 
        ; branch occurs ; [] |1728| 
$C$L591:    
	.dwpsn	file "../Source/prod.c",line 1721,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1721| 
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1721| 
        ; call occurs [#_scia_puts] ; [] |1721| 
	.dwpsn	file "../Source/prod.c",line 1713,column 5,is_stmt,isa 0
        B         $C$L535,UNC           ; [CPU_] |1713| 
        ; branch occurs ; [] |1713| 
$C$L592:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1435,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1435| 
        B         $C$L626,LO            ; [CPU_] |1435| 
        ; branchcc occurs ; [] |1435| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.7.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L626,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1439,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1439| 
        CMPB      AL,#67                ; [CPU_] |1439| 
        B         $C$L593,EQ            ; [CPU_] |1439| 
        ; branchcc occurs ; [] |1439| 
        CMPB      AL,#68                ; [CPU_] |1439| 
        B         $C$L626,NEQ           ; [CPU_] |1439| 
        ; branchcc occurs ; [] |1439| 
$C$L593:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1444,column 5,is_stmt,isa 0
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_atoi")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1444| 
        ; call occurs [#_atoi] ; [] |1444| 
        MOV       *-SP[58],AL           ; [CPU_] |1444| 
	.dwpsn	file "../Source/prod.c",line 1446,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1446| 
        CMPB      AL,#4                 ; [CPU_] |1446| 
        B         $C$L626,HIS           ; [CPU_] |1446| 
        ; branchcc occurs ; [] |1446| 
	.dwpsn	file "../Source/prod.c",line 1451,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1451| 
        MOV       AH,#0                 ; [CPU_] |1451| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1451| 
	.dwpsn	file "../Source/prod.c",line 1452,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1452| 
        MOV       AH,#0                 ; [CPU_] |1452| 
        MOVL      *-SP[22],ACC          ; [CPU_] |1452| 
        MOV       AL,*-SP[59]           ; [CPU_] |1452| 
	.dwpsn	file "../Source/prod.c",line 1453,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1453| 
        B         $C$L597,LOS           ; [CPU_] |1453| 
        ; branchcc occurs ; [] |1453| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1453,column 10,is_stmt,isa 0
        MOV       *-SP[47],#3           ; [CPU_] |1453| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 1454,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1454| 
        CMPB      AL,#88                ; [CPU_] |1454| 
        B         $C$L595,NEQ           ; [CPU_] |1454| 
        ; branchcc occurs ; [] |1454| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_strtod")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1456,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1456| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 1459,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1459| 
        B         $C$L596,NEQ           ; [CPU_] |1459| 
        ; branchcc occurs ; [] |1459| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.7.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[47]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_strtod")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1461,column 7,is_stmt,isa 0
        MOVL      *-SP[22],ACC          ; [CPU_] |1461| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1453,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |1453| 
        MOV       AL,*-SP[59]           ; [CPU_] |1453| 
        ADDB      XAR1,#1               ; [CPU_] |1453| 
        CMP       AL,*-SP[47]           ; [CPU_] |1453| 
        B         $C$L594,HI            ; [CPU_] |1453| 
        ; branchcc occurs ; [] |1453| 
$C$L597:    
	.dwpsn	file "../Source/prod.c",line 1466,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[22]          ; [CPU_] |1466| 
	.dwpsn	file "../Source/prod.c",line 1449,column 5,is_stmt,isa 0
        DEC       *-SP[58]              ; [CPU_] |1449| 
	.dwpsn	file "../Source/prod.c",line 1466,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1466| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1466| 
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1466| 
        ; call occurs [#FS$$CMP] ; [] |1466| 
        CMPB      AL,#0                 ; [CPU_] |1466| 
        B         $C$L626,EQ            ; [CPU_] |1466| 
        ; branchcc occurs ; [] |1466| 
	.dwpsn	file "../Source/prod.c",line 1470,column 5,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1470| 
        ; call occurs [#_lcd_clear] ; [] |1470| 
	.dwpsn	file "../Source/prod.c",line 1471,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1471| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1471| 
        MOVL      XAR0,#44              ; [CPU_] |1471| 
        ADD       AL,*-SP[58]           ; [CPU_] |1471| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1471| 
        MOVZ      AR1,AL                ; [CPU_] |1471| 
        MOV       *-SP[59],AL           ; [CPU_] |1471| 
        MOV       *-SP[3],AL            ; [CPU_] |1471| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1471| 
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_sprintf")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1471| 
        ; call occurs [#_sprintf] ; [] |1471| 
        MOVL      XAR0,#44              ; [CPU_] |1471| 
	.dwpsn	file "../Source/prod.c",line 1472,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1472| 
	.dwpsn	file "../Source/prod.c",line 1471,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1471| 
	.dwpsn	file "../Source/prod.c",line 1472,column 5,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1472| 
        ; call occurs [#_lcd_puts] ; [] |1472| 
	.dwpsn	file "../Source/prod.c",line 1473,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1473| 
        MOVL      XAR0,#44              ; [CPU_] |1473| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1473| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1473| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1473| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1473| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("_sprintf")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1473| 
        ; call occurs [#_sprintf] ; [] |1473| 
        MOVL      XAR0,#44              ; [CPU_] |1473| 
	.dwpsn	file "../Source/prod.c",line 1474,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1474| 
	.dwpsn	file "../Source/prod.c",line 1473,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1473| 
	.dwpsn	file "../Source/prod.c",line 1474,column 5,is_stmt,isa 0
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1474| 
        ; call occurs [#_lcd_puts] ; [] |1474| 
	.dwpsn	file "../Source/prod.c",line 1475,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1475| 
        MOVL      XAR0,#44              ; [CPU_] |1475| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1475| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1475| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1475| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1475| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_sprintf")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1475| 
        ; call occurs [#_sprintf] ; [] |1475| 
        MOVL      XAR0,#44              ; [CPU_] |1475| 
	.dwpsn	file "../Source/prod.c",line 1476,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1476| 
	.dwpsn	file "../Source/prod.c",line 1475,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1475| 
	.dwpsn	file "../Source/prod.c",line 1476,column 5,is_stmt,isa 0
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1476| 
        ; call occurs [#_lcd_puts] ; [] |1476| 
	.dwpsn	file "../Source/prod.c",line 1478,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1478| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1478| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1478| 
        MOVL      XAR0,#38              ; [CPU_] |1478| 
        ADDB      ACC,#1                ; [CPU_] |1478| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1478| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1478| 
        CMPB      AL,#67                ; [CPU_] |1478| 
        B         $C$L620,EQ            ; [CPU_] |1478| 
        ; branchcc occurs ; [] |1478| 
        CMPB      AL,#68                ; [CPU_] |1478| 
        B         $C$L626,NEQ           ; [CPU_] |1478| 
        ; branchcc occurs ; [] |1478| 
	.dwpsn	file "../Source/prod.c",line 1531,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1531| 
        MOV       AH,#16672             ; [CPU_] |1531| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1531| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1531| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1531| 
        ; call occurs [#FS$$CMP] ; [] |1531| 
        CMPB      AL,#0                 ; [CPU_] |1531| 
        B         $C$L619,GT            ; [CPU_] |1531| 
        ; branchcc occurs ; [] |1531| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1531| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1531| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1531| 
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1531| 
        ; call occurs [#FS$$CMP] ; [] |1531| 
        CMPB      AL,#0                 ; [CPU_] |1531| 
        B         $C$L619,LT            ; [CPU_] |1531| 
        ; branchcc occurs ; [] |1531| 
        MOV       AL,#0                 ; [CPU_] |1531| 
        MOV       AH,#16672             ; [CPU_] |1531| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1531| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1531| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1531| 
        ; call occurs [#FS$$CMP] ; [] |1531| 
        CMPB      AL,#0                 ; [CPU_] |1531| 
        B         $C$L619,GT            ; [CPU_] |1531| 
        ; branchcc occurs ; [] |1531| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1531| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1531| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1531| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1531| 
        ; call occurs [#FS$$CMP] ; [] |1531| 
        CMPB      AL,#0                 ; [CPU_] |1531| 
        B         $C$L619,LT            ; [CPU_] |1531| 
        ; branchcc occurs ; [] |1531| 
	.dwpsn	file "../Source/prod.c",line 1539,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1539| 
        MOVB      AL,#0                 ; [CPU_] |1539| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1539| 
        ; call occurs [#_lcd_puts] ; [] |1539| 
	.dwpsn	file "../Source/prod.c",line 1541,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1541| 
        MOVL      XAR0,#44              ; [CPU_] |1541| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1541| 
        MOV       *-SP[3],AR1           ; [CPU_] |1541| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1541| 
        MOVL      XAR4,XAR1             ; [CPU_] |1541| 
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("_sprintf")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1541| 
        ; call occurs [#_sprintf] ; [] |1541| 
        MOVL      XAR4,XAR1             ; [CPU_] |1541| 
	.dwpsn	file "../Source/prod.c",line 1544,column 6,is_stmt,isa 0
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1544| 
        ; call occurs [#_scia_puts] ; [] |1544| 
	.dwpsn	file "../Source/prod.c",line 1545,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1545| 
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1545| 
        ; call occurs [#_scia_puts] ; [] |1545| 
	.dwpsn	file "../Source/prod.c",line 1546,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1546| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1546| 
        ; call occurs [#_dac_setmode] ; [] |1546| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOV       T,*-SP[58]            ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        SUBB      XAR4,#35              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOV       AL,*-SP[58]           ; [CPU_] 
        MOV       *-SP[48],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#86              ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L598:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1549,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1549| 
	.dwpsn	file "../Source/prod.c",line 1550,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1550| 
        MOV       AH,#0                 ; [CPU_] |1550| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1550| 
        MOVL      ACC,XAR1              ; [CPU_] |1550| 
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1550| 
        ; call occurs [#FS$$CMP] ; [] |1550| 
        CMPB      AL,#0                 ; [CPU_] |1550| 
        B         $C$L599,GEQ           ; [CPU_] |1550| 
        ; branchcc occurs ; [] |1550| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1550| 
        MOVL      XAR0,#88              ; [CPU_] |1550| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1550| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1550| 
        B         $C$L600,UNC           ; [CPU_] |1550| 
        ; branch occurs ; [] |1550| 
$C$L599:    
        MOVL      *-SP[2],XAR1          ; [CPU_] |1550| 
        MOVL      XAR0,#88              ; [CPU_] |1550| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1550| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1550| 
$C$L600:    
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1550| 
        ; call occurs [#FS$$MPY] ; [] |1550| 
        MOVL      XAR0,#88              ; [CPU_] |1550| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1550| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1550| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1550| 
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1550| 
        ; call occurs [#FS$$ADD] ; [] |1550| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1550| 
        ; call occurs [#FS$$TOLL] ; [] |1550| 
	.dwpsn	file "../Source/prod.c",line 1556,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1556| 
	.dwpsn	file "../Source/prod.c",line 1550,column 8,is_stmt,isa 0
        MOVL      *-SP[32],P            ; [CPU_] |1550| 
        MOVL      *-SP[30],ACC          ; [CPU_] |1550| 
	.dwpsn	file "../Source/prod.c",line 1556,column 7,is_stmt,isa 0
        MOVL      P,*-SP[32]            ; [CPU_] |1556| 
        CMP64     ACC:P                 ; [CPU_] |1556| 
        B         $C$L602,LEQ           ; [CPU_] |1556| 
        ; branchcc occurs ; [] |1556| 
	.dwpsn	file "../Source/prod.c",line 1558,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1558| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1558| 
        MOV       *-SP[2],#0            ; [CPU_] |1558| 
        MOV       *-SP[1],#0            ; [CPU_] |1558| 
        MOVL      P,*-SP[32]            ; [CPU_] |1558| 
        MOVL      ACC,*-SP[30]          ; [CPU_] |1558| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1323, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1558| 
        ; call occurs [#LL$$CMP] ; [] |1558| 
        CMPB      AL,#0                 ; [CPU_] |1558| 
        B         $C$L601,GEQ           ; [CPU_] |1558| 
        ; branchcc occurs ; [] |1558| 
	.dwpsn	file "../Source/prod.c",line 1561,column 8,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1561| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1561| 
        MOV       AL,*-SP[32]           ; [CPU_] |1561| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1561| 
        B         $C$L603,UNC           ; [CPU_] |1561| 
        ; branch occurs ; [] |1561| 
$C$L601:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1559,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1559| 
	.dwpsn	file "../Source/prod.c",line 1560,column 7,is_stmt,isa 0
        B         $C$L603,UNC           ; [CPU_] |1560| 
        ; branch occurs ; [] |1560| 
$C$L602:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1557,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1557| 
$C$L603:    
	.dwpsn	file "../Source/prod.c",line 1564,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1564| 
        MOVL      XAR0,#44              ; [CPU_] |1564| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1564| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1564| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1564| 
        MOVL      XAR4,XAR1             ; [CPU_] |1564| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("_sprintf")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1564| 
        ; call occurs [#_sprintf] ; [] |1564| 
        MOVL      XAR4,XAR1             ; [CPU_] |1564| 
	.dwpsn	file "../Source/prod.c",line 1565,column 7,is_stmt,isa 0
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1565| 
        ; call occurs [#_scia_puts] ; [] |1565| 
	.dwpsn	file "../Source/prod.c",line 1566,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1566| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1566| 
$C$L604:    
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1569,column 8,is_stmt,isa 0
        MOV       AH,*-SP[48]           ; [CPU_] |1569| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1569| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1569| 
        ; call occurs [#_mcbsp_xmit] ; [] |1569| 
	.dwpsn	file "../Source/prod.c",line 1570,column 8,is_stmt,isa 0
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1570| 
        ; call occurs [#_latch_dac] ; [] |1570| 
	.dwpsn	file "../Source/prod.c",line 1573,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1573| 
        MOVL      XAR4,XAR1             ; [CPU_] |1573| 
        MOVL      XAR5,XAR1             ; [CPU_] |1573| 
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1573| 
        ; call occurs [#_scia_getparam] ; [] |1573| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1575,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1575| 
        CMPB      AL,#45                ; [CPU_] |1575| 
        B         $C$L605,EQ            ; [CPU_] |1575| 
        ; branchcc occurs ; [] |1575| 
        CMPB      AL,#83                ; [CPU_] |1575| 
        B         $C$L610,EQ            ; [CPU_] |1575| 
        ; branchcc occurs ; [] |1575| 
$C$L605:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1582,column 8,is_stmt,isa 0
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_atoi")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1582| 
        ; call occurs [#_atoi] ; [] |1582| 
        CMPB      AL,#0                 ; [CPU_] |1582| 
	.dwpsn	file "../Source/prod.c",line 1584,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1584| 
	.dwpsn	file "../Source/prod.c",line 1587,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1587| 
        CMPB      AH,#43                ; [CPU_] |1587| 
        B         $C$L606,EQ            ; [CPU_] |1587| 
        ; branchcc occurs ; [] |1587| 
	.dwpsn	file "../Source/prod.c",line 1594,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1594| 
        B         $C$L609,NEQ           ; [CPU_] |1594| 
        ; branchcc occurs ; [] |1594| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1596,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1596| 
        B         $C$L607,HI            ; [CPU_] |1596| 
        ; branchcc occurs ; [] |1596| 
	.dwpsn	file "../Source/prod.c",line 1597,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1597| 
	.dwpsn	file "../Source/prod.c",line 1598,column 9,is_stmt,isa 0
        B         $C$L609,UNC           ; [CPU_] |1598| 
        ; branch occurs ; [] |1598| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1589,column 9,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1589| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1589| 
        MOV       AH,#65535             ; [CPU_] |1589| 
        SUB       AH,AL                 ; [CPU_] |1589| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1589| 
        B         $C$L608,HIS           ; [CPU_] |1589| 
        ; branchcc occurs ; [] |1589| 
$C$L607:    
	.dwpsn	file "../Source/prod.c",line 1592,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1592| 
        B         $C$L609,UNC           ; [CPU_] |1592| 
        ; branch occurs ; [] |1592| 
$C$L608:    
	.dwpsn	file "../Source/prod.c",line 1590,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1590| 
$C$L609:    
	.dwpsn	file "../Source/prod.c",line 1568,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1568| 
        B         $C$L604,NEQ           ; [CPU_] |1568| 
        ; branchcc occurs ; [] |1568| 
$C$L610:    
	.dwpsn	file "../Source/prod.c",line 1604,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1604| 
        MOVL      XAR0,#86              ; [CPU_] |1604| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1604| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1604| 
        MOVL      XAR0,#86              ; [CPU_] |1604| 
        MOV       AL,*XAR7              ; [CPU_] |1604| 
        MOV       *-SP[3],AL            ; [CPU_] |1604| 
        ADDB      XAR7,#1               ; [CPU_] |1604| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |1604| 
        MOVL      XAR0,#44              ; [CPU_] |1604| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1604| 
        MOVL      XAR4,XAR1             ; [CPU_] |1604| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_sprintf")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1604| 
        ; call occurs [#_sprintf] ; [] |1604| 
        MOVL      XAR4,XAR1             ; [CPU_] |1604| 
	.dwpsn	file "../Source/prod.c",line 1605,column 7,is_stmt,isa 0
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1605| 
        ; call occurs [#_scia_puts] ; [] |1605| 
	.dwpsn	file "../Source/prod.c",line 1548,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1548| 
	.dwpsn	file "../Source/prod.c",line 1605,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1605| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1605| 
	.dwpsn	file "../Source/prod.c",line 1548,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1548| 
        SUBB      XAR6,#1               ; [CPU_U] |1548| 
        ADDB      ACC,#2                ; [CPU_] |1548| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1548| 
        MOVZ      AR0,AR6               ; [CPU_] |1548| 
        MOV       *-SP[47],AR6          ; [CPU_] |1548| 
        CMP       AR0,#-1               ; [CPU_] |1548| 
        B         $C$L598,NEQ           ; [CPU_] |1548| 
        ; branchcc occurs ; [] |1548| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1608,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1608| 
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1608| 
        ; call occurs [#FS$$TOU] ; [] |1608| 
        MOV       *-SP[33],AL           ; [CPU_] |1608| 
	.dwpsn	file "../Source/prod.c",line 1610,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1610| 
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1610| 
        ; call occurs [#_scia_puts] ; [] |1610| 
	.dwpsn	file "../Source/prod.c",line 1611,column 6,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1611| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1611| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1611| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1611| 
$C$L611:    
	.dwpsn	file "../Source/prod.c",line 1614,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1614| 
        MOV       AH,*-SP[48]           ; [CPU_] |1614| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1614| 
        ; call occurs [#_mcbsp_xmit] ; [] |1614| 
	.dwpsn	file "../Source/prod.c",line 1615,column 7,is_stmt,isa 0
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1335, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1615| 
        ; call occurs [#_latch_dac] ; [] |1615| 
        MOVL      XAR0,#86              ; [CPU_] |1615| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1615| 
	.dwpsn	file "../Source/prod.c",line 1618,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1618| 
        MOVL      XAR4,XAR5             ; [CPU_] |1618| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1618| 
        ; call occurs [#_scia_getparam] ; [] |1618| 
	.dwpsn	file "../Source/prod.c",line 1623,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1623| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1623| 
        CMPB      AL,#83                ; [CPU_] |1623| 
        B         $C$L616,EQ            ; [CPU_] |1623| 
        ; branchcc occurs ; [] |1623| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1626,column 7,is_stmt,isa 0
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("_atoi")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1626| 
        ; call occurs [#_atoi] ; [] |1626| 
        CMPB      AL,#0                 ; [CPU_] |1626| 
	.dwpsn	file "../Source/prod.c",line 1631,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1631| 
	.dwpsn	file "../Source/prod.c",line 1628,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1628| 
	.dwpsn	file "../Source/prod.c",line 1631,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1631| 
        CMPB      AH,#43                ; [CPU_] |1631| 
        B         $C$L612,EQ            ; [CPU_] |1631| 
        ; branchcc occurs ; [] |1631| 
	.dwpsn	file "../Source/prod.c",line 1638,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1638| 
        B         $C$L615,NEQ           ; [CPU_] |1638| 
        ; branchcc occurs ; [] |1638| 
	.dwpsn	file "../Source/prod.c",line 1640,column 8,is_stmt,isa 0
        CMP       AL,*-SP[33]           ; [CPU_] |1640| 
        B         $C$L613,HI            ; [CPU_] |1640| 
        ; branchcc occurs ; [] |1640| 
	.dwpsn	file "../Source/prod.c",line 1641,column 9,is_stmt,isa 0
        SUB       *-SP[33],AL           ; [CPU_] |1641| 
	.dwpsn	file "../Source/prod.c",line 1642,column 8,is_stmt,isa 0
        B         $C$L615,UNC           ; [CPU_] |1642| 
        ; branch occurs ; [] |1642| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1633,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1633| 
        SUB       AH,AL                 ; [CPU_] |1633| 
        CMP       AH,*-SP[33]           ; [CPU_] |1633| 
        B         $C$L614,HIS           ; [CPU_] |1633| 
        ; branchcc occurs ; [] |1633| 
$C$L613:    
	.dwpsn	file "../Source/prod.c",line 1636,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1636| 
        B         $C$L615,UNC           ; [CPU_] |1636| 
        ; branch occurs ; [] |1636| 
$C$L614:    
	.dwpsn	file "../Source/prod.c",line 1634,column 9,is_stmt,isa 0
        ADD       *-SP[33],AL           ; [CPU_] |1634| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1613,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1613| 
        B         $C$L611,NEQ           ; [CPU_] |1613| 
        ; branchcc occurs ; [] |1613| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1648,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1648| 
        MOV       AL,*-SP[33]           ; [CPU_] |1648| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1648| 
        MOV       *-SP[3],AL            ; [CPU_] |1648| 
        MOVL      XAR4,XAR1             ; [CPU_] |1648| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("_sprintf")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1648| 
        ; call occurs [#_sprintf] ; [] |1648| 
        MOVL      XAR4,XAR1             ; [CPU_] |1648| 
	.dwpsn	file "../Source/prod.c",line 1649,column 6,is_stmt,isa 0
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1649| 
        ; call occurs [#_scia_puts] ; [] |1649| 
	.dwpsn	file "../Source/prod.c",line 1652,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1652| 
        MOV       AH,#0                 ; [CPU_] |1652| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1652| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1652| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1652| 
        ; call occurs [#FS$$CMP] ; [] |1652| 
        CMPB      AL,#0                 ; [CPU_] |1652| 
        B         $C$L617,LT            ; [CPU_] |1652| 
        ; branchcc occurs ; [] |1652| 
	.dwpsn	file "../Source/prod.c",line 1658,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1658| 
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1658| 
        ; call occurs [#U$$TOFS] ; [] |1658| 
        MOVL      XAR1,ACC              ; [CPU_] |1658| 
        MOV       AL,*-SP[35]           ; [CPU_] |1658| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1658| 
        ; call occurs [#U$$TOFS] ; [] |1658| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1658| 
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1658| 
        ; call occurs [#FS$$SUB] ; [] |1658| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1658| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1658| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1658| 
        ; call occurs [#FS$$DIV] ; [] |1658| 
        MOVL      XAR0,#88              ; [CPU_] |1658| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1658| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1658| 
	.dwpsn	file "../Source/prod.c",line 1660,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1660| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1660| 
        ; call occurs [#U$$TOFS] ; [] |1660| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1660| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1660| 
        ; call occurs [#FS$$SUB] ; [] |1660| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1660| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1660| 
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1660| 
        ; call occurs [#FS$$DIV] ; [] |1660| 
        MOVL      XAR0,#88              ; [CPU_] |1660| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1660| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1660| 
        B         $C$L618,UNC           ; [CPU_] |1660| 
        ; branch occurs ; [] |1660| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1653,column 7,is_stmt,isa 0
        MOV       AL,*-SP[33]           ; [CPU_] |1653| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1653| 
        ; call occurs [#U$$TOFS] ; [] |1653| 
        MOVL      XAR1,ACC              ; [CPU_] |1653| 
        MOV       AL,*-SP[35]           ; [CPU_] |1653| 
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1653| 
        ; call occurs [#U$$TOFS] ; [] |1653| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1653| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1653| 
        ; call occurs [#FS$$SUB] ; [] |1653| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1653| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1653| 
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1653| 
        ; call occurs [#FS$$DIV] ; [] |1653| 
        MOVL      XAR0,#88              ; [CPU_] |1653| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1653| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1653| 
	.dwpsn	file "../Source/prod.c",line 1655,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |1655| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1655| 
        ; call occurs [#U$$TOFS] ; [] |1655| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1655| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1655| 
        ; call occurs [#FS$$SUB] ; [] |1655| 
        MOVL      XAR6,*-SP[22]         ; [CPU_] |1655| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1655| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1655| 
        ; call occurs [#FS$$DIV] ; [] |1655| 
        MOVL      XAR0,#88              ; [CPU_] |1655| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1655| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1655| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1663,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1663| 
	.dwpsn	file "../Source/prod.c",line 1665,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1665| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1665| 
        ; call occurs [#_dac_setmode] ; [] |1665| 
	.dwpsn	file "../Source/prod.c",line 1667,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1667| 
        MOVL      XAR0,#88              ; [CPU_] |1667| 
        MOV       AL,*-SP[59]           ; [CPU_] |1667| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1667| 
        MOV       *-SP[3],AL            ; [CPU_] |1667| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1667| 
        MOVL      XAR0,#44              ; [CPU_] |1667| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1667| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1667| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1667| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1667| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1667| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1667| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1667| 
        MOVL      XAR4,XAR1             ; [CPU_] |1667| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("_sprintf")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1667| 
        ; call occurs [#_sprintf] ; [] |1667| 
        MOVL      XAR4,XAR1             ; [CPU_] |1667| 
	.dwpsn	file "../Source/prod.c",line 1671,column 6,is_stmt,isa 0
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1671| 
        ; call occurs [#_scia_puts] ; [] |1671| 
	.dwpsn	file "../Source/prod.c",line 1673,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1673| 
	.dwpsn	file "../Source/prod.c",line 1674,column 6,is_stmt,isa 0
        B         $C$L624,UNC           ; [CPU_] |1674| 
        ; branch occurs ; [] |1674| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1533,column 7,is_stmt,isa 0
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1533| 
        ; call occurs [#_lcd_clear] ; [] |1533| 
	.dwpsn	file "../Source/prod.c",line 1534,column 7,is_stmt,isa 0
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("_update_units")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1534| 
        ; call occurs [#_update_units] ; [] |1534| 
	.dwpsn	file "../Source/prod.c",line 1535,column 7,is_stmt,isa 0
        B         $C$L626,UNC           ; [CPU_] |1535| 
        ; branch occurs ; [] |1535| 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1483,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1483| 
        MOVB      AL,#0                 ; [CPU_] |1483| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1483| 
        ; call occurs [#_lcd_puts] ; [] |1483| 
	.dwpsn	file "../Source/prod.c",line 1485,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1485| 
        MOVL      XAR0,#44              ; [CPU_] |1485| 
        MOV       AL,*-SP[59]           ; [CPU_] |1485| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1485| 
        MOV       *-SP[3],AL            ; [CPU_] |1485| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1485| 
        MOVL      XAR4,XAR1             ; [CPU_] |1485| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("_sprintf")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1485| 
        ; call occurs [#_sprintf] ; [] |1485| 
        MOVL      XAR4,XAR1             ; [CPU_] |1485| 
	.dwpsn	file "../Source/prod.c",line 1488,column 6,is_stmt,isa 0
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1488| 
        ; call occurs [#_scia_puts] ; [] |1488| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#24              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[47],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#32              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1501,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1501| 
        MOVL      XAR0,#42              ; [CPU_] |1501| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1501| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1501| 
        MOVL      XAR0,#44              ; [CPU_] |1501| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1501| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1501| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1501| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("_sprintf")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1501| 
        ; call occurs [#_sprintf] ; [] |1501| 
        MOVL      XAR0,#44              ; [CPU_] |1501| 
	.dwpsn	file "../Source/prod.c",line 1504,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1504| 
	.dwpsn	file "../Source/prod.c",line 1501,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1501| 
	.dwpsn	file "../Source/prod.c",line 1504,column 7,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |1504| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1504| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1504| 
        ; call occurs [#_scia_getparam] ; [] |1504| 
	.dwpsn	file "../Source/prod.c",line 1505,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1505| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1505| 
        ; call occurs [#_scia_puts] ; [] |1505| 
	.dwpsn	file "../Source/prod.c",line 1508,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1508| 
	.dwpsn	file "../Source/prod.c",line 1507,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1507| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1507| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1507| 
	.dwpsn	file "../Source/prod.c",line 1509,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1509| 
	.dwpsn	file "../Source/prod.c",line 1508,column 7,is_stmt,isa 0
        MOVL      *-SP[38],XAR4         ; [CPU_] |1508| 
	.dwpsn	file "../Source/prod.c",line 1509,column 7,is_stmt,isa 0
        SUBL      *-SP[38],ACC          ; [CPU_] |1509| 
        MOVB      ACC,#0                ; [CPU_] |1509| 
        SUBB      ACC,#1                ; [CPU_] |1509| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1509| 
        B         $C$L623,EQ            ; [CPU_] |1509| 
        ; branchcc occurs ; [] |1509| 
        MOV       AL,*-SP[58]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1510,column 15,is_stmt,isa 0
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1510| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1510| 
        CMPB      AL,#0                 ; [CPU_] |1510| 
        B         $C$L625,EQ            ; [CPU_] |1510| 
        ; branchcc occurs ; [] |1510| 
	.dwpsn	file "../Source/prod.c",line 1513,column 8,is_stmt,isa 0
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1513| 
        ; call occurs [#_ad7738_getraw] ; [] |1513| 
	.dwpsn	file "../Source/prod.c",line 1514,column 8,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |1514| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1514| 
        ADDL      XAR4,ACC              ; [CPU_] |1514| 
        MOVL      XAR0,#10              ; [CPU_] |1514| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1514| 
        MOVL      XAR0,#10              ; [CPU_] |1514| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1514| 
        ASR64     ACC:P,16              ; [CPU_] |1514| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1514| 
        MOVL      XAR0,#10              ; [CPU_] |1514| 
        ASR64     ACC:P,16              ; [CPU_] |1514| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1514| 
        MOVL      XAR0,#10              ; [CPU_] |1514| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1514| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1514| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1514| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1514| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1514| 
	.dwpsn	file "../Source/prod.c",line 1509,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1509| 
        SUBL      *-SP[38],ACC          ; [CPU_] |1509| 
        MOVB      ACC,#0                ; [CPU_] |1509| 
        SUBB      ACC,#1                ; [CPU_] |1509| 
        CMPL      ACC,*-SP[38]          ; [CPU_] |1509| 
        B         $C$L622,NEQ           ; [CPU_] |1509| 
        ; branchcc occurs ; [] |1509| 
$C$L623:    
	.dwpsn	file "../Source/prod.c",line 1517,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1517| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1517| 
        ; call occurs [#_scia_puts] ; [] |1517| 
	.dwpsn	file "../Source/prod.c",line 1500,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |1500| 
        MOVL      XAR0,#42              ; [CPU_] |1500| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1500| 
        MOVL      XAR0,#42              ; [CPU_] |1500| 
        SUBB      XAR6,#1               ; [CPU_U] |1500| 
        ADDB      ACC,#2                ; [CPU_] |1500| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1500| 
        MOVZ      AR0,AR6               ; [CPU_] |1500| 
        MOV       *-SP[47],AR6          ; [CPU_] |1500| 
        ADDB      XAR1,#4               ; [CPU_] |1500| 
        CMP       AR0,#-1               ; [CPU_] |1500| 
        B         $C$L621,NEQ           ; [CPU_] |1500| 
        ; branchcc occurs ; [] |1500| 
	.dwpsn	file "../Source/prod.c",line 1520,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1520| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1520| 
        MOVB      AL,#10                ; [CPU_] |1520| 
        MOV       T,*-SP[58]            ; [CPU_] |1520| 
        MPYU      ACC,T,AL              ; [CPU_] |1520| 
        ADDL      ACC,XAR6              ; [CPU_] |1520| 
        MOVL      XAR1,ACC              ; [CPU_] |1520| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1520| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1520| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |1520| 
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1520| 
        ; call occurs [#FS$$SUB] ; [] |1520| 
        MOVL      XAR6,ACC              ; [CPU_] |1520| 
        MOV       AL,#16384             ; [CPU_] |1520| 
        MOV       AH,#17948             ; [CPU_] |1520| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1520| 
        MOVL      ACC,XAR6              ; [CPU_] |1520| 
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1520| 
        ; call occurs [#FS$$MPY] ; [] |1520| 
        MOVL      XAR0,#88              ; [CPU_] |1520| 
        MOVL      P,*-SP[28]            ; [CPU_] |1520| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1520| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1520| 
        SUBUL     P,*-SP[32]            ; [CPU_] |1520| 
        SUBBL     ACC,*-SP[30]          ; [CPU_] |1520| 
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1520| 
        ; call occurs [#LL$$TOFS] ; [] |1520| 
        MOVL      XAR0,#88              ; [CPU_] |1520| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1520| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1520| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1520| 
        ; call occurs [#FS$$DIV] ; [] |1520| 
        MOVB      XAR0,#44              ; [CPU_] |1520| 
	.dwpsn	file "../Source/prod.c",line 1523,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1523| 
	.dwpsn	file "../Source/prod.c",line 1520,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1520| 
	.dwpsn	file "../Source/prod.c",line 1523,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1523| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1523| 
        MOV       AL,*-SP[59]           ; [CPU_] |1523| 
        MOV       *-SP[3],AL            ; [CPU_] |1523| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1523| 
        MOVL      XAR0,#44              ; [CPU_] |1523| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1523| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1523| 
        MOVL      XAR4,XAR1             ; [CPU_] |1523| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_sprintf")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1523| 
        ; call occurs [#_sprintf] ; [] |1523| 
        MOVL      XAR4,XAR1             ; [CPU_] |1523| 
	.dwpsn	file "../Source/prod.c",line 1525,column 6,is_stmt,isa 0
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1525| 
        ; call occurs [#_scia_puts] ; [] |1525| 
	.dwpsn	file "../Source/prod.c",line 1526,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1526| 
$C$L624:    
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1526| 
        ; call occurs [#_scia_puts] ; [] |1526| 
	.dwpsn	file "../Source/prod.c",line 1681,column 5,is_stmt,isa 0
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1681| 
        ; call occurs [#_lcd_clear] ; [] |1681| 
	.dwpsn	file "../Source/prod.c",line 1682,column 5,is_stmt,isa 0
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_update_units")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1682| 
        ; call occurs [#_update_units] ; [] |1682| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1685,column 5,is_stmt,isa 0
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1685| 
        ; call occurs [#_ad7738_setcal] ; [] |1685| 
        MOVL      XAR0,#78              ; [CPU_] |1685| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1685| 
	.dwpsn	file "../Source/prod.c",line 1686,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |1686| 
        MOVL      XAR1,ACC              ; [CPU_] |1686| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1686| 
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1686| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1686| 
	.dwpsn	file "../Source/prod.c",line 1687,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1687| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1687| 
        ; call occurs [#_ad7738_resetvall] ; [] |1687| 
	.dwpsn	file "../Source/prod.c",line 1689,column 5,is_stmt,isa 0
        B         $C$L510,UNC           ; [CPU_] |1689| 
        ; branch occurs ; [] |1689| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 1511,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1511| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("_delay_us")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1511| 
        ; call occurs [#_delay_us] ; [] |1511| 
	.dwpsn	file "../Source/prod.c",line 1510,column 15,is_stmt,isa 0
        B         $C$L622,UNC           ; [CPU_] |1510| 
        ; branch occurs ; [] |1510| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 3640,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |3640| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3640| 
        ; call occurs [#_scia_puts] ; [] |3640| 
        MOVL      XAR0,#86              ; [CPU_] |3640| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3640| 
	.dwpsn	file "../Source/prod.c",line 3641,column 5,is_stmt,isa 0
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3641| 
        ; call occurs [#_scia_puts] ; [] |3641| 
	.dwpsn	file "../Source/prod.c",line 3642,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |3642| 
	.dwpsn	file "../Source/prod.c",line 3643,column 5,is_stmt,isa 0
        B         $C$L632,UNC           ; [CPU_] |3643| 
        ; branch occurs ; [] |3643| 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 3601,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3601| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3601| 
        ; call occurs [#_scia_puts] ; [] |3601| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 3605,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3605| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_delay_us")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3605| 
        ; call occurs [#_delay_us] ; [] |3605| 
	.dwpsn	file "../Source/prod.c",line 3603,column 17,is_stmt,isa 0
        BANZ      $C$L628,AR3--         ; [CPU_] |3603| 
        ; branchcc occurs ; [] |3603| 
	.dwpsn	file "../Source/prod.c",line 3608,column 5,is_stmt,isa 0
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_reboot")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3608| 
        ; call occurs [#_reboot] ; [] |3608| 
	.dwpsn	file "../Source/prod.c",line 3609,column 5,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3609| 
        ; branch occurs ; [] |3609| 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 3585,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3585| 
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3585| 
        ; call occurs [#_scia_puts] ; [] |3585| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 3589,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3589| 
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_delay_us")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3589| 
        ; call occurs [#_delay_us] ; [] |3589| 
	.dwpsn	file "../Source/prod.c",line 3587,column 17,is_stmt,isa 0
        BANZ      $C$L630,AR3--         ; [CPU_] |3587| 
        ; branchcc occurs ; [] |3587| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3593,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3593| 
	.dwpsn	file "../Source/prod.c",line 3592,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3592| 
	.dwpsn	file "../Source/prod.c",line 3593,column 5,is_stmt,isa 0
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3593| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3593| 
	.dwpsn	file "../Source/prod.c",line 3597,column 5,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |3597| 
        ; branch occurs ; [] |3597| 
$C$L631:    
	.dwpsn	file "../Source/prod.c",line 3496,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3496| 
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3496| 
        ; call occurs [#_scia_puts] ; [] |3496| 
	.dwpsn	file "../Source/prod.c",line 3498,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3498| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3498| 
        ; call occurs [#_scia_puts] ; [] |3498| 
	.dwpsn	file "../Source/prod.c",line 3499,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |3499| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3499| 
        ; call occurs [#_scia_puts] ; [] |3499| 
	.dwpsn	file "../Source/prod.c",line 3501,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL228       ; [CPU_U] |3501| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3501| 
        ; call occurs [#_scia_puts] ; [] |3501| 
	.dwpsn	file "../Source/prod.c",line 3502,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3502| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3502| 
        ; call occurs [#_scia_puts] ; [] |3502| 
	.dwpsn	file "../Source/prod.c",line 3503,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3503| 
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3503| 
        ; call occurs [#_scia_puts] ; [] |3503| 
	.dwpsn	file "../Source/prod.c",line 3504,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3504| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3504| 
        ; call occurs [#_scia_puts] ; [] |3504| 
	.dwpsn	file "../Source/prod.c",line 3506,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3506| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3506| 
        ; call occurs [#_scia_puts] ; [] |3506| 
	.dwpsn	file "../Source/prod.c",line 3507,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3507| 
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3507| 
        ; call occurs [#_scia_puts] ; [] |3507| 
	.dwpsn	file "../Source/prod.c",line 3508,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3508| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3508| 
        ; call occurs [#_scia_puts] ; [] |3508| 
	.dwpsn	file "../Source/prod.c",line 3509,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3509| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3509| 
        ; call occurs [#_scia_puts] ; [] |3509| 
	.dwpsn	file "../Source/prod.c",line 3510,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3510| 
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3510| 
        ; call occurs [#_scia_puts] ; [] |3510| 
	.dwpsn	file "../Source/prod.c",line 3511,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3511| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3511| 
        ; call occurs [#_scia_puts] ; [] |3511| 
	.dwpsn	file "../Source/prod.c",line 3512,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3512| 
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3512| 
        ; call occurs [#_scia_puts] ; [] |3512| 
	.dwpsn	file "../Source/prod.c",line 3514,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3514| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3514| 
        ; call occurs [#_scia_puts] ; [] |3514| 
	.dwpsn	file "../Source/prod.c",line 3516,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3516| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3516| 
        ; call occurs [#_scia_puts] ; [] |3516| 
	.dwpsn	file "../Source/prod.c",line 3518,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3518| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3518| 
        ; call occurs [#_scia_puts] ; [] |3518| 
	.dwpsn	file "../Source/prod.c",line 3520,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3520| 
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3520| 
        ; call occurs [#_scia_puts] ; [] |3520| 
	.dwpsn	file "../Source/prod.c",line 3521,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3521| 
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3521| 
        ; call occurs [#_scia_puts] ; [] |3521| 
	.dwpsn	file "../Source/prod.c",line 3522,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3522| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3522| 
        ; call occurs [#_scia_puts] ; [] |3522| 
	.dwpsn	file "../Source/prod.c",line 3523,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3523| 
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3523| 
        ; call occurs [#_scia_puts] ; [] |3523| 
	.dwpsn	file "../Source/prod.c",line 3525,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3525| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3525| 
        ; call occurs [#_scia_puts] ; [] |3525| 
	.dwpsn	file "../Source/prod.c",line 3526,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3526| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3526| 
        ; call occurs [#_scia_puts] ; [] |3526| 
	.dwpsn	file "../Source/prod.c",line 3527,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3527| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3527| 
        ; call occurs [#_scia_puts] ; [] |3527| 
	.dwpsn	file "../Source/prod.c",line 3528,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3528| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3528| 
        ; call occurs [#_scia_puts] ; [] |3528| 
	.dwpsn	file "../Source/prod.c",line 3529,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3529| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3529| 
        ; call occurs [#_scia_puts] ; [] |3529| 
	.dwpsn	file "../Source/prod.c",line 3531,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3531| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3531| 
        ; call occurs [#_scia_puts] ; [] |3531| 
	.dwpsn	file "../Source/prod.c",line 3532,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3532| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3532| 
        ; call occurs [#_scia_puts] ; [] |3532| 
	.dwpsn	file "../Source/prod.c",line 3534,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3534| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3534| 
        ; call occurs [#_scia_puts] ; [] |3534| 
	.dwpsn	file "../Source/prod.c",line 3536,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3536| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3536| 
        ; call occurs [#_scia_puts] ; [] |3536| 
	.dwpsn	file "../Source/prod.c",line 3537,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3537| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3537| 
        ; call occurs [#_scia_puts] ; [] |3537| 
	.dwpsn	file "../Source/prod.c",line 3539,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3539| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3539| 
        ; call occurs [#_scia_puts] ; [] |3539| 
	.dwpsn	file "../Source/prod.c",line 3541,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3541| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3541| 
        ; call occurs [#_scia_puts] ; [] |3541| 
	.dwpsn	file "../Source/prod.c",line 3543,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3543| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3543| 
        ; call occurs [#_scia_puts] ; [] |3543| 
	.dwpsn	file "../Source/prod.c",line 3545,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3545| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3545| 
        ; call occurs [#_scia_puts] ; [] |3545| 
	.dwpsn	file "../Source/prod.c",line 3546,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3546| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3546| 
        ; call occurs [#_scia_puts] ; [] |3546| 
	.dwpsn	file "../Source/prod.c",line 3548,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3548| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3548| 
        ; call occurs [#_scia_puts] ; [] |3548| 
	.dwpsn	file "../Source/prod.c",line 3549,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3549| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3549| 
        ; call occurs [#_scia_puts] ; [] |3549| 
	.dwpsn	file "../Source/prod.c",line 3550,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3550| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3550| 
        ; call occurs [#_scia_puts] ; [] |3550| 
	.dwpsn	file "../Source/prod.c",line 3551,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3551| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3551| 
        ; call occurs [#_scia_puts] ; [] |3551| 
	.dwpsn	file "../Source/prod.c",line 3552,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3552| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3552| 
        ; call occurs [#_scia_puts] ; [] |3552| 
	.dwpsn	file "../Source/prod.c",line 3553,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3553| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3553| 
        ; call occurs [#_scia_puts] ; [] |3553| 
	.dwpsn	file "../Source/prod.c",line 3554,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3554| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3554| 
        ; call occurs [#_scia_puts] ; [] |3554| 
	.dwpsn	file "../Source/prod.c",line 3555,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3555| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3555| 
        ; call occurs [#_scia_puts] ; [] |3555| 
	.dwpsn	file "../Source/prod.c",line 3566,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3566| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3566| 
        ; call occurs [#_scia_puts] ; [] |3566| 
	.dwpsn	file "../Source/prod.c",line 3568,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3568| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3568| 
        ; call occurs [#_scia_puts] ; [] |3568| 
	.dwpsn	file "../Source/prod.c",line 3570,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3570| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3570| 
        ; call occurs [#_scia_puts] ; [] |3570| 
	.dwpsn	file "../Source/prod.c",line 3572,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3572| 
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3572| 
        ; call occurs [#_scia_puts] ; [] |3572| 
	.dwpsn	file "../Source/prod.c",line 3574,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3574| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3574| 
        ; call occurs [#_scia_puts] ; [] |3574| 
	.dwpsn	file "../Source/prod.c",line 3579,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3579| 
$C$L632:    
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3579| 
        ; call occurs [#_scia_puts] ; [] |3579| 
$C$L633:    
        MOV       AL,*-SP[48]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3647,column 4,is_stmt,isa 0
        B         $C$L635,EQ            ; [CPU_] |3647| 
        ; branchcc occurs ; [] |3647| 
$C$L634:    
	.dwpsn	file "../Source/prod.c",line 3648,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3648| 
        SPM       #0                    ; [CPU_] 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3648| 
        ; call occurs [#_scia_puts] ; [] |3648| 
$C$L635:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 660,column 3,is_stmt,isa 0
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_SPICANRoutine")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_SPICANRoutine       ; [CPU_] |660| 
        ; call occurs [#_SPICANRoutine] ; [] |660| 
	.dwpsn	file "../Source/prod.c",line 690,column 3,is_stmt,isa 0
        MOVB      AL,#45                ; [CPU_] |690| 
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_SPICANRead")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_SPICANRead          ; [CPU_] |690| 
        ; call occurs [#_SPICANRead] ; [] |690| 
        MOV       *-SP[40],AL           ; [CPU_] |690| 
	.dwpsn	file "../Source/prod.c",line 693,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |693| 
        TBIT      AL,#4                 ; [CPU_] |693| 
        B         $C$L636,TC            ; [CPU_] |693| 
        ; branchcc occurs ; [] |693| 
	.dwpsn	file "../Source/prod.c",line 695,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |695| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |695| 
        ; call occurs [#_ad7738_resettare] ; [] |695| 
	.dwpsn	file "../Source/prod.c",line 696,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |696| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |696| 
        ; call occurs [#_ad7738_resetpeak] ; [] |696| 
	.dwpsn	file "../Source/prod.c",line 697,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |697| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |697| 
        ; call occurs [#_ad7738_resetvall] ; [] |697| 
$C$L636:    
	.dwpsn	file "../Source/prod.c",line 775,column 3,is_stmt,isa 0
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |775| 
        ; call occurs [#_ad7738_monrdy] ; [] |775| 
        CMPB      AL,#0                 ; [CPU_] |775| 
        B         $C$L662,EQ            ; [CPU_] |775| 
        ; branchcc occurs ; [] |775| 
	.dwpsn	file "../Source/prod.c",line 777,column 4,is_stmt,isa 0
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |777| 
        ; call occurs [#_ad7738_monclr] ; [] |777| 
        MOVL      XAR0,#84              ; [CPU_] |777| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |777| 
	.dwpsn	file "../Source/prod.c",line 780,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |780| 
        CMPB      AL,#3                 ; [CPU_] |780| 
        B         $C$L637,GT            ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        CMPB      AL,#3                 ; [CPU_] |780| 
        B         $C$L643,EQ            ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        CMPB      AL,#0                 ; [CPU_] |780| 
        B         $C$L647,EQ            ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        CMPB      AL,#1                 ; [CPU_] |780| 
        B         $C$L646,EQ            ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        CMPB      AL,#2                 ; [CPU_] |780| 
        B         $C$L645,EQ            ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        B         $C$L659,UNC           ; [CPU_] |780| 
        ; branch occurs ; [] |780| 
$C$L637:    
        CMPB      AL,#4                 ; [CPU_] |780| 
        B         $C$L642,EQ            ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        CMPB      AL,#5                 ; [CPU_] |780| 
        B         $C$L638,EQ            ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
        CMPB      AL,#6                 ; [CPU_] |780| 
        B         $C$L659,NEQ           ; [CPU_] |780| 
        ; branchcc occurs ; [] |780| 
	.dwpsn	file "../Source/prod.c",line 835,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |835| 
        MOVL      XAR0,#46              ; [CPU_] |835| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |835| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |835| 
	.dwpsn	file "../Source/prod.c",line 836,column 5,is_stmt,isa 0
        B         $C$L657,UNC           ; [CPU_] |836| 
        ; branch occurs ; [] |836| 
$C$L638:    
	.dwpsn	file "../Source/prod.c",line 830,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |830| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |830| 
        ; call occurs [#_ad7738_getlimitst] ; [] |830| 
	.dwpsn	file "../Source/prod.c",line 831,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |831| 
        B         $C$L640,NTC           ; [CPU_] |831| 
        ; branchcc occurs ; [] |831| 
        TBIT      AL,#0                 ; [CPU_] |831| 
        B         $C$L639,NTC           ; [CPU_] |831| 
        ; branchcc occurs ; [] |831| 
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |831| 
        B         $C$L641,UNC           ; [CPU_] |831| 
        ; branch occurs ; [] |831| 
$C$L639:    
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |831| 
        B         $C$L641,UNC           ; [CPU_] |831| 
        ; branch occurs ; [] |831| 
$C$L640:    
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |831| 
$C$L641:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |831| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |831| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |831| 
	.dwpsn	file "../Source/prod.c",line 833,column 5,is_stmt,isa 0
        B         $C$L658,UNC           ; [CPU_] |833| 
        ; branch occurs ; [] |833| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 802,column 5,is_stmt,isa 0
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |802| 
        ; call occurs [#_ad7738_getmon] ; [] |802| 
        MOVL      XAR0,#84              ; [CPU_] |802| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |802| 
	.dwpsn	file "../Source/prod.c",line 804,column 5,is_stmt,isa 0
        MOVB      XAR0,#12              ; [CPU_] |804| 
        B         $C$L644,UNC           ; [CPU_] |804| 
        ; branch occurs ; [] |804| 
$C$L643:    
	.dwpsn	file "../Source/prod.c",line 797,column 5,is_stmt,isa 0
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |797| 
        ; call occurs [#_ad7738_getmon] ; [] |797| 
        MOVL      XAR0,#84              ; [CPU_] |797| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |797| 
	.dwpsn	file "../Source/prod.c",line 798,column 5,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |798| 
$C$L644:    
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |798| 
        ADDL      XAR4,ACC              ; [CPU_] |798| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |798| 
	.dwpsn	file "../Source/prod.c",line 799,column 5,is_stmt,isa 0
        B         $C$L649,UNC           ; [CPU_] |799| 
        ; branch occurs ; [] |799| 
$C$L645:    
	.dwpsn	file "../Source/prod.c",line 792,column 5,is_stmt,isa 0
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |792| 
        ; call occurs [#_ad7738_getvall] ; [] |792| 
	.dwpsn	file "../Source/prod.c",line 794,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |794| 
        ; branch occurs ; [] |794| 
$C$L646:    
	.dwpsn	file "../Source/prod.c",line 787,column 5,is_stmt,isa 0
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |787| 
        ; call occurs [#_ad7738_getpeak] ; [] |787| 
	.dwpsn	file "../Source/prod.c",line 789,column 5,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |789| 
        ; branch occurs ; [] |789| 
$C$L647:    
	.dwpsn	file "../Source/prod.c",line 782,column 5,is_stmt,isa 0
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |782| 
        ; call occurs [#_ad7738_getmon] ; [] |782| 
$C$L648:    
        MOVL      XAR0,#84              ; [CPU_] |782| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |782| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 783,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |783| 
        ADDL      XAR4,ACC              ; [CPU_] |783| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |783| 
$C$L649:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |783| 
	.dwpsn	file "../Source/prod.c",line 807,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |807| 
        CMPB      AL,#3                 ; [CPU_] |807| 
        B         $C$L650,GT            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        CMPB      AL,#3                 ; [CPU_] |807| 
        B         $C$L652,EQ            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        CMPB      AL,#0                 ; [CPU_] |807| 
        B         $C$L655,EQ            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        CMPB      AL,#1                 ; [CPU_] |807| 
        B         $C$L654,EQ            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        CMPB      AL,#2                 ; [CPU_] |807| 
        B         $C$L653,EQ            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        B         $C$L659,UNC           ; [CPU_] |807| 
        ; branch occurs ; [] |807| 
$C$L650:    
        CMPB      AL,#4                 ; [CPU_] |807| 
        B         $C$L651,EQ            ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        CMPB      AL,#5                 ; [CPU_] |807| 
        B         $C$L659,NEQ           ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
	.dwpsn	file "../Source/prod.c",line 824,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |824| 
	.dwpsn	file "../Source/prod.c",line 825,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |825| 
        ; branch occurs ; [] |825| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 821,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |821| 
	.dwpsn	file "../Source/prod.c",line 822,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |822| 
        ; branch occurs ; [] |822| 
$C$L652:    
	.dwpsn	file "../Source/prod.c",line 818,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |818| 
	.dwpsn	file "../Source/prod.c",line 819,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |819| 
        ; branch occurs ; [] |819| 
$C$L653:    
	.dwpsn	file "../Source/prod.c",line 815,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |815| 
	.dwpsn	file "../Source/prod.c",line 816,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |816| 
        ; branch occurs ; [] |816| 
$C$L654:    
	.dwpsn	file "../Source/prod.c",line 812,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |812| 
	.dwpsn	file "../Source/prod.c",line 813,column 6,is_stmt,isa 0
        B         $C$L656,UNC           ; [CPU_] |813| 
        ; branch occurs ; [] |813| 
$C$L655:    
	.dwpsn	file "../Source/prod.c",line 809,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |809| 
$C$L656:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |809| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |809| 
$C$L657:    
        MOVL      *-SP[4],ACC           ; [CPU_] |809| 
$C$L658:    
        MOVL      XAR0,#44              ; [CPU_] |809| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |809| 
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_sprintf")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |809| 
        ; call occurs [#_sprintf] ; [] |809| 
$C$L659:    
        MOV       T,*-SP[55]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 840,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |840| 
        MPYB      ACC,T,#20             ; [CPU_] |840| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |840| 
        ADDB      AL,#7                 ; [CPU_] |840| 
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |840| 
        ; call occurs [#_lcd_puts] ; [] |840| 
	.dwpsn	file "../Source/prod.c",line 843,column 4,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |843| 
	.dwpsn	file "../Source/prod.c",line 840,column 4,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |840| 
	.dwpsn	file "../Source/prod.c",line 843,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |843| 
        B         $C$L660,HIS           ; [CPU_] |843| 
        ; branchcc occurs ; [] |843| 
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |843| 
        B         $C$L661,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L660:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 844,column 5,is_stmt,isa 0
        MOV       *-SP[55],#0           ; [CPU_] |844| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
$C$L661:    
        MOVL      XAR0,#84              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L662:    
	.dwpsn	file "../Source/prod.c",line 853,column 3,is_stmt,isa 0
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |853| 
        ; call occurs [#_ad7738_tempstart] ; [] |853| 
        CMPB      AL,#0                 ; [CPU_] |853| 
        B         $C$L663,NEQ           ; [CPU_] |853| 
        ; branchcc occurs ; [] |853| 
	.dwpsn	file "../Source/prod.c",line 858,column 8,is_stmt,isa 0
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |858| 
        ; call occurs [#_ad7738_tempread] ; [] |858| 
        CMPB      AL,#0                 ; [CPU_] |858| 
        B         $C$L664,EQ            ; [CPU_] |858| 
        ; branchcc occurs ; [] |858| 
	.dwpsn	file "../Source/prod.c",line 859,column 4,is_stmt,isa 0
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |859| 
        ; call occurs [#_ds1820read] ; [] |859| 
        MOVL      XAR0,#46              ; [CPU_] |859| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |859| 
	.dwpsn	file "../Source/prod.c",line 860,column 4,is_stmt,isa 0
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |860| 
        ; call occurs [#_ad7738_settemp] ; [] |860| 
        B         $C$L664,UNC           ; [CPU_] |860| 
        ; branch occurs ; [] |860| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 854,column 4,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |854| 
        ; call occurs [#_ds1820start] ; [] |854| 
$C$L664:    
	.dwpsn	file "../Source/prod.c",line 867,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |867| 
        MOVB      XAR0,#36              ; [CPU_] |867| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |867| 
        B         $C$L669,EQ            ; [CPU_] |867| 
        ; branchcc occurs ; [] |867| 
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |867| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |867| 
        CMPB      AL,#0                 ; [CPU_] |867| 
        B         $C$L669,EQ            ; [CPU_] |867| 
        ; branchcc occurs ; [] |867| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 868,column 4,is_stmt,isa 0
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |868| 
        ; call occurs [#_tagdetect] ; [] |868| 
        CMPB      AL,#0                 ; [CPU_] |868| 
        B         $C$L665,NEQ           ; [CPU_] |868| 
        ; branchcc occurs ; [] |868| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 891,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |891| 
        MOV       *+XAR4[0],#0          ; [CPU_] |891| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |891| 
	.dwpsn	file "../Source/prod.c",line 893,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |893| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |893| 
        MOVL      XAR4,ACC              ; [CPU_] |893| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |893| 
        B         $C$L667,EQ            ; [CPU_] |893| 
        ; branchcc occurs ; [] |893| 
	.dwpsn	file "../Source/prod.c",line 894,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 895,column 6,is_stmt,isa 0
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |895| 
        ; call occurs [#_lcd_clear] ; [] |895| 
	.dwpsn	file "../Source/prod.c",line 896,column 6,is_stmt,isa 0
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_update_units")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |896| 
        ; call occurs [#_update_units] ; [] |896| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 897,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |897| 
        B         $C$L667,UNC           ; [CPU_] |897| 
        ; branch occurs ; [] |897| 
$C$L665:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 870,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |870| 
        B         $C$L666,NEQ           ; [CPU_] |870| 
        ; branchcc occurs ; [] |870| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 873,column 6,is_stmt,isa 0
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_matchTag")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |873| 
        ; call occurs [#_matchTag] ; [] |873| 
        MOVL      XAR0,#80              ; [CPU_] |873| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |873| 
        MOVL      XAR0,#9               ; [CPU_] |873| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |873| 
	.dwpsn	file "../Source/prod.c",line 874,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |874| 
        B         $C$L666,EQ            ; [CPU_] |874| 
        ; branchcc occurs ; [] |874| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 877,column 7,is_stmt,isa 0
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |877| 
        ; call occurs [#_maf_rst] ; [] |877| 
	.dwpsn	file "../Source/prod.c",line 878,column 7,is_stmt,isa 0
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |878| 
        ; call occurs [#_ad7738_setcal] ; [] |878| 
        MOVL      XAR0,#78              ; [CPU_] |878| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |878| 
	.dwpsn	file "../Source/prod.c",line 879,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[58]          ; [CPU_] |879| 
        MOVL      XAR1,ACC              ; [CPU_] |879| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |879| 
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |879| 
        ; call occurs [#_ad7738_resetpeak] ; [] |879| 
	.dwpsn	file "../Source/prod.c",line 880,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |880| 
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |880| 
        ; call occurs [#_ad7738_resetvall] ; [] |880| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 883,column 7,is_stmt,isa 0
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |883| 
        ; call occurs [#_lcd_clear] ; [] |883| 
	.dwpsn	file "../Source/prod.c",line 884,column 7,is_stmt,isa 0
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_update_units")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |884| 
        ; call occurs [#_update_units] ; [] |884| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 885,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |885| 
$C$L666:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 888,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |888| 
$C$L667:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 902,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |902| 
        ADDB      AL,#1                 ; [CPU_] |902| 
        MOV       *+FP[AR0],AL          ; [CPU_] |902| 
        CMPB      AL,#4                 ; [CPU_] |902| 
        B         $C$L668,HIS           ; [CPU_] |902| 
        ; branchcc occurs ; [] |902| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |902| 
        ADDB      ACC,#1                ; [CPU_] |902| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |902| 
        B         $C$L669,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L668:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |903| 
        MOV       *+FP[AR0],#0          ; [CPU_] |903| 
$C$L669:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 911,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |911| 
        CMPB      AL,#1                 ; [CPU_] |911| 
        B         $C$L687,NEQ           ; [CPU_] |911| 
        ; branchcc occurs ; [] |911| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        B         $C$L687,EQ            ; [CPU_] |911| 
        ; branchcc occurs ; [] |911| 
	.dwpsn	file "../Source/prod.c",line 914,column 4,is_stmt,isa 0
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |914| 
        ; call occurs [#_prod_getavail] ; [] |914| 
        MOVL      XAR6,ACC              ; [CPU_] |914| 
        MOV       T,*-SP[51]            ; [CPU_] |914| 
        MPY       P,T,*-SP[52]          ; [CPU_] |914| 
        MOVU      ACC,PL                ; [CPU_] |914| 
        CMPL      ACC,XAR6              ; [CPU_] |914| 
        B         $C$L672,LOS           ; [CPU_] |914| 
        ; branchcc occurs ; [] |914| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        B         $C$L672,NEQ           ; [CPU_] |914| 
        ; branchcc occurs ; [] |914| 
	.dwpsn	file "../Source/prod.c",line 984,column 11,is_stmt,isa 0
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |984| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |984| 
        CMPB      AL,#0                 ; [CPU_] |984| 
        B         $C$L670,NEQ           ; [CPU_] |984| 
        ; branchcc occurs ; [] |984| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 992,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |992| 
        B         $C$L687,EQ            ; [CPU_] |992| 
        ; branchcc occurs ; [] |992| 
	.dwpsn	file "../Source/prod.c",line 993,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |993| 
	.dwpsn	file "../Source/prod.c",line 996,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |996| 
	.dwpsn	file "../Source/prod.c",line 998,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |998| 
        MOVB      XAR0,#36              ; [CPU_] |998| 
	.dwpsn	file "../Source/prod.c",line 996,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |996| 
	.dwpsn	file "../Source/prod.c",line 997,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |997| 
	.dwpsn	file "../Source/prod.c",line 998,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |998| 
        MOVL      XAR0,#80              ; [CPU_] |998| 
        MOV       *+XAR4[2],AL          ; [CPU_] |998| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |998| 
	.dwpsn	file "../Source/prod.c",line 1002,column 5,is_stmt,isa 0
        MOVB      AL,#7                 ; [CPU_] |1002| 
        MOVL      XAR5,XAR4             ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1000,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |1000| 
	.dwpsn	file "../Source/prod.c",line 1002,column 5,is_stmt,isa 0
        B         $C$L686,UNC           ; [CPU_] |1002| 
        ; branch occurs ; [] |1002| 
$C$L670:    
	.dwpsn	file "../Source/prod.c",line 986,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |986| 
        MOV       *+XAR4[0],#0          ; [CPU_] |986| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 988,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |988| 
	.dwpsn	file "../Source/prod.c",line 987,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |987| 
	.dwpsn	file "../Source/prod.c",line 988,column 10,is_stmt,isa 0
        MOV       *-SP[47],AL           ; [CPU_] |988| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L671:    
	.dwpsn	file "../Source/prod.c",line 989,column 6,is_stmt,isa 0
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |989| 
        ; call occurs [#_ad7738_getlimitst] ; [] |989| 
        MOV       *XAR1++,AL            ; [CPU_] |989| 
	.dwpsn	file "../Source/prod.c",line 988,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |988| 
	.dwpsn	file "../Source/prod.c",line 989,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |989| 
	.dwpsn	file "../Source/prod.c",line 988,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |988| 
        B         $C$L671,LT            ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 991,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |991| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 992,column 4,is_stmt,isa 0
        B         $C$L686,UNC           ; [CPU_] |992| 
        ; branch occurs ; [] |992| 
$C$L672:    
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 921,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |921| 
        MOVL      XAR0,#88              ; [CPU_] |921| 
	.dwpsn	file "../Source/prod.c",line 919,column 5,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |919| 
	.dwpsn	file "../Source/prod.c",line 921,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |921| 
        MOV       *+XAR4[0],#0          ; [CPU_] |921| 
	.dwpsn	file "../Source/prod.c",line 927,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |927| 
	.dwpsn	file "../Source/prod.c",line 922,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |922| 
        MOV       AL,*-SP[52]           ; [CPU_] |922| 
	.dwpsn	file "../Source/prod.c",line 923,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |923| 
        MOV       AL,*-SP[59]           ; [CPU_] |923| 
	.dwpsn	file "../Source/prod.c",line 924,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |924| 
        MOV       *+XAR4[3],AL          ; [CPU_] |924| 
        MOV       AL,*-SP[59]           ; [CPU_] |924| 
	.dwpsn	file "../Source/prod.c",line 925,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |925| 
        MOV       *+XAR4[4],AL          ; [CPU_] |925| 
        MOV       AL,*-SP[50]           ; [CPU_] |925| 
	.dwpsn	file "../Source/prod.c",line 926,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |926| 
        MOV       AH,*-SP[49]           ; [CPU_] |926| 
	.dwpsn	file "../Source/prod.c",line 927,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |927| 
        MOV       *+XAR4[6],AL          ; [CPU_] |927| 
        MOV       AL,AH                 ; [CPU_] |927| 
        ADDB      AL,#1                 ; [CPU_] |927| 
	.dwpsn	file "../Source/prod.c",line 918,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |918| 
	.dwpsn	file "../Source/prod.c",line 927,column 5,is_stmt,isa 0
        MOV       *-SP[49],AL           ; [CPU_] |927| 
	.dwpsn	file "../Source/prod.c",line 929,column 5,is_stmt,isa 0
        B         $C$L683,UNC           ; [CPU_] |929| 
        ; branch occurs ; [] |929| 
$C$L673:    
	.dwpsn	file "../Source/prod.c",line 930,column 6,is_stmt,isa 0
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |930| 
        ; call occurs [#_prod_getnext] ; [] |930| 
	.dwpsn	file "../Source/prod.c",line 932,column 7,is_stmt,isa 0
        DEC       *-SP[59]              ; [CPU_] |932| 
        B         $C$L683,NEQ           ; [CPU_] |932| 
        ; branchcc occurs ; [] |932| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 934,column 6,is_stmt,isa 0
        MOV       *-SP[59],AL           ; [CPU_] |934| 
	.dwpsn	file "../Source/prod.c",line 938,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |938| 
        MOVB      XAR6,#3               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 937,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |937| 
        MOV       *-SP[58],AL           ; [CPU_] |937| 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 939,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |939| 
        B         $C$L676,EQ            ; [CPU_] |939| 
        ; branchcc occurs ; [] |939| 
	.dwpsn	file "../Source/prod.c",line 940,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |940| 
        MOVL      XAR0,#88              ; [CPU_] |940| 
        ADDL      ACC,XAR4              ; [CPU_] |940| 
        MOVL      XAR3,ACC              ; [CPU_] |940| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |940| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 943,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |943| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 941,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |941| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 942,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |942| 
        ANDB      AL,#0xff              ; [CPU_] |942| 
        MOV       *XAR5++,AL            ; [CPU_] |942| 
	.dwpsn	file "../Source/prod.c",line 943,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |943| 
        LSR       AL,8                  ; [CPU_] |943| 
        MOV       *XAR5++,AL            ; [CPU_] |943| 
	.dwpsn	file "../Source/prod.c",line 941,column 21,is_stmt,isa 0
        BANZ      $C$L675,AR0--         ; [CPU_] |941| 
        ; branchcc occurs ; [] |941| 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 938,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |938| 
        ADDB      XAR7,#1               ; [CPU_] |938| 
	.dwpsn	file "../Source/prod.c",line 947,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |947| 
        MOV       *-SP[58],AL           ; [CPU_] |947| 
	.dwpsn	file "../Source/prod.c",line 938,column 18,is_stmt,isa 0
        BANZ      $C$L674,AR6--         ; [CPU_] |938| 
        ; branchcc occurs ; [] |938| 
	.dwpsn	file "../Source/prod.c",line 950,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |950| 
        MOVB      XAR6,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
$C$L677:    
	.dwpsn	file "../Source/prod.c",line 951,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |951| 
        B         $C$L679,EQ            ; [CPU_] |951| 
        ; branchcc occurs ; [] |951| 
	.dwpsn	file "../Source/prod.c",line 952,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |952| 
        MOVL      XAR0,#88              ; [CPU_] |952| 
        ADDL      ACC,XAR4              ; [CPU_] |952| 
        ADDB      ACC,#8                ; [CPU_] |952| 
        MOVL      XAR3,ACC              ; [CPU_] |952| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |952| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 955,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |955| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 953,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |953| 
$C$L678:    
	.dwpsn	file "../Source/prod.c",line 954,column 9,is_stmt,isa 0
        MOV       AL,*+XAR3[0]          ; [CPU_] |954| 
        ANDB      AL,#0xff              ; [CPU_] |954| 
        MOV       *XAR5++,AL            ; [CPU_] |954| 
	.dwpsn	file "../Source/prod.c",line 955,column 9,is_stmt,isa 0
        MOV       AL,*XAR3++            ; [CPU_] |955| 
        LSR       AL,8                  ; [CPU_] |955| 
        MOV       *XAR5++,AL            ; [CPU_] |955| 
	.dwpsn	file "../Source/prod.c",line 953,column 21,is_stmt,isa 0
        BANZ      $C$L678,AR0--         ; [CPU_] |953| 
        ; branchcc occurs ; [] |953| 
$C$L679:    
	.dwpsn	file "../Source/prod.c",line 950,column 18,is_stmt,isa 0
        MOV       AL,*-SP[58]           ; [CPU_] |950| 
        ADDB      XAR7,#1               ; [CPU_] |950| 
	.dwpsn	file "../Source/prod.c",line 959,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |959| 
        MOV       *-SP[58],AL           ; [CPU_] |959| 
	.dwpsn	file "../Source/prod.c",line 950,column 18,is_stmt,isa 0
        BANZ      $C$L677,AR6--         ; [CPU_] |950| 
        ; branchcc occurs ; [] |950| 
	.dwpsn	file "../Source/prod.c",line 935,column 6,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |935| 
	.dwpsn	file "../Source/prod.c",line 962,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |962| 
        SETC      SXM                   ; [CPU_] 
$C$L680:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 963,column 7,is_stmt,isa 0
        AND       AL,*-SP[50]           ; [CPU_] |963| 
        B         $C$L682,EQ            ; [CPU_] |963| 
        ; branchcc occurs ; [] |963| 
	.dwpsn	file "../Source/prod.c",line 964,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |964| 
        MOVL      XAR0,#88              ; [CPU_] |964| 
        ADDL      ACC,XAR4              ; [CPU_] |964| 
        ADDB      ACC,#12               ; [CPU_] |964| 
        MOVL      XAR6,ACC              ; [CPU_] |964| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |964| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 967,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |967| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 965,column 21,is_stmt,isa 0
        MOV       *-SP[57],#2           ; [CPU_] |965| 
$C$L681:    
	.dwpsn	file "../Source/prod.c",line 966,column 9,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |966| 
        ANDB      AL,#0xff              ; [CPU_] |966| 
        MOV       *XAR5++,AL            ; [CPU_] |966| 
	.dwpsn	file "../Source/prod.c",line 967,column 9,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |967| 
        LSR       AL,8                  ; [CPU_] |967| 
        MOV       *XAR5++,AL            ; [CPU_] |967| 
	.dwpsn	file "../Source/prod.c",line 965,column 21,is_stmt,isa 0
        BANZ      $C$L681,AR0--         ; [CPU_] |965| 
        ; branchcc occurs ; [] |965| 
$C$L682:    
        MOV       AL,*-SP[58]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 962,column 18,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |962| 
	.dwpsn	file "../Source/prod.c",line 971,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |971| 
        MOV       *-SP[58],AL           ; [CPU_] |971| 
	.dwpsn	file "../Source/prod.c",line 962,column 18,is_stmt,isa 0
        MOV       AL,AR7                ; [CPU_] |962| 
        CMPB      AL,#2                 ; [CPU_] |962| 
        B         $C$L680,LT            ; [CPU_] |962| 
        ; branchcc occurs ; [] |962| 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 929,column 12,is_stmt,isa 0
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |929| 
        ; call occurs [#_prod_getavail] ; [] |929| 
        TEST      ACC                   ; [CPU_] |929| 
        B         $C$L684,EQ            ; [CPU_] |929| 
        ; branchcc occurs ; [] |929| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CMP       AL,*-SP[47]           ; [CPU_] |929| 
        B         $C$L673,HI            ; [CPU_] |929| 
        ; branchcc occurs ; [] |929| 
$C$L684:    
	.dwpsn	file "../Source/prod.c",line 975,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |975| 
        MOV       AL,*-SP[47]           ; [CPU_] |975| 
        MOV       *+XAR4[2],AL          ; [CPU_] |975| 
        MOV       AL,*-SP[53]           ; [CPU_] |975| 
	.dwpsn	file "../Source/prod.c",line 977,column 5,is_stmt,isa 0
        B         $C$L685,EQ            ; [CPU_] |977| 
        ; branchcc occurs ; [] |977| 
	.dwpsn	file "../Source/prod.c",line 978,column 6,is_stmt,isa 0
        MOV       *-SP[54],#0           ; [CPU_] |978| 
$C$L685:    
	.dwpsn	file "../Source/prod.c",line 981,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |981| 
$C$L686:    
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |981| 
        ; call occurs [#_scia_send_bin] ; [] |981| 
$C$L687:    
	.dwpsn	file "../Source/prod.c",line 1016,column 4,is_stmt,isa 0
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |1016| 
        ; call occurs [#_scia_rx_getcmds] ; [] |1016| 
        CMPB      AL,#0                 ; [CPU_] |1016| 
        B         $C$L635,EQ            ; [CPU_] |1016| 
        ; branchcc occurs ; [] |1016| 
        MOVL      XAR0,#86              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1022,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1022| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |1022| 
        ; call occurs [#_scia_rx_getcmd] ; [] |1022| 
        MOV       *-SP[59],AL           ; [CPU_] |1022| 
        CMPB      AL,#0                 ; [CPU_] |1022| 
        B         $C$L635,EQ            ; [CPU_] |1022| 
        ; branchcc occurs ; [] |1022| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1039,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |1039| 
        B         $C$L323,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
	.dwpsn	file "../Source/prod.c",line 3652,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3652| 
        B         $C$L635,NEQ           ; [CPU_] |3652| 
        ; branchcc occurs ; [] |3652| 
        MOV       AL,*-SP[59]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3652| 
        B         $C$L635,LO            ; [CPU_] |3652| 
        ; branchcc occurs ; [] |3652| 
        MOVL      XAR0,#86              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3686,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3686| 
	.dwpsn	file "../Source/prod.c",line 3679,column 4,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |3679| 
	.dwpsn	file "../Source/prod.c",line 3675,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3675| 
	.dwpsn	file "../Source/prod.c",line 3679,column 4,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3679| 
	.dwpsn	file "../Source/prod.c",line 3678,column 4,is_stmt,isa 0
        MOV       *-SP[61],#2           ; [CPU_] |3678| 
	.dwpsn	file "../Source/prod.c",line 3686,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3686| 
	.dwpsn	file "../Source/prod.c",line 3679,column 4,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |3679| 
	.dwpsn	file "../Source/prod.c",line 3686,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3686| 
        CMPB      AL,#146               ; [CPU_] |3686| 
        B         $C$L695,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#146               ; [CPU_] |3686| 
        B         $C$L232,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#54                ; [CPU_] |3686| 
        B         $C$L691,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#54                ; [CPU_] |3686| 
        B         $C$L726,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#36                ; [CPU_] |3686| 
        B         $C$L689,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#36                ; [CPU_] |3686| 
        B         $C$L288,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#33                ; [CPU_] |3686| 
        B         $C$L688,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#33                ; [CPU_] |3686| 
        B         $C$L303,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#16                ; [CPU_] |3686| 
        B         $C$L741,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        MOV       AH,AL                 ; [CPU_] |3686| 
        ADDB      AH,#-17               ; [CPU_] |3686| 
        CMPB      AH,#1                 ; [CPU_] |3686| 
        B         $C$L740,LOS           ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#32                ; [CPU_] |3686| 
        B         $C$L736,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L688:    
        CMPB      AL,#34                ; [CPU_] |3686| 
        B         $C$L299,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#35                ; [CPU_] |3686| 
        B         $C$L296,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L689:    
        CMPB      AL,#51                ; [CPU_] |3686| 
        B         $C$L690,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#51                ; [CPU_] |3686| 
        B         $C$L731,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#48                ; [CPU_] |3686| 
        B         $C$L282,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#49                ; [CPU_] |3686| 
        B         $C$L257,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#50                ; [CPU_] |3686| 
        B         $C$L733,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L690:    
        CMPB      AL,#52                ; [CPU_] |3686| 
        B         $C$L729,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#53                ; [CPU_] |3686| 
        B         $C$L728,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L691:    
        CMPB      AL,#71                ; [CPU_] |3686| 
        B         $C$L693,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#71                ; [CPU_] |3686| 
        B         $C$L253,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#68                ; [CPU_] |3686| 
        B         $C$L692,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#65                ; [CPU_] |3686| 
        B         $C$L711,GEQ           ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#55                ; [CPU_] |3686| 
        B         $C$L719,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#56                ; [CPU_] |3686| 
        B         $C$L715,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#57                ; [CPU_] |3686| 
        B         $C$L713,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L692:    
        CMPB      AL,#69                ; [CPU_] |3686| 
        B         $C$L710,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#70                ; [CPU_] |3686| 
        B         $C$L703,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L693:    
        CMPB      AL,#132               ; [CPU_] |3686| 
        B         $C$L694,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#132               ; [CPU_] |3686| 
        B         $C$L311,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#72                ; [CPU_] |3686| 
        B         $C$L246,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#130               ; [CPU_] |3686| 
        B         $C$L241,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#131               ; [CPU_] |3686| 
        B         $C$L312,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L694:    
        CMPB      AL,#144               ; [CPU_] |3686| 
        B         $C$L237,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#145               ; [CPU_] |3686| 
        B         $C$L236,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L695:    
        CMPB      AL,#169               ; [CPU_] |3686| 
        B         $C$L699,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#169               ; [CPU_] |3686| 
        B         $C$L168,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#161               ; [CPU_] |3686| 
        B         $C$L697,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#161               ; [CPU_] |3686| 
        B         $C$L194,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#150               ; [CPU_] |3686| 
        B         $C$L696,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#150               ; [CPU_] |3686| 
        B         $C$L225,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#147               ; [CPU_] |3686| 
        B         $C$L231,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#148               ; [CPU_] |3686| 
        B         $C$L230,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#149               ; [CPU_] |3686| 
        B         $C$L229,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L696:    
        CMPB      AL,#153               ; [CPU_] |3686| 
        B         $C$L215,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#160               ; [CPU_] |3686| 
        B         $C$L210,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L697:    
        CMPB      AL,#166               ; [CPU_] |3686| 
        B         $C$L698,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#166               ; [CPU_] |3686| 
        B         $C$L182,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#162               ; [CPU_] |3686| 
        B         $C$L189,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#163               ; [CPU_] |3686| 
        B         $C$L185,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#165               ; [CPU_] |3686| 
        B         $C$L184,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L698:    
        CMPB      AL,#167               ; [CPU_] |3686| 
        B         $C$L179,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#168               ; [CPU_] |3686| 
        B         $C$L177,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L699:    
        CMPB      AL,#195               ; [CPU_] |3686| 
        B         $C$L701,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#195               ; [CPU_] |3686| 
        B         $C$L143,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#192               ; [CPU_] |3686| 
        B         $C$L700,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#192               ; [CPU_] |3686| 
        B         $C$L160,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#170               ; [CPU_] |3686| 
        B         $C$L164,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#186               ; [CPU_] |3686| 
        B         $C$L309,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#187               ; [CPU_] |3686| 
        B         $C$L308,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L700:    
        CMPB      AL,#193               ; [CPU_] |3686| 
        B         $C$L153,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#194               ; [CPU_] |3686| 
        B         $C$L150,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L701:    
        CMPB      AL,#210               ; [CPU_] |3686| 
        B         $C$L702,GT            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#210               ; [CPU_] |3686| 
        B         $C$L79,EQ             ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#196               ; [CPU_] |3686| 
        B         $C$L115,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#197               ; [CPU_] |3686| 
        B         $C$L91,EQ             ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#198               ; [CPU_] |3686| 
        B         $C$L80,EQ             ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L702:    
        CMPB      AL,#211               ; [CPU_] |3686| 
        B         $C$L307,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        CMPB      AL,#240               ; [CPU_] |3686| 
        B         $C$L306,EQ            ; [CPU_] |3686| 
        ; branchcc occurs ; [] |3686| 
        B         $C$L318,UNC           ; [CPU_] |3686| 
        ; branch occurs ; [] |3686| 
$C$L703:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4350,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4350| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4350| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L704:    
	.dwpsn	file "../Source/prod.c",line 4352,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4352| 
        ANDB      AL,#0xff              ; [CPU_] |4352| 
        MOV       *XAR1++,AL            ; [CPU_] |4352| 
	.dwpsn	file "../Source/prod.c",line 4353,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4353| 
        LSR       AL,8                  ; [CPU_] |4353| 
        MOV       *XAR1++,AL            ; [CPU_] |4353| 
	.dwpsn	file "../Source/prod.c",line 4351,column 17,is_stmt,isa 0
        BANZ      $C$L704,AR6--         ; [CPU_] |4351| 
        ; branchcc occurs ; [] |4351| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4353,column 6,is_stmt,isa 0
        ADD       *-SP[61],#8           ; [CPU_] |4353| 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        ADDB      ACC,#46               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L705:    
	.dwpsn	file "../Source/prod.c",line 4359,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4359| 
        MOV       AH,#0                 ; [CPU_] |4359| 
        MOVL      XAR0,#88              ; [CPU_] |4359| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4359| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4359| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4359| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4359| 
        ; call occurs [#FS$$CMP] ; [] |4359| 
        CMPB      AL,#0                 ; [CPU_] |4359| 
        B         $C$L706,NEQ           ; [CPU_] |4359| 
        ; branchcc occurs ; [] |4359| 
	.dwpsn	file "../Source/prod.c",line 4358,column 6,is_stmt,isa 0
        MOV       *-SP[59],#128         ; [CPU_] |4358| 
        B         $C$L707,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L706:    
	.dwpsn	file "../Source/prod.c",line 4360,column 7,is_stmt,isa 0
        MOV       *-SP[59],#129         ; [CPU_] |4360| 
$C$L707:    
	.dwpsn	file "../Source/prod.c",line 4362,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4362| 
        MOV       AH,#0                 ; [CPU_] |4362| 
        MOVL      XAR0,#88              ; [CPU_] |4362| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4362| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4362| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4362| 
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4362| 
        ; call occurs [#FS$$CMP] ; [] |4362| 
        CMPB      AL,#0                 ; [CPU_] |4362| 
        B         $C$L708,EQ            ; [CPU_] |4362| 
        ; branchcc occurs ; [] |4362| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4363,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4363| 
        MOV       *-SP[59],AL           ; [CPU_] |4363| 
$C$L708:    
	.dwpsn	file "../Source/prod.c",line 4365,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4365| 
        MOVL      XAR0,#88              ; [CPU_] |4365| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4365| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4365| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4365| 
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4365| 
        ; call occurs [#FS$$CMP] ; [] |4365| 
        CMPB      AL,#0                 ; [CPU_] |4365| 
        B         $C$L709,EQ            ; [CPU_] |4365| 
        ; branchcc occurs ; [] |4365| 
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4366,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4366| 
        MOV       *-SP[59],AL           ; [CPU_] |4366| 
$C$L709:    
        MOV       AL,*-SP[59]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4368,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4368| 
        MOV       *XAR1++,AL            ; [CPU_] |4368| 
	.dwpsn	file "../Source/prod.c",line 4357,column 17,is_stmt,isa 0
        MOVZ      AR6,*-SP[47]          ; [CPU_] |4357| 
	.dwpsn	file "../Source/prod.c",line 4368,column 6,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4368| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4368| 
	.dwpsn	file "../Source/prod.c",line 4357,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4357| 
        SUBB      XAR6,#1               ; [CPU_U] |4357| 
        ADDB      ACC,#10               ; [CPU_] |4357| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4357| 
        MOVZ      AR0,AR6               ; [CPU_] |4357| 
        MOV       *-SP[47],AR6          ; [CPU_] |4357| 
        CMP       AR0,#-1               ; [CPU_] |4357| 
        B         $C$L705,NEQ           ; [CPU_] |4357| 
        ; branchcc occurs ; [] |4357| 
        B         $C$L743,UNC           ; [CPU_] |4357| 
        ; branch occurs ; [] |4357| 
$C$L710:    
	.dwpsn	file "../Source/prod.c",line 4343,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4343| 
        MOV       AH,#16672             ; [CPU_] |4343| 
        MOVL      XAR0,#46              ; [CPU_] |4343| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4343| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4343| 
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4343| 
        ; call occurs [#FS$$MPY] ; [] |4343| 
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4343| 
        ; call occurs [#FS$$TOU] ; [] |4343| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4343| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4343| 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4344| 
	.dwpsn	file "../Source/prod.c",line 4343,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4343| 
	.dwpsn	file "../Source/prod.c",line 4344,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4344| 
        MOV       *-SP[61],#4           ; [CPU_] |4344| 
	.dwpsn	file "../Source/prod.c",line 4346,column 5,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4346| 
        ; branch occurs ; [] |4346| 
$C$L711:    
	.dwpsn	file "../Source/prod.c",line 4325,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4325| 
        MOV       AH,#16672             ; [CPU_] |4325| 
        MOVL      XAR0,#46              ; [CPU_] |4325| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4325| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4325| 
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4325| 
        ; call occurs [#FS$$MPY] ; [] |4325| 
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4325| 
        ; call occurs [#FS$$TOU] ; [] |4325| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4325| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4325| 
	.dwpsn	file "../Source/prod.c",line 4326,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4326| 
	.dwpsn	file "../Source/prod.c",line 4325,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4325| 
	.dwpsn	file "../Source/prod.c",line 4326,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4326| 
	.dwpsn	file "../Source/prod.c",line 4328,column 5,is_stmt,isa 0
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4328| 
        ; call occurs [#_ad7738_getmon] ; [] |4328| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4329| 
        MOV       AH,#18371             ; [CPU_] |4329| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4329| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4329| 
        ADDL      ACC,XAR4              ; [CPU_] |4329| 
        SUBB      ACC,#130              ; [CPU_] |4329| 
        MOVL      XAR4,ACC              ; [CPU_] |4329| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4329| 
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4329| 
        ; call occurs [#FS$$MPY] ; [] |4329| 
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4329| 
        ; call occurs [#FS$$TOL] ; [] |4329| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4330| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4329| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4329| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4330| 
	.dwpsn	file "../Source/prod.c",line 4329,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4329| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4330| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4333,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4333| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L712:    
	.dwpsn	file "../Source/prod.c",line 4332,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4332| 
        ANDB      AL,#0xff              ; [CPU_] |4332| 
        MOV       *XAR4++,AL            ; [CPU_] |4332| 
	.dwpsn	file "../Source/prod.c",line 4333,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4333| 
        LSR       AL,8                  ; [CPU_] |4333| 
        MOV       *XAR4++,AL            ; [CPU_] |4333| 
	.dwpsn	file "../Source/prod.c",line 4331,column 17,is_stmt,isa 0
        BANZ      $C$L712,AR6--         ; [CPU_] |4331| 
        ; branchcc occurs ; [] |4331| 
        B         $C$L743,UNC           ; [CPU_] |4331| 
        ; branch occurs ; [] |4331| 
$C$L713:    
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4312,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4312| 
        MOV       *-SP[61],AL           ; [CPU_] |4312| 
	.dwpsn	file "../Source/prod.c",line 4311,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4311| 
        MOV       *-SP[47],AL           ; [CPU_] |4311| 
$C$L714:    
	.dwpsn	file "../Source/prod.c",line 4312,column 6,is_stmt,isa 0
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4312| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4312| 
        MOV       *XAR1++,AL            ; [CPU_] |4312| 
	.dwpsn	file "../Source/prod.c",line 4311,column 17,is_stmt,isa 0
        INC       *-SP[47]              ; [CPU_] |4311| 
	.dwpsn	file "../Source/prod.c",line 4312,column 6,is_stmt,isa 0
        MOV       AL,*-SP[47]           ; [CPU_] |4312| 
	.dwpsn	file "../Source/prod.c",line 4311,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4311| 
        B         $C$L714,LT            ; [CPU_] |4311| 
        ; branchcc occurs ; [] |4311| 
        B         $C$L743,UNC           ; [CPU_] |4311| 
        ; branch occurs ; [] |4311| 
$C$L715:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#797 << 2         ; [CPU_] 
        MOVL      XAR6,ACC              ; [CPU_] 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 4289,column 6,is_stmt,isa 0
        MOVL      XAR0,#3182            ; [CPU_] |4289| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4289| 
        MOV       *XAR4++,AL            ; [CPU_] |4289| 
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOVL      XAR0,#3183            ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4293,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4293| 
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4291,column 6,is_stmt,isa 0
        MOVL      XAR0,#3184            ; [CPU_] |4291| 
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4291,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4291| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4291| 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 4295,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4295| 
        ANDB      AL,#0xff              ; [CPU_] |4295| 
        MOV       *XAR4++,AL            ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4296,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4296| 
        LSR       AL,8                  ; [CPU_] |4296| 
        MOV       *XAR4++,AL            ; [CPU_] |4296| 
	.dwpsn	file "../Source/prod.c",line 4294,column 18,is_stmt,isa 0
        BANZ      $C$L717,AR0--         ; [CPU_] |4294| 
        ; branchcc occurs ; [] |4294| 
	.dwpsn	file "../Source/prod.c",line 4299,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR6             ; [CPU_] |4299| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L718:    
	.dwpsn	file "../Source/prod.c",line 4301,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4301| 
        ANDB      AL,#0xff              ; [CPU_] |4301| 
        MOV       *XAR4++,AL            ; [CPU_] |4301| 
	.dwpsn	file "../Source/prod.c",line 4302,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4302| 
        LSR       AL,8                  ; [CPU_] |4302| 
        MOV       *XAR4++,AL            ; [CPU_] |4302| 
	.dwpsn	file "../Source/prod.c",line 4300,column 18,is_stmt,isa 0
        BANZ      $C$L718,AR0--         ; [CPU_] |4300| 
        ; branchcc occurs ; [] |4300| 
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOVZ      AR0,AR3               ; [CPU_] |4290| 
        ADD       *-SP[61],#11          ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4288,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4288| 
        ADDB      XAR7,#8               ; [CPU_] |4288| 
        ADDB      XAR6,#8               ; [CPU_] |4288| 
        SUBB      XAR0,#1               ; [CPU_U] |4288| 
        MOVZ      AR3,AR0               ; [CPU_] |4288| 
        CMP       AR0,#-1               ; [CPU_] |4288| 
        B         $C$L716,NEQ           ; [CPU_] |4288| 
        ; branchcc occurs ; [] |4288| 
        B         $C$L743,UNC           ; [CPU_] |4288| 
        ; branch occurs ; [] |4288| 
$C$L719:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOV       *-SP[47],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1571 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#393 << 3         ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1569 << 1        ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#49 << 6          ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#785 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 4235,column 6,is_stmt,isa 0
        MOVL      XAR0,#3134            ; [CPU_] |4235| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4235| 
	.dwpsn	file "../Source/prod.c",line 4240,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR1             ; [CPU_] |4240| 
	.dwpsn	file "../Source/prod.c",line 4235,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4235| 
	.dwpsn	file "../Source/prod.c",line 4236,column 6,is_stmt,isa 0
        MOVL      XAR0,#3135            ; [CPU_] |4236| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4236| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4236| 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 4247,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4247| 
        ANDB      AL,#0xff              ; [CPU_] |4247| 
        MOV       *XAR4++,AL            ; [CPU_] |4247| 
	.dwpsn	file "../Source/prod.c",line 4248,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4248| 
        LSR       AL,8                  ; [CPU_] |4248| 
        MOV       *XAR4++,AL            ; [CPU_] |4248| 
	.dwpsn	file "../Source/prod.c",line 4246,column 18,is_stmt,isa 0
        BANZ      $C$L721,AR0--         ; [CPU_] |4246| 
        ; branchcc occurs ; [] |4246| 
	.dwpsn	file "../Source/prod.c",line 4253,column 6,is_stmt,isa 0
        MOVL      XAR6,XAR7             ; [CPU_] |4253| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 4260,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4260| 
        ANDB      AL,#0xff              ; [CPU_] |4260| 
        MOV       *XAR4++,AL            ; [CPU_] |4260| 
	.dwpsn	file "../Source/prod.c",line 4261,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4261| 
        LSR       AL,8                  ; [CPU_] |4261| 
        MOV       *XAR4++,AL            ; [CPU_] |4261| 
	.dwpsn	file "../Source/prod.c",line 4259,column 18,is_stmt,isa 0
        BANZ      $C$L722,AR0--         ; [CPU_] |4259| 
        ; branchcc occurs ; [] |4259| 
        MOVL      XAR0,#88              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 4266,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4266| 
        ANDB      AL,#0xff              ; [CPU_] |4266| 
        MOV       *XAR4++,AL            ; [CPU_] |4266| 
	.dwpsn	file "../Source/prod.c",line 4267,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4267| 
        LSR       AL,8                  ; [CPU_] |4267| 
        MOV       *XAR4++,AL            ; [CPU_] |4267| 
	.dwpsn	file "../Source/prod.c",line 4265,column 18,is_stmt,isa 0
        BANZ      $C$L723,AR0--         ; [CPU_] |4265| 
        ; branchcc occurs ; [] |4265| 
        MOVL      XAR6,XT               ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L724:    
	.dwpsn	file "../Source/prod.c",line 4272,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4272| 
        ANDB      AL,#0xff              ; [CPU_] |4272| 
        MOV       *XAR4++,AL            ; [CPU_] |4272| 
	.dwpsn	file "../Source/prod.c",line 4273,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4273| 
        LSR       AL,8                  ; [CPU_] |4273| 
        MOV       *XAR4++,AL            ; [CPU_] |4273| 
	.dwpsn	file "../Source/prod.c",line 4271,column 18,is_stmt,isa 0
        BANZ      $C$L724,AR0--         ; [CPU_] |4271| 
        ; branchcc occurs ; [] |4271| 
        MOVL      XAR6,P                ; [CPU_] 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L725:    
	.dwpsn	file "../Source/prod.c",line 4278,column 7,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4278| 
        ANDB      AL,#0xff              ; [CPU_] |4278| 
        MOV       *XAR4++,AL            ; [CPU_] |4278| 
	.dwpsn	file "../Source/prod.c",line 4279,column 7,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4279| 
        LSR       AL,8                  ; [CPU_] |4279| 
        MOV       *XAR4++,AL            ; [CPU_] |4279| 
	.dwpsn	file "../Source/prod.c",line 4277,column 18,is_stmt,isa 0
        BANZ      $C$L725,AR0--         ; [CPU_] |4277| 
        ; branchcc occurs ; [] |4277| 
	.dwpsn	file "../Source/prod.c",line 4234,column 17,is_stmt,isa 0
        MOVL      XAR0,#88              ; [CPU_] |4234| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4234| 
        MOVL      XAR0,#88              ; [CPU_] |4234| 
        ADDB      ACC,#12               ; [CPU_] |4234| 
        ADDB      XAR1,#12              ; [CPU_] |4234| 
        ADDB      XAR7,#12              ; [CPU_] |4234| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4234| 
	.dwpsn	file "../Source/prod.c",line 4236,column 6,is_stmt,isa 0
        MOVZ      AR0,*-SP[47]          ; [CPU_] |4236| 
	.dwpsn	file "../Source/prod.c",line 4234,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4234| 
	.dwpsn	file "../Source/prod.c",line 4236,column 6,is_stmt,isa 0
        ADD       *-SP[61],#22          ; [CPU_] |4236| 
	.dwpsn	file "../Source/prod.c",line 4234,column 17,is_stmt,isa 0
        MOVL      ACC,XT                ; [CPU_] |4234| 
        SUBB      XAR0,#1               ; [CPU_U] |4234| 
        ADDB      ACC,#12               ; [CPU_] |4234| 
        MOVL      XT,ACC                ; [CPU_] |4234| 
        MOV       *-SP[47],AR0          ; [CPU_] |4234| 
        MOVL      ACC,P                 ; [CPU_] |4234| 
        ADDB      ACC,#12               ; [CPU_] |4234| 
        MOVL      P,ACC                 ; [CPU_] |4234| 
        CMP       AR0,#-1               ; [CPU_] |4234| 
        B         $C$L720,NEQ           ; [CPU_] |4234| 
        ; branchcc occurs ; [] |4234| 
        B         $C$L743,UNC           ; [CPU_] |4234| 
        ; branch occurs ; [] |4234| 
$C$L726:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1561 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4227,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4227| 
        MOV       *-SP[61],AL           ; [CPU_] |4227| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4225,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4225| 
        MOV       *XAR4++,AL            ; [CPU_] |4225| 
	.dwpsn	file "../Source/prod.c",line 4226,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4226| 
        MOV       *XAR4++,AL            ; [CPU_] |4226| 
	.dwpsn	file "../Source/prod.c",line 4227,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4227| 
	.dwpsn	file "../Source/prod.c",line 4224,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4224| 
	.dwpsn	file "../Source/prod.c",line 4227,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4227| 
	.dwpsn	file "../Source/prod.c",line 4224,column 17,is_stmt,isa 0
        BANZ      $C$L727,AR6--         ; [CPU_] |4224| 
        ; branchcc occurs ; [] |4224| 
        B         $C$L743,UNC           ; [CPU_] |4224| 
        ; branch occurs ; [] |4224| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4215,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4215| 
        MOVB      XAR0,#36              ; [CPU_] |4215| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4215| 
        MOVL      XAR0,#80              ; [CPU_] |4215| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4215| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4215| 
	.dwpsn	file "../Source/prod.c",line 4217,column 6,is_stmt,isa 0
        MOV       *-SP[61],#7           ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4215,column 5,is_stmt,isa 0
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4215| 
        ADDB      XAR4,#3               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4217,column 6,is_stmt,isa 0
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4217| 
	.dwpsn	file "../Source/prod.c",line 4216,column 17,is_stmt,isa 0
        B         $C$L743,UNC           ; [CPU_] |4216| 
        ; branch occurs ; [] |4216| 
$C$L729:    
	.dwpsn	file "../Source/prod.c",line 4201,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4201| 
        MOVB      XAR0,#38              ; [CPU_] |4201| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4201| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4201| 
	.dwpsn	file "../Source/prod.c",line 4202,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4201,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4201| 
	.dwpsn	file "../Source/prod.c",line 4202,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4201,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4201| 
	.dwpsn	file "../Source/prod.c",line 4202,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4202| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4202| 
	.dwpsn	file "../Source/prod.c",line 4207,column 6,is_stmt,isa 0
        MOV       *-SP[61],#8           ; [CPU_] |4207| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L730:    
	.dwpsn	file "../Source/prod.c",line 4206,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4206| 
        ANDB      AL,#0xff              ; [CPU_] |4206| 
        MOV       *XAR4++,AL            ; [CPU_] |4206| 
	.dwpsn	file "../Source/prod.c",line 4207,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4207| 
        LSR       AL,8                  ; [CPU_] |4207| 
        MOV       *XAR4++,AL            ; [CPU_] |4207| 
	.dwpsn	file "../Source/prod.c",line 4205,column 17,is_stmt,isa 0
        BANZ      $C$L730,AR6--         ; [CPU_] |4205| 
        ; branchcc occurs ; [] |4205| 
        B         $C$L743,UNC           ; [CPU_] |4205| 
        ; branch occurs ; [] |4205| 
$C$L731:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[61]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4191,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4191| 
        MOV       *-SP[61],AL           ; [CPU_] |4191| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L732:    
        MOV       AL,*+XAR5[0]          ; [CPU_] |4191| 
	.dwpsn	file "../Source/prod.c",line 4190,column 17,is_stmt,isa 0
        ADDB      XAR5,#10              ; [CPU_] |4190| 
	.dwpsn	file "../Source/prod.c",line 4191,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4191| 
	.dwpsn	file "../Source/prod.c",line 4190,column 17,is_stmt,isa 0
        BANZ      $C$L732,AR6--         ; [CPU_] |4190| 
        ; branchcc occurs ; [] |4190| 
        B         $C$L743,UNC           ; [CPU_] |4190| 
        ; branch occurs ; [] |4190| 
$C$L733:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#201 << 4         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L734:    
	.dwpsn	file "../Source/prod.c",line 4174,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4174| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L735:    
	.dwpsn	file "../Source/prod.c",line 4176,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4176| 
        ANDB      AL,#0xff              ; [CPU_] |4176| 
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4177,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4177| 
        LSR       AL,8                  ; [CPU_] |4177| 
        MOV       *XAR4++,AL            ; [CPU_] |4177| 
	.dwpsn	file "../Source/prod.c",line 4175,column 18,is_stmt,isa 0
        BANZ      $C$L735,AR0--         ; [CPU_] |4175| 
        ; branchcc occurs ; [] |4175| 
	.dwpsn	file "../Source/prod.c",line 4173,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4173| 
	.dwpsn	file "../Source/prod.c",line 4177,column 7,is_stmt,isa 0
        ADD       *-SP[61],#4           ; [CPU_] |4177| 
	.dwpsn	file "../Source/prod.c",line 4173,column 17,is_stmt,isa 0
        BANZ      $C$L734,AR6--         ; [CPU_] |4173| 
        ; branchcc occurs ; [] |4173| 
	.dwpsn	file "../Source/prod.c",line 4182,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4182| 
        MOVL      XAR0,#3214            ; [CPU_] |4182| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4182| 
        ANDB      AL,#0xff              ; [CPU_] |4182| 
        MOV       *XAR4++,AL            ; [CPU_] |4182| 
	.dwpsn	file "../Source/prod.c",line 4183,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4183| 
        LSR       AL,8                  ; [CPU_] |4183| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4183| 
	.dwpsn	file "../Source/prod.c",line 4186,column 5,is_stmt,isa 0
        B         $C$L224,UNC           ; [CPU_] |4186| 
        ; branch occurs ; [] |4186| 
$C$L736:    
	.dwpsn	file "../Source/prod.c",line 3828,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3828| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#18              ; [CPU_U] |3828| 
        MOVZ      AR4,AR4               ; [CPU_] |3828| 
        ADD       ACC,*-SP[61]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 3830,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3830| 
        ANDB      AL,#0xff              ; [CPU_] |3830| 
        MOV       *XAR1++,AL            ; [CPU_] |3830| 
	.dwpsn	file "../Source/prod.c",line 3831,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3831| 
        LSR       AL,8                  ; [CPU_] |3831| 
        MOV       *XAR1++,AL            ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3829,column 17,is_stmt,isa 0
        BANZ      $C$L737,AR6--         ; [CPU_] |3829| 
        ; branchcc occurs ; [] |3829| 
	.dwpsn	file "../Source/prod.c",line 3835,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3835| 
        ANDB      AL,#0xff              ; [CPU_] |3835| 
	.dwpsn	file "../Source/prod.c",line 3836,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3836| 
	.dwpsn	file "../Source/prod.c",line 3835,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3835| 
	.dwpsn	file "../Source/prod.c",line 3836,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3836| 
        LSR       AL,8                  ; [CPU_] |3836| 
        MOV       *XAR1++,AL            ; [CPU_] |3836| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3836| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 3840,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3840| 
        ANDB      AL,#0xff              ; [CPU_] |3840| 
        MOV       *XAR1++,AL            ; [CPU_] |3840| 
	.dwpsn	file "../Source/prod.c",line 3841,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3841| 
        LSR       AL,8                  ; [CPU_] |3841| 
        MOV       *XAR1++,AL            ; [CPU_] |3841| 
	.dwpsn	file "../Source/prod.c",line 3839,column 17,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |3839| 
        ; branchcc occurs ; [] |3839| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3845,column 5,is_stmt,isa 0
$C$DW$1491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_name("_strlen")
	.dwattr $C$DW$1491, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3845| 
        ; call occurs [#_strlen] ; [] |3845| 
	.dwpsn	file "../Source/prod.c",line 3846,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3831,column 6,is_stmt,isa 0
        ADD       *-SP[61],#11          ; [CPU_] |3831| 
	.dwpsn	file "../Source/prod.c",line 3847,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3847| 
        B         $C$L743,EQ            ; [CPU_] |3847| 
        ; branchcc occurs ; [] |3847| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3846,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3846| 
	.dwpsn	file "../Source/prod.c",line 3847,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3847| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 3848,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3848| 
	.dwpsn	file "../Source/prod.c",line 3847,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3847| 
	.dwpsn	file "../Source/prod.c",line 3848,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3848| 
        INC       *-SP[61]              ; [CPU_] |3848| 
	.dwpsn	file "../Source/prod.c",line 3847,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3847| 
        B         $C$L739,HI            ; [CPU_] |3847| 
        ; branchcc occurs ; [] |3847| 
        B         $C$L743,UNC           ; [CPU_] |3847| 
        ; branch occurs ; [] |3847| 
$C$L740:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3814,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3814| 
        MOVL      XAR0,#66              ; [CPU_] |3814| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3814| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3814| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3814| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3814| 
	.dwpsn	file "../Source/prod.c",line 3817,column 5,is_stmt,isa 0
        B         $C$L742,UNC           ; [CPU_] |3817| 
        ; branch occurs ; [] |3817| 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 3808,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3808| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3808| 
$C$L742:    
        MOV       *-SP[61],#3           ; [CPU_] |3808| 
$C$L743:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5799,column 5,is_stmt,isa 0
        MOV       AL,*-SP[61]           ; [CPU_] |5799| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1492, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5799| 
        ; call occurs [#_scia_send_bin] ; [] |5799| 
	.dwpsn	file "../Source/prod.c",line 5801,column 5,is_stmt,isa 0
        MOVL      XAR0,#86              ; [CPU_] |5801| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5801| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5801| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5801| 
        CMPB      AL,#240               ; [CPU_] |5801| 
        B         $C$L635,NEQ           ; [CPU_] |5801| 
        ; branchcc occurs ; [] |5801| 
	.dwpsn	file "../Source/prod.c",line 5802,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5802| 
$C$DW$1493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1493, DW_AT_name("_delay_us")
	.dwattr $C$DW$1493, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5802| 
        ; call occurs [#_delay_us] ; [] |5802| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5803,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5803| 
$C$DW$1494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1494, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1494, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5803| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5803| 
        B         $C$L635,UNC           ; [CPU_] |5803| 
        ; branch occurs ; [] |5803| 
	.dwattr $C$DW$281, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$281, DW_AT_TI_end_line(0x16ca)
	.dwattr $C$DW$281, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$281

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1495	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1495, DW_AT_name("get_fattime")
	.dwattr $C$DW$1495, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1495, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1495, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1495, DW_AT_external
	.dwattr $C$DW$1495, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1495, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1495, DW_AT_TI_begin_line(0x75)
	.dwattr $C$DW$1495, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1495, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 117,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 117 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 121,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 121 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 122 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 123 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |121| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |121| 
        MOVL      ACC,P                 ; [CPU_] |121| 
        SFR       ACC,1                 ; [CPU_] |121| 
        MOVL      P,ACC                 ; [CPU_] |121| 
        MOV       AL,@_rtc              ; [CPU_] |121| 
        SUB       AL,#1980              ; [CPU_] |121| 
        MOV       ACC,AL << 4           ; [CPU_] |121| 
        OR        ACC,@_rtc+1           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+2           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        ACC,@_rtc+4           ; [CPU_] |121| 
        LSL       ACC,6                 ; [CPU_] |121| 
        OR        ACC,@_rtc+5           ; [CPU_] |121| 
        LSL       ACC,5                 ; [CPU_] |121| 
        OR        AL,PL                 ; [CPU_] |121| 
        OR        AH,PH                 ; [CPU_] |121| 
$C$DW$1496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1496, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1495, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1495, DW_AT_TI_end_line(0x7c)
	.dwattr $C$DW$1495, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1495

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"IPM",0
	.align	2
$C$FSL2:	.string	"INCH",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Dec 20 2019",0
	.align	2
$C$FSL62:	.string	"12:47:14",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL169:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL171:	.string	"Flash write...",0
	.align	2
$C$FSL172:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL173:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL174:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL175:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL176:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL178:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL179:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL180:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL181:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL182:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL183:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL184:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL185:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL186:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL187:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL188:	.string	"%2i(%s), ",0
	.align	2
$C$FSL189:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL190:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL191:	.string	"Sensor range: ",0
	.align	2
$C$FSL192:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL193:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL194:	.string	"Method: mv/v",0
	.align	2
$C$FSL195:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL196:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL197:	.string	"done",13,10,0
	.align	2
$C$FSL198:	.string	"Method: shunt",0
	.align	2
$C$FSL199:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL200:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL201:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL202:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL203:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL204:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL205:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL206:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL207:	.string	"X: %10.5f",0
	.align	2
$C$FSL208:	.string	"Y: %10.5f",0
	.align	2
$C$FSL209:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL210:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL211:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL212:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL213:	.string	":%u",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL215:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL216:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL217:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL218:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL219:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL220:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL221:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL222:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL223:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL224:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL225:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL226:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL227:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL228:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL229:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL230:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL231:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL232:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL233:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL234:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL235:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL236:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL237:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL238:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL239:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL240:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL241:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL242:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL243:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL244:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL245:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL246:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL247:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL248:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL249:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL250:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL251:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL252:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL253:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL254:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL255:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL256:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL257:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL258:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL260:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL261:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL262:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL263:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL264:	.string	"%10.1f",0
	.align	2
$C$FSL265:	.string	"1",0
	.align	2
$C$FSL266:	.string	"0",0
	.align	2
$C$FSL267:	.string	"-",0
	.align	2
$C$FSL268:	.string	"%10.4f",0
	.align	2
$C$FSL269:	.string	"%10.3f",0
	.align	2
$C$FSL270:	.string	"%10.2f",0
	.align	2
$C$FSL271:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resetvall
	.global	_ad7738_resettare
	.global	_ad7738_monclr
	.global	_ad7738_resetpeak
	.global	_ad7738_settemp
	.global	_mcbsp_xmit
	.global	_ad7738_resetlimit
	.global	_ad7738_setcal
	.global	_SPICANCheckInts
	.global	_conf_default
	.global	_SPICANWaitForTXBuf
	.global	_SPICANRoutine
	.global	_velf_rst
	.global	_dac_setmode
	.global	_ad7738_init
	.global	_maf_rst
	.global	_SPICANReadSetT0Message
	.global	_UNITS
	.global	_METHOD
	.global	_BAUD
	.global	_BITMAP
	.global	_LPV
	.global	_INTERFACE
	.global	_ds1820start
	.global	_configCAN
	.global	_latch_dac
	.global	_SPICANInit
	.global	_extio_init
	.global	_gpio_init
	.global	_ssr_set
	.global	_uart_set_dir
	.global	_lcd_init
	.global	_lcd_clear
	.global	_led_init
	.global	_led_set
	.global	_InitPieVectTable
	.global	_delay_us
	.global	_InitECan
	.global	_InitPieCtrl
	.global	_flash_init
	.global	_shunt_switch
	.global	_reboot
	.global	_sys_init
	.global	_lcd_dputs
	.global	_lcd_puts
	.global	_scia_init
	.global	_scia_set_cmd_mode
	.global	_scia_getparam
	.global	_SPICANRead
	.global	_scia_puts
	.global	_sprintf
	.global	_scia_send_bin
	.global	_SPICANReadStat
	.global	_port4004
	.global	_secureRamFuncs_runstart
	.global	_atoi
	.global	_port400e
	.global	_Flash28_API_LoadEnd
	.global	_Flash28_API_LoadStart
	.global	_secureRamFuncs_loadstart
	.global	_Flash28_API_RunStart
	.global	_secureRamFuncs_loadend
	.global	_ad7738_tempstart
	.global	_conf_write
	.global	_ad7738_tagsdetect
	.global	_ad7738_tempread
	.global	_ad7738_rawrdy
	.global	_ad7738_monrdy
	.global	_ad7738_getlimitchgd
	.global	_ad7738_getlimitst
	.global	_conf_read
	.global	_tagdetect
	.global	_scia_rx_getcmd
	.global	_scia_rx_getcmds
	.global	_strtod
	.global	_atol
	.global	_ad7738_getmon
	.global	_ds1820read
	.global	_prod_getnext
	.global	_Flash_CPUScaleFactor
	.global	_Flash_CallbackPtr
	.global	_ad7738_getvall
	.global	_ad7738_getpeak
	.global	_strlen
	.global	_ad7738_getraw
	.global	_prod_getavail
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1497	.dwtag  DW_TAG_member
	.dwattr $C$DW$1497, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1497, DW_AT_name("fs_type")
	.dwattr $C$DW$1497, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1497, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1497, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1498	.dwtag  DW_TAG_member
	.dwattr $C$DW$1498, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1498, DW_AT_name("drv")
	.dwattr $C$DW$1498, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1498, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1498, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1499	.dwtag  DW_TAG_member
	.dwattr $C$DW$1499, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1499, DW_AT_name("csize")
	.dwattr $C$DW$1499, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1499, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1499, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1500	.dwtag  DW_TAG_member
	.dwattr $C$DW$1500, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1500, DW_AT_name("n_fats")
	.dwattr $C$DW$1500, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1500, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1500, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1501	.dwtag  DW_TAG_member
	.dwattr $C$DW$1501, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1501, DW_AT_name("wflag")
	.dwattr $C$DW$1501, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1501, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1501, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1502	.dwtag  DW_TAG_member
	.dwattr $C$DW$1502, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1502, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1502, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1502, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1502, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1503	.dwtag  DW_TAG_member
	.dwattr $C$DW$1503, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1503, DW_AT_name("id")
	.dwattr $C$DW$1503, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1503, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1503, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1504	.dwtag  DW_TAG_member
	.dwattr $C$DW$1504, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1504, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1504, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1504, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1504, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1505	.dwtag  DW_TAG_member
	.dwattr $C$DW$1505, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1505, DW_AT_name("last_clust")
	.dwattr $C$DW$1505, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1505, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1505, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1506	.dwtag  DW_TAG_member
	.dwattr $C$DW$1506, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1506, DW_AT_name("free_clust")
	.dwattr $C$DW$1506, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1506, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1506, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1507	.dwtag  DW_TAG_member
	.dwattr $C$DW$1507, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1507, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1507, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1507, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1507, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1508	.dwtag  DW_TAG_member
	.dwattr $C$DW$1508, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1508, DW_AT_name("cdir")
	.dwattr $C$DW$1508, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1508, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1508, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1509	.dwtag  DW_TAG_member
	.dwattr $C$DW$1509, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1509, DW_AT_name("n_fatent")
	.dwattr $C$DW$1509, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1509, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1509, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1510	.dwtag  DW_TAG_member
	.dwattr $C$DW$1510, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1510, DW_AT_name("fsize")
	.dwattr $C$DW$1510, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1510, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1510, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1511	.dwtag  DW_TAG_member
	.dwattr $C$DW$1511, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1511, DW_AT_name("fatbase")
	.dwattr $C$DW$1511, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1511, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1511, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1512	.dwtag  DW_TAG_member
	.dwattr $C$DW$1512, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1512, DW_AT_name("dirbase")
	.dwattr $C$DW$1512, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1512, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1512, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1513	.dwtag  DW_TAG_member
	.dwattr $C$DW$1513, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1513, DW_AT_name("database")
	.dwattr $C$DW$1513, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1513, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1513, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1514	.dwtag  DW_TAG_member
	.dwattr $C$DW$1514, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1514, DW_AT_name("winsect")
	.dwattr $C$DW$1514, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1514, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1514, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1515	.dwtag  DW_TAG_member
	.dwattr $C$DW$1515, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1515, DW_AT_name("win")
	.dwattr $C$DW$1515, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1515, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1515, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1516	.dwtag  DW_TAG_member
	.dwattr $C$DW$1516, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1516, DW_AT_name("fs")
	.dwattr $C$DW$1516, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1516, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1516, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1517	.dwtag  DW_TAG_member
	.dwattr $C$DW$1517, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1517, DW_AT_name("id")
	.dwattr $C$DW$1517, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1517, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1517, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1518	.dwtag  DW_TAG_member
	.dwattr $C$DW$1518, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1518, DW_AT_name("flag")
	.dwattr $C$DW$1518, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1518, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1518, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1519	.dwtag  DW_TAG_member
	.dwattr $C$DW$1519, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1519, DW_AT_name("pad1")
	.dwattr $C$DW$1519, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1519, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1519, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1520	.dwtag  DW_TAG_member
	.dwattr $C$DW$1520, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1520, DW_AT_name("fptr")
	.dwattr $C$DW$1520, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1520, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1520, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1521	.dwtag  DW_TAG_member
	.dwattr $C$DW$1521, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1521, DW_AT_name("fsize")
	.dwattr $C$DW$1521, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1521, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1521, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1522	.dwtag  DW_TAG_member
	.dwattr $C$DW$1522, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1522, DW_AT_name("org_clust")
	.dwattr $C$DW$1522, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1522, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1522, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1523	.dwtag  DW_TAG_member
	.dwattr $C$DW$1523, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1523, DW_AT_name("curr_clust")
	.dwattr $C$DW$1523, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1523, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1523, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1524	.dwtag  DW_TAG_member
	.dwattr $C$DW$1524, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1524, DW_AT_name("dsect")
	.dwattr $C$DW$1524, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1524, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1524, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1525	.dwtag  DW_TAG_member
	.dwattr $C$DW$1525, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1525, DW_AT_name("dir_sect")
	.dwattr $C$DW$1525, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1525, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1525, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1526	.dwtag  DW_TAG_member
	.dwattr $C$DW$1526, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1526, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1526, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1526, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1526, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1527	.dwtag  DW_TAG_member
	.dwattr $C$DW$1527, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1527, DW_AT_name("cltbl")
	.dwattr $C$DW$1527, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1527, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1527, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1528	.dwtag  DW_TAG_member
	.dwattr $C$DW$1528, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1528, DW_AT_name("buf")
	.dwattr $C$DW$1528, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1528, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1528, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1529	.dwtag  DW_TAG_member
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1529, DW_AT_name("year")
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1529, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1529, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1530	.dwtag  DW_TAG_member
	.dwattr $C$DW$1530, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1530, DW_AT_name("month")
	.dwattr $C$DW$1530, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1530, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1530, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1531, DW_AT_name("mday")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1532, DW_AT_name("wday")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1533, DW_AT_name("hour")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1534, DW_AT_name("min")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1535, DW_AT_name("sec")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x08)
$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1536, DW_AT_name("adc")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x10)
$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1537, DW_AT_name("adw")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1538, DW_AT_name("pos")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1539, DW_AT_name("vel")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1540, DW_AT_name("ci")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1541, DW_AT_name("bslope")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1542, DW_AT_name("tcx")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1543, DW_AT_name("tcy")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1544, DW_AT_name("tcz")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x28)
$C$DW$1545	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1545, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1546, DW_AT_name("what")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1547, DW_AT_name("ch")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1548, DW_AT_name("dslopep")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1549, DW_AT_name("dslopen")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1550, DW_AT_name("dint")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1551, DW_AT_name("gain")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1552, DW_AT_name("offset")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1553	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1553, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1554, DW_AT_name("what")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1555, DW_AT_name("ch")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1556, DW_AT_name("adec")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1557	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1557, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1558, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1558, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1558, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1559, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1559, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1559, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1560, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1560, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1560, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1561, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1561, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1561, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1562, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1562, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1562, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1563, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1563, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1563, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1564, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1564, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1564, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1565, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1565, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1565, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1566, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1566, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1566, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1567, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1567, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1567, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1568, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1568, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1568, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1569, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1569, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1569, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1570, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1570, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1570, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1571, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1571, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1571, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1572, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1572, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1572, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1573, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1573, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1573, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1574, DW_AT_name("all")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1575, DW_AT_name("bit")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1576, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1576, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1576, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1577, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1577, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1577, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1578, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1578, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1578, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1579	.dwtag  DW_TAG_member
	.dwattr $C$DW$1579, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1579, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1579, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1579, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1579, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1579, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1579, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1580, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1580, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1581, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1581, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1582, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1582, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1582, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1583, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1583, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1583, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1584, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1584, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1584, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1585, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1585, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1585, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1586, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1586, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1586, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1587	.dwtag  DW_TAG_member
	.dwattr $C$DW$1587, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1587, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1587, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1587, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1587, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1587, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1587, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1588, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1588, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1589, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1589, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1590, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1590, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1591	.dwtag  DW_TAG_member
	.dwattr $C$DW$1591, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1591, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1591, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1591, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1591, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1591, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1591, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("all")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1593, DW_AT_name("bit")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1608, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1608, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1609, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1609, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1609, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("all")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1611, DW_AT_name("bit")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1626, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1626, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1627, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1627, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1627, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("all")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1629, DW_AT_name("bit")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1644, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1644, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1645, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1645, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1645, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("all")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1647, DW_AT_name("bit")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1662, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1662, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1663, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1663, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1663, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("all")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1665, DW_AT_name("bit")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1680, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1680, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1681, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1681, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1681, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("all")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1683, DW_AT_name("bit")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1698, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1698, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1699, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1699, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1699, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("all")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1701, DW_AT_name("bit")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("rsvd1")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("rsvd2")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("all")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1709, DW_AT_name("bit")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("rsvd1")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("rsvd2")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("all")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1717, DW_AT_name("bit")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("rsvd1")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("rsvd2")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("all")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1725, DW_AT_name("bit")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("rsvd1")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("rsvd2")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("all")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1733, DW_AT_name("bit")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1734, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1734, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1735, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1735, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1735, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("rsvd1")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("all")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1739, DW_AT_name("bit")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1741, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1741, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1742, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1742, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1743, DW_AT_name("rsvd1")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1743, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1743, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("all")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1745, DW_AT_name("bit")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("rsvd1")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("all")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1751, DW_AT_name("bit")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("rsvd1")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("all")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1757, DW_AT_name("bit")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1758, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1758, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1759, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1759, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1759, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1766, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1766, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1767, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1767, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1767, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1772, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1772, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1773, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1773, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1773, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("all")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1775, DW_AT_name("bit")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1778, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1778, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1779, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1779, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1779, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1784, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1784, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1785, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1785, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1785, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1790, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1790, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1791, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1791, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1791, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("all")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1793, DW_AT_name("bit")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1808, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1808, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1809, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1809, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1809, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("all")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1811, DW_AT_name("bit")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1824, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1824, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1825, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1825, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1825, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1826, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1826, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1827, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1827, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1827, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("all")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1829, DW_AT_name("bit")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("rsvd1")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1831, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1831, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("rsvd2")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("all")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1835, DW_AT_name("bit")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("rsvd1")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1836, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1836, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1837, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1837, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1838, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1838, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1838, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("rsvd2")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("all")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1841, DW_AT_name("bit")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("rsvd1")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1842, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1842, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1843, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1843, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1843, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1844, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1844, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1844, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1845, DW_AT_name("rsvd2")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1845, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1845, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("all")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1847, DW_AT_name("bit")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("rsvd1")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1848, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1848, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1849, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1849, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1850, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1850, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1850, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1851, DW_AT_name("rsvd2")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1851, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1851, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1852, DW_AT_name("all")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1853, DW_AT_name("bit")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1854, DW_AT_name("GPADAT")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1855, DW_AT_name("GPASET")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1856, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1857, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1858, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1859, DW_AT_name("GPBSET")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1860, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1861, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1862, DW_AT_name("rsvd1")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1863, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1864, DW_AT_name("GPDSET")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1865, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1866, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1867, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1868, DW_AT_name("GPESET")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1869, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1870, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1871, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1872, DW_AT_name("GPFSET")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1873, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1874, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1875, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1876, DW_AT_name("GPGSET")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1877, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1878, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1879, DW_AT_name("rsvd2")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1880	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1880)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1881, DW_AT_name("what")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1882, DW_AT_name("ch")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1883, DW_AT_name("limit")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1884, DW_AT_name("limits")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1885, DW_AT_name("limitr")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1886	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1886, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc96)
$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1887, DW_AT_name("usn")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1888, DW_AT_name("uname")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1889, DW_AT_name("rxdir")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1890, DW_AT_name("baud")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1891, DW_AT_name("tagiden")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1892, DW_AT_name("tarepersist")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1893, DW_AT_name("filter")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1894, DW_AT_name("diffwin")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1895, DW_AT_name("ch")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1896, DW_AT_name("sensor")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0x52]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1897, DW_AT_name("vfd")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0xc32]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1898, DW_AT_name("dac")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0xc3e]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1899, DW_AT_name("lim")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0xc6e]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1900, DW_AT_name("velfilter")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0xc8e]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1901, DW_AT_name("cntperin")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0xc90]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1902, DW_AT_name("magic")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0xc94]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1903	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1903)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1904, DW_AT_name("ssn")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1905, DW_AT_name("slbl")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1906, DW_AT_name("tagid")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1907, DW_AT_name("method")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1908, DW_AT_name("date")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1909, DW_AT_name("range")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1910, DW_AT_name("unit")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1911, DW_AT_name("ounit")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1912, DW_AT_name("ufactor")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1913, DW_AT_name("points")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1914	.dwtag  DW_TAG_member
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1914, DW_AT_name("mass")
	.dwattr $C$DW$1914, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1914, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1914, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1915, DW_AT_name("adc")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1916, DW_AT_name("slope")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1917, DW_AT_name("intercept")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1918	.dwtag  DW_TAG_member
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1918, DW_AT_name("shunt")
	.dwattr $C$DW$1918, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1918, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1918, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1919, DW_AT_name("base")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1920	.dwtag  DW_TAG_member
	.dwattr $C$DW$1920, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1920, DW_AT_name("tare")
	.dwattr $C$DW$1920, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1920, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1920, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1921	.dwtag  DW_TAG_member
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1921, DW_AT_name("dacgain")
	.dwattr $C$DW$1921, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1921, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1921, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1922	.dwtag  DW_TAG_member
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1922, DW_AT_name("dacoff")
	.dwattr $C$DW$1922, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1922, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1922, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1923	.dwtag  DW_TAG_member
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1923, DW_AT_name("ch")
	.dwattr $C$DW$1923, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1923, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1923, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1924	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1924, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1925	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1925, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1925)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1926	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1926, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1927	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$T$6)

$C$DW$T$175	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$1927)


$C$DW$T$176	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$176, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$T$176, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$176, DW_AT_byte_size(0x101)
$C$DW$1928	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1928, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$176

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1929	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1929, DW_AT_type(*$C$DW$T$10)

$C$DW$T$198	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$198, DW_AT_type(*$C$DW$1929)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1930	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1930, DW_AT_type(*$C$DW$T$36)

$C$DW$1931	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1931, DW_AT_type(*$C$DW$1930)

$C$DW$T$298	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$298, DW_AT_type(*$C$DW$1931)

$C$DW$1932	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1932, DW_AT_type(*$C$DW$T$36)

$C$DW$T$299	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$299, DW_AT_type(*$C$DW$1932)


$C$DW$T$300	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$300, DW_AT_type(*$C$DW$T$299)
	.dwattr $C$DW$T$300, DW_AT_language(DW_LANG_C)
$C$DW$1933	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$300


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1934	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1934, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87

$C$DW$T$168	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$168, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$168, DW_AT_address_class(0x20)


$C$DW$T$307	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$307, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$307, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$307, DW_AT_byte_size(0x03)
$C$DW$1935	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1935, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$307


$C$DW$T$308	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_byte_size(0x08)
$C$DW$1936	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1936, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$308

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x08)
$C$DW$1937	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1937, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1938	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1938, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1939	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1939, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1940	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1940, DW_AT_type(*$C$DW$T$12)

$C$DW$T$335	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$335, DW_AT_type(*$C$DW$1940)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1941	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1941, DW_AT_type(*$C$DW$T$90)

$C$DW$T$338	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$338, DW_AT_type(*$C$DW$1941)


$C$DW$T$339	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$339, DW_AT_type(*$C$DW$T$338)
	.dwattr $C$DW$T$339, DW_AT_language(DW_LANG_C)
$C$DW$1942	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$339

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$354	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$354, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$354, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$354, DW_AT_byte_size(0x08)
$C$DW$1943	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1943, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$354

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x08)
$C$DW$1944	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1944, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1945	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1945, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1946	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1946, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1947	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1947, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$373, DW_AT_byte_size(0x06)
$C$DW$1948	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1948, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$373

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1949	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1949, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1950	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1950, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$359	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$359, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$359, DW_AT_address_class(0x20)

$C$DW$1951	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1951, DW_AT_type(*$C$DW$T$5)

$C$DW$T$179	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$1951)

$C$DW$T$180	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$180, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$180, DW_AT_address_class(0x20)


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$180)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
$C$DW$1952	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$374


$C$DW$T$375	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$375, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$375, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$375, DW_AT_byte_size(0x400)
$C$DW$1953	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1953, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$375


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x08)
$C$DW$1954	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1954, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$380


$C$DW$T$381	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$381, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$381, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$381, DW_AT_byte_size(0x64)
$C$DW$1955	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1955, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$381


$C$DW$T$382	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$382, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$382, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$382, DW_AT_byte_size(0x40)
$C$DW$1956	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1956, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$382

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1957	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1957, DW_AT_name("AL")
	.dwattr $C$DW$1957, DW_AT_location[DW_OP_reg0]

$C$DW$1958	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1958, DW_AT_name("AH")
	.dwattr $C$DW$1958, DW_AT_location[DW_OP_reg1]

$C$DW$1959	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1959, DW_AT_name("PL")
	.dwattr $C$DW$1959, DW_AT_location[DW_OP_reg2]

$C$DW$1960	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1960, DW_AT_name("PH")
	.dwattr $C$DW$1960, DW_AT_location[DW_OP_reg3]

$C$DW$1961	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1961, DW_AT_name("SP")
	.dwattr $C$DW$1961, DW_AT_location[DW_OP_reg20]

$C$DW$1962	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1962, DW_AT_name("XT")
	.dwattr $C$DW$1962, DW_AT_location[DW_OP_reg21]

$C$DW$1963	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1963, DW_AT_name("T")
	.dwattr $C$DW$1963, DW_AT_location[DW_OP_reg22]

$C$DW$1964	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1964, DW_AT_name("ST0")
	.dwattr $C$DW$1964, DW_AT_location[DW_OP_reg23]

$C$DW$1965	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1965, DW_AT_name("ST1")
	.dwattr $C$DW$1965, DW_AT_location[DW_OP_reg24]

$C$DW$1966	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1966, DW_AT_name("PC")
	.dwattr $C$DW$1966, DW_AT_location[DW_OP_reg25]

$C$DW$1967	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1967, DW_AT_name("RPC")
	.dwattr $C$DW$1967, DW_AT_location[DW_OP_reg26]

$C$DW$1968	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1968, DW_AT_name("FP")
	.dwattr $C$DW$1968, DW_AT_location[DW_OP_reg28]

$C$DW$1969	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1969, DW_AT_name("DP")
	.dwattr $C$DW$1969, DW_AT_location[DW_OP_reg29]

$C$DW$1970	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1970, DW_AT_name("SXM")
	.dwattr $C$DW$1970, DW_AT_location[DW_OP_reg30]

$C$DW$1971	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1971, DW_AT_name("PM")
	.dwattr $C$DW$1971, DW_AT_location[DW_OP_reg31]

$C$DW$1972	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1972, DW_AT_name("OVM")
	.dwattr $C$DW$1972, DW_AT_location[DW_OP_regx 0x20]

$C$DW$1973	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1973, DW_AT_name("PAGE0")
	.dwattr $C$DW$1973, DW_AT_location[DW_OP_regx 0x21]

$C$DW$1974	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1974, DW_AT_name("AMODE")
	.dwattr $C$DW$1974, DW_AT_location[DW_OP_regx 0x22]

$C$DW$1975	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1975, DW_AT_name("INTM")
	.dwattr $C$DW$1975, DW_AT_location[DW_OP_regx 0x23]

$C$DW$1976	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1976, DW_AT_name("IFR")
	.dwattr $C$DW$1976, DW_AT_location[DW_OP_regx 0x24]

$C$DW$1977	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1977, DW_AT_name("IER")
	.dwattr $C$DW$1977, DW_AT_location[DW_OP_regx 0x25]

$C$DW$1978	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1978, DW_AT_name("V")
	.dwattr $C$DW$1978, DW_AT_location[DW_OP_regx 0x26]

$C$DW$1979	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1979, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$1979, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$1980	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1980, DW_AT_name("VOL")
	.dwattr $C$DW$1980, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$1981	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1981, DW_AT_name("AR0")
	.dwattr $C$DW$1981, DW_AT_location[DW_OP_reg4]

$C$DW$1982	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1982, DW_AT_name("XAR0")
	.dwattr $C$DW$1982, DW_AT_location[DW_OP_reg5]

$C$DW$1983	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1983, DW_AT_name("AR1")
	.dwattr $C$DW$1983, DW_AT_location[DW_OP_reg6]

$C$DW$1984	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1984, DW_AT_name("XAR1")
	.dwattr $C$DW$1984, DW_AT_location[DW_OP_reg7]

$C$DW$1985	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1985, DW_AT_name("AR2")
	.dwattr $C$DW$1985, DW_AT_location[DW_OP_reg8]

$C$DW$1986	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1986, DW_AT_name("XAR2")
	.dwattr $C$DW$1986, DW_AT_location[DW_OP_reg9]

$C$DW$1987	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1987, DW_AT_name("AR3")
	.dwattr $C$DW$1987, DW_AT_location[DW_OP_reg10]

$C$DW$1988	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1988, DW_AT_name("XAR3")
	.dwattr $C$DW$1988, DW_AT_location[DW_OP_reg11]

$C$DW$1989	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1989, DW_AT_name("AR4")
	.dwattr $C$DW$1989, DW_AT_location[DW_OP_reg12]

$C$DW$1990	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1990, DW_AT_name("XAR4")
	.dwattr $C$DW$1990, DW_AT_location[DW_OP_reg13]

$C$DW$1991	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1991, DW_AT_name("AR5")
	.dwattr $C$DW$1991, DW_AT_location[DW_OP_reg14]

$C$DW$1992	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1992, DW_AT_name("XAR5")
	.dwattr $C$DW$1992, DW_AT_location[DW_OP_reg15]

$C$DW$1993	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1993, DW_AT_name("AR6")
	.dwattr $C$DW$1993, DW_AT_location[DW_OP_reg16]

$C$DW$1994	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1994, DW_AT_name("XAR6")
	.dwattr $C$DW$1994, DW_AT_location[DW_OP_reg17]

$C$DW$1995	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1995, DW_AT_name("AR7")
	.dwattr $C$DW$1995, DW_AT_location[DW_OP_reg18]

$C$DW$1996	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1996, DW_AT_name("XAR7")
	.dwattr $C$DW$1996, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

