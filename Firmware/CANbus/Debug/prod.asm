;***************************************************************
;* TMS320C2000 C/C++ Codegen                   PC v15.12.6.LTS *
;* Date/Time created: Thu Nov 14 13:42:03 2019                 *
;***************************************************************
	.compiler_opts --abi=coffabi --float_support=softlib --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --quiet --silicon_version=28 --symdebug:dwarf --symdebug:dwarf_version=3 
FP	.set	XAR2

$C$DW$CU	.dwtag  DW_TAG_compile_unit
	.dwattr $C$DW$CU, DW_AT_name("../Source/prod.c")
	.dwattr $C$DW$CU, DW_AT_producer("TI TMS320C2000 C/C++ Codegen PC v15.12.6.LTS Copyright (c) 1996-2017 Texas Instruments Incorporated")
	.dwattr $C$DW$CU, DW_AT_TI_version(0x01)
	.dwattr $C$DW$CU, DW_AT_comp_dir("C:\Users\antons\workspace_v6_1\CANbus\Debug")
;**************************************************************
;* CINIT RECORDS                                              *
;**************************************************************
	.sect	".cinit"
	.align	1
	.field  	-1,16
	.field  	_cmd_mode+0,32
	.bits	0,16			; _cmd_mode @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_POS_U+0,32
	.bits	$C$FSL1,32		; _POS_U @ 0

	.sect	".cinit"
	.align	1
	.field  	-2,16
	.field  	_VEL_U+0,32
	.bits	$C$FSL2,32		; _VEL_U @ 0


$C$DW$1	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1, DW_AT_name("ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_TI_symbol_name("_ad7738_resetvall")
	.dwattr $C$DW$1, DW_AT_declaration
	.dwattr $C$DW$1, DW_AT_external
$C$DW$2	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$2, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$1


$C$DW$3	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$3, DW_AT_name("toggleFastDataCollect")
	.dwattr $C$DW$3, DW_AT_TI_symbol_name("_toggleFastDataCollect")
	.dwattr $C$DW$3, DW_AT_declaration
	.dwattr $C$DW$3, DW_AT_external
$C$DW$4	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$4, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$3


$C$DW$5	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$5, DW_AT_name("ad7738_resetlimit")
	.dwattr $C$DW$5, DW_AT_TI_symbol_name("_ad7738_resetlimit")
	.dwattr $C$DW$5, DW_AT_declaration
	.dwattr $C$DW$5, DW_AT_external
$C$DW$6	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$6, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$5


$C$DW$7	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$7, DW_AT_name("ad7738_resettare")
	.dwattr $C$DW$7, DW_AT_TI_symbol_name("_ad7738_resettare")
	.dwattr $C$DW$7, DW_AT_declaration
	.dwattr $C$DW$7, DW_AT_external
$C$DW$8	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$8, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$7


$C$DW$9	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$9, DW_AT_name("ad7738_resetpeak")
	.dwattr $C$DW$9, DW_AT_TI_symbol_name("_ad7738_resetpeak")
	.dwattr $C$DW$9, DW_AT_declaration
	.dwattr $C$DW$9, DW_AT_external
$C$DW$10	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$10, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$9


$C$DW$11	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$11, DW_AT_name("ad7738_settemp")
	.dwattr $C$DW$11, DW_AT_TI_symbol_name("_ad7738_settemp")
	.dwattr $C$DW$11, DW_AT_declaration
	.dwattr $C$DW$11, DW_AT_external
$C$DW$12	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$12, DW_AT_type(*$C$DW$T$17)

	.dwendtag $C$DW$11


$C$DW$13	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$13, DW_AT_name("setMotorDir")
	.dwattr $C$DW$13, DW_AT_TI_symbol_name("_setMotorDir")
	.dwattr $C$DW$13, DW_AT_declaration
	.dwattr $C$DW$13, DW_AT_external
$C$DW$14	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$14, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$13


$C$DW$15	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$15, DW_AT_name("scia_set_cmd_mode")
	.dwattr $C$DW$15, DW_AT_TI_symbol_name("_scia_set_cmd_mode")
	.dwattr $C$DW$15, DW_AT_declaration
	.dwattr $C$DW$15, DW_AT_external
$C$DW$16	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$16, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$15

$C$DW$17	.dwtag  DW_TAG_variable
	.dwattr $C$DW$17, DW_AT_name("UNITS")
	.dwattr $C$DW$17, DW_AT_TI_symbol_name("_UNITS")
	.dwattr $C$DW$17, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$17, DW_AT_declaration
	.dwattr $C$DW$17, DW_AT_external


$C$DW$18	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$18, DW_AT_name("ad7738_setcal")
	.dwattr $C$DW$18, DW_AT_TI_symbol_name("_ad7738_setcal")
	.dwattr $C$DW$18, DW_AT_declaration
	.dwattr $C$DW$18, DW_AT_external
	.dwendtag $C$DW$18


$C$DW$19	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$19, DW_AT_name("calcAutoDir")
	.dwattr $C$DW$19, DW_AT_TI_symbol_name("_calcAutoDir")
	.dwattr $C$DW$19, DW_AT_declaration
	.dwattr $C$DW$19, DW_AT_external
$C$DW$20	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$20, DW_AT_type(*$C$DW$T$16)

	.dwendtag $C$DW$19


$C$DW$21	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$21, DW_AT_name("setautoHeightEnable")
	.dwattr $C$DW$21, DW_AT_TI_symbol_name("_setautoHeightEnable")
	.dwattr $C$DW$21, DW_AT_declaration
	.dwattr $C$DW$21, DW_AT_external
$C$DW$22	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$22, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$21


$C$DW$23	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$23, DW_AT_name("ad7738_monclr")
	.dwattr $C$DW$23, DW_AT_TI_symbol_name("_ad7738_monclr")
	.dwattr $C$DW$23, DW_AT_declaration
	.dwattr $C$DW$23, DW_AT_external
	.dwendtag $C$DW$23


$C$DW$24	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$24, DW_AT_name("configCAN")
	.dwattr $C$DW$24, DW_AT_TI_symbol_name("_configCAN")
	.dwattr $C$DW$24, DW_AT_declaration
	.dwattr $C$DW$24, DW_AT_external
	.dwendtag $C$DW$24


$C$DW$25	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$25, DW_AT_name("setAutoHeight")
	.dwattr $C$DW$25, DW_AT_TI_symbol_name("_setAutoHeight")
	.dwattr $C$DW$25, DW_AT_declaration
	.dwattr $C$DW$25, DW_AT_external
$C$DW$26	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$26, DW_AT_type(*$C$DW$T$16)

	.dwendtag $C$DW$25


$C$DW$27	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$27, DW_AT_name("ad7738_init")
	.dwattr $C$DW$27, DW_AT_TI_symbol_name("_ad7738_init")
	.dwattr $C$DW$27, DW_AT_declaration
	.dwattr $C$DW$27, DW_AT_external
	.dwendtag $C$DW$27


$C$DW$28	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$28, DW_AT_name("maf_rst")
	.dwattr $C$DW$28, DW_AT_TI_symbol_name("_maf_rst")
	.dwattr $C$DW$28, DW_AT_declaration
	.dwattr $C$DW$28, DW_AT_external
	.dwendtag $C$DW$28


$C$DW$29	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$29, DW_AT_name("conf_default")
	.dwattr $C$DW$29, DW_AT_TI_symbol_name("_conf_default")
	.dwattr $C$DW$29, DW_AT_declaration
	.dwattr $C$DW$29, DW_AT_external
	.dwendtag $C$DW$29


$C$DW$30	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$30, DW_AT_name("set_numSensors")
	.dwattr $C$DW$30, DW_AT_TI_symbol_name("_set_numSensors")
	.dwattr $C$DW$30, DW_AT_declaration
	.dwattr $C$DW$30, DW_AT_external
$C$DW$31	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$31, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$30


$C$DW$32	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$32, DW_AT_name("velf_rst")
	.dwattr $C$DW$32, DW_AT_TI_symbol_name("_velf_rst")
	.dwattr $C$DW$32, DW_AT_declaration
	.dwattr $C$DW$32, DW_AT_external
	.dwendtag $C$DW$32


$C$DW$33	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$33, DW_AT_name("InitPieCtrl")
	.dwattr $C$DW$33, DW_AT_TI_symbol_name("_InitPieCtrl")
	.dwattr $C$DW$33, DW_AT_declaration
	.dwattr $C$DW$33, DW_AT_external
	.dwendtag $C$DW$33


$C$DW$34	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$34, DW_AT_name("InitPieVectTable")
	.dwattr $C$DW$34, DW_AT_TI_symbol_name("_InitPieVectTable")
	.dwattr $C$DW$34, DW_AT_declaration
	.dwattr $C$DW$34, DW_AT_external
	.dwendtag $C$DW$34

$C$DW$35	.dwtag  DW_TAG_variable
	.dwattr $C$DW$35, DW_AT_name("LPV")
	.dwattr $C$DW$35, DW_AT_TI_symbol_name("_LPV")
	.dwattr $C$DW$35, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$35, DW_AT_declaration
	.dwattr $C$DW$35, DW_AT_external


$C$DW$36	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$36, DW_AT_name("InitECan")
	.dwattr $C$DW$36, DW_AT_TI_symbol_name("_InitECan")
	.dwattr $C$DW$36, DW_AT_declaration
	.dwattr $C$DW$36, DW_AT_external
	.dwendtag $C$DW$36


$C$DW$37	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$37, DW_AT_name("reboot")
	.dwattr $C$DW$37, DW_AT_TI_symbol_name("_reboot")
	.dwattr $C$DW$37, DW_AT_declaration
	.dwattr $C$DW$37, DW_AT_external
	.dwendtag $C$DW$37


$C$DW$38	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$38, DW_AT_name("sys_init")
	.dwattr $C$DW$38, DW_AT_TI_symbol_name("_sys_init")
	.dwattr $C$DW$38, DW_AT_declaration
	.dwattr $C$DW$38, DW_AT_external
	.dwendtag $C$DW$38

$C$DW$39	.dwtag  DW_TAG_variable
	.dwattr $C$DW$39, DW_AT_name("METHOD")
	.dwattr $C$DW$39, DW_AT_TI_symbol_name("_METHOD")
	.dwattr $C$DW$39, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$39, DW_AT_declaration
	.dwattr $C$DW$39, DW_AT_external


$C$DW$40	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$40, DW_AT_name("latch_dac")
	.dwattr $C$DW$40, DW_AT_TI_symbol_name("_latch_dac")
	.dwattr $C$DW$40, DW_AT_declaration
	.dwattr $C$DW$40, DW_AT_external
	.dwendtag $C$DW$40


$C$DW$41	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$41, DW_AT_name("mcbsp_xmit")
	.dwattr $C$DW$41, DW_AT_TI_symbol_name("_mcbsp_xmit")
	.dwattr $C$DW$41, DW_AT_declaration
	.dwattr $C$DW$41, DW_AT_external
$C$DW$42	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$42, DW_AT_type(*$C$DW$T$11)

$C$DW$43	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$43, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$41


$C$DW$44	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$44, DW_AT_name("setMotorJog")
	.dwattr $C$DW$44, DW_AT_TI_symbol_name("_setMotorJog")
	.dwattr $C$DW$44, DW_AT_declaration
	.dwattr $C$DW$44, DW_AT_external
$C$DW$45	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$45, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$44


$C$DW$46	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$46, DW_AT_name("ds1820start")
	.dwattr $C$DW$46, DW_AT_TI_symbol_name("_ds1820start")
	.dwattr $C$DW$46, DW_AT_declaration
	.dwattr $C$DW$46, DW_AT_external
	.dwendtag $C$DW$46

$C$DW$47	.dwtag  DW_TAG_variable
	.dwattr $C$DW$47, DW_AT_name("INTERFACE")
	.dwattr $C$DW$47, DW_AT_TI_symbol_name("_INTERFACE")
	.dwattr $C$DW$47, DW_AT_type(*$C$DW$T$373)
	.dwattr $C$DW$47, DW_AT_declaration
	.dwattr $C$DW$47, DW_AT_external


$C$DW$48	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$48, DW_AT_name("delay_us")
	.dwattr $C$DW$48, DW_AT_TI_symbol_name("_delay_us")
	.dwattr $C$DW$48, DW_AT_declaration
	.dwattr $C$DW$48, DW_AT_external
$C$DW$49	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$49, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$48

$C$DW$50	.dwtag  DW_TAG_variable
	.dwattr $C$DW$50, DW_AT_name("BITMAP")
	.dwattr $C$DW$50, DW_AT_TI_symbol_name("_BITMAP")
	.dwattr $C$DW$50, DW_AT_type(*$C$DW$T$303)
	.dwattr $C$DW$50, DW_AT_declaration
	.dwattr $C$DW$50, DW_AT_external

$C$DW$51	.dwtag  DW_TAG_variable
	.dwattr $C$DW$51, DW_AT_name("BAUD")
	.dwattr $C$DW$51, DW_AT_TI_symbol_name("_BAUD")
	.dwattr $C$DW$51, DW_AT_type(*$C$DW$T$336)
	.dwattr $C$DW$51, DW_AT_declaration
	.dwattr $C$DW$51, DW_AT_external


$C$DW$52	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$52, DW_AT_name("lcd_clear")
	.dwattr $C$DW$52, DW_AT_TI_symbol_name("_lcd_clear")
	.dwattr $C$DW$52, DW_AT_declaration
	.dwattr $C$DW$52, DW_AT_external
	.dwendtag $C$DW$52


$C$DW$53	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$53, DW_AT_name("lcd_puts")
	.dwattr $C$DW$53, DW_AT_TI_symbol_name("_lcd_puts")
	.dwattr $C$DW$53, DW_AT_declaration
	.dwattr $C$DW$53, DW_AT_external
$C$DW$54	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$54, DW_AT_type(*$C$DW$T$163)

$C$DW$55	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$55, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$53


$C$DW$56	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$56, DW_AT_name("led_set")
	.dwattr $C$DW$56, DW_AT_TI_symbol_name("_led_set")
	.dwattr $C$DW$56, DW_AT_declaration
	.dwattr $C$DW$56, DW_AT_external
$C$DW$57	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$57, DW_AT_type(*$C$DW$T$36)

$C$DW$58	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$58, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$56


$C$DW$59	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$59, DW_AT_name("scia_init")
	.dwattr $C$DW$59, DW_AT_TI_symbol_name("_scia_init")
	.dwattr $C$DW$59, DW_AT_declaration
	.dwattr $C$DW$59, DW_AT_external
$C$DW$60	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$60, DW_AT_type(*$C$DW$T$90)

	.dwendtag $C$DW$59


$C$DW$61	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$61, DW_AT_name("dac_setmode")
	.dwattr $C$DW$61, DW_AT_TI_symbol_name("_dac_setmode")
	.dwattr $C$DW$61, DW_AT_declaration
	.dwattr $C$DW$61, DW_AT_external
$C$DW$62	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$62, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$61


$C$DW$63	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$63, DW_AT_name("lcd_init")
	.dwattr $C$DW$63, DW_AT_TI_symbol_name("_lcd_init")
	.dwattr $C$DW$63, DW_AT_declaration
	.dwattr $C$DW$63, DW_AT_external
	.dwendtag $C$DW$63


$C$DW$64	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$64, DW_AT_name("lcd_dputs")
	.dwattr $C$DW$64, DW_AT_TI_symbol_name("_lcd_dputs")
	.dwattr $C$DW$64, DW_AT_declaration
	.dwattr $C$DW$64, DW_AT_external
$C$DW$65	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$65, DW_AT_type(*$C$DW$T$163)

$C$DW$66	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$66, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$64


$C$DW$67	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$67, DW_AT_name("flash_init")
	.dwattr $C$DW$67, DW_AT_TI_symbol_name("_flash_init")
	.dwattr $C$DW$67, DW_AT_declaration
	.dwattr $C$DW$67, DW_AT_external
	.dwendtag $C$DW$67


$C$DW$68	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$68, DW_AT_name("uart_set_dir")
	.dwattr $C$DW$68, DW_AT_TI_symbol_name("_uart_set_dir")
	.dwattr $C$DW$68, DW_AT_declaration
	.dwattr $C$DW$68, DW_AT_external
$C$DW$69	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$69, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$68


$C$DW$70	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$70, DW_AT_name("shunt_switch")
	.dwattr $C$DW$70, DW_AT_TI_symbol_name("_shunt_switch")
	.dwattr $C$DW$70, DW_AT_declaration
	.dwattr $C$DW$70, DW_AT_external
$C$DW$71	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$71, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$70


$C$DW$72	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$72, DW_AT_name("gpio_init")
	.dwattr $C$DW$72, DW_AT_TI_symbol_name("_gpio_init")
	.dwattr $C$DW$72, DW_AT_declaration
	.dwattr $C$DW$72, DW_AT_external
	.dwendtag $C$DW$72


$C$DW$73	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$73, DW_AT_name("led_init")
	.dwattr $C$DW$73, DW_AT_TI_symbol_name("_led_init")
	.dwattr $C$DW$73, DW_AT_declaration
	.dwattr $C$DW$73, DW_AT_external
	.dwendtag $C$DW$73


$C$DW$74	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$74, DW_AT_name("ssr_set")
	.dwattr $C$DW$74, DW_AT_TI_symbol_name("_ssr_set")
	.dwattr $C$DW$74, DW_AT_declaration
	.dwattr $C$DW$74, DW_AT_external
$C$DW$75	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$75, DW_AT_type(*$C$DW$T$36)

$C$DW$76	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$76, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$74


$C$DW$77	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$77, DW_AT_name("extio_init")
	.dwattr $C$DW$77, DW_AT_TI_symbol_name("_extio_init")
	.dwattr $C$DW$77, DW_AT_declaration
	.dwattr $C$DW$77, DW_AT_external
	.dwendtag $C$DW$77


$C$DW$78	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$78, DW_AT_name("getMotorJog")
	.dwattr $C$DW$78, DW_AT_TI_symbol_name("_getMotorJog")
	.dwattr $C$DW$78, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$78, DW_AT_declaration
	.dwattr $C$DW$78, DW_AT_external
	.dwendtag $C$DW$78

$C$DW$79	.dwtag  DW_TAG_variable
	.dwattr $C$DW$79, DW_AT_name("port4004")
	.dwattr $C$DW$79, DW_AT_TI_symbol_name("_port4004")
	.dwattr $C$DW$79, DW_AT_type(*$C$DW$T$301)
	.dwattr $C$DW$79, DW_AT_declaration
	.dwattr $C$DW$79, DW_AT_external

$C$DW$80	.dwtag  DW_TAG_variable
	.dwattr $C$DW$80, DW_AT_name("port400e")
	.dwattr $C$DW$80, DW_AT_TI_symbol_name("_port400e")
	.dwattr $C$DW$80, DW_AT_type(*$C$DW$T$301)
	.dwattr $C$DW$80, DW_AT_declaration
	.dwattr $C$DW$80, DW_AT_external

$C$DW$81	.dwtag  DW_TAG_variable
	.dwattr $C$DW$81, DW_AT_name("secureRamFuncs_loadend")
	.dwattr $C$DW$81, DW_AT_TI_symbol_name("_secureRamFuncs_loadend")
	.dwattr $C$DW$81, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$81, DW_AT_declaration
	.dwattr $C$DW$81, DW_AT_external

$C$DW$82	.dwtag  DW_TAG_variable
	.dwattr $C$DW$82, DW_AT_name("secureRamFuncs_runstart")
	.dwattr $C$DW$82, DW_AT_TI_symbol_name("_secureRamFuncs_runstart")
	.dwattr $C$DW$82, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$82, DW_AT_declaration
	.dwattr $C$DW$82, DW_AT_external

	.global	_autoidchanged
_autoidchanged:	.usect	".ebss",1,1,0
$C$DW$83	.dwtag  DW_TAG_variable
	.dwattr $C$DW$83, DW_AT_name("autoidchanged")
	.dwattr $C$DW$83, DW_AT_TI_symbol_name("_autoidchanged")
	.dwattr $C$DW$83, DW_AT_location[DW_OP_addr _autoidchanged]
	.dwattr $C$DW$83, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$83, DW_AT_external

	.global	_cmd_mode
_cmd_mode:	.usect	".ebss",1,1,0
$C$DW$84	.dwtag  DW_TAG_variable
	.dwattr $C$DW$84, DW_AT_name("cmd_mode")
	.dwattr $C$DW$84, DW_AT_TI_symbol_name("_cmd_mode")
	.dwattr $C$DW$84, DW_AT_location[DW_OP_addr _cmd_mode]
	.dwattr $C$DW$84, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$84, DW_AT_external

	.global	_tagwasthere
_tagwasthere:	.usect	".ebss",1,1,0
$C$DW$85	.dwtag  DW_TAG_variable
	.dwattr $C$DW$85, DW_AT_name("tagwasthere")
	.dwattr $C$DW$85, DW_AT_TI_symbol_name("_tagwasthere")
	.dwattr $C$DW$85, DW_AT_location[DW_OP_addr _tagwasthere]
	.dwattr $C$DW$85, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$85, DW_AT_external

$C$DW$86	.dwtag  DW_TAG_variable
	.dwattr $C$DW$86, DW_AT_name("Flash28_API_LoadStart")
	.dwattr $C$DW$86, DW_AT_TI_symbol_name("_Flash28_API_LoadStart")
	.dwattr $C$DW$86, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$86, DW_AT_declaration
	.dwattr $C$DW$86, DW_AT_external


$C$DW$87	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$87, DW_AT_name("getautoHeightEnable")
	.dwattr $C$DW$87, DW_AT_TI_symbol_name("_getautoHeightEnable")
	.dwattr $C$DW$87, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$87, DW_AT_declaration
	.dwattr $C$DW$87, DW_AT_external
	.dwendtag $C$DW$87

$C$DW$88	.dwtag  DW_TAG_variable
	.dwattr $C$DW$88, DW_AT_name("secureRamFuncs_loadstart")
	.dwattr $C$DW$88, DW_AT_TI_symbol_name("_secureRamFuncs_loadstart")
	.dwattr $C$DW$88, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$88, DW_AT_declaration
	.dwattr $C$DW$88, DW_AT_external

	.global	_autoid
_autoid:	.usect	".ebss",1,1,0
$C$DW$89	.dwtag  DW_TAG_variable
	.dwattr $C$DW$89, DW_AT_name("autoid")
	.dwattr $C$DW$89, DW_AT_TI_symbol_name("_autoid")
	.dwattr $C$DW$89, DW_AT_location[DW_OP_addr _autoid]
	.dwattr $C$DW$89, DW_AT_type(*$C$DW$T$308)
	.dwattr $C$DW$89, DW_AT_external

$C$DW$90	.dwtag  DW_TAG_variable
	.dwattr $C$DW$90, DW_AT_name("Flash28_API_LoadEnd")
	.dwattr $C$DW$90, DW_AT_TI_symbol_name("_Flash28_API_LoadEnd")
	.dwattr $C$DW$90, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$90, DW_AT_declaration
	.dwattr $C$DW$90, DW_AT_external

$C$DW$91	.dwtag  DW_TAG_variable
	.dwattr $C$DW$91, DW_AT_name("Flash28_API_RunStart")
	.dwattr $C$DW$91, DW_AT_TI_symbol_name("_Flash28_API_RunStart")
	.dwattr $C$DW$91, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$91, DW_AT_declaration
	.dwattr $C$DW$91, DW_AT_external


$C$DW$92	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$92, DW_AT_name("tagdetect")
	.dwattr $C$DW$92, DW_AT_TI_symbol_name("_tagdetect")
	.dwattr $C$DW$92, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$92, DW_AT_declaration
	.dwattr $C$DW$92, DW_AT_external
$C$DW$93	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$93, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$92


$C$DW$94	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$94, DW_AT_name("conf_read")
	.dwattr $C$DW$94, DW_AT_TI_symbol_name("_conf_read")
	.dwattr $C$DW$94, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$94, DW_AT_declaration
	.dwattr $C$DW$94, DW_AT_external
	.dwendtag $C$DW$94


$C$DW$95	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$95, DW_AT_name("conf_write")
	.dwattr $C$DW$95, DW_AT_TI_symbol_name("_conf_write")
	.dwattr $C$DW$95, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$95, DW_AT_declaration
	.dwattr $C$DW$95, DW_AT_external
	.dwendtag $C$DW$95


$C$DW$96	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$96, DW_AT_name("scia_send_bin")
	.dwattr $C$DW$96, DW_AT_TI_symbol_name("_scia_send_bin")
	.dwattr $C$DW$96, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$96, DW_AT_declaration
	.dwattr $C$DW$96, DW_AT_external
$C$DW$97	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$97, DW_AT_type(*$C$DW$T$163)

$C$DW$98	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$96


$C$DW$99	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$99, DW_AT_name("get_numSensors")
	.dwattr $C$DW$99, DW_AT_TI_symbol_name("_get_numSensors")
	.dwattr $C$DW$99, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$99, DW_AT_declaration
	.dwattr $C$DW$99, DW_AT_external
	.dwendtag $C$DW$99


$C$DW$100	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$100, DW_AT_name("ad7738_rawrdy")
	.dwattr $C$DW$100, DW_AT_TI_symbol_name("_ad7738_rawrdy")
	.dwattr $C$DW$100, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$100, DW_AT_declaration
	.dwattr $C$DW$100, DW_AT_external
	.dwendtag $C$DW$100


$C$DW$101	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$101, DW_AT_name("scia_getparam")
	.dwattr $C$DW$101, DW_AT_TI_symbol_name("_scia_getparam")
	.dwattr $C$DW$101, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$101, DW_AT_declaration
	.dwattr $C$DW$101, DW_AT_external
$C$DW$102	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$102, DW_AT_type(*$C$DW$T$163)

$C$DW$103	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$103, DW_AT_type(*$C$DW$T$163)

$C$DW$104	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$104, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$101


$C$DW$105	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$105, DW_AT_name("scia_rx_getcmds")
	.dwattr $C$DW$105, DW_AT_TI_symbol_name("_scia_rx_getcmds")
	.dwattr $C$DW$105, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$105, DW_AT_declaration
	.dwattr $C$DW$105, DW_AT_external
	.dwendtag $C$DW$105


$C$DW$106	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$106, DW_AT_name("atoi")
	.dwattr $C$DW$106, DW_AT_TI_symbol_name("_atoi")
	.dwattr $C$DW$106, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$106, DW_AT_declaration
	.dwattr $C$DW$106, DW_AT_external
$C$DW$107	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$107, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$106


$C$DW$108	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$108, DW_AT_name("scia_puts")
	.dwattr $C$DW$108, DW_AT_TI_symbol_name("_scia_puts")
	.dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$108, DW_AT_declaration
	.dwattr $C$DW$108, DW_AT_external
$C$DW$109	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$109, DW_AT_type(*$C$DW$T$163)

	.dwendtag $C$DW$108


$C$DW$110	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$110, DW_AT_name("getStartStop")
	.dwattr $C$DW$110, DW_AT_TI_symbol_name("_getStartStop")
	.dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$110, DW_AT_declaration
	.dwattr $C$DW$110, DW_AT_external
	.dwendtag $C$DW$110


$C$DW$111	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$111, DW_AT_name("sprintf")
	.dwattr $C$DW$111, DW_AT_TI_symbol_name("_sprintf")
	.dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$111, DW_AT_declaration
	.dwattr $C$DW$111, DW_AT_external
$C$DW$112	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$112, DW_AT_type(*$C$DW$T$163)

$C$DW$113	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$113, DW_AT_type(*$C$DW$T$179)

$C$DW$114	.dwtag  DW_TAG_unspecified_parameters

	.dwendtag $C$DW$111


$C$DW$115	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$115, DW_AT_name("scia_rx_getcmd")
	.dwattr $C$DW$115, DW_AT_TI_symbol_name("_scia_rx_getcmd")
	.dwattr $C$DW$115, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$115, DW_AT_declaration
	.dwattr $C$DW$115, DW_AT_external
$C$DW$116	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$116, DW_AT_type(*$C$DW$T$163)

$C$DW$117	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$117, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$115


$C$DW$118	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$118, DW_AT_name("ad7738_monrdy")
	.dwattr $C$DW$118, DW_AT_TI_symbol_name("_ad7738_monrdy")
	.dwattr $C$DW$118, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$118, DW_AT_declaration
	.dwattr $C$DW$118, DW_AT_external
	.dwendtag $C$DW$118


$C$DW$119	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$119, DW_AT_name("ad7738_getlimitchgd")
	.dwattr $C$DW$119, DW_AT_TI_symbol_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$119, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$119, DW_AT_declaration
	.dwattr $C$DW$119, DW_AT_external
	.dwendtag $C$DW$119


$C$DW$120	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$120, DW_AT_name("ad7738_getlimitst")
	.dwattr $C$DW$120, DW_AT_TI_symbol_name("_ad7738_getlimitst")
	.dwattr $C$DW$120, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$120, DW_AT_declaration
	.dwattr $C$DW$120, DW_AT_external
$C$DW$121	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$121, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$120


$C$DW$122	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$122, DW_AT_name("ad7738_tempread")
	.dwattr $C$DW$122, DW_AT_TI_symbol_name("_ad7738_tempread")
	.dwattr $C$DW$122, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$122, DW_AT_declaration
	.dwattr $C$DW$122, DW_AT_external
	.dwendtag $C$DW$122


$C$DW$123	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$123, DW_AT_name("ad7738_tempstart")
	.dwattr $C$DW$123, DW_AT_TI_symbol_name("_ad7738_tempstart")
	.dwattr $C$DW$123, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$123, DW_AT_declaration
	.dwattr $C$DW$123, DW_AT_external
	.dwendtag $C$DW$123


$C$DW$124	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$124, DW_AT_name("ad7738_tagsdetect")
	.dwattr $C$DW$124, DW_AT_TI_symbol_name("_ad7738_tagsdetect")
	.dwattr $C$DW$124, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$124, DW_AT_declaration
	.dwattr $C$DW$124, DW_AT_external
	.dwendtag $C$DW$124


$C$DW$125	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$125, DW_AT_name("ds1820read")
	.dwattr $C$DW$125, DW_AT_TI_symbol_name("_ds1820read")
	.dwattr $C$DW$125, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$125, DW_AT_declaration
	.dwattr $C$DW$125, DW_AT_external
	.dwendtag $C$DW$125


$C$DW$126	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$126, DW_AT_name("ad7738_getraw")
	.dwattr $C$DW$126, DW_AT_TI_symbol_name("_ad7738_getraw")
	.dwattr $C$DW$126, DW_AT_type(*$C$DW$T$116)
	.dwattr $C$DW$126, DW_AT_declaration
	.dwattr $C$DW$126, DW_AT_external
	.dwendtag $C$DW$126


$C$DW$127	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$127, DW_AT_name("ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_TI_symbol_name("_ad7738_getmon")
	.dwattr $C$DW$127, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$127, DW_AT_declaration
	.dwattr $C$DW$127, DW_AT_external
	.dwendtag $C$DW$127


$C$DW$128	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$128, DW_AT_name("strlen")
	.dwattr $C$DW$128, DW_AT_TI_symbol_name("_strlen")
	.dwattr $C$DW$128, DW_AT_type(*$C$DW$T$149)
	.dwattr $C$DW$128, DW_AT_declaration
	.dwattr $C$DW$128, DW_AT_external
$C$DW$129	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$129, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$128


$C$DW$130	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$130, DW_AT_name("ad7738_getload")
	.dwattr $C$DW$130, DW_AT_TI_symbol_name("_ad7738_getload")
	.dwattr $C$DW$130, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$130, DW_AT_declaration
	.dwattr $C$DW$130, DW_AT_external
	.dwendtag $C$DW$130


$C$DW$131	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$131, DW_AT_name("__builtin_strlen")
	.dwattr $C$DW$131, DW_AT_TI_symbol_name("___builtin_strlen")
	.dwattr $C$DW$131, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$131, DW_AT_declaration
	.dwattr $C$DW$131, DW_AT_external
$C$DW$132	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$132, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$131


$C$DW$133	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$133, DW_AT_name("memcpy")
	.dwattr $C$DW$133, DW_AT_TI_symbol_name("_memcpy")
	.dwattr $C$DW$133, DW_AT_type(*$C$DW$T$3)
	.dwattr $C$DW$133, DW_AT_declaration
	.dwattr $C$DW$133, DW_AT_external
$C$DW$134	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$134, DW_AT_type(*$C$DW$T$3)

$C$DW$135	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$135, DW_AT_type(*$C$DW$T$148)

$C$DW$136	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$136, DW_AT_type(*$C$DW$T$149)

	.dwendtag $C$DW$133


$C$DW$137	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$137, DW_AT_name("atol")
	.dwattr $C$DW$137, DW_AT_TI_symbol_name("_atol")
	.dwattr $C$DW$137, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$137, DW_AT_declaration
	.dwattr $C$DW$137, DW_AT_external
$C$DW$138	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$138, DW_AT_type(*$C$DW$T$179)

	.dwendtag $C$DW$137

	.global	_POS_U
_POS_U:	.usect	".ebss",2,1,1
$C$DW$139	.dwtag  DW_TAG_variable
	.dwattr $C$DW$139, DW_AT_name("POS_U")
	.dwattr $C$DW$139, DW_AT_TI_symbol_name("_POS_U")
	.dwattr $C$DW$139, DW_AT_location[DW_OP_addr _POS_U]
	.dwattr $C$DW$139, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$139, DW_AT_external

	.global	_VEL_U
_VEL_U:	.usect	".ebss",2,1,1
$C$DW$140	.dwtag  DW_TAG_variable
	.dwattr $C$DW$140, DW_AT_name("VEL_U")
	.dwattr $C$DW$140, DW_AT_TI_symbol_name("_VEL_U")
	.dwattr $C$DW$140, DW_AT_location[DW_OP_addr _VEL_U]
	.dwattr $C$DW$140, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$140, DW_AT_external


$C$DW$141	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$141, DW_AT_name("strtod")
	.dwattr $C$DW$141, DW_AT_TI_symbol_name("_strtod")
	.dwattr $C$DW$141, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$141, DW_AT_declaration
	.dwattr $C$DW$141, DW_AT_external
$C$DW$142	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$142, DW_AT_type(*$C$DW$T$179)

$C$DW$143	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$143, DW_AT_type(*$C$DW$T$361)

	.dwendtag $C$DW$141


$C$DW$144	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$144, DW_AT_name("ad7738_getpeak")
	.dwattr $C$DW$144, DW_AT_TI_symbol_name("_ad7738_getpeak")
	.dwattr $C$DW$144, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$144, DW_AT_declaration
	.dwattr $C$DW$144, DW_AT_external
	.dwendtag $C$DW$144

$C$DW$145	.dwtag  DW_TAG_variable
	.dwattr $C$DW$145, DW_AT_name("Flash_CallbackPtr")
	.dwattr $C$DW$145, DW_AT_TI_symbol_name("_Flash_CallbackPtr")
	.dwattr $C$DW$145, DW_AT_type(*$C$DW$T$152)
	.dwattr $C$DW$145, DW_AT_declaration
	.dwattr $C$DW$145, DW_AT_external


$C$DW$146	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$146, DW_AT_name("ad7738_getpos")
	.dwattr $C$DW$146, DW_AT_TI_symbol_name("_ad7738_getpos")
	.dwattr $C$DW$146, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$146, DW_AT_declaration
	.dwattr $C$DW$146, DW_AT_external
	.dwendtag $C$DW$146

$C$DW$147	.dwtag  DW_TAG_variable
	.dwattr $C$DW$147, DW_AT_name("Flash_CPUScaleFactor")
	.dwattr $C$DW$147, DW_AT_TI_symbol_name("_Flash_CPUScaleFactor")
	.dwattr $C$DW$147, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$147, DW_AT_declaration
	.dwattr $C$DW$147, DW_AT_external


$C$DW$148	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$148, DW_AT_name("ad7738_getpeakload")
	.dwattr $C$DW$148, DW_AT_TI_symbol_name("_ad7738_getpeakload")
	.dwattr $C$DW$148, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$148, DW_AT_declaration
	.dwattr $C$DW$148, DW_AT_external
	.dwendtag $C$DW$148


$C$DW$149	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$149, DW_AT_name("ad7738_getvall")
	.dwattr $C$DW$149, DW_AT_TI_symbol_name("_ad7738_getvall")
	.dwattr $C$DW$149, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$149, DW_AT_declaration
	.dwattr $C$DW$149, DW_AT_external
	.dwendtag $C$DW$149


$C$DW$150	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$150, DW_AT_name("ad7738_getDropTime")
	.dwattr $C$DW$150, DW_AT_TI_symbol_name("_ad7738_getDropTime")
	.dwattr $C$DW$150, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$150, DW_AT_declaration
	.dwattr $C$DW$150, DW_AT_external
$C$DW$151	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$151, DW_AT_type(*$C$DW$T$10)

	.dwendtag $C$DW$150


$C$DW$152	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$152, DW_AT_name("prod_getnext")
	.dwattr $C$DW$152, DW_AT_TI_symbol_name("_prod_getnext")
	.dwattr $C$DW$152, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$152, DW_AT_declaration
	.dwattr $C$DW$152, DW_AT_external
	.dwendtag $C$DW$152


$C$DW$153	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$153, DW_AT_name("prod_getavail")
	.dwattr $C$DW$153, DW_AT_TI_symbol_name("_prod_getavail")
	.dwattr $C$DW$153, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$153, DW_AT_declaration
	.dwattr $C$DW$153, DW_AT_external
	.dwendtag $C$DW$153


$C$DW$154	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$154, DW_AT_name("tagid")
	.dwattr $C$DW$154, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$154, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$154, DW_AT_declaration
	.dwattr $C$DW$154, DW_AT_external
$C$DW$155	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$155, DW_AT_type(*$C$DW$T$36)

	.dwendtag $C$DW$154

	.global	_rtc
_rtc:	.usect	".ebss",7,1,0
$C$DW$156	.dwtag  DW_TAG_variable
	.dwattr $C$DW$156, DW_AT_name("rtc")
	.dwattr $C$DW$156, DW_AT_TI_symbol_name("_rtc")
	.dwattr $C$DW$156, DW_AT_location[DW_OP_addr _rtc]
	.dwattr $C$DW$156, DW_AT_type(*$C$DW$T$111)
	.dwattr $C$DW$156, DW_AT_external

_buff$8:	.usect	".ebss",8,1,0
$C$DW$157	.dwtag  DW_TAG_variable
	.dwattr $C$DW$157, DW_AT_name("GpioDataRegs")
	.dwattr $C$DW$157, DW_AT_TI_symbol_name("_GpioDataRegs")
	.dwattr $C$DW$157, DW_AT_type(*$C$DW$T$136)
	.dwattr $C$DW$157, DW_AT_declaration
	.dwattr $C$DW$157, DW_AT_external

_buff$7:	.usect	".ebss",64,1,0
_buff$5:	.usect	".ebss",64,1,0
_buff$6:	.usect	".ebss",64,1,0
_buff$3:	.usect	".ebss",100,1,0
_buff$4:	.usect	".ebss",100,1,0
	.global	_tsensor
_tsensor:	.usect	".ebss",152,1,1
$C$DW$158	.dwtag  DW_TAG_variable
	.dwattr $C$DW$158, DW_AT_name("tsensor")
	.dwattr $C$DW$158, DW_AT_TI_symbol_name("_tsensor")
	.dwattr $C$DW$158, DW_AT_location[DW_OP_addr _tsensor]
	.dwattr $C$DW$158, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$158, DW_AT_external

$C$DW$159	.dwtag  DW_TAG_variable
	.dwattr $C$DW$159, DW_AT_name("_ctypes_")
	.dwattr $C$DW$159, DW_AT_TI_symbol_name("__ctypes_")
	.dwattr $C$DW$159, DW_AT_type(*$C$DW$T$175)
	.dwattr $C$DW$159, DW_AT_declaration
	.dwattr $C$DW$159, DW_AT_external

	.global	_fileOb
_fileOb:	.usect	".ebss",534,1,1
$C$DW$160	.dwtag  DW_TAG_variable
	.dwattr $C$DW$160, DW_AT_name("fileOb")
	.dwattr $C$DW$160, DW_AT_TI_symbol_name("_fileOb")
	.dwattr $C$DW$160, DW_AT_location[DW_OP_addr _fileOb]
	.dwattr $C$DW$160, DW_AT_type(*$C$DW$T$110)
	.dwattr $C$DW$160, DW_AT_external

	.global	_Fatfs
_Fatfs:	.usect	".ebss",540,1,1
$C$DW$161	.dwtag  DW_TAG_variable
	.dwattr $C$DW$161, DW_AT_name("Fatfs")
	.dwattr $C$DW$161, DW_AT_TI_symbol_name("_Fatfs")
	.dwattr $C$DW$161, DW_AT_location[DW_OP_addr _Fatfs]
	.dwattr $C$DW$161, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$161, DW_AT_external

_buff$1:	.usect	".ebss",1024,1,0
_cmdbuff$2:	.usect	".ebss",1024,1,0
$C$DW$162	.dwtag  DW_TAG_variable
	.dwattr $C$DW$162, DW_AT_name("conf_data")
	.dwattr $C$DW$162, DW_AT_TI_symbol_name("_conf_data")
	.dwattr $C$DW$162, DW_AT_type(*$C$DW$T$143)
	.dwattr $C$DW$162, DW_AT_declaration
	.dwattr $C$DW$162, DW_AT_external

;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\bin\opt2000.exe C:\\Users\\antons\\AppData\\Local\\Temp\\{790E79F9-9107-4E05-BD42-E600731B2F74} C:\\Users\\antons\\AppData\\Local\\Temp\\{6C7A1A4C-F266-481B-9E20-6F8B6C6AAFC9} 
;	C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\bin\ac2000.exe -@C:\\Users\\antons\\AppData\\Local\\Temp\\{647ADBA4-2F99-4420-89F0-B732AAE5C388} 
	.sect	".text"
	.clink
	.global	_update_units

$C$DW$163	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$163, DW_AT_name("update_units")
	.dwattr $C$DW$163, DW_AT_low_pc(_update_units)
	.dwattr $C$DW$163, DW_AT_high_pc(0x00)
	.dwattr $C$DW$163, DW_AT_TI_symbol_name("_update_units")
	.dwattr $C$DW$163, DW_AT_external
	.dwattr $C$DW$163, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$163, DW_AT_TI_begin_line(0x177a)
	.dwattr $C$DW$163, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$163, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 6010,column 25,is_stmt,address _update_units,isa 0

	.dwfde $C$DW$CIE, _update_units
$C$DW$164	.dwtag  DW_TAG_variable
	.dwattr $C$DW$164, DW_AT_name("buff")
	.dwattr $C$DW$164, DW_AT_TI_symbol_name("_buff$8")
	.dwattr $C$DW$164, DW_AT_type(*$C$DW$T$379)
	.dwattr $C$DW$164, DW_AT_location[DW_OP_addr _buff$8]

;----------------------------------------------------------------------
; 6010 | void update_units(void) {                                              
; 6012 | int l;                                                                 
; 6013 | static char buff[8];                                                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _update_units                 FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            3 Parameter,  3 Auto,  6 SOE     *
;***************************************************************

_update_units:
;* AR3   assigned to $O$C1
;* AR4   assigned to $O$C2
;* AR3   assigned to $O$C3
;* AR1   assigned to $O$U4
;* AR2   assigned to $O$U9
;* AR1   assigned to $O$U3
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 6015,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 6015 | lcd_clear();                                                           
; 6016 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
$C$DW$165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$165, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$165, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |6015| 
        ; call occurs [#_lcd_clear] ; [] |6015| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
        MOV       *-SP[4],#3            ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[6],XAR4          ; [CPU_] 
        ADD       ACC,#773 << 2         ; [CPU_] 
        MOVL      XAR2,ACC              ; [CPU_] 
        MOVB      XAR1,#0               ; [CPU_] 
$C$L1:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 6017,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6017 | lcd_puts((char*) LPV[conf_data.vfd[l].what], 20 * l);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#_LPV            ; [CPU_U] |6017| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |6017| 
        ADDL      XAR4,ACC              ; [CPU_] |6017| 
        MOV       AL,AR1                ; [CPU_] |6017| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6017| 
$C$DW$166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$166, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$166, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6017| 
        ; call occurs [#_lcd_puts] ; [] |6017| 
	.dwpsn	file "../Source/prod.c",line 6018,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6018 | switch (conf_data.vfd[l].what) {                                       
; 6019 | case VFD_LOAD:                                                         
; 6020 | case VFD_PEAK:                                                         
; 6021 | case VFD_VALL:                                                         
; 6022 | case VFD_POSI:                                                         
; 6023 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6018| 
        CMPB      AL,#4                 ; [CPU_] |6018| 
        B         $C$L2,LOS             ; [CPU_] |6018| 
        ; branchcc occurs ; [] |6018| 
        CMPB      AL,#5                 ; [CPU_] |6018| 
        B         $C$L8,EQ              ; [CPU_] |6018| 
        ; branchcc occurs ; [] |6018| 
        CMPB      AL,#6                 ; [CPU_] |6018| 
        B         $C$L7,EQ              ; [CPU_] |6018| 
        ; branchcc occurs ; [] |6018| 
        B         $C$L10,UNC            ; [CPU_] |6018| 
        ; branch occurs ; [] |6018| 
$C$L2:    
	.dwpsn	file "../Source/prod.c",line 6024,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6024 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6024| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6024| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6024| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6024| 
        ADDB      AL,#1                 ; [CPU_] |6024| 
        MOVL      XAR4,XAR3             ; [CPU_] |6024| 
        MOV       *-SP[3],AL            ; [CPU_] |6024| 
$C$DW$167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$167, DW_AT_name("_sprintf")
	.dwattr $C$DW$167, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6024| 
        ; call occurs [#_sprintf] ; [] |6024| 
	.dwpsn	file "../Source/prod.c",line 6025,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6025 | lcd_puts(buff, 4 + 20 * l);                                            
;----------------------------------------------------------------------
        MOVB      AL,#4                 ; [CPU_] |6025| 
        ADD       AL,AR1                ; [CPU_] |6025| 
        MOVL      XAR4,XAR3             ; [CPU_] |6025| 
$C$DW$168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$168, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$168, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6025| 
        ; call occurs [#_lcd_puts] ; [] |6025| 
	.dwpsn	file "../Source/prod.c",line 6026,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6026 | if (autoid[conf_data.vfd[l].ch]) {                                     
;----------------------------------------------------------------------
        MOVZ      AR0,*+XAR2[1]         ; [CPU_] |6026| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |6026| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6026| 
        B         $C$L3,EQ              ; [CPU_] |6026| 
        ; branchcc occurs ; [] |6026| 
	.dwpsn	file "../Source/prod.c",line 6027,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6027 | lcd_puts("*", 6 + 20 * l);                                             
;----------------------------------------------------------------------
        MOVB      AL,#6                 ; [CPU_] |6027| 
        MOVL      XAR4,#$C$FSL4         ; [CPU_U] |6027| 
        ADD       AL,AR1                ; [CPU_] |6027| 
$C$DW$169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$169, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$169, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6027| 
        ; call occurs [#_lcd_puts] ; [] |6027| 
$C$L3:    
	.dwpsn	file "../Source/prod.c",line 6030,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6030 | if ( VFD_POSI == conf_data.vfd[l].what) {                              
; 6031 |         lcd_puts("IN", 18 + 20 * l);                                   
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6030| 
        CMPB      AL,#3                 ; [CPU_] |6030| 
        B         $C$L6,EQ              ; [CPU_] |6030| 
        ; branchcc occurs ; [] |6030| 
	.dwpsn	file "../Source/prod.c",line 6032,column 11,is_stmt,isa 0
;----------------------------------------------------------------------
; 6032 | } else if ( VFD_VELO == conf_data.vfd[l].what) {                       
; 6033 |         lcd_puts("IPM", 17 + 20 * l);                                  
; 6034 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |6032| 
        CMPB      AL,#4                 ; [CPU_] |6032| 
        B         $C$L5,EQ              ; [CPU_] |6032| 
        ; branchcc occurs ; [] |6032| 
	.dwpsn	file "../Source/prod.c",line 6035,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 6035 | lcd_puts(                                                              
; 6036 |                 (char*) UNITS[0x0f                                     
; 6037 |                                 & conf_data.sensor[conf_data.ch[conf_da
;     | ta.vfd[l].ch].ci].ounit],                                              
; 6038 |                 18 + 20 * l);                                          
; 6040 | break;                                                                 
; 6041 | case VFD_LIMIT:                                                        
; 6042 | sprintf(buff, " %u", conf_data.vfd[l].ch + 1);                         
; 6043 | lcd_puts(buff, 5 + 20 * l);                                            
; 6044 | break;                                                                 
; 6045 | case VFD_TEMP:                                                         
; 6046 | #if(VFD==1)                                                            
; 6047 | buff[0] = 0xb0;                                                        
; 6048 | #else //(VFD=2)                                                        
;----------------------------------------------------------------------
        MOVL      XAR6,*-SP[6]          ; [CPU_] |6035| 
        MOV       T,#10                 ; [CPU_] |6035| 
        MPYXU     ACC,T,*+XAR2[1]       ; [CPU_] |6035| 
        ADDL      ACC,XAR6              ; [CPU_] |6035| 
        MOVL      XAR4,ACC              ; [CPU_] |6035| 
        MOVB      XAR0,#42              ; [CPU_] |6035| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |6035| 
        MPYB      ACC,T,#152            ; [CPU_] |6035| 
        ADDL      ACC,XAR6              ; [CPU_] |6035| 
        MOVL      XAR4,ACC              ; [CPU_] |6035| 
        MOVB      XAR0,#95              ; [CPU_] |6035| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |6035| 
        ANDB      AL,#0x0f              ; [CPU_] |6035| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |6035| 
        MOV       ACC,AL << 1           ; [CPU_] |6035| 
        ADDL      XAR4,ACC              ; [CPU_] |6035| 
        MOVL      XAR4,*+XAR4[0]        ; [CPU_] |6035| 
$C$L4:    
        MOVB      AL,#18                ; [CPU_] |6035| 
        B         $C$L9,UNC             ; [CPU_] |6035| 
        ; branch occurs ; [] |6035| 
$C$L5:    
	.dwpsn	file "../Source/prod.c",line 6033,column 5,is_stmt,isa 0
        MOVB      AL,#17                ; [CPU_] |6033| 
        MOVL      XAR4,#$C$FSL2         ; [CPU_U] |6033| 
	.dwpsn	file "../Source/prod.c",line 6034,column 4,is_stmt,isa 0
        B         $C$L9,UNC             ; [CPU_] |6034| 
        ; branch occurs ; [] |6034| 
$C$L6:    
	.dwpsn	file "../Source/prod.c",line 6031,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL5         ; [CPU_U] |6031| 
	.dwpsn	file "../Source/prod.c",line 6032,column 4,is_stmt,isa 0
        B         $C$L4,UNC             ; [CPU_] |6032| 
        ; branch occurs ; [] |6032| 
$C$L7:    
	.dwpsn	file "../Source/prod.c",line 6049,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6049 | buff[0] = 0xdf;                                                        
; 6050 | #endif                                                                 
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$8         ; [CPU_U] |6049| 
        MOVB      *+XAR4[0],#223,UNC    ; [CPU_] |6049| 
	.dwpsn	file "../Source/prod.c",line 6051,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6051 | buff[1] = 'F';                                                         
;----------------------------------------------------------------------
        MOVB      *+XAR4[1],#70,UNC     ; [CPU_] |6051| 
	.dwpsn	file "../Source/prod.c",line 6052,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6052 | buff[2] = '\0';                                                        
; 6053 | lcd_puts(buff, 18 + 20 * l);                                           
;----------------------------------------------------------------------
        MOV       *+XAR4[2],#0          ; [CPU_] |6052| 
	.dwpsn	file "../Source/prod.c",line 6054,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6054 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L4,UNC             ; [CPU_] |6054| 
        ; branch occurs ; [] |6054| 
$C$L8:    
	.dwpsn	file "../Source/prod.c",line 6042,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL3         ; [CPU_U] |6042| 
        MOVL      XAR3,#_buff$8         ; [CPU_U] |6042| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6042| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |6042| 
        ADDB      AL,#1                 ; [CPU_] |6042| 
        MOVL      XAR4,XAR3             ; [CPU_] |6042| 
        MOV       *-SP[3],AL            ; [CPU_] |6042| 
$C$DW$170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$170, DW_AT_name("_sprintf")
	.dwattr $C$DW$170, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6042| 
        ; call occurs [#_sprintf] ; [] |6042| 
	.dwpsn	file "../Source/prod.c",line 6043,column 4,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |6043| 
        MOVL      XAR4,XAR3             ; [CPU_] |6043| 
$C$L9:    
        ADD       AL,AR1                ; [CPU_] |6043| 
$C$DW$171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$171, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$171, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |6043| 
        ; call occurs [#_lcd_puts] ; [] |6043| 
$C$L10:    
	.dwpsn	file "../Source/prod.c",line 6016,column 14,is_stmt,isa 0
        MOVZ      AR6,*-SP[4]           ; [CPU_] |6016| 
        SUBB      XAR6,#1               ; [CPU_U] |6016| 
        MOVZ      AR0,AR6               ; [CPU_] |6016| 
        ADDB      XAR2,#3               ; [CPU_] |6016| 
        ADDB      XAR1,#20              ; [CPU_] |6016| 
        MOV       *-SP[4],AR6           ; [CPU_] |6016| 
        CMP       AR0,#-1               ; [CPU_] |6016| 
        B         $C$L1,NEQ             ; [CPU_] |6016| 
        ; branchcc occurs ; [] |6016| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$172, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$163, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$163, DW_AT_TI_end_line(0x17a9)
	.dwattr $C$DW$163, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$163

	.sect	".text"
	.clink
	.global	_print_vfd

$C$DW$173	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$173, DW_AT_name("print_vfd")
	.dwattr $C$DW$173, DW_AT_low_pc(_print_vfd)
	.dwattr $C$DW$173, DW_AT_high_pc(0x00)
	.dwattr $C$DW$173, DW_AT_TI_symbol_name("_print_vfd")
	.dwattr $C$DW$173, DW_AT_external
	.dwattr $C$DW$173, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$173, DW_AT_TI_begin_line(0x1705)
	.dwattr $C$DW$173, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$173, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5893,column 22,is_stmt,address _print_vfd,isa 0

	.dwfde $C$DW$CIE, _print_vfd
$C$DW$174	.dwtag  DW_TAG_variable
	.dwattr $C$DW$174, DW_AT_name("buff")
	.dwattr $C$DW$174, DW_AT_TI_symbol_name("_buff$5")
	.dwattr $C$DW$174, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$174, DW_AT_location[DW_OP_addr _buff$5]

;----------------------------------------------------------------------
; 5893 | void print_vfd(void) {                                                 
; 5894 | int l;                                                                 
; 5895 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_vfd                    FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_vfd:
;* AR1   assigned to _l
$C$DW$175	.dwtag  DW_TAG_variable
	.dwattr $C$DW$175, DW_AT_name("l")
	.dwattr $C$DW$175, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$175, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$175, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to $O$K21
;* AR2   assigned to $O$U7
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5897,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5897 | scia_puts("\r\nDisplay Settings:\r\n");                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL6         ; [CPU_U] |5897| 
$C$DW$176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5897| 
        ; call occurs [#_scia_puts] ; [] |5897| 
	.dwpsn	file "../Source/prod.c",line 5898,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5898 | for (l = 0; l < VFD_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5898| 
        MOVL      XAR2,#_conf_data+3092 ; [CPU_U] 
        MOVL      XAR3,#_buff$5         ; [CPU_U] 
$C$L11:    
	.dwpsn	file "../Source/prod.c",line 5899,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5899 | sprintf(buff, "  Line %u: %s", l + 1, LPV[conf_data.vfd[l].what]);     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL7         ; [CPU_U] |5899| 
        MOVB      AL,#1                 ; [CPU_] |5899| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5899| 
        ADD       AL,AR1                ; [CPU_] |5899| 
        MOV       *-SP[3],AL            ; [CPU_] |5899| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5899| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5899| 
        ADDL      XAR4,ACC              ; [CPU_] |5899| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5899| 
        MOVL      XAR4,XAR3             ; [CPU_] |5899| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5899| 
$C$DW$177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$177, DW_AT_name("_sprintf")
	.dwattr $C$DW$177, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5899| 
        ; call occurs [#_sprintf] ; [] |5899| 
	.dwpsn	file "../Source/prod.c",line 5900,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5900 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5900| 
$C$DW$178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$178, DW_AT_name("_scia_puts")
	.dwattr $C$DW$178, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5900| 
        ; call occurs [#_scia_puts] ; [] |5900| 
	.dwpsn	file "../Source/prod.c",line 5902,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5902 | switch (conf_data.vfd[l].what) {                                       
; 5903 | case VFD_LOAD:                                                         
; 5904 | case VFD_PEAK:                                                         
; 5905 | case VFD_VALL:                                                         
; 5906 | case VFD_POSI:                                                         
; 5907 | case VFD_VELO:                                                         
; 5908 |         sprintf(buff, " channel %u with %u digits after decimal point",
; 5909 |                         conf_data.vfd[l].ch + 1, conf_data.vfd[l].adec)
;     | ;                                                                      
; 5910 |         scia_puts(buff);                                               
; 5911 |         break;                                                         
; 5912 | case VFD_LIMIT:                                                        
; 5913 |         sprintf(buff, " channel %u", conf_data.vfd[l].ch + 1);         
; 5914 |         scia_puts(buff);                                               
; 5915 |         break;                                                         
; 5916 | case VFD_TEMP:                                                         
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5902| 
        CMPB      AL,#4                 ; [CPU_] |5902| 
        B         $C$L13,LOS            ; [CPU_] |5902| 
        ; branchcc occurs ; [] |5902| 
        CMPB      AL,#5                 ; [CPU_] |5902| 
        B         $C$L12,EQ             ; [CPU_] |5902| 
        ; branchcc occurs ; [] |5902| 
        CMPB      AL,#6                 ; [CPU_] |5902| 
        B         $C$L16,NEQ            ; [CPU_] |5902| 
        ; branchcc occurs ; [] |5902| 
	.dwpsn	file "../Source/prod.c",line 5917,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5917 | scia_puts(" Board temperature");                                       
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL8         ; [CPU_U] |5917| 
	.dwpsn	file "../Source/prod.c",line 5918,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5918 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L15,UNC            ; [CPU_] |5918| 
        ; branch occurs ; [] |5918| 
$C$L12:    
	.dwpsn	file "../Source/prod.c",line 5913,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL9         ; [CPU_U] |5913| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5913| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5913| 
        ADDB      AL,#1                 ; [CPU_] |5913| 
        MOV       *-SP[3],AL            ; [CPU_] |5913| 
	.dwpsn	file "../Source/prod.c",line 5915,column 4,is_stmt,isa 0
        B         $C$L14,UNC            ; [CPU_] |5915| 
        ; branch occurs ; [] |5915| 
$C$L13:    
	.dwpsn	file "../Source/prod.c",line 5908,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL10        ; [CPU_U] |5908| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5908| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5908| 
        ADDB      AL,#1                 ; [CPU_] |5908| 
        MOV       *-SP[3],AL            ; [CPU_] |5908| 
        MOV       AL,*+XAR2[2]          ; [CPU_] |5908| 
        MOV       *-SP[4],AL            ; [CPU_] |5908| 
$C$L14:    
        MOVL      XAR4,XAR3             ; [CPU_] |5908| 
$C$DW$179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$179, DW_AT_name("_sprintf")
	.dwattr $C$DW$179, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5908| 
        ; call occurs [#_sprintf] ; [] |5908| 
	.dwpsn	file "../Source/prod.c",line 5910,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5910| 
$C$L15:    
$C$DW$180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$180, DW_AT_name("_scia_puts")
	.dwattr $C$DW$180, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5910| 
        ; call occurs [#_scia_puts] ; [] |5910| 
$C$L16:    
	.dwpsn	file "../Source/prod.c",line 5920,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5920 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5920| 
$C$DW$181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$181, DW_AT_name("_scia_puts")
	.dwattr $C$DW$181, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5920| 
        ; call occurs [#_scia_puts] ; [] |5920| 
	.dwpsn	file "../Source/prod.c",line 5898,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5898| 
        ADDB      XAR2,#3               ; [CPU_] |5898| 
        MOV       AL,AR1                ; [CPU_] |5898| 
        CMPB      AL,#4                 ; [CPU_] |5898| 
        B         $C$L11,LT             ; [CPU_] |5898| 
        ; branchcc occurs ; [] |5898| 
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$182, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$173, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$173, DW_AT_TI_end_line(0x1722)
	.dwattr $C$DW$173, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$173

	.sect	".text"
	.clink
	.global	_print_sensor

$C$DW$183	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$183, DW_AT_name("print_sensor")
	.dwattr $C$DW$183, DW_AT_low_pc(_print_sensor)
	.dwattr $C$DW$183, DW_AT_high_pc(0x00)
	.dwattr $C$DW$183, DW_AT_TI_symbol_name("_print_sensor")
	.dwattr $C$DW$183, DW_AT_external
	.dwattr $C$DW$183, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$183, DW_AT_TI_begin_line(0x16ae)
	.dwattr $C$DW$183, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$183, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5806,column 27,is_stmt,address _print_sensor,isa 0

	.dwfde $C$DW$CIE, _print_sensor
$C$DW$184	.dwtag  DW_TAG_variable
	.dwattr $C$DW$184, DW_AT_name("buff")
	.dwattr $C$DW$184, DW_AT_TI_symbol_name("_buff$4")
	.dwattr $C$DW$184, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$184, DW_AT_location[DW_OP_addr _buff$4]

$C$DW$185	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$185, DW_AT_name("ss")
	.dwattr $C$DW$185, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$185, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$185, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_sensor                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            6 Parameter,  6 Auto,  6 SOE     *
;***************************************************************

_print_sensor:
;* AR2   assigned to $O$C3
;* AR2   assigned to $O$K5
;* AR1   assigned to $O$K15
;* AR3   assigned to $O$K4
;* T     assigned to _ss
$C$DW$186	.dwtag  DW_TAG_variable
	.dwattr $C$DW$186, DW_AT_name("ss")
	.dwattr $C$DW$186, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$186, DW_AT_type(*$C$DW$T$199)
	.dwattr $C$DW$186, DW_AT_location[DW_OP_reg22]

;* AL    assigned to _j
$C$DW$187	.dwtag  DW_TAG_variable
	.dwattr $C$DW$187, DW_AT_name("j")
	.dwattr $C$DW$187, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$187, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$187, DW_AT_location[DW_OP_reg0]

$C$DW$188	.dwtag  DW_TAG_variable
	.dwattr $C$DW$188, DW_AT_name("j")
	.dwattr $C$DW$188, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$188, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$188, DW_AT_location[DW_OP_breg20 -7]

$C$DW$189	.dwtag  DW_TAG_variable
	.dwattr $C$DW$189, DW_AT_name("j")
	.dwattr $C$DW$189, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$189, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$189, DW_AT_location[DW_OP_breg20 -7]

$C$DW$190	.dwtag  DW_TAG_variable
	.dwattr $C$DW$190, DW_AT_name("j")
	.dwattr $C$DW$190, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$190, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$190, DW_AT_location[DW_OP_breg20 -7]

$C$DW$191	.dwtag  DW_TAG_variable
	.dwattr $C$DW$191, DW_AT_name("j")
	.dwattr $C$DW$191, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$191, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$191, DW_AT_location[DW_OP_breg20 -7]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
;----------------------------------------------------------------------
; 5806 | void print_sensor(int ss) {                                            
; 5807 | int j;                                                                 
; 5808 | static char buff[100];                                                 
; 5810 | ////                                                                   
;----------------------------------------------------------------------
        MOV       T,AL                  ; [CPU_] |5806| 
	.dwpsn	file "../Source/prod.c",line 5811,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5811 | if (conf_data.sensor[ss].method == MD_UNCALED) {                       
; 5812 |         scia_puts("  Sensor has not been calibrated.\r\n");            
; 5813 | } else {                                                               
;----------------------------------------------------------------------
        MOVL      XAR3,#_conf_data      ; [CPU_U] |5811| 
        MPYB      P,T,#152              ; [CPU_] |5811| 
        MOVL      ACC,XAR3              ; [CPU_] |5811| 
        ADDL      ACC,P                 ; [CPU_] |5811| 
        MOVL      XAR2,ACC              ; [CPU_] |5811| 
        MOVB      XAR0,#88              ; [CPU_] |5811| 
        MOVL      *-SP[12],P            ; [CPU_] |5811| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5811| 
        B         $C$L28,EQ             ; [CPU_] |5811| 
        ; branchcc occurs ; [] |5811| 
	.dwpsn	file "../Source/prod.c",line 5814,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5814 | sprintf(buff, "  Serial number:    %s\r\n", conf_data.sensor[ss].ssn); 
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL12        ; [CPU_U] |5814| 
        MOVL      ACC,XAR2              ; [CPU_] |5814| 
        MOVL      XAR1,#_buff$4         ; [CPU_U] |5814| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5814| 
        ADDB      ACC,#52               ; [CPU_] |5814| 
        MOVL      XAR4,XAR1             ; [CPU_] |5814| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5814| 
$C$DW$192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$192, DW_AT_name("_sprintf")
	.dwattr $C$DW$192, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5814| 
        ; call occurs [#_sprintf] ; [] |5814| 
	.dwpsn	file "../Source/prod.c",line 5815,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5815 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5815| 
$C$DW$193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$193, DW_AT_name("_scia_puts")
	.dwattr $C$DW$193, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5815| 
        ; call occurs [#_scia_puts] ; [] |5815| 
	.dwpsn	file "../Source/prod.c",line 5816,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5816 | sprintf(buff, "  Sensor name/label:%s\r\n", conf_data.sensor[ss].slbl);
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL13        ; [CPU_U] |5816| 
        MOVL      ACC,XAR2              ; [CPU_] |5816| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5816| 
        ADDB      ACC,#68               ; [CPU_] |5816| 
        MOVL      XAR4,XAR1             ; [CPU_] |5816| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5816| 
$C$DW$194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$194, DW_AT_name("_sprintf")
	.dwattr $C$DW$194, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5816| 
        ; call occurs [#_sprintf] ; [] |5816| 
	.dwpsn	file "../Source/prod.c",line 5817,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5817 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5817| 
$C$DW$195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5817| 
        ; call occurs [#_scia_puts] ; [] |5817| 
	.dwpsn	file "../Source/prod.c",line 5818,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5818 | sprintf(buff, "  Sensor TAGID:     %016llX\r\n",                       
; 5819 |                 conf_data.sensor[ss].tagid);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL14        ; [CPU_U] |5818| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5818| 
        MOVL      XAR4,XAR2             ; [CPU_] |5818| 
        ADDB      XAR4,#84              ; [CPU_] |5818| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5818| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |5818| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5818| 
        MOVL      XAR4,XAR1             ; [CPU_] |5818| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5818| 
$C$DW$196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$196, DW_AT_name("_sprintf")
	.dwattr $C$DW$196, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5818| 
        ; call occurs [#_sprintf] ; [] |5818| 
	.dwpsn	file "../Source/prod.c",line 5820,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5820 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5820| 
$C$DW$197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$197, DW_AT_name("_scia_puts")
	.dwattr $C$DW$197, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5820| 
        ; call occurs [#_scia_puts] ; [] |5820| 
	.dwpsn	file "../Source/prod.c",line 5821,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5821 | sprintf(buff, "  Cal method:       %s\r\n",                            
; 5822 |                 METHOD[conf_data.sensor[ss].method]);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL15        ; [CPU_U] |5821| 
        MOVB      XAR0,#88              ; [CPU_] |5821| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5821| 
        MOVL      XAR4,#_METHOD         ; [CPU_U] |5821| 
        MOV       ACC,*+XAR2[AR0] << 1  ; [CPU_] |5821| 
        ADDL      XAR4,ACC              ; [CPU_] |5821| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5821| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5821| 
        MOVL      XAR4,XAR1             ; [CPU_] |5821| 
$C$DW$198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$198, DW_AT_name("_sprintf")
	.dwattr $C$DW$198, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5821| 
        ; call occurs [#_sprintf] ; [] |5821| 
	.dwpsn	file "../Source/prod.c",line 5823,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5823 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5823| 
$C$DW$199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$199, DW_AT_name("_scia_puts")
	.dwattr $C$DW$199, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5823| 
        ; call occurs [#_scia_puts] ; [] |5823| 
	.dwpsn	file "../Source/prod.c",line 5824,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5824 | sprintf(buff, "  Calibrated unit:  %s        ",                        
; 5825 |                 UNITS[0x0f & conf_data.sensor[ss].unit]);              
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL16        ; [CPU_U] |5824| 
        MOVB      XAR0,#94              ; [CPU_] |5824| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5824| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5824| 
        MOVL      *-SP[10],XAR4         ; [CPU_] |5824| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5824| 
        ANDB      AL,#0x0f              ; [CPU_] |5824| 
        MOV       ACC,AL << 1           ; [CPU_] |5824| 
        ADDL      XAR4,ACC              ; [CPU_] |5824| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5824| 
        MOVL      XAR4,XAR1             ; [CPU_] |5824| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5824| 
$C$DW$200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$200, DW_AT_name("_sprintf")
	.dwattr $C$DW$200, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5824| 
        ; call occurs [#_sprintf] ; [] |5824| 
	.dwpsn	file "../Source/prod.c",line 5826,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5826 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5826| 
$C$DW$201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5826| 
        ; call occurs [#_scia_puts] ; [] |5826| 
	.dwpsn	file "../Source/prod.c",line 5827,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5827 | sprintf(buff, "  Output unit:      %s\r\n",                            
; 5828 |                 UNITS[0x0f & conf_data.sensor[ss].ounit]);             
;----------------------------------------------------------------------
        MOVB      XAR0,#95              ; [CPU_] |5827| 
        MOVL      XAR4,#$C$FSL17        ; [CPU_U] |5827| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5827| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5827| 
        MOVL      XAR6,*-SP[10]         ; [CPU_] |5827| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |5827| 
        MOV       ACC,AL << 1           ; [CPU_] |5827| 
        ADDL      ACC,XAR6              ; [CPU_] |5827| 
        MOVL      XAR4,ACC              ; [CPU_] |5827| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5827| 
        MOVL      XAR4,XAR1             ; [CPU_] |5827| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5827| 
$C$DW$202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$202, DW_AT_name("_sprintf")
	.dwattr $C$DW$202, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5827| 
        ; call occurs [#_sprintf] ; [] |5827| 
	.dwpsn	file "../Source/prod.c",line 5829,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5829 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5829| 
$C$DW$203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$203, DW_AT_name("_scia_puts")
	.dwattr $C$DW$203, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5829| 
        ; call occurs [#_scia_puts] ; [] |5829| 
	.dwpsn	file "../Source/prod.c",line 5830,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5830 | sprintf(buff, "  Unit scale:       %-10.5f",                           
; 5831 |                 conf_data.sensor[ss].ufactor);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL18        ; [CPU_U] |5830| 
        MOVB      XAR0,#96              ; [CPU_] |5830| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5830| 
        MOVL      XAR4,XAR1             ; [CPU_] |5830| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5830| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5830| 
$C$DW$204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$204, DW_AT_name("_sprintf")
	.dwattr $C$DW$204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5830| 
        ; call occurs [#_sprintf] ; [] |5830| 
	.dwpsn	file "../Source/prod.c",line 5832,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5832 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5832| 
$C$DW$205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5832| 
        ; call occurs [#_scia_puts] ; [] |5832| 
	.dwpsn	file "../Source/prod.c",line 5833,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5833 | sprintf(buff, "  Range:            %-10.5f\r\n",                       
; 5834 |                 conf_data.sensor[ss].range);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL19        ; [CPU_U] |5833| 
        MOVB      XAR0,#92              ; [CPU_] |5833| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5833| 
        MOVL      XAR4,XAR1             ; [CPU_] |5833| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5833| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5833| 
$C$DW$206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$206, DW_AT_name("_sprintf")
	.dwattr $C$DW$206, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5833| 
        ; call occurs [#_sprintf] ; [] |5833| 
	.dwpsn	file "../Source/prod.c",line 5835,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5835 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5835| 
$C$DW$207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$207, DW_AT_name("_scia_puts")
	.dwattr $C$DW$207, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5835| 
        ; call occurs [#_scia_puts] ; [] |5835| 
	.dwpsn	file "../Source/prod.c",line 5836,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5836 | sprintf(buff, "  Shunt:            %-10.5f",                           
; 5837 |                 conf_data.sensor[ss].shunt);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL20        ; [CPU_U] |5836| 
        MOVB      XAR0,#192             ; [CPU_] |5836| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5836| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5836| 
        MOVL      XAR4,XAR1             ; [CPU_] |5836| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5836| 
$C$DW$208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$208, DW_AT_name("_sprintf")
	.dwattr $C$DW$208, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5836| 
        ; call occurs [#_sprintf] ; [] |5836| 
	.dwpsn	file "../Source/prod.c",line 5838,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5838 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5838| 
$C$DW$209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$209, DW_AT_name("_scia_puts")
	.dwattr $C$DW$209, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5838| 
        ; call occurs [#_scia_puts] ; [] |5838| 
	.dwpsn	file "../Source/prod.c",line 5839,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5839 | sprintf(buff, "  Percent base:     %-10.5f\r\n",                       
; 5840 |                 conf_data.sensor[ss].base);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL21        ; [CPU_U] |5839| 
        MOVB      XAR0,#194             ; [CPU_] |5839| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5839| 
        MOVL      XAR4,XAR1             ; [CPU_] |5839| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5839| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5839| 
$C$DW$210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$210, DW_AT_name("_sprintf")
	.dwattr $C$DW$210, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5839| 
        ; call occurs [#_sprintf] ; [] |5839| 
	.dwpsn	file "../Source/prod.c",line 5841,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5841 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5841| 
$C$DW$211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5841| 
        ; call occurs [#_scia_puts] ; [] |5841| 
	.dwpsn	file "../Source/prod.c",line 5842,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5842 | sprintf(buff, "  DAC gain:         %-10.5f",                           
; 5843 |                 conf_data.sensor[ss].dacgain);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL22        ; [CPU_U] |5842| 
        MOVB      XAR0,#198             ; [CPU_] |5842| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5842| 
        MOVL      XAR4,XAR1             ; [CPU_] |5842| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5842| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5842| 
$C$DW$212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$212, DW_AT_name("_sprintf")
	.dwattr $C$DW$212, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5842| 
        ; call occurs [#_sprintf] ; [] |5842| 
	.dwpsn	file "../Source/prod.c",line 5844,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5844 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5844| 
$C$DW$213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$213, DW_AT_name("_scia_puts")
	.dwattr $C$DW$213, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5844| 
        ; call occurs [#_scia_puts] ; [] |5844| 
	.dwpsn	file "../Source/prod.c",line 5845,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5845 | sprintf(buff, "  DAC offset:       %-10.5f\r\n",                       
; 5846 |                 conf_data.sensor[ss].dacoff);                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL23        ; [CPU_U] |5845| 
        MOVB      XAR0,#200             ; [CPU_] |5845| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5845| 
        MOVL      XAR4,XAR1             ; [CPU_] |5845| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5845| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5845| 
$C$DW$214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$214, DW_AT_name("_sprintf")
	.dwattr $C$DW$214, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5845| 
        ; call occurs [#_sprintf] ; [] |5845| 
	.dwpsn	file "../Source/prod.c",line 5847,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5847 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5847| 
$C$DW$215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$215, DW_AT_name("_scia_puts")
	.dwattr $C$DW$215, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5847| 
        ; call occurs [#_scia_puts] ; [] |5847| 
	.dwpsn	file "../Source/prod.c",line 5849,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5849 | if ( MD_RUN_MAS == conf_data.sensor[ss].method) {                      
; 5850 |         sprintf(buff, "  Points:           %-10i\r\n",                 
; 5851 |                         conf_data.sensor[ss].points);                  
; 5852 |         scia_puts(buff);                                               
; 5854 |         scia_puts("  Point:");                                         
; 5855 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5856 |                 sprintf(buff, "%6i    ", j + 1);                       
; 5857 |                 scia_puts(buff);                                       
; 5859 |         scia_puts("\r\n  Mass: ");                                     
; 5860 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5861 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].mass[j]); 
; 5862 |                 scia_puts(buff);                                       
; 5864 |         scia_puts("\r\n  Count:");                                     
; 5865 |         for (j = 0; j < conf_data.sensor[ss].points; j++) {            
; 5866 |                 sprintf(buff, "%10li", conf_data.sensor[ss].adc[j]);   
; 5867 |                 scia_puts(buff);                                       
; 5869 |         scia_puts("\r\n  Slope:    ");                                 
; 5870 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5871 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].slope[j]);
; 5872 |                 scia_puts(buff);                                       
; 5874 |         scia_puts("\r\n  Intercept:");                                 
; 5875 |         for (j = 0; j < conf_data.sensor[ss].points - 1; j++) {        
; 5876 |                 sprintf(buff, "%10.5f", conf_data.sensor[ss].intercept[
;     | j]);                                                                   
; 5877 |                 scia_puts(buff);                                       
; 5879 |         scia_puts("\r\n");                                             
; 5880 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#88              ; [CPU_] |5849| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5849| 
        CMPB      AL,#2                 ; [CPU_] |5849| 
        B         $C$L17,EQ             ; [CPU_] |5849| 
        ; branchcc occurs ; [] |5849| 
	.dwpsn	file "../Source/prod.c",line 5881,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5881 | sprintf(buff, "  Slope:            %-10.5f",                           
; 5882 |                 conf_data.sensor[ss].slope[0]);                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL24        ; [CPU_U] |5881| 
        MOVB      XAR0,#148             ; [CPU_] |5881| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5881| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5881| 
        MOVL      XAR4,XAR1             ; [CPU_] |5881| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5881| 
$C$DW$216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$216, DW_AT_name("_sprintf")
	.dwattr $C$DW$216, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5881| 
        ; call occurs [#_sprintf] ; [] |5881| 
	.dwpsn	file "../Source/prod.c",line 5883,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5883 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5883| 
$C$DW$217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$217, DW_AT_name("_scia_puts")
	.dwattr $C$DW$217, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5883| 
        ; call occurs [#_scia_puts] ; [] |5883| 
	.dwpsn	file "../Source/prod.c",line 5884,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5884 | sprintf(buff, "  Intercept:        %-10.5f\r\n",                       
; 5885 |                 conf_data.sensor[ss].intercept[0]);                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL25        ; [CPU_U] |5884| 
        MOVB      XAR0,#170             ; [CPU_] |5884| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5884| 
        MOVL      XAR4,XAR1             ; [CPU_] |5884| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5884| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5884| 
$C$DW$218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$218, DW_AT_name("_sprintf")
	.dwattr $C$DW$218, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5884| 
        ; call occurs [#_sprintf] ; [] |5884| 
	.dwpsn	file "../Source/prod.c",line 5886,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5886 | scia_puts(buff);                                                       
; 5889 | ////                                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,XAR1             ; [CPU_] |5886| 
        B         $C$L29,UNC            ; [CPU_] |5886| 
        ; branch occurs ; [] |5886| 
$C$L17:    
	.dwpsn	file "../Source/prod.c",line 5850,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL26        ; [CPU_U] |5850| 
        MOVB      XAR0,#98              ; [CPU_] |5850| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5850| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5850| 
        MOVL      XAR4,XAR1             ; [CPU_] |5850| 
        MOV       *-SP[3],AL            ; [CPU_] |5850| 
$C$DW$219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$219, DW_AT_name("_sprintf")
	.dwattr $C$DW$219, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5850| 
        ; call occurs [#_sprintf] ; [] |5850| 
	.dwpsn	file "../Source/prod.c",line 5852,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5852| 
$C$DW$220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$220, DW_AT_name("_scia_puts")
	.dwattr $C$DW$220, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5852| 
        ; call occurs [#_scia_puts] ; [] |5852| 
	.dwpsn	file "../Source/prod.c",line 5854,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL27        ; [CPU_U] |5854| 
$C$DW$221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$221, DW_AT_name("_scia_puts")
	.dwattr $C$DW$221, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5854| 
        ; call occurs [#_scia_puts] ; [] |5854| 
	.dwpsn	file "../Source/prod.c",line 5855,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5855| 
$C$L18:    
	.dwpsn	file "../Source/prod.c",line 5855,column 16,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |5855| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5855| 
        B         $C$L27,LT             ; [CPU_] |5855| 
        ; branchcc occurs ; [] |5855| 
	.dwpsn	file "../Source/prod.c",line 5859,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL28        ; [CPU_U] |5859| 
$C$DW$222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$222, DW_AT_name("_scia_puts")
	.dwattr $C$DW$222, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5859| 
        ; call occurs [#_scia_puts] ; [] |5859| 
	.dwpsn	file "../Source/prod.c",line 5860,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5860| 
        MOV       *-SP[7],AL            ; [CPU_] |5860| 
$C$L19:    
	.dwpsn	file "../Source/prod.c",line 5860,column 16,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |5860| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5860| 
        B         $C$L26,LT             ; [CPU_] |5860| 
        ; branchcc occurs ; [] |5860| 
	.dwpsn	file "../Source/prod.c",line 5864,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL29        ; [CPU_U] |5864| 
$C$DW$223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$223, DW_AT_name("_scia_puts")
	.dwattr $C$DW$223, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5864| 
        ; call occurs [#_scia_puts] ; [] |5864| 
	.dwpsn	file "../Source/prod.c",line 5865,column 9,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5865| 
        MOV       *-SP[7],AL            ; [CPU_] |5865| 
$C$L20:    
	.dwpsn	file "../Source/prod.c",line 5865,column 16,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |5865| 
        CMP       AL,*+XAR2[AR0]        ; [CPU_] |5865| 
        B         $C$L25,LT             ; [CPU_] |5865| 
        ; branchcc occurs ; [] |5865| 
	.dwpsn	file "../Source/prod.c",line 5869,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL30        ; [CPU_U] |5869| 
$C$DW$224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$224, DW_AT_name("_scia_puts")
	.dwattr $C$DW$224, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5869| 
        ; call occurs [#_scia_puts] ; [] |5869| 
	.dwpsn	file "../Source/prod.c",line 5870,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5870| 
$C$L21:    
	.dwpsn	file "../Source/prod.c",line 5870,column 16,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |5870| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5870| 
        ADDB      AL,#-1                ; [CPU_] |5870| 
        CMP       AL,*-SP[7]            ; [CPU_] |5870| 
        B         $C$L24,GT             ; [CPU_] |5870| 
        ; branchcc occurs ; [] |5870| 
	.dwpsn	file "../Source/prod.c",line 5874,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL31        ; [CPU_U] |5874| 
$C$DW$225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$225, DW_AT_name("_scia_puts")
	.dwattr $C$DW$225, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5874| 
        ; call occurs [#_scia_puts] ; [] |5874| 
	.dwpsn	file "../Source/prod.c",line 5875,column 9,is_stmt,isa 0
        MOV       *-SP[7],#0            ; [CPU_] |5875| 
$C$L22:    
	.dwpsn	file "../Source/prod.c",line 5875,column 16,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |5875| 
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5875| 
        ADDB      AL,#-1                ; [CPU_] |5875| 
        CMP       AL,*-SP[7]            ; [CPU_] |5875| 
        B         $C$L23,GT             ; [CPU_] |5875| 
        ; branchcc occurs ; [] |5875| 
	.dwpsn	file "../Source/prod.c",line 5879,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5879| 
	.dwpsn	file "../Source/prod.c",line 5880,column 3,is_stmt,isa 0
        B         $C$L29,UNC            ; [CPU_] |5880| 
        ; branch occurs ; [] |5880| 
$C$L23:    
	.dwpsn	file "../Source/prod.c",line 5876,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5876| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5876| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5876| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5876| 
        MOV       ACC,AL << 1           ; [CPU_] |5876| 
        ADDL      ACC,XAR6              ; [CPU_] |5876| 
        ADDL      ACC,XAR3              ; [CPU_] |5876| 
        MOVL      XAR4,ACC              ; [CPU_] |5876| 
        MOVB      XAR0,#170             ; [CPU_] |5876| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5876| 
        MOVL      XAR4,XAR1             ; [CPU_] |5876| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5876| 
$C$DW$226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$226, DW_AT_name("_sprintf")
	.dwattr $C$DW$226, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5876| 
        ; call occurs [#_sprintf] ; [] |5876| 
	.dwpsn	file "../Source/prod.c",line 5877,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5877| 
$C$DW$227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$227, DW_AT_name("_scia_puts")
	.dwattr $C$DW$227, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5877| 
        ; call occurs [#_scia_puts] ; [] |5877| 
	.dwpsn	file "../Source/prod.c",line 5875,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5875| 
        B         $C$L22,UNC            ; [CPU_] |5875| 
        ; branch occurs ; [] |5875| 
$C$L24:    
	.dwpsn	file "../Source/prod.c",line 5871,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5871| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5871| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5871| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[7]            ; [CPU_] |5871| 
        MOV       ACC,AL << 1           ; [CPU_] |5871| 
        ADDL      ACC,XAR6              ; [CPU_] |5871| 
        ADDL      ACC,XAR3              ; [CPU_] |5871| 
        MOVL      XAR4,ACC              ; [CPU_] |5871| 
        MOVB      XAR0,#148             ; [CPU_] |5871| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5871| 
        MOVL      XAR4,XAR1             ; [CPU_] |5871| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5871| 
$C$DW$228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$228, DW_AT_name("_sprintf")
	.dwattr $C$DW$228, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5871| 
        ; call occurs [#_sprintf] ; [] |5871| 
	.dwpsn	file "../Source/prod.c",line 5872,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5872| 
$C$DW$229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$229, DW_AT_name("_scia_puts")
	.dwattr $C$DW$229, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5872| 
        ; call occurs [#_scia_puts] ; [] |5872| 
	.dwpsn	file "../Source/prod.c",line 5870,column 53,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5870| 
        B         $C$L21,UNC            ; [CPU_] |5870| 
        ; branch occurs ; [] |5870| 
$C$L25:    
	.dwpsn	file "../Source/prod.c",line 5866,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL33        ; [CPU_U] |5866| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5866| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5866| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5866| 
        ADDL      ACC,XAR6              ; [CPU_] |5866| 
        ADDL      ACC,XAR3              ; [CPU_] |5866| 
        MOVL      XAR4,ACC              ; [CPU_] |5866| 
        MOVB      XAR0,#124             ; [CPU_] |5866| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5866| 
        MOVL      XAR4,XAR1             ; [CPU_] |5866| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5866| 
$C$DW$230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$230, DW_AT_name("_sprintf")
	.dwattr $C$DW$230, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5866| 
        ; call occurs [#_sprintf] ; [] |5866| 
	.dwpsn	file "../Source/prod.c",line 5867,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5867| 
$C$DW$231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$231, DW_AT_name("_scia_puts")
	.dwattr $C$DW$231, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5867| 
        ; call occurs [#_scia_puts] ; [] |5867| 
	.dwpsn	file "../Source/prod.c",line 5865,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5865| 
	.dwpsn	file "../Source/prod.c",line 5867,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5867| 
	.dwpsn	file "../Source/prod.c",line 5865,column 49,is_stmt,isa 0
        B         $C$L20,UNC            ; [CPU_] |5865| 
        ; branch occurs ; [] |5865| 
$C$L26:    
	.dwpsn	file "../Source/prod.c",line 5861,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |5861| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5861| 
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5861| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |5861| 
        ADDL      ACC,XAR6              ; [CPU_] |5861| 
        ADDL      ACC,XAR3              ; [CPU_] |5861| 
        MOVL      XAR4,ACC              ; [CPU_] |5861| 
        MOVB      XAR0,#100             ; [CPU_] |5861| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |5861| 
        MOVL      XAR4,XAR1             ; [CPU_] |5861| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5861| 
$C$DW$232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$232, DW_AT_name("_sprintf")
	.dwattr $C$DW$232, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5861| 
        ; call occurs [#_sprintf] ; [] |5861| 
	.dwpsn	file "../Source/prod.c",line 5862,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5862| 
$C$DW$233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5862| 
        ; call occurs [#_scia_puts] ; [] |5862| 
	.dwpsn	file "../Source/prod.c",line 5860,column 49,is_stmt,isa 0
        INC       *-SP[7]               ; [CPU_] |5860| 
	.dwpsn	file "../Source/prod.c",line 5862,column 5,is_stmt,isa 0
        MOV       AL,*-SP[7]            ; [CPU_] |5862| 
	.dwpsn	file "../Source/prod.c",line 5860,column 49,is_stmt,isa 0
        B         $C$L19,UNC            ; [CPU_] |5860| 
        ; branch occurs ; [] |5860| 
$C$L27:    
	.dwpsn	file "../Source/prod.c",line 5856,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |5856| 
        MOVL      XAR4,#$C$FSL34        ; [CPU_U] |5856| 
        ADD       AH,AL                 ; [CPU_] |5856| 
        MOV       *-SP[7],AH            ; [CPU_] |5856| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5856| 
        MOVL      XAR4,XAR1             ; [CPU_] |5856| 
        MOV       *-SP[3],AH            ; [CPU_] |5856| 
$C$DW$234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$234, DW_AT_name("_sprintf")
	.dwattr $C$DW$234, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5856| 
        ; call occurs [#_sprintf] ; [] |5856| 
	.dwpsn	file "../Source/prod.c",line 5857,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |5857| 
$C$DW$235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$235, DW_AT_name("_scia_puts")
	.dwattr $C$DW$235, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5857| 
        ; call occurs [#_scia_puts] ; [] |5857| 
        MOV       AL,*-SP[7]            ; [CPU_] |5857| 
	.dwpsn	file "../Source/prod.c",line 5855,column 49,is_stmt,isa 0
        B         $C$L18,UNC            ; [CPU_] |5855| 
        ; branch occurs ; [] |5855| 
$C$L28:    
	.dwpsn	file "../Source/prod.c",line 5812,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL35        ; [CPU_U] |5812| 
$C$L29:    
$C$DW$236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$236, DW_AT_name("_scia_puts")
	.dwattr $C$DW$236, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5812| 
        ; call occurs [#_scia_puts] ; [] |5812| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$237, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$183, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$183, DW_AT_TI_end_line(0x1702)
	.dwattr $C$DW$183, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$183

	.sect	".text"
	.clink
	.global	_print_limits

$C$DW$238	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$238, DW_AT_name("print_limits")
	.dwattr $C$DW$238, DW_AT_low_pc(_print_limits)
	.dwattr $C$DW$238, DW_AT_high_pc(0x00)
	.dwattr $C$DW$238, DW_AT_TI_symbol_name("_print_limits")
	.dwattr $C$DW$238, DW_AT_external
	.dwattr $C$DW$238, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$238, DW_AT_TI_begin_line(0x1749)
	.dwattr $C$DW$238, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$238, DW_AT_TI_max_frame_size(-20)
	.dwpsn	file "../Source/prod.c",line 5961,column 25,is_stmt,address _print_limits,isa 0

	.dwfde $C$DW$CIE, _print_limits
$C$DW$239	.dwtag  DW_TAG_variable
	.dwattr $C$DW$239, DW_AT_name("buff")
	.dwattr $C$DW$239, DW_AT_TI_symbol_name("_buff$7")
	.dwattr $C$DW$239, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$239, DW_AT_location[DW_OP_addr _buff$7]

;----------------------------------------------------------------------
; 5961 | void print_limits(void) {                                              
; 5962 | int ii;                                                                
; 5963 | static char buff[64];                                                  
; 5964 | const char *up;                         // unit point                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_limits                 FR SIZE:  18           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  4 Auto,  6 SOE     *
;***************************************************************

_print_limits:
;* AR6   assigned to $O$S1
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S3
$C$DW$240	.dwtag  DW_TAG_variable
	.dwattr $C$DW$240, DW_AT_name("ii")
	.dwattr $C$DW$240, DW_AT_TI_symbol_name("_ii")
	.dwattr $C$DW$240, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$240, DW_AT_location[DW_OP_breg20 -9]

;* AR3   assigned to _up
$C$DW$241	.dwtag  DW_TAG_variable
	.dwattr $C$DW$241, DW_AT_name("up")
	.dwattr $C$DW$241, DW_AT_TI_symbol_name("_up")
	.dwattr $C$DW$241, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$241, DW_AT_location[DW_OP_reg10]

;* AL    assigned to $O$P4
;* AR1   assigned to $O$U13
;* AR2   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -20
	.dwpsn	file "../Source/prod.c",line 5966,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5966 | scia_puts("\r\nLIMIT Settings:\r\n");                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL36        ; [CPU_U] |5966| 
$C$DW$242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5966| 
        ; call occurs [#_scia_puts] ; [] |5966| 
        MOVL      XAR2,#_buff$7         ; [CPU_U] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5968,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5968 | for (ii = 0; ii < LIM_MAX; ii++) {                                     
;----------------------------------------------------------------------
        MOV       *-SP[9],#0            ; [CPU_] |5968| 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      *-SP[12],XAR4         ; [CPU_] 
        ADD       ACC,#197 << 4         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L30:    
	.dwpsn	file "../Source/prod.c",line 5969,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5969 | sprintf(buff, "LIMIT %u: ", ii + 1);                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL37        ; [CPU_U] |5969| 
        MOVB      AL,#1                 ; [CPU_] |5969| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5969| 
        ADD       AL,*-SP[9]            ; [CPU_] |5969| 
        MOVL      XAR4,XAR2             ; [CPU_] |5969| 
        MOV       *-SP[3],AL            ; [CPU_] |5969| 
$C$DW$243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$243, DW_AT_name("_sprintf")
	.dwattr $C$DW$243, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5969| 
        ; call occurs [#_sprintf] ; [] |5969| 
	.dwpsn	file "../Source/prod.c",line 5970,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5970 | scia_puts(buff);                                                       
; 5972 | if (conf_data.lim[ii].limit & LIM_ON) {                                
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5970| 
$C$DW$244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$244, DW_AT_name("_scia_puts")
	.dwattr $C$DW$244, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5970| 
        ; call occurs [#_scia_puts] ; [] |5970| 
	.dwpsn	file "../Source/prod.c",line 5974,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5974 | switch (conf_data.lim[ii].what) {                                      
; 5975 | case VFD_LOAD:                                                         
; 5976 | case VFD_PEAK:                                                         
; 5977 | case VFD_VALL:                                                         
; 5978 |         up =                                                           
; 5979 |                         UNITS[0x0f                                     
; 5980 |                                         & conf_data.sensor[conf_data.ch
;     | [conf_data.lim[ii].ch].ci].ounit];                                     
; 5981 |         break;                                                         
; 5982 | case VFD_POSI:                                                         
; 5983 |         up = POS_U;                                                    
; 5984 |         break;                                                         
; 5985 | case VFD_VELO:                                                         
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#7          ; [CPU_] |5974| 
        B         $C$L40,NTC            ; [CPU_] |5974| 
        ; branchcc occurs ; [] |5974| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5974| 
        CMPB      AL,#2                 ; [CPU_] |5974| 
        B         $C$L32,LOS            ; [CPU_] |5974| 
        ; branchcc occurs ; [] |5974| 
        CMPB      AL,#3                 ; [CPU_] |5974| 
        B         $C$L31,EQ             ; [CPU_] |5974| 
        ; branchcc occurs ; [] |5974| 
        CMPB      AL,#4                 ; [CPU_] |5974| 
        B         $C$L33,NEQ            ; [CPU_] |5974| 
        ; branchcc occurs ; [] |5974| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5986,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5986 | up = VEL_U;                                                            
;----------------------------------------------------------------------
        MOVL      XAR3,@_VEL_U          ; [CPU_] |5986| 
	.dwpsn	file "../Source/prod.c",line 5987,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5987 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L33,UNC            ; [CPU_] |5987| 
        ; branch occurs ; [] |5987| 
$C$L31:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5983,column 5,is_stmt,isa 0
        MOVL      XAR3,@_POS_U          ; [CPU_] |5983| 
	.dwpsn	file "../Source/prod.c",line 5984,column 5,is_stmt,isa 0
        B         $C$L33,UNC            ; [CPU_] |5984| 
        ; branch occurs ; [] |5984| 
$C$L32:    
	.dwpsn	file "../Source/prod.c",line 5978,column 5,is_stmt,isa 0
        MOVL      XAR6,*-SP[12]         ; [CPU_] |5978| 
        MOV       T,#10                 ; [CPU_] |5978| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |5978| 
        ADDL      ACC,XAR6              ; [CPU_] |5978| 
        MOVL      XAR4,ACC              ; [CPU_] |5978| 
        MOVB      XAR0,#42              ; [CPU_] |5978| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |5978| 
        MPYB      ACC,T,#152            ; [CPU_] |5978| 
        ADDL      ACC,XAR6              ; [CPU_] |5978| 
        MOVL      XAR4,ACC              ; [CPU_] |5978| 
        MOVB      XAR0,#95              ; [CPU_] |5978| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5978| 
        ANDB      AL,#0x0f              ; [CPU_] |5978| 
        MOVL      XAR4,#_UNITS          ; [CPU_U] |5978| 
        MOV       ACC,AL << 1           ; [CPU_] |5978| 
        ADDL      XAR4,ACC              ; [CPU_] |5978| 
        MOVL      XAR3,*+XAR4[0]        ; [CPU_] |5978| 
$C$L33:    
	.dwpsn	file "../Source/prod.c",line 5990,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5990 | sprintf(buff, "ON %s channel %u\r\n", LPV[conf_data.lim[ii].what],     
; 5991 |                 conf_data.lim[ii].ch + 1);                             
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL38        ; [CPU_U] |5990| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5990| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |5990| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5990| 
        ADDL      XAR4,ACC              ; [CPU_] |5990| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5990| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5990| 
        MOVL      XAR4,XAR2             ; [CPU_] |5990| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |5990| 
        ADDB      AL,#1                 ; [CPU_] |5990| 
        MOV       *-SP[5],AL            ; [CPU_] |5990| 
$C$DW$245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$245, DW_AT_name("_sprintf")
	.dwattr $C$DW$245, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5990| 
        ; call occurs [#_sprintf] ; [] |5990| 
	.dwpsn	file "../Source/prod.c",line 5992,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5992 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5992| 
$C$DW$246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$246, DW_AT_name("_scia_puts")
	.dwattr $C$DW$246, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5992| 
        ; call occurs [#_scia_puts] ; [] |5992| 
	.dwpsn	file "../Source/prod.c",line 5993,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5993 | sprintf(buff, "  Normal %s,  Latch %s, Trigger %s\r\n",                
; 5994 |                 (LIM_NC & conf_data.lim[ii].limit) ? "Closed" : "Open "
;     | ,                                                                      
; 5995 |                 (LIM_LA & conf_data.lim[ii].limit) ? "ON " : "OFF",    
; 5996 |                 (LIM_HL & conf_data.lim[ii].limit) ? ">" : "<");       
;----------------------------------------------------------------------
        TBIT      *+XAR1[2],#6          ; [CPU_] |5993| 
        B         $C$L34,TC             ; [CPU_] |5993| 
        ; branchcc occurs ; [] |5993| 
        MOVL      XAR6,#$C$FSL39        ; [CPU_U] |5993| 
        B         $C$L35,UNC            ; [CPU_] |5993| 
        ; branch occurs ; [] |5993| 
$C$L34:    
        MOVL      XAR6,#$C$FSL40        ; [CPU_U] |5993| 
$C$L35:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |5993| 
        B         $C$L36,TC             ; [CPU_] |5993| 
        ; branchcc occurs ; [] |5993| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |5993| 
        B         $C$L37,UNC            ; [CPU_] |5993| 
        ; branch occurs ; [] |5993| 
$C$L36:    
        MOVL      XAR5,#$C$FSL42        ; [CPU_U] |5993| 
$C$L37:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |5993| 
        B         $C$L38,TC             ; [CPU_] |5993| 
        ; branchcc occurs ; [] |5993| 
        MOVL      XAR4,#$C$FSL43        ; [CPU_U] |5993| 
        B         $C$L39,UNC            ; [CPU_] |5993| 
        ; branch occurs ; [] |5993| 
$C$L38:    
        MOVL      XAR4,#$C$FSL44        ; [CPU_U] |5993| 
$C$L39:    
        MOVL      XAR7,#$C$FSL45        ; [CPU_U] |5993| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5993| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5993| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |5993| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |5993| 
        MOVL      XAR4,XAR2             ; [CPU_] |5993| 
$C$DW$247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$247, DW_AT_name("_sprintf")
	.dwattr $C$DW$247, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5993| 
        ; call occurs [#_sprintf] ; [] |5993| 
	.dwpsn	file "../Source/prod.c",line 5997,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5997 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |5997| 
$C$DW$248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$248, DW_AT_name("_scia_puts")
	.dwattr $C$DW$248, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5997| 
        ; call occurs [#_scia_puts] ; [] |5997| 
	.dwpsn	file "../Source/prod.c",line 5998,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5998 | sprintf(buff, "  Limit value set:  %-9.5f%s",                          
; 5999 |                 conf_data.lim[ii].limits, up);                         
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL46        ; [CPU_U] |5998| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5998| 
        MOVL      XAR4,XAR2             ; [CPU_] |5998| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |5998| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5998| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |5998| 
$C$DW$249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$249, DW_AT_name("_sprintf")
	.dwattr $C$DW$249, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5998| 
        ; call occurs [#_sprintf] ; [] |5998| 
	.dwpsn	file "../Source/prod.c",line 6000,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6000 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6000| 
$C$DW$250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$250, DW_AT_name("_scia_puts")
	.dwattr $C$DW$250, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6000| 
        ; call occurs [#_scia_puts] ; [] |6000| 
	.dwpsn	file "../Source/prod.c",line 6001,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6001 | sprintf(buff, " reset:  %-9.5f%s\r\n", conf_data.lim[ii].limitr,       
; 6002 |                 up);                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL47        ; [CPU_U] |6001| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |6001| 
        MOVL      XAR4,XAR2             ; [CPU_] |6001| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |6001| 
        MOVL      *-SP[4],ACC           ; [CPU_] |6001| 
        MOVL      *-SP[6],XAR3          ; [CPU_] |6001| 
$C$DW$251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$251, DW_AT_name("_sprintf")
	.dwattr $C$DW$251, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |6001| 
        ; call occurs [#_sprintf] ; [] |6001| 
	.dwpsn	file "../Source/prod.c",line 6003,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6003 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR2             ; [CPU_] |6003| 
	.dwpsn	file "../Source/prod.c",line 6004,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 6004 | } else {                                                               
;----------------------------------------------------------------------
        B         $C$L41,UNC            ; [CPU_] |6004| 
        ; branch occurs ; [] |6004| 
$C$L40:    
	.dwpsn	file "../Source/prod.c",line 6005,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 6005 | scia_puts("OFF\r\n");                                                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL48        ; [CPU_U] |6005| 
$C$L41:    
$C$DW$252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$252, DW_AT_name("_scia_puts")
	.dwattr $C$DW$252, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |6005| 
        ; call occurs [#_scia_puts] ; [] |6005| 
	.dwpsn	file "../Source/prod.c",line 5968,column 15,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |5968| 
        INC       *-SP[9]               ; [CPU_] |5968| 
        MOV       AL,*-SP[9]            ; [CPU_] |5968| 
        CMPB      AL,#4                 ; [CPU_] |5968| 
        B         $C$L30,LT             ; [CPU_] |5968| 
        ; branchcc occurs ; [] |5968| 
        SUBB      SP,#12                ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$253, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$238, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$238, DW_AT_TI_end_line(0x1778)
	.dwattr $C$DW$238, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$238

	.sect	".text"
	.clink
	.global	_print_dac

$C$DW$254	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$254, DW_AT_name("print_dac")
	.dwattr $C$DW$254, DW_AT_low_pc(_print_dac)
	.dwattr $C$DW$254, DW_AT_high_pc(0x00)
	.dwattr $C$DW$254, DW_AT_TI_symbol_name("_print_dac")
	.dwattr $C$DW$254, DW_AT_external
	.dwattr $C$DW$254, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$254, DW_AT_TI_begin_line(0x1725)
	.dwattr $C$DW$254, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$254, DW_AT_TI_max_frame_size(-16)
	.dwpsn	file "../Source/prod.c",line 5925,column 22,is_stmt,address _print_dac,isa 0

	.dwfde $C$DW$CIE, _print_dac
$C$DW$255	.dwtag  DW_TAG_variable
	.dwattr $C$DW$255, DW_AT_name("buff")
	.dwattr $C$DW$255, DW_AT_TI_symbol_name("_buff$6")
	.dwattr $C$DW$255, DW_AT_type(*$C$DW$T$381)
	.dwattr $C$DW$255, DW_AT_location[DW_OP_addr _buff$6]

;----------------------------------------------------------------------
; 5925 | void print_dac(void) {                                                 
; 5926 | int l;                                                                 
; 5927 | static char buff[64];                                                  
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _print_dac                    FR SIZE:  14           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            8 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_dac:
;* AR1   assigned to _l
$C$DW$256	.dwtag  DW_TAG_variable
	.dwattr $C$DW$256, DW_AT_name("l")
	.dwattr $C$DW$256, DW_AT_TI_symbol_name("_l")
	.dwattr $C$DW$256, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$256, DW_AT_location[DW_OP_reg6]

;* AR2   assigned to $O$U13
;* AR3   assigned to $O$K8
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -16
	.dwpsn	file "../Source/prod.c",line 5929,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5929 | scia_puts("\r\nDAC Settings:\r\n");                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL49        ; [CPU_U] |5929| 
$C$DW$257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$257, DW_AT_name("_scia_puts")
	.dwattr $C$DW$257, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5929| 
        ; call occurs [#_scia_puts] ; [] |5929| 
	.dwpsn	file "../Source/prod.c",line 5931,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 5931 | for (l = 0; l < DAC_MAX; l++) {                                        
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |5931| 
        MOVL      XAR3,#_buff$6         ; [CPU_U] 
        MOVL      XAR2,#_conf_data+3104 ; [CPU_U] 
$C$L42:    
	.dwpsn	file "../Source/prod.c",line 5932,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5932 | sprintf(buff, "DAC channel %u:\r\n", l + 1);                           
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL50        ; [CPU_U] |5932| 
        MOVB      AL,#1                 ; [CPU_] |5932| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5932| 
        ADD       AL,AR1                ; [CPU_] |5932| 
        MOV       *-SP[3],AL            ; [CPU_] |5932| 
        MOVL      XAR4,XAR3             ; [CPU_] |5932| 
$C$DW$258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$258, DW_AT_name("_sprintf")
	.dwattr $C$DW$258, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5932| 
        ; call occurs [#_sprintf] ; [] |5932| 
	.dwpsn	file "../Source/prod.c",line 5933,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5933 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5933| 
$C$DW$259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$259, DW_AT_name("_scia_puts")
	.dwattr $C$DW$259, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5933| 
        ; call occurs [#_scia_puts] ; [] |5933| 
	.dwpsn	file "../Source/prod.c",line 5935,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5935 | sprintf(buff,                                                          
; 5936 |                 "  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f
;     | \r\n",                                                                 
; 5937 |                 conf_data.dac[l].dslopen, conf_data.dac[l].dslopen,    
; 5938 |                 conf_data.dac[l].dint);                                
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL51        ; [CPU_U] |5935| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5935| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5935| 
        MOVL      XAR4,XAR3             ; [CPU_] |5935| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5935| 
        MOVL      ACC,*+XAR2[4]         ; [CPU_] |5935| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5935| 
        MOVL      ACC,*+XAR2[6]         ; [CPU_] |5935| 
        MOVL      *-SP[8],ACC           ; [CPU_] |5935| 
$C$DW$260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$260, DW_AT_name("_sprintf")
	.dwattr $C$DW$260, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5935| 
        ; call occurs [#_sprintf] ; [] |5935| 
	.dwpsn	file "../Source/prod.c",line 5939,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5939 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5939| 
$C$DW$261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$261, DW_AT_name("_scia_puts")
	.dwattr $C$DW$261, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5939| 
        ; call occurs [#_scia_puts] ; [] |5939| 
	.dwpsn	file "../Source/prod.c",line 5941,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5941 | sprintf(buff, "  %s", LPV[conf_data.dac[l].what]);                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL52        ; [CPU_U] |5941| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5941| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |5941| 
        MOV       ACC,*+XAR2[0] << 1    ; [CPU_] |5941| 
        ADDL      XAR4,ACC              ; [CPU_] |5941| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |5941| 
        MOVL      XAR4,XAR3             ; [CPU_] |5941| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5941| 
$C$DW$262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$262, DW_AT_name("_sprintf")
	.dwattr $C$DW$262, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5941| 
        ; call occurs [#_sprintf] ; [] |5941| 
	.dwpsn	file "../Source/prod.c",line 5942,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5942 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5942| 
$C$DW$263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5942| 
        ; call occurs [#_scia_puts] ; [] |5942| 
	.dwpsn	file "../Source/prod.c",line 5944,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5944 | if ( VFD_VOLT != conf_data.dac[l].what) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5944| 
        CMPB      AL,#7                 ; [CPU_] |5944| 
        B         $C$L43,EQ             ; [CPU_] |5944| 
        ; branchcc occurs ; [] |5944| 
	.dwpsn	file "../Source/prod.c",line 5945,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5945 | sprintf(buff, " CH %u", conf_data.dac[l].ch + 1);                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL53        ; [CPU_U] |5945| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5945| 
        MOV       AL,*+XAR2[1]          ; [CPU_] |5945| 
        ADDB      AL,#1                 ; [CPU_] |5945| 
        MOVL      XAR4,XAR3             ; [CPU_] |5945| 
        MOV       *-SP[3],AL            ; [CPU_] |5945| 
$C$DW$264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$264, DW_AT_name("_sprintf")
	.dwattr $C$DW$264, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5945| 
        ; call occurs [#_sprintf] ; [] |5945| 
	.dwpsn	file "../Source/prod.c",line 5946,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5946 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5946| 
$C$DW$265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$265, DW_AT_name("_scia_puts")
	.dwattr $C$DW$265, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5946| 
        ; call occurs [#_scia_puts] ; [] |5946| 
$C$L43:    
	.dwpsn	file "../Source/prod.c",line 5949,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5949 | if ( VFD_POSI == conf_data.dac[l].what                                 
; 5950 |                 || VFD_VELO == conf_data.dac[l].what) {                
; 5951 |         sprintf(buff, "    gain:%-.5f, offset:%-.5f\r\n",              
; 5952 |                         conf_data.dac[l].gain, conf_data.dac[l].offset)
;     | ;                                                                      
; 5953 |         scia_puts(buff);                                               
; 5954 | } else {                                                               
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[0]          ; [CPU_] |5949| 
        CMPB      AL,#3                 ; [CPU_] |5949| 
        B         $C$L44,EQ             ; [CPU_] |5949| 
        ; branchcc occurs ; [] |5949| 
        MOV       AL,*+XAR2[0]          ; [CPU_] |5949| 
        CMPB      AL,#4                 ; [CPU_] |5949| 
        B         $C$L44,EQ             ; [CPU_] |5949| 
        ; branchcc occurs ; [] |5949| 
	.dwpsn	file "../Source/prod.c",line 5955,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5955 | scia_puts("\r\n");                                                     
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |5955| 
        B         $C$L45,UNC            ; [CPU_] |5955| 
        ; branch occurs ; [] |5955| 
$C$L44:    
	.dwpsn	file "../Source/prod.c",line 5951,column 4,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL54        ; [CPU_U] |5951| 
        MOVB      XAR0,#8               ; [CPU_] |5951| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5951| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5951| 
        MOVB      XAR0,#10              ; [CPU_] |5951| 
        MOVL      XAR4,XAR3             ; [CPU_] |5951| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5951| 
        MOVL      ACC,*+XAR2[AR0]       ; [CPU_] |5951| 
        MOVL      *-SP[6],ACC           ; [CPU_] |5951| 
$C$DW$266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$266, DW_AT_name("_sprintf")
	.dwattr $C$DW$266, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5951| 
        ; call occurs [#_sprintf] ; [] |5951| 
	.dwpsn	file "../Source/prod.c",line 5953,column 4,is_stmt,isa 0
        MOVL      XAR4,XAR3             ; [CPU_] |5953| 
$C$L45:    
$C$DW$267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$267, DW_AT_name("_scia_puts")
	.dwattr $C$DW$267, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5953| 
        ; call occurs [#_scia_puts] ; [] |5953| 
	.dwpsn	file "../Source/prod.c",line 5931,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5931| 
        ADDB      XAR2,#12              ; [CPU_] |5931| 
        MOV       AL,AR1                ; [CPU_] |5931| 
        CMPB      AL,#4                 ; [CPU_] |5931| 
        B         $C$L42,LT             ; [CPU_] |5931| 
        ; branchcc occurs ; [] |5931| 
        SUBB      SP,#8                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$268, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$254, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$254, DW_AT_TI_end_line(0x1746)
	.dwattr $C$DW$254, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$254

	.sect	".text"
	.clink
	.global	_print_channel

$C$DW$269	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$269, DW_AT_name("print_channel")
	.dwattr $C$DW$269, DW_AT_low_pc(_print_channel)
	.dwattr $C$DW$269, DW_AT_high_pc(0x00)
	.dwattr $C$DW$269, DW_AT_TI_symbol_name("_print_channel")
	.dwattr $C$DW$269, DW_AT_external
	.dwattr $C$DW$269, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$269, DW_AT_TI_begin_line(0x1693)
	.dwattr $C$DW$269, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$269, DW_AT_TI_max_frame_size(-12)
	.dwpsn	file "../Source/prod.c",line 5779,column 31,is_stmt,address _print_channel,isa 0

	.dwfde $C$DW$CIE, _print_channel
$C$DW$270	.dwtag  DW_TAG_variable
	.dwattr $C$DW$270, DW_AT_name("buff")
	.dwattr $C$DW$270, DW_AT_TI_symbol_name("_buff$3")
	.dwattr $C$DW$270, DW_AT_type(*$C$DW$T$380)
	.dwattr $C$DW$270, DW_AT_location[DW_OP_addr _buff$3]

$C$DW$271	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$271, DW_AT_name("ch")
	.dwattr $C$DW$271, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$271, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$271, DW_AT_location[DW_OP_reg0]


;***************************************************************
;* FNAME: _print_channel                FR SIZE:  10           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  0 Auto,  6 SOE     *
;***************************************************************

_print_channel:
;* AR3   assigned to $O$C1
;* AR1   assigned to $O$C2
;* AR2   assigned to _ch
$C$DW$272	.dwtag  DW_TAG_variable
	.dwattr $C$DW$272, DW_AT_name("ch")
	.dwattr $C$DW$272, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$272, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$272, DW_AT_location[DW_OP_reg8]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -12
;----------------------------------------------------------------------
; 5779 | void print_channel(Uint16 ch) {                                        
; 5780 | static char buff[100];                                                 
;----------------------------------------------------------------------
        MOVZ      AR2,AL                ; [CPU_] |5779| 
	.dwpsn	file "../Source/prod.c",line 5782,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5782 | sprintf(buff, "Channel:            %-i\r\n", ch + 1);                  
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL55        ; [CPU_U] |5782| 
        MOVZ      AR1,AR2               ; [CPU_] |5782| 
        MOVB      AH,#1                 ; [CPU_] |5782| 
        MOVL      XAR3,#_buff$3         ; [CPU_U] |5782| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5782| 
        ADD       AH,AR1                ; [CPU_] |5782| 
        MOVL      XAR4,XAR3             ; [CPU_] |5782| 
        MOV       *-SP[3],AH            ; [CPU_] |5782| 
$C$DW$273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$273, DW_AT_name("_sprintf")
	.dwattr $C$DW$273, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5782| 
        ; call occurs [#_sprintf] ; [] |5782| 
	.dwpsn	file "../Source/prod.c",line 5783,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5783 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5783| 
$C$DW$274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$274, DW_AT_name("_scia_puts")
	.dwattr $C$DW$274, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5783| 
        ; call occurs [#_scia_puts] ; [] |5783| 
	.dwpsn	file "../Source/prod.c",line 5785,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5785 | sprintf(buff, "Boardcal slope:     %-11g\r\n", conf_data.ch[ch].bslope)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5785| 
        MOV       T,AR1                 ; [CPU_] |5785| 
        MOVL      XAR4,#$C$FSL56        ; [CPU_U] |5785| 
        MPYU      ACC,T,AL              ; [CPU_] |5785| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |5785| 
        ADDL      XAR1,ACC              ; [CPU_] |5785| 
        MOVB      XAR0,#44              ; [CPU_] |5785| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5785| 
        MOVL      XAR4,XAR3             ; [CPU_] |5785| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5785| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5785| 
$C$DW$275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$275, DW_AT_name("_sprintf")
	.dwattr $C$DW$275, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5785| 
        ; call occurs [#_sprintf] ; [] |5785| 
	.dwpsn	file "../Source/prod.c",line 5786,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5786 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5786| 
$C$DW$276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$276, DW_AT_name("_scia_puts")
	.dwattr $C$DW$276, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5786| 
        ; call occurs [#_scia_puts] ; [] |5786| 
	.dwpsn	file "../Source/prod.c",line 5796,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5796 | sprintf(buff, "Current sensor:     %-10i\r\n", conf_data.ch[ch].ci + 1)
;     | ;                                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL57        ; [CPU_U] |5796| 
        MOVB      XAR0,#42              ; [CPU_] |5796| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |5796| 
        MOVL      XAR4,XAR3             ; [CPU_] |5796| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5796| 
        ADDB      AL,#1                 ; [CPU_] |5796| 
        MOV       *-SP[3],AL            ; [CPU_] |5796| 
$C$DW$277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$277, DW_AT_name("_sprintf")
	.dwattr $C$DW$277, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |5796| 
        ; call occurs [#_sprintf] ; [] |5796| 
	.dwpsn	file "../Source/prod.c",line 5797,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5797 | scia_puts(buff);                                                       
;----------------------------------------------------------------------
        MOVL      XAR4,XAR3             ; [CPU_] |5797| 
$C$DW$278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$278, DW_AT_name("_scia_puts")
	.dwattr $C$DW$278, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5797| 
        ; call occurs [#_scia_puts] ; [] |5797| 
	.dwpsn	file "../Source/prod.c",line 5799,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5799 | if (autoid[ch]) {                                                      
;----------------------------------------------------------------------
        MOVZ      AR0,AR2               ; [CPU_] |5799| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |5799| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5799| 
        B         $C$L46,EQ             ; [CPU_] |5799| 
        ; branchcc occurs ; [] |5799| 
	.dwpsn	file "../Source/prod.c",line 5800,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5800 | scia_puts("Auto Id enabled and active.\r\n");                          
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL58        ; [CPU_U] |5800| 
$C$DW$279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$279, DW_AT_name("_scia_puts")
	.dwattr $C$DW$279, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |5800| 
        ; call occurs [#_scia_puts] ; [] |5800| 
$C$L46:    
        SUBB      SP,#4                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$280, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$269, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$269, DW_AT_TI_end_line(0x16aa)
	.dwattr $C$DW$269, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$269

	.sect	".text"
	.clink
	.global	_matchTag

$C$DW$281	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$281, DW_AT_name("matchTag")
	.dwattr $C$DW$281, DW_AT_low_pc(_matchTag)
	.dwattr $C$DW$281, DW_AT_high_pc(0x00)
	.dwattr $C$DW$281, DW_AT_TI_symbol_name("_matchTag")
	.dwattr $C$DW$281, DW_AT_external
	.dwattr $C$DW$281, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$281, DW_AT_TI_begin_line(0x166f)
	.dwattr $C$DW$281, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$281, DW_AT_TI_max_frame_size(-14)
	.dwpsn	file "../Source/prod.c",line 5743,column 26,is_stmt,address _matchTag,isa 0

	.dwfde $C$DW$CIE, _matchTag
$C$DW$282	.dwtag  DW_TAG_formal_parameter
	.dwattr $C$DW$282, DW_AT_name("ch")
	.dwattr $C$DW$282, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$282, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$282, DW_AT_location[DW_OP_reg0]

;----------------------------------------------------------------------
; 5743 | void matchTag(Uint16 ch) {                                             
; 5744 | Uint16 sns;                                                            
; 5745 | unsigned long long tag;                                                
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _matchTag                     FR SIZE:  12           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            4 Parameter,  1 Auto,  6 SOE     *
;***************************************************************

_matchTag:
$C$DW$283	.dwtag  DW_TAG_variable
	.dwattr $C$DW$283, DW_AT_name("ch")
	.dwattr $C$DW$283, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$283, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$283, DW_AT_location[DW_OP_breg20 -5]

;* AR4   assigned to _sns
$C$DW$284	.dwtag  DW_TAG_variable
	.dwattr $C$DW$284, DW_AT_name("sns")
	.dwattr $C$DW$284, DW_AT_TI_symbol_name("_sns")
	.dwattr $C$DW$284, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$284, DW_AT_location[DW_OP_reg12]

;* AR3   assigned to _tag
$C$DW$285	.dwtag  DW_TAG_variable
	.dwattr $C$DW$285, DW_AT_name("tag")
	.dwattr $C$DW$285, DW_AT_TI_symbol_name("_tag")
	.dwattr $C$DW$285, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$285, DW_AT_location[DW_OP_reg10 DW_OP_piece 2 DW_OP_reg14 DW_OP_piece 2]

;* AR1   assigned to $O$K4
;* AR0   assigned to $O$U24
;* AR2   assigned to $O$K6
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        ADDB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -14
	.dwpsn	file "../Source/prod.c",line 5747,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5747 | autoid[ch] = 0;                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#_autoid         ; [CPU_U] |5747| 
	.dwpsn	file "../Source/prod.c",line 5743,column 26,is_stmt,isa 0
        MOV       *-SP[5],AL            ; [CPU_] |5743| 
	.dwpsn	file "../Source/prod.c",line 5747,column 2,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5747| 
        ADDU      ACC,*-SP[5]           ; [CPU_] |5747| 
        MOVL      XAR1,ACC              ; [CPU_] |5747| 
	.dwpsn	file "../Source/prod.c",line 5749,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5749 | if (conf_data.tagiden == 0 || ch >= CHS_MAX) {                         
;----------------------------------------------------------------------
        MOVB      XAR0,#36              ; [CPU_] |5749| 
        MOVL      XAR2,#_conf_data      ; [CPU_U] |5749| 
	.dwpsn	file "../Source/prod.c",line 5747,column 2,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |5747| 
	.dwpsn	file "../Source/prod.c",line 5749,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5750 | return;                         // tagid disabled.                     
;----------------------------------------------------------------------
        MOV       AL,*+XAR2[AR0]        ; [CPU_] |5749| 
        B         $C$L50,EQ             ; [CPU_] |5749| 
        ; branchcc occurs ; [] |5749| 
        MOV       AL,*-SP[5]            ; [CPU_] 
        B         $C$L50,NEQ            ; [CPU_] |5749| 
        ; branchcc occurs ; [] |5749| 
	.dwpsn	file "../Source/prod.c",line 5753,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 5753 | tag = tagid(ch);                                                       
; 5754 | if ((tag != 0) && (tag != (unsigned long long) -1)) {                  
; 5755 |         // tag exist and no tag read CRC error                         
;----------------------------------------------------------------------
$C$DW$286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$286, DW_AT_name("_tagid")
	.dwattr $C$DW$286, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |5753| 
        ; call occurs [#_tagid] ; [] |5753| 
        MOVB      XAR6,#0               ; [CPU_] |5753| 
        MOVL      XAR3,ACC              ; [CPU_] |5753| 
        MOVL      *-SP[4],XAR6          ; [CPU_] |5753| 
        MOV       *-SP[2],#0            ; [CPU_] |5753| 
        MOV       *-SP[1],#0            ; [CPU_] |5753| 
$C$DW$287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$287, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$287, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5753| 
        ; call occurs [#ULL$$CMP] ; [] |5753| 
        CMPB      AL,#0                 ; [CPU_] |5753| 
        B         $C$L50,EQ             ; [CPU_] |5753| 
        ; branchcc occurs ; [] |5753| 
        MOVB      ACC,#0                ; [CPU_] |5753| 
        SUBB      ACC,#1                ; [CPU_] |5753| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5753| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5753| 
        MOVL      ACC,XAR3              ; [CPU_] |5753| 
$C$DW$288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$288, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$288, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5753| 
        ; call occurs [#ULL$$CMP] ; [] |5753| 
        CMPB      AL,#0                 ; [CPU_] |5753| 
        B         $C$L50,EQ             ; [CPU_] |5753| 
        ; branchcc occurs ; [] |5753| 
	.dwpsn	file "../Source/prod.c",line 5756,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 5756 | tagwasthere[ch] = 0;            // tag chip detected                   
;----------------------------------------------------------------------
        MOVZ      AR0,*-SP[5]           ; [CPU_] |5756| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] |5756| 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |5756| 
        MOVL      XAR0,XAR2             ; [CPU_] 
        MOVB      XAR6,#19              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5758,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 5758 | for (sns = 0; sns < SENSPCH; sns++) {                                  
; 5760 |         if (conf_data.sensor[sns].method == MD_UNCALED) {              
;----------------------------------------------------------------------
        MOVB      XAR4,#0               ; [CPU_] |5758| 
        ADDB      XAR0,#84              ; [CPU_] 
$C$L47:    
	.dwpsn	file "../Source/prod.c",line 5761,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5761 | continue;                       // not calibrated                      
; 5764 | if (tag != conf_data.sensor[sns].tagid) {                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR0[4]          ; [CPU_] |5761| 
        B         $C$L48,EQ             ; [CPU_] |5761| 
        ; branchcc occurs ; [] |5761| 
	.dwpsn	file "../Source/prod.c",line 5765,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5765 | continue;                       // doesn't match, skip                 
; 5768 | // we have a matched sensor tagid here                                 
;----------------------------------------------------------------------
        MOVL      ACC,*+XAR0[0]         ; [CPU_] |5765| 
        MOVL      XAR7,*+XAR0[2]        ; [CPU_] |5765| 
        MOVL      *-SP[4],ACC           ; [CPU_] |5765| 
        MOVL      ACC,XAR3              ; [CPU_] |5765| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |5765| 
$C$DW$289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$289, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$289, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |5765| 
        ; call occurs [#ULL$$CMP] ; [] |5765| 
        CMPB      AL,#0                 ; [CPU_] |5765| 
        B         $C$L49,EQ             ; [CPU_] |5765| 
        ; branchcc occurs ; [] |5765| 
$C$L48:    
        MOVL      ACC,XAR0              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5758,column 17,is_stmt,isa 0
        ADDB      ACC,#152              ; [CPU_] |5758| 
        MOVL      XAR0,ACC              ; [CPU_] |5758| 
        ADDB      XAR4,#1               ; [CPU_] |5758| 
        BANZ      $C$L47,AR6--          ; [CPU_] |5758| 
        ; branchcc occurs ; [] |5758| 
        B         $C$L50,UNC            ; [CPU_] |5758| 
        ; branch occurs ; [] |5758| 
$C$L49:    
	.dwpsn	file "../Source/prod.c",line 5769,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5769 | autoid[ch] = 1;                                                        
;----------------------------------------------------------------------
        MOVB      *+XAR1[0],#1,UNC      ; [CPU_] |5769| 
	.dwpsn	file "../Source/prod.c",line 5770,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5770 | conf_data.ch[ch].ci = sns;                                             
; 5772 | break;                          // stop searching                      
;----------------------------------------------------------------------
        MOVB      AL,#10                ; [CPU_] |5770| 
        MOV       T,*-SP[5]             ; [CPU_] |5770| 
        MPYU      ACC,T,AL              ; [CPU_] |5770| 
        ADDL      ACC,XAR2              ; [CPU_] |5770| 
        MOVL      XAR5,ACC              ; [CPU_] |5770| 
        MOVB      XAR0,#42              ; [CPU_] |5770| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |5770| 
$C$L50:    
        SUBB      SP,#6                 ; [CPU_U] 
	.dwcfi	cfa_offset, -8
        MOVL      XAR3,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -6
	.dwcfi	restore_reg, 11
        MOVL      XAR2,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -4
	.dwcfi	restore_reg, 9
        MOVL      XAR1,*--SP            ; [CPU_] 
	.dwcfi	cfa_offset, -2
	.dwcfi	restore_reg, 7
$C$DW$290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$290, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$281, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$281, DW_AT_TI_end_line(0x168f)
	.dwattr $C$DW$281, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$281

	.sect	".text"
	.clink
	.global	_main

$C$DW$291	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$291, DW_AT_name("main")
	.dwattr $C$DW$291, DW_AT_low_pc(_main)
	.dwattr $C$DW$291, DW_AT_high_pc(0x00)
	.dwattr $C$DW$291, DW_AT_TI_symbol_name("_main")
	.dwattr $C$DW$291, DW_AT_external
	.dwattr $C$DW$291, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$291, DW_AT_TI_begin_line(0x7c)
	.dwattr $C$DW$291, DW_AT_TI_begin_column(0x06)
	.dwattr $C$DW$291, DW_AT_TI_max_frame_size(-146)
	.dwpsn	file "../Source/prod.c",line 124,column 17,is_stmt,address _main,isa 0

	.dwfde $C$DW$CIE, _main
$C$DW$292	.dwtag  DW_TAG_variable
	.dwattr $C$DW$292, DW_AT_name("buff")
	.dwattr $C$DW$292, DW_AT_TI_symbol_name("_buff$1")
	.dwattr $C$DW$292, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$292, DW_AT_location[DW_OP_addr _buff$1]

$C$DW$293	.dwtag  DW_TAG_variable
	.dwattr $C$DW$293, DW_AT_name("cmdbuff")
	.dwattr $C$DW$293, DW_AT_TI_symbol_name("_cmdbuff$2")
	.dwattr $C$DW$293, DW_AT_type(*$C$DW$T$374)
	.dwattr $C$DW$293, DW_AT_location[DW_OP_addr _cmdbuff$2]

;----------------------------------------------------------------------
; 124 | void main(void) {                                                      
; 125 | int i, j, k;                            // general purpose indics      
; 127 | double version;                 // for firmware version print          
; 129 | static char buff[1024];         // output buffer                       
; 131 | static char cmdbuff[1024];              // buffer for getting serial co
;     | mmand                                                                  
; 132 | Uint16 cmdlen;                  // the length of the command           
; 134 | adccnt_t* cntp;                 // point to ad7738 count data          
; 135 | adcwt_t* wtp;                           // point to ad7738 load data   
; 137 | Uint16 ch;                              // channel number              
; 138 | Uint16 ss;                              // sensor number               
; 139 | Uint16 pt;                              // point number                
; 141 | Uint16 tagch = 0;                       // channel number for autoid   
; 143 | char unsaved = 0;                       // change to setup not saved   
; 145 | Uint16 slen;                            // string lenght               
; 147 | double scale;                           // input float value           
; 149 | Uint16 flash_ret;                       // return value of flash access
; 150 | double tempvalue;                       // temperature value in F      
; 152 | double volt[3];                 // input value in mv/v                 
; 153 | long long dsum[2];                      // read count for input value  
; 154 | Uint16 dacc[3];                 // dac out count                       
; 155 | int daccbm = 0; // bitmap for DAC calibration, lower 2 bits, each for a
;     |  point                                                                 
; 157 | volatile long sampcnt;                          // sample count for cal
;     | ibration reading                                                       
; 159 | char cmethod;                           // buffer for calibration metho
;     | d code                                                                 
; 161 | Uint16 line;                            // vfd diplay line             
; 163 | int bincmdresult;                       // binary command process resul
;     | t code                                                                 
; 165 | int ds_en = 0;                  // enabled for data streamming         
; 166 | int ds_stop = 0;                        // stop flag for data streammin
;     | g                                                                      
; 167 | //Uint16 ds_dn = 1;             // dataset number of package for data s
;     | treamming.                                                             
; 168 | Uint16 ds_dn = 60;              // dataset number of package for data s
;     | treamming.                                                             
; 169 | Uint16 ds_dec = 1;                      // decimantion number for data
;     | stream.                                                                
; 170 | Uint16 ds_bm = 0x0f;                    // bitmap for data streamming. 
; 171 | Uint16 ds_sn = 0;                       // data packet serial number   
; 172 | Uint16 ds_ct = 0;                       // count of dataset in the curr
;     | ent packet                                                             
; 174 | Uint32 temp32;                                                         
; 175 | float ftemp;                                                           
; 176 | long templg;                                                           
; 177 | Uint16 temp16;                                                         
; 178 | int tempint;                                                           
; 179 | double tempft;                                                         
; 181 | Uint16 *intp;                                                          
; 183 | const char *ccp;                                                       
; 185 | #ifdef SDHCCARD                                                        
; 186 | FATFS *fs;                              // pointer to fatfs            
; 188 | FRESULT res;// Fatfs reseult code                                      
; 189 | FIL *fp;// pointer to file object                                      
; 191 | Uint32 fsize;                                                          
; 193 | char sd_write;// should write to SD card                               
; 194 | char sd_close;// file need to be closed                                
; 195 | Uint32 sd_cnt;                                                         
; 197 | FILINFO Finfo;                                                         
; 198 | DIR dir;// Directory object                                            
; 199 | long p1;                                                               
; 200 | UINT s1, s2;                                                           
; 202 | rtc.year = 2010;                                                       
; 203 | rtc.month = 8;                                                         
; 204 | rtc.mday = 27;                                                         
; 205 | rtc.hour = 12;                                                         
; 206 | rtc.min = 0;                                                           
; 207 | rtc.sec = 0;                                                           
; 208 | #endif                                                                 
; 210 | // KS - 2014-02-11                                                     
; 211 | //DownloadFlag = 0;     // removed for release                         
; 213 | // initialize the system control registers and XINTF                   
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _main                         FR SIZE: 144           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                           10 Parameter, 127 Auto,  6 SOE     *
;***************************************************************

_main:
;* AL    assigned to $O$C22
;* AL    assigned to $O$C23
;* AL    assigned to $O$C24
;* AL    assigned to $O$C26
;* AR7   assigned to $O$C27
;* AR5   assigned to $O$C28
;* AL    assigned to $O$C29
;* AR4   assigned to $O$C30
;* AL    assigned to $O$C31
;* PL    assigned to $O$C32
;* AR6   assigned to $O$C33
;* AR1   assigned to $O$C34
;* AL    assigned to $O$C35
;* AR5   assigned to $O$C36
;* AL    assigned to $O$C37
;* AL    assigned to $O$C38
;* AL    assigned to $O$C39
;* AL    assigned to $O$C41
;* AL    assigned to $O$C42
;* AL    assigned to $O$C44
;* AR4   assigned to $O$C45
;* AR5   assigned to $O$C46
;* AR1   assigned to $O$C47
;* PL    assigned to $O$C48
;* AR6   assigned to $O$C49
;* AL    assigned to $O$C50
;* AR1   assigned to $O$C52
;* AL    assigned to $O$C53
;* AR1   assigned to $O$C55
;* AL    assigned to $O$C57
;* AL    assigned to $O$C58
;* AL    assigned to $O$C60
;* AR1   assigned to $O$C61
;* AH    assigned to $O$C62
;* AL    assigned to $O$C63
;* AL    assigned to $O$C64
;* AR5   assigned to $O$C65
;* AR4   assigned to $O$C66
;* AL    assigned to $O$C68
;* AL    assigned to $O$C70
;* AL    assigned to $O$C71
;* AL    assigned to $O$C72
;* AL    assigned to $O$C73
;* AL    assigned to $O$C74
;* AL    assigned to $O$C76
;* AL    assigned to $O$C78
;* AL    assigned to $O$C80
;* AH    assigned to $O$C81
;* AL    assigned to $O$C82
;* AR1   assigned to $O$C83
;* AR1   assigned to $O$C84
;* AL    assigned to $O$C85
;* AR1   assigned to $O$C86
;* AR1   assigned to $O$C89
;* AL    assigned to $O$C91
;* AR6   assigned to $O$C92
;* AR1   assigned to $O$C93
;* AL    assigned to $O$C95
;* AR5   assigned to $O$C96
;* AL    assigned to $O$C97
;* AH    assigned to $O$C98
;* AR7   assigned to $O$C100
;* AR5   assigned to $O$C101
;* AR4   assigned to $O$C102
;* AL    assigned to $O$C103
;* AR1   assigned to $O$C104
;* AL    assigned to $O$C105
;* AR1   assigned to $O$C107
;* AR1   assigned to $O$C108
;* AR5   assigned to $O$C110
;* AL    assigned to $O$C111
;* AR1   assigned to $O$C112
;* AR1   assigned to $O$C113
;* AR1   assigned to $O$C114
;* AR1   assigned to $O$C115
;* AH    assigned to $O$C116
;* AH    assigned to $O$C117
;* AR1   assigned to $O$C118
;* AL    assigned to $O$C119
;* AR1   assigned to $O$C120
;* AR5   assigned to $O$C122
;* AR1   assigned to $O$C123
;* AL    assigned to $O$C124
;* AL    assigned to $O$C125
;* AR1   assigned to $O$C126
;* AR1   assigned to $O$C128
;* AR7   assigned to $O$C129
;* AL    assigned to $O$C130
;* AR4   assigned to $O$C131
;* AR1   assigned to $O$C132
;* AL    assigned to $O$C133
;* AR1   assigned to $O$C134
;* AR1   assigned to $O$C136
;* AR1   assigned to $O$C138
;* AR1   assigned to $O$C140
;* AR1   assigned to $O$C141
;* AL    assigned to $O$C143
;* AR1   assigned to $O$C144
;* AR1   assigned to $O$C145
;* AR4   assigned to $O$C146
;* AR5   assigned to $O$C147
;* AR5   assigned to $O$C148
;* AR0   assigned to $O$W1
;* AR1   assigned to $O$U294
;* AR1   assigned to $O$U323
;* AR1   assigned to $O$U527
;* AR1   assigned to $O$U656
;* AR1   assigned to $O$U766
;* AR1   assigned to $O$U803
;* AR5   assigned to $O$U819
;* AL    assigned to $O$U978
;* AR1   assigned to $O$U956
;* AR1   assigned to $O$U1048
;* AR1   assigned to $O$U946
;* AR6   assigned to $O$U1262
;* AR1   assigned to $O$U1288
;* AR7   assigned to $O$U1527
;* XT    assigned to $O$U1563
;* PL    assigned to $O$U1564
;* AR5   assigned to $O$U1587
;* PL    assigned to $O$U1592
;* PL    assigned to $O$U1599
;* AR7   assigned to $O$U1601
;* AR5   assigned to $O$U1602
;* AR5   assigned to $O$U1610
;* XT    assigned to $O$U1653
;* PL    assigned to $O$U1654
;* AR6   assigned to $O$P21
;* AR4   assigned to $O$L38
;* AR3   assigned to $O$L50
;* AR3   assigned to $O$L53
;* AR3   assigned to $O$L111
$C$DW$294	.dwtag  DW_TAG_variable
	.dwattr $C$DW$294, DW_AT_name("ccp")
	.dwattr $C$DW$294, DW_AT_TI_symbol_name("_ccp")
	.dwattr $C$DW$294, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$294, DW_AT_location[DW_OP_breg20 -98]

$C$DW$295	.dwtag  DW_TAG_variable
	.dwattr $C$DW$295, DW_AT_name("tempft")
	.dwattr $C$DW$295, DW_AT_TI_symbol_name("_tempft")
	.dwattr $C$DW$295, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$295, DW_AT_location[DW_OP_breg20 -12]

$C$DW$296	.dwtag  DW_TAG_variable
	.dwattr $C$DW$296, DW_AT_name("templg")
	.dwattr $C$DW$296, DW_AT_TI_symbol_name("_templg")
	.dwattr $C$DW$296, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$296, DW_AT_location[DW_OP_breg20 -14]

$C$DW$297	.dwtag  DW_TAG_variable
	.dwattr $C$DW$297, DW_AT_name("ftemp")
	.dwattr $C$DW$297, DW_AT_TI_symbol_name("_ftemp")
	.dwattr $C$DW$297, DW_AT_type(*$C$DW$T$16)
	.dwattr $C$DW$297, DW_AT_location[DW_OP_breg20 -16]

$C$DW$298	.dwtag  DW_TAG_variable
	.dwattr $C$DW$298, DW_AT_name("ds_ct")
	.dwattr $C$DW$298, DW_AT_TI_symbol_name("_ds_ct")
	.dwattr $C$DW$298, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$298, DW_AT_location[DW_OP_breg20 -41]

$C$DW$299	.dwtag  DW_TAG_variable
	.dwattr $C$DW$299, DW_AT_name("ds_sn")
	.dwattr $C$DW$299, DW_AT_TI_symbol_name("_ds_sn")
	.dwattr $C$DW$299, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$299, DW_AT_location[DW_OP_breg20 -43]

$C$DW$300	.dwtag  DW_TAG_variable
	.dwattr $C$DW$300, DW_AT_name("ds_bm")
	.dwattr $C$DW$300, DW_AT_TI_symbol_name("_ds_bm")
	.dwattr $C$DW$300, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$300, DW_AT_location[DW_OP_breg20 -44]

$C$DW$301	.dwtag  DW_TAG_variable
	.dwattr $C$DW$301, DW_AT_name("ds_dec")
	.dwattr $C$DW$301, DW_AT_TI_symbol_name("_ds_dec")
	.dwattr $C$DW$301, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$301, DW_AT_location[DW_OP_breg20 -45]

$C$DW$302	.dwtag  DW_TAG_variable
	.dwattr $C$DW$302, DW_AT_name("ds_dn")
	.dwattr $C$DW$302, DW_AT_TI_symbol_name("_ds_dn")
	.dwattr $C$DW$302, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$302, DW_AT_location[DW_OP_breg20 -46]

$C$DW$303	.dwtag  DW_TAG_variable
	.dwattr $C$DW$303, DW_AT_name("ds_stop")
	.dwattr $C$DW$303, DW_AT_TI_symbol_name("_ds_stop")
	.dwattr $C$DW$303, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$303, DW_AT_location[DW_OP_breg20 -47]

$C$DW$304	.dwtag  DW_TAG_variable
	.dwattr $C$DW$304, DW_AT_name("ds_en")
	.dwattr $C$DW$304, DW_AT_TI_symbol_name("_ds_en")
	.dwattr $C$DW$304, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$304, DW_AT_location[DW_OP_breg20 -48]

$C$DW$305	.dwtag  DW_TAG_variable
	.dwattr $C$DW$305, DW_AT_name("bincmdresult")
	.dwattr $C$DW$305, DW_AT_TI_symbol_name("_bincmdresult")
	.dwattr $C$DW$305, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$305, DW_AT_location[DW_OP_breg20 -41]

$C$DW$306	.dwtag  DW_TAG_variable
	.dwattr $C$DW$306, DW_AT_name("line")
	.dwattr $C$DW$306, DW_AT_TI_symbol_name("_line")
	.dwattr $C$DW$306, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$306, DW_AT_location[DW_OP_breg20 -49]

$C$DW$307	.dwtag  DW_TAG_variable
	.dwattr $C$DW$307, DW_AT_name("daccbm")
	.dwattr $C$DW$307, DW_AT_TI_symbol_name("_daccbm")
	.dwattr $C$DW$307, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$307, DW_AT_location[DW_OP_breg20 -50]

$C$DW$308	.dwtag  DW_TAG_variable
	.dwattr $C$DW$308, DW_AT_name("tempvalue")
	.dwattr $C$DW$308, DW_AT_TI_symbol_name("_tempvalue")
	.dwattr $C$DW$308, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$308, DW_AT_location[DW_OP_breg20 -100]

$C$DW$309	.dwtag  DW_TAG_variable
	.dwattr $C$DW$309, DW_AT_name("scale")
	.dwattr $C$DW$309, DW_AT_TI_symbol_name("_scale")
	.dwattr $C$DW$309, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$309, DW_AT_location[DW_OP_breg20 -18]

$C$DW$310	.dwtag  DW_TAG_variable
	.dwattr $C$DW$310, DW_AT_name("unsaved")
	.dwattr $C$DW$310, DW_AT_TI_symbol_name("_unsaved")
	.dwattr $C$DW$310, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$310, DW_AT_location[DW_OP_breg20 -42]

$C$DW$311	.dwtag  DW_TAG_variable
	.dwattr $C$DW$311, DW_AT_name("tagch")
	.dwattr $C$DW$311, DW_AT_TI_symbol_name("_tagch")
	.dwattr $C$DW$311, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$311, DW_AT_location[DW_OP_breg20 -137]

$C$DW$312	.dwtag  DW_TAG_variable
	.dwattr $C$DW$312, DW_AT_name("ss")
	.dwattr $C$DW$312, DW_AT_TI_symbol_name("_ss")
	.dwattr $C$DW$312, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$312, DW_AT_location[DW_OP_breg20 -51]

$C$DW$313	.dwtag  DW_TAG_variable
	.dwattr $C$DW$313, DW_AT_name("ch")
	.dwattr $C$DW$313, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$313, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$313, DW_AT_location[DW_OP_breg20 -52]

$C$DW$314	.dwtag  DW_TAG_variable
	.dwattr $C$DW$314, DW_AT_name("version")
	.dwattr $C$DW$314, DW_AT_TI_symbol_name("_version")
	.dwattr $C$DW$314, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$314, DW_AT_location[DW_OP_breg20 -20]

;* AR4   assigned to $O$S18
;* AR4   assigned to $O$S17
;* AL    assigned to $O$R16
;* AL    assigned to $O$R15
;* AL    assigned to $O$R14
;* AR3   assigned to $O$R13
;* AR6   assigned to $O$R12
;* AL    assigned to $O$R11
;* AL    assigned to $O$R10
;* AL    assigned to $O$R9
;* AL    assigned to $O$R8
;* AL    assigned to $O$R7
;* AL    assigned to $O$R5
;* AL    assigned to $O$R4
;* AR6   assigned to $O$S3
;* AR5   assigned to $O$S2
;* AR4   assigned to $O$S1
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR1   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR5   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR4   assigned to $O$K116
;* AR7   assigned to $O$K116
;* AR1   assigned to $O$U218
;* AR5   assigned to $O$U218
;* AR5   assigned to $O$U218
;* AR5   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR7   assigned to $O$U218
;* AR7   assigned to $O$U218
;* AR7   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR5   assigned to $O$U218
;* AR5   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR1   assigned to $O$U218
;* AR5   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR7   assigned to $O$U218
;* AR1   assigned to $O$U218
;* AR1   assigned to $O$U218
;* AR1   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR1   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR4   assigned to $O$U218
;* AR1   assigned to $O$U218
;* AR5   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$K25
;* AR1   assigned to $O$U390
;* AR1   assigned to $O$U390
;* AR1   assigned to $O$U390
;* AR1   assigned to $O$U367
;* AR1   assigned to $O$U367
;* AR1   assigned to $O$U367
;* AR1   assigned to $O$U367
;* AR1   assigned to $O$U367
;* AR5   assigned to $O$U367
;* AR7   assigned to $O$U367
;* AR1   assigned to $O$U260
;* AR1   assigned to $O$U549
;* AR1   assigned to $O$U549
;* AR1   assigned to $O$U594
;* AR1   assigned to $O$U594
;* AR4   assigned to $O$K794
;* AR4   assigned to $O$K794
;* AR1   assigned to $O$K794
;* AR4   assigned to $O$K794
;* AR1   assigned to $O$K794
;* AR1   assigned to $O$K794
;* AR3   assigned to $O$K794
;* AR3   assigned to $O$K794
;* AR5   assigned to $O$K794
;* AR5   assigned to $O$K794
;* AR1   assigned to $O$K794
;* AR1   assigned to $O$U848
;* AR1   assigned to $O$U848
;* AR1   assigned to $O$U871
;* AR1   assigned to $O$U871
;* AR1   assigned to $O$U871
;* AR6   assigned to $O$U828
;* AL    assigned to $O$U828
;* AR1   assigned to $O$U897
;* AR1   assigned to $O$U897
;* AR1   assigned to $O$U977
;* AR7   assigned to $O$U977
;* AR5   assigned to $O$U977
;* AR5   assigned to $O$U977
;* AR5   assigned to $O$U977
;* AR7   assigned to $O$U977
;* AR7   assigned to $O$U977
;* AR7   assigned to $O$U977
;* AR7   assigned to $O$U977
;* AR4   assigned to $O$U977
;* AR4   assigned to $O$U977
;* AR4   assigned to $O$U977
;* AR7   assigned to $O$U977
;* AR5   assigned to $O$U977
;* AR1   assigned to $O$K277
;* AR7   assigned to $O$U1127
;* AR7   assigned to $O$U1127
;* AR7   assigned to $O$U1127
;* AR7   assigned to $O$U1127
;* AR4   assigned to $O$U1129
;* AR4   assigned to $O$U1129
;* AR4   assigned to $O$U1129
;* AR4   assigned to $O$U1129
;* AR1   assigned to $O$U1163
;* AR1   assigned to $O$U1163
;* AR1   assigned to $O$U1163
;* AR1   assigned to $O$U1169
;* AR4   assigned to $O$U1181
;* AR4   assigned to $O$U1178
;* AR7   assigned to $O$U1178
;* PL    assigned to $O$U1178
;* AR7   assigned to $O$U1178
;* AR4   assigned to $O$U1178
;* AR5   assigned to $O$U1238
;* AR4   assigned to $O$U1238
;* AR5   assigned to $O$U1317
;* AR5   assigned to $O$U1317
;* AR4   assigned to $O$U1313
;* AR4   assigned to $O$U1313
;* AR5   assigned to $O$U1374
;* AR5   assigned to $O$U1374
;* PL    assigned to $O$U1380
;* AR0   assigned to $O$U1380
;* AR1   assigned to $O$U1381
;* AR7   assigned to $O$U1381
;* AR0   assigned to $O$U1417
;* AR5   assigned to $O$U1417
;* PL    assigned to $O$U1420
;* AR1   assigned to $O$U1420
;* AR1   assigned to $O$U1421
;* AR0   assigned to $O$U1421
;* AR5   assigned to $O$U1459
;* AR5   assigned to $O$U1459
;* AR0   assigned to $O$U1495
;* AR5   assigned to $O$U1495
;* AR4   assigned to $O$U1530
;* AR1   assigned to $O$U1530
;* AR5   assigned to $O$U1530
;* AR5   assigned to $O$U1530
;* AR4   assigned to $O$U1621
;* AR5   assigned to $O$U1621
;* AR4   assigned to $O$U1621
;* AR5   assigned to $O$U1631
;* AR7   assigned to _intp
$C$DW$315	.dwtag  DW_TAG_variable
	.dwattr $C$DW$315, DW_AT_name("intp")
	.dwattr $C$DW$315, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$315, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$315, DW_AT_location[DW_OP_reg18]

;* AR0   assigned to _intp
$C$DW$316	.dwtag  DW_TAG_variable
	.dwattr $C$DW$316, DW_AT_name("intp")
	.dwattr $C$DW$316, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$316, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$316, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$317	.dwtag  DW_TAG_variable
	.dwattr $C$DW$317, DW_AT_name("intp")
	.dwattr $C$DW$317, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$317, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$317, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$318	.dwtag  DW_TAG_variable
	.dwattr $C$DW$318, DW_AT_name("intp")
	.dwattr $C$DW$318, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$318, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$318, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$319	.dwtag  DW_TAG_variable
	.dwattr $C$DW$319, DW_AT_name("intp")
	.dwattr $C$DW$319, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$319, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$319, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$320	.dwtag  DW_TAG_variable
	.dwattr $C$DW$320, DW_AT_name("intp")
	.dwattr $C$DW$320, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$320, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$320, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$321	.dwtag  DW_TAG_variable
	.dwattr $C$DW$321, DW_AT_name("intp")
	.dwattr $C$DW$321, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$321, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$321, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$322	.dwtag  DW_TAG_variable
	.dwattr $C$DW$322, DW_AT_name("intp")
	.dwattr $C$DW$322, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$322, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$322, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$323	.dwtag  DW_TAG_variable
	.dwattr $C$DW$323, DW_AT_name("intp")
	.dwattr $C$DW$323, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$323, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$323, DW_AT_location[DW_OP_reg4]

;* AR4   assigned to _intp
$C$DW$324	.dwtag  DW_TAG_variable
	.dwattr $C$DW$324, DW_AT_name("intp")
	.dwattr $C$DW$324, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$324, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$324, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$325	.dwtag  DW_TAG_variable
	.dwattr $C$DW$325, DW_AT_name("intp")
	.dwattr $C$DW$325, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$325, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$325, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$326	.dwtag  DW_TAG_variable
	.dwattr $C$DW$326, DW_AT_name("intp")
	.dwattr $C$DW$326, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$326, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$326, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$327	.dwtag  DW_TAG_variable
	.dwattr $C$DW$327, DW_AT_name("intp")
	.dwattr $C$DW$327, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$327, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$327, DW_AT_location[DW_OP_reg12]

;* AR0   assigned to _intp
$C$DW$328	.dwtag  DW_TAG_variable
	.dwattr $C$DW$328, DW_AT_name("intp")
	.dwattr $C$DW$328, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$328, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$328, DW_AT_location[DW_OP_reg4]

;* AR0   assigned to _intp
$C$DW$329	.dwtag  DW_TAG_variable
	.dwattr $C$DW$329, DW_AT_name("intp")
	.dwattr $C$DW$329, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$329, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$329, DW_AT_location[DW_OP_reg4]

;* AR5   assigned to _intp
$C$DW$330	.dwtag  DW_TAG_variable
	.dwattr $C$DW$330, DW_AT_name("intp")
	.dwattr $C$DW$330, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$330, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$330, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$331	.dwtag  DW_TAG_variable
	.dwattr $C$DW$331, DW_AT_name("intp")
	.dwattr $C$DW$331, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$331, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$331, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$332	.dwtag  DW_TAG_variable
	.dwattr $C$DW$332, DW_AT_name("intp")
	.dwattr $C$DW$332, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$332, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$332, DW_AT_location[DW_OP_reg18]

;* AR1   assigned to _intp
$C$DW$333	.dwtag  DW_TAG_variable
	.dwattr $C$DW$333, DW_AT_name("intp")
	.dwattr $C$DW$333, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$333, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$333, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$334	.dwtag  DW_TAG_variable
	.dwattr $C$DW$334, DW_AT_name("intp")
	.dwattr $C$DW$334, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$334, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$334, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$335	.dwtag  DW_TAG_variable
	.dwattr $C$DW$335, DW_AT_name("intp")
	.dwattr $C$DW$335, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$335, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$335, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$336	.dwtag  DW_TAG_variable
	.dwattr $C$DW$336, DW_AT_name("intp")
	.dwattr $C$DW$336, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$336, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$336, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$337	.dwtag  DW_TAG_variable
	.dwattr $C$DW$337, DW_AT_name("intp")
	.dwattr $C$DW$337, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$337, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$337, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$338	.dwtag  DW_TAG_variable
	.dwattr $C$DW$338, DW_AT_name("intp")
	.dwattr $C$DW$338, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$338, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$338, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$339	.dwtag  DW_TAG_variable
	.dwattr $C$DW$339, DW_AT_name("intp")
	.dwattr $C$DW$339, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$339, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$339, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$340	.dwtag  DW_TAG_variable
	.dwattr $C$DW$340, DW_AT_name("intp")
	.dwattr $C$DW$340, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$340, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$340, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$341	.dwtag  DW_TAG_variable
	.dwattr $C$DW$341, DW_AT_name("intp")
	.dwattr $C$DW$341, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$341, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$341, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$342	.dwtag  DW_TAG_variable
	.dwattr $C$DW$342, DW_AT_name("intp")
	.dwattr $C$DW$342, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$342, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$342, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$343	.dwtag  DW_TAG_variable
	.dwattr $C$DW$343, DW_AT_name("intp")
	.dwattr $C$DW$343, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$343, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$343, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$344	.dwtag  DW_TAG_variable
	.dwattr $C$DW$344, DW_AT_name("intp")
	.dwattr $C$DW$344, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$344, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$344, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$345	.dwtag  DW_TAG_variable
	.dwattr $C$DW$345, DW_AT_name("intp")
	.dwattr $C$DW$345, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$345, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$345, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$346	.dwtag  DW_TAG_variable
	.dwattr $C$DW$346, DW_AT_name("intp")
	.dwattr $C$DW$346, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$346, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$346, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$347	.dwtag  DW_TAG_variable
	.dwattr $C$DW$347, DW_AT_name("intp")
	.dwattr $C$DW$347, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$347, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$347, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$348	.dwtag  DW_TAG_variable
	.dwattr $C$DW$348, DW_AT_name("intp")
	.dwattr $C$DW$348, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$348, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$348, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$349	.dwtag  DW_TAG_variable
	.dwattr $C$DW$349, DW_AT_name("intp")
	.dwattr $C$DW$349, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$349, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$349, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$350	.dwtag  DW_TAG_variable
	.dwattr $C$DW$350, DW_AT_name("intp")
	.dwattr $C$DW$350, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$350, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$350, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$351	.dwtag  DW_TAG_variable
	.dwattr $C$DW$351, DW_AT_name("intp")
	.dwattr $C$DW$351, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$351, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$351, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$352	.dwtag  DW_TAG_variable
	.dwattr $C$DW$352, DW_AT_name("intp")
	.dwattr $C$DW$352, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$352, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$352, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$353	.dwtag  DW_TAG_variable
	.dwattr $C$DW$353, DW_AT_name("intp")
	.dwattr $C$DW$353, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$353, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$353, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$354	.dwtag  DW_TAG_variable
	.dwattr $C$DW$354, DW_AT_name("intp")
	.dwattr $C$DW$354, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$354, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$354, DW_AT_location[DW_OP_reg18]

;* AR6   assigned to _intp
$C$DW$355	.dwtag  DW_TAG_variable
	.dwattr $C$DW$355, DW_AT_name("intp")
	.dwattr $C$DW$355, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$355, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$355, DW_AT_location[DW_OP_reg16]

;* AR5   assigned to _intp
$C$DW$356	.dwtag  DW_TAG_variable
	.dwattr $C$DW$356, DW_AT_name("intp")
	.dwattr $C$DW$356, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$356, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$356, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$357	.dwtag  DW_TAG_variable
	.dwattr $C$DW$357, DW_AT_name("intp")
	.dwattr $C$DW$357, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$357, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$357, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$358	.dwtag  DW_TAG_variable
	.dwattr $C$DW$358, DW_AT_name("intp")
	.dwattr $C$DW$358, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$358, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$358, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$359	.dwtag  DW_TAG_variable
	.dwattr $C$DW$359, DW_AT_name("intp")
	.dwattr $C$DW$359, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$359, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$359, DW_AT_location[DW_OP_reg14]

;* AR0   assigned to _intp
$C$DW$360	.dwtag  DW_TAG_variable
	.dwattr $C$DW$360, DW_AT_name("intp")
	.dwattr $C$DW$360, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$360, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$360, DW_AT_location[DW_OP_reg4]

;* AR7   assigned to _intp
$C$DW$361	.dwtag  DW_TAG_variable
	.dwattr $C$DW$361, DW_AT_name("intp")
	.dwattr $C$DW$361, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$361, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$361, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$362	.dwtag  DW_TAG_variable
	.dwattr $C$DW$362, DW_AT_name("intp")
	.dwattr $C$DW$362, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$362, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$362, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$363	.dwtag  DW_TAG_variable
	.dwattr $C$DW$363, DW_AT_name("intp")
	.dwattr $C$DW$363, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$363, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$363, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$364	.dwtag  DW_TAG_variable
	.dwattr $C$DW$364, DW_AT_name("intp")
	.dwattr $C$DW$364, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$364, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$364, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _intp
$C$DW$365	.dwtag  DW_TAG_variable
	.dwattr $C$DW$365, DW_AT_name("intp")
	.dwattr $C$DW$365, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$365, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$365, DW_AT_location[DW_OP_reg14]

;* AR4   assigned to _intp
$C$DW$366	.dwtag  DW_TAG_variable
	.dwattr $C$DW$366, DW_AT_name("intp")
	.dwattr $C$DW$366, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$366, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$366, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$367	.dwtag  DW_TAG_variable
	.dwattr $C$DW$367, DW_AT_name("intp")
	.dwattr $C$DW$367, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$367, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$367, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$368	.dwtag  DW_TAG_variable
	.dwattr $C$DW$368, DW_AT_name("intp")
	.dwattr $C$DW$368, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$368, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$368, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$369	.dwtag  DW_TAG_variable
	.dwattr $C$DW$369, DW_AT_name("intp")
	.dwattr $C$DW$369, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$369, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$369, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$370	.dwtag  DW_TAG_variable
	.dwattr $C$DW$370, DW_AT_name("intp")
	.dwattr $C$DW$370, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$370, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$370, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$371	.dwtag  DW_TAG_variable
	.dwattr $C$DW$371, DW_AT_name("intp")
	.dwattr $C$DW$371, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$371, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$371, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$372	.dwtag  DW_TAG_variable
	.dwattr $C$DW$372, DW_AT_name("intp")
	.dwattr $C$DW$372, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$372, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$372, DW_AT_location[DW_OP_reg12]

;* AR5   assigned to _intp
$C$DW$373	.dwtag  DW_TAG_variable
	.dwattr $C$DW$373, DW_AT_name("intp")
	.dwattr $C$DW$373, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$373, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$373, DW_AT_location[DW_OP_reg14]

;* AR1   assigned to _intp
$C$DW$374	.dwtag  DW_TAG_variable
	.dwattr $C$DW$374, DW_AT_name("intp")
	.dwattr $C$DW$374, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$374, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$374, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _intp
$C$DW$375	.dwtag  DW_TAG_variable
	.dwattr $C$DW$375, DW_AT_name("intp")
	.dwattr $C$DW$375, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$375, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$375, DW_AT_location[DW_OP_reg6]

;* AR7   assigned to _intp
$C$DW$376	.dwtag  DW_TAG_variable
	.dwattr $C$DW$376, DW_AT_name("intp")
	.dwattr $C$DW$376, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$376, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$376, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$377	.dwtag  DW_TAG_variable
	.dwattr $C$DW$377, DW_AT_name("intp")
	.dwattr $C$DW$377, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$377, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$377, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$378	.dwtag  DW_TAG_variable
	.dwattr $C$DW$378, DW_AT_name("intp")
	.dwattr $C$DW$378, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$378, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$378, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$379	.dwtag  DW_TAG_variable
	.dwattr $C$DW$379, DW_AT_name("intp")
	.dwattr $C$DW$379, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$379, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$379, DW_AT_location[DW_OP_reg18]

;* AR7   assigned to _intp
$C$DW$380	.dwtag  DW_TAG_variable
	.dwattr $C$DW$380, DW_AT_name("intp")
	.dwattr $C$DW$380, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$380, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$380, DW_AT_location[DW_OP_reg18]

;* AR5   assigned to _intp
$C$DW$381	.dwtag  DW_TAG_variable
	.dwattr $C$DW$381, DW_AT_name("intp")
	.dwattr $C$DW$381, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$381, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$381, DW_AT_location[DW_OP_reg14]

;* AR7   assigned to _intp
$C$DW$382	.dwtag  DW_TAG_variable
	.dwattr $C$DW$382, DW_AT_name("intp")
	.dwattr $C$DW$382, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$382, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$382, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _intp
$C$DW$383	.dwtag  DW_TAG_variable
	.dwattr $C$DW$383, DW_AT_name("intp")
	.dwattr $C$DW$383, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$383, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$383, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _intp
$C$DW$384	.dwtag  DW_TAG_variable
	.dwattr $C$DW$384, DW_AT_name("intp")
	.dwattr $C$DW$384, DW_AT_TI_symbol_name("_intp")
	.dwattr $C$DW$384, DW_AT_type(*$C$DW$T$310)
	.dwattr $C$DW$384, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _tempint
$C$DW$385	.dwtag  DW_TAG_variable
	.dwattr $C$DW$385, DW_AT_name("tempint")
	.dwattr $C$DW$385, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$385, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$385, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _tempint
$C$DW$386	.dwtag  DW_TAG_variable
	.dwattr $C$DW$386, DW_AT_name("tempint")
	.dwattr $C$DW$386, DW_AT_TI_symbol_name("_tempint")
	.dwattr $C$DW$386, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$386, DW_AT_location[DW_OP_reg6]

;* AR3   assigned to _temp16
$C$DW$387	.dwtag  DW_TAG_variable
	.dwattr $C$DW$387, DW_AT_name("temp16")
	.dwattr $C$DW$387, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$387, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$387, DW_AT_location[DW_OP_reg10]

$C$DW$388	.dwtag  DW_TAG_variable
	.dwattr $C$DW$388, DW_AT_name("temp16")
	.dwattr $C$DW$388, DW_AT_TI_symbol_name("_temp16")
	.dwattr $C$DW$388, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$388, DW_AT_location[DW_OP_breg20 -41]

$C$DW$389	.dwtag  DW_TAG_variable
	.dwattr $C$DW$389, DW_AT_name("temp32")
	.dwattr $C$DW$389, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$389, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$389, DW_AT_location[DW_OP_breg20 -58]

;* AL    assigned to _temp32
$C$DW$390	.dwtag  DW_TAG_variable
	.dwattr $C$DW$390, DW_AT_name("temp32")
	.dwattr $C$DW$390, DW_AT_TI_symbol_name("_temp32")
	.dwattr $C$DW$390, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$390, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _cmethod
$C$DW$391	.dwtag  DW_TAG_variable
	.dwattr $C$DW$391, DW_AT_name("cmethod")
	.dwattr $C$DW$391, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$391, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$391, DW_AT_location[DW_OP_reg6]

$C$DW$392	.dwtag  DW_TAG_variable
	.dwattr $C$DW$392, DW_AT_name("cmethod")
	.dwattr $C$DW$392, DW_AT_TI_symbol_name("_cmethod")
	.dwattr $C$DW$392, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$392, DW_AT_location[DW_OP_breg20 -41]

;* AL    assigned to _flash_ret
$C$DW$393	.dwtag  DW_TAG_variable
	.dwattr $C$DW$393, DW_AT_name("flash_ret")
	.dwattr $C$DW$393, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$393, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$393, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$394	.dwtag  DW_TAG_variable
	.dwattr $C$DW$394, DW_AT_name("flash_ret")
	.dwattr $C$DW$394, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$394, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$394, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _flash_ret
$C$DW$395	.dwtag  DW_TAG_variable
	.dwattr $C$DW$395, DW_AT_name("flash_ret")
	.dwattr $C$DW$395, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$395, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$395, DW_AT_location[DW_OP_reg0]

;* AR1   assigned to _flash_ret
$C$DW$396	.dwtag  DW_TAG_variable
	.dwattr $C$DW$396, DW_AT_name("flash_ret")
	.dwattr $C$DW$396, DW_AT_TI_symbol_name("_flash_ret")
	.dwattr $C$DW$396, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$396, DW_AT_location[DW_OP_reg6]

;* AR6   assigned to _slen
$C$DW$397	.dwtag  DW_TAG_variable
	.dwattr $C$DW$397, DW_AT_name("slen")
	.dwattr $C$DW$397, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$397, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$397, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$398	.dwtag  DW_TAG_variable
	.dwattr $C$DW$398, DW_AT_name("slen")
	.dwattr $C$DW$398, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$398, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$398, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _slen
$C$DW$399	.dwtag  DW_TAG_variable
	.dwattr $C$DW$399, DW_AT_name("slen")
	.dwattr $C$DW$399, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$399, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$399, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _slen
$C$DW$400	.dwtag  DW_TAG_variable
	.dwattr $C$DW$400, DW_AT_name("slen")
	.dwattr $C$DW$400, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$400, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$400, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _slen
$C$DW$401	.dwtag  DW_TAG_variable
	.dwattr $C$DW$401, DW_AT_name("slen")
	.dwattr $C$DW$401, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$401, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$401, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _slen
$C$DW$402	.dwtag  DW_TAG_variable
	.dwattr $C$DW$402, DW_AT_name("slen")
	.dwattr $C$DW$402, DW_AT_TI_symbol_name("_slen")
	.dwattr $C$DW$402, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$402, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$403	.dwtag  DW_TAG_variable
	.dwattr $C$DW$403, DW_AT_name("pt")
	.dwattr $C$DW$403, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$403, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$403, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _pt
$C$DW$404	.dwtag  DW_TAG_variable
	.dwattr $C$DW$404, DW_AT_name("pt")
	.dwattr $C$DW$404, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$404, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$404, DW_AT_location[DW_OP_reg0]

$C$DW$405	.dwtag  DW_TAG_variable
	.dwattr $C$DW$405, DW_AT_name("pt")
	.dwattr $C$DW$405, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$405, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$405, DW_AT_location[DW_OP_breg20 -53]

$C$DW$406	.dwtag  DW_TAG_variable
	.dwattr $C$DW$406, DW_AT_name("pt")
	.dwattr $C$DW$406, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$406, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$406, DW_AT_location[DW_OP_breg20 -53]

;* AL    assigned to _pt
$C$DW$407	.dwtag  DW_TAG_variable
	.dwattr $C$DW$407, DW_AT_name("pt")
	.dwattr $C$DW$407, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$407, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$407, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _pt
$C$DW$408	.dwtag  DW_TAG_variable
	.dwattr $C$DW$408, DW_AT_name("pt")
	.dwattr $C$DW$408, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$408, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$408, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _pt
$C$DW$409	.dwtag  DW_TAG_variable
	.dwattr $C$DW$409, DW_AT_name("pt")
	.dwattr $C$DW$409, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$409, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$409, DW_AT_location[DW_OP_reg12]

$C$DW$410	.dwtag  DW_TAG_variable
	.dwattr $C$DW$410, DW_AT_name("pt")
	.dwattr $C$DW$410, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$410, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$410, DW_AT_location[DW_OP_breg20 -41]

;* AR6   assigned to _pt
$C$DW$411	.dwtag  DW_TAG_variable
	.dwattr $C$DW$411, DW_AT_name("pt")
	.dwattr $C$DW$411, DW_AT_TI_symbol_name("_pt")
	.dwattr $C$DW$411, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$411, DW_AT_location[DW_OP_reg16]

;* AR4   assigned to _wtp
$C$DW$412	.dwtag  DW_TAG_variable
	.dwattr $C$DW$412, DW_AT_name("wtp")
	.dwattr $C$DW$412, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$412, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$412, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$413	.dwtag  DW_TAG_variable
	.dwattr $C$DW$413, DW_AT_name("wtp")
	.dwattr $C$DW$413, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$413, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$413, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$414	.dwtag  DW_TAG_variable
	.dwattr $C$DW$414, DW_AT_name("wtp")
	.dwattr $C$DW$414, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$414, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$414, DW_AT_location[DW_OP_reg12]

;* PL    assigned to _wtp
$C$DW$415	.dwtag  DW_TAG_variable
	.dwattr $C$DW$415, DW_AT_name("wtp")
	.dwattr $C$DW$415, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$415, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$415, DW_AT_location[DW_OP_reg2]

;* AR4   assigned to _wtp
$C$DW$416	.dwtag  DW_TAG_variable
	.dwattr $C$DW$416, DW_AT_name("wtp")
	.dwattr $C$DW$416, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$416, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$416, DW_AT_location[DW_OP_reg12]

;* AR4   assigned to _wtp
$C$DW$417	.dwtag  DW_TAG_variable
	.dwattr $C$DW$417, DW_AT_name("wtp")
	.dwattr $C$DW$417, DW_AT_TI_symbol_name("_wtp")
	.dwattr $C$DW$417, DW_AT_type(*$C$DW$T$122)
	.dwattr $C$DW$417, DW_AT_location[DW_OP_reg12]

$C$DW$418	.dwtag  DW_TAG_variable
	.dwattr $C$DW$418, DW_AT_name("cmdlen")
	.dwattr $C$DW$418, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$418, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$418, DW_AT_location[DW_OP_breg20 -53]

;* AL    assigned to _cmdlen
$C$DW$419	.dwtag  DW_TAG_variable
	.dwattr $C$DW$419, DW_AT_name("cmdlen")
	.dwattr $C$DW$419, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$419, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$419, DW_AT_location[DW_OP_reg0]

$C$DW$420	.dwtag  DW_TAG_variable
	.dwattr $C$DW$420, DW_AT_name("cmdlen")
	.dwattr $C$DW$420, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$420, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$420, DW_AT_location[DW_OP_breg20 -41]

$C$DW$421	.dwtag  DW_TAG_variable
	.dwattr $C$DW$421, DW_AT_name("cmdlen")
	.dwattr $C$DW$421, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$421, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$421, DW_AT_location[DW_OP_breg20 -41]

;* AR6   assigned to _cmdlen
$C$DW$422	.dwtag  DW_TAG_variable
	.dwattr $C$DW$422, DW_AT_name("cmdlen")
	.dwattr $C$DW$422, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$422, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$422, DW_AT_location[DW_OP_reg16]

;* AL    assigned to _cmdlen
$C$DW$423	.dwtag  DW_TAG_variable
	.dwattr $C$DW$423, DW_AT_name("cmdlen")
	.dwattr $C$DW$423, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$423, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$423, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _cmdlen
$C$DW$424	.dwtag  DW_TAG_variable
	.dwattr $C$DW$424, DW_AT_name("cmdlen")
	.dwattr $C$DW$424, DW_AT_TI_symbol_name("_cmdlen")
	.dwattr $C$DW$424, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$424, DW_AT_location[DW_OP_reg0]

$C$DW$425	.dwtag  DW_TAG_variable
	.dwattr $C$DW$425, DW_AT_name("k")
	.dwattr $C$DW$425, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$425, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$425, DW_AT_location[DW_OP_breg20 -53]

$C$DW$426	.dwtag  DW_TAG_variable
	.dwattr $C$DW$426, DW_AT_name("k")
	.dwattr $C$DW$426, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$426, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$426, DW_AT_location[DW_OP_breg20 -54]

$C$DW$427	.dwtag  DW_TAG_variable
	.dwattr $C$DW$427, DW_AT_name("k")
	.dwattr $C$DW$427, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$427, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$427, DW_AT_location[DW_OP_breg20 -54]

$C$DW$428	.dwtag  DW_TAG_variable
	.dwattr $C$DW$428, DW_AT_name("k")
	.dwattr $C$DW$428, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$428, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$428, DW_AT_location[DW_OP_breg20 -41]

;* AR6   assigned to _k
$C$DW$429	.dwtag  DW_TAG_variable
	.dwattr $C$DW$429, DW_AT_name("k")
	.dwattr $C$DW$429, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$429, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$429, DW_AT_location[DW_OP_reg16]

$C$DW$430	.dwtag  DW_TAG_variable
	.dwattr $C$DW$430, DW_AT_name("k")
	.dwattr $C$DW$430, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$430, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$430, DW_AT_location[DW_OP_breg20 -53]

$C$DW$431	.dwtag  DW_TAG_variable
	.dwattr $C$DW$431, DW_AT_name("k")
	.dwattr $C$DW$431, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$431, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$431, DW_AT_location[DW_OP_breg20 -41]

;* PL    assigned to _k
$C$DW$432	.dwtag  DW_TAG_variable
	.dwattr $C$DW$432, DW_AT_name("k")
	.dwattr $C$DW$432, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$432, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$432, DW_AT_location[DW_OP_reg2]

$C$DW$433	.dwtag  DW_TAG_variable
	.dwattr $C$DW$433, DW_AT_name("k")
	.dwattr $C$DW$433, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$433, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$433, DW_AT_location[DW_OP_breg20 -41]

;* PL    assigned to _k
$C$DW$434	.dwtag  DW_TAG_variable
	.dwattr $C$DW$434, DW_AT_name("k")
	.dwattr $C$DW$434, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$434, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$434, DW_AT_location[DW_OP_reg2]

;* AR5   assigned to _k
$C$DW$435	.dwtag  DW_TAG_variable
	.dwattr $C$DW$435, DW_AT_name("k")
	.dwattr $C$DW$435, DW_AT_TI_symbol_name("_k")
	.dwattr $C$DW$435, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$435, DW_AT_location[DW_OP_reg14]

;* AR3   assigned to _j
$C$DW$436	.dwtag  DW_TAG_variable
	.dwattr $C$DW$436, DW_AT_name("j")
	.dwattr $C$DW$436, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$436, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$436, DW_AT_location[DW_OP_reg10]

$C$DW$437	.dwtag  DW_TAG_variable
	.dwattr $C$DW$437, DW_AT_name("j")
	.dwattr $C$DW$437, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$437, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$437, DW_AT_location[DW_OP_breg20 -41]

$C$DW$438	.dwtag  DW_TAG_variable
	.dwattr $C$DW$438, DW_AT_name("j")
	.dwattr $C$DW$438, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$438, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$438, DW_AT_location[DW_OP_breg20 -41]

$C$DW$439	.dwtag  DW_TAG_variable
	.dwattr $C$DW$439, DW_AT_name("j")
	.dwattr $C$DW$439, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$439, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$439, DW_AT_location[DW_OP_breg20 -41]

;* AR1   assigned to _j
$C$DW$440	.dwtag  DW_TAG_variable
	.dwattr $C$DW$440, DW_AT_name("j")
	.dwattr $C$DW$440, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$440, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$440, DW_AT_location[DW_OP_reg6]

$C$DW$441	.dwtag  DW_TAG_variable
	.dwattr $C$DW$441, DW_AT_name("j")
	.dwattr $C$DW$441, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$441, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$441, DW_AT_location[DW_OP_breg20 -41]

$C$DW$442	.dwtag  DW_TAG_variable
	.dwattr $C$DW$442, DW_AT_name("j")
	.dwattr $C$DW$442, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$442, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$442, DW_AT_location[DW_OP_breg20 -41]

$C$DW$443	.dwtag  DW_TAG_variable
	.dwattr $C$DW$443, DW_AT_name("j")
	.dwattr $C$DW$443, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$443, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$443, DW_AT_location[DW_OP_breg20 -41]

$C$DW$444	.dwtag  DW_TAG_variable
	.dwattr $C$DW$444, DW_AT_name("j")
	.dwattr $C$DW$444, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$444, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$444, DW_AT_location[DW_OP_breg20 -41]

$C$DW$445	.dwtag  DW_TAG_variable
	.dwattr $C$DW$445, DW_AT_name("j")
	.dwattr $C$DW$445, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$445, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$445, DW_AT_location[DW_OP_breg20 -54]

$C$DW$446	.dwtag  DW_TAG_variable
	.dwattr $C$DW$446, DW_AT_name("j")
	.dwattr $C$DW$446, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$446, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$446, DW_AT_location[DW_OP_breg20 -54]

$C$DW$447	.dwtag  DW_TAG_variable
	.dwattr $C$DW$447, DW_AT_name("j")
	.dwattr $C$DW$447, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$447, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$447, DW_AT_location[DW_OP_breg20 -41]

$C$DW$448	.dwtag  DW_TAG_variable
	.dwattr $C$DW$448, DW_AT_name("j")
	.dwattr $C$DW$448, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$448, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$448, DW_AT_location[DW_OP_breg20 -53]

$C$DW$449	.dwtag  DW_TAG_variable
	.dwattr $C$DW$449, DW_AT_name("j")
	.dwattr $C$DW$449, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$449, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$449, DW_AT_location[DW_OP_breg20 -55]

$C$DW$450	.dwtag  DW_TAG_variable
	.dwattr $C$DW$450, DW_AT_name("j")
	.dwattr $C$DW$450, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$450, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$450, DW_AT_location[DW_OP_breg20 -42]

$C$DW$451	.dwtag  DW_TAG_variable
	.dwattr $C$DW$451, DW_AT_name("j")
	.dwattr $C$DW$451, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$451, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$451, DW_AT_location[DW_OP_breg20 -42]

$C$DW$452	.dwtag  DW_TAG_variable
	.dwattr $C$DW$452, DW_AT_name("j")
	.dwattr $C$DW$452, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$452, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$452, DW_AT_location[DW_OP_breg20 -42]

$C$DW$453	.dwtag  DW_TAG_variable
	.dwattr $C$DW$453, DW_AT_name("j")
	.dwattr $C$DW$453, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$453, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$453, DW_AT_location[DW_OP_breg20 -42]

$C$DW$454	.dwtag  DW_TAG_variable
	.dwattr $C$DW$454, DW_AT_name("j")
	.dwattr $C$DW$454, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$454, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$454, DW_AT_location[DW_OP_breg20 -42]

$C$DW$455	.dwtag  DW_TAG_variable
	.dwattr $C$DW$455, DW_AT_name("j")
	.dwattr $C$DW$455, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$455, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$455, DW_AT_location[DW_OP_breg20 -42]

$C$DW$456	.dwtag  DW_TAG_variable
	.dwattr $C$DW$456, DW_AT_name("j")
	.dwattr $C$DW$456, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$456, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$456, DW_AT_location[DW_OP_breg20 -41]

$C$DW$457	.dwtag  DW_TAG_variable
	.dwattr $C$DW$457, DW_AT_name("j")
	.dwattr $C$DW$457, DW_AT_TI_symbol_name("_j")
	.dwattr $C$DW$457, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$457, DW_AT_location[DW_OP_breg20 -55]

;* AR1   assigned to _i
$C$DW$458	.dwtag  DW_TAG_variable
	.dwattr $C$DW$458, DW_AT_name("i")
	.dwattr $C$DW$458, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$458, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$458, DW_AT_location[DW_OP_reg6]

;* AR1   assigned to _i
$C$DW$459	.dwtag  DW_TAG_variable
	.dwattr $C$DW$459, DW_AT_name("i")
	.dwattr $C$DW$459, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$459, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$459, DW_AT_location[DW_OP_reg6]

;* AL    assigned to _i
$C$DW$460	.dwtag  DW_TAG_variable
	.dwattr $C$DW$460, DW_AT_name("i")
	.dwattr $C$DW$460, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$460, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$460, DW_AT_location[DW_OP_reg0]

$C$DW$461	.dwtag  DW_TAG_variable
	.dwattr $C$DW$461, DW_AT_name("i")
	.dwattr $C$DW$461, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$461, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$461, DW_AT_location[DW_OP_breg20 -41]

;* AR7   assigned to _i
$C$DW$462	.dwtag  DW_TAG_variable
	.dwattr $C$DW$462, DW_AT_name("i")
	.dwattr $C$DW$462, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$462, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$462, DW_AT_location[DW_OP_reg18]

;* AR4   assigned to _i
$C$DW$463	.dwtag  DW_TAG_variable
	.dwattr $C$DW$463, DW_AT_name("i")
	.dwattr $C$DW$463, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$463, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$463, DW_AT_location[DW_OP_reg12]

$C$DW$464	.dwtag  DW_TAG_variable
	.dwattr $C$DW$464, DW_AT_name("i")
	.dwattr $C$DW$464, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$464, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$464, DW_AT_location[DW_OP_breg20 -41]

;* AL    assigned to _i
$C$DW$465	.dwtag  DW_TAG_variable
	.dwattr $C$DW$465, DW_AT_name("i")
	.dwattr $C$DW$465, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$465, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$465, DW_AT_location[DW_OP_reg0]

;* AR4   assigned to _i
$C$DW$466	.dwtag  DW_TAG_variable
	.dwattr $C$DW$466, DW_AT_name("i")
	.dwattr $C$DW$466, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$466, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$466, DW_AT_location[DW_OP_reg12]

;* AL    assigned to _i
$C$DW$467	.dwtag  DW_TAG_variable
	.dwattr $C$DW$467, DW_AT_name("i")
	.dwattr $C$DW$467, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$467, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$467, DW_AT_location[DW_OP_reg0]

;* AR6   assigned to _i
$C$DW$468	.dwtag  DW_TAG_variable
	.dwattr $C$DW$468, DW_AT_name("i")
	.dwattr $C$DW$468, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$468, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$468, DW_AT_location[DW_OP_reg16]

$C$DW$469	.dwtag  DW_TAG_variable
	.dwattr $C$DW$469, DW_AT_name("i")
	.dwattr $C$DW$469, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$469, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$469, DW_AT_location[DW_OP_breg20 -41]

$C$DW$470	.dwtag  DW_TAG_variable
	.dwattr $C$DW$470, DW_AT_name("i")
	.dwattr $C$DW$470, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$470, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$470, DW_AT_location[DW_OP_breg20 -41]

$C$DW$471	.dwtag  DW_TAG_variable
	.dwattr $C$DW$471, DW_AT_name("i")
	.dwattr $C$DW$471, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$471, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$471, DW_AT_location[DW_OP_breg20 -42]

;* AL    assigned to _i
$C$DW$472	.dwtag  DW_TAG_variable
	.dwattr $C$DW$472, DW_AT_name("i")
	.dwattr $C$DW$472, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$472, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$472, DW_AT_location[DW_OP_reg0]

;* AL    assigned to _i
$C$DW$473	.dwtag  DW_TAG_variable
	.dwattr $C$DW$473, DW_AT_name("i")
	.dwattr $C$DW$473, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$473, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$473, DW_AT_location[DW_OP_reg0]

;* AH    assigned to _i
$C$DW$474	.dwtag  DW_TAG_variable
	.dwattr $C$DW$474, DW_AT_name("i")
	.dwattr $C$DW$474, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$474, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$474, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$475	.dwtag  DW_TAG_variable
	.dwattr $C$DW$475, DW_AT_name("i")
	.dwattr $C$DW$475, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$475, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$475, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$476	.dwtag  DW_TAG_variable
	.dwattr $C$DW$476, DW_AT_name("i")
	.dwattr $C$DW$476, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$476, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$476, DW_AT_location[DW_OP_reg14]

;* AR5   assigned to _i
$C$DW$477	.dwtag  DW_TAG_variable
	.dwattr $C$DW$477, DW_AT_name("i")
	.dwattr $C$DW$477, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$477, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$477, DW_AT_location[DW_OP_reg14]

;* AH    assigned to _i
$C$DW$478	.dwtag  DW_TAG_variable
	.dwattr $C$DW$478, DW_AT_name("i")
	.dwattr $C$DW$478, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$478, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$478, DW_AT_location[DW_OP_reg1]

;* AR5   assigned to _i
$C$DW$479	.dwtag  DW_TAG_variable
	.dwattr $C$DW$479, DW_AT_name("i")
	.dwattr $C$DW$479, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$479, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$479, DW_AT_location[DW_OP_reg14]

;* AR6   assigned to _i
$C$DW$480	.dwtag  DW_TAG_variable
	.dwattr $C$DW$480, DW_AT_name("i")
	.dwattr $C$DW$480, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$480, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$480, DW_AT_location[DW_OP_reg16]

;* AR1   assigned to _i
$C$DW$481	.dwtag  DW_TAG_variable
	.dwattr $C$DW$481, DW_AT_name("i")
	.dwattr $C$DW$481, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$481, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$481, DW_AT_location[DW_OP_reg6]

;* AH    assigned to _i
$C$DW$482	.dwtag  DW_TAG_variable
	.dwattr $C$DW$482, DW_AT_name("i")
	.dwattr $C$DW$482, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$482, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$482, DW_AT_location[DW_OP_reg1]

;* AH    assigned to _i
$C$DW$483	.dwtag  DW_TAG_variable
	.dwattr $C$DW$483, DW_AT_name("i")
	.dwattr $C$DW$483, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$483, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$483, DW_AT_location[DW_OP_reg1]

;* AR4   assigned to _i
$C$DW$484	.dwtag  DW_TAG_variable
	.dwattr $C$DW$484, DW_AT_name("i")
	.dwattr $C$DW$484, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$484, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$484, DW_AT_location[DW_OP_reg12]

;* AR6   assigned to _i
$C$DW$485	.dwtag  DW_TAG_variable
	.dwattr $C$DW$485, DW_AT_name("i")
	.dwattr $C$DW$485, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$485, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$485, DW_AT_location[DW_OP_reg16]

;* AR6   assigned to _i
$C$DW$486	.dwtag  DW_TAG_variable
	.dwattr $C$DW$486, DW_AT_name("i")
	.dwattr $C$DW$486, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$486, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$486, DW_AT_location[DW_OP_reg16]

$C$DW$487	.dwtag  DW_TAG_variable
	.dwattr $C$DW$487, DW_AT_name("i")
	.dwattr $C$DW$487, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$487, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$487, DW_AT_location[DW_OP_breg20 -41]

;* AR6   assigned to _i
$C$DW$488	.dwtag  DW_TAG_variable
	.dwattr $C$DW$488, DW_AT_name("i")
	.dwattr $C$DW$488, DW_AT_TI_symbol_name("_i")
	.dwattr $C$DW$488, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$488, DW_AT_location[DW_OP_reg16]

$C$DW$489	.dwtag  DW_TAG_variable
	.dwattr $C$DW$489, DW_AT_name("volt")
	.dwattr $C$DW$489, DW_AT_TI_symbol_name("_volt")
	.dwattr $C$DW$489, DW_AT_type(*$C$DW$T$372)
	.dwattr $C$DW$489, DW_AT_location[DW_OP_breg20 -26]

$C$DW$490	.dwtag  DW_TAG_variable
	.dwattr $C$DW$490, DW_AT_name("dsum")
	.dwattr $C$DW$490, DW_AT_TI_symbol_name("_dsum")
	.dwattr $C$DW$490, DW_AT_type(*$C$DW$T$351)
	.dwattr $C$DW$490, DW_AT_location[DW_OP_breg20 -34]

$C$DW$491	.dwtag  DW_TAG_variable
	.dwattr $C$DW$491, DW_AT_name("dacc")
	.dwattr $C$DW$491, DW_AT_TI_symbol_name("_dacc")
	.dwattr $C$DW$491, DW_AT_type(*$C$DW$T$309)
	.dwattr $C$DW$491, DW_AT_location[DW_OP_breg20 -37]

$C$DW$492	.dwtag  DW_TAG_variable
	.dwattr $C$DW$492, DW_AT_name("sampcnt")
	.dwattr $C$DW$492, DW_AT_TI_symbol_name("_sampcnt")
	.dwattr $C$DW$492, DW_AT_type(*$C$DW$T$332)
	.dwattr $C$DW$492, DW_AT_location[DW_OP_breg20 -40]

	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVL      *SP++,XAR1            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 7, 2
	.dwcfi	cfa_offset, -4
        MOVL      *SP++,XAR2            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 9, 4
	.dwcfi	cfa_offset, -6
        MOVL      *SP++,XAR3            ; [CPU_] 
	.dwcfi	save_reg_to_mem, 11, 6
	.dwcfi	cfa_offset, -8
        MOVZ      AR2,SP                ; [CPU_] 
        SUBB      FP,#8                 ; [CPU_U] 
        ADD       SP,#138               ; [CPU_] 
	.dwcfi	cfa_offset, -146
	.dwpsn	file "../Source/prod.c",line 214,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 214 | sys_init();                                                            
;----------------------------------------------------------------------
$C$DW$493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$493, DW_AT_name("_sys_init")
	.dwattr $C$DW$493, DW_AT_TI_call

        LCR       #_sys_init            ; [CPU_] |214| 
        ; call occurs [#_sys_init] ; [] |214| 
	.dwpsn	file "../Source/prod.c",line 216,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 216 | delay_us(30000);                        // delay for 30 ms             
; 218 | // Clear all interrupts and initialize PIE vector table:               
; 219 | // Disable CPU interrupts                                              
; 220 | DINT;                                                                  
; 221 | // Initialize PIE control registers to their default state.            
; 222 | // The default state is all PIE interrupts disabled and flags are clear
;     | ed.                                                                    
; 223 | // This function is found in the DSP281x_PieCtrl.c file.               
;----------------------------------------------------------------------
        MOV       AL,#30000             ; [CPU_] |216| 
$C$DW$494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$494, DW_AT_name("_delay_us")
	.dwattr $C$DW$494, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |216| 
        ; call occurs [#_delay_us] ; [] |216| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 224,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 224 | InitPieCtrl();                                                         
; 225 | // Disable CPU interrupts and clear all CPU interrupt flags:           
;----------------------------------------------------------------------
$C$DW$495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$495, DW_AT_name("_InitPieCtrl")
	.dwattr $C$DW$495, DW_AT_TI_call

        LCR       #_InitPieCtrl         ; [CPU_] |224| 
        ; call occurs [#_InitPieCtrl] ; [] |224| 
	.dwpsn	file "../Source/prod.c",line 226,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 226 | IER = 0x0000;                                                          
;----------------------------------------------------------------------
        AND       IER,#0x0000           ; [CPU_] |226| 
	.dwpsn	file "../Source/prod.c",line 227,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 227 | IFR = 0x0000;                                                          
; 228 | // Initialize the PIE vector table with pointers to the shell Interrupt
; 229 | // Service Routines (ISR).                                             
; 230 | // This will populate the entire table, even if the interrupt          
; 231 | // is not used in this example.  This is useful for debug purposes.    
; 232 | // The shell ISR routines are found in DSP281x_DefaultIsr.c.           
; 233 | // This function is found in DSP281x_PieVect.c.                        
;----------------------------------------------------------------------
        AND       IFR,#0x0000           ; [CPU_] |227| 
	.dwpsn	file "../Source/prod.c",line 234,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 234 | InitPieVectTable();                                                    
;----------------------------------------------------------------------
$C$DW$496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$496, DW_AT_name("_InitPieVectTable")
	.dwattr $C$DW$496, DW_AT_TI_call

        LCR       #_InitPieVectTable    ; [CPU_] |234| 
        ; call occurs [#_InitPieVectTable] ; [] |234| 
	.dwpsn	file "../Source/prod.c",line 236,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 236 | gpio_init();                                                           
;----------------------------------------------------------------------
$C$DW$497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$497, DW_AT_name("_gpio_init")
	.dwattr $C$DW$497, DW_AT_TI_call

        LCR       #_gpio_init           ; [CPU_] |236| 
        ; call occurs [#_gpio_init] ; [] |236| 
	.dwpsn	file "../Source/prod.c",line 237,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 237 | extio_init();                                                          
;----------------------------------------------------------------------
$C$DW$498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$498, DW_AT_name("_extio_init")
	.dwattr $C$DW$498, DW_AT_TI_call

        LCR       #_extio_init          ; [CPU_] |237| 
        ; call occurs [#_extio_init] ; [] |237| 
	.dwpsn	file "../Source/prod.c",line 238,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 238 | InitECan();                                                            
;----------------------------------------------------------------------
$C$DW$499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$499, DW_AT_name("_InitECan")
	.dwattr $C$DW$499, DW_AT_TI_call

        LCR       #_InitECan            ; [CPU_] |238| 
        ; call occurs [#_InitECan] ; [] |238| 
	.dwpsn	file "../Source/prod.c",line 239,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 239 | configCAN();                                                           
; 241 | // Set SD select output as appropriate (Usually high)                  
; 242 | //SFC_SELECT(1);                        // Set SD Card select line high
;     |  (disables card for SPI)                                               
; 255 | // Copy the Flash API functions to SARAM                               
;----------------------------------------------------------------------
$C$DW$500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$500, DW_AT_name("_configCAN")
	.dwattr $C$DW$500, DW_AT_TI_call

        LCR       #_configCAN           ; [CPU_] |239| 
        ; call occurs [#_configCAN] ; [] |239| 
	.dwpsn	file "../Source/prod.c",line 256,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 256 | memcpy(&Flash28_API_RunStart, &Flash28_API_LoadStart,                  
; 257 |                 &Flash28_API_LoadEnd - &Flash28_API_LoadStart);        
; 259 | // Section secureRamFuncs contains user defined code that runs from CSM
;     |  secured RAM                                                           
;----------------------------------------------------------------------
        MOVL      XAR5,#_Flash28_API_LoadStart ; [CPU_U] |256| 
        MOVL      XAR4,#_Flash28_API_LoadEnd ; [CPU_U] |256| 
        MOVL      ACC,XAR5              ; [CPU_] |256| 
        SUBL      XAR4,ACC              ; [CPU_] |256| 
        MOVL      ACC,XAR4              ; [CPU_] |256| 
        MOVL      XAR4,#_Flash28_API_RunStart ; [CPU_U] |256| 
$C$DW$501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$501, DW_AT_name("_memcpy")
	.dwattr $C$DW$501, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |256| 
        ; call occurs [#_memcpy] ; [] |256| 
	.dwpsn	file "../Source/prod.c",line 260,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 260 | memcpy(&secureRamFuncs_runstart, &secureRamFuncs_loadstart,            
; 261 |                 &secureRamFuncs_loadend - &secureRamFuncs_loadstart);  
;----------------------------------------------------------------------
        MOVL      XAR5,#_secureRamFuncs_loadstart ; [CPU_U] |260| 
        MOVL      XAR4,#_secureRamFuncs_loadend ; [CPU_U] |260| 
        MOVL      ACC,XAR5              ; [CPU_] |260| 
        SUBL      XAR4,ACC              ; [CPU_] |260| 
        MOVL      ACC,XAR4              ; [CPU_] |260| 
        MOVL      XAR4,#_secureRamFuncs_runstart ; [CPU_U] |260| 
$C$DW$502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$502, DW_AT_name("_memcpy")
	.dwattr $C$DW$502, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |260| 
        ; call occurs [#_memcpy] ; [] |260| 
	.dwpsn	file "../Source/prod.c",line 278,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 278 | Flash_CPUScaleFactor = SCALE_FACTOR;                                   
;----------------------------------------------------------------------
        MOV       AL,#63963             ; [CPU_] |278| 
        MOV       AH,#479               ; [CPU_] |278| 
        MOVW      DP,#_Flash_CPUScaleFactor ; [CPU_U] 
        MOVL      @_Flash_CPUScaleFactor,ACC ; [CPU_] |278| 
        MOVW      DP,#_Flash_CallbackPtr ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 288,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 288 | Flash_CallbackPtr = NULL;                                              
; 290 | // Initialize the FLASH interface, run from ram so has to be after the
;     | mem cpy statement                                                      
;----------------------------------------------------------------------
        MOVB      ACC,#0                ; [CPU_] |288| 
        MOVL      @_Flash_CallbackPtr,ACC ; [CPU_] |288| 
	.dwpsn	file "../Source/prod.c",line 291,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 291 | flash_init();                                                          
;----------------------------------------------------------------------
$C$DW$503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$503, DW_AT_name("_flash_init")
	.dwattr $C$DW$503, DW_AT_TI_call

        LCR       #_flash_init          ; [CPU_] |291| 
        ; call occurs [#_flash_init] ; [] |291| 
	.dwpsn	file "../Source/prod.c",line 293,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 293 | led_init();                             // the two leds                
;----------------------------------------------------------------------
$C$DW$504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$504, DW_AT_name("_led_init")
	.dwattr $C$DW$504, DW_AT_TI_call

        LCR       #_led_init            ; [CPU_] |293| 
        ; call occurs [#_led_init] ; [] |293| 
	.dwpsn	file "../Source/prod.c",line 294,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 294 | lcd_init();                             // lcd/vfd display             
; 296 | // ************  ADDED FOR IMPACT TESTER **********/                   
;----------------------------------------------------------------------
$C$DW$505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$505, DW_AT_name("_lcd_init")
	.dwattr $C$DW$505, DW_AT_TI_call

        LCR       #_lcd_init            ; [CPU_] |294| 
        ; call occurs [#_lcd_init] ; [] |294| 
	.dwpsn	file "../Source/prod.c",line 298,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 298 | ssr_set(0, 0);                  // turn on electomagnet                
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |298| 
        MOVB      AH,#0                 ; [CPU_] |298| 
$C$DW$506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$506, DW_AT_name("_ssr_set")
	.dwattr $C$DW$506, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |298| 
        ; call occurs [#_ssr_set] ; [] |298| 
	.dwpsn	file "../Source/prod.c",line 299,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 299 | ssr_set(1, 0);                  // turn off jog up                     
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |299| 
        MOVB      AH,#0                 ; [CPU_] |299| 
$C$DW$507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$507, DW_AT_name("_ssr_set")
	.dwattr $C$DW$507, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |299| 
        ; call occurs [#_ssr_set] ; [] |299| 
	.dwpsn	file "../Source/prod.c",line 300,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 300 | ssr_set(2, 0);                  // turn off jog down                   
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |300| 
        MOVB      AH,#0                 ; [CPU_] |300| 
$C$DW$508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$508, DW_AT_name("_ssr_set")
	.dwattr $C$DW$508, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |300| 
        ; call occurs [#_ssr_set] ; [] |300| 
	.dwpsn	file "../Source/prod.c",line 301,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 301 | ssr_set(3, 0);                  // indicate gui not connected          
; 303 | // ************  (end) ADDED FOR IMPACT TESTER **********/             
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |301| 
        MOVB      AH,#0                 ; [CPU_] |301| 
$C$DW$509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$509, DW_AT_name("_ssr_set")
	.dwattr $C$DW$509, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |301| 
        ; call occurs [#_ssr_set] ; [] |301| 
	.dwpsn	file "../Source/prod.c",line 316,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 316 | conf_read();                            // read configuration data from
;     |  flash                                                                 
;----------------------------------------------------------------------
$C$DW$510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$510, DW_AT_name("_conf_read")
	.dwattr $C$DW$510, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |316| 
        ; call occurs [#_conf_read] ; [] |316| 
	.dwpsn	file "../Source/prod.c",line 317,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 317 | if (conf_data.magic != MAGICWORD) {                                    
;----------------------------------------------------------------------
        MOV       AL,#21930             ; [CPU_] |317| 
        MOV       AH,#21930             ; [CPU_] |317| 
        MOVW      DP,#_conf_data+3190   ; [CPU_U] 
        CMPL      ACC,@_conf_data+3190  ; [CPU_] |317| 
        B         $C$L51,EQ             ; [CPU_] |317| 
        ; branchcc occurs ; [] |317| 
	.dwpsn	file "../Source/prod.c",line 318,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 318 | conf_default();                 // flash not initialized, set default  
;----------------------------------------------------------------------
$C$DW$511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$511, DW_AT_name("_conf_default")
	.dwattr $C$DW$511, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |318| 
        ; call occurs [#_conf_default] ; [] |318| 
	.dwpsn	file "../Source/prod.c",line 319,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 319 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$512, DW_AT_name("_conf_write")
	.dwattr $C$DW$512, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |319| 
        ; call occurs [#_conf_write] ; [] |319| 
$C$L51:    
	.dwpsn	file "../Source/prod.c",line 322,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 322 | shunt_switch(0);                        // open the shunt switch       
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |322| 
$C$DW$513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$513, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$513, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |322| 
        ; call occurs [#_shunt_switch] ; [] |322| 
	.dwpsn	file "../Source/prod.c",line 324,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 324 | ad7738_init();                                                         
;----------------------------------------------------------------------
$C$DW$514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$514, DW_AT_name("_ad7738_init")
	.dwattr $C$DW$514, DW_AT_TI_call

        LCR       #_ad7738_init         ; [CPU_] |324| 
        ; call occurs [#_ad7738_init] ; [] |324| 
	.dwpsn	file "../Source/prod.c",line 325,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 325 | ad7738_setcal();                                                       
; 327 | for (i = 0; i < CHS_MAX; i++) {                                        
;----------------------------------------------------------------------
$C$DW$515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$515, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$515, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |325| 
        ; call occurs [#_ad7738_setcal] ; [] |325| 
	.dwpsn	file "../Source/prod.c",line 328,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 328 | autoid[i] = 0;                                                         
; 329 | tagwasthere[i] = 0;                                                    
; 331 | autoidchanged = 0;                                                     
;----------------------------------------------------------------------
        MOVL      XAR0,#80              ; [CPU_] |328| 
        MOVL      XAR4,#_autoid         ; [CPU_U] |328| 
        MOVW      DP,#_tagwasthere      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 333 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |333| 
	.dwpsn	file "../Source/prod.c",line 328,column 3,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |328| 
        MOV       *+XAR4[0],#0          ; [CPU_] |328| 
	.dwpsn	file "../Source/prod.c",line 329,column 3,is_stmt,isa 0
        MOV       @_tagwasthere,#0      ; [CPU_] |329| 
	.dwpsn	file "../Source/prod.c",line 331,column 2,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |331| 
	.dwpsn	file "../Source/prod.c",line 333,column 2,is_stmt,isa 0
$C$DW$516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$516, DW_AT_name("_delay_us")
	.dwattr $C$DW$516, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |333| 
        ; call occurs [#_delay_us] ; [] |333| 
	.dwpsn	file "../Source/prod.c",line 335,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 335 | lcd_clear();                                                           
; 336 | version = VERSION;                                                     
;----------------------------------------------------------------------
$C$DW$517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$517, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$517, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |335| 
        ; call occurs [#_lcd_clear] ; [] |335| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 337 | sprintf(buff, "Pro-D FW ver: %.2f", version);                          
;----------------------------------------------------------------------
        MOVL      XAR1,#_buff$1         ; [CPU_U] |337| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |336| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL59        ; [CPU_U] |337| 
        MOVL      XAR0,#44              ; [CPU_] |337| 
	.dwpsn	file "../Source/prod.c",line 336,column 2,is_stmt,isa 0
        MOVL      *-SP[20],ACC          ; [CPU_] |336| 
	.dwpsn	file "../Source/prod.c",line 337,column 2,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |337| 
        MOVL      *-SP[4],ACC           ; [CPU_] |337| 
        MOVL      XAR4,XAR1             ; [CPU_] |337| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |337| 
$C$DW$518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$518, DW_AT_name("_sprintf")
	.dwattr $C$DW$518, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |337| 
        ; call occurs [#_sprintf] ; [] |337| 
	.dwpsn	file "../Source/prod.c",line 338,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 338 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |338| 
        MOVL      XAR4,XAR1             ; [CPU_] |338| 
$C$DW$519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$519, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$519, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |338| 
        ; call occurs [#_lcd_dputs] ; [] |338| 
	.dwpsn	file "../Source/prod.c",line 339,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 339 | sprintf(buff, "%s %s", __DATE__, __TIME__);                            
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL60        ; [CPU_U] |339| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |339| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |339| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |339| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |339| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |339| 
        MOVL      XAR4,XAR1             ; [CPU_] |339| 
$C$DW$520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$520, DW_AT_name("_sprintf")
	.dwattr $C$DW$520, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |339| 
        ; call occurs [#_sprintf] ; [] |339| 
	.dwpsn	file "../Source/prod.c",line 340,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 340 | lcd_dputs(buff, 20);                                                   
;----------------------------------------------------------------------
        MOVB      AL,#20                ; [CPU_] |340| 
        MOVL      XAR4,XAR1             ; [CPU_] |340| 
$C$DW$521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$521, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$521, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |340| 
        ; call occurs [#_lcd_dputs] ; [] |340| 
	.dwpsn	file "../Source/prod.c",line 341,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 341 | lcd_dputs("\"SW2\" TO CHANGE PORT", 60);                               
;----------------------------------------------------------------------
        MOVB      AL,#60                ; [CPU_] |341| 
        MOVL      XAR4,#$C$FSL63        ; [CPU_U] |341| 
$C$DW$522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$522, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$522, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |341| 
        ; call occurs [#_lcd_dputs] ; [] |341| 
	.dwpsn	file "../Source/prod.c",line 343,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 343 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOVB      XAR3,#0               ; [CPU_] |343| 
	.dwpsn	file "../Source/prod.c",line 344,column 7,is_stmt,isa 0
;----------------------------------------------------------------------
; 344 | for (i = 0; i < 100; i++)               // 2s                          
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |344| 
$C$L52:    
	.dwpsn	file "../Source/prod.c",line 346,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 346 | if (!(0x0010 & INBTTN)) {                                              
;----------------------------------------------------------------------
        IN        AL,*(0400eH)          ; [CPU_] |346| 
        TBIT      AL,#4                 ; [CPU_] |346| 
        B         $C$L53,TC             ; [CPU_] |346| 
        ; branchcc occurs ; [] |346| 
	.dwpsn	file "../Source/prod.c",line 347,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 347 | j++;                                                                   
;----------------------------------------------------------------------
        ADDB      XAR3,#1               ; [CPU_] |347| 
$C$L53:    
	.dwpsn	file "../Source/prod.c",line 350,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 350 | if (1 & i) {                                                           
; 351 |         led_set( LED1, LED_RED);                                       
; 352 |         led_set( LED2, LED_RED);                                       
; 353 | } else {                                                               
;----------------------------------------------------------------------
        TBIT      AR1,#0                ; [CPU_] |350| 
        B         $C$L54,TC             ; [CPU_] |350| 
        ; branchcc occurs ; [] |350| 
	.dwpsn	file "../Source/prod.c",line 354,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 354 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |354| 
        MOVB      AH,#2                 ; [CPU_] |354| 
$C$DW$523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$523, DW_AT_name("_led_set")
	.dwattr $C$DW$523, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |354| 
        ; call occurs [#_led_set] ; [] |354| 
	.dwpsn	file "../Source/prod.c",line 355,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 355 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AH,#2                 ; [CPU_] |355| 
        B         $C$L55,UNC            ; [CPU_] |355| 
        ; branch occurs ; [] |355| 
$C$L54:    
	.dwpsn	file "../Source/prod.c",line 351,column 4,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |351| 
        MOVB      AH,#1                 ; [CPU_] |351| 
$C$DW$524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$524, DW_AT_name("_led_set")
	.dwattr $C$DW$524, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |351| 
        ; call occurs [#_led_set] ; [] |351| 
	.dwpsn	file "../Source/prod.c",line 352,column 4,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |352| 
$C$L55:    
        MOVB      AL,#2                 ; [CPU_] |352| 
$C$DW$525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$525, DW_AT_name("_led_set")
	.dwattr $C$DW$525, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |352| 
        ; call occurs [#_led_set] ; [] |352| 
	.dwpsn	file "../Source/prod.c",line 357,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 357 | delay_us(20000);                        // 20ms                        
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |357| 
$C$DW$526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$526, DW_AT_name("_delay_us")
	.dwattr $C$DW$526, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |357| 
        ; call occurs [#_delay_us] ; [] |357| 
	.dwpsn	file "../Source/prod.c",line 344,column 14,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |344| 
        MOV       AL,AR1                ; [CPU_] |344| 
        CMPB      AL,#100               ; [CPU_] |344| 
        B         $C$L52,LT             ; [CPU_] |344| 
        ; branchcc occurs ; [] |344| 
	.dwpsn	file "../Source/prod.c",line 360,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 360 | led_set( LED1, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |360| 
        MOVB      AH,#0                 ; [CPU_] |360| 
$C$DW$527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$527, DW_AT_name("_led_set")
	.dwattr $C$DW$527, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |360| 
        ; call occurs [#_led_set] ; [] |360| 
	.dwpsn	file "../Source/prod.c",line 361,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 361 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |361| 
        MOVB      AH,#0                 ; [CPU_] |361| 
$C$DW$528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$528, DW_AT_name("_led_set")
	.dwattr $C$DW$528, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |361| 
        ; call occurs [#_led_set] ; [] |361| 
        MOV       AL,AR1                ; [CPU_] |361| 
	.dwpsn	file "../Source/prod.c",line 363,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 363 | if (i - j < 20) {                                                      
;----------------------------------------------------------------------
        SUB       AL,AR3                ; [CPU_] |363| 
        CMPB      AL,#20                ; [CPU_] |363| 
        B         $C$L57,GEQ            ; [CPU_] |363| 
        ; branchcc occurs ; [] |363| 
	.dwpsn	file "../Source/prod.c",line 364,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 364 | conf_data.rxdir++;                                                     
;----------------------------------------------------------------------
        MOVL      XAR5,#_conf_data      ; [CPU_U] |364| 
        MOVL      XAR4,XAR5             ; [CPU_] |364| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 366 | if (conf_data.rxdir > SDIR_USB) {                                      
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |366| 
	.dwpsn	file "../Source/prod.c",line 364,column 3,is_stmt,isa 0
        ADDB      XAR4,#34              ; [CPU_] |364| 
        INC       *+XAR4[0]             ; [CPU_] |364| 
	.dwpsn	file "../Source/prod.c",line 366,column 3,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |366| 
        CMPB      AL,#4                 ; [CPU_] |366| 
        B         $C$L56,LT             ; [CPU_] |366| 
        ; branchcc occurs ; [] |366| 
	.dwpsn	file "../Source/prod.c",line 367,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 367 | conf_data.rxdir = SDIR_RS232;                                          
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |367| 
        MOV       *+XAR5[AR0],#0        ; [CPU_] |367| 
$C$L56:    
	.dwpsn	file "../Source/prod.c",line 370,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 370 | lcd_dputs("FLASH WRITING ...", 40);                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL64        ; [CPU_U] |370| 
        MOVB      AL,#40                ; [CPU_] |370| 
$C$DW$529	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$529, DW_AT_low_pc(0x00)
	.dwattr $C$DW$529, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$529, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |370| 
        ; call occurs [#_lcd_dputs] ; [] |370| 
	.dwpsn	file "../Source/prod.c",line 372,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 372 | flash_ret = conf_write();               // and write back              
;----------------------------------------------------------------------
$C$DW$530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$530, DW_AT_name("_conf_write")
	.dwattr $C$DW$530, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |372| 
        ; call occurs [#_conf_write] ; [] |372| 
$C$L57:    
	.dwpsn	file "../Source/prod.c",line 375,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 375 | temp32 = BAUD[conf_data.baud];                                         
;----------------------------------------------------------------------
        MOVL      XAR4,#_BAUD           ; [CPU_U] |375| 
        MOVL      XAR0,#74              ; [CPU_] |375| 
        MOVL      XAR1,#_conf_data      ; [CPU_U] |375| 
        CLRC      SXM                   ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |375| 
        MOVB      XAR0,#35              ; [CPU_] |375| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |375| 
        ADDL      XAR4,ACC              ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 141,column 15,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |141| 
	.dwpsn	file "../Source/prod.c",line 375,column 2,is_stmt,isa 0
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 143,column 15,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |143| 
	.dwpsn	file "../Source/prod.c",line 155,column 13,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |155| 
	.dwpsn	file "../Source/prod.c",line 165,column 12,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |165| 
	.dwpsn	file "../Source/prod.c",line 166,column 14,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |166| 
	.dwpsn	file "../Source/prod.c",line 168,column 15,is_stmt,isa 0
        MOV       *-SP[46],#60          ; [CPU_] |168| 
	.dwpsn	file "../Source/prod.c",line 169,column 16,is_stmt,isa 0
        MOV       *-SP[45],#1           ; [CPU_] |169| 
	.dwpsn	file "../Source/prod.c",line 170,column 15,is_stmt,isa 0
        MOV       *-SP[44],#15          ; [CPU_] |170| 
	.dwpsn	file "../Source/prod.c",line 171,column 15,is_stmt,isa 0
        MOV       *-SP[43],#0           ; [CPU_] |171| 
	.dwpsn	file "../Source/prod.c",line 141,column 15,is_stmt,isa 0
        MOV       *+FP[AR0],#0          ; [CPU_] |141| 
	.dwpsn	file "../Source/prod.c",line 375,column 2,is_stmt,isa 0
        MOVL      *-SP[58],ACC          ; [CPU_] |375| 
	.dwpsn	file "../Source/prod.c",line 377,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 377 | switch (conf_data.rxdir) {                                             
; 378 | case SDIR_RS232:                        // RS232, 0                    
; 379 |         led_set( LED1, LED_RED);                                       
; 380 |         led_set( LED2, LED_RED);                                       
; 381 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 382 |         scia_init(temp32);                                             
; 383 |         break;                                                         
; 384 | case SDIR_RS485:                        // RS485, 1                    
; 385 |         led_set( LED1, LED_GREEN);                                     
; 386 |         led_set( LED2, LED_RED);                                       
; 387 |         sprintf(buff, "%s, %lu bps", INTERFACE[conf_data.rxdir], temp32
;     | );                                                                     
; 388 |         scia_init(temp32);                                             
; 389 |         break;                                                         
; 390 | case SDIR_ENET:                 // Ethernet, 2                         
; 391 |         led_set( LED1, LED_RED);                                       
; 392 |         led_set( LED2, LED_GREEN);                                     
; 393 |         sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);               
; 394 |         scia_init(921600L);                                            
; 395 |         //scia_init( 460800L );                                        
; 396 |         break;                                                         
; 397 | case SDIR_USB:                  // USB, 3                              
; 398 |         GpioDataRegs.GPASET.bit.GPIOA7 = 1;                            
; 399 |         led_set( LED1, LED_GREEN);                                     
; 400 |         led_set( LED2, LED_GREEN);                                     
; 401 |         sprintf(buff, "%s, Configuring...", INTERFACE[conf_data.rxdir])
;     | ;                                                                      
; 402 |         // the USB chip can't handle 921600bps without dropping bytes  
; 403 |         // it seems 460800bps is fine so far.                          
; 404 |         // the client (PC Host) side can use any baudrate.             
; 405 |         scia_init(460800L);                                            
; 406 |         break;                                                         
; 407 | default:                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |377| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |377| 
        B         $C$L63,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
        CMPB      AL,#1                 ; [CPU_] |377| 
        B         $C$L62,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
        CMPB      AL,#2                 ; [CPU_] |377| 
        B         $C$L59,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
        CMPB      AL,#3                 ; [CPU_] |377| 
        B         $C$L58,EQ             ; [CPU_] |377| 
        ; branchcc occurs ; [] |377| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 408 | conf_data.rxdir = SDIR_ENET;                                           
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |408| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 409 | led_set( LED1, LED_RED);                                               
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |409| 
        MOVB      AH,#1                 ; [CPU_] |409| 
	.dwpsn	file "../Source/prod.c",line 408,column 3,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#2,UNC    ; [CPU_] |408| 
	.dwpsn	file "../Source/prod.c",line 409,column 3,is_stmt,isa 0
$C$DW$531	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$531, DW_AT_low_pc(0x00)
	.dwattr $C$DW$531, DW_AT_name("_led_set")
	.dwattr $C$DW$531, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |409| 
        ; call occurs [#_led_set] ; [] |409| 
	.dwpsn	file "../Source/prod.c",line 410,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 410 | led_set( LED2, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |410| 
        MOVB      AH,#2                 ; [CPU_] |410| 
$C$DW$532	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$532, DW_AT_low_pc(0x00)
	.dwattr $C$DW$532, DW_AT_name("_led_set")
	.dwattr $C$DW$532, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |410| 
        ; call occurs [#_led_set] ; [] |410| 
	.dwpsn	file "../Source/prod.c",line 411,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 411 | sprintf(buff, "%s", INTERFACE[conf_data.rxdir]);                       
; 412 | scia_init(921600L);                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |411| 
        MOVL      XAR0,#72              ; [CPU_] |411| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],XAR4          ; [CPU_] |411| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |411| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |411| 
        MOVB      XAR0,#34              ; [CPU_] |411| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |411| 
	.dwpsn	file "../Source/prod.c",line 413,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 413 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L60,UNC            ; [CPU_] |413| 
        ; branch occurs ; [] |413| 
$C$L58:    
        MOVW      DP,#_GpioDataRegs+1   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 399,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |399| 
        MOVB      AH,#2                 ; [CPU_] |399| 
	.dwpsn	file "../Source/prod.c",line 398,column 3,is_stmt,isa 0
        OR        @_GpioDataRegs+1,#0x0080 ; [CPU_] |398| 
	.dwpsn	file "../Source/prod.c",line 399,column 3,is_stmt,isa 0
$C$DW$533	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$533, DW_AT_low_pc(0x00)
	.dwattr $C$DW$533, DW_AT_name("_led_set")
	.dwattr $C$DW$533, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |399| 
        ; call occurs [#_led_set] ; [] |399| 
	.dwpsn	file "../Source/prod.c",line 400,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |400| 
        MOVB      AH,#2                 ; [CPU_] |400| 
$C$DW$534	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$534, DW_AT_low_pc(0x00)
	.dwattr $C$DW$534, DW_AT_name("_led_set")
	.dwattr $C$DW$534, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |400| 
        ; call occurs [#_led_set] ; [] |400| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 401,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL66        ; [CPU_U] |401| 
        MOVL      XAR0,#72              ; [CPU_] |401| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |401| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |401| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |401| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |401| 
        ADDL      XAR4,ACC              ; [CPU_] |401| 
        MOVL      XAR0,#44              ; [CPU_] |401| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |401| 
        MOVL      *-SP[4],ACC           ; [CPU_] |401| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |401| 
$C$DW$535	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$535, DW_AT_low_pc(0x00)
	.dwattr $C$DW$535, DW_AT_name("_sprintf")
	.dwattr $C$DW$535, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |401| 
        ; call occurs [#_sprintf] ; [] |401| 
	.dwpsn	file "../Source/prod.c",line 405,column 3,is_stmt,isa 0
        MOVL      XAR4,#460800          ; [CPU_U] |405| 
	.dwpsn	file "../Source/prod.c",line 406,column 3,is_stmt,isa 0
        B         $C$L61,UNC            ; [CPU_] |406| 
        ; branch occurs ; [] |406| 
$C$L59:    
	.dwpsn	file "../Source/prod.c",line 391,column 3,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |391| 
        MOVB      AH,#1                 ; [CPU_] |391| 
$C$DW$536	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$536, DW_AT_low_pc(0x00)
	.dwattr $C$DW$536, DW_AT_name("_led_set")
	.dwattr $C$DW$536, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |391| 
        ; call occurs [#_led_set] ; [] |391| 
	.dwpsn	file "../Source/prod.c",line 392,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |392| 
        MOVB      AH,#2                 ; [CPU_] |392| 
$C$DW$537	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$537, DW_AT_low_pc(0x00)
	.dwattr $C$DW$537, DW_AT_name("_led_set")
	.dwattr $C$DW$537, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |392| 
        ; call occurs [#_led_set] ; [] |392| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 393,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL65        ; [CPU_U] |393| 
        MOVL      XAR0,#72              ; [CPU_] |393| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |393| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |393| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |393| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |393| 
$C$L60:    
        ADDL      XAR4,ACC              ; [CPU_] |393| 
        MOVL      XAR0,#44              ; [CPU_] |393| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |393| 
        MOVL      *-SP[4],ACC           ; [CPU_] |393| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |393| 
$C$DW$538	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$538, DW_AT_low_pc(0x00)
	.dwattr $C$DW$538, DW_AT_name("_sprintf")
	.dwattr $C$DW$538, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |393| 
        ; call occurs [#_sprintf] ; [] |393| 
	.dwpsn	file "../Source/prod.c",line 394,column 3,is_stmt,isa 0
        MOVL      XAR4,#921600          ; [CPU_U] |394| 
$C$L61:    
        MOVL      ACC,XAR4              ; [CPU_] |394| 
	.dwpsn	file "../Source/prod.c",line 396,column 3,is_stmt,isa 0
        B         $C$L65,UNC            ; [CPU_] |396| 
        ; branch occurs ; [] |396| 
$C$L62:    
	.dwpsn	file "../Source/prod.c",line 385,column 3,is_stmt,isa 0
        MOVB      AH,#2                 ; [CPU_] |385| 
	.dwpsn	file "../Source/prod.c",line 389,column 3,is_stmt,isa 0
        B         $C$L64,UNC            ; [CPU_] |389| 
        ; branch occurs ; [] |389| 
$C$L63:    
	.dwpsn	file "../Source/prod.c",line 379,column 3,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |379| 
$C$L64:    
        MOVB      AL,#1                 ; [CPU_] |379| 
$C$DW$539	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$539, DW_AT_low_pc(0x00)
	.dwattr $C$DW$539, DW_AT_name("_led_set")
	.dwattr $C$DW$539, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |379| 
        ; call occurs [#_led_set] ; [] |379| 
	.dwpsn	file "../Source/prod.c",line 380,column 3,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |380| 
        MOVB      AH,#1                 ; [CPU_] |380| 
$C$DW$540	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$540, DW_AT_low_pc(0x00)
	.dwattr $C$DW$540, DW_AT_name("_led_set")
	.dwattr $C$DW$540, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |380| 
        ; call occurs [#_led_set] ; [] |380| 
        SETC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 381,column 3,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL67        ; [CPU_U] |381| 
        MOVL      XAR0,#72              ; [CPU_] |381| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |381| 
        MOV       ACC,@_conf_data+34 << 1 ; [CPU_] |381| 
        MOVL      XAR4,#_INTERFACE      ; [CPU_U] |381| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |381| 
        ADDL      XAR4,ACC              ; [CPU_] |381| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |381| 
        MOVL      XAR0,#44              ; [CPU_] |381| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |381| 
        MOVL      *-SP[4],ACC           ; [CPU_] |381| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |381| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |381| 
$C$DW$541	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$541, DW_AT_low_pc(0x00)
	.dwattr $C$DW$541, DW_AT_name("_sprintf")
	.dwattr $C$DW$541, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |381| 
        ; call occurs [#_sprintf] ; [] |381| 
        MOVL      ACC,XAR1              ; [CPU_] |381| 
$C$L65:    
	.dwpsn	file "../Source/prod.c",line 382,column 3,is_stmt,isa 0
$C$DW$542	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$542, DW_AT_low_pc(0x00)
	.dwattr $C$DW$542, DW_AT_name("_scia_init")
	.dwattr $C$DW$542, DW_AT_TI_call

        LCR       #_scia_init           ; [CPU_] |382| 
        ; call occurs [#_scia_init] ; [] |382| 
	.dwpsn	file "../Source/prod.c",line 415,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 415 | lcd_clear();                                                           
;----------------------------------------------------------------------
$C$DW$543	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$543, DW_AT_low_pc(0x00)
	.dwattr $C$DW$543, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$543, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |415| 
        ; call occurs [#_lcd_clear] ; [] |415| 
        MOVL      XAR0,#44              ; [CPU_] |415| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 416 | lcd_dputs(buff, 0);                                                    
;----------------------------------------------------------------------
        MOVB      AL,#0                 ; [CPU_] |416| 
	.dwpsn	file "../Source/prod.c",line 415,column 2,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |415| 
	.dwpsn	file "../Source/prod.c",line 416,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 418 | //DIGICTRL = conf_data.rxdir;                                          
;----------------------------------------------------------------------
$C$DW$544	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$544, DW_AT_low_pc(0x00)
	.dwattr $C$DW$544, DW_AT_name("_lcd_dputs")
	.dwattr $C$DW$544, DW_AT_TI_call

        LCR       #_lcd_dputs           ; [CPU_] |416| 
        ; call occurs [#_lcd_dputs] ; [] |416| 
	.dwpsn	file "../Source/prod.c",line 419,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 419 | uart_set_dir(conf_data.rxdir);                                         
; 421 | // initalize hardware and SFCLIB buffers                               
; 422 | //SFC_Start( SFC_Buff1, SFC_Buff2 );                                   
; 424 | // Enable global Interrupts and higher priority real-time debug events:
; 425 | EINT;                                                                  
; 426 | // Enable Global interrupt INTM                                        
; 427 | //ERTM;                         // Enable Global realtime interrupt DBG
;     | M                                                                      
;----------------------------------------------------------------------
        MOVL      XAR1,#_conf_data      ; [CPU_U] |419| 
        MOVL      XAR0,#40              ; [CPU_] |419| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |419| 
        MOVB      XAR0,#34              ; [CPU_] |419| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |419| 
$C$DW$545	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$545, DW_AT_low_pc(0x00)
	.dwattr $C$DW$545, DW_AT_name("_uart_set_dir")
	.dwattr $C$DW$545, DW_AT_TI_call

        LCR       #_uart_set_dir        ; [CPU_] |419| 
        ; call occurs [#_uart_set_dir] ; [] |419| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 429,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 429 | if (conf_data.rxdir != SDIR_USB)        // not USB                     
; 431 |         for (i = 0; i < 50; i++)                // 1s                  
; 433 |                 delay_us(20000);                // delay for 20ms      
; 435 | } else {                                                               
;----------------------------------------------------------------------
        MOVB      XAR0,#34              ; [CPU_] |429| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |429| 
        CMPB      AL,#3                 ; [CPU_] |429| 
        B         $C$L75,NEQ            ; [CPU_] |429| 
        ; branchcc occurs ; [] |429| 
        MOVW      DP,#_GpioDataRegs+22  ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 437,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 437 | GpioDataRegs.GPFCLEAR.bit.GPIOF11 = 1;  // CTS low                     
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+22,#0x0800 ; [CPU_] |437| 
        MOVL      *-SP[58],XAR4         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 439,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 439 | while (!(0x0020 & INBTTN))// SW3 press and hold for USB chip firmware u
;     | pdate                                                                  
; 441 |         j = 0;                                                         
;----------------------------------------------------------------------
        B         $C$L69,UNC            ; [CPU_] |439| 
        ; branch occurs ; [] |439| 
$C$L66:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 442,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 442 | while (scia_rx_getcmds()) {                                            
;----------------------------------------------------------------------
$C$DW$546	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$546, DW_AT_low_pc(0x00)
	.dwattr $C$DW$546, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$546, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |442| 
        ; call occurs [#_scia_rx_getcmds] ; [] |442| 
        CMPB      AL,#0                 ; [CPU_] |442| 
        B         $C$L69,EQ             ; [CPU_] |442| 
        ; branchcc occurs ; [] |442| 
	.dwpsn	file "../Source/prod.c",line 441,column 4,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |441| 
$C$L67:    
        MOVL      XAR1,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 443,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 443 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |443| 
        MOVL      XAR4,XAR1             ; [CPU_] |443| 
$C$DW$547	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$547, DW_AT_low_pc(0x00)
	.dwattr $C$DW$547, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$547, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |443| 
        ; call occurs [#_scia_rx_getcmd] ; [] |443| 
        MOV       T,*-SP[41]            ; [CPU_] |443| 
	.dwpsn	file "../Source/prod.c",line 444,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 444 | lcd_puts(cmdbuff, 20 * j);                                             
; 445 | j++;                                                                   
;----------------------------------------------------------------------
        MPYB      ACC,T,#20             ; [CPU_] |444| 
        MOVL      XAR4,XAR1             ; [CPU_] |444| 
$C$DW$548	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$548, DW_AT_low_pc(0x00)
	.dwattr $C$DW$548, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$548, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |444| 
        ; call occurs [#_lcd_puts] ; [] |444| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 446 | if (j > 3)                                                             
;----------------------------------------------------------------------
        INC       *-SP[41]              ; [CPU_] |446| 
	.dwpsn	file "../Source/prod.c",line 444,column 5,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |444| 
	.dwpsn	file "../Source/prod.c",line 446,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |446| 
        B         $C$L68,LT             ; [CPU_] |446| 
        ; branchcc occurs ; [] |446| 
	.dwpsn	file "../Source/prod.c",line 447,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 447 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[41],#0           ; [CPU_] |447| 
$C$L68:    
	.dwpsn	file "../Source/prod.c",line 442,column 4,is_stmt,isa 0
$C$DW$549	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$549, DW_AT_low_pc(0x00)
	.dwattr $C$DW$549, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$549, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |442| 
        ; call occurs [#_scia_rx_getcmds] ; [] |442| 
        CMPB      AL,#0                 ; [CPU_] |442| 
        B         $C$L67,NEQ            ; [CPU_] |442| 
        ; branchcc occurs ; [] |442| 
$C$L69:    
	.dwpsn	file "../Source/prod.c",line 439,column 10,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |439| 
        TBIT      AL,#5                 ; [CPU_] |439| 
        B         $C$L66,NTC            ; [CPU_] |439| 
        ; branchcc occurs ; [] |439| 
	.dwpsn	file "../Source/prod.c",line 451,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 451 | scia_puts("E\r");                                                      
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |451| 
        SPM       #0                    ; [CPU_] 
$C$DW$550	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$550, DW_AT_low_pc(0x00)
	.dwattr $C$DW$550, DW_AT_name("_scia_puts")
	.dwattr $C$DW$550, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |451| 
        ; call occurs [#_scia_puts] ; [] |451| 
	.dwpsn	file "../Source/prod.c",line 452,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 452 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |452| 
$C$DW$551	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$551, DW_AT_low_pc(0x00)
	.dwattr $C$DW$551, DW_AT_name("_delay_us")
	.dwattr $C$DW$551, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |452| 
        ; call occurs [#_delay_us] ; [] |452| 
	.dwpsn	file "../Source/prod.c",line 453,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 453 | scia_puts("E\r");                                                      
; 454 | j = 0;                                                                 
; 455 | #define WTT 500                                                        
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL68        ; [CPU_U] |453| 
$C$DW$552	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$552, DW_AT_low_pc(0x00)
	.dwattr $C$DW$552, DW_AT_name("_scia_puts")
	.dwattr $C$DW$552, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |453| 
        ; call occurs [#_scia_puts] ; [] |453| 
	.dwpsn	file "../Source/prod.c",line 456,column 8,is_stmt,isa 0
;----------------------------------------------------------------------
; 456 | for (i = 0; i < WTT; i++)               // 10s                         
; 458 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOVB      XAR1,#0               ; [CPU_] |456| 
	.dwpsn	file "../Source/prod.c",line 454,column 3,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |454| 
$C$L70:    
	.dwpsn	file "../Source/prod.c",line 459,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 459 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$553	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$553, DW_AT_low_pc(0x00)
	.dwattr $C$DW$553, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$553, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |459| 
        ; call occurs [#_scia_rx_getcmds] ; [] |459| 
        CMPB      AL,#0                 ; [CPU_] |459| 
        B         $C$L71,EQ             ; [CPU_] |459| 
        ; branchcc occurs ; [] |459| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 460,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 460 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |460| 
$C$DW$554	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$554, DW_AT_low_pc(0x00)
	.dwattr $C$DW$554, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$554, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |460| 
        ; call occurs [#_scia_rx_getcmd] ; [] |460| 
	.dwpsn	file "../Source/prod.c",line 461,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 461 | j++;                                                                   
;----------------------------------------------------------------------
        INC       *-SP[41]              ; [CPU_] |461| 
$C$L71:    
	.dwpsn	file "../Source/prod.c",line 463,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 463 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |463| 
$C$DW$555	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$555, DW_AT_low_pc(0x00)
	.dwattr $C$DW$555, DW_AT_name("_delay_us")
	.dwattr $C$DW$555, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |463| 
        ; call occurs [#_delay_us] ; [] |463| 
        MOV       AL,*-SP[41]           ; [CPU_] |463| 
	.dwpsn	file "../Source/prod.c",line 464,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 464 | if (j >= 2)                     // USB finished initialization         
;----------------------------------------------------------------------
        CMPB      AL,#2                 ; [CPU_] |464| 
        B         $C$L72,LT             ; [CPU_] |464| 
        ; branchcc occurs ; [] |464| 
	.dwpsn	file "../Source/prod.c",line 466,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 466 | j = 0;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[41],#0           ; [CPU_] |466| 
	.dwpsn	file "../Source/prod.c",line 467,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 467 | i = WTT - 10;                                                          
; 471 | // switch to port 1 for connection to PC host                          
;----------------------------------------------------------------------
        MOVL      XAR1,#490             ; [CPU_] |467| 
$C$L72:    
	.dwpsn	file "../Source/prod.c",line 456,column 15,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |456| 
        CMP       AR1,#500              ; [CPU_] |456| 
        B         $C$L70,LT             ; [CPU_] |456| 
        ; branchcc occurs ; [] |456| 
	.dwpsn	file "../Source/prod.c",line 472,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 472 | scia_puts("IPA\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL69        ; [CPU_U] |472| 
$C$DW$556	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$556, DW_AT_low_pc(0x00)
	.dwattr $C$DW$556, DW_AT_name("_scia_puts")
	.dwattr $C$DW$556, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |472| 
        ; call occurs [#_scia_puts] ; [] |472| 
	.dwpsn	file "../Source/prod.c",line 473,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 473 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |473| 
$C$DW$557	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$557, DW_AT_low_pc(0x00)
	.dwattr $C$DW$557, DW_AT_name("_delay_us")
	.dwattr $C$DW$557, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |473| 
        ; call occurs [#_delay_us] ; [] |473| 
	.dwpsn	file "../Source/prod.c",line 474,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 474 | scia_puts("FWV\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL70        ; [CPU_U] |474| 
$C$DW$558	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$558, DW_AT_low_pc(0x00)
	.dwattr $C$DW$558, DW_AT_name("_scia_puts")
	.dwattr $C$DW$558, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |474| 
        ; call occurs [#_scia_puts] ; [] |474| 
	.dwpsn	file "../Source/prod.c",line 475,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 475 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |475| 
$C$DW$559	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$559, DW_AT_low_pc(0x00)
	.dwattr $C$DW$559, DW_AT_name("_delay_us")
	.dwattr $C$DW$559, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |475| 
        ; call occurs [#_delay_us] ; [] |475| 
	.dwpsn	file "../Source/prod.c",line 476,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 476 | scia_puts("QSS\r");                                                    
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL71        ; [CPU_U] |476| 
$C$DW$560	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$560, DW_AT_low_pc(0x00)
	.dwattr $C$DW$560, DW_AT_name("_scia_puts")
	.dwattr $C$DW$560, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |476| 
        ; call occurs [#_scia_puts] ; [] |476| 
	.dwpsn	file "../Source/prod.c",line 477,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 477 | delay_us(20000);                        // delay for 20ms              
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |477| 
$C$DW$561	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$561, DW_AT_low_pc(0x00)
	.dwattr $C$DW$561, DW_AT_name("_delay_us")
	.dwattr $C$DW$561, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |477| 
        ; call occurs [#_delay_us] ; [] |477| 
	.dwpsn	file "../Source/prod.c",line 478,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 478 | scia_puts("SC S\r");                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#$C$FSL72        ; [CPU_U] |478| 
$C$DW$562	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$562, DW_AT_low_pc(0x00)
	.dwattr $C$DW$562, DW_AT_name("_scia_puts")
	.dwattr $C$DW$562, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |478| 
        ; call occurs [#_scia_puts] ; [] |478| 
        MOVB      XAR3,#99              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 480,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 480 | j = 0;                                                                 
; 481 | for (i = 0; i < 100; i++)               // 2s                          
; 483 |         // read up any info may come through                           
;----------------------------------------------------------------------
        MOV       *-SP[41],#0           ; [CPU_] |480| 
$C$L73:    
	.dwpsn	file "../Source/prod.c",line 484,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 484 | if (scia_rx_getcmds()) {                                               
;----------------------------------------------------------------------
$C$DW$563	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$563, DW_AT_low_pc(0x00)
	.dwattr $C$DW$563, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$563, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |484| 
        ; call occurs [#_scia_rx_getcmds] ; [] |484| 
        CMPB      AL,#0                 ; [CPU_] |484| 
        B         $C$L74,EQ             ; [CPU_] |484| 
        ; branchcc occurs ; [] |484| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 485,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 485 | scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));                              
;----------------------------------------------------------------------
        MOV       AL,#1024              ; [CPU_] |485| 
$C$DW$564	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$564, DW_AT_low_pc(0x00)
	.dwattr $C$DW$564, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$564, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |485| 
        ; call occurs [#_scia_rx_getcmd] ; [] |485| 
        MOV       T,*-SP[41]            ; [CPU_] |485| 
	.dwpsn	file "../Source/prod.c",line 486,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 486 | lcd_puts(cmdbuff, 20 * j);                                             
;----------------------------------------------------------------------
        MOVL      XAR4,*-SP[58]         ; [CPU_] |486| 
        MPYB      ACC,T,#20             ; [CPU_] |486| 
$C$DW$565	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$565, DW_AT_low_pc(0x00)
	.dwattr $C$DW$565, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$565, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |486| 
        ; call occurs [#_lcd_puts] ; [] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 487 | if (++j > 3) {                                                         
;----------------------------------------------------------------------
        INC       *-SP[41]              ; [CPU_] |487| 
	.dwpsn	file "../Source/prod.c",line 486,column 5,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |486| 
	.dwpsn	file "../Source/prod.c",line 487,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |487| 
        B         $C$L74,LT             ; [CPU_] |487| 
        ; branchcc occurs ; [] |487| 
	.dwpsn	file "../Source/prod.c",line 488,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 488 | j = 1;                                                                 
;----------------------------------------------------------------------
        MOV       *-SP[41],#1           ; [CPU_] |488| 
$C$L74:    
	.dwpsn	file "../Source/prod.c",line 491,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 491 | delay_us(20000);                // delay for 20ms                      
;----------------------------------------------------------------------
        MOV       AL,#20000             ; [CPU_] |491| 
$C$DW$566	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$566, DW_AT_low_pc(0x00)
	.dwattr $C$DW$566, DW_AT_name("_delay_us")
	.dwattr $C$DW$566, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |491| 
        ; call occurs [#_delay_us] ; [] |491| 
	.dwpsn	file "../Source/prod.c",line 481,column 15,is_stmt,isa 0
        BANZ      $C$L73,AR3--          ; [CPU_] |481| 
        ; branchcc occurs ; [] |481| 
        MOVW      DP,#_GpioDataRegs+2   ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 494,column 3,is_stmt,isa 0
;----------------------------------------------------------------------
; 494 | GpioDataRegs.GPACLEAR.bit.GPIOA7 = 1;   // switch to data mode         
;----------------------------------------------------------------------
        OR        @_GpioDataRegs+2,#0x0080 ; [CPU_] |494| 
        B         $C$L77,UNC            ; [CPU_] |494| 
        ; branch occurs ; [] |494| 
$C$L75:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L76:    
	.dwpsn	file "../Source/prod.c",line 433,column 4,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |433| 
        SPM       #0                    ; [CPU_] 
$C$DW$567	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$567, DW_AT_low_pc(0x00)
	.dwattr $C$DW$567, DW_AT_name("_delay_us")
	.dwattr $C$DW$567, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |433| 
        ; call occurs [#_delay_us] ; [] |433| 
	.dwpsn	file "../Source/prod.c",line 431,column 15,is_stmt,isa 0
        BANZ      $C$L76,AR3--          ; [CPU_] |431| 
        ; branchcc occurs ; [] |431| 
$C$L77:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 497,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 497 | scia_set_cmd_mode(cmd_mode);    // set the default command mode        
; 499 | #ifdef SDHCCARD                                                        
; 501 | // check SD card                                                       
; 502 | lcd_puts( "SD Card Testing...", 0 );                                   
; 503 | sd_write = 0;                                                          
; 504 | sd_close = 0;                                                          
; 505 | sd_cnt = 0;                                                            
; 506 | fp = NULL;                                                             
; 508 | f_mount( 0, &Fatfs );                                                  
; 510 | res = f_getfree( "0:", &fsize, &fs );                                  
; 512 | sprintf( buff, "%02X", res );                                          
; 513 | lcd_puts( buff, 18 );                                                  
; 515 | if( !res )                                                             
; 517 |         switch( fs->fs_type & 3 )                                      
; 519 |                 case 1:                                                
; 520 |                 lcd_puts( "FAT12", 20 );                               
; 521 |                 break;                                                 
; 522 |                 case 2:                                                
; 523 |                 lcd_puts( "FAT16", 20 );                               
; 524 |                 break;                                                 
; 525 |                 case 3:                                                
; 526 |                 lcd_puts( "FAT32", 20 );                               
; 527 |                 break;                                                 
; 530 |         sprintf( buff, "Total: %11lukB", (fs->n_fatent - 2) * fs->csize
;     |  / 2 );                                                                
; 531 |         lcd_puts( buff, 40 );                                          
; 533 |         sprintf( buff, "Free:  %11lukB", fsize * fs->csize / 2 );      
; 534 |         lcd_puts( buff, 60 );                                          
; 536 |         if(disk_ioctl(0, MMC_GET_TYPE, &res) == RES_OK)                
; 538 |                 switch( res )                                          
; 540 |                         case CT_MMC:                                   
; 541 |                         lcd_puts( "on MMC", 26 );                      
; 542 |                         break;                                         
; 543 |                         case CT_SD1:                                   
; 544 |                         lcd_puts( "on SDV1", 26 );                     
; 545 |                         break;                                         
; 546 |                         case CT_SD2:                                   
; 547 |                         lcd_puts( "on SDV2", 26 );                     
; 548 |                         break;                                         
; 549 |                         case CT_SD2|CT_BLOCK:                          
; 550 |                         lcd_puts( "on SDHC", 26 );                     
; 551 |                         break;                                         
; 552 |                         default:                                       
; 553 |                         lcd_puts( "on UNKNOWN", 26 );                  
; 554 |                         break;                                         
; 559 | else                                                                   
; 561 |         lcd_puts( "NO CARD OR          CARD UNSUPPORTED", 20 );        
; 577 | for( i = 0; i < 100; i++ )                      // 2s                  
; 579 |         delay_us( 20000 );                              // delay for 20
;     | ms                                                                     
; 581 | #endif                                                                 
;----------------------------------------------------------------------
        MOV       AL,@_cmd_mode         ; [CPU_] |497| 
$C$DW$568	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$568, DW_AT_low_pc(0x00)
	.dwattr $C$DW$568, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$568, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |497| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |497| 
	.dwpsn	file "../Source/prod.c",line 583,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 583 | led_set( LED1, LED_GREEN);                                             
;----------------------------------------------------------------------
        MOVB      AL,#1                 ; [CPU_] |583| 
        MOVB      AH,#2                 ; [CPU_] |583| 
$C$DW$569	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$569, DW_AT_low_pc(0x00)
	.dwattr $C$DW$569, DW_AT_name("_led_set")
	.dwattr $C$DW$569, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |583| 
        ; call occurs [#_led_set] ; [] |583| 
	.dwpsn	file "../Source/prod.c",line 584,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 584 | led_set( LED2, LED_OFF);                                               
;----------------------------------------------------------------------
        MOVB      AL,#2                 ; [CPU_] |584| 
        MOVB      AH,#0                 ; [CPU_] |584| 
$C$DW$570	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$570, DW_AT_low_pc(0x00)
	.dwattr $C$DW$570, DW_AT_name("_led_set")
	.dwattr $C$DW$570, DW_AT_TI_call

        LCR       #_led_set             ; [CPU_] |584| 
        ; call occurs [#_led_set] ; [] |584| 
	.dwpsn	file "../Source/prod.c",line 586,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 586 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$571	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$571, DW_AT_low_pc(0x00)
	.dwattr $C$DW$571, DW_AT_name("_update_units")
	.dwattr $C$DW$571, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |586| 
        ; call occurs [#_update_units] ; [] |586| 
	.dwpsn	file "../Source/prod.c",line 588,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 588 | ad7738_resetpeak( BM_ALL);              // reset peak                  
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |588| 
$C$DW$572	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$572, DW_AT_low_pc(0x00)
	.dwattr $C$DW$572, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$572, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |588| 
        ; call occurs [#_ad7738_resetpeak] ; [] |588| 
	.dwpsn	file "../Source/prod.c",line 589,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 589 | ad7738_resetvall( BM_ALL);              // reset valley                
;----------------------------------------------------------------------
        MOVB      AL,#255               ; [CPU_] |589| 
$C$DW$573	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$573, DW_AT_low_pc(0x00)
	.dwattr $C$DW$573, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$573, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |589| 
        ; call occurs [#_ad7738_resetvall] ; [] |589| 
        MOVL      XAR0,#40              ; [CPU_] |589| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |589| 
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#9               ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#773 << 2         ; [CPU_] 
        MOVL      *-SP[62],ACC          ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 590,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 590 | line = 0;                                                              
; 592 | //=====================================================================
;     | =====//                                                                
; 593 | // main loop                                                           
; 594 | //=====================================================================
;     | =====//                                                                
; 595 | for (;;) {                                                             
; 597 |         // check SW2 for reset command                                 
; 598 |         if (!(0x0010 & INBTTN)) {                                      
; 600 |                 ad7738_resettare(0x0f);         // tare all 4 channels 
; 601 |                 ad7738_resetpeak(0x0f);                                
; 602 |                 ad7738_resetvall(0x0f);                                
; 604 | #if(0)                                                                 
; 605 |                 // DEBUG: tagid                                        
; 606 |                 lcd_clear();                                           
; 607 |                 for( i = 0; i < 4; i++ )                               
; 609 |                         sprintf( buff, "CH%i %016llX", i+1, tagid( i )
;     | );                                                                     
; 610 |                         lcd_puts( buff, i * 20 );                      
; 612 |                 for( i = 0; i < 50; i++ )               // total delay
;     | 1s                                                                     
; 614 |                         delay_us( 20000 );              // delay for 20
;     | ms                                                                     
; 616 |                 // DEBUG: tagid                                        
; 617 |                 update_units();                                        
; 618 | #endif                                                                 
; 622 | #ifdef SDHCCARD                                                        
; 623 |         // write to SD card file if flag set                           
; 624 |         if( sd_write && fp )                                           
; 626 |                 if( prod_getavail() > 31 || sd_close )                 
; 628 |                         led_set( LED2, LED_RED );                      
; 630 |                         k = 32;                                        
; 632 |                         while( prod_getavail() && k-- )                
; 634 |                                 wtp = prod_getnext();                  
; 636 |                                 for( i = 0; i < CHS_MAX; i++ )         
; 638 |                                         intp = (Uint16*)&wtp->adw[i];  
; 640 |                                         if( i == CHS_MAX - 1 ) intp = (
;     | Uint16*)&sd_cnt;                                                       
; 642 |                                         for( j = 0; j < 2; j++ )       
; 644 |                                                 f_putc( 0xff & *intp, f
;     | p );                                                                   
; 645 |                                                 f_putc( 0xff & *intp>>8
;     | , fp );                                                                
; 646 |                                                 intp++;                
; 649 |                                 sd_cnt++;                              
; 652 |                         if( sd_close )                                 
; 654 |                                 res = f_truncate( fp );
;     |  // Truncate unused area                                               
; 655 |                                 if( res )                              
; 657 |                                         sprintf( buff, "%02X ", res ); 
; 658 |                                         scia_puts( buff );             
; 661 |                                 res = f_close( fp );                   
; 662 |                                 fp = NULL;                             
; 664 |                                 sprintf( buff, "File closed, code: %02X
;     | \r\n", res );                                                          
; 665 |                                 scia_puts( buff );                     
; 667 |                                 sd_write = 0;                          
; 668 |                                 sd_close = 0;                          
; 671 |                         led_set( LED2, LED_OFF );                      
; 674 | #endif                                                                 
; 676 |         //=============================================================
;     | =====================//                                                
; 677 |         // update the vfd
;     |                          //                                            
; 678 |         //=============================================================
;     | =====================//                                                
; 679 |         // if there is new "monitor data" ready                        
; 680 |         if (ad7738_monrdy()) {                                         
; 681 |                 // clear the ready flag                                
; 682 |                 ad7738_monclr();                                       
; 684 |                 // display the appropriate data                        
; 685 |                 switch (conf_data.vfd[line].what) {                    
; 686 |                 case VFD_LOAD:                                         
; 687 |                         wtp = ad7738_getmon();                         
; 688 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 689 |                         goto VFD_LINE_BUFF;                            
; 691 |                 case VFD_PEAK:                                         
; 692 |                         wtp = ad7738_getpeak();                        
; 693 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 694 |                         goto VFD_LINE_BUFF;                            
; 696 |                 case VFD_VALL:                                         
; 697 |                         wtp = ad7738_getvall();                        
; 698 |                         tempft = wtp->adw[conf_data.vfd[line].ch];     
; 699 |                         goto VFD_LINE_BUFF;                            
; 701 |                 case VFD_POSI:                                         
; 702 |                         wtp = ad7738_getmon();                         
; 703 |                         tempft = wtp->pos[conf_data.vfd[line].ch];     
; 704 |                         goto VFD_LINE_BUFF;                            
; 706 |                 case VFD_VELO:                                         
; 707 |                         wtp = ad7738_getmon();                         
; 708 |                         //wtp = ad7738_getpeak();                      
; 709 |                         tempft = wtp->vel[conf_data.vfd[line].ch];     
; 711 |                         // display appropriate decimal points          
; 712 |                         VFD_LINE_BUFF: switch (conf_data.vfd[line].adec
;     | ) {                                                                    
; 713 |                         case 0:                                        
; 714 |                                 sprintf(buff, "%10.0f", tempft);       
; 715 |                                 break;                                 
; 716 |                         case 1:                                        
; 717 |                                 sprintf(buff, "%10.1f", tempft);       
; 718 |                                 break;                                 
; 719 |                         case 2:                                        
; 720 |                                 sprintf(buff, "%10.2f", tempft);       
; 721 |                                 break;                                 
; 722 |                         case 3:                                        
; 723 |                                 sprintf(buff, "%10.3f", tempft);       
; 724 |                                 break;                                 
; 725 |                         case 4:                                        
; 726 |                                 sprintf(buff, "%10.4f", tempft);       
; 727 |                                 break;                                 
; 728 |                         case 5:                                        
; 729 |                                 sprintf(buff, "%10.5f", tempft);       
; 730 |                                 break;                                 
; 732 |                         break;                                         
; 734 |                 case VFD_LIMIT:                                        
; 735 |                         i = ad7738_getlimitst(conf_data.vfd[line].ch); 
; 736 |                         sprintf(buff, "  %s",                          
; 737 |                                         (i & LIM_ON) ? ((i & LIM_ST) ?
;     | "1" : "0") : "-");                                                     
; 738 |                         break;                                         
; 739 |                 case VFD_TEMP:                                         
; 740 |                         sprintf(buff, "%10.1f", tempvalue);            
; 741 |                         break;                                         
; 744 |                 // print to LCD                                        
; 745 |                 lcd_puts(buff, 7 + 20 * line);                         
; 747 |                 line++;                                                
; 748 |                 if (line >= VFD_MAX) {                                 
; 749 |                         line = 0;                                      
; 753 |         //=============================================================
;     | =====================//                                                
; 754 |         // temperature sensor reading
;     |                  //                                                    
; 755 |         //=============================================================
;     | =====================//                                                
; 757 |         // if its time to start a temp conversion...                   
; 758 |         if (ad7738_tempstart()) {                                      
; 759 |                 ds1820start();                          // start a temp
;     | erature conversion                                                     
; 762 |         // if its time to start a temp reading...                      
; 763 |         else if (ad7738_tempread()) {                                  
; 764 |                 tempvalue = ds1820read();                       // read
;     |  the temperature                                                       
; 765 |                 ad7738_settemp(tempvalue);              // update tempe
;     | rature factor                                                          
; 768 |         //=============================================================
;     | =====================//                                                
; 769 |         // Auto ID detection
;     |                  //                                                    
; 770 |         //=============================================================
;     | =====================//                                                
; 771 |         // check for changes in the load cells connected by "TAG ID"   
; 772 |         if (conf_data.tagiden && ad7738_tagsdetect()) {                
; 773 |                 if (tagdetect(tagch))           // tag chip is detected
;     |  on channel tagch                                                      
; 775 |                         if (!tagwasthere[tagch])                // it w
;     | as not there                                                           
; 777 |                                 // new loadcell just plugged in        
; 778 |                                 matchTag(tagch);
;     |  // search the tag id                                                  
; 779 |                                 if (autoid[tagch])
;     |  // we have an autoid match                                            
; 781 |                                         DINT;                          
; 782 |                                         maf_rst();                     
; 783 |                                         ad7738_setcal();               
; 784 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 785 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 786 |                                         EINT;                          
; 788 |                                         lcd_clear();                   
; 789 |                                         update_units();                
; 790 |                                         autoidchanged = 1;             
; 793 |                         tagwasthere[tagch] = 1;                 // dete
;     | cted                                                                   
; 794 |                 } else {                                               
; 796 |                         tagwasthere[tagch] = 0;                 // not
;     | detected                                                               
; 798 |                         if (autoid[tagch]) {                           
; 799 |                                 autoid[tagch] = 0;                     
; 800 |                                 lcd_clear();                           
; 801 |                                 update_units();                        
; 802 |                                 autoidchanged = 1;                     
; 806 |                 tagch++;                                               
; 807 |                 if (tagch >= CHS_MAX) {                                
; 808 |                         tagch = 0;                                     
; 812 |         //=============================================================
;     | =====================//                                                
; 813 |         // Data streamming
;     |                          //                                            
; 814 |         //=============================================================
;     | =====================//                                                
; 815 |         // stream data if we're in BINARY command mode, and data stream
;     | ing is enabled                                                         
; 816 |         if ( SCI_MODE_BIN == cmd_mode && ds_en) {                      
; 817 |                 // if there's data to be sent in the big buffer, and st
;     | reaming hasn't been stopped yet,                                       
; 818 |                 //      taking into account decimation, etc.           
; 819 |                 if (prod_getavail() >= (ds_dn * ds_dec) || ds_stop) {  
; 821 |                         //GpioDataRegs.GPBCLEAR.bit.GPIOB3 = 1; // DEBU
;     | G: TAG_TX                                                              
; 823 |                         ds_ct = 0;                                     
; 824 |                         k = ds_dec;                             // for
;     | decimation                                                             
; 825 |                         j = 0;                                         
; 826 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 827 |                         buff[j++] = 0xdd;                       // 1, d
;     | ata packet ID                                                          
; 828 |                         buff[j++] = ds_dn;                      // 2, n
;     | umber of dataset                                                       
; 829 |                         buff[j++] = 0xff & ds_dec;              // 3, d
;     | ecimation low                                                          
; 830 |                         buff[j++] = 0xff & ds_dec >> 8;         // 4, d
;     | ecimation high                                                         
; 831 |                         buff[j++] = ds_bm;                      // 5, b
;     | itmap                                                                  
; 832 |                         buff[j++] = 0xff & (ds_sn++);           // 6, p
;     | acket count                                                            
; 834 |                         while (prod_getavail() && ds_ct < ds_dn) {     
; 835 |                                 wtp = prod_getnext();                  
; 836 |                                 if (--k) {                             
; 837 |                                         continue;
;     |          // decimation                                                 
; 839 |                                 k = ds_dec;                            
; 840 |                                 ds_ct++;                               
; 842 |                                 ch = 1;                         // used
;     |  for channel bitmap                                                    
; 843 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 844 |                                         if (ds_bm & ch) {              
; 845 |                                                 intp = (Uint16*) &wtp->
;     | adw[i];                                                                
; 846 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 847 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 848 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 849 |                                                         intp++;        
; 852 |                                         ch <<= 1;
;     |          // next channel                                               
; 855 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 856 |                                         if (ds_bm & ch) {              
; 857 |                                                 intp = (Uint16*) &wtp->
;     | pos[i];                                                                
; 858 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 859 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 860 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 861 |                                                         intp++;        
; 864 |                                         ch <<= 1;
;     |          // next channel                                               
; 867 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 868 |                                         if (ds_bm & ch) {              
; 869 |                                                 intp = (Uint16*) &wtp->
;     | vel[i];                                                                
; 870 |                                                 for (ss = 0; ss < 2; ss
;     | ++) {                                                                  
; 871 |                                                         buff[j++] = 0xf
;     | f & *intp;                                                             
; 872 |                                                         buff[j++] = 0xf
;     | f & *intp >> 8;                                                        
; 873 |                                                         intp++;        
; 876 |                                         ch <<= 1;
;     |          // next channel                                               
; 880 |                         buff[2] = ds_ct;                        // 2, n
;     | umber of dataset                                                       
; 882 |                         if (ds_stop) {                                 
; 883 |                                 ds_en = 0;                             
; 886 |                         scia_send_bin(buff, j);         // send data   
; 888 |                         //GpioDataRegs.GPBSET.bit.GPIOB3 = 1;   // DEBU
;     | G: TAG_TX                                                              
; 889 |                 } else if (ad7738_getlimitchgd()) {                    
; 890 |                         j = 0;                                         
; 891 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 892 |                         buff[j++] = GetLIMITStatus;             // 1,  
; 893 |                         for (i = 0; i < LIM_MAX; i++) {                
; 894 |                                 buff[j++] = ad7738_getlimitst(i);      
; 896 |                         scia_send_bin(buff, j);         // send data   
; 897 |                 } else if (autoidchanged) {                            
; 898 |                         autoidchanged = 0;                             
; 900 |                         j = 0;                                         
; 901 |                         buff[j++] = 0;                          // 0, a
;     | ddress                                                                 
; 902 |                         buff[j++] = GetAutoId;                  // 1,  
; 903 |                         buff[j++] = conf_data.tagiden;                 
; 904 |                         for (i = 0; i < CHS_MAX; i++) {                
; 905 |                                 buff[j++] = autoid[i];                 
; 907 |                         scia_send_bin(buff, j);         // send data   
; 913 |         //=============================================================
;     | =====================//                                                
; 914 |         // serial command processing
;     |                  //                                                    
; 915 |         //=============================================================
;     | =====================//                                                
; 917 |         //=============================================================
;     | =====================//                                                
; 918 |         // Check for available command in the command buffer
;     |                  //                                                    
; 919 |         //=============================================================
;     | =====================//                                                
; 920 |         if (0 == scia_rx_getcmds()) {                                  
; 921 |                 continue;                                       // no n
;     | ew command, skip to next cycle                                         
; 924 |         //=============================================================
;     | =====================//                                                
; 925 |         // Read one command from command buffer
;     |                  //                                                    
; 926 |         //=============================================================
;     | =====================//                                                
; 927 |         cmdlen = scia_rx_getcmd(cmdbuff, sizeof(cmdbuff));             
; 929 |         //=============================================================
;     | =====================//                                                
; 930 |         // Empty command
;     |                          //                                            
; 931 |         //=============================================================
;     | =====================//                                                
; 932 |         if (0 == cmdlen) {                                             
; 933 |                 //led_set( LED1, (running ? LED_GREEN : LED_RED) );    
; 934 |                 //led_set( LED2, (running ? LED_GREEN : LED_OFF) );    
; 935 |                 continue;                                              
; 938 |         if ( SCI_MODE_ASCII == cmd_mode) {                             
; 940 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 941 |                 // ASCII command mode processing
;     |                                  //                                    
; 942 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 944 |                 switch (cmdbuff[0])                     // on the 1st b
;     | yte of the command                                                     
; 947 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 948 |                 // Current configuration print out
;     |                          //                                            
; 949 |                 ///////////////////////////////////////////////////////
;     | ///////////////////////////                                            
; 951 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 952 |                 case 'A':                                              
; 954 |                         sprintf(buff, "\r\nLoad Cell:            %.2f\r
;     | \n",     ad7738_getload());                                            
; 955 |                         scia_puts(buff);                               
; 956 |                         //sprintf(buff, "Sensor State:         %d\r\n",
;     |  getspeedSens());                                                      
; 957 |                         sprintf(buff, "Sensor State:         %d %d\r\n"
;     | ,        ((*(unsigned int*)0x2000)&0x2), ((*(unsigned int*)0x2000)&0x1)
;     | );                                                                     
; 958 |                         scia_puts(buff);                               
; 959 |                         sprintf(buff, "Encoder:              %.2f\r\n",
;     |  ad7738_getpos());                                                     
; 960 |                         scia_puts(buff);                               
; 962 |                         break;                                         
; 963 |                 case 'J':                                              
; 965 |                         if (getMotorJog() == NOTJOG) {                 
; 966 |                                 setMotorJog(JOG);                      
; 967 |                                 sprintf(buff, "Motor jogging\r\n");    
; 968 |                                 scia_puts(buff);                       
; 970 |                         } else {                                       
; 971 |                                 setMotorJog(NOTJOG);                   
; 972 |                                 sprintf(buff, "Motor not jogging\r\n");
; 973 |                                 scia_puts(buff);                       
; 976 |                         break;                                         
; 977 |                 case 'Q':                                              
; 978 |                         sprintf(buff, "Entering bootloader\r\n");      
; 979 |                         scia_puts(buff);                               
; 980 |                         delay_us(10000);                               
; 981 |                         delay_us(10000);                               
; 982 |                         delay_us(10000);                               
; 984 |                         asm(" LCR 0x3F7FF6");                          
; 986 |                         break;                                         
; 987 |                 case 'T':                                              
; 988 |                         if (getStartStop() == 0) {                     
; 989 |                                 toggleFastDataCollect(1);              
; 990 |                         } else {                                       
; 991 |                                 toggleFastDataCollect(0);              
; 993 |                         break;                                         
; 995 |                 case 'K':                                              
; 996 |                         while (prod_getavail()) {                      
; 997 |                                 wtp = prod_getnext();                  
; 998 |                                 sprintf(buff, "%f %f %f\r\n", wtp->vel[
;     | 0], wtp->vel[1], wtp->adw[0]);                                         
; 999 |                                 scia_puts(buff);                       
; 1001 |                         break;                                         
; 1002 |                 case 'Y':                                              
; 1003 |                         if(getautoHeightEnable()==0) {                 
; 1004 |                                 //setAutoHeight(100.0);                
; 1005 |                                 calcAutoDir(ad7738_getpos());          
; 1006 |                                 setautoHeightEnable(1);                
; 1008 |                         else {                                         
; 1009 |                                 setautoHeightEnable(0);                
; 1012 |                         break;                                         
; 1014 |                 // ************  (end) ADDED FOR IMPACT TESTER ********
;     | **/                                                                    
; 1016 |                 case 'P':                                       // prin
;     | t out config                                                           
; 1018 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1021 |                         case 'A':                               // all 
; 1023 |                                 version = VERSION;                     
; 1024 |                                 sprintf(buff, "\r\nVersion:
;     | %.2f [%s %s]\r\n",                                                     
; 1025 |                                                 version, __DATE__, __TI
;     | ME__);                                                                 
; 1026 |                                 scia_puts(buff);                       
; 1027 |                                 sprintf(buff, "CPLD Version:       %d.%
;     | 02d\r\n",                                                              
; 1028 |                                                 CPLDVER >> 8, 0xff & CP
;     | LDVER);                                                                
; 1029 |                                 scia_puts(buff);                       
; 1030 |                                 sprintf(buff, "Serial Number:      %lu\
;     | r\n", conf_data.usn);                                                  
; 1031 |                                 scia_puts(buff);                       
; 1032 |                                 sprintf(buff, "Unit Name:          %s\r
;     | \n",                                                                   
; 1033 |                                                 conf_data.uname);      
; 1034 |                                 scia_puts(buff);                       
; 1036 |                                 sprintf(buff, "Com Interface:      %s\r
;     | \n",                                                                   
; 1037 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1038 |                                 scia_puts(buff);                       
; 1039 |                                 if (conf_data.rxdir == SDIR_RS232      
; 1040 |                                                 || conf_data.rxdir == S
;     | DIR_RS485) {                                                           
; 1041 |                                         sprintf(buff, "Com Speed:
;     |     %lu bps\r\n",                                                      
; 1042 |                                                         BAUD[conf_data.
;     | baud]);                                                                
; 1043 |                                         scia_puts(buff);               
; 1045 |                                 sprintf(buff, "AutoId:             %s\r
;     | \n",                                                                   
; 1046 |                                                 conf_data.tagiden ? "On
;     | " : "Off");                                                            
; 1047 |                                 scia_puts(buff);                       
; 1049 |                                 sprintf(buff, "Load Filter Length: %u\r
;     | \n",                                                                   
; 1050 |                                                 conf_data.filter);     
; 1051 |                                 scia_puts(buff);                       
; 1053 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 1054 |                                         scia_puts("\r\n");             
; 1055 |                                         print_channel(ch);
;     |          // channel info                                               
; 1056 |                                         print_sensor(conf_data.ch[ch].c
;     | i);// current sensor info                                              
; 1059 |                                 scia_puts("\r\n");                     
; 1060 |                                 sprintf(buff, "Velo Filter Length: %u\r
;     | \n",                                                                   
; 1061 |                                                 conf_data.velfilter);  
; 1062 |                                 scia_puts(buff);                       
; 1063 |                                 for (i = 0; i < ENC_MAX; i++) {        
; 1064 |                                         sprintf(buff, "Count Per Inch (
;     | %c): %li\r\n", 'A' + i,                                                
; 1065 |                                                         conf_data.cntpe
;     | rin[i]);                                                               
; 1066 |                                         scia_puts(buff);               
; 1068 |                                 print_vfd();                           
; 1069 |                                 print_dac();                           
; 1070 |                                 print_limits();                        
; 1071 |                                 break;                                 
; 1073 |                         case 'S':
;     |  // sensor list                                                        
; 1075 |                                 scia_puts("\r\n");                     
; 1077 |                                 for (ss = 0; ss < SENSPCH; ss++) {     
; 1078 |                                         sprintf(buff, "Sensor
;     |     %i\r\n", ss + 1);                                                  
; 1079 |                                         scia_puts(buff);               
; 1080 |                                         print_sensor(ss);
;     |          // one sensor                                                 
; 1082 |                                 break;                                 
; 1084 |                         case 'D':
;     |  // Display settings                                                   
; 1086 |                                 print_vfd();                           
; 1087 |                                 break;                                 
; 1089 |                         case 'O':
;     |  // DAC settings                                                       
; 1091 |                                 print_dac();                           
; 1092 |                                 break;                                 
; 1094 |                         case 'L':
;     |  // LIMIT settings                                                     
; 1096 |                                 print_limits();                        
; 1097 |                                 break;                                 
; 1099 |                         default:                                       
; 1100 |                                 goto INVALIDCMD;                       
; 1103 |                         break;                                         
; 1105 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1106 |                         // Unit config commands
;     |                                  //                                    
; 1107 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1108 |                 case 'U':                                       // Unit
; 1110 |                         if (cmdlen < 2) {                              
; 1111 |                                 goto INVALIDCMD;                       
; 1114 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1117 |                         case 'S':
;     |  // unit serial number                                                 
; 1119 |                                 scia_getparam("Unit serial number (nume
;     | ric number): ",                                                        
; 1120 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1121 |                                 conf_data.usn = atol(cmdbuff);         
; 1123 |                                 sprintf(buff, "%lu\r\n", conf_data.usn)
;     | ;                                                                      
; 1124 |                                 scia_puts(buff);                       
; 1125 |                                 unsaved = 1;                           
; 1126 |                                 break;                                 
; 1128 |                         case 'N':
;     |  // unit name                                                          
; 1130 |                                 j = sizeof(conf_data.uname) - 1;       
; 1131 |                                 sprintf(buff, "Unit name (up to %i digi
;     | ts): ", j);                                                            
; 1132 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1133 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 1135 |                                         cmdlen = j;                    
; 1136 |                                         cmdbuff[j] = '\0';             
; 1138 |                                 // also copy the null terminater       
; 1139 |                                 memcpy((void*) conf_data.uname, (void*)
;     |  cmdbuff,                                                              
; 1140 |                                                 cmdlen + 1);           
; 1141 |                                 //conf_data.uname[cmdlen] = '\0';      
; 1143 |                                 scia_puts(cmdbuff);                    
; 1144 |                                 scia_puts("\r\n");                     
; 1145 |                                 unsaved = 1;                           
; 1146 |                                 break;                                 
; 1148 |                         case 'C':
;     |  // current sensor                                                     
; 1150 |                                 // channel number                      
; 1151 |                                 j = CHS_MAX;                           
; 1152 |                                 do {                                   
; 1153 |                                         sprintf(buff, "Channel number (
;     | 1-%i): ", j);                                                          
; 1154 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1155 |                                         ch = atoi(cmdbuff);            
; 1156 |                                         scia_puts(cmdbuff);            
; 1157 |                                         if (ch > 0 && ch <= j) {       
; 1158 |                                                 break;
;     |          // valid input channel number                                 
; 1160 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 1161 |                                 } while (j);                           
; 1162 |                                 scia_puts("\r\n");                     
; 1163 |                                 ch--;
;     |  // channel number, convert to index                                   
; 1165 |                                 // sensor number                       
; 1166 |                                 j = SENSPCH;                           
; 1167 |                                 do {                                   
; 1168 |                                         sprintf(buff, "Sensor number (1
;     | -%i): ", j);                                                           
; 1169 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1170 |                                         ss = atoi(cmdbuff);            
; 1171 |                                         scia_puts(cmdbuff);            
; 1172 |                                         if (ss > 0 && ss <= j) {       
; 1173 |                                                 // TODO: may need to ad
;     | d existing calibration in location check here                          
; 1175 |                                                 break;                 
; 1177 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1178 |                                 } while (j);                           
; 1179 |                                 scia_puts("\r\n");                     
; 1180 |                                 ss--;
;     |  // sensor location, convert to index                                  
; 1182 |                                 sprintf(buff, "Channel %i set current s
;     | ensor to %i.\r\n",                                                     
; 1183 |                                                 ch + 1, ss + 1);       
; 1184 |                                 scia_puts(buff);                       
; 1185 |                                 print_sensor(ss);                      
; 1186 |                                 unsaved = 1;                           
; 1188 |                                 DINT;                                  
; 1189 |                                 conf_data.ch[ch].ci = ss;              
; 1190 |                                 ad7738_setcal();                       
; 1192 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 1193 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 1194 |                                 EINT;                                  
; 1196 |                                 update_units();                        
; 1197 |                                 break;                                 
; 1199 |                         case 'I':
;     |  // interface                                                          
; 1201 |                                 for (j = 0; j < 4; j++) {              
; 1202 |                                         sprintf(buff, "%u(%s)", j, INTE
;     | RFACE[j]);                                                             
; 1203 |                                         scia_puts(buff);               
; 1204 |                                         if (j < 3) {                   
; 1205 |                                                 scia_puts(", ");       
; 1208 |                                 scia_puts("\r\n");                     
; 1209 |                                 sprintf(buff, "Communication Interface
;     | [%u(%s)]: ",                                                           
; 1210 |                                                 conf_data.rxdir, INTERF
;     | ACE[conf_data.rxdir]);                                                 
; 1211 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 1212 |                                 scia_puts(cmdbuff);                    
; 1213 |                                 scia_puts("\r\n");                     
; 1214 |                                 if (cmdlen == 0) {                     
; 1215 |                                         scia_puts("Interface is not cha
;     | nged.\r\n");                                                           
; 1216 |                                         break;                         
; 1218 |                                 pt = atoi(cmdbuff);                    
; 1219 |                                 if (pt > 3) {                          
; 1220 |                                         scia_puts(                     
; 1221 |                                                         "Invalid input,
;     |  interface is not changed.\r\n");                                      
; 1222 |                                         break;                         
; 1224 |                                 conf_data.rxdir = pt;                  
; 1225 |                                 sprintf(buff,                          
; 1226 |                                                 "Communication Interfac
;     | e is changed to %s\r\n",                                               
; 1227 |                                                 INTERFACE[conf_data.rxd
;     | ir]);                                                                  
; 1228 |                                 scia_puts(buff);                       
; 1229 |                                 scia_puts(                             
; 1230 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1231 |                                 unsaved = 1;                           
; 1232 |                                 break;                                 
; 1234 |                         case 'B':
;     |  // baudrate                                                           
; 1236 |                                 if (conf_data.rxdir == SDIR_USB        
; 1237 |                                                 || conf_data.rxdir == S
;     | DIR_ENET) {                                                            
; 1238 |                                         scia_puts(                     
; 1239 |                                                         "Baud rate is n
;     | ot changable for the current interface.\r\n");                         
; 1240 |                                         break;                         
; 1243 |                                 for (j = 0; j < 8; j++) {              
; 1244 |                                         sprintf(buff, "%u(%lu)", j, BAU
;     | D[j]);                                                                 
; 1245 |                                         scia_puts(buff);               
; 1246 |                                         if (j < 7) {                   
; 1247 |                                                 scia_puts(", ");       
; 1250 |                                 scia_puts("\r\n");                     
; 1251 |                                 cmdlen = sprintf(buff,                 
; 1252 |                                                 "Communication Baud rat
;     | e [%u(%lu)] bps: ",                                                    
; 1253 |                                                 conf_data.baud, BAUD[co
;     | nf_data.baud]);                                                        
; 1254 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1255 |                                 scia_puts(cmdbuff);                    
; 1256 |                                 scia_puts("\r\n");                     
; 1257 |                                 if (cmdlen == 0) {                     
; 1258 |                                         scia_puts(                     
; 1259 |                                                         "Communication
;     | baud rate is not changed.\r\n");                                       
; 1260 |                                         break;                         
; 1262 |                                 pt = atoi(cmdbuff);                    
; 1263 |                                 if (pt > 7) {                          
; 1264 |                                         scia_puts(                     
; 1265 |                                                         "Invalid input,
;     |  communication baud rate is not changed.\r\n");                        
; 1266 |                                         break;                         
; 1268 |                                 conf_data.baud = pt;                   
; 1269 |                                 sprintf(buff,                          
; 1270 |                                                 "Communication baud rat
;     | e is changed to %lu bps\r\n",                                          
; 1271 |                                                 BAUD[conf_data.baud]); 
; 1272 |                                 scia_puts(buff);                       
; 1273 |                                 scia_puts(                             
; 1274 |                                                 "Please save to flash a
;     | nd reboot for the change to take effect.\r\n");                        
; 1275 |                                 unsaved = 1;                           
; 1276 |                                 break;                                 
; 1278 |                         case 'F':
;     |  // averaging filter size                                              
; 1280 |                                 j = MAF_MAX;                           
; 1281 |                                 do {                                   
; 1282 |                                         sprintf(buff, "Moving average f
;     | ilter size (up to %i): ",                                              
; 1283 |                                                         j);            
; 1284 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1285 |                                         i = atoi(cmdbuff);             
; 1286 |                                         scia_puts(cmdbuff);            
; 1287 |                                         if (i > 0 && i <= MAF_MAX) {   
; 1288 |                                                 break;
;     |          // valid number input                                         
; 1290 |                                         scia_puts(                     
; 1291 |                                                         "\r\nInvalid mo
;     | ving average filter size! Try again.\r\n");                            
; 1292 |                                 } while (j);                           
; 1293 |                                 scia_puts("\r\n");                     
; 1295 |                                 sprintf(buff, "Moving avarage filter si
;     | ze set to %i.\r\n",                                                    
; 1296 |                                                 i);                    
; 1297 |                                 scia_puts(buff);                       
; 1298 |                                 unsaved = 1;                           
; 1300 |                                 // update new value                    
; 1301 |                                 DINT;                                  
; 1302 |                                 conf_data.filter = i;                  
; 1303 |                                 maf_rst();                             
; 1304 |                                 EINT;                                  
; 1305 |                                 break;                                 
; 1307 |                         case 'W':
;     |  // diff window ratio                                                  
; 1309 |                                 sprintf(buff, "New diff window ratio [%
;     | f]: ",                                                                 
; 1310 |                                                 conf_data.diffwin);    
; 1311 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1312 |                                 conf_data.diffwin = atof(cmdbuff);     
; 1313 |                                 scia_puts(cmdbuff);                    
; 1314 |                                 scia_puts("\r\n");                     
; 1316 |                                 sprintf(buff, "Diff window ratio set to
;     |  %f.\r\n",                                                             
; 1317 |                                                 conf_data.diffwin);    
; 1318 |                                 scia_puts(buff);                       
; 1319 |                                 unsaved = 1;                           
; 1321 |                                 DINT;                                  
; 1322 |                                 ad7738_setcal();                       
; 1323 |                                 maf_rst();                             
; 1324 |                                 EINT;                                  
; 1325 |                                 break;                                 
; 1327 |                         default:                                       
; 1328 |                                 goto INVALIDCMD;                       
; 1331 |                         break;                                         
; 1333 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1334 |                         // Board calibration
;     |                                  //                                    
; 1335 |                         ///////////////////////////////////////////////
;     | ///////////////////////////////////                                    
; 1336 |                 case 'B':                                       // boar
;     | d calibration                                                          
; 1338 |                         if (cmdlen < 3 || !isdigit(cmdbuff[2])) {      
; 1339 |                                 goto INVALIDCMD;                       
; 1342 |                         if ('C' != cmdbuff[1] && 'D' != cmdbuff[1]) {  
; 1343 |                                 goto INVALIDCMD;                       
; 1344 |                                 // invalid calibration method          
; 1347 |                         // channel index                               
; 1348 |                         ch = atoi(cmdbuff + 2);         // get channel
;     | number                                                                 
; 1349 |                         if (ch <= 0 || ch > CHS_MAX) {                 
; 1350 |                                 goto INVALIDCMD;                       
; 1351 |                                 // invalid channel number              
; 1353 |                         ch--;                                   // chan
;     | ge to zero based index                                                 
; 1355 |                         volt[0] = 0;                                   
; 1356 |                         volt[1] = 0;                                   
; 1357 |                         for (j = 3; j < cmdlen; j++) {                 
; 1358 |                                 if (cmdbuff[j] == 'X') {               
; 1359 |                                         j++;                           
; 1360 |                                         volt[0] = atof(cmdbuff + j);
;     |  // read x value                                                       
; 1363 |                                 if (cmdbuff[j] == 'Y') {               
; 1364 |                                         j++;                           
; 1365 |                                         volt[1] = atof(cmdbuff + j);
;     |  // read y value                                                       
; 1369 |                         if (volt[0] == volt[1]) {                      
; 1370 |                                 goto INVALIDCMD;                       
; 1371 |                                 // invalid parameters                  
; 1374 |                         lcd_clear();                                   
; 1375 |                         sprintf(buff, "Channel %i", ch + 1);           
; 1376 |                         lcd_puts(buff, 20);                            
; 1377 |                         sprintf(buff, "X: %10.5f", volt[0]);           
; 1378 |                         lcd_puts(buff, 40);                            
; 1379 |                         sprintf(buff, "Y: %10.5f", volt[1]);           
; 1380 |                         lcd_puts(buff, 60);                            
; 1382 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 1385 |                         case 'C':
;     |  // board ADC calibration                                              
; 1387 |                                 lcd_puts("Board Calibration...", 0);   
; 1389 |                                 sprintf(buff,                          
; 1390 |                                                 "Ready for board calibr
;     | ation for channel %i\r\n",                                             
; 1391 |                                                 ch + 1);               
; 1392 |                                 scia_puts(buff);                       
; 1404 |                                 for (j = 0; j < 2; j++) {              
; 1405 |                                         sprintf(buff,                  
; 1406 |                                                         "Set input at %
;     | .5f mv/v and press ENTER.\r\n",                                        
; 1407 |                                                         volt[j]);      
; 1408 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1409 |                                         scia_puts("Reading ... ");     
; 1411 |                                         dsum[j] = 0;                   
; 1412 |                                         sampcnt = CAL_SAMPLES;         
; 1413 |                                         while (sampcnt--) {            
; 1414 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1415 |                                                         delay_us(1);
;     |                  // wait                                               
; 1417 |                                                 cntp = ad7738_getraw();
; 1418 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1421 |                                         scia_puts("done\r\n");         
; 1424 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 1425 |                                                 / (dsum[1] - dsum[0]); 
; 1427 |                                 sprintf(buff, "Channel %i: board ADC sc
;     | ale: %g\r\n", ch + 1,                                                  
; 1428 |                                                 conf_data.ch[ch].bslope
;     | );                                                                     
; 1429 |                                 scia_puts(buff);                       
; 1430 |                                 scia_puts("Board ADC calibration is don
;     | e.\r\n");                                                              
; 1431 |                                 break;                                 
; 1433 |                         case 'D':                               // boar
;     | d DAC calibration                                                      
; 1435 |                                 if (volt[0] > 10 || volt[0] < -10 || vo
;     | lt[1] > 10                                                             
; 1436 |                                                 || volt[1] < -10) {    
; 1437 |                                         lcd_clear();                   
; 1438 |                                         update_units();                
; 1439 |                                         goto INVALIDCMD;               
; 1440 |                                         // invalid parameters          
; 1443 |                                 lcd_puts("DAC chip Calibration", 0);   
; 1445 |                                 sprintf(buff,                          
; 1446 |                                                 "Ready for DAC chip cal
;     | ibration for channel %d\r\n",                                          
; 1447 |                                                 ch + 1);               
; 1448 |                                 scia_puts(buff);                       
; 1449 |                                 scia_puts("+[N]: increase, -[N]: decrea
;     | se, S: set.\r\n");                                                     
; 1450 |                                 dac_setmode(1);                 // stop
;     |  dac follow load                                                       
; 1452 |                                 for (j = 0; j < 2; j++) {              
; 1453 |                                         if (volt[j] < 0) {             
; 1454 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopen * volt[j]                                                 
; 1455 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1456 |                                         } else {                       
; 1457 |                                                 dsum[0] = conf_data.dac
;     | [ch].dslopep * volt[j]                                                 
; 1458 |                                                                 + conf_
;     | data.dac[ch].dint;                                                     
; 1460 |                                         if (dsum[0] <= 0) {            
; 1461 |                                                 dacc[j] = 0;           
; 1462 |                                         } else if (dsum[0] >= 0xffff) {
; 1463 |                                                 dacc[j] = 0xffff;      
; 1464 |                                         } else {                       
; 1465 |                                                 dacc[j] = (Uint16) dsum
;     | [0];                                                                   
; 1468 |                                         sprintf(buff, "Adjust for outpu
;     | t %.5f V.\r\n", volt[j]);                                              
; 1469 |                                         scia_puts(buff);               
; 1470 |                                         cmdbuff[0] = '\0';             
; 1472 |                                         do {                           
; 1473 |                                                 mcbsp_xmit(dacc[j], ch)
;     | ;                                                                      
; 1474 |                                                 latch_dac();           
; 1476 |                                                 do {                   
; 1477 |                                                         scia_getparam(c
;     | mdbuff, cmdbuff,                                                       
; 1478 | 
;     |  sizeof(cmdbuff));                                                     
; 1479 |                                                 } while ('+' != cmdbuff
;     | [0] && '-' == cmdbuff[0]                                               
; 1480 |                                                                 && 'S'
;     | == cmdbuff[0]);                                                        
; 1482 |                                                 if ('S' == cmdbuff[0])
;     | {                                                                      
; 1483 |                                                         break;
;     |                  // done                                               
; 1486 |                                                 i = atoi(cmdbuff + 1); 
; 1487 |                                                 if (i == 0) {          
; 1488 |                                                         i = 1;         
; 1491 |                                                 if ('+' == cmdbuff[0])
;     |          // increase                                                   
; 1493 |                                                         if (dacc[j] <=
;     | 0xffff - i) {                                                          
; 1494 |                                                                 dacc[j]
;     |  += i;                                                                 
; 1495 |                                                         } else {       
; 1496 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1498 |                                                 } else if ('-' == cmdbu
;     | ff[0])   // decrease                                                   
; 1500 |                                                         if (dacc[j] >=
;     | i) {                                                                   
; 1501 |                                                                 dacc[j]
;     |  -= i;                                                                 
; 1502 |                                                         } else {       
; 1503 |                                                                 cmdbuff
;     | [0] = '\0';              // to the end                                 
; 1506 |                                         } while (i);                   
; 1508 |                                         sprintf(buff, ":%u\r\n", dacc[j
;     | ]);                                                                    
; 1509 |                                         scia_puts(buff);               
; 1512 |                                 dacc[2] = conf_data.dac[ch].dint;      
; 1514 |                                 scia_puts("Adjust for output 0.0V.\r\n"
;     | );                                                                     
; 1515 |                                 cmdbuff[0] = '\0';                     
; 1517 |                                 do {                                   
; 1518 |                                         mcbsp_xmit(dacc[2], ch);       
; 1519 |                                         latch_dac();                   
; 1521 |                                         do {                           
; 1522 |                                                 scia_getparam(cmdbuff,
;     | cmdbuff, sizeof(cmdbuff));                                             
; 1523 |                                         } while ('+' != cmdbuff[0] && '
;     | -' == cmdbuff[0]                                                       
; 1524 |                                                         && 'S' == cmdbu
;     | ff[0]);                                                                
; 1526 |                                         if ('S' == cmdbuff[0]) {       
; 1527 |                                                 break;
;     |          // done                                                       
; 1530 |                                         i = atoi(cmdbuff + 1);         
; 1531 |                                         if (i == 0) {                  
; 1532 |                                                 i = 1;                 
; 1535 |                                         if ('+' == cmdbuff[0])
;     |  // increase                                                           
; 1537 |                                                 if (dacc[2] <= 0xffff -
;     |  i) {                                                                  
; 1538 |                                                         dacc[2] += i;  
; 1539 |                                                 } else {               
; 1540 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1542 |                                         } else if ('-' == cmdbuff[0])
;     |  // decrease                                                           
; 1544 |                                                 if (dacc[2] >= i) {    
; 1545 |                                                         dacc[2] -= i;  
; 1546 |                                                 } else {               
; 1547 |                                                         cmdbuff[0] = '\
;     | 0';              // to the end                                         
; 1550 |                                 } while (i);                           
; 1552 |                                 sprintf(buff, ":%u\r\n", dacc[2]);     
; 1553 |                                 scia_puts(buff);                       
; 1555 |                                 // do the calculations                 
; 1556 |                                 if (volt[0] < 0) {                     
; 1557 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[0]                                                         
; 1558 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1559 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[1]                                                         
; 1560 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1561 |                                 } else {                               
; 1562 |                                         conf_data.dac[ch].dslopep = ((d
;     | ouble) dacc[0]                                                         
; 1563 |                                                         - (double) dacc
;     | [2]) / volt[0];                                                        
; 1564 |                                         conf_data.dac[ch].dslopen = ((d
;     | ouble) dacc[1]                                                         
; 1565 |                                                         - (double) dacc
;     | [2]) / volt[1];                                                        
; 1567 |                                 conf_data.dac[ch].dint = (double) dacc[
;     | 2];                                                                    
; 1569 |                                 dac_setmode(0);                 // rest
;     | at dac to follow load                                                  
; 1571 |                                 sprintf(buff,                          
; 1572 |                                                 "Channel %i: DAC slope:
;     |  (n)%.3f, (p)%.3f, intercept %.3f\r\n",                                
; 1573 |                                                 ch + 1, conf_data.dac[c
;     | h].dslopen,                                                            
; 1574 |                                                 conf_data.dac[ch].dslop
;     | ep, conf_data.dac[ch].dint);                                           
; 1575 |                                 scia_puts(buff);                       
; 1577 |                                 scia_puts("Board DAC calibration is don
;     | e.\r\n");                                                              
; 1578 |                                 break;                                 
; 1580 |                         default:                                       
; 1581 |                                 goto INVALIDCMD;                       
; 1584 |                         unsaved = 1;                                   
; 1585 |                         lcd_clear();                                   
; 1586 |                         update_units();                                
; 1588 |                         DINT;                                          
; 1589 |                         ad7738_setcal();                               
; 1590 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1591 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1592 |                         EINT;                                          
; 1593 |                         break;                                         
; 1595 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1596 |                         // Channel sensor calibration
;     |                                  //                                    
; 1597 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 1598 |                 case 'C':                                       // chan
;     | nel sensor calibration                                                 
; 1600 |                         if (cmdlen < 2) {                              
; 1601 |                                 goto INVALIDCMD;                       
; 1604 |                         if ('V' != cmdbuff[1] && 'M' != cmdbuff[1]     
; 1605 |                                         && 'S' != cmdbuff[1]) {        
; 1606 |                                 goto INVALIDCMD;                       
; 1607 |                                 // invalid calibration method          
; 1609 |                         cmethod = cmdbuff[1];           // keep the cal
;     | ibration method code                                                   
; 1611 |                         lcd_clear();                                   
; 1612 |                         lcd_puts("Sensor Calibration..", 0);           
; 1614 |                         // === read informations ====                  
; 1615 |                         // channel number                              
; 1616 |                         j = CHS_MAX;                                   
; 1617 |                         do {                                           
; 1618 |                                 sprintf(buff, "Channel number (1-%i): "
;     | , j);                                                                  
; 1619 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1620 |                                 ch = atoi(cmdbuff);                    
; 1621 |                                 scia_puts(cmdbuff);                    
; 1622 |                                 if (ch > 0 && ch <= j) {               
; 1623 |                                         break;
;     |  // valid input channel number                                         
; 1625 |                                 scia_puts("\r\nInvalid input! Try again
;     | .\r\n");                                                               
; 1626 |                         } while (j);                                   
; 1627 |                         scia_puts("\r\n");                             
; 1628 |                         ch--;                                   // chan
;     | nel number, convert to index                                           
; 1630 |                         // sensor number                               
; 1631 |                         j = SENSPCH;                                   
; 1632 |                         do {                                           
; 1633 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 1634 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1635 |                                 ss = atoi(cmdbuff);                    
; 1636 |                                 scia_puts(cmdbuff);                    
; 1637 |                                 if (ss > 0 && ss <= j) {               
; 1638 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 1640 |                                         break;                         
; 1642 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1643 |                         } while (j);                                   
; 1644 |                         scia_puts("\r\n");                             
; 1645 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 1647 |                         // put on the vfd                              
; 1648 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 1649 |                         lcd_puts(buff, 20);                            
; 1651 |                         // sensor serial number                        
; 1652 |                         j = sizeof(tsensor.ssn) - 1;                   
; 1653 |                         sprintf(buff, "Sensor serial number (up to %i d
;     | igits): ", j);                                                         
; 1654 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1655 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1657 |                                 cmdlen = j;                            
; 1658 |                                 cmdbuff[j] = '\0';                     
; 1660 |                         memcpy((void*) tsensor.ssn, (void*) cmdbuff, cm
;     | dlen + 1);                                                             
; 1661 |                         scia_puts(cmdbuff);                            
; 1662 |                         scia_puts("\r\n");                             
; 1664 |                         // sensor label                                
; 1665 |                         j = sizeof(tsensor.slbl) - 1;                  
; 1666 |                         sprintf(buff, "Sensor name/label (up to %i digi
;     | ts): ", j);                                                            
; 1667 |                         cmdlen = scia_getparam(buff, cmdbuff, sizeof(cm
;     | dbuff));                                                               
; 1668 |                         if (cmdlen > j)                         // limi
;     | t the length of string                                                 
; 1670 |                                 cmdlen = j;                            
; 1671 |                                 cmdbuff[j] = '\0';                     
; 1673 |                         memcpy((void*) tsensor.slbl, (void*) cmdbuff, c
;     | mdlen + 1);                                                            
; 1674 |                         scia_puts(cmdbuff);                            
; 1675 |                         scia_puts("\r\n");                             
; 1677 |                         // unit                                        
; 1678 |                         for (j = 0; j < 7; j++) {                      
; 1679 |                                 sprintf(buff + 8 * j, "%2i(%s), ", j, U
;     | NITS[j]);                                                              
; 1681 |                         buff[8 * j - 2] = '\0';                 // remo
;     | ve last ','                                                            
; 1682 |                         scia_puts(buff);                               
; 1683 |                         scia_getparam("\r\nSensor calibration unit [0(L
;     | B)]: ", cmdbuff,                                                       
; 1684 |                                         sizeof(cmdbuff));              
; 1685 |                         tsensor.unit = atoi(cmdbuff);                  
; 1687 |                         switch (tsensor.unit) {                        
; 1688 |                         case 0:                                 // lb  
; 1689 |                         case 1:                                 // kg  
; 1690 |                                 tsensor.unit |= 0x10;                  
; 1691 |                                 break;                                 
; 1692 |                         case 2:                                 // in  
; 1693 |                         case 3:                                 // cm  
; 1694 |                         case 4:                                 // mm  
; 1695 |                                 tsensor.unit |= 0x20;                  
; 1696 |                                 break;                                 
; 1697 |                         case 5:                                 // ps  
; 1698 |                                 tsensor.unit |= 0x30;                  
; 1699 |                                 break;                                 
; 1700 |                         case 6:                                 // nm  
; 1701 |                                 tsensor.unit |= 0x40;                  
; 1702 |                                 break;                                 
; 1703 |                         case 7:                                        
; 1704 |                         case 8:                                        
; 1705 |                         case 15:                                       
; 1706 |                                 tsensor.unit |= 0xf0;                  
; 1707 |                                 break;                                 
; 1708 |                         default:                                       
; 1709 |                                 tsensor.unit = UNIT_LB;
;     |  // default to lb                                                      
; 1710 |                                 scia_puts("\r\nInvalid input, set to de
;     | fault \"LB\".");                                                       
; 1711 |                                 break;                                 
; 1713 |                         tsensor.ounit = tsensor.unit;// output unit sam
;     | e as calibrated                                                        
; 1714 |                         tsensor.ufactor = 1;                    // 1:1 
; 1716 |                         scia_puts(cmdbuff);                            
; 1717 |                         scia_puts("\r\n");                             
; 1719 |                         // range                                       
; 1720 |                         j = 1;                                         
; 1721 |                         do {                                           
; 1722 |                                 scia_getparam("Sensor range: ", cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 1723 |                                 tsensor.range = atof(cmdbuff);         
; 1724 |                                 if (tsensor.range != 0) {              
; 1725 |                                         break;                         
; 1727 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 1728 |                         } while (j);                                   
; 1729 |                         tsensor.base = tsensor.range;// percent base se
;     | t to range by default                                                  
; 1730 |                         scia_puts(cmdbuff);                            
; 1731 |                         scia_puts("\r\n");                             
; 1733 |                         tsensor.tagid = tagid(ch);                     
; 1735 |                         if (tsensor.tagid == 0) {                      
; 1736 |                                 sprintf(buff, "Sensor attached doesn't
;     | have TAGID.\r\n");                                                     
; 1737 |                         } else {                                       
; 1738 |                                 sprintf(buff, "Sensor TAGID: %016llX\r\
;     | n", tsensor.tagid);                                                    
; 1740 |                         scia_puts(buff);                               
; 1742 |                         switch (cmethod)
;     |  // on method code                                                     
; 1745 |                         case 'V':
;     |  // mv/v cal                                                           
; 1747 |                                 lcd_puts("Method: mv/v", 40);          
; 1749 |                                 tsensor.method = MD_RUN_MVV;           
; 1750 |                                 tsensor.points = 1;                    
; 1752 |                                 sprintf(buff, "Sensor scale (%s per mv/
;     | v) [1]: ",                                                             
; 1753 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1754 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1755 |                                 tsensor.slope[0] = atof(cmdbuff);      
; 1756 |                                 if (tsensor.slope[0] == 0) {           
; 1757 |                                         tsensor.slope[0] = 1;          
; 1759 |                                 scia_puts(cmdbuff);                    
; 1760 |                                 scia_puts("\r\n");                     
; 1762 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1763 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1765 |                                 scia_puts("Reading ... ");             
; 1767 |                                 dsum[0] = 0;                           
; 1768 |                                 sampcnt = CAL_SAMPLES;                 
; 1769 |                                 while (sampcnt--) {                    
; 1770 |                                         while (0 == ad7738_rawrdy()) { 
; 1771 |                                                 delay_us(1);
;     |          // wait                                                       
; 1774 |                                         cntp = ad7738_getraw();        
; 1775 |                                         dsum[0] += cntp->adc[ch];      
; 1777 |                                 scia_puts("done\r\n");                 
; 1779 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1780 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1781 |                                 break;                                 
; 1783 |                         case 'M':
;     |  // mass cal                                                           
; 1785 |                                 tsensor.method = MD_RUN_MAS;           
; 1787 |                                 // calibration points for mass cal only
; 1788 |                                 j = PNT_MAX;                           
; 1789 |                                 do {                                   
; 1790 |                                         sprintf(buff, "Mass points (2-%
;     | i): ", j);                                                             
; 1791 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1792 |                                         tsensor.points = atoi(cmdbuff);
; 1793 |                                         scia_puts(cmdbuff);            
; 1794 |                                         if (tsensor.points > 1 && tsens
;     | or.points <= j) {                                                      
; 1795 |                                                 break;                 
; 1797 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 1799 |                                 } while (j);                           
; 1800 |                                 scia_puts("\r\n");                     
; 1802 |                                 sprintf(buff, "Method: %-2ipoint mass",
;     |  tsensor.points);                                                      
; 1803 |                                 lcd_puts(buff, 40);                    
; 1805 |                                 // calculate the default point values  
; 1806 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1807 |                                         tsensor.mass[j] = (2 * j + 1 -
;     | tsensor.points)                                                        
; 1808 |                                                         * tsensor.range
;     |  / tsensor.points;                                                     
; 1811 |                                 // read in value with default provided 
; 1812 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1813 |                                         sprintf(buff, "Mass point %2i [
;     | %.5f]: ", j + 1,                                                       
; 1814 |                                                         tsensor.mass[j]
;     | );                                                                     
; 1815 |                                         cmdlen = scia_getparam(buff, cm
;     | dbuff, sizeof(cmdbuff));                                               
; 1817 |                                         // zero length response set the
;     |  default                                                               
; 1818 |                                         if (cmdlen > 0) {              
; 1819 |                                                 tsensor.mass[j] = atof(
;     | cmdbuff);                                                              
; 1821 |                                         scia_puts(cmdbuff);            
; 1822 |                                         scia_puts("\r\n");             
; 1825 |                                 // TODO: sort the list of points       
; 1827 |                                 // read adc count for each point       
; 1828 |                                 for (j = 0; j < tsensor.points; j++) { 
; 1829 |                                         sprintf(buff,                  
; 1830 |                                                         "Set input to %
;     | .5f%s for point %i and press ENTER\r\n",                               
; 1831 |                                                         tsensor.mass[j]
;     | , UNITS[0x0f & tsensor.unit],                                          
; 1832 |                                                         j + 1);        
; 1833 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 1834 |                                         scia_puts("Reading ... ");     
; 1836 |                                         dsum[0] = 0;                   
; 1837 |                                         sampcnt = CAL_SAMPLES;         
; 1838 |                                         while (sampcnt--) {            
; 1839 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1840 |                                                         delay_us(1);
;     |                  // wait                                               
; 1843 |                                                 cntp = ad7738_getraw();
; 1844 |                                                 dsum[0] += cntp->adc[ch
;     | ];                                                                     
; 1846 |                                         scia_puts("done\r\n");         
; 1847 |                                         tsensor.adc[j] = dsum[0] / CAL_
;     | SAMPLES;                                                               
; 1850 |                                 // now calculate the slope and intercep
;     | t for each point                                                       
; 1851 |                                 for (j = 0; j < tsensor.points - 1; j++
;     | ) {                                                                    
; 1852 |                                         tsensor.slope[j] = (tsensor.mas
;     | s[j + 1]                                                               
; 1853 |                                                         - tsensor.mass[
;     | j])                                                                    
; 1854 |                                                         / (tsensor.adc[
;     | j + 1] - tsensor.adc[j])                                               
; 1855 |                                                         / conf_data.ch[
;     | ch].bslope;                                                            
; 1856 |                                         tsensor.intercept[j] = tsensor.
;     | mass[j]                                                                
; 1857 |                                                         - tsensor.slope
;     | [j] * conf_data.ch[ch].bslope                                          
; 1858 | 
;     |  * tsensor.adc[j];                                                     
; 1860 |                                 break;                                 
; 1862 |                         case 'S':
;     |  // shunt cal                                                          
; 1864 |                                 lcd_puts("Method: shunt", 40);         
; 1866 |                                 tsensor.method = MD_RUN_SHT;           
; 1867 |                                 tsensor.points = 1;                    
; 1869 |                                 sprintf(buff,                          
; 1870 |                                                 "Sensor shunt (%s with
;     | a 60kohm shunt resistor) [1.46]: ",                                    
; 1871 |                                                 UNITS[0x0f & tsensor.un
;     | it]);                                                                  
; 1872 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 1873 |                                 scia_puts(cmdbuff);                    
; 1874 |                                 scale = atof(cmdbuff);                 
; 1875 |                                 if (scale == 0) {                      
; 1876 |                                         scale = 1.46;                  
; 1877 |                                         scia_puts("\r\nInvalid input, s
;     | et to default 1.46.");                                                 
; 1879 |                                 scia_puts("\r\n");                     
; 1881 |                                 scia_getparam("Set input to zero and pr
;     | ess ENTER\r\n",                                                        
; 1882 |                                                 cmdbuff, sizeof(cmdbuff
;     | ));                                                                    
; 1884 |                                 scia_puts("Reading ... ");             
; 1886 |                                 for (j = 0; j < 2; j++) {              
; 1887 |                                         if (j > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 1889 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 1890 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 1891 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 1893 |                                                 DINT;                  
; 1894 |                                                 maf_rst();             
; 1895 |                                                 EINT;                  
; 1896 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 1899 |                                         dsum[j] = 0;                   
; 1900 |                                         sampcnt = CAL_SAMPLES;         
; 1901 |                                         while (sampcnt--) {            
; 1902 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 1903 |                                                         delay_us(1);
;     |                  // wait                                               
; 1906 |                                                 cntp = ad7738_getraw();
; 1907 |                                                 dsum[j] += cntp->adc[ch
;     | ];                                                                     
; 1911 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 1912 |                                 DINT;                                  
; 1913 |                                 maf_rst();                             
; 1914 |                                 EINT;                                  
; 1916 |                                 scia_puts("done\r\n");                 
; 1918 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 1919 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 1920 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 1921 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 1922 |                                 break;                                 
; 1924 |                         default:                                       
; 1925 |                                 lcd_clear();                           
; 1926 |                                 update_units();                        
; 1927 |                                 goto INVALIDCMD;                       
; 1930 |                         // read and store shunt value, same for all met
;     | hods                                                                   
; 1931 |                         scia_getparam(                                 
; 1932 |                                         "Set input to zero and press EN
;     | TER for shunt reading\r\n",                                            
; 1933 |                                         cmdbuff, sizeof(cmdbuff));     
; 1934 |                         scia_puts("Reading ... ");                     
; 1936 |                         for (j = 0; j < 2; j++) {                      
; 1937 |                                 if (j > 0)                      // seco
;     | nd round for shunt switch closed                                       
; 1939 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 1940 |                                         for (i = 0; i < 50; i++) {     
; 1941 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 1943 |                                         DINT;                          
; 1944 |                                         maf_rst();                     
; 1945 |                                         EINT;                          
; 1946 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 1949 |                                 dsum[j] = 0;                           
; 1950 |                                 sampcnt = CAL_SAMPLES;                 
; 1951 |                                 while (sampcnt--) {                    
; 1952 |                                         while (0 == ad7738_rawrdy()) { 
; 1953 |                                                 delay_us(1);
;     |          // wait                                                       
; 1956 |                                         cntp = ad7738_getraw();        
; 1957 |                                         dsum[j] += cntp->adc[ch];      
; 1959 |                                 dsum[j] /= CAL_SAMPLES;                
; 1961 |                                 pt = 0;                                
; 1962 |                                 if (tsensor.points > 2) {              
; 1963 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 1964 |                                                 pt++;                  
; 1967 |                                 volt[j] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 1968 |                                                 * dsum[j] + tsensor.int
;     | ercept[pt];                                                            
; 1971 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 1972 |                         DINT;                                          
; 1973 |                         maf_rst();                                     
; 1974 |                         EINT;                                          
; 1976 |                         scia_puts("done\r\n");                         
; 1978 |                         tsensor.shunt = volt[1] - volt[0];             
; 1980 |                         // setup some other members of the structure   
; 1981 |                         tsensor.tare = 0;                              
; 1982 |                         tsensor.dacgain = 1;                           
; 1983 |                         tsensor.dacoff = 0;                            
; 1984 |                         tsensor.ch = ch;                               
; 1986 |                         DINT;                                          
; 1987 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 1988 |                                         sizeof(sconf_t));              
; 1990 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 1992 |                         ad7738_setcal();                               
; 1993 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 1994 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 1995 |                         EINT;                                          
; 1997 |                         sprintf(buff, "\r\nChannel %i sensor %i calibra
;     | tion done.\r\n",                                                       
; 1998 |                                         ch + 1, ss + 1);               
; 1999 |                         scia_puts(buff);                               
; 2000 |                         print_sensor(ss);                              
; 2002 |                         unsaved = 1;                                   
; 2003 |                         lcd_clear();                                   
; 2004 |                         update_units();                                
; 2005 |                         break;                                         
; 2007 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2008 |                         // sensor config commands
;     |                                          //                            
; 2009 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2010 |                 case 'S':                               // sensor      
; 2012 |                         if (cmdlen < 2) {                              
; 2013 |                                 goto INVALIDCMD;                       
; 2016 |                         if ('N' != cmdbuff[1] && 'U' != cmdbuff[1] && '
;     | B' != cmdbuff[1]                                                       
; 2017 |                                         && 'D' != cmdbuff[1]) {        
; 2018 |                                 goto INVALIDCMD;                       
; 2019 |                                 // invalid command                     
; 2021 |                         cmethod = cmdbuff[1];                   // keep
;     |  the second command code                                               
; 2041 |                         // sensor number                               
; 2042 |                         j = SENSPCH;                                   
; 2043 |                         do {                                           
; 2044 |                                 sprintf(buff, "Sensor number (1-%i): ",
;     |  j);                                                                   
; 2045 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2046 |                                 ss = atoi(cmdbuff);                    
; 2047 |                                 scia_puts(cmdbuff);                    
; 2048 |                                 if (ss > 0 && ss <= j) {               
; 2049 |                                         // TODO: may need to add existi
;     | ng calibration in location check here                                  
; 2051 |                                         break;                         
; 2053 |                                 scia_puts("\r\nInvalid input! Try again
;     | \r\n");                                                                
; 2054 |                         } while (j);                                   
; 2055 |                         scia_puts("\r\n");                             
; 2056 |                         ss--;                                   // sens
;     | or location, convert to index                                          
; 2058 |                         switch (cmethod)                        // on t
;     | he 2nd byte of the command                                             
; 2061 |                         case 'N':
;     |  // change sensor label                                                
; 2063 |                                 j = sizeof(conf_data.sensor[ss].slbl) -
;     |  1;                                                                    
; 2064 |                                 sprintf(buff, "Sensor %i name/label (up
;     |  to %i digits): ",                                                     
; 2065 |                                                 ss + 1, j);            
; 2066 |                                 cmdlen = scia_getparam(buff, cmdbuff, s
;     | izeof(cmdbuff));                                                       
; 2067 |                                 if (cmdlen > j)                 // limi
;     | t the length of string                                                 
; 2069 |                                         cmdlen = j;                    
; 2070 |                                         cmdbuff[j] = '\0';             
; 2072 |                                 memcpy((void*) conf_data.sensor[ss].slb
;     | l, (void*) cmdbuff,                                                    
; 2073 |                                                 cmdlen + 1);           
; 2074 |                                 scia_puts(cmdbuff);                    
; 2075 |                                 scia_puts("\r\n");                     
; 2076 |                                 unsaved = 1;                           
; 2078 |                                 sprintf(buff, "Sensor %i name/label set
;     |  to %s.\r\n", ss + 1,                                                  
; 2079 |                                                 conf_data.sensor[ss].sl
;     | bl);                                                                   
; 2080 |                                 scia_puts(buff);                       
; 2081 |                                 break;                                 
; 2083 |                         case 'U':
;     |  // change the output unit                                             
; 2085 |                                 scale = 0;                             
; 2087 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 2088 |                                 case UNIT_LB:
;     |  // pond                                                               
; 2090 |                                         do {                           
; 2091 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2092 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2093 |                                                 j = atoi(cmdbuff);     
; 2094 |                                                 scia_puts(cmdbuff);    
; 2095 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2096 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2098 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2099 |                                         scia_puts("\r\n");             
; 2101 |                                         switch (j) {                   
; 2102 |                                         case 0:                        
; 2103 |                                                 scale = 1;             
; 2104 |                                                 j |= 0x10;             
; 2105 |                                                 break;                 
; 2106 |                                         case 1:                        
; 2107 |                                                 scale = LB_TO_KG;      
; 2108 |                                                 j |= 0x10;             
; 2109 |                                                 break;                 
; 2110 |                                         case 7:                        
; 2111 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2112 |                                                 j |= 0xf0;             
; 2113 |                                                 break;                 
; 2115 |                                         break;                         
; 2117 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 2119 |                                         do {                           
; 2120 |                                                 scia_getparam("Output u
;     | nit, 0(LB), 1(KG), 7(%): ",                                            
; 2121 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2122 |                                                 j = atoi(cmdbuff);     
; 2123 |                                                 scia_puts(cmdbuff);    
; 2124 |                                                 if (j != 0 && j != 1 &&
;     |  j != 7) {                                                             
; 2125 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2127 |                                         } while (j != 0 && j != 1 && j
;     | != 7);                                                                 
; 2128 |                                         scia_puts("\r\n");             
; 2130 |                                         switch (j) {                   
; 2131 |                                         case 0:                        
; 2132 |                                                 scale = 1.0 / LB_TO_KG;
; 2133 |                                                 j |= 0x10;             
; 2134 |                                                 break;                 
; 2135 |                                         case 1:                        
; 2136 |                                                 scale = 1;             
; 2137 |                                                 j |= 0x10;             
; 2138 |                                                 break;                 
; 2139 |                                         case 7:                        
; 2140 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2141 |                                                 j |= 0xf0;             
; 2142 |                                                 break;                 
; 2144 |                                         break;                         
; 2146 |                                 case UNIT_IN:
;     |  // inch                                                               
; 2148 |                                         do {                           
; 2149 |                                                 scia_getparam(         
; 2150 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2151 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2152 |                                                 j = atoi(cmdbuff);     
; 2153 |                                                 scia_puts(cmdbuff);    
; 2154 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2155 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2157 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2158 |                                         scia_puts("\r\n");             
; 2160 |                                         switch (j) {                   
; 2161 |                                         case 2:                        
; 2162 |                                                 scale = 1;             
; 2163 |                                                 j |= 0x20;             
; 2164 |                                                 break;                 
; 2165 |                                         case 3:                        
; 2166 |                                                 scale = IN_TO_MM / 10.0
;     | ;                                                                      
; 2167 |                                                 j |= 0x20;             
; 2168 |                                                 break;                 
; 2169 |                                         case 4:                        
; 2170 |                                                 scale = IN_TO_MM;      
; 2171 |                                                 j |= 0x20;             
; 2172 |                                                 break;                 
; 2173 |                                         case 7:                        
; 2174 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2175 |                                                 j |= 0xf0;             
; 2176 |                                                 break;                 
; 2178 |                                         break;                         
; 2180 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 2182 |                                         do {                           
; 2183 |                                                 scia_getparam(         
; 2184 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2185 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2186 |                                                 j = atoi(cmdbuff);     
; 2187 |                                                 scia_puts(cmdbuff);    
; 2188 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2189 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2191 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2192 |                                         scia_puts("\r\n");             
; 2194 |                                         switch (j) {                   
; 2195 |                                         case 2:                        
; 2196 |                                                 scale = 10.0 / IN_TO_MM
;     | ;                                                                      
; 2197 |                                                 j |= 0x20;             
; 2198 |                                                 break;                 
; 2199 |                                         case 3:                        
; 2200 |                                                 scale = 1;             
; 2201 |                                                 j |= 0x20;             
; 2202 |                                                 break;                 
; 2203 |                                         case 4:                        
; 2204 |                                                 scale = 10;            
; 2205 |                                                 j |= 0x20;             
; 2206 |                                                 break;                 
; 2207 |                                         case 7:                        
; 2208 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2209 |                                                 j |= 0xf0;             
; 2210 |                                                 break;                 
; 2212 |                                         break;                         
; 2214 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 2216 |                                         do {                           
; 2217 |                                                 scia_getparam(         
; 2218 |                                                                 "Output
;     |  unit, 2(IN), 3(CM), 4(MM), 7(%): ",                                   
; 2219 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2220 |                                                 j = atoi(cmdbuff);     
; 2221 |                                                 scia_puts(cmdbuff);    
; 2222 |                                                 if (j != 2 && j != 3 &&
;     |  j != 4 && j != 7) {                                                   
; 2223 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2225 |                                         } while (j != 2 && j != 3 && j
;     | != 4 && j != 7);                                                       
; 2226 |                                         scia_puts("\r\n");             
; 2228 |                                         switch (j) {                   
; 2229 |                                         case 2:                        
; 2230 |                                                 scale = 1.0 / IN_TO_MM;
; 2231 |                                                 j |= 0x20;             
; 2232 |                                                 break;                 
; 2233 |                                         case 3:                        
; 2234 |                                                 scale = 0.1;           
; 2235 |                                                 j |= 0x20;             
; 2236 |                                                 break;                 
; 2237 |                                         case 4:                        
; 2238 |                                                 scale = 1;             
; 2239 |                                                 j |= 0x20;             
; 2240 |                                                 break;                 
; 2241 |                                         case 7:                        
; 2242 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2243 |                                                 j |= 0xf0;             
; 2244 |                                                 break;                 
; 2246 |                                         break;                         
; 2248 |                                 case UNIT_PS:
;     |  // presure, ps                                                        
; 2250 |                                         do {                           
; 2251 |                                                 scia_getparam("Output u
;     | nit, 5(PS), 7(%): ", cmdbuff,                                          
; 2252 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2253 |                                                 j = atoi(cmdbuff);     
; 2254 |                                                 scia_puts(cmdbuff);    
; 2255 |                                                 if (j != 5 && j != 7) {
; 2256 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2258 |                                         } while (j != 5 && j != 7);    
; 2259 |                                         scia_puts("\r\n");             
; 2261 |                                         switch (j) {                   
; 2262 |                                         case 5:                        
; 2263 |                                                 scale = 1;             
; 2264 |                                                 j |= 0x30;             
; 2265 |                                                 break;                 
; 2266 |                                         case 7:                        
; 2267 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2268 |                                                 j |= 0xf0;             
; 2269 |                                                 break;                 
; 2271 |                                         break;                         
; 2273 |                                 case UNIT_NM:
;     |  // torque, NM                                                         
; 2275 |                                         do {                           
; 2276 |                                                 scia_getparam("Output u
;     | nit, 6(NM), 7(%): ", cmdbuff,                                          
; 2277 |                                                                 sizeof(
;     | cmdbuff));                                                             
; 2278 |                                                 j = atoi(cmdbuff);     
; 2279 |                                                 scia_puts(cmdbuff);    
; 2280 |                                                 if (j != 6 && j != 7) {
; 2281 |                                                         scia_puts("\r\n
;     | Invalid input! Try again.\r\n");                                       
; 2283 |                                         } while (j != 6 && j != 7);    
; 2284 |                                         scia_puts("\r\n");             
; 2286 |                                         switch (j) {                   
; 2287 |                                         case 6:                        
; 2288 |                                                 scale = 1;             
; 2289 |                                                 j |= 0x40;             
; 2290 |                                                 break;                 
; 2291 |                                         case 7:                        
; 2292 |                                                 scale = 100.0 / conf_da
;     | ta.sensor[ss].base;                                                    
; 2293 |                                                 j |= 0xf0;             
; 2294 |                                                 break;                 
; 2296 |                                         break;                         
; 2298 |                                 default:                               
; 2299 |                                         break;                         
; 2302 |                                 if (scale == 0) {// scale has not been
;     | assigned a number, error                                               
; 2303 |                                         scia_puts("Sensor not calibrate
;     | d!\r\n");                                                              
; 2304 |                                         break;                         
; 2307 |                                 if (conf_data.sensor[ss].ounit == j) { 
; 2308 |                                         scia_puts(                     
; 2309 |                                                         "New output uni
;     | t is the same as the original.\r\n");                                  
; 2310 |                                         break;                         
; 2313 |                                 conf_data.sensor[ss].ounit = j;        
; 2314 |                                 conf_data.sensor[ss].ufactor = scale;  
; 2315 |                                 unsaved = 1;                           
; 2317 |                                 sprintf(buff, "Sensor %i output unit se
;     | t to %s.\r\n",                                                         
; 2318 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].ounit]);                                            
; 2319 |                                 scia_puts(buff);                       
; 2321 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 2322 |                                         if (ss == conf_data.ch[ch].ci)
;     | {// changed is for the current sensor                                  
; 2323 |                                                 update_units();        
; 2324 |                                                 DINT;                  
; 2325 |                                                 ad7738_setcal();       
; 2326 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);   // reset peak                                                 
; 2327 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);   // reset valley                                               
; 2328 |                                                 EINT;                  
; 2331 |                                 break;                                 
; 2333 |                         case 'B':
;     |  // change percent base                                                
; 2335 |                                 // base                                
; 2336 |                                 j = 1;                                 
; 2337 |                                 do {                                   
; 2338 |                                         sprintf(buff, "Sensor %i percen
;     | t base: ", ss + 1);                                                    
; 2339 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2340 |                                         scale = atof(cmdbuff);         
; 2341 |                                         scia_puts(cmdbuff);            
; 2342 |                                         if (scale != 0) {              
; 2343 |                                                 break;                 
; 2345 |                                         scia_puts("\r\nInvalid input! T
;     | ry again\r\n");                                                        
; 2346 |                                 } while (j);                           
; 2347 |                                 scia_puts("\r\n");                     
; 2348 |                                 conf_data.sensor[ss].base = scale;     
; 2349 |                                 unsaved = 1;                           
; 2351 |                                 sprintf(buff, "Sensor %i percent base s
;     | et to %.5f.\r\n",                                                      
; 2352 |                                                 ss + 1, conf_data.senso
;     | r[ss].base);                                                           
; 2353 |                                 scia_puts(buff);                       
; 2355 |                                 if ( UNIT_PC == conf_data.sensor[ss].ou
;     | nit) {                                                                 
; 2356 |                                         // output unit is percent      
; 2357 |                                         conf_data.sensor[ss].ufactor =
;     | 100.0                                                                  
; 2358 |                                                         / conf_data.sen
;     | sor[ss].base;                                                          
; 2360 |                                         for (ch = 0; ch < CHS_MAX; ch++
;     | ) {                                                                    
; 2361 |                                                 if (ss == conf_data.ch[
;     | ch].ci) {                                                              
; 2362 |                                                         // changed is f
;     | or the current sensor                                                  
; 2363 |                                                         DINT;          
; 2364 |                                                         ad7738_setcal()
;     | ;                                                                      
; 2365 |                                                         ad7738_resetpea
;     | k(BITMAP[ch]);   // reset peak                                         
; 2366 |                                                         ad7738_resetval
;     | l(BITMAP[ch]);   // reset valley                                       
; 2367 |                                                         EINT;          
; 2371 |                                 break;                                 
; 2373 |                         case 'D':
;     |  // DAC gain and offset                                                
; 2375 |                                 sprintf(buff, "Sensor %i DAC gain (V/%s
;     | (calibrated)): ",                                                      
; 2376 |                                                 ss + 1, UNITS[0x0f & co
;     | nf_data.sensor[ss].unit]);                                             
; 2377 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2378 |                                 conf_data.sensor[ss].dacgain = atof(cmd
;     | buff);                                                                 
; 2379 |                                 scia_puts(cmdbuff);                    
; 2380 |                                 scia_puts("\r\n");                     
; 2382 |                                 sprintf(buff, "Sensor %i DAC offset (V)
;     | : ", ss + 1);                                                          
; 2383 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2384 |                                 conf_data.sensor[ss].dacoff = atof(cmdb
;     | uff);                                                                  
; 2385 |                                 scia_puts(cmdbuff);                    
; 2386 |                                 scia_puts("\r\n");                     
; 2387 |                                 unsaved = 1;                           
; 2389 |                                 sprintf(buff,                          
; 2390 |                                                 "Sensor %i DAC gain set
;     |  to %g, offset set to %g.\r\n",                                        
; 2391 |                                                 ss + 1, conf_data.senso
;     | r[ss].dacgain,                                                         
; 2392 |                                                 conf_data.sensor[ss].da
;     | coff);                                                                 
; 2393 |                                 scia_puts(buff);                       
; 2395 |                                 DINT;                                  
; 2396 |                                 ad7738_setcal();                       
; 2397 |                                 EINT;                                  
; 2398 |                                 break;                                 
; 2400 |                         default:                                       
; 2401 |                                 goto INVALIDCMD;                       
; 2404 |                         break;                                         
; 2406 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2407 |                         // Encoder config commands
;     |                                  //                                    
; 2408 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2409 |                 case 'E':                                       // Enco
;     | der                                                                    
; 2411 |                         if (cmdlen < 2) {                              
; 2412 |                                 goto INVALIDCMD;                       
; 2415 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2418 |                         case 'F':
;     |  // encoder velocity filter size                                       
; 2420 |                                 j = MAF_MAX;                           
; 2421 |                                 do {                                   
; 2422 |                                         sprintf(buff,                  
; 2423 |                                                         "Encoder veloci
;     | ty filter size (up to %i): ", j);                                      
; 2424 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2425 |                                         i = atoi(cmdbuff);             
; 2426 |                                         scia_puts(cmdbuff);            
; 2427 |                                         if (i > 0 && i <= MAF_MAX) {   
; 2428 |                                                 break;
;     |          // valid number input                                         
; 2430 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2431 |                                 } while (j);                           
; 2432 |                                 scia_puts("\r\n");                     
; 2434 |                                 sprintf(buff, "Encoder velocity filter
;     | size set to %i.\r\n",                                                  
; 2435 |                                                 i);                    
; 2436 |                                 scia_puts(buff);                       
; 2437 |                                 unsaved = 1;                           
; 2439 |                                 // update new value                    
; 2440 |                                 DINT;                                  
; 2441 |                                 conf_data.velfilter = i;               
; 2442 |                                 ad7738_setcal();                       
; 2443 |                                 velf_rst();                            
; 2444 |                                 EINT;                                  
; 2445 |                                 break;                                 
; 2447 |                         case 'P':
;     |  // count per inch                                                     
; 2449 |                                 // channel number                      
; 2450 |                                 j = ENC_MAX;                           
; 2451 |                                 do {                                   
; 2452 |                                         sprintf(buff, "Encoder channel
;     | number (1-%i): ", j);                                                  
; 2453 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2454 |                                         ss = atoi(cmdbuff);            
; 2455 |                                         scia_puts(cmdbuff);            
; 2456 |                                         if (ss > 0 && ss <= j) {       
; 2457 |                                                 break;
;     |          // valid input line number                                    
; 2459 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2460 |                                 } while (j);                           
; 2461 |                                 scia_puts("\r\n");                     
; 2462 |                                 ss--;
;     |  // line number, convert to index                                      
; 2464 |                                 sprintf(buff, "Encoder %u count per inc
;     | h: ", ss + 1);                                                         
; 2465 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2466 |                                 templg = atol(cmdbuff);                
; 2467 |                                 scia_puts(cmdbuff);                    
; 2468 |                                 scia_puts("\r\n");                     
; 2469 |                                 if (templg == 0) {                     
; 2470 |                                         scia_puts("Invalid input, value
;     |  not changed.\r\n");                                                   
; 2471 |                                         break;                         
; 2473 |                                 sprintf(buff, "Encoder %u count per inc
;     | h set to %li.\r\n",                                                    
; 2474 |                                                 ss + 1, templg);       
; 2475 |                                 scia_puts(buff);                       
; 2476 |                                 unsaved = 1;                           
; 2478 |                                 // update new value                    
; 2479 |                                 DINT;                                  
; 2480 |                                 conf_data.cntperin[ss] = templg;       
; 2481 |                                 ad7738_setcal();                       
; 2482 |                                 velf_rst();                            
; 2483 |                                 EINT;                                  
; 2484 |                                 break;                                 
; 2486 |                         break;                                         
; 2488 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2489 |                         // Display command
;     |                                  //                                    
; 2490 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2491 |                 case 'D':                                              
; 2493 |                         if (cmdlen < 2) {                              
; 2494 |                                 goto INVALIDCMD;                       
; 2497 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2499 |                         case 'S':
;     |  // selection                                                          
; 2501 |                                 // line number                         
; 2502 |                                 j = VFD_MAX;                           
; 2503 |                                 do {                                   
; 2504 |                                         sprintf(buff, "Line number (1-%
;     | i): ", j);                                                             
; 2505 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2506 |                                         ss = atoi(cmdbuff);            
; 2507 |                                         scia_puts(cmdbuff);            
; 2508 |                                         if (ss > 0 && ss <= j) {       
; 2509 |                                                 break;
;     |          // valid input line number                                    
; 2511 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2512 |                                 } while (j);                           
; 2513 |                                 scia_puts("\r\n");                     
; 2514 |                                 ss--;
;     |  // line number, convert to index                                      
; 2516 |                                 // what                                
; 2517 |                                 for (j = 0; j < 7; j++) {              
; 2518 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2519 |                                         scia_puts(buff);               
; 2520 |                                         if (j < 6) {                   
; 2521 |                                                 scia_puts(", ");       
; 2524 |                                 scia_puts("\r\n");                     
; 2525 |                                 sprintf(buff, "What to display for line
;     |  %u [0(LOAD)]: ",                                                      
; 2526 |                                                 ss + 1);               
; 2527 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2528 |                                 pt = atoi(cmdbuff);                    
; 2529 |                                 if (pt >= 7) {                         
; 2530 |                                         pt = 0;                        
; 2531 |                                         scia_puts(                     
; 2532 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2534 |                                 scia_puts(cmdbuff);                    
; 2535 |                                 scia_puts("\r\n");                     
; 2536 |                                 conf_data.vfd[ss].what = pt;           
; 2538 |                                 switch (conf_data.vfd[ss].what) // swit
;     | ch on what to display                                                  
; 2540 |                                 case VFD_LOAD:                         
; 2541 |                                 case VFD_PEAK:                         
; 2542 |                                 case VFD_VALL:                         
; 2544 |                                         j = CHS_MAX;                   
; 2545 |                                         goto VFD_CHANNEL;              
; 2547 |                                 case VFD_POSI:                         
; 2548 |                                 case VFD_VELO:                         
; 2550 |                                         j = ENC_MAX;                   
; 2552 |                                         VFD_CHANNEL:                   
; 2553 |                                         // channel number              
; 2554 |                                         do {                           
; 2555 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2556 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2557 |                                                 ch = atoi(cmdbuff);    
; 2558 |                                                 scia_puts(cmdbuff);    
; 2559 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2560 |                                                         break;
;     |          // valid input channel number                                 
; 2562 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2563 |                                         } while (j);                   
; 2564 |                                         scia_puts("\r\n");             
; 2565 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2566 |                                         conf_data.vfd[ss].ch = ch;     
; 2568 |                                         // digits after decimal point  
; 2569 |                                         j = 1;                         
; 2570 |                                         do {                           
; 2571 |                                                 scia_getparam("Digits a
;     | fter decimal point (0-5): ",                                           
; 2572 |                                                                 cmdbuff
;     | , sizeof(cmdbuff));                                                    
; 2573 |                                                 i = atoi(cmdbuff);     
; 2574 |                                                 if (i >= 0 && i <= 5) {
; 2575 |                                                         break;         
; 2577 |                                                 scia_puts("\r\nInvalid
;     | input! Try again\r\n");                                                
; 2578 |                                         } while (j);                   
; 2579 |                                         scia_puts(cmdbuff);            
; 2580 |                                         scia_puts("\r\n");             
; 2581 |                                         conf_data.vfd[ss].adec = i;    
; 2583 |                                         sprintf(buff,                  
; 2584 |                                                         "Line %i set to
;     |  %s of channel %u with %u digits after decimal point.\r\n",            
; 2585 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1, i);                                      
; 2586 |                                         scia_puts(buff);               
; 2587 |                                         break;                         
; 2589 |                                 case VFD_LIMIT:                        
; 2590 |                                         // channel number              
; 2591 |                                         j = CHS_MAX;                   
; 2592 |                                         do {                           
; 2593 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2594 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2595 |                                                 ch = atoi(cmdbuff);    
; 2596 |                                                 scia_puts(cmdbuff);    
; 2597 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2598 |                                                         break;
;     |          // valid input channel number                                 
; 2600 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2601 |                                         } while (j);                   
; 2602 |                                         scia_puts("\r\n");             
; 2603 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2604 |                                         conf_data.vfd[ss].ch = ch;     
; 2606 |                                         sprintf(buff, "Line %i set to %
;     | s channel %u.\r\n",                                                    
; 2607 |                                                         ss + 1, LPV[con
;     | f_data.vfd[ss].what], ch + 1);                                         
; 2608 |                                         scia_puts(buff);               
; 2609 |                                         break;                         
; 2610 |                                 case VFD_TEMP:                         
; 2611 |                                         // no more info                
; 2612 |                                         sprintf(buff, "Line %i set to %
;     | s.\r\n", ss + 1,                                                       
; 2613 |                                                         LPV[conf_data.v
;     | fd[ss].what]);                                                         
; 2614 |                                         scia_puts(buff);               
; 2615 |                                         break;                         
; 2618 |                                 lcd_clear();                           
; 2619 |                                 update_units();                        
; 2620 |                                 unsaved = 1;                           
; 2621 |                                 break;                                 
; 2623 |                         default:                                       
; 2624 |                                 goto INVALIDCMD;                       
; 2627 |                         break;                                         
; 2629 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2630 |                         // DAC out command
;     |                                  //                                    
; 2631 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2632 |                 case 'O':                                              
; 2634 |                         if (cmdlen < 2) {                              
; 2635 |                                 goto INVALIDCMD;                       
; 2638 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2640 |                         case 'S':
;     |  // selection                                                          
; 2642 |                                 // DAC channel number                  
; 2643 |                                 j = DAC_MAX;                           
; 2644 |                                 do {                                   
; 2645 |                                         sprintf(buff, "DAC channel numb
;     | er (1-%i): ", j);                                                      
; 2646 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2647 |                                         ss = atoi(cmdbuff);            
; 2648 |                                         scia_puts(cmdbuff);            
; 2649 |                                         if (ss > 0 && ss <= j) {       
; 2650 |                                                 break;
;     |          // valid input channel number                                 
; 2652 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2653 |                                 } while (j);                           
; 2654 |                                 scia_puts("\r\n");                     
; 2655 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2657 |                                 // what: (load, peak, valley, position,
;     |  velocity)                                                             
; 2658 |                                 for (j = 0; j < 5; j++) {              
; 2659 |                                         sprintf(buff, "%1i(%s)", j, LPV
;     | [j]);                                                                  
; 2660 |                                         scia_puts(buff);               
; 2661 |                                         scia_puts(", ");               
; 2663 |                                 j = 7;                                 
; 2664 |                                 sprintf(buff, "%1i(%s)", j, LPV[j]);   
; 2665 |                                 scia_puts(buff);                       
; 2666 |                                 scia_puts("\r\n");                     
; 2667 |                                 sprintf(buff, "What to send to DAC chan
;     | nel %u [0(LOAD)]: ",                                                   
; 2668 |                                                 ss + 1);               
; 2669 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2670 |                                 pt = atoi(cmdbuff);                    
; 2671 |                                 if (pt >= 5 && pt != 7) {              
; 2672 |                                         pt = 0;                        
; 2673 |                                         scia_puts(                     
; 2674 |                                                         "\r\nInvalid in
;     | put, set to default \"LOAD\".");                                       
; 2676 |                                 scia_puts(cmdbuff);                    
; 2677 |                                 scia_puts("\r\n");                     
; 2678 |                                 conf_data.dac[ss].what = pt;
;     |  // what                                                               
; 2680 |                                 if ( VFD_VOLT != pt) {                 
; 2682 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2683 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2684 |                                                 j = CHS_MAX;           
; 2685 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2686 |                                                 j = ENC_MAX;           
; 2689 |                                         // linked load/... channel numb
;     | er                                                                     
; 2690 |                                         do {                           
; 2691 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2692 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2693 |                                                 ch = atoi(cmdbuff);    
; 2694 |                                                 scia_puts(cmdbuff);    
; 2695 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2696 |                                                         break;
;     |          // valid input channel number                                 
; 2698 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2699 |                                         } while (j);                   
; 2700 |                                         scia_puts("\r\n");             
; 2701 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2702 |                                         conf_data.dac[ss].ch = ch;
;     |          // channel                                                    
; 2704 |                                         // only set gain and offset for
;     |  position and velocity here                                            
; 2705 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2706 |                                                 // gain                
; 2707 |                                                 if ( VFD_POSI == pt) { 
; 2708 |                                                         sprintf(buff, "
;     | Gain (V/Inch): ");                                                     
; 2709 |                                                 } else if ( VFD_VELO ==
;     |  pt) {                                                                 
; 2710 |                                                         sprintf(buff, "
;     | Gain (V/IPM): ");                                                      
; 2712 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2713 |                                                 conf_data.dac[ss].gain
;     | = atof(cmdbuff);                                                       
; 2714 |                                                 scia_puts(cmdbuff);    
; 2715 |                                                 scia_puts("\r\n");     
; 2717 |                                                 // offset              
; 2718 |                                                 sprintf(buff, "Offset (
;     | V): ");                                                                
; 2719 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2720 |                                                 conf_data.dac[ss].offse
;     | t = atof(cmdbuff);                                                     
; 2721 |                                                 scia_puts(cmdbuff);    
; 2722 |                                                 scia_puts("\r\n");     
; 2726 |                                 unsaved = 1;                           
; 2728 |                                 // print result                        
; 2729 |                                 sprintf(buff, "DAC channel %i linked to
;     |  %s", ss + 1,                                                          
; 2730 |                                                 LPV[pt]);              
; 2731 |                                 scia_puts(buff);                       
; 2733 |                                 if ( VFD_VOLT == pt) {                 
; 2734 |                                         scia_puts("\r\n");             
; 2735 |                                 } else {                               
; 2736 |                                         sprintf(buff, " channel %i\r\n"
;     | , ch + 1);                                                             
; 2737 |                                         scia_puts(buff);               
; 2739 |                                         if ( VFD_POSI == pt || VFD_VELO
;     |  == pt) {                                                              
; 2740 |                                                 sprintf(buff, "  with g
;     | ain %g and offset %g.\r\n",                                            
; 2741 |                                                                 conf_da
;     | ta.dac[ss].gain,                                                       
; 2742 |                                                                 conf_da
;     | ta.dac[ss].offset);                                                    
; 2743 |                                                 scia_puts(buff);       
; 2747 |                                 DINT;                                  
; 2748 |                                 ad7738_setcal();                       
; 2749 |                                 EINT;                                  
; 2750 |                                 break;                                 
; 2752 |                         case 'D':
;     |  // direct voltage output                                              
; 2754 |                                 if (cmdlen < 5 || !isdigit(cmdbuff[2]) 
; 2755 |                                                 || 'V' != cmdbuff[3]) {
; 2756 |                                         goto INVALIDCMD;               
; 2759 |                                 // channel index                       
; 2760 |                                 ss = atoi(cmdbuff + 2);         // get
;     | channel number                                                         
; 2761 |                                 if (ss <= 0 || ss > DAC_MAX) {         
; 2762 |                                         goto INVALIDCMD;               
; 2763 |                                         // invalid channel number      
; 2765 |                                 ss--;
;     |  // change to zero based index                                         
; 2767 |                                 if ( VFD_VOLT != conf_data.dac[ss].what
;     | ) {                                                                    
; 2768 |                                         goto INVALIDCMD;               
; 2769 |                                         // DAC channel is not set to di
;     | rect voltage                                                           
; 2772 |                                 volt[0] = atof(cmdbuff + 4);
;     |  // get voltage                                                        
; 2773 |                                 if (volt[0] < -10 || volt[0] > 10) {   
; 2774 |                                         goto INVALIDCMD;               
; 2775 |                                         // invalid voltage             
; 2778 |                                 //dsum[0] = conf_data.dac[ss].dslope *
;     | volt[0] + conf_data.dac[ss].dint;                                      
; 2779 |                                 if (volt[0] < 0) {                     
; 2780 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | open * volt[0]                                                         
; 2781 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2782 |                                 } else {                               
; 2783 |                                         dsum[0] = conf_data.dac[ss].dsl
;     | opep * volt[0]                                                         
; 2784 |                                                         + conf_data.dac
;     | [ss].dint;                                                             
; 2787 |                                 if (dsum[0] <= 0) {                    
; 2788 |                                         dacc[0] = 0;                   
; 2789 |                                 } else if (dsum[0] >= 0xffff) {        
; 2790 |                                         dacc[0] = 0xffff;              
; 2791 |                                 } else {                               
; 2792 |                                         dacc[0] = (Uint16) dsum[0];    
; 2795 |                                 mcbsp_xmit(dacc[0], ss);               
; 2796 |                                 latch_dac();                           
; 2798 |                                 sprintf(buff, "DAC channel %i set to %g
;     | V (0x%04X)\r\n",                                                       
; 2799 |                                                 ss + 1, volt[0], dacc[0
;     | ]);                                                                    
; 2800 |                                 scia_puts(buff);                       
; 2802 |                                 break;                                 
; 2804 |                         default:                                       
; 2805 |                                 goto INVALIDCMD;                       
; 2808 |                         break;                                         
; 2810 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2811 |                         // LIMIT command
;     |                                          //                            
; 2812 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 2813 |                 case 'L':                                              
; 2815 |                         if (cmdlen < 2) {                              
; 2816 |                                 goto INVALIDCMD;                       
; 2819 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 2821 |                         case 'S':
;     |  // selection                                                          
; 2823 |                                 // LIMIT channel number                
; 2824 |                                 j = LIM_MAX;                           
; 2825 |                                 do {                                   
; 2826 |                                         sprintf(buff, "LIMIT channel nu
;     | mber (1-%i): ", j);                                                    
; 2827 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2828 |                                         ss = atoi(cmdbuff);            
; 2829 |                                         scia_puts(cmdbuff);            
; 2830 |                                         if (ss > 0 && ss <= j) {       
; 2831 |                                                 break;
;     |          // valid input channel number                                 
; 2833 |                                         scia_puts("\r\nInvalid input! T
;     | ry again.\r\n");                                                       
; 2834 |                                 } while (j);                           
; 2835 |                                 scia_puts("\r\n");                     
; 2836 |                                 ss--;
;     |  // channel number, convert to index                                   
; 2838 |                                 sprintf(buff, "LIMIT %i: ON(1)/[OFF(0)]
;     | : ", ss + 1);                                                          
; 2839 |                                 scia_getparam(buff, cmdbuff, sizeof(cmd
;     | buff));                                                                
; 2840 |                                 scia_puts(cmdbuff);                    
; 2841 |                                 scia_puts("\r\n");                     
; 2843 |                                 if (1 == atoi(cmdbuff))         // turn
;     |  on                                                                    
; 2845 |                                         // set on flag                 
; 2846 |                                         conf_data.lim[ss].limit |= LIM_
;     | ON;                                                                    
; 2848 |                                         // what: (load, peak, valley, p
;     | osition, velocity)                                                     
; 2849 |                                         for (j = 0; j < 5; j++) {      
; 2850 |                                                 sprintf(buff, "%1i(%s)"
;     | , j, LPV[j]);                                                          
; 2851 |                                                 scia_puts(buff);       
; 2852 |                                                 if (j < 4) {           
; 2853 |                                                         scia_puts(", ")
;     | ;                                                                      
; 2856 |                                         scia_puts("\r\n");             
; 2857 |                                         sprintf(buff,                  
; 2858 |                                                         "What to link t
;     | o LIMIT channel %u [0(LOAD)]: ",                                       
; 2859 |                                                         ss + 1);       
; 2860 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2861 |                                         pt = atoi(cmdbuff);            
; 2862 |                                         if (pt >= 5) {                 
; 2863 |                                                 pt = 0;                
; 2864 |                                                 scia_puts(             
; 2865 |                                                                 "\r\nIn
;     | valid input, set to default \"LOAD\".");                               
; 2867 |                                         scia_puts(cmdbuff);            
; 2868 |                                         scia_puts("\r\n");             
; 2869 |                                         conf_data.lim[ss].what = pt;
;     |          // what                                                       
; 2871 |                                         if ( VFD_LOAD == pt || VFD_PEAK
;     |  == pt                                                                 
; 2872 |                                                         || VFD_VALL ==
;     | pt) {                                                                  
; 2873 |                                                 j = CHS_MAX;           
; 2874 |                                         } else if ( VFD_POSI == pt || V
;     | FD_VELO == pt) {                                                       
; 2875 |                                                 j = ENC_MAX;           
; 2878 |                                         // linked load/... channel numb
;     | er                                                                     
; 2879 |                                         do {                           
; 2880 |                                                 sprintf(buff, "Channel
;     | number (1-%i): ", j);                                                  
; 2881 |                                                 scia_getparam(buff, cmd
;     | buff, sizeof(cmdbuff));                                                
; 2882 |                                                 ch = atoi(cmdbuff);    
; 2883 |                                                 scia_puts(cmdbuff);    
; 2884 |                                                 if (ch > 0 && ch <= j)
;     | {                                                                      
; 2885 |                                                         break;
;     |          // valid input channel number                                 
; 2887 |                                                 scia_puts("\r\nInvalid
;     | input! Try again.\r\n");                                               
; 2888 |                                         } while (j);                   
; 2889 |                                         scia_puts("\r\n");             
; 2890 |                                         ch--;
;     |  // channel number, convert to index                                   
; 2891 |                                         conf_data.lim[ss].ch = ch;
;     |          // channel                                                    
; 2893 |                                         // NO/NC                       
; 2894 |                                         scia_getparam(                 
; 2895 |                                                         "Relay switch n
;     | ormal position: NC(1)/[NO(0)]: ",                                      
; 2896 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2897 |                                         scia_puts(cmdbuff);            
; 2898 |                                         scia_puts("\r\n");             
; 2900 |                                         if (1 == atoi(cmdbuff))
;     |  // NC                                                                 
; 2902 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_NC;                                                            
; 2903 |                                         } else {                       
; 2904 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_NC;                                                           
; 2907 |                                         scia_getparam(                 
; 2908 |                                                         "Relay switch l
;     | atching: Enable(1)/[Disable(0)]: ",                                    
; 2909 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2910 |                                         scia_puts(cmdbuff);            
; 2911 |                                         scia_puts("\r\n");             
; 2913 |                                         if (1 == atoi(cmdbuff))
;     |  // Latching                                                           
; 2915 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_LA;                                                            
; 2916 |                                         } else {                       
; 2917 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_LA;                                                           
; 2920 |                                         scia_getparam(                 
; 2921 |                                                         "Limit trigger
;     | level: \">\"(1)/\"<\"(0)]: ",                                          
; 2922 |                                                         cmdbuff, sizeof
;     | (cmdbuff));                                                            
; 2923 |                                         scia_puts(cmdbuff);            
; 2924 |                                         scia_puts("\r\n");             
; 2926 |                                         if (1 == atoi(cmdbuff))
;     |  // HIGH                                                               
; 2928 |                                                 conf_data.lim[ss].limit
;     |  |= LIM_HL;                                                            
; 2929 |                                         } else {                       
; 2930 |                                                 conf_data.lim[ss].limit
;     |  &= ~LIM_HL;                                                           
; 2933 |                                         // unit (output)               
; 2934 |                                         switch (conf_data.lim[ss].what)
;     |  {                                                                     
; 2935 |                                         case VFD_LOAD:                 
; 2936 |                                         case VFD_PEAK:                 
; 2937 |                                         case VFD_VALL:                 
; 2938 |                                                 ccp =                  
; 2939 |                                                                 UNITS[0
;     | x0f                                                                    
; 2940 | 
;     |          & conf_data.sensor[conf_data.ch[conf_data.lim[ss].ch].ci].ouni
;     | t];                                                                    
; 2941 |                                                 break;                 
; 2942 |                                         case VFD_POSI:                 
; 2943 |                                                 ccp = POS_U;           
; 2944 |                                                 break;                 
; 2945 |                                         case VFD_VELO:                 
; 2946 |                                                 ccp = VEL_U;           
; 2947 |                                                 break;                 
; 2950 |                                         // set value                   
; 2951 |                                         sprintf(buff, "Limit set value
;     | (%s): ", ccp);                                                         
; 2952 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2953 |                                         scia_puts(cmdbuff);            
; 2954 |                                         scia_puts("\r\n");             
; 2956 |                                         conf_data.lim[ss].limits = atof
;     | (cmdbuff);                                                             
; 2957 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2958 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imits /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2960 |                                         sprintf(buff, "Limit reset valu
;     | e (%s): ", ccp);                                                       
; 2961 |                                         scia_getparam(buff, cmdbuff, si
;     | zeof(cmdbuff));                                                        
; 2962 |                                         scia_puts(cmdbuff);            
; 2963 |                                         scia_puts("\r\n");             
; 2965 |                                         conf_data.lim[ss].limitr = atof
;     | (cmdbuff);                                                             
; 2966 |                                         // convert to calibrated unit t
;     | o save                                                                 
; 2967 |                                         //conf_data.ch[ch].sensor[ss].l
;     | imitr /= conf_data.ch[ch].sensor[ss].ufactor;                          
; 2968 |                                         //scia_puts( "The limit set/res
;     | et values are converted to calibrated unit\r\n" );                     
; 2970 |                                         // print result                
; 2971 |                                         sprintf(buff,                  
; 2972 |                                                         "LIMIT channel
;     | %i linked to %s channel %i\r\n",                                       
; 2973 |                                                         ss + 1, LPV[pt]
;     | , ch + 1);                                                             
; 2974 |                                         scia_puts(buff);               
; 2976 |                                         sprintf(buff,                  
; 2977 |                                                         "  Limit:
;     |       ON, %s, Latch %s, Trigger %s\r\n",                               
; 2978 |                                                         (LIM_NC & conf_
;     | data.lim[ss].limit) ?                                                  
; 2979 | 
;     |  "NC" : "NO",                                                          
; 2980 |                                                         (LIM_LA & conf_
;     | data.lim[ss].limit) ?                                                  
; 2981 | 
;     |  "ON" : "OFF",                                                         
; 2982 |                                                         (LIM_HL & conf_
;     | data.lim[ss].limit) ? ">" : "<");                                      
; 2983 |                                         scia_puts(buff);               
; 2984 |                                         sprintf(buff,                  
; 2985 |                                                         "  Limit set va
;     | lue:  %-10.5f%s, reset value:  %-10.5f%s\r\n",                         
; 2986 |                                                         conf_data.lim[s
;     | s].limits, ccp,                                                        
; 2987 |                                                         conf_data.lim[s
;     | s].limitr, ccp);                                                       
; 2988 |                                         scia_puts(buff);               
; 2990 |                                 } else
;     |  // turn off                                                           
; 2992 |                                         conf_data.lim[ss].limit &= ~LIM
;     | _ON;                                                                   
; 2993 |                                         sprintf(buff, "LIMIT %i set to
;     | OFF.\r\n", ss + 1);                                                    
; 2996 |                                 unsaved = 1;                           
; 2998 |                                 DINT;                                  
; 2999 |                                 ad7738_setcal();                       
; 3000 |                                 EINT;                                  
; 3001 |                                 break;                                 
; 3003 |                         default:                                       
; 3004 |                                 goto INVALIDCMD;                       
; 3007 |                         break;                                         
; 3009 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3010 |                         // reset commands
;     |                                          //                            
; 3011 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3012 |                 case 'R':                                              
; 3014 |                         if (cmdlen < 2) {                              
; 3015 |                                 goto INVALIDCMD;                       
; 3018 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3020 |                         case 'T':
;     |  // tare                                                               
; 3022 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3023 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3024 |                                         ad7738_resettare(BITMAP[i - 1])
;     | ;        // tare                                                       
; 3025 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3026 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3027 |                                 } else {                               
; 3028 |                                         ad7738_resettare( BM_LD_ALL);
;     |  // tare                                                               
; 3029 |                                         ad7738_resetpeak( BM_LD_ALL);
;     |  // reset peak                                                         
; 3030 |                                         ad7738_resetvall( BM_LD_ALL);
;     |  // reset valley                                                       
; 3032 |                                 break;                                 
; 3034 |                         case 'P':
;     |  // peak                                                               
; 3036 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3037 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3038 |                                         ad7738_resetpeak(BITMAP[i - 1])
;     | ;        // reset peak                                                 
; 3039 |                                 } else {                               
; 3040 |                                         ad7738_resetpeak( BM_ALL);
;     |          // reset peak                                                 
; 3042 |                                 break;                                 
; 3044 |                         case 'V':
;     |  // valley                                                             
; 3046 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3047 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= CHS_MAX && i > 0) {                                             
; 3048 |                                         ad7738_resetvall(BITMAP[i - 1])
;     | ;        // reset valley                                               
; 3049 |                                 } else {                               
; 3050 |                                         ad7738_resetvall( BM_ALL);
;     |          // reset valley                                               
; 3052 |                                 break;                                 
; 3054 |                         case 'S':
;     |  // shunt switch                                                       
; 3056 |                                 if (cmdlen > 2 && cmdbuff[2] == 'C') { 
; 3057 |                                         shunt_switch(1);               
; 3058 |                                         scia_puts("Shunt switch closed\
;     | r\n");                                                                 
; 3059 |                                 } else {                               
; 3060 |                                         shunt_switch(0);               
; 3061 |                                         scia_puts("Shunt switch opened\
;     | r\n");                                                                 
; 3063 |                                 break;                                 
; 3065 |                         case 'L':
;     |  // limit                                                              
; 3067 |                                 ch = atoi(cmdbuff + 2);         // chan
;     | nel number                                                             
; 3068 |                                 ch--;                                  
; 3070 |                                 ad7738_resetlimit(ch);                 
; 3071 |                                 break;                                 
; 3073 |                         case 'I':
;     |  // posItion                                                           
; 3075 |                                 if (cmdlen > 2 && isdigit(cmdbuff[2])  
; 3076 |                                                 && (i = atoi(cmdbuff +
;     | 2)) <= ENC_MAX && i > 0) {                                             
; 3077 |                                         ad7738_resettare(BITMAP[CHS_MAX
;     |  + i - 1]);      // tare                                               
; 3078 |                                         ad7738_resetpeak(BITMAP[CHS_MAX
;     |  + i - 1]);// reset peak                                               
; 3079 |                                         ad7738_resetvall(BITMAP[CHS_MAX
;     |  + i - 1]);// reset valley                                             
; 3080 |                                 } else {                               
; 3081 |                                         ad7738_resettare( BM_PS_ALL | B
;     | M_VL_ALL);       // tare                                               
; 3082 |                                         ad7738_resetpeak( BM_PS_ALL | B
;     | M_VL_ALL);// reset peak                                                
; 3083 |                                         ad7738_resetvall( BM_PS_ALL | B
;     | M_VL_ALL);// reset valley                                              
; 3085 |                                 break;                                 
; 3087 |                         default:                                       
; 3088 |                                 goto INVALIDCMD;                       
; 3090 |                         break;                                         
; 3092 | #ifdef SDHCCARD                                                        
; 3094 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3095 |                         // Stream to SD Card
;     |                                  //                                    
; 3096 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3097 |                         case 'W':// Write control                      
; 3099 |                         if( cmdlen < 2 )                               
; 3101 |                                 goto INVALIDCMD;                       
; 3104 |                         switch( cmdbuff[1] )            // on the 2nd b
;     | yte of the command                                                     
; 3106 |                                 case 'E':
;     |          // Enable stream to SD Card                                   
; 3108 |                                 if( cmdlen < 3 )                       
; 3110 |                                         goto INVALIDCMD;               
; 3113 |                                 if( sd_write )                         
; 3115 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3116 |                                         break;                         
; 3119 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3120 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3122 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3124 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3125 |                                 res = f_open( fp, buff, FA_CREATE_ALWAY
;     | S|FA_WRITE );                                                          
; 3127 |                                 if( !res )                             
; 3129 |                                         res = f_write( fp, cmdbuff, cmd
;     | len, &temp16 );                                                        
; 3130 |                                         if( res || cmdlen != temp16 )  
; 3132 |                                                 sprintf( buff, "Error w
;     | riting: %02X %u %u\r\n", res, cmdlen, temp16 );                        
; 3133 |                                                 scia_puts( buff );     
; 3134 |                                                 f_close( fp );         
; 3135 |                                                 fp = NULL;             
; 3136 |                                                 break;                 
; 3153 |                                         res = f_lseek( fp, 0 ); // Reco
;     | rd data stream without cluster allocation delay                        
; 3155 |                                         if( res )                      
; 3157 |                                                 f_close( fp );         
; 3158 |                                                 fp = NULL;             
; 3159 |                                                 scia_puts( "Card access
;     |  error, seek to start.\r\n" );                                         
; 3160 |                                                 break;                 
; 3163 |                                         sprintf( buff, "File %s opened
;     | and stream starts, use command WD to stop it.\r\n", cmdbuff+2 );       
; 3164 |                                         scia_puts( buff );             
; 3166 |                                         prod_init();                   
; 3167 |                                         sd_write = 1;                  
; 3168 |                                         sd_cnt = 0;                    
; 3169 |                                         break;                         
; 3172 |                                 sprintf( buff, "Error access SD card co
;     | de: %02X\r\n", res );                                                  
; 3173 |                                 scia_puts( buff );                     
; 3174 |                                 break;                                 
; 3176 |                                 case 'D':
;     |          // Disable stream to SD Card                                  
; 3178 |                                 if( sd_write )                         
; 3180 |                                         sd_close = 1;                  
; 3181 |                                         scia_puts( "Stream to SD disabl
;     | ed. " );                                                               
; 3182 |                                         break;                         
; 3184 |                                 scia_puts( "Stream to SD not enabled.\r
;     | \n" );                                                                 
; 3185 |                                 break;                                 
; 3187 |                                 case 'L':
;     |          // list files                                                 
; 3189 |                                 if( sd_write )                         
; 3191 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3192 |                                         break;                         
; 3195 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3196 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3198 |                                 res = f_opendir(&dir, "0:");           
; 3199 |                                 if (res)                               
; 3201 |                                         sprintf( buff, "No SD Card or S
;     | D Card not supported code: %02X\r\n", res );                           
; 3202 |                                         scia_puts( buff );             
; 3203 |                                         break;                         
; 3206 |                                 p1 = s1 = s2 = 0;                      
; 3207 |                                 for(;;)                                
; 3209 |                                         res = f_readdir(&dir, &Finfo); 
; 3210 |                                         if ((res != FR_OK) || !Finfo.fn
;     | ame[0])                                                                
; 3211 |                                         break;                         
; 3212 |                                         if (Finfo.fattrib & AM_DIR)    
; 3214 |                                                 s2++;                  
; 3216 |                                         else                           
; 3218 |                                                 s1++;                  
; 3219 |                                                 p1 += Finfo.fsize;     
; 3221 |                                         sprintf( buff, "%c%c%c%c%c %u/%
;     | 02u/%02u %02u:%02u %9lu  %s\r\n",                                      
; 3222 |                                                         (Finfo.fattrib
;     | & AM_DIR) ? 'D' : '-',                                                 
; 3223 |                                                         (Finfo.fattrib
;     | & AM_RDO) ? 'R' : '-',                                                 
; 3224 |                                                         (Finfo.fattrib
;     | & AM_HID) ? 'H' : '-',                                                 
; 3225 |                                                         (Finfo.fattrib
;     | & AM_SYS) ? 'S' : '-',                                                 
; 3226 |                                                         (Finfo.fattrib
;     | & AM_ARC) ? 'A' : '-',                                                 
; 3227 |                                                         (Finfo.fdate >>
;     |  9) + 1980, (Finfo.fdate >> 5) & 15, Finfo.fdate & 31,                 
; 3228 |                                                         (Finfo.ftime >>
;     |  11), (Finfo.ftime >> 5) & 63,                                         
; 3229 |                                                         Finfo.fsize, Fi
;     | nfo.fname);                                                            
; 3230 |                                         scia_puts( buff );             
; 3232 |                                 sprintf(buff, "%4u File(s),%10lu bytes
;     | total\r\n%4u Dir(s)", s1, p1, s2);                                     
; 3233 |                                 scia_puts( buff );                     
; 3234 |                                 if (f_getfree("0:", (DWORD*)&p1, &fs) =
;     | = FR_OK)                                                               
; 3236 |                                         sprintf(buff, ", %10luK bytes f
;     | ree\r\n", p1 * fs->csize / 2);                                         
; 3237 |                                         scia_puts( buff );             
; 3239 |                                 break;                                 
; 3241 |                                 case 'G':
;     |          // get a file                                                 
; 3243 |                                 if( sd_write )                         
; 3245 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3246 |                                         break;                         
; 3249 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3250 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3252 |                                 fp = &fileOb;// pointer to the file obj
;     | ect                                                                    
; 3254 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3255 |                                 res = f_open( fp, buff, FA_READ );     
; 3256 |                                 if (res)                               
; 3258 |                                         sprintf( buff, "Error open file
;     |  %s code %02X\r\n", cmdbuff+2, res );                                  
; 3259 |                                         scia_puts( buff );             
; 3260 |                                         break;                         
; 3263 |                                 do                                     
; 3265 |                                         res = f_read(fp, buff, 512, &te
;     | mp16);                                                                 
; 3266 |                                         scia_send( buff, temp16 );     
; 3267 |                                 }while( !res && temp16 == 512 );       
; 3269 |                                 f_close( fp );                         
; 3270 |                                 fp = NULL;                             
; 3271 |                                 break;                                 
; 3273 |                                 case 'R':
;     |          // remove a file                                              
; 3275 |                                 if( sd_write )                         
; 3277 |                                         scia_puts( "Stream to SD is on,
;     |  command can't be excuted.\r\n" );                                     
; 3278 |                                         break;                         
; 3281 |                                 f_mount( 0, NULL );
;     |  // unmount first.                                                     
; 3282 |                                 f_mount( 0, &Fatfs );// mount it again 
; 3284 |                                 sprintf( buff, "0:%s", cmdbuff+2 );    
; 3286 |                                 res = f_unlink( buff );                
; 3288 |                                 sprintf( buff, "delete file %s code %02
;     | X\r\n", cmdbuff+2, res );                                              
; 3289 |                                 scia_puts( buff );                     
; 3290 |                                 break;                                 
; 3292 |                                 default:                               
; 3293 |                                 goto INVALIDCMD;                       
; 3296 |                         break;                                         
; 3297 | #endif                                                                 
; 3299 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3300 |                         // Flash memory access commands
;     |                                    //                                  
; 3301 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3302 |                 case 'F':                                       // flas
;     | h access                                                               
; 3304 |                         if (cmdlen < 2) {                              
; 3305 |                                 goto INVALIDCMD;                       
; 3308 |                         switch (cmdbuff[1])                     // on t
;     | he 2nd byte of the command                                             
; 3310 |                         case 'W':
;     |  // write flash                                                        
; 3312 |                                 if (unsaved) {                         
; 3313 |                                         // flash writing               
; 3314 |                                         lcd_clear();                   
; 3315 |                                         lcd_puts("Flash writing...", 0)
;     | ;                                                                      
; 3316 |                                         scia_puts("Flash writing..."); 
; 3318 |                                         for (i = 0; i < 50; i++) {     
; 3319 |                                                 delay_us(1000);
;     |          // delay for display update                                   
; 3322 |                                         DINT;                          
; 3323 |                                         flash_ret = conf_write();      
; 3324 |                                         EINT;                          
; 3326 |                                         if ( STATUS_SUCCESS == flash_re
;     | t) {                                                                   
; 3327 |                                                 scia_puts("configuratio
;     | n data saved to flash.\r\n");                                          
; 3328 |                                                 unsaved = 0;           
; 3329 |                                         } else {                       
; 3330 |                                                 scia_puts("Error writin
;     | g to flash memory!\r\n");                                              
; 3332 |                                         lcd_clear();                   
; 3333 |                                         update_units();                
; 3334 |                                         break;                         
; 3336 |                                 scia_puts(                             
; 3337 |                                                 "Configuration data not
;     |  changed, saving is not needed.\r\n");                                 
; 3338 |                                 break;                                 
; 3340 |                         case 'R':
;     |  // read flash                                                         
; 3342 |                                 // flash reading                       
; 3343 |                                 conf_read();                           
; 3345 |                                 DINT;                                  
; 3346 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3347 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3348 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3349 |                                 EINT;                                  
; 3351 |                                 scia_puts("Configuration data read from
;     |  flash.\r\n");                                                         
; 3352 |                                 unsaved = 0;                           
; 3354 |                                 update_units();                        
; 3356 |                                 break;                                 
; 3358 |                         case 'D':               // reset conf_data to d
;     | efault and write flash                                                 
; 3360 |                                 conf_default();                        
; 3362 |                                 // flash writing                       
; 3363 |                                 lcd_clear();                           
; 3364 |                                 lcd_puts("Flash reset and     writing .
;     | ..", 0);                                                               
; 3365 |                                 scia_puts("Flash write...");           
; 3367 |                                 for (i = 0; i < 50; i++) {             
; 3368 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 3371 |                                 DINT;                                  
; 3372 |                                 flash_ret = conf_write();              
; 3373 |                                 ad7738_setcal();
;     |  // set calibration parameters                                         
; 3374 |                                 ad7738_resetpeak( BM_ALL);
;     |  // reset peak                                                         
; 3375 |                                 ad7738_resetvall( BM_ALL);
;     |  // reset valley                                                       
; 3376 |                                 EINT;                                  
; 3378 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 3379 |                                         scia_puts(                     
; 3380 |                                                         "configuration
;     | data set to default and written to flash.\r\n");                       
; 3381 |                                         unsaved = 0;                   
; 3382 |                                 } else {                               
; 3383 |                                         scia_puts("Error writing to fla
;     | sh memory!\r\n");                                                      
; 3385 |                                 lcd_clear();                           
; 3386 |                                 update_units();                        
; 3387 |                                 break;                                 
; 3389 |                         default:                                       
; 3390 |                                 goto INVALIDCMD;                       
; 3393 |                         break;                                         
; 3395 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3396 |                         // Help manu
;     |                                  //                                    
; 3397 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3398 |                 case 'H':                               // help menu   
; 3400 |                         scia_puts("\r\nList of available commands:\r\n\
;     | r\n");                                                                 
; 3402 |                         scia_puts("PA          Print out current config
;     | uration.\r\n");                                                        
; 3403 |                         scia_puts(                                     
; 3404 |                                         "PS          Print out calibrat
;     | ed sensor information.\r\n");                                          
; 3405 |                         scia_puts("PD          Print out display inform
;     | ation.\r\n");                                                          
; 3406 |                         scia_puts("PO          Print out DAC out inform
;     | ation.\r\n");                                                          
; 3407 |                         scia_puts("PL          Print out LIMIT informat
;     | ion.\r\n");                                                            
; 3408 |                         scia_puts("\r\n");                             
; 3410 |                         scia_puts("US          Set unit serial number.\
;     | r\n");                                                                 
; 3411 |                         scia_puts("UN          Set unit name.\r\n");   
; 3412 |                         scia_puts("UC          Set current sensor.\r\n"
;     | );                                                                     
; 3413 |                         scia_puts("UI          Set communication interf
;     | ace.\r\n");                                                            
; 3414 |                         scia_puts("UB          Set communication baud r
;     | ate.\r\n");                                                            
; 3415 |                         scia_puts("UF          Set moving average filte
;     | r size.\r\n");                                                         
; 3416 |                         scia_puts("\r\n");                             
; 3418 |                         scia_puts(                                     
; 3419 |                                         "BCc[Xx.xx][Yy.yy] Board ADC ca
;     | libration on channel c at x.xx mv/v and y.yy mv/v.\r\n");              
; 3420 |                         scia_puts(                                     
; 3421 |                                         "BDc[Xx.xx][Yy.yy] Board DAC ca
;     | libration on channel c at x.xx V and y.yy V.\r\n");                    
; 3422 |                         scia_puts("\r\n");                             
; 3424 |                         scia_puts("CV          MV/V sensor calibration.
;     | \r\n");                                                                
; 3425 |                         scia_puts("CM          MASS sensor calibration.
;     | \r\n");                                                                
; 3426 |                         scia_puts("CS          SHUNT sensor calibration
;     | .\r\n");                                                               
; 3427 |                         scia_puts("\r\n");                             
; 3429 |                         scia_puts("SN          Change sensor name/label
;     | .\r\n");                                                               
; 3430 |                         scia_puts("SU          Change sensor output uni
;     | t.\r\n");                                                              
; 3431 |                         scia_puts("SB          Change sensor percent ba
;     | se.\r\n");                                                             
; 3432 |                         scia_puts("SD          Change sensor DAC gain a
;     | nd offset.\r\n");                                                      
; 3433 |                         scia_puts("\r\n");                             
; 3435 |                         scia_puts("EF          Encoder velocity filter
;     | length.\r\n");                                                         
; 3436 |                         scia_puts(                                     
; 3437 |                                         "EP          Encoder count per
;     | inch for the two channels.\r\n");                                      
; 3438 |                         scia_puts("\r\n");                             
; 3440 |                         scia_puts("DS          Display Selection.\r\n")
;     | ;                                                                      
; 3441 |                         scia_puts("\r\n");                             
; 3443 |                         scia_puts(                                     
; 3444 |                                         "OS          DAC Out Selection
;     | and gain and offset set.\r\n");                                        
; 3445 |                         scia_puts(                                     
; 3446 |                                         "ODcVx.xx    DAC Out directly s
;     | et channel c to voltage x.xxV.\r\n");                                  
; 3447 |                         scia_puts("\r\n");                             
; 3449 |                         scia_puts("LS          Limit Selection.\r\n"); 
; 3450 |                         scia_puts("\r\n");                             
; 3452 |                         scia_puts("RT[x]       Reset tare [channel x].\
;     | r\n");                                                                 
; 3453 |                         scia_puts("RP[x]       Reset peak [channel x].\
;     | r\n");                                                                 
; 3454 |                         scia_puts("RV[x]       Reset valley [channel x]
;     | .\r\n");                                                               
; 3455 |                         scia_puts("RS[O]       Open shunt switch.\r\n")
;     | ;                                                                      
; 3456 |                         scia_puts("RSC         Close shunt switch.\r\n"
;     | );                                                                     
; 3457 |                         scia_puts("RL          Reset latched limit swit
;     | ch.\r\n");                                                             
; 3458 |                         scia_puts("RI[x]       Reset posItion [channel
;     | x].\r\n");                                                             
; 3459 |                         scia_puts("\r\n");                             
; 3461 | #ifdef SDHCCARD                                                        
; 3462 |                         scia_puts( "WExxx...    Open file xxx and enabl
;     | e write to it.\r\n" );                                                 
; 3463 |                         scia_puts( "WD          Disable SD card write a
;     | nd close file.\r\n" );                                                 
; 3464 |                         scia_puts( "WL          List files on the SD ca
;     | rd.\r\n" );                                                            
; 3465 |                         scia_puts( "WGxxx...    Get the file xxx as bin
;     | ary stream.\r\n" );                                                    
; 3466 |                         scia_puts( "WRxxx...    Remove file xxx from SD
;     |  card.\r\n" );                                                         
; 3467 |                         scia_puts( "\r\n" );                           
; 3468 | #endif                                                                 
; 3470 |                         scia_puts(                                     
; 3471 |                                         "FW          Save current confi
;     | guration to flash if changed.\r\n");                                   
; 3472 |                         scia_puts(                                     
; 3473 |                                         "FR          Read configuration
;     |  from flash to override changes.\r\n");                                
; 3474 |                         scia_puts(                                     
; 3475 |                                         "FD          Set configuration
;     | to default and write to flash.\r\n");                                  
; 3476 |                         scia_puts("\r\n");                             
; 3478 |                         scia_puts("H           Help menu print out.\r\n
;     | ");                                                                    
; 3480 |                         // not implemented                             
; 3481 |                         //scia_puts( "1           Download new program
;     | code.\r\n" );                                                          
; 3483 |                         scia_puts("\r\n");                             
; 3485 |                         break;                                         
; 3487 |                 case 'X':                                              
; 3489 |                         scia_puts("Command mode switched to BINARY mode
;     | .\r\n");                                                               
; 3491 |                         for (i = 0; i < 10; i++)        // 200ms       
; 3493 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3496 |                         cmd_mode = SCI_MODE_BIN;                       
; 3497 |                         scia_set_cmd_mode(cmd_mode);    // set the bin
;     | command mode                                                           
; 3499 |                         //ssr_set(3, 1);
;     |          // indicate gui connected                                     
; 3501 |                         break;                                         
; 3503 |                 case 'Z':                                              
; 3505 |                         scia_puts("System will reboot in 2 seconds!\r\n
;     | ");                                                                    
; 3507 |                         for (i = 0; i < 100; i++)       // 2s          
; 3509 |                                 delay_us(20000);                // dela
;     | y for 20ms                                                             
; 3512 |                         reboot();                                      
; 3513 |                         break;                                         
; 3537 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3538 |                         // Invalid commands
;     |                                  //                                    
; 3539 |                         ///////////////////////////////////////////////
;     | /////////////////////////////////////                                  
; 3540 |                 default:                                               
; 3542 |                         INVALIDCMD:                                    
; 3544 |                         scia_puts("Invalid command or parameter(s) \"")
;     | ;                                                                      
; 3545 |                         scia_puts(cmdbuff);                            
; 3546 |                         scia_puts("\", ignored.\r\n");                 
; 3547 |                         break;                                         
; 3549 |                 } // switch on 1st byte                                
; 3551 |                 if (unsaved) {                                         
; 3552 |                         scia_puts(                                     
; 3553 |                                         "\r\n*** Changes have not been
;     | saved! Use \"FW\" to save. ***\r\n");                                  
; 3556 |         } else if ( SCI_MODE_BIN == cmd_mode) {                        
; 3557 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3558 |                 // BIN command mode processing
;     |                          //                                            
; 3559 |                 //+++++++++++++++++++++++++++++++++++++++++++++++++++++
;     | +++++++++++++++++++++++++++//                                          
; 3561 |                 // ------------------------------------------------    
; 3562 |                 // DEBUG: put received command on LCD                  
; 3571 |                 // ------------------------------------------------    
; 3572 |                 if (cmdlen < 2) {                                      
; 3573 |                         // INVALID COMMAND, less than 2 byte           
; 3574 |                         // may need to send NACK back                  
; 3575 |                         continue;                                      
; 3578 |                 for (i = 0; i < 2; i++) {                              
; 3579 |                         buff[i] = cmdbuff[i];                   // copy
;     |  address and command byte                                              
; 3582 |                 j = 2;                                  // buff length 
; 3583 |                 bincmdresult = Error_UnImpl;                           
; 3585 |                 // DEBUG, sending the command back                     
; 3586 |                 //scia_send_bin( cmdbuff, cmdlen );     // send it back
;     |  for debug                                                             
; 3588 |                 // first byte is the address, which is not used for now
;     | .                                                                      
; 3590 |                 switch (cmdbuff[1])                     // second byte
;     | is the command code                                                    
; 3593 |                 // ************  ADDED FOR IMPACT TESTER **********/   
; 3595 |                 case MotorJogCmd:                                      
; 3596 |                         if (cmdlen < 3) {                              
; 3597 |                                 bincmdresult = Error_Invalid;          
; 3598 |                                 break;                                 
; 3600 |                         setMotorDir((cmdbuff[2] & 0x01));              
; 3601 |                         setMotorJog((cmdbuff[2] & 0x10)>>4);           
; 3603 |                         buff[j++] = 0;                                 
; 3604 |                         bincmdresult = OK_SendResult;                  
; 3606 |                         break;                                         
; 3607 |                 case SetAutoHeight:                                    
; 3608 |                         if (cmdlen < 7) {                              
; 3609 |                                 bincmdresult = Error_Invalid;          
; 3610 |                                 break;                                 
; 3613 |                         j=3;                                           
; 3614 |                         intp = (Uint16*) &ftemp;                       
; 3615 |                         for (i = 0; i < 2; i++) {                      
; 3616 |                                 *intp = cmdbuff[j];                    
; 3617 |                                 buff[j++] = 0xff & *intp;              
; 3618 |                                 *intp += cmdbuff[j] << 8;              
; 3619 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3620 |                                 intp++;                                
; 3622 |                         setAutoHeight(ftemp);                          
; 3623 |                         calcAutoDir(ad7738_getpos());                  
; 3624 |                         setautoHeightEnable(cmdbuff[2]);               
; 3626 |                         break;                                         
; 3628 |                 case GetSensorData:                                    
; 3630 |                         ftemp = ad7738_getload();                      
; 3631 |                         intp = (Uint16*) &ftemp;                       
; 3632 |                         for (i = 0; i < 2; i++) {                      
; 3633 |                                 buff[j++] = 0xff & *intp;              
; 3634 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3635 |                                 intp++;                                
; 3638 |                         ftemp = ad7738_getpos();
;     |  // get instantaneous encoder position                                 
; 3639 |                         intp = (Uint16*) &ftemp;                       
; 3640 |                         for (i = 0; i < 2; i++) {                      
; 3641 |                                 buff[j++] = 0xff & *intp;              
; 3642 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3643 |                                 intp++;                                
; 3646 |                         ftemp = ad7738_getpeakload();
;     |  // get peak load                                                      
; 3647 |                         intp = (Uint16*) &ftemp;                       
; 3648 |                         for (i = 0; i < 2; i++) {                      
; 3649 |                                 buff[j++] = 0xff & *intp;              
; 3650 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3651 |                                 intp++;                                
; 3655 |                         //buff[j++] = getspeedSens();           // spee
;     | d sensor state                                                         
; 3657 |                         bincmdresult = OK_SendResult;                  
; 3659 |                         break;                                         
; 3660 |                 case SetNumSensors:                                    
; 3661 |                         if(cmdbuff[2] == 1 || cmdbuff[2] == 2)         
; 3662 |                                 set_numSensors(cmdbuff[2]);            
; 3663 |                         bincmdresult = OK_SendResult;                  
; 3665 |                         break;                                         
; 3666 |                 case GetNumSensors:                                    
; 3667 |                         buff[j++] = get_numSensors();                  
; 3669 |                         bincmdresult = OK_SendResult;                  
; 3671 |                         break;                                         
; 3673 |                 case StartTest:                                        
; 3675 |                         toggleFastDataCollect(1);                      
; 3676 |                         buff[j++] = 0;                                 
; 3677 |                         bincmdresult = OK_SendResult;                  
; 3679 |                         break;                                         
; 3682 |                 case GetVelocityTimeStamp:                             
; 3683 |                         ftemp = ad7738_getDropTime(0);
;     |  // get drop time                                                      
; 3684 |                         intp = (Uint16*) &ftemp;                       
; 3685 |                         for (i = 0; i < 2; i++) {                      
; 3686 |                                 buff[j++] = 0xff & *intp;              
; 3687 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3688 |                                 intp++;                                
; 3690 |                         ftemp = ad7738_getDropTime(1);
;     |  // get drop time                                                      
; 3691 |                         intp = (Uint16*) &ftemp;                       
; 3692 |                         for (i = 0; i < 2; i++) {                      
; 3693 |                                 buff[j++] = 0xff & *intp;              
; 3694 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3695 |                                 intp++;                                
; 3698 |                         bincmdresult = OK_SendResult;                  
; 3700 |                         break;                                         
; 3701 |                 case GuiConnectedRelay:                                
; 3702 |                         ssr_set(3, (cmdbuff[2] & 0x1));         // 0 ==
;     |  Not connected, 1 == connected                                         
; 3703 |                         buff[j++] = 0;                                 
; 3704 |                         bincmdresult = OK_SendResult;                  
; 3706 |                         break;                                         
; 3708 |                         // ************  (end) ADDED FOR IMPACT TESTER
;     | **********/                                                            
; 3710 |                 case CheckAddress:                                     
; 3712 |                         buff[j++] = 0;                                 
; 3713 |                         bincmdresult = OK_SendResult;                  
; 3714 |                         break;                                         
; 3716 |                 case SetAddress:                                       
; 3718 |                         buff[j] = cmdbuff[j];                          
; 3719 |                         j++;                                           
; 3720 |                         bincmdresult = OK_SendResult;                  
; 3721 |                         break;                                         
; 3723 |                 case RemoveAddress:                                    
; 3725 |                         buff[j] = cmdbuff[j];                          
; 3726 |                         j++;                                           
; 3727 |                         bincmdresult = OK_SendResult;                  
; 3728 |                         break;                                         
; 3730 |                 case GetUnitInfo:                                      
; 3732 |                         intp = (Uint16*) &version;              // vers
;     | ion                                                                    
; 3733 |                         for (i = 0; i < 2; i++) {                      
; 3734 |                                 buff[j++] = 0xff & *intp;              
; 3735 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3736 |                                 intp++;                                
; 3739 |                         buff[j++] = 0xff & CPLDVER;             // CPLD
;     |  ver                                                                   
; 3740 |                         buff[j++] = 0xff & CPLDVER >> 8;               
; 3742 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3743 |                         for (i = 0; i < 2; i++) {                      
; 3744 |                                 buff[j++] = 0xff & *intp;              
; 3745 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3746 |                                 intp++;                                
; 3749 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3750 |                         buff[j++] = slen;                              
; 3751 |                         for (i = 0; i < slen; i++) {                   
; 3752 |                                 buff[j++] = conf_data.uname[i]; // name
; 3754 |                         bincmdresult = OK_SendResult;                  
; 3756 |                         break;                                         
; 3758 |                 case SetUnitSN:                                        
; 3760 |                         if (cmdlen < 6) {                              
; 3761 |                                 bincmdresult = Error_Invalid;          
; 3762 |                                 break;                                 
; 3765 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 3766 |                         for (i = 0; i < 2; i++) {                      
; 3767 |                                 *intp = cmdbuff[j];                    
; 3768 |                                 buff[j++] = 0xff & *intp;              
; 3769 |                                 *intp += cmdbuff[j] << 8;              
; 3770 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3771 |                                 intp++;                                
; 3773 |                         unsaved = 1;                                   
; 3775 |                         bincmdresult = OK_SendResult;                  
; 3776 |                         break;                                         
; 3778 |                 case SetUnitName:                                      
; 3780 |                         if (cmdlen < 3 || cmdlen < cmdbuff[2] + 3) {   
; 3781 |                                 bincmdresult = Error_Invalid;          
; 3782 |                                 break;                                 
; 3785 |                         for (i = 0; i < cmdbuff[2]; i++) {             
; 3786 |                                 conf_data.uname[i] = cmdbuff[3 + i];   
; 3788 |                         conf_data.uname[i] = '\0';                     
; 3789 |                         unsaved = 1;                                   
; 3791 |                         slen = strlen((const char*) conf_data.uname);
;     |  // name length                                                        
; 3792 |                         buff[j++] = slen;                              
; 3793 |                         for (i = 0; i < slen; i++) {                   
; 3794 |                                 buff[j++] = conf_data.uname[i];
;     |  // name                                                               
; 3796 |                         bincmdresult = OK_SendResult;                  
; 3797 |                         break;                                         
; 3799 |                 case GetInterface:                                     
; 3801 |                         buff[j++] = conf_data.rxdir;                   
; 3803 |                         if (conf_data.rxdir == SDIR_RS485              
; 3804 |                                         || conf_data.rxdir == SDIR_RS23
;     | 2) {                                                                   
; 3805 |                                 intp = (Uint16*) &BAUD[conf_data.baud];
; 3806 |                                 for (i = 0; i < 2; i++) {              
; 3807 |                                         buff[j++] = 0xff & *intp;      
; 3808 |                                         buff[j++] = 0xff & *intp >> 8; 
; 3809 |                                         intp++;                        
; 3812 |                         bincmdresult = OK_SendResult;                  
; 3813 |                         break;                                         
; 3815 |                 case SetInterface:                                     
; 3817 |                         if (cmdlen < 3) {                              
; 3818 |                                 bincmdresult = Error_Invalid;          
; 3819 |                                 break;                                 
; 3821 |                         if (cmdbuff[2] != SDIR_RS232 && cmdbuff[2] != S
;     | DIR_RS485                                                              
; 3822 |                                         && cmdbuff[2] != SDIR_ENET && c
;     | mdbuff[2] != SDIR_USB) {                                               
; 3823 |                                 bincmdresult = Error_Invalid;          
; 3824 |                                 break;                                 
; 3827 |                         if (cmdbuff[2] == SDIR_RS232 || cmdbuff[2] == S
;     | DIR_RS485) {                                                           
; 3828 |                                 if (cmdlen < 7) {                      
; 3829 |                                         bincmdresult = Error_Invalid;  
; 3830 |                                         break;                         
; 3833 |                                 temp32 = 0;                            
; 3834 |                                 for (k = 6; k > 2; k--) {              
; 3835 |                                         temp32 += cmdbuff[k];          
; 3836 |                                         temp32 <<= 8;                  
; 3839 |                                 for (i = 0; i < 8; i++) {              
; 3840 |                                         if (temp32 == BAUD[i]) {       
; 3841 |                                                 conf_data.baud = i;
;     |                  // baudrate                                           
; 3842 |                                                 break;                 
; 3845 |                                 if (i == 8) {                          
; 3846 |                                         bincmdresult = Error_Invalid;  
; 3847 |                                         break;                         
; 3851 |                         conf_data.rxdir = cmdbuff[2];
;     |  // interface                                                          
; 3853 |                         while (j < cmdlen) {                           
; 3854 |                                 buff[j] = cmdbuff[j];                  
; 3855 |                                 j++;                                   
; 3857 |                         unsaved = 1;                                   
; 3858 |                         bincmdresult = OK_SendResult;                  
; 3859 |                         break;                                         
; 3861 |                 case GetChannel:                                       
; 3863 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 3864 |                                 bincmdresult = Error_Invalid;          
; 3865 |                                 break;                                 
; 3867 |                         buff[j++] = cmdbuff[2];                 // chan
;     | nel number                                                             
; 3869 |                         buff[j++] = conf_data.ch[cmdbuff[2]].ci;// curr
;     | ent sensor number                                                      
; 3871 |                         for (i = 0; i < 4; i++)         // board cal of
;     | fset, zero for now                                                     
; 3873 |                                 buff[j++] = 0;                         
; 3876 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3877 |                         for (i = 0; i < 2; i++)         // board cal sl
;     | ope +                                                                  
; 3879 |                                 buff[j++] = 0xff & *intp;              
; 3880 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3881 |                                 intp++;                                
; 3884 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].bslo
;     | pe;                                                                    
; 3885 |                         for (i = 0; i < 2; i++) // board cal slope -, s
;     | ame as + for now                                                       
; 3887 |                                 buff[j++] = 0xff & *intp;              
; 3888 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3889 |                                 intp++;                                
; 3892 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3893 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor X                                                  
; 3895 |                                 buff[j++] = 0xff & *intp;              
; 3896 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3897 |                                 intp++;                                
; 3900 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3901 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor y                                                  
; 3903 |                                 buff[j++] = 0xff & *intp;              
; 3904 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3905 |                                 intp++;                                
; 3908 |                         intp = (Uint16*) &conf_data.ch[cmdbuff[2]].tcx;
; 3909 |                         for (i = 0; i < 2; i++)         // temperature
;     | compensation factor z                                                  
; 3911 |                                 buff[j++] = 0xff & *intp;              
; 3912 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3913 |                                 intp++;                                
; 3916 |                         bincmdresult = OK_SendResult;                  
; 3917 |                         break;                                         
; 3919 |                 case GetSensor:                                        
; 3921 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 3922 |                                 bincmdresult = Error_Invalid;          
; 3923 |                                 break;                                 
; 3925 |                         ss = cmdbuff[2];                               
; 3926 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 3928 |                         // sensor serial name                          
; 3929 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].ssn);                                                               
; 3930 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3931 |                         for (i = 0; i < slen; i++) {                   
; 3932 |                                 buff[j++] = conf_data.sensor[ss].ssn[i]
;     | ;        // string                                                     
; 3935 |                         // sensor name/label                           
; 3936 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 3937 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 3938 |                         for (i = 0; i < slen; i++) {                   
; 3939 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 3942 |                         // TAGID                                       
; 3943 |                         intp = (Uint16*) &conf_data.sensor[ss].tagid;  
; 3944 |                         for (i = 0; i < 4; i++) {                      
; 3945 |                                 buff[j++] = 0xff & *intp;              
; 3946 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3947 |                                 intp++;                                
; 3950 |                         // Method                                      
; 3951 |                         buff[j++] = conf_data.sensor[ss].method;       
; 3953 |                         // Date                                        
; 3954 |                         intp = (Uint16*) &conf_data.sensor[ss].date;   
; 3955 |                         for (i = 0; i < 2; i++) {                      
; 3956 |                                 buff[j++] = 0xff & *intp;              
; 3957 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3958 |                                 intp++;                                
; 3961 |                         // Range                                       
; 3962 |                         intp = (Uint16*) &conf_data.sensor[ss].range;  
; 3963 |                         for (i = 0; i < 2; i++) {                      
; 3964 |                                 buff[j++] = 0xff & *intp;              
; 3965 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3966 |                                 intp++;                                
; 3969 |                         // Unit                                        
; 3970 |                         buff[j++] = 0xff & conf_data.sensor[ss].unit;  
; 3972 |                         // Output Unit                                 
; 3973 |                         buff[j++] = 0xff & conf_data.sensor[ss].ounit; 
; 3975 |                         // Unit Factor                                 
; 3976 |                         intp = (Uint16*) &conf_data.sensor[ss].ufactor;
; 3977 |                         for (i = 0; i < 2; i++) {                      
; 3978 |                                 buff[j++] = 0xff & *intp;              
; 3979 |                                 buff[j++] = 0xff & *intp >> 8;         
; 3980 |                                 intp++;                                
; 3983 |                         // calibration points.                         
; 3984 |                         if ( MD_RUN_MAS == conf_data.sensor[ss].method)
;     |  {                                                                     
; 3985 |                                 buff[j++] = conf_data.sensor[ss].points
;     | ;                                                                      
; 3986 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints; k++) {                                                           
; 3987 |                                         // mass point                  
; 3988 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].mass[k];                                                       
; 3989 |                                         for (i = 0; i < 2; i++) {      
; 3990 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 3991 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 3992 |                                                 intp++;                
; 3994 |                                         // adc counts point            
; 3995 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].adc[k];                                                        
; 3996 |                                         for (i = 0; i < 2; i++) {      
; 3997 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 3998 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 3999 |                                                 intp++;                
; 4003 |                                 for (k = 0; k < conf_data.sensor[ss].po
;     | ints - 1; k++) {                                                       
; 4004 |                                         // slope point                 
; 4005 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].slope[k];                                                      
; 4006 |                                         for (i = 0; i < 2; i++) {      
; 4007 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4008 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4009 |                                                 intp++;                
; 4011 |                                         // intercept point             
; 4012 |                                         intp = (Uint16*) &conf_data.sen
;     | sor[ss].intercept[k];                                                  
; 4013 |                                         for (i = 0; i < 2; i++) {      
; 4014 |                                                 buff[j++] = 0xff & *int
;     | p;                                                                     
; 4015 |                                                 buff[j++] = 0xff & *int
;     | p >> 8;                                                                
; 4016 |                                                 intp++;                
; 4019 |                         } else {                                       
; 4020 |                                 buff[j++] = 0;                         
; 4021 |                                 // slope                               
; 4022 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | slope[0];                                                              
; 4023 |                                 for (i = 0; i < 2; i++) {              
; 4024 |                                         buff[j++] = 0xff & *intp;      
; 4025 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4026 |                                         intp++;                        
; 4028 |                                 // intercept                           
; 4029 |                                 intp = (Uint16*) &conf_data.sensor[ss].
;     | intercept[0];                                                          
; 4030 |                                 for (i = 0; i < 2; i++) {              
; 4031 |                                         buff[j++] = 0xff & *intp;      
; 4032 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4033 |                                         intp++;                        
; 4037 |                         // shunt                                       
; 4038 |                         intp = (Uint16*) &conf_data.sensor[ss].shunt;  
; 4039 |                         for (i = 0; i < 2; i++) {                      
; 4040 |                                 buff[j++] = 0xff & *intp;              
; 4041 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4042 |                                 intp++;                                
; 4045 |                         // base                                        
; 4046 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 4047 |                         for (i = 0; i < 2; i++) {                      
; 4048 |                                 buff[j++] = 0xff & *intp;              
; 4049 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4050 |                                 intp++;                                
; 4053 |                         // DAC calibration gain                        
; 4054 |                         intp = (Uint16*) &conf_data.sensor[ss].dacgain;
; 4055 |                         for (i = 0; i < 2; i++) {                      
; 4056 |                                 buff[j++] = 0xff & *intp;              
; 4057 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4058 |                                 intp++;                                
; 4061 |                         // DAC calibration offset                      
; 4062 |                         intp = (Uint16*) &conf_data.sensor[ss].dacoff; 
; 4063 |                         for (i = 0; i < 2; i++) {                      
; 4064 |                                 buff[j++] = 0xff & *intp;              
; 4065 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4066 |                                 intp++;                                
; 4069 |                         // channel calibrated on                       
; 4070 |                         buff[j++] = conf_data.sensor[ss].ch;           
; 4072 |                         bincmdresult = OK_SendResult;                  
; 4073 |                         break;                                         
; 4075 |                 case GetQEPChannels:                                   
; 4077 |                         for (k = 0; k < ENC_MAX; k++) {                
; 4078 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 4079 |                                 for (i = 0; i < 2; i++) {              
; 4080 |                                         buff[j++] = 0xff & *intp;      
; 4081 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4082 |                                         intp++;                        
; 4086 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 4087 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 4089 |                         bincmdresult = OK_SendResult;                  
; 4090 |                         break;                                         
; 4092 |                 case GetCurSensor:                                     
; 4094 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4095 |                                 buff[j++] = conf_data.ch[i].ci; // curr
;     | ent sensor number                                                      
; 4098 |                         bincmdresult = OK_SendResult;                  
; 4099 |                         break;                                         
; 4101 |                 case GetAFilterSize:                                   
; 4103 |                         // filter size                                 
; 4104 |                         intp = (Uint16*) &conf_data.filter;            
; 4105 |                         buff[j++] = 0xff & *intp;                      
; 4106 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4107 |                         // filter window                               
; 4108 |                         intp = (Uint16*) &conf_data.diffwin;           
; 4109 |                         for (i = 0; i < 2; i++) {                      
; 4110 |                                 buff[j++] = 0xff & *intp;              
; 4111 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4112 |                                 intp++;                                
; 4114 |                         bincmdresult = OK_SendResult;                  
; 4115 |                         break;                                         
; 4117 |                 case GetAutoId:                                        
; 4119 |                         buff[j++] = conf_data.tagiden;                 
; 4120 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4121 |                                 buff[j++] = autoid[i];                 
; 4123 |                         bincmdresult = OK_SendResult;                  
; 4124 |                         break;                                         
; 4126 |                 case GetDisplay:                                       
; 4128 |                         for (i = 0; i < VFD_MAX; i++) {                
; 4129 |                                 buff[j++] = conf_data.vfd[i].what;     
; 4130 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 4131 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 4133 |                         bincmdresult = OK_SendResult;                  
; 4134 |                         break;                                         
; 4136 |                 case GetDAC:                                           
; 4138 |                         for (i = 0; i < DAC_MAX; i++) {                
; 4139 |                                 buff[j++] = conf_data.dac[i].what;     
; 4140 |                                 buff[j++] = conf_data.dac[i].ch;       
; 4142 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4143 |                                 //{                                    
; 4144 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 4145 |                                 //}                                    
; 4146 |                                 //else                                 
; 4147 |                                 //{                                    
; 4148 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 4149 |                                 //}                                    
; 4150 |                                 for (k = 0; k < 2; k++) {              
; 4151 |                                         buff[j++] = 0xff & *intp;      
; 4152 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4153 |                                         intp++;                        
; 4155 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 4156 |                                 //{                                    
; 4157 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 4158 |                                 //}                                    
; 4159 |                                 //else                                 
; 4160 |                                 //{                                    
; 4161 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 4162 |                                 //}                                    
; 4163 |                                 for (k = 0; k < 2; k++) {              
; 4164 |                                         buff[j++] = 0xff & *intp;      
; 4165 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4166 |                                         intp++;                        
; 4168 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pen;                                                                   
; 4169 |                                 for (k = 0; k < 2; k++) {              
; 4170 |                                         buff[j++] = 0xff & *intp;      
; 4171 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4172 |                                         intp++;                        
; 4174 |                                 intp = (Uint16*) &conf_data.dac[i].dslo
;     | pep;                                                                   
; 4175 |                                 for (k = 0; k < 2; k++) {              
; 4176 |                                         buff[j++] = 0xff & *intp;      
; 4177 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4178 |                                         intp++;                        
; 4180 |                                 intp = (Uint16*) &conf_data.dac[i].dint
;     | ;                                                                      
; 4181 |                                 for (k = 0; k < 2; k++) {              
; 4182 |                                         buff[j++] = 0xff & *intp;      
; 4183 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4184 |                                         intp++;                        
; 4187 |                         bincmdresult = OK_SendResult;                  
; 4188 |                         break;                                         
; 4190 |                 case GetLIMIT:                                         
; 4192 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4193 |                                 buff[j++] = conf_data.lim[i].what;     
; 4194 |                                 buff[j++] = conf_data.lim[i].ch;       
; 4195 |                                 buff[j++] = conf_data.lim[i].limit;    
; 4197 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 4198 |                                 for (k = 0; k < 2; k++) {              
; 4199 |                                         buff[j++] = 0xff & *intp;      
; 4200 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4201 |                                         intp++;                        
; 4203 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 4204 |                                 for (k = 0; k < 2; k++) {              
; 4205 |                                         buff[j++] = 0xff & *intp;      
; 4206 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4207 |                                         intp++;                        
; 4210 |                         bincmdresult = OK_SendResult;                  
; 4211 |                         break;                                         
; 4213 |                 case GetLIMITStatus:                                   
; 4215 |                         for (i = 0; i < LIM_MAX; i++) {                
; 4216 |                                 buff[j++] = ad7738_getlimitst(i);      
; 4218 |                         bincmdresult = OK_SendResult;                  
; 4219 |                         break;                                         
; 4221 |                         // Heat Cal commands.                          
; 4222 |                 case GetTCLoadA:                                       
; 4223 |                 case GetTCLoadB:                                       
; 4224 |                 case GetTCLoadC:                                       
; 4225 |                 case GetTCLoadD:                                       
; 4227 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4228 |                         intp = (Uint16*) &temp16;                      
; 4229 |                         buff[j++] = 0xff & *intp;                      
; 4230 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4232 |                         wtp = ad7738_getmon();                  // load
;     |  * 100000                                                              
; 4233 |                         templg = (long) (100000.0 * wtp->adw[cmdbuff[1]
;     |  - GetTCLoadA]);                                                       
; 4234 |                         intp = (Uint16*) &templg;                      
; 4235 |                         for (i = 0; i < 2; i++) {                      
; 4236 |                                 buff[j++] = 0xff & *intp;              
; 4237 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4238 |                                 intp++;                                
; 4240 |                         bincmdresult = OK_SendResult;                  
; 4241 |                         break;                                         
; 4243 |                 case GetTCTemp:                                        
; 4245 |                         temp16 = (Uint16) (tempvalue * 10);     // temp
;     |  * 10                                                                  
; 4246 |                         intp = (Uint16*) &temp16;                      
; 4247 |                         buff[j++] = 0xff & *intp;                      
; 4248 |                         buff[j++] = 0xff & *intp >> 8;                 
; 4249 |                         bincmdresult = OK_SendResult;                  
; 4250 |                         break;                                         
; 4252 |                 case GetTCStatus:                                      
; 4254 |                         intp = (Uint16*) &conf_data.usn;
;     |  // SN                                                                 
; 4255 |                         for (i = 0; i < 2; i++) {                      
; 4256 |                                 buff[j++] = 0xff & *intp;              
; 4257 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4258 |                                 intp++;                                
; 4261 |                         for (i = 0; i < CHS_MAX; i++) {                
; 4262 |                                 temp16 = 0x80;                         
; 4263 |                                 if (0 != conf_data.ch[i].tcx) {        
; 4264 |                                         temp16 |= 0x01;                
; 4266 |                                 if (0 != conf_data.ch[i].tcy) {        
; 4267 |                                         temp16 |= 0x02;                
; 4269 |                                 if (1 != conf_data.ch[i].tcz) {        
; 4270 |                                         temp16 |= 0x04;                
; 4272 |                                 buff[j++] = 0xff & temp16;             
; 4274 |                         bincmdresult = OK_SendResult;                  
; 4275 |                         break;                                         
; 4277 |                 case GetTCParam:                                       
; 4279 |                         if (cmdlen < 3 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= CHS_MAX) {                                                          
; 4280 |                                 bincmdresult = Error_Invalid;          
; 4281 |                                 break;                                 
; 4284 |                         ch = cmdbuff[2];                               
; 4285 |                         buff[j++] = ch;                                
; 4287 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4288 |                         for (k = 0; k < 2; k++) {                      
; 4289 |                                 buff[j++] = 0xff & *intp;              
; 4290 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4291 |                                 intp++;                                
; 4293 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4294 |                         for (k = 0; k < 2; k++) {                      
; 4295 |                                 buff[j++] = 0xff & *intp;              
; 4296 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4297 |                                 intp++;                                
; 4299 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4300 |                         for (k = 0; k < 2; k++) {                      
; 4301 |                                 buff[j++] = 0xff & *intp;              
; 4302 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4303 |                                 intp++;                                
; 4305 |                         bincmdresult = OK_SendResult;                  
; 4306 |                         break;                                         
; 4308 |                         // WJD : ADDED FOR GREAT LAKES PROJECT         
; 4309 | #if 1                                                                  
; 4310 |                 case Open_SSR_IN1:                                     
; 4311 |                         ssr_set(0, SSR_OPEN);                          
; 4312 |                         break;                                         
; 4314 |                 case Close_SSR_IN1:                                    
; 4315 |                         ssr_set(0, SSR_CLOSE);                         
; 4316 |                         break;                                         
; 4317 | #endif                                                                 
; 4319 |                 case SetTCParam:                                       
; 4321 |                         if (cmdlen < 15 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX) {                                                         
; 4322 |                                 bincmdresult = Error_Invalid;          
; 4323 |                                 break;                                 
; 4326 |                         ch = cmdbuff[2];                               
; 4327 |                         buff[j++] = ch;                                
; 4329 |                         k = 3;                                         
; 4330 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4331 |                         for (i = 0; i < 2; i++) {                      
; 4332 |                                 *intp = cmdbuff[k++];                  
; 4333 |                                 *intp += cmdbuff[k++] << 8;            
; 4334 |                                 intp++;                                
; 4336 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4337 |                         for (i = 0; i < 2; i++) {                      
; 4338 |                                 *intp = cmdbuff[k++];                  
; 4339 |                                 *intp += cmdbuff[k++] << 8;            
; 4340 |                                 intp++;                                
; 4342 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4343 |                         for (i = 0; i < 2; i++) {                      
; 4344 |                                 *intp = cmdbuff[k++];                  
; 4345 |                                 *intp += cmdbuff[k++] << 8;            
; 4346 |                                 intp++;                                
; 4349 |                         intp = (Uint16*) &conf_data.ch[ch].tcx;        
; 4350 |                         for (k = 0; k < 2; k++) {                      
; 4351 |                                 buff[j++] = 0xff & *intp;              
; 4352 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4353 |                                 intp++;                                
; 4355 |                         intp = (Uint16*) &conf_data.ch[ch].tcy;        
; 4356 |                         for (k = 0; k < 2; k++) {                      
; 4357 |                                 buff[j++] = 0xff & *intp;              
; 4358 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4359 |                                 intp++;                                
; 4361 |                         intp = (Uint16*) &conf_data.ch[ch].tcz;        
; 4362 |                         for (k = 0; k < 2; k++) {                      
; 4363 |                                 buff[j++] = 0xff & *intp;              
; 4364 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4365 |                                 intp++;                                
; 4367 |                         unsaved = 1;                                   
; 4368 |                         bincmdresult = OK_SendResult;                  
; 4369 |                         break;                                         
; 4371 |                 case SetBCalParam:                                     
; 4373 |                         if (cmdlen < 12 || cmdbuff[2] < 0 || cmdbuff[2]
;     |  >= CHS_MAX                                                            
; 4374 |                                         || cmdbuff[3] != 2) {          
; 4375 |                                 bincmdresult = Error_Invalid;          
; 4376 |                                 break;                                 
; 4379 |                         ch = cmdbuff[2];                               
; 4380 |                         buff[j++] = ch;                                
; 4381 |                         buff[j] = cmdbuff[j++];                        
; 4383 |                         for (k = 0; k < cmdbuff[3]; k++) {             
; 4384 |                                 intp = (Uint16*) &volt[k];             
; 4385 |                                 for (i = 0; i < 2; i++) {              
; 4386 |                                         *intp = cmdbuff[j];            
; 4387 |                                         buff[j++] = 0xff & *intp;      
; 4388 |                                         *intp += cmdbuff[j] << 8;      
; 4389 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4390 |                                         intp++;                        
; 4393 |                         bincmdresult = OK_SendResult;                  
; 4394 |                         break;                                         
; 4396 |                 case StartBCRead:                                      
; 4398 |                         if (cmdlen < 8 || cmdbuff[2] != ch || cmdbuff[3
;     | ] < 0                                                                  
; 4399 |                                         || cmdbuff[3] >= 2) {          
; 4400 |                                 bincmdresult = Error_Invalid;          
; 4401 |                                 break;                                 
; 4404 |                         k = cmdbuff[3];                                
; 4405 |                         intp = (Uint16*) &tempft;                      
; 4406 |                         for (i = 0; i < 2; i++) {                      
; 4407 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 4408 |                                 intp++;                                
; 4410 |                         if (volt[k] != tempft) {                       
; 4411 |                                 bincmdresult = Error_Invalid;          
; 4412 |                                 break;                                 
; 4414 |                         lcd_clear();                                   
; 4415 |                         lcd_puts("Board Calibration...", 0);           
; 4416 |                         sprintf(buff, "Channel %i", ch + 1);           
; 4417 |                         lcd_puts(buff, 20);                            
; 4418 |                         sprintf(buff, "%c: %10.5f", 'X' + k, volt[k]); 
; 4419 |                         lcd_puts(buff, 40);                            
; 4420 |                         lcd_puts("Reading ... ", 60);                  
; 4422 |                         dsum[k] = 0;                                   
; 4423 |                         sampcnt = CAL_SAMPLES;                         
; 4424 |                         while (sampcnt--) {                            
; 4425 |                                 while (0 == ad7738_rawrdy()) {         
; 4426 |                                         delay_us(1);
;     |  // wait                                                               
; 4428 |                                 cntp = ad7738_getraw();                
; 4429 |                                 dsum[k] += cntp->adc[ch];              
; 4431 |                         if (1 == k) {                                  
; 4432 |                                 conf_data.ch[ch].bslope = CAL_SAMPLES *
;     |  (volt[1] - volt[0])                                                   
; 4433 |                                                 / (dsum[1] - dsum[0]); 
; 4435 |                                 unsaved = 1;                           
; 4436 |                                 DINT;                                  
; 4437 |                                 ad7738_setcal();                       
; 4438 |                                 ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 4439 |                                 ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 4440 |                                 EINT;                                  
; 4442 |                         for (i = 0; i < cmdlen; i++) {                 
; 4443 |                                 buff[i] = cmdbuff[i];                  
; 4445 |                         j = cmdlen;                                    
; 4446 |                         bincmdresult = OK_SendResult;                  
; 4448 |                         lcd_clear();                                   
; 4449 |                         update_units();                                
; 4450 |                         break;                                         
; 4452 |                 case SetDCalParam:                                     
; 4454 |                         if (cmdlen < 11 || cmdbuff[2] != ch            
; 4455 |                                         || (0x07 | daccbm) != 0x07) {  
; 4456 |                                 bincmdresult = Error_Invalid;          
; 4457 |                                 break;                                 
; 4459 |                         ch = cmdbuff[2];                               
; 4460 |                         buff[j++] = ch;                                
; 4462 |                         for (k = 0; k < 3; k++) {                      
; 4463 |                                 intp = (Uint16*) &volt[k];             
; 4464 |                                 for (i = 0; i < 2; i++) {              
; 4465 |                                         *intp = cmdbuff[j];            
; 4466 |                                         buff[j++] = 0xff & *intp;      
; 4467 |                                         *intp += cmdbuff[j] << 8;      
; 4468 |                                         buff[j++] = 0xff & *intp >> 8; 
; 4469 |                                         intp++;                        
; 4473 |                         // order: - o +                                
; 4474 |                         // do the calculations                         
; 4475 |                         conf_data.dac[ch].dslopen =                    
; 4476 |                                         ((double) dacc[0] - (double) da
;     | cc[1])                                                                 
; 4477 |                                                         / (volt[0] - vo
;     | lt[1]);                                                                
; 4478 |                         conf_data.dac[ch].dslopep =                    
; 4479 |                                         ((double) dacc[2] - (double) da
;     | cc[1])                                                                 
; 4480 |                                                         / (volt[2] - vo
;     | lt[1]);                                                                
; 4481 |                         conf_data.dac[ch].dint = (double) dacc[0]      
; 4482 |                                         - volt[0] * conf_data.dac[ch].d
;     | slopen;                                                                
; 4484 |                         dac_setmode(0);                 // restat dac t
;     | o follow load                                                          
; 4485 |                         daccbm = 0;                                    
; 4487 |                         unsaved = 1;                                   
; 4489 |                         DINT;                                          
; 4490 |                         ad7738_setcal();                               
; 4491 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4492 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4493 |                         EINT;                                          
; 4495 |                         bincmdresult = OK_SendResult;                  
; 4496 |                         break;                                         
; 4498 |                 case StartDCRead:                                      
; 4500 |                         if (cmdlen < 8 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= DAC_MAX                                                             
; 4501 |                                         || cmdbuff[3] < 0 || cmdbuff[3]
;     |  > 2) {                                                                
; 4502 |                                 bincmdresult = Error_Invalid;          
; 4503 |                                 break;                                 
; 4506 |                         if (daccbm == 0) {                             
; 4507 |                                 ch = cmdbuff[2];                       
; 4508 |                         } else {                                       
; 4509 |                                 if (ch != cmdbuff[2]) {                
; 4510 |                                         bincmdresult = Error_Invalid;  
; 4511 |                                         break;                         
; 4514 |                         buff[j++] = ch;                                
; 4515 |                         k = cmdbuff[j];                                
; 4516 |                         buff[j++] = k;                                 
; 4518 |                         intp = (Uint16*) &volt[k];                     
; 4519 |                         for (i = 0; i < 2; i++) {                      
; 4520 |                                 *intp = cmdbuff[j];                    
; 4521 |                                 buff[j++] = 0xff & *intp;              
; 4522 |                                 *intp += cmdbuff[j] << 8;              
; 4523 |                                 buff[j++] = 0xff & *intp >> 8;         
; 4524 |                                 intp++;                                
; 4526 |                         if (volt[k] < -10 || volt[k] > 10) {           
; 4527 |                                 bincmdresult = Error_Invalid;          
; 4528 |                                 break;                                 
; 4531 |                         dsum[0] = 0x7fff * (volt[k] + 10.0) / 10.0;    
; 4532 |                         if (dsum[0] <= 0) {                            
; 4533 |                                 dacc[k] = 0;                           
; 4534 |                         } else if (dsum[0] >= 0xffff) {                
; 4535 |                                 dacc[k] = 0xffff;                      
; 4536 |                         } else {                                       
; 4537 |                                 dacc[k] = (Uint16) dsum[0];            
; 4540 |                         dac_setmode(1);                 // stop dac fol
;     | low load                                                               
; 4542 |                         mcbsp_xmit(dacc[k], ch);                       
; 4543 |                         latch_dac();                                   
; 4545 |                         daccbm |= (0x1 << k);                          
; 4547 |                         bincmdresult = OK_SendResult;                  
; 4548 |                         break;                                         
; 4550 |                 case SetSensorCalPa:                                   
; 4552 |                         if (cmdlen < 20) {                             
; 4553 |                                 bincmdresult = Error_Invalid;          
; 4554 |                                 break;                                 
; 4556 |                         k = 2;                                         
; 4557 |                         ch = cmdbuff[k++];              // channel inde
;     | x                                                                      
; 4558 |                         ss = cmdbuff[k++];              // sensor index
; 4559 |                         if (ch >= CHS_MAX || ss >= SENSPCH) {          
; 4560 |                                 bincmdresult = Error_Invalid;          
; 4561 |                                 break;                                 
; 4564 |                         tempint = cmdbuff[k++];         // ssn length (
;     | max 16)                                                                
; 4565 |                         if (tempint >= sizeof(tsensor.ssn)) {          
; 4566 |                                 bincmdresult = Error_Invalid;          
; 4567 |                                 break;                                 
; 4569 |                         for (i = 0; i < tempint; i++) {                
; 4570 |                                 tsensor.ssn[i] = cmdbuff[k++];         
; 4572 |                         tsensor.ssn[i] = '\0';                         
; 4574 |                         tempint = cmdbuff[k++];         // name length
;     | (max 16)                                                               
; 4575 |                         if (tempint >= sizeof(tsensor.slbl)) {         
; 4576 |                                 bincmdresult = Error_Invalid;          
; 4577 |                                 break;                                 
; 4579 |                         for (i = 0; i < tempint; i++) {                
; 4580 |                                 tsensor.slbl[i] = cmdbuff[k++];        
; 4582 |                         tsensor.slbl[i] = '\0';                        
; 4584 |                         tsensor.method = cmdbuff[k++];  // calibration
;     | method                                                                 
; 4586 |                         intp = (Uint16*) &tsensor.date; // date        
; 4587 |                         for (i = 0; i < 2; i++) {                      
; 4588 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4589 |                                 k += 2;                                
; 4590 |                                 intp++;                                
; 4593 |                         intp = (Uint16*) &tsensor.range;        // rang
;     | e                                                                      
; 4594 |                         for (i = 0; i < 2; i++) {                      
; 4595 |                                 *intp = cmdbuff[k] + (cmdbuff[k + 1] <<
;     |  8);                                                                   
; 4596 |                                 k += 2;                                
; 4597 |                                 intp++;                                
; 4599 |                         tsensor.base = tsensor.range;                  
; 4601 |                         tsensor.unit = cmdbuff[k++];    // unit        
; 4602 |                         switch (tsensor.unit) {                        
; 4603 |                         case 0:                                 // lb  
; 4604 |                         case 1:                                 // kg  
; 4605 |                                 tsensor.unit |= UNIT_WT;               
; 4606 |                                 break;                                 
; 4607 |                         case 2:                                 // in  
; 4608 |                         case 3:                                 // cm  
; 4609 |                         case 4:                                 // mm  
; 4610 |                                 tsensor.unit |= UNIT_LT;               
; 4611 |                                 break;                                 
; 4612 |                         case 5:                                 // ps  
; 4613 |                                 tsensor.unit |= UNIT_PR;               
; 4614 |                                 break;                                 
; 4615 |                         case 6:                                 // nm  
; 4616 |                                 tsensor.unit |= UNIT_TQ;               
; 4617 |                                 break;                                 
; 4618 |                         case 7:                                        
; 4619 |                         case 8:                                        
; 4620 |                         case 15:                                       
; 4621 |                                 tsensor.unit |= 0xf0;                  
; 4622 |                                 break;                                 
; 4623 |                         default:                                       
; 4624 |                                 tsensor.unit = UNIT_LB;         // defa
;     | ult to lb                                                              
; 4625 |                                 break;                                 
; 4627 |                         tsensor.ounit = tsensor.unit;                  
; 4628 |                         tsensor.ufactor = 1;                           
; 4630 |                         switch (tsensor.method) {                      
; 4631 |                         case MD_RUN_MVV:                               
; 4633 |                                 intp = (Uint16*) &tsensor.slope[0];
;     |  // ratio                                                              
; 4634 |                                 for (i = 0; i < 2; i++) {              
; 4635 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4636 |                                         k += 2;                        
; 4637 |                                         intp++;                        
; 4639 |                                 if (tsensor.slope[0] == 0) {           
; 4640 |                                         tsensor.slope[0] = 1;
;     |  // default to 1                                                       
; 4642 |                                 tsensor.points = 1;                    
; 4643 |                                 break;                                 
; 4645 |                         case MD_RUN_MAS:                               
; 4647 |                                 tsensor.points = cmdbuff[k++];         
; 4648 |                                 if (tsensor.points > PNT_MAX) {        
; 4649 |                                         tsensor.method = MD_UNCALED;   
; 4650 |                                         break;                         
; 4653 |                                 for (tempint = 0; tempint < tsensor.poi
;     | nts; tempint++) {                                                      
; 4654 |                                         intp = (Uint16*) &tsensor.mass[
;     | tempint];// mass point                                                 
; 4655 |                                         for (i = 0; i < 2; i++) {      
; 4656 |                                                 *intp = cmdbuff[k] + (c
;     | mdbuff[k + 1] << 8);                                                   
; 4657 |                                                 k += 2;                
; 4658 |                                                 intp++;                
; 4661 |                                 break;                                 
; 4663 |                         case MD_RUN_SHT:                               
; 4665 |                                 intp = (Uint16*) &scale;        // shun
;     | t value                                                                
; 4666 |                                 for (i = 0; i < 2; i++) {              
; 4667 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4668 |                                         k += 2;                        
; 4669 |                                         intp++;                        
; 4671 |                                 if (scale == 0) {                      
; 4672 |                                         scale = 1.46;           // defa
;     | ult shunt                                                              
; 4674 |                                 tsensor.points = 1;                    
; 4675 |                                 break;                                 
; 4677 |                         default:                                       
; 4679 |                                 tsensor.method = MD_UNCALED;           
; 4680 |                                 break;                                 
; 4683 |                         if (tsensor.method == MD_UNCALED) {            
; 4684 |                                 bincmdresult = Error_Invalid;          
; 4685 |                                 break;                                 
; 4687 |                         tsensor.tare = 0;                              
; 4688 |                         tsensor.dacgain = 1;                           
; 4689 |                         tsensor.dacoff = 0;                            
; 4690 |                         tsensor.ch = ch;                               
; 4692 |                         for (i = 0; i < cmdlen - 2; i++) {             
; 4693 |                                 buff[j] = cmdbuff[j++];                
; 4695 |                         bincmdresult = OK_SendResult;                  
; 4696 |                         break;                                         
; 4698 |                 case StartSCRead:                                      
; 4700 |                         if (cmdlen < 5) {                              
; 4701 |                                 bincmdresult = Error_Invalid;          
; 4702 |                                 break;                                 
; 4704 |                         k = 2;                                         
; 4705 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4706 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4707 |                                 bincmdresult = Error_Invalid;          
; 4708 |                                 break;                                 
; 4711 |                         lcd_clear();                                   
; 4712 |                         lcd_puts("Sensor Calibration..", 0);           
; 4713 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4714 |                         lcd_puts(buff, 20);                            
; 4715 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4716 |                         lcd_puts(buff, 40);                            
; 4718 |                         switch (tsensor.method) {                      
; 4720 |                         case MD_RUN_MVV:                               
; 4722 |                                 lcd_puts("Reading zero point...", 60); 
; 4724 |                                 dsum[0] = 0;                           
; 4725 |                                 sampcnt = CAL_SAMPLES;                 
; 4726 |                                 while (sampcnt--) {                    
; 4727 |                                         while (0 == ad7738_rawrdy()) { 
; 4728 |                                                 delay_us(1);
;     |          // wait                                                       
; 4731 |                                         cntp = ad7738_getraw();        
; 4732 |                                         dsum[0] += cntp->adc[ch];      
; 4734 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4735 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4737 |                                 bincmdresult = OK_SendResult;          
; 4738 |                                 break;                                 
; 4740 |                         case MD_RUN_MAS:                               
; 4742 |                                 pt = cmdbuff[k++];                     
; 4743 |                                 intp = (Uint16*) &scale;               
; 4744 |                                 for (i = 0; i < 2; i++) {              
; 4745 |                                         *intp = cmdbuff[k] + (cmdbuff[k
;     |  + 1] << 8);                                                           
; 4746 |                                         k += 2;                        
; 4747 |                                         intp++;                        
; 4749 |                                 if (pt >= tsensor.points || tsensor.mas
;     | s[pt] != scale) {                                                      
; 4750 |                                         bincmdresult = Error_Invalid;  
; 4751 |                                         break;                         
; 4753 |                                 sprintf(buff, "Reading mass point %i...
;     | ", pt + 1);                                                            
; 4754 |                                 lcd_puts(buff, 60);                    
; 4756 |                                 dsum[0] = 0;                           
; 4757 |                                 sampcnt = CAL_SAMPLES;                 
; 4758 |                                 while (sampcnt--) {                    
; 4759 |                                         while (0 == ad7738_rawrdy()) { 
; 4760 |                                                 delay_us(1);
;     |          // wait                                                       
; 4763 |                                         cntp = ad7738_getraw();        
; 4764 |                                         dsum[0] += cntp->adc[ch];      
; 4766 |                                 tsensor.adc[pt] = dsum[0] / CAL_SAMPLES
;     | ;                                                                      
; 4768 |                                 if (pt == tsensor.points - 1)   // last
;     |  point                                                                 
; 4770 |                                         // now calculate the slope and
;     | intercept for each point                                               
; 4771 |                                         for (k = 0; k < tsensor.points
;     | - 1; k++) {                                                            
; 4772 |                                                 tsensor.slope[k] = (tse
;     | nsor.mass[k + 1]                                                       
; 4773 |                                                                 - tsens
;     | or.mass[k])                                                            
; 4774 |                                                                 / (tsen
;     | sor.adc[k + 1] - tsensor.adc[k])                                       
; 4775 |                                                                 / conf_
;     | data.ch[ch].bslope;                                                    
; 4776 |                                                 tsensor.intercept[k] =
;     | tsensor.mass[k]                                                        
; 4777 |                                                                 - tsens
;     | or.slope[k] * conf_data.ch[ch].bslope                                  
; 4778 | 
;     |          * tsensor.adc[k];                                             
; 4782 |                                 bincmdresult = OK_SendResult;          
; 4783 |                                 break;                                 
; 4785 |                         case MD_RUN_SHT:                               
; 4787 |                                 lcd_puts("Reading zero point...", 60); 
; 4789 |                                 for (k = 0; k < 2; k++) {              
; 4790 |                                         if (k > 0)              // seco
;     | nd roundf for shunt switch closed                                      
; 4792 |                                                 shunt_switch(1);
;     |                  // close shunt switch                                 
; 4793 |                                                 for (i = 0; i < 50; i++
;     | ) {                                                                    
; 4794 |                                                         delay_us(10000)
;     | ;                // 10ms, total 500ms                                  
; 4796 |                                                 DINT;                  
; 4797 |                                                 maf_rst();             
; 4798 |                                                 EINT;                  
; 4799 |                                                 delay_us(10000);
;     |                  // 10ms                                               
; 4802 |                                         dsum[k] = 0;                   
; 4803 |                                         sampcnt = CAL_SAMPLES;         
; 4804 |                                         while (sampcnt--) {            
; 4805 |                                                 while (0 == ad7738_rawr
;     | dy()) {                                                                
; 4806 |                                                         delay_us(1);
;     |                  // wait                                               
; 4809 |                                                 cntp = ad7738_getraw();
; 4810 |                                                 dsum[k] += cntp->adc[ch
;     | ];                                                                     
; 4814 |                                 shunt_switch(0);
;     |  // open shunt switch                                                  
; 4815 |                                 DINT;                                  
; 4816 |                                 maf_rst();                             
; 4817 |                                 EINT;                                  
; 4819 |                                 tsensor.slope[0] = scale * CAL_SAMPLES 
; 4820 |                                                 / (conf_data.ch[ch].bsl
;     | ope * (dsum[1] - dsum[0]));                                            
; 4821 |                                 tsensor.intercept[0] = -conf_data.ch[ch
;     | ].bslope                                                               
; 4822 |                                                 * tsensor.slope[0] * ds
;     | um[0] / CAL_SAMPLES;                                                   
; 4824 |                                 bincmdresult = OK_SendResult;          
; 4825 |                                 break;                                 
; 4827 |                         default:                                       
; 4829 |                                 bincmdresult = Error_Invalid;          
; 4830 |                                 break;                                 
; 4832 |                         lcd_clear();                                   
; 4833 |                         update_units();                                
; 4835 |                         if (bincmdresult != OK_SendResult) {           
; 4836 |                                 break;                                 
; 4838 |                         for (i = 0; i < cmdlen; i++) {                 
; 4839 |                                 buff[i] = cmdbuff[i];                  
; 4841 |                         j = cmdlen;                                    
; 4842 |                         break;                                         
; 4844 |                 case StartSCShuntRd:                                   
; 4846 |                         if (cmdlen < 5) {                              
; 4847 |                                 bincmdresult = Error_Invalid;          
; 4848 |                                 break;                                 
; 4850 |                         k = 2;                                         
; 4851 |                         if (ch != cmdbuff[k++] || ss != cmdbuff[k++]   
; 4852 |                                         || tsensor.method != cmdbuff[k+
;     | +]) {                                                                  
; 4853 |                                 bincmdresult = Error_Invalid;          
; 4854 |                                 break;                                 
; 4857 |                         lcd_clear();                                   
; 4858 |                         lcd_puts("Sensor Calibration..", 0);           
; 4859 |                         sprintf(buff, "Channel %i sensor %i", ch + 1, s
;     | s + 1);                                                                
; 4860 |                         lcd_puts(buff, 20);                            
; 4861 |                         sprintf(buff, "Method: %s", METHOD[tsensor.meth
;     | od]);                                                                  
; 4862 |                         lcd_puts(buff, 40);                            
; 4863 |                         lcd_puts("Reading shunt value...", 60);        
; 4865 |                         for (k = 0; k < 2; k++) {                      
; 4866 |                                 if (k > 0)                      // seco
;     | nd roundf for shunt switch closed                                      
; 4868 |                                         shunt_switch(1);
;     |          // close shunt switch                                         
; 4869 |                                         for (i = 0; i < 50; i++) {     
; 4870 |                                                 delay_us(10000);
;     |          // 10ms, total 500ms                                          
; 4872 |                                         DINT;                          
; 4873 |                                         maf_rst();                     
; 4874 |                                         EINT;                          
; 4875 |                                         delay_us(10000);
;     |          // 10ms                                                       
; 4878 |                                 dsum[k] = 0;                           
; 4879 |                                 sampcnt = CAL_SAMPLES;                 
; 4880 |                                 while (sampcnt--) {                    
; 4881 |                                         while (0 == ad7738_rawrdy()) { 
; 4882 |                                                 delay_us(1);
;     |          // wait                                                       
; 4885 |                                         cntp = ad7738_getraw();        
; 4886 |                                         dsum[k] += cntp->adc[ch];      
; 4888 |                                 dsum[k] /= CAL_SAMPLES;                
; 4890 |                                 pt = 0;                                
; 4891 |                                 if (tsensor.points > 2) {              
; 4892 |                                         while (pt < PNT_MAX - 3 && dsum
;     | [0] > tsensor.adc[pt + 1]) {                                           
; 4893 |                                                 pt++;                  
; 4896 |                                 volt[k] = conf_data.ch[ch].bslope * tse
;     | nsor.slope[pt]                                                         
; 4897 |                                                 * dsum[k] + tsensor.int
;     | ercept[pt];                                                            
; 4900 |                         shunt_switch(0);                        // open
;     |  shunt switch                                                          
; 4901 |                         DINT;                                          
; 4902 |                         maf_rst();                                     
; 4903 |                         EINT;                                          
; 4905 |                         tsensor.shunt = volt[1] - volt[0];             
; 4907 |                         tsensor.tagid = tagid(ch);              // read
;     |  and store TAGID                                                       
; 4909 |                         DINT;                                          
; 4910 |                         memcpy((void *) &conf_data.sensor[ss], (void *)
;     |  &tsensor,                                                             
; 4911 |                                         sizeof(sconf_t));              
; 4913 |                         conf_data.ch[ch].ci = ss;// set the just calibr
;     | ated sensor as the current                                             
; 4915 |                         ad7738_setcal();                               
; 4916 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 4917 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 4918 |                         EINT;                                          
; 4920 |                         unsaved = 1;                                   
; 4922 |                         lcd_clear();                                   
; 4923 |                         update_units();                                
; 4925 |                         for (i = 0; i < cmdlen; i++) {                 
; 4926 |                                 buff[i] = cmdbuff[i];                  
; 4928 |                         j = cmdlen;                                    
; 4929 |                         bincmdresult = OK_SendResult;                  
; 4930 |                         break;                                         
; 4932 |                 case SetSensorName:                                    
; 4934 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH                                                             
; 4935 |                                         || cmdlen < cmdbuff[3] + 4) {  
; 4936 |                                 bincmdresult = Error_Invalid;          
; 4937 |                                 break;                                 
; 4939 |                         ss = cmdbuff[2];                               
; 4940 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4942 |                         slen = cmdbuff[3] < sizeof(tsensor.slbl) ?     
; 4943 |                                         cmdbuff[3] : sizeof(tsensor.slb
;     | l) - 1;                                                                
; 4944 |                         for (i = 0; i < slen; i++) {                   
; 4945 |                                 conf_data.sensor[ss].slbl[i] = cmdbuff[
;     | 4 + i];                                                                
; 4947 |                         conf_data.sensor[ss].slbl[i] = '\0';           
; 4948 |                         unsaved = 1;                                   
; 4950 |                         // sensor name/label                           
; 4951 |                         slen = strlen((const char *) conf_data.sensor[s
;     | s].slbl);                                                              
; 4952 |                         buff[j++] = slen;                       // leng
;     | th                                                                     
; 4953 |                         for (i = 0; i < slen; i++) {                   
; 4954 |                                 buff[j++] = conf_data.sensor[ss].slbl[i
;     | ];       // string                                                     
; 4957 |                         bincmdresult = OK_SendResult;                  
; 4958 |                         break;                                         
; 4960 |                 case SetSensorOUnit:                                   
; 4962 |                         if (cmdlen < 4 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 4963 |                                 bincmdresult = Error_Invalid;          
; 4964 |                                 break;                                 
; 4967 |                         ss = cmdbuff[2];                               
; 4968 |                         pt = cmdbuff[3];                               
; 4970 |                         if (pt != UNIT_PC                              
; 4971 |                                         && (0xf0 & pt) != (0xf0 & conf_
;     | data.sensor[ss].unit)) {                                               
; 4972 |                                 bincmdresult = Error_Invalid;          
; 4973 |                                 break;                                 
; 4976 |                         conf_data.sensor[ss].ounit = pt;               
; 4977 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 4978 |                         buff[j++] = conf_data.sensor[ss].ounit;        
; 4980 |                         if (pt == UNIT_PC) {                           
; 4981 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 4982 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 4983 |                         } else if (conf_data.sensor[ss].ounit          
; 4984 |                                         == conf_data.sensor[ss].unit) {
; 4985 |                                 conf_data.sensor[ss].ufactor = 1.0;    
; 4986 |                         } else {                                       
; 4987 |                                 switch (conf_data.sensor[ss].unit) {//
;     | switch on calibrated unit group                                        
; 4988 |                                 case UNIT_LB:
;     |  // pond                                                               
; 4990 |                                         if (pt == UNIT_KG) {           
; 4991 |                                                 conf_data.sensor[ss].uf
;     | actor = LB_TO_KG;                                                      
; 4993 |                                         break;                         
; 4995 |                                 case UNIT_KG:
;     |  // kg                                                                 
; 4997 |                                         if (pt == UNIT_LB) {           
; 4998 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / LB_TO_KG;                                                
; 5000 |                                         break;                         
; 5002 |                                 case UNIT_IN:
;     |  // inch                                                               
; 5004 |                                         switch (pt) {                  
; 5005 |                                         case UNIT_CM:                  
; 5006 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM / 10.0;                                               
; 5007 |                                                 break;                 
; 5008 |                                         case UNIT_MM:                  
; 5009 |                                                 conf_data.sensor[ss].uf
;     | actor = IN_TO_MM;                                                      
; 5010 |                                                 break;                 
; 5012 |                                         break;                         
; 5014 |                                 case UNIT_CM:
;     |  // cm                                                                 
; 5016 |                                         switch (pt) {                  
; 5017 |                                         case UNIT_IN:                  
; 5018 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0 / IN_TO_MM;                                               
; 5019 |                                                 break;                 
; 5020 |                                         case UNIT_MM:                  
; 5021 |                                                 conf_data.sensor[ss].uf
;     | actor = 10.0;                                                          
; 5022 |                                                 break;                 
; 5024 |                                         break;                         
; 5026 |                                 case UNIT_MM:
;     |  // mm                                                                 
; 5028 |                                         switch (pt) {                  
; 5029 |                                         case UNIT_IN:                  
; 5030 |                                                 conf_data.sensor[ss].uf
;     | actor = 1.0 / IN_TO_MM;                                                
; 5031 |                                                 break;                 
; 5032 |                                         case UNIT_CM:                  
; 5033 |                                                 conf_data.sensor[ss].uf
;     | actor = 0.1;                                                           
; 5034 |                                                 break;                 
; 5036 |                                         break;                         
; 5038 |                                 default:                               
; 5040 |                                         conf_data.sensor[ss].ufactor =
;     | 1.0;                                                                   
; 5041 |                                         break;                         
; 5045 |                         unsaved = 1;                                   
; 5047 |                         for (ch = 0; ch < CHS_MAX; ch++) {             
; 5048 |                                 if (ss == conf_data.ch[ch].ci) {// chan
;     | ged is for the current sensor                                          
; 5049 |                                         update_units();                
; 5050 |                                         DINT;                          
; 5051 |                                         ad7738_setcal();               
; 5052 |                                         ad7738_resetpeak(BITMAP[ch]);
;     |  // reset peak                                                         
; 5053 |                                         ad7738_resetvall(BITMAP[ch]);
;     |  // reset valley                                                       
; 5054 |                                         EINT;                          
; 5058 |                         bincmdresult = OK_SendResult;                  
; 5059 |                         break;                                         
; 5061 |                 case SetSensorBase:                                    
; 5063 |                         if (cmdlen < 7 || cmdbuff[2] < 0 || cmdbuff[2]
;     | >= SENSPCH) {                                                          
; 5064 |                                 bincmdresult = Error_Invalid;          
; 5065 |                                 break;                                 
; 5067 |                         ss = cmdbuff[2];                               
; 5068 |                         buff[j++] = ss;                         // sens
;     | or number                                                              
; 5070 |                         intp = (Uint16*) &conf_data.sensor[ss].base;   
; 5071 |                         for (i = 0; i < 2; i++) {                      
; 5072 |                                 *intp = cmdbuff[j];                    
; 5073 |                                 buff[j++] = 0xff & *intp;              
; 5074 |                                 *intp += cmdbuff[j] << 8;              
; 5075 |                                 buff[j++] = 0xff & *intp >> 8;         
; 5076 |                                 intp++;                                
; 5078 |                         unsaved = 1;                                   
; 5080 |                         if ( UNIT_PC == conf_data.sensor[ss].ounit) {  
; 5081 |                                 // output unit is percent              
; 5082 |                                 conf_data.sensor[ss].ufactor = 100.0   
; 5083 |                                                 / conf_data.sensor[ss].
;     | base;                                                                  
; 5085 |                                 for (ch = 0; ch < CHS_MAX; ch++) {     
; 5086 |                                         if (ss == conf_data.ch[ch].ci)
;     | {                                                                      
; 5087 |                                                 // changed is for the c
;     | urrent sensor                                                          
; 5088 |                                                 DINT;                  
; 5089 |                                                 ad7738_setcal();       
; 5090 |                                                 ad7738_resetpeak(BITMAP
;     | [ch]);           // reset peak                                         
; 5091 |                                                 ad7738_resetvall(BITMAP
;     | [ch]);           // reset valley                                       
; 5092 |                                                 EINT;                  
; 5097 |                         bincmdresult = OK_SendResult;                  
; 5098 |                         break;                                         
; 5100 |                 case SetQEPChannels:                                   
; 5102 |                         if (cmdlen < 6) {                              
; 5103 |                                 bincmdresult = Error_Invalid;          
; 5104 |                                 break;                                 
; 5107 |                         for (k = 0; k < ENC_MAX; k++) {                
; 5108 |                                 intp = (Uint16*) &conf_data.cntperin[k]
;     | ;                                                                      
; 5109 |                                 for (i = 0; i < 2; i++) {              
; 5110 |                                         *intp = cmdbuff[j];            
; 5111 |                                         buff[j++] = 0xff & *intp;      
; 5112 |                                         *intp += cmdbuff[j] << 8;      
; 5113 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5114 |                                         intp++;                        
; 5118 |                         conf_data.velfilter = cmdbuff[j];              
; 5119 |                         buff[j++] = 0xff & conf_data.velfilter;        
; 5120 |                         conf_data.velfilter += cmdbuff[j] << 8;        
; 5121 |                         buff[j++] = 0xff & conf_data.velfilter >> 8;   
; 5123 |                         unsaved = 1;                                   
; 5125 |                         DINT;                                          
; 5126 |                         ad7738_setcal();                               
; 5127 |                         velf_rst();                                    
; 5128 |                         EINT;                                          
; 5130 |                         bincmdresult = OK_SendResult;                  
; 5131 |                         break;                                         
; 5133 |                         //case SetEnCntperin: // not needed            
; 5134 |                         //break;                                       
; 5136 |                 case SetCurSensor:                                     
; 5138 |                         if (cmdlen < 4||                               
; 5139 |                         cmdbuff[2] < 0 || cmdbuff[2] >= CHS_MAX ||     
; 5140 |                         cmdbuff[3] < 0 || cmdbuff[3] >= SENSPCH) {     
; 5141 |                                 bincmdresult = Error_Invalid;          
; 5142 |                                 break;                                 
; 5145 |                         ch = cmdbuff[2];                               
; 5146 |                         ss = cmdbuff[3];                               
; 5148 |                         if (autoid[ch]) {                              
; 5149 |                                 bincmdresult = Error_Exe;              
; 5150 |                                 break;                                 
; 5153 |                         DINT;                                          
; 5154 |                         conf_data.ch[ch].ci = ss;                      
; 5155 |                         ad7738_setcal();                               
; 5157 |                         ad7738_resetpeak(BITMAP[ch]);           // rese
;     | t peak                                                                 
; 5158 |                         ad7738_resetvall(BITMAP[ch]);           // rese
;     | t valley                                                               
; 5159 |                         EINT;                                          
; 5161 |                         update_units();                                
; 5162 |                         unsaved = 1;                                   
; 5164 |                         buff[j++] = ch;                                
; 5165 |                         buff[j++] = ss;                                
; 5166 |                         bincmdresult = OK_SendResult;                  
; 5167 |                         break;                                         
; 5169 |                 case SetAFilterSize:                                   
; 5171 |                         if (cmdlen < 4) {                              
; 5172 |                                 bincmdresult = Error_Invalid;          
; 5173 |                                 break;                                 
; 5176 |                         // filter length                               
; 5177 |                         temp16 = cmdbuff[2] + (cmdbuff[3] << 8);       
; 5178 |                         if (temp16 > MAF_MAX) {                        
; 5179 |                                 bincmdresult = Error_Invalid;          
; 5180 |                                 break;                                 
; 5183 |                         // filter diff window                          
; 5184 |                         intp = (Uint16*) &tempft;                      
; 5185 |                         for (i = 0; i < 2; i++) {                      
; 5186 |                                 *intp = cmdbuff[4 + 2 * i] + (cmdbuff[5
;     |  + 2 * i] << 8);                                                       
; 5187 |                                 intp++;                                
; 5190 |                         DINT;                                          
; 5191 |                         conf_data.filter = temp16;                     
; 5192 |                         conf_data.diffwin = tempft;                    
; 5193 |                         maf_rst();                                     
; 5194 |                         EINT;                                          
; 5196 |                         unsaved = 1;                                   
; 5198 |                         buff[j++] = 0xff & temp16;                     
; 5199 |                         buff[j++] = 0xff & temp16 >> 8;                
; 5201 |                         intp = (Uint16 *) &conf_data.diffwin;          
; 5202 |                         buff[j++] = 0xff & intp[0];                    
; 5203 |                         buff[j++] = 0xff & intp[0] >> 8;               
; 5204 |                         buff[j++] = 0xff & intp[1];                    
; 5205 |                         buff[j++] = 0xff & intp[1] >> 8;               
; 5207 |                         bincmdresult = OK_SendResult;                  
; 5208 |                         break;                                         
; 5210 |                 case SetAutoId:                                        
; 5212 |                         if (cmdlen < 3) {                              
; 5213 |                                 bincmdresult = Error_Invalid;          
; 5214 |                                 break;                                 
; 5217 |                         conf_data.tagiden = cmdbuff[2];                
; 5218 |                         if (!conf_data.tagiden) {                      
; 5219 |                                 for (i = 0; i < CHS_MAX; i++) {        
; 5220 |                                         tagwasthere[i] = 0;            
; 5221 |                                         autoid[i] = 0;                 
; 5223 |                                 update_units();                        
; 5225 |                         unsaved = 1;                                   
; 5227 |                         buff[j] = cmdbuff[j++];                        
; 5228 |                         bincmdresult = OK_SendResult;                  
; 5229 |                         break;                                         
; 5231 |                 case SetDisplayLine:                                   
; 5233 |                         if (cmdlen < 14) {                             
; 5234 |                                 bincmdresult = Error_Invalid;          
; 5235 |                                 break;                                 
; 5238 |                         if (cmdbuff[2] > 6 || cmdbuff[5] > 6 || cmdbuff
;     | [8] > 6                                                                
; 5239 |                                         || cmdbuff[11] > 6 || cmdbuff[3
;     | ] >= CHS_MAX                                                           
; 5240 |                                         || cmdbuff[6] >= CHS_MAX || cmd
;     | buff[9] >= CHS_MAX                                                     
; 5241 |                                         || cmdbuff[12] >= CHS_MAX || cm
;     | dbuff[4] > 5                                                           
; 5242 |                                         || cmdbuff[7] > 5 || cmdbuff[10
;     | ] > 5                                                                  
; 5243 |                                         || cmdbuff[13] > 5) {          
; 5244 |                                 bincmdresult = Error_Invalid;          
; 5245 |                                 break;                                 
; 5248 |                         for (i = 0; i < VFD_MAX; i++) {                
; 5249 |                                 conf_data.vfd[i].what = cmdbuff[j];    
; 5250 |                                 buff[j++] = conf_data.vfd[i].what;     
; 5251 |                                 conf_data.vfd[i].ch = cmdbuff[j];      
; 5252 |                                 buff[j++] = conf_data.vfd[i].ch;       
; 5253 |                                 conf_data.vfd[i].adec = cmdbuff[j];    
; 5254 |                                 buff[j++] = conf_data.vfd[i].adec;     
; 5256 |                         unsaved = 1;                                   
; 5258 |                         lcd_clear();                                   
; 5259 |                         update_units();                                
; 5260 |                         bincmdresult = OK_SendResult;                  
; 5261 |                         break;                                         
; 5263 |                 case SetDACCh:                                         
; 5265 |                         if (cmdlen < 42) {                             
; 5266 |                                 bincmdresult = Error_Invalid;          
; 5267 |                                 break;                                 
; 5270 |                         if ((cmdbuff[2] > 4 && cmdbuff[2] != 7)        
; 5271 |                                         || (cmdbuff[12] > 4 && cmdbuff[
;     | 12] != 7)                                                              
; 5272 |                                         || (cmdbuff[22] > 4 && cmdbuff[
;     | 22] != 7)                                                              
; 5273 |                                         || (cmdbuff[32] > 4 && cmdbuff[
;     | 32] != 7)                                                              
; 5274 |                                         || cmdbuff[3] >= CHS_MAX || cmd
;     | buff[13] >= CHS_MAX                                                    
; 5275 |                                         || cmdbuff[23] >= CHS_MAX || cm
;     | dbuff[33] >= CHS_MAX) {                                                
; 5276 |                                 bincmdresult = Error_Invalid;          
; 5277 |                                 break;                                 
; 5280 |                         for (i = 0; i < DAC_MAX; i++) {                
; 5281 |                                 conf_data.dac[i].what = cmdbuff[j];    
; 5282 |                                 buff[j++] = conf_data.dac[i].what;     
; 5283 |                                 conf_data.dac[i].ch = cmdbuff[j];      
; 5284 |                                 buff[j++] = conf_data.dac[i].ch;       
; 5286 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5287 |                                 //{                                    
; 5288 |                                 intp = (Uint16*) &conf_data.dac[i].gain
;     | ;                                                                      
; 5289 |                                 //}                                    
; 5290 |                                 //else                                 
; 5291 |                                 //{                                    
; 5292 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacgain;                          
; 5293 |                                 //}                                    
; 5294 |                                 for (k = 0; k < 2; k++) {              
; 5295 |                                         *intp = cmdbuff[j];            
; 5296 |                                         buff[j++] = 0xff & *intp;      
; 5297 |                                         *intp += cmdbuff[j] << 8;      
; 5298 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5299 |                                         intp++;                        
; 5302 |                                 //if( VFD_POSI == conf_data.dac[i].what
;     |  || VFD_VELO == conf_data.dac[i].what )                                
; 5303 |                                 //{                                    
; 5304 |                                 intp = (Uint16*) &conf_data.dac[i].offs
;     | et;                                                                    
; 5305 |                                 //}                                    
; 5306 |                                 //else                                 
; 5307 |                                 //{                                    
; 5308 |                                 //  intp = (Uint16*)&conf_data.sensor[c
;     | onf_data.ch[conf_data.dac[i].ch].ci].dacoff;                           
; 5309 |                                 //}                                    
; 5310 |                                 for (k = 0; k < 2; k++) {              
; 5311 |                                         *intp = cmdbuff[j];            
; 5312 |                                         buff[j++] = 0xff & *intp;      
; 5313 |                                         *intp += cmdbuff[j] << 8;      
; 5314 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5315 |                                         intp++;                        
; 5318 |                         unsaved = 1;                                   
; 5320 |                         DINT;                                          
; 5321 |                         ad7738_setcal();                               
; 5322 |                         EINT;                                          
; 5323 |                         bincmdresult = OK_SendResult;                  
; 5324 |                         break;                                         
; 5326 |                 case SetLIMITCh:                                       
; 5328 |                         if (cmdlen < 46) {                             
; 5329 |                                 bincmdresult = Error_Invalid;          
; 5330 |                                 break;                                 
; 5333 |                         if (cmdbuff[2]                                 
; 5334 |                                         > 4|| cmdbuff[13] > 4 || cmdbuf
;     | f[24] > 4 || cmdbuff[35] > 4 ||                                        
; 5335 |                                         cmdbuff[3] >= CHS_MAX || cmdbuf
;     | f[14] >= CHS_MAX || cmdbuff[25] >= CHS_MAX || cmdbuff[36] >= CHS_MAX) {
; 5336 |                                 bincmdresult = Error_Invalid;          
; 5337 |                                 break;                                 
; 5340 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5341 |                                 conf_data.lim[i].what = cmdbuff[j];    
; 5342 |                                 buff[j++] = conf_data.lim[i].what;     
; 5343 |                                 conf_data.lim[i].ch = cmdbuff[j];      
; 5344 |                                 buff[j++] = conf_data.lim[i].ch;       
; 5345 |                                 conf_data.lim[i].limit = cmdbuff[j] & 0
;     | xfe;     // block the status bit (0)                                   
; 5346 |                                 buff[j++] = conf_data.lim[i].limit;    
; 5348 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | ts;                                                                    
; 5349 |                                 for (k = 0; k < 2; k++) {              
; 5350 |                                         *intp = cmdbuff[j];            
; 5351 |                                         buff[j++] = 0xff & *intp;      
; 5352 |                                         *intp += cmdbuff[j] << 8;      
; 5353 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5354 |                                         intp++;                        
; 5356 |                                 intp = (Uint16*) &conf_data.lim[i].limi
;     | tr;                                                                    
; 5357 |                                 for (k = 0; k < 2; k++) {              
; 5358 |                                         *intp = cmdbuff[j];            
; 5359 |                                         buff[j++] = 0xff & *intp;      
; 5360 |                                         *intp += cmdbuff[j] << 8;      
; 5361 |                                         buff[j++] = 0xff & *intp >> 8; 
; 5362 |                                         intp++;                        
; 5365 |                         unsaved = 1;                                   
; 5367 |                         DINT;                                          
; 5368 |                         ad7738_setcal();                               
; 5369 |                         EINT;                                          
; 5371 |                         bincmdresult = OK_SendResult;                  
; 5372 |                         break;                                         
; 5374 |                 case Tare:                                             
; 5376 |                         if (cmdlen < 3) {                              
; 5377 |                                 //bincmdresult = Error_Invalid;        
; 5378 |                                 ad7738_resettare(0xff);         // tare
;     |  all 4 channels                                                        
; 5379 |                                 ad7738_resetpeak(0xff);                
; 5380 |                                 ad7738_resetvall(0xff);                
; 5381 |                                 unsaved = 1;                           
; 5383 |                                 buff[j++] = 0xff;                      
; 5384 |                                 bincmdresult = OK_SendResult;          
; 5385 |                                 break;                                 
; 5388 |                         ad7738_resettare(0xff & cmdbuff[2]);           
; 5389 |                         ad7738_resetpeak(0xff & cmdbuff[2]);           
; 5390 |                         ad7738_resetvall(0xff & cmdbuff[2]);           
; 5391 |                         unsaved = 1;                                   
; 5393 |                         buff[j++] = 0xff & cmdbuff[2];                 
; 5394 |                         bincmdresult = OK_SendResult;                  
; 5395 |                         break;                                         
; 5397 |                 case ResetPkVly:                                       
; 5399 |                         if (cmdlen < 3) {                              
; 5400 |                                 bincmdresult = Error_Invalid;          
; 5401 |                                 break;                                 
; 5404 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5405 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5406 |                         unsaved = 1;                                   
; 5408 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5409 |                         bincmdresult = OK_SendResult;                  
; 5410 |                         break;                                         
; 5412 |                 case ResetPk:                                          
; 5414 |                         if (cmdlen < 3) {                              
; 5415 |                                 bincmdresult = Error_Invalid;          
; 5416 |                                 break;                                 
; 5419 |                         ad7738_resetpeak(0x0f & cmdbuff[2]);           
; 5420 |                         unsaved = 1;                                   
; 5422 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5423 |                         bincmdresult = OK_SendResult;                  
; 5424 |                         break;                                         
; 5426 |                 case ResetVly:                                         
; 5428 |                         if (cmdlen < 3) {                              
; 5429 |                                 bincmdresult = Error_Invalid;          
; 5430 |                                 break;                                 
; 5433 |                         ad7738_resetvall(0x0f & cmdbuff[2]);           
; 5434 |                         unsaved = 1;                                   
; 5436 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5437 |                         bincmdresult = OK_SendResult;                  
; 5438 |                         break;                                         
; 5440 |                 case ResetLIMIT:                                       
; 5442 |                         if (cmdlen < 3) {                              
; 5443 |                                 bincmdresult = Error_Invalid;          
; 5444 |                                 break;                                 
; 5447 |                         k = 0x01;                                      
; 5448 |                         for (i = 0; i < LIM_MAX; i++) {                
; 5449 |                                 if (k & cmdbuff[2]) {                  
; 5450 |                                         ad7738_resetlimit(i);          
; 5452 |                                 k <<= 1;                               
; 5454 |                         unsaved = 1;                                   
; 5456 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5457 |                         bincmdresult = OK_SendResult;                  
; 5458 |                         break;                                         
; 5460 |                 case ResetPosition:                                    
; 5462 |                         if (cmdlen < 3) {                              
; 5463 |                                 bincmdresult = Error_Invalid;          
; 5464 |                                 break;                                 
; 5467 |                         ad7738_resettare(0x30 & cmdbuff[2]);           
; 5468 |                         ad7738_resetpeak(0x30 & cmdbuff[2]);           
; 5469 |                         ad7738_resetvall(0x30 & cmdbuff[2]);           
; 5470 |                         unsaved = 1;                                   
; 5472 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5473 |                         bincmdresult = OK_SendResult;                  
; 5474 |                         break;                                         
; 5476 |                 case SetShuntSwitch:                                   
; 5478 |                         if (cmdlen < 3) {                              
; 5479 |                                 bincmdresult = Error_Invalid;          
; 5480 |                                 break;                                 
; 5483 |                         shunt_switch(cmdbuff[2]);                      
; 5484 |                         unsaved = 1;                                   
; 5486 |                         buff[j++] = 0x0f & cmdbuff[2];                 
; 5487 |                         bincmdresult = OK_SendResult;                  
; 5488 |                         break;                                         
; 5490 |                 case SetDirectVolt:                                    
; 5492 |                         if (cmdlen < 7) {                              
; 5493 |                                 bincmdresult = Error_Invalid;          
; 5494 |                                 break;                                 
; 5497 |                         ss = cmdbuff[j];                               
; 5498 |                         buff[j++] = ss;                                
; 5500 |                         intp = (Uint16*) &volt[0];                     
; 5501 |                         for (k = 0; k < 2; k++) {                      
; 5502 |                                 *intp = cmdbuff[j];                    
; 5503 |                                 buff[j++] = 0xff & *intp;              
; 5504 |                                 *intp += cmdbuff[j] << 8;              
; 5505 |                                 buff[j++] = 0xff & (*intp >> 8);       
; 5506 |                                 intp++;                                
; 5509 |                         if (ss >= DAC_MAX || VFD_VOLT != conf_data.dac[
;     | ss].what                                                               
; 5510 |                                         || volt[0] < -10 || volt[0] > 1
;     | 0) {                                                                   
; 5511 |                                 bincmdresult = Error_Invalid;          
; 5512 |                                 break;                                 
; 5515 |                         if (volt[0] < 0) {                             
; 5516 |                                 dsum[0] = conf_data.dac[ss].dslopen * v
;     | olt[0]                                                                 
; 5517 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5518 |                         } else {                                       
; 5519 |                                 dsum[0] = conf_data.dac[ss].dslopep * v
;     | olt[0]                                                                 
; 5520 |                                                 + conf_data.dac[ss].din
;     | t;                                                                     
; 5523 |                         if (dsum[0] <= 0) {                            
; 5524 |                                 dacc[0] = 0;                           
; 5525 |                         } else if (dsum[0] >= 0xffff) {                
; 5526 |                                 dacc[0] = 0xffff;                      
; 5527 |                         } else {                                       
; 5528 |                                 dacc[0] = (Uint16) dsum[0];            
; 5531 |                         mcbsp_xmit(dacc[0], ss);                       
; 5532 |                         latch_dac();                                   
; 5534 |                         // for debug, send the count back at the end of
;     |  the message                                                           
; 5535 |                         buff[j++] = 0xff & dacc[0];                    
; 5536 |                         buff[j++] = 0xff & (dacc[0] >> 8);             
; 5538 |                         bincmdresult = OK_SendResult;                  
; 5539 |                         break;                                         
; 5541 |                 case GetAllFlash:                                      
; 5543 |                         break;                                         
; 5545 |                 case SetAllFlash:                                      
; 5547 |                         break;                                         
; 5549 |                 case FlashMemWrite:                                    
; 5551 |                         bincmdresult = OK_SendResult;                  
; 5552 |                         if (unsaved) {                                 
; 5553 |                                 // flash writing                       
; 5554 |                                 lcd_clear();                           
; 5555 |                                 lcd_puts("Flash writing...", 0);       
; 5557 |                                 for (i = 0; i < 50; i++) {             
; 5558 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5561 |                                 DINT;                                  
; 5562 |                                 flash_ret = conf_write();              
; 5563 |                                 EINT;                                  
; 5565 |                                 if ( STATUS_SUCCESS == flash_ret) {    
; 5566 |                                         lcd_puts("Done", 16);          
; 5567 |                                         unsaved = 0;                   
; 5568 |                                 } else {                               
; 5569 |                                         lcd_puts("Fail", 16);          
; 5570 |                                         bincmdresult = Error_Exe;      
; 5573 |                                 for (i = 0; i < 50; i++) {             
; 5574 |                                         delay_us(1000);
;     |  // delay for display update                                           
; 5576 |                                 lcd_clear();                           
; 5577 |                                 update_units();                        
; 5579 |                         break;                                         
; 5581 |                 case FlashMemDefault:                                  
; 5583 |                         conf_default();                                
; 5585 |                         // flash writing                               
; 5586 |                         lcd_clear();                                   
; 5587 |                         lcd_puts("Flash reset and     writing ...", 0);
; 5589 |                         for (i = 0; i < 50; i++) {                     
; 5590 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5593 |                         DINT;                                          
; 5594 |                         flash_ret = conf_write();                      
; 5595 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5596 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5597 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5598 |                         EINT;                                          
; 5600 |                         if ( STATUS_SUCCESS == flash_ret) {            
; 5601 |                                 lcd_puts("Done", 31);                  
; 5602 |                                 unsaved = 0;                           
; 5603 |                                 bincmdresult = OK_SendResult;          
; 5604 |                         } else {                                       
; 5605 |                                 lcd_puts("Fail", 31);                  
; 5606 |                                 bincmdresult = Error_Exe;              
; 5608 |                         for (i = 0; i < 50; i++) {                     
; 5609 |                                 delay_us(1000);                 // dela
;     | y for display update                                                   
; 5611 |                         lcd_clear();                                   
; 5612 |                         update_units();                                
; 5614 |                         break;                                         
; 5616 |                 case FlashMemRead:                                     
; 5618 |                         // flash reading                               
; 5619 |                         conf_read();                                   
; 5621 |                         DINT;                                          
; 5622 |                         ad7738_setcal();                        // set
;     | calibration parameters                                                 
; 5623 |                         ad7738_resetpeak( BM_ALL);              // rese
;     | t peak                                                                 
; 5624 |                         ad7738_resetvall( BM_ALL);              // rese
;     | t valley                                                               
; 5625 |                         EINT;                                          
; 5627 |                         unsaved = 0;                                   
; 5628 |                         update_units();                                
; 5629 |                         bincmdresult = OK_SendResult;                  
; 5630 |                         break;                                         
; 5632 |                 case StartStream:                                      
;----------------------------------------------------------------------
        MOV       *-SP[49],#0           ; [CPU_] |590| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *-SP[60],XAR4         ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#76              ; [CPU_] 
        ADDB      XAR7,#2               ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#2                ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#64              ; [CPU_] 
        ADDB      ACC,#4                ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        ADDB      XAR6,#40              ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#60              ; [CPU_] 
        ADDB      ACC,#16               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        ADDB      XAR7,#38              ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        ADDB      ACC,#96               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] 
        MOVL      ACC,XAR4              ; [CPU_] 
        MOVL      XAR0,#54              ; [CPU_] 
        ADDB      ACC,#40               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVL      XAR4,#_METHOD         ; [CPU_U] 
        MOVL      XAR0,#50              ; [CPU_] 
        MOVL      *+FP[AR0],XAR6        ; [CPU_] 
        MOVL      XAR0,#58              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#62              ; [CPU_] 
        MOVL      XAR4,#_LPV            ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#68              ; [CPU_] 
        MOVL      XAR4,#__ctypes_       ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#70              ; [CPU_] 
        MOVL      XAR4,#_UNITS          ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        MOVL      XAR0,#78              ; [CPU_] 
        MOVL      XAR4,#_BITMAP         ; [CPU_U] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
        B         $C$L648,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L78:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5634,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5634 | if (cmdlen < 6) {                                                      
; 5635 |         bincmdresult = Error_Invalid;                                  
; 5636 |         break;                                                         
;----------------------------------------------------------------------
        CMPB      AL,#6                 ; [CPU_] |5634| 
        B         $C$L323,LO            ; [CPU_] |5634| 
        ; branchcc occurs ; [] |5634| 
        MOVL      XAR7,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5639,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5639 | ds_dn = cmdbuff[2];                                                    
; 5640 | ds_dec = cmdbuff[4];                                                   
;----------------------------------------------------------------------
        MOVL      XAR0,#66              ; [CPU_] |5639| 
        MOVL      ACC,XAR7              ; [CPU_] |5639| 
	.dwpsn	file "../Source/prod.c",line 5641,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5641 | ds_dec <<= 8;                                                          
;----------------------------------------------------------------------
        ADDB      XAR4,#3               ; [CPU_] |5641| 
	.dwpsn	file "../Source/prod.c",line 5639,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |5639| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5639| 
	.dwpsn	file "../Source/prod.c",line 5641,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5642 | ds_dec += cmdbuff[3];                                                  
;----------------------------------------------------------------------
        MOVL      XAR0,#64              ; [CPU_] |5641| 
	.dwpsn	file "../Source/prod.c",line 5639,column 5,is_stmt,isa 0
        MOV       AL,*+XAR7[2]          ; [CPU_] |5639| 
        MOV       *-SP[46],AL           ; [CPU_] |5639| 
	.dwpsn	file "../Source/prod.c",line 5641,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |5641| 
        ADDB      ACC,#4                ; [CPU_] |5641| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5641| 
	.dwpsn	file "../Source/prod.c",line 5643,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5643 | ds_bm = cmdbuff[5];                                                    
;----------------------------------------------------------------------
        MOVL      XAR0,#44              ; [CPU_] |5643| 
	.dwpsn	file "../Source/prod.c",line 5641,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[4] << #8   ; [CPU_] |5641| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5641| 
        MOV       *-SP[45],AL           ; [CPU_] |5641| 
	.dwpsn	file "../Source/prod.c",line 5643,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5645 | tempint = 0;                                                           
; 5646 | k = 0x01;                                                              
; 5647 | for (i = 0; i < 8; i++) {                                              
; 5648 |         if (ds_bm & k) {                                               
; 5649 |                 tempint++;                                             
; 5651 |         k <<= 1;                                                       
; 5654 | //                              if (ds_dn < 1 || (tempint > 4 && ds_dn
;     | > 30)                                                                  
; 5655 | //                                      || (tempint <= 4 && ds_dn > 60)
;     |  || ds_dec < 1                                                         
; 5656 | //                                              || ds_dec > (30000l / d
;     | s_dn) || ds_bm == 0) {                                                 
; 5657 | //                                      ds_en = 0;                     
; 5658 | //                                      bincmdresult = Error_Invalid;  
; 5659 | //                                      break;                         
; 5660 | //                              }                                      
; 5662 | ds_en = 1;                                                             
; 5663 | ds_stop = 0;                                                           
; 5664 | ds_sn = 0;                                                             
; 5666 | //                              prod_init();
;     |  // reset the buffer                                                   
; 5667 | //                              ad7738_setlimitchgd();                 
; 5669 | for (i = 0; i < 4; i++) {                                              
;----------------------------------------------------------------------
        MOV       AL,*+XAR4[2]          ; [CPU_] |5643| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5643| 
        MOV       *-SP[44],AL           ; [CPU_] |5643| 
        ADDB      XAR7,#2               ; [CPU_] 
        ADDB      XAR4,#2               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5670,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5670 | buff[j] = cmdbuff[j];                                                  
;----------------------------------------------------------------------
        RPT       #3
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |5670| 
	.dwpsn	file "../Source/prod.c",line 5662,column 5,is_stmt,isa 0
        MOV       *-SP[48],#1           ; [CPU_] |5662| 
	.dwpsn	file "../Source/prod.c",line 5663,column 5,is_stmt,isa 0
        MOV       *-SP[47],#0           ; [CPU_] |5663| 
	.dwpsn	file "../Source/prod.c",line 5664,column 5,is_stmt,isa 0
        MOV       *-SP[43],#0           ; [CPU_] |5664| 
	.dwpsn	file "../Source/prod.c",line 5671,column 6,is_stmt,isa 0
;----------------------------------------------------------------------
; 5671 | j++;                                                                   
; 5673 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       *-SP[55],#6           ; [CPU_] |5671| 
	.dwpsn	file "../Source/prod.c",line 5674,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5674 | break;                                                                 
; 5676 | case StopStream:                                                       
; 5678 | ds_stop = 1;                                                           
; 5679 | bincmdresult = OK_SendResult;                                          
; 5680 | break;                                                                 
; 5682 | case SwitchToASCII:                     // switch back to ASCII mode   
; 5684 | ds_en = 0;                                                             
;----------------------------------------------------------------------
        B         $C$L765,UNC           ; [CPU_] |5674| 
        ; branch occurs ; [] |5674| 
$C$L79:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4846,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4846| 
        B         $C$L323,LO            ; [CPU_] |4846| 
        ; branchcc occurs ; [] |4846| 
	.dwpsn	file "../Source/prod.c",line 4851,column 5,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |4851| 
        MOVL      ACC,XAR4              ; [CPU_] |4851| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4851| 
        MOVZ      AR6,*-SP[52]          ; [CPU_] |4851| 
        MOVL      XAR0,#66              ; [CPU_] |4851| 
        ADDB      ACC,#2                ; [CPU_] |4851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4851| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4851| 
        CMPL      ACC,XAR6              ; [CPU_] |4851| 
        B         $C$L323,NEQ           ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |4851| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4851| 
        CMPL      ACC,XAR6              ; [CPU_] |4851| 
        B         $C$L323,NEQ           ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4851| 
        MOVL      XAR0,#64              ; [CPU_] |4851| 
        MOVL      ACC,XAR5              ; [CPU_] |4851| 
        ADDB      ACC,#4                ; [CPU_] |4851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4851| 
        MOVB      XAR0,#36              ; [CPU_] |4851| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4851| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4851| 
        B         $C$L323,NEQ           ; [CPU_] |4851| 
        ; branchcc occurs ; [] |4851| 
	.dwpsn	file "../Source/prod.c",line 4857,column 5,is_stmt,isa 0
$C$DW$574	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$574, DW_AT_low_pc(0x00)
	.dwattr $C$DW$574, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$574, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4857| 
        ; call occurs [#_lcd_clear] ; [] |4857| 
	.dwpsn	file "../Source/prod.c",line 4858,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4858| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4858| 
$C$DW$575	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$575, DW_AT_low_pc(0x00)
	.dwattr $C$DW$575, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$575, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4858| 
        ; call occurs [#_lcd_puts] ; [] |4858| 
	.dwpsn	file "../Source/prod.c",line 4859,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4859| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4859| 
        MOVL      XAR0,#44              ; [CPU_] |4859| 
        ADD       AL,*-SP[52]           ; [CPU_] |4859| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4859| 
        MOV       *-SP[3],AL            ; [CPU_] |4859| 
        MOVB      AL,#1                 ; [CPU_] |4859| 
        ADD       AL,*-SP[51]           ; [CPU_] |4859| 
        MOV       *-SP[4],AL            ; [CPU_] |4859| 
        MOVL      XAR3,*+FP[AR0]        ; [CPU_] |4859| 
        MOVL      XAR4,XAR3             ; [CPU_] |4859| 
$C$DW$576	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$576, DW_AT_low_pc(0x00)
	.dwattr $C$DW$576, DW_AT_name("_sprintf")
	.dwattr $C$DW$576, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4859| 
        ; call occurs [#_sprintf] ; [] |4859| 
	.dwpsn	file "../Source/prod.c",line 4860,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4860| 
        MOVL      XAR4,XAR3             ; [CPU_] |4860| 
$C$DW$577	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$577, DW_AT_low_pc(0x00)
	.dwattr $C$DW$577, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$577, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4860| 
        ; call occurs [#_lcd_puts] ; [] |4860| 
	.dwpsn	file "../Source/prod.c",line 4861,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4861| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4861| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4861| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4861| 
        MOVL      XAR0,#58              ; [CPU_] |4861| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4861| 
        MOVB      XAR1,#36              ; [CPU_] |4861| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4861| 
        ADDL      ACC,XAR6              ; [CPU_] |4861| 
        MOVL      XAR4,ACC              ; [CPU_] |4861| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4861| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4861| 
        MOVL      XAR4,XAR3             ; [CPU_] |4861| 
$C$DW$578	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$578, DW_AT_low_pc(0x00)
	.dwattr $C$DW$578, DW_AT_name("_sprintf")
	.dwattr $C$DW$578, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4861| 
        ; call occurs [#_sprintf] ; [] |4861| 
	.dwpsn	file "../Source/prod.c",line 4862,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4862| 
        MOVL      XAR4,XAR3             ; [CPU_] |4862| 
$C$DW$579	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$579, DW_AT_low_pc(0x00)
	.dwattr $C$DW$579, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$579, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4862| 
        ; call occurs [#_lcd_puts] ; [] |4862| 
	.dwpsn	file "../Source/prod.c",line 4863,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4863| 
        MOVL      XAR4,#$C$FSL76        ; [CPU_U] |4863| 
$C$DW$580	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$580, DW_AT_low_pc(0x00)
	.dwattr $C$DW$580, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$580, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4863| 
        ; call occurs [#_lcd_puts] ; [] |4863| 
        MOVL      XAR0,#78              ; [CPU_] |4863| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4863| 
        MOVZ      AR0,*-SP[52]          ; [CPU_] |4863| 
        MOV       T,*-SP[52]            ; [CPU_] 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
        SUBB      XAR4,#26              ; [CPU_U] 
        MOV       T,*-SP[51]            ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#52               ; [CPU_] 
        MOVL      *-SP[60],ACC          ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4891,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |4891| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#34              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4865,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4865| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[54],AL           ; [CPU_] |4865| 
$C$L80:    
	.dwpsn	file "../Source/prod.c",line 4866,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4866| 
        B         $C$L82,LEQ            ; [CPU_] |4866| 
        ; branchcc occurs ; [] |4866| 
	.dwpsn	file "../Source/prod.c",line 4868,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4868| 
$C$DW$581	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$581, DW_AT_low_pc(0x00)
	.dwattr $C$DW$581, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$581, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4868| 
        ; call occurs [#_shunt_switch] ; [] |4868| 
        MOV       *-SP[42],#49          ; [CPU_] 
$C$L81:    
	.dwpsn	file "../Source/prod.c",line 4870,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4870| 
$C$DW$582	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$582, DW_AT_low_pc(0x00)
	.dwattr $C$DW$582, DW_AT_name("_delay_us")
	.dwattr $C$DW$582, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4870| 
        ; call occurs [#_delay_us] ; [] |4870| 
        MOVZ      AR6,*-SP[42]          ; [CPU_] |4870| 
	.dwpsn	file "../Source/prod.c",line 4869,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4869| 
        MOVZ      AR0,AR6               ; [CPU_] |4869| 
        MOV       *-SP[42],AR6          ; [CPU_] |4869| 
        CMP       AR0,#-1               ; [CPU_] |4869| 
        B         $C$L81,NEQ            ; [CPU_] |4869| 
        ; branchcc occurs ; [] |4869| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4873,column 7,is_stmt,isa 0
$C$DW$583	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$583, DW_AT_low_pc(0x00)
	.dwattr $C$DW$583, DW_AT_name("_maf_rst")
	.dwattr $C$DW$583, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4873| 
        ; call occurs [#_maf_rst] ; [] |4873| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4875,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4875| 
        SPM       #0                    ; [CPU_] 
$C$DW$584	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$584, DW_AT_low_pc(0x00)
	.dwattr $C$DW$584, DW_AT_name("_delay_us")
	.dwattr $C$DW$584, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4875| 
        ; call occurs [#_delay_us] ; [] |4875| 
$C$L82:    
	.dwpsn	file "../Source/prod.c",line 4878,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |4878| 
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4879| 
	.dwpsn	file "../Source/prod.c",line 4878,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4878| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4878| 
	.dwpsn	file "../Source/prod.c",line 4880,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4880| 
	.dwpsn	file "../Source/prod.c",line 4879,column 6,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |4879| 
	.dwpsn	file "../Source/prod.c",line 4880,column 6,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |4880| 
        MOVB      ACC,#0                ; [CPU_] |4880| 
        SUBB      ACC,#1                ; [CPU_] |4880| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4880| 
        B         $C$L85,EQ             ; [CPU_] |4880| 
        ; branchcc occurs ; [] |4880| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4881,column 14,is_stmt,isa 0
        B         $C$L84,UNC            ; [CPU_] |4881| 
        ; branch occurs ; [] |4881| 
$C$L83:    
	.dwpsn	file "../Source/prod.c",line 4882,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4882| 
$C$DW$585	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$585, DW_AT_low_pc(0x00)
	.dwattr $C$DW$585, DW_AT_name("_delay_us")
	.dwattr $C$DW$585, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4882| 
        ; call occurs [#_delay_us] ; [] |4882| 
$C$L84:    
	.dwpsn	file "../Source/prod.c",line 4881,column 14,is_stmt,isa 0
$C$DW$586	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$586, DW_AT_low_pc(0x00)
	.dwattr $C$DW$586, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$586, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4881| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4881| 
        CMPB      AL,#0                 ; [CPU_] |4881| 
        B         $C$L83,EQ             ; [CPU_] |4881| 
        ; branchcc occurs ; [] |4881| 
	.dwpsn	file "../Source/prod.c",line 4885,column 7,is_stmt,isa 0
$C$DW$587	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$587, DW_AT_low_pc(0x00)
	.dwattr $C$DW$587, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$587, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4885| 
        ; call occurs [#_ad7738_getraw] ; [] |4885| 
	.dwpsn	file "../Source/prod.c",line 4886,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |4886| 
        ADDL      XAR4,ACC              ; [CPU_] |4886| 
        MOVL      XAR0,#34              ; [CPU_] |4886| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4886| 
        MOVL      XAR0,#34              ; [CPU_] |4886| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4886| 
        ASR64     ACC:P,16              ; [CPU_] |4886| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4886| 
        MOVL      XAR0,#34              ; [CPU_] |4886| 
        ASR64     ACC:P,16              ; [CPU_] |4886| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4886| 
        MOVL      XAR0,#34              ; [CPU_] |4886| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4886| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4886| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4886| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4886| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4886| 
	.dwpsn	file "../Source/prod.c",line 4880,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4880| 
        SUBL      *-SP[40],ACC          ; [CPU_] |4880| 
        MOVB      ACC,#0                ; [CPU_] |4880| 
        SUBB      ACC,#1                ; [CPU_] |4880| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4880| 
        B         $C$L84,NEQ            ; [CPU_] |4880| 
        ; branchcc occurs ; [] |4880| 
$C$L85:    
	.dwpsn	file "../Source/prod.c",line 4888,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4888| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4888| 
        MOV       *-SP[2],#0            ; [CPU_] |4888| 
        MOV       *-SP[1],#0            ; [CPU_] |4888| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |4888| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |4888| 
$C$DW$588	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$588, DW_AT_low_pc(0x00)
	.dwattr $C$DW$588, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$588, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4888| 
        ; call occurs [#LL$$DIV] ; [] |4888| 
	.dwpsn	file "../Source/prod.c",line 4891,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4891| 
	.dwpsn	file "../Source/prod.c",line 4888,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4888| 
	.dwpsn	file "../Source/prod.c",line 4890,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |4890| 
	.dwpsn	file "../Source/prod.c",line 4888,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4888| 
	.dwpsn	file "../Source/prod.c",line 4891,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |4891| 
        CMPB      AL,#2                 ; [CPU_] |4891| 
        B         $C$L88,LEQ            ; [CPU_] |4891| 
        ; branchcc occurs ; [] |4891| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4892,column 7,is_stmt,isa 0
        B         $C$L87,UNC            ; [CPU_] |4892| 
        ; branch occurs ; [] |4892| 
$C$L86:    
	.dwpsn	file "../Source/prod.c",line 4893,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |4893| 
$C$L87:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4892,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |4892| 
        B         $C$L88,HIS            ; [CPU_] |4892| 
        ; branchcc occurs ; [] |4892| 
        MOVB      AL,#1                 ; [CPU_] |4892| 
        ADD       AL,AR4                ; [CPU_] |4892| 
        MOVZ      AR5,AL                ; [CPU_] |4892| 
        MOV       ACC,AR5 << 1          ; [CPU_] |4892| 
        ADDL      ACC,XAR3              ; [CPU_] |4892| 
        MOVL      XAR6,ACC              ; [CPU_] |4892| 
        MOVB      XAR0,#72              ; [CPU_] |4892| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |4892| 
        MOVL      XAR0,#32              ; [CPU_] |4892| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4892| 
        MOVL      XAR0,#32              ; [CPU_] |4892| 
        ASR64     ACC:P,16              ; [CPU_] |4892| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4892| 
        MOVL      XAR0,#32              ; [CPU_] |4892| 
        ASR64     ACC:P,16              ; [CPU_] |4892| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4892| 
        MOVL      *-SP[4],P             ; [CPU_] |4892| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4892| 
        MOVL      P,*-SP[34]            ; [CPU_] |4892| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |4892| 
$C$DW$589	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$589, DW_AT_low_pc(0x00)
	.dwattr $C$DW$589, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$589, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4892| 
        ; call occurs [#LL$$CMP] ; [] |4892| 
        CMPB      AL,#0                 ; [CPU_] |4892| 
        B         $C$L86,GT             ; [CPU_] |4892| 
        ; branchcc occurs ; [] |4892| 
$C$L88:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4896,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |4896| 
        ADDL      ACC,XAR3              ; [CPU_] |4896| 
        MOVL      XAR4,ACC              ; [CPU_] |4896| 
        MOVB      XAR0,#96              ; [CPU_] |4896| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4896| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4896| 
        MOVL      XAR0,#38              ; [CPU_] |4896| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4896| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4896| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4896| 
$C$DW$590	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$590, DW_AT_low_pc(0x00)
	.dwattr $C$DW$590, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$590, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4896| 
        ; call occurs [#FS$$MPY] ; [] |4896| 
        MOVL      XAR0,#30              ; [CPU_] |4896| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4896| 
        MOVL      P,*XAR1++             ; [CPU_] |4896| 
        MOVL      ACC,*XAR1++           ; [CPU_] |4896| 
$C$DW$591	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$591, DW_AT_low_pc(0x00)
	.dwattr $C$DW$591, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$591, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4896| 
        ; call occurs [#LL$$TOFS] ; [] |4896| 
        MOVL      XAR0,#30              ; [CPU_] |4896| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4896| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4896| 
$C$DW$592	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$592, DW_AT_low_pc(0x00)
	.dwattr $C$DW$592, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$592, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4896| 
        ; call occurs [#FS$$MPY] ; [] |4896| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |4896| 
        MOVB      XAR0,#118             ; [CPU_] |4896| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |4896| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4896| 
$C$DW$593	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$593, DW_AT_low_pc(0x00)
	.dwattr $C$DW$593, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$593, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4896| 
        ; call occurs [#FS$$ADD] ; [] |4896| 
        MOVL      XAR0,#36              ; [CPU_] |4896| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4896| 
        MOVL      XAR0,#36              ; [CPU_] |4896| 
        MOVL      *XAR4++,ACC           ; [CPU_] |4896| 
	.dwpsn	file "../Source/prod.c",line 4865,column 17,is_stmt,isa 0
        INC       *-SP[54]              ; [CPU_] |4865| 
	.dwpsn	file "../Source/prod.c",line 4896,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4896| 
        MOV       AL,*-SP[54]           ; [CPU_] |4896| 
	.dwpsn	file "../Source/prod.c",line 4865,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |4865| 
        B         $C$L80,LT             ; [CPU_] |4865| 
        ; branchcc occurs ; [] |4865| 
	.dwpsn	file "../Source/prod.c",line 4900,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4900| 
$C$DW$594	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$594, DW_AT_low_pc(0x00)
	.dwattr $C$DW$594, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$594, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4900| 
        ; call occurs [#_shunt_switch] ; [] |4900| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4902,column 5,is_stmt,isa 0
$C$DW$595	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$595, DW_AT_low_pc(0x00)
	.dwattr $C$DW$595, DW_AT_name("_maf_rst")
	.dwattr $C$DW$595, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4902| 
        ; call occurs [#_maf_rst] ; [] |4902| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4905,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[26]          ; [CPU_] |4905| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4905| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4905| 
$C$DW$596	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$596, DW_AT_low_pc(0x00)
	.dwattr $C$DW$596, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$596, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4905| 
        ; call occurs [#FS$$SUB] ; [] |4905| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4905| 
        MOVL      XAR0,#36              ; [CPU_] |4905| 
        MOVL      *+FP[AR0],XAR1        ; [CPU_] |4905| 
        MOVB      XAR0,#140             ; [CPU_] |4905| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4905| 
        MOV       AL,*-SP[52]           ; [CPU_] |4905| 
	.dwpsn	file "../Source/prod.c",line 4907,column 5,is_stmt,isa 0
$C$DW$597	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$597, DW_AT_low_pc(0x00)
	.dwattr $C$DW$597, DW_AT_name("_tagid")
	.dwattr $C$DW$597, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |4907| 
        ; call occurs [#_tagid] ; [] |4907| 
        MOVL      XAR4,XAR1             ; [CPU_] |4907| 
        ADDB      XAR4,#32              ; [CPU_] |4907| 
        MOVL      *+XAR4[0],P           ; [CPU_] |4907| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |4907| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 4910,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4910| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] |4910| 
        RPT       #151
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |4910| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4910| 
        MOV       AL,*-SP[51]           ; [CPU_] |4910| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4913,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |4913| 
	.dwpsn	file "../Source/prod.c",line 4915,column 5,is_stmt,isa 0
$C$DW$598	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$598, DW_AT_low_pc(0x00)
	.dwattr $C$DW$598, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$598, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4915| 
        ; call occurs [#_ad7738_setcal] ; [] |4915| 
        MOVZ      AR1,*-SP[41]          ; [CPU_] |4915| 
	.dwpsn	file "../Source/prod.c",line 4916,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |4916| 
$C$DW$599	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$599, DW_AT_low_pc(0x00)
	.dwattr $C$DW$599, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$599, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4916| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4916| 
        MOV       AL,AR1                ; [CPU_] |4916| 
	.dwpsn	file "../Source/prod.c",line 4917,column 5,is_stmt,isa 0
$C$DW$600	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$600, DW_AT_low_pc(0x00)
	.dwattr $C$DW$600, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$600, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4917| 
        ; call occurs [#_ad7738_resetvall] ; [] |4917| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4922,column 5,is_stmt,isa 0
$C$DW$601	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$601, DW_AT_low_pc(0x00)
	.dwattr $C$DW$601, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$601, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4922| 
        ; call occurs [#_lcd_clear] ; [] |4922| 
	.dwpsn	file "../Source/prod.c",line 4923,column 5,is_stmt,isa 0
$C$DW$602	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$602, DW_AT_low_pc(0x00)
	.dwattr $C$DW$602, DW_AT_name("_update_units")
	.dwattr $C$DW$602, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4923| 
        ; call occurs [#_update_units] ; [] |4923| 
        MOVL      XAR0,#42              ; [CPU_] |4923| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4923| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4925,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4925| 
$C$L89:    
	.dwpsn	file "../Source/prod.c",line 4926,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4926| 
	.dwpsn	file "../Source/prod.c",line 4925,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4925| 
	.dwpsn	file "../Source/prod.c",line 4926,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4926| 
	.dwpsn	file "../Source/prod.c",line 4925,column 17,is_stmt,isa 0
        MOV       AL,*-SP[53]           ; [CPU_] |4925| 
	.dwpsn	file "../Source/prod.c",line 4926,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4926| 
	.dwpsn	file "../Source/prod.c",line 4925,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4925| 
        B         $C$L89,HI             ; [CPU_] |4925| 
        ; branchcc occurs ; [] |4925| 
	.dwpsn	file "../Source/prod.c",line 4928,column 5,is_stmt,isa 0
        MOV       *-SP[55],AL           ; [CPU_] |4928| 
	.dwpsn	file "../Source/prod.c",line 4930,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |4930| 
        ; branch occurs ; [] |4930| 
$C$L90:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4700,column 5,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |4700| 
        B         $C$L323,LO            ; [CPU_] |4700| 
        ; branchcc occurs ; [] |4700| 
	.dwpsn	file "../Source/prod.c",line 4705,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |4705| 
        MOVL      XAR0,#66              ; [CPU_] |4705| 
        MOVZ      AR6,*-SP[52]          ; [CPU_] |4705| 
        ADDB      ACC,#2                ; [CPU_] |4705| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4705| 
        MOVU      ACC,*+XAR4[2]         ; [CPU_] |4705| 
        CMPL      ACC,XAR6              ; [CPU_] |4705| 
        B         $C$L323,NEQ           ; [CPU_] |4705| 
        ; branchcc occurs ; [] |4705| 
        MOVZ      AR6,*-SP[51]          ; [CPU_] |4705| 
        MOVU      ACC,*+XAR4[3]         ; [CPU_] |4705| 
        CMPL      ACC,XAR6              ; [CPU_] |4705| 
        B         $C$L323,NEQ           ; [CPU_] |4705| 
        ; branchcc occurs ; [] |4705| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] 
        MOVL      XAR0,#64              ; [CPU_] |4705| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4705| 
        MOVL      ACC,XAR5              ; [CPU_] |4705| 
        ADDB      ACC,#4                ; [CPU_] |4705| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4705| 
        MOVB      XAR0,#36              ; [CPU_] |4705| 
        MOV       AL,*+XAR5[4]          ; [CPU_] |4705| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4705| 
        B         $C$L323,NEQ           ; [CPU_] |4705| 
        ; branchcc occurs ; [] |4705| 
	.dwpsn	file "../Source/prod.c",line 4711,column 5,is_stmt,isa 0
$C$DW$603	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$603, DW_AT_low_pc(0x00)
	.dwattr $C$DW$603, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$603, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4711| 
        ; call occurs [#_lcd_clear] ; [] |4711| 
	.dwpsn	file "../Source/prod.c",line 4712,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4712| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |4712| 
$C$DW$604	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$604, DW_AT_low_pc(0x00)
	.dwattr $C$DW$604, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$604, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4712| 
        ; call occurs [#_lcd_puts] ; [] |4712| 
	.dwpsn	file "../Source/prod.c",line 4713,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4713| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |4713| 
        MOVL      XAR0,#44              ; [CPU_] |4713| 
        ADD       AL,*-SP[52]           ; [CPU_] |4713| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4713| 
        MOV       *-SP[3],AL            ; [CPU_] |4713| 
        MOVB      AL,#1                 ; [CPU_] |4713| 
        ADD       AL,*-SP[51]           ; [CPU_] |4713| 
        MOV       *-SP[4],AL            ; [CPU_] |4713| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4713| 
        MOVL      XAR4,XAR1             ; [CPU_] |4713| 
$C$DW$605	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$605, DW_AT_low_pc(0x00)
	.dwattr $C$DW$605, DW_AT_name("_sprintf")
	.dwattr $C$DW$605, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4713| 
        ; call occurs [#_sprintf] ; [] |4713| 
	.dwpsn	file "../Source/prod.c",line 4714,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4714| 
	.dwpsn	file "../Source/prod.c",line 4713,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4713| 
	.dwpsn	file "../Source/prod.c",line 4714,column 5,is_stmt,isa 0
$C$DW$606	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$606, DW_AT_low_pc(0x00)
	.dwattr $C$DW$606, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$606, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4714| 
        ; call occurs [#_lcd_puts] ; [] |4714| 
	.dwpsn	file "../Source/prod.c",line 4715,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4715| 
        MOVL      XAR4,#$C$FSL75        ; [CPU_U] |4715| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4715| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4715| 
        MOVL      XAR0,#58              ; [CPU_] |4715| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4715| 
        MOVB      XAR1,#36              ; [CPU_] |4715| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR1] << 1  ; [CPU_] |4715| 
        ADDL      ACC,XAR6              ; [CPU_] |4715| 
        MOVL      XAR4,ACC              ; [CPU_] |4715| 
        MOVL      XAR0,#44              ; [CPU_] |4715| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4715| 
        MOVL      *-SP[4],ACC           ; [CPU_] |4715| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4715| 
$C$DW$607	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$607, DW_AT_low_pc(0x00)
	.dwattr $C$DW$607, DW_AT_name("_sprintf")
	.dwattr $C$DW$607, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4715| 
        ; call occurs [#_sprintf] ; [] |4715| 
        MOVL      XAR0,#44              ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4716,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4716| 
	.dwpsn	file "../Source/prod.c",line 4715,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4715| 
	.dwpsn	file "../Source/prod.c",line 4716,column 5,is_stmt,isa 0
$C$DW$608	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$608, DW_AT_low_pc(0x00)
	.dwattr $C$DW$608, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$608, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4716| 
        ; call occurs [#_lcd_puts] ; [] |4716| 
	.dwpsn	file "../Source/prod.c",line 4718,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |4718| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4718| 
        MOVB      XAR1,#36              ; [CPU_] |4718| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |4718| 
        CMPB      AL,#1                 ; [CPU_] |4718| 
        B         $C$L91,EQ             ; [CPU_] |4718| 
        ; branchcc occurs ; [] |4718| 
        CMPB      AL,#2                 ; [CPU_] |4718| 
        B         $C$L104,EQ            ; [CPU_] |4718| 
        ; branchcc occurs ; [] |4718| 
        CMPB      AL,#3                 ; [CPU_] |4718| 
        B         $C$L95,EQ             ; [CPU_] |4718| 
        ; branchcc occurs ; [] |4718| 
        B         $C$L111,UNC           ; [CPU_] |4718| 
        ; branch occurs ; [] |4718| 
$C$L91:    
	.dwpsn	file "../Source/prod.c",line 4722,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4722| 
        MOVB      AL,#60                ; [CPU_] |4722| 
$C$DW$609	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$609, DW_AT_low_pc(0x00)
	.dwattr $C$DW$609, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$609, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4722| 
        ; call occurs [#_lcd_puts] ; [] |4722| 
	.dwpsn	file "../Source/prod.c",line 4724,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4725| 
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4724,column 6,is_stmt,isa 0
        MOVL      *-SP[34],ACC          ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4725,column 6,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |4725| 
        MOV       T,*-SP[52]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4724,column 6,is_stmt,isa 0
        MOV       *-SP[32],#0           ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4726| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        SUBL      *-SP[40],ACC          ; [CPU_] |4726| 
	.dwpsn	file "../Source/prod.c",line 4724,column 6,is_stmt,isa 0
        MOV       *-SP[31],#0           ; [CPU_] |4724| 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4726| 
        SUBB      ACC,#1                ; [CPU_] |4726| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4726| 
        MOVB      XAR6,#1,EQ            ; [CPU_] |4726| 
        MOVB      AL,#10                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
        B         $C$L94,NEQ            ; [CPU_] |4726| 
        ; branchcc occurs ; [] |4726| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4727,column 14,is_stmt,isa 0
        B         $C$L93,UNC            ; [CPU_] |4727| 
        ; branch occurs ; [] |4727| 
$C$L92:    
	.dwpsn	file "../Source/prod.c",line 4728,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4728| 
$C$DW$610	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$610, DW_AT_low_pc(0x00)
	.dwattr $C$DW$610, DW_AT_name("_delay_us")
	.dwattr $C$DW$610, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4728| 
        ; call occurs [#_delay_us] ; [] |4728| 
$C$L93:    
	.dwpsn	file "../Source/prod.c",line 4727,column 14,is_stmt,isa 0
$C$DW$611	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$611, DW_AT_low_pc(0x00)
	.dwattr $C$DW$611, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$611, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4727| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4727| 
        CMPB      AL,#0                 ; [CPU_] |4727| 
        B         $C$L92,EQ             ; [CPU_] |4727| 
        ; branchcc occurs ; [] |4727| 
	.dwpsn	file "../Source/prod.c",line 4731,column 7,is_stmt,isa 0
$C$DW$612	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$612, DW_AT_low_pc(0x00)
	.dwattr $C$DW$612, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$612, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4731| 
        ; call occurs [#_ad7738_getraw] ; [] |4731| 
	.dwpsn	file "../Source/prod.c",line 4732,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4732| 
        ADDL      XAR4,ACC              ; [CPU_] |4732| 
        MOVL      XAR0,#28              ; [CPU_] |4732| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4732| 
        MOVL      XAR0,#28              ; [CPU_] |4732| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4732| 
        ASR64     ACC:P,16              ; [CPU_] |4732| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4732| 
        MOVL      XAR0,#28              ; [CPU_] |4732| 
        ASR64     ACC:P,16              ; [CPU_] |4732| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4732| 
        MOVL      XAR0,#28              ; [CPU_] |4732| 
        ADDUL     P,*-SP[34]            ; [CPU_] |4732| 
        ADDCL     ACC,*-SP[32]          ; [CPU_] |4732| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4732| 
        MOVL      *-SP[34],P            ; [CPU_] |4732| 
        MOVL      *-SP[32],ACC          ; [CPU_] |4732| 
	.dwpsn	file "../Source/prod.c",line 4726,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4726| 
        SUBL      *-SP[40],ACC          ; [CPU_] |4726| 
        MOVB      ACC,#0                ; [CPU_] |4726| 
        SUBB      ACC,#1                ; [CPU_] |4726| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4726| 
        B         $C$L93,NEQ            ; [CPU_] |4726| 
        ; branchcc occurs ; [] |4726| 
$C$L94:    
	.dwpsn	file "../Source/prod.c",line 4734,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4734| 
	.dwpsn	file "../Source/prod.c",line 4738,column 6,is_stmt,isa 0
        B         $C$L101,UNC           ; [CPU_] |4738| 
        ; branch occurs ; [] |4738| 
$C$L95:    
	.dwpsn	file "../Source/prod.c",line 4787,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL77        ; [CPU_U] |4787| 
        MOVB      AL,#60                ; [CPU_] |4787| 
$C$DW$613	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$613, DW_AT_low_pc(0x00)
	.dwattr $C$DW$613, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$613, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4787| 
        ; call occurs [#_lcd_puts] ; [] |4787| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[52]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR4,#34              ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#44               ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4789,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4789| 
        MOV       *-SP[54],AL           ; [CPU_] |4789| 
$C$L96:    
	.dwpsn	file "../Source/prod.c",line 4790,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4790| 
        B         $C$L98,LEQ            ; [CPU_] |4790| 
        ; branchcc occurs ; [] |4790| 
	.dwpsn	file "../Source/prod.c",line 4792,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4792| 
$C$DW$614	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$614, DW_AT_low_pc(0x00)
	.dwattr $C$DW$614, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$614, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4792| 
        ; call occurs [#_shunt_switch] ; [] |4792| 
        MOV       *-SP[41],#49          ; [CPU_] 
$C$L97:    
	.dwpsn	file "../Source/prod.c",line 4794,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4794| 
$C$DW$615	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$615, DW_AT_low_pc(0x00)
	.dwattr $C$DW$615, DW_AT_name("_delay_us")
	.dwattr $C$DW$615, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4794| 
        ; call occurs [#_delay_us] ; [] |4794| 
        MOVZ      AR6,*-SP[41]          ; [CPU_] |4794| 
	.dwpsn	file "../Source/prod.c",line 4793,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |4793| 
        MOVZ      AR0,AR6               ; [CPU_] |4793| 
        MOV       *-SP[41],AR6          ; [CPU_] |4793| 
        CMP       AR0,#-1               ; [CPU_] |4793| 
        B         $C$L97,NEQ            ; [CPU_] |4793| 
        ; branchcc occurs ; [] |4793| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4797,column 8,is_stmt,isa 0
$C$DW$616	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$616, DW_AT_low_pc(0x00)
	.dwattr $C$DW$616, DW_AT_name("_maf_rst")
	.dwattr $C$DW$616, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4797| 
        ; call occurs [#_maf_rst] ; [] |4797| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4799,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |4799| 
        SPM       #0                    ; [CPU_] 
$C$DW$617	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$617, DW_AT_low_pc(0x00)
	.dwattr $C$DW$617, DW_AT_name("_delay_us")
	.dwattr $C$DW$617, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4799| 
        ; call occurs [#_delay_us] ; [] |4799| 
$C$L98:    
	.dwpsn	file "../Source/prod.c",line 4802,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |4802| 
	.dwpsn	file "../Source/prod.c",line 4803,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4803| 
	.dwpsn	file "../Source/prod.c",line 4802,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4802| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4802| 
	.dwpsn	file "../Source/prod.c",line 4804,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4804| 
	.dwpsn	file "../Source/prod.c",line 4803,column 7,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |4803| 
	.dwpsn	file "../Source/prod.c",line 4804,column 7,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |4804| 
        MOVB      ACC,#0                ; [CPU_] |4804| 
        SUBB      ACC,#1                ; [CPU_] |4804| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4804| 
        B         $C$L100,EQ            ; [CPU_] |4804| 
        ; branchcc occurs ; [] |4804| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOVL      XAR0,#52              ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L99:    
	.dwpsn	file "../Source/prod.c",line 4805,column 15,is_stmt,isa 0
$C$DW$618	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$618, DW_AT_low_pc(0x00)
	.dwattr $C$DW$618, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$618, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4805| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4805| 
        CMPB      AL,#0                 ; [CPU_] |4805| 
        B         $C$L103,EQ            ; [CPU_] |4805| 
        ; branchcc occurs ; [] |4805| 
	.dwpsn	file "../Source/prod.c",line 4809,column 8,is_stmt,isa 0
$C$DW$619	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$619, DW_AT_low_pc(0x00)
	.dwattr $C$DW$619, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$619, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4809| 
        ; call occurs [#_ad7738_getraw] ; [] |4809| 
	.dwpsn	file "../Source/prod.c",line 4810,column 8,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |4810| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4810| 
        ADDL      XAR4,ACC              ; [CPU_] |4810| 
        MOVL      XAR0,#26              ; [CPU_] |4810| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4810| 
        MOVL      XAR0,#26              ; [CPU_] |4810| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4810| 
        ASR64     ACC:P,16              ; [CPU_] |4810| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4810| 
        MOVL      XAR0,#26              ; [CPU_] |4810| 
        ASR64     ACC:P,16              ; [CPU_] |4810| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4810| 
        MOVL      XAR0,#26              ; [CPU_] |4810| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4810| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4810| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4810| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4810| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4810| 
	.dwpsn	file "../Source/prod.c",line 4804,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4804| 
        SUBL      *-SP[40],ACC          ; [CPU_] |4804| 
        MOVB      ACC,#0                ; [CPU_] |4804| 
        SUBB      ACC,#1                ; [CPU_] |4804| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4804| 
        B         $C$L99,NEQ            ; [CPU_] |4804| 
        ; branchcc occurs ; [] |4804| 
$C$L100:    
	.dwpsn	file "../Source/prod.c",line 4789,column 18,is_stmt,isa 0
        INC       *-SP[54]              ; [CPU_] |4789| 
        ADDB      XAR1,#4               ; [CPU_] |4789| 
        MOV       AL,*-SP[54]           ; [CPU_] |4789| 
        CMPB      AL,#2                 ; [CPU_] |4789| 
        B         $C$L96,LT             ; [CPU_] |4789| 
        ; branchcc occurs ; [] |4789| 
	.dwpsn	file "../Source/prod.c",line 4814,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4814| 
$C$DW$620	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$620, DW_AT_low_pc(0x00)
	.dwattr $C$DW$620, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$620, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |4814| 
        ; call occurs [#_shunt_switch] ; [] |4814| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4816,column 6,is_stmt,isa 0
$C$DW$621	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$621, DW_AT_low_pc(0x00)
	.dwattr $C$DW$621, DW_AT_name("_maf_rst")
	.dwattr $C$DW$621, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |4816| 
        ; call occurs [#_maf_rst] ; [] |4816| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4819,column 6,is_stmt,isa 0
        MOV       AL,#16384             ; [CPU_] |4819| 
        MOV       AH,#17948             ; [CPU_] |4819| 
        SPM       #0                    ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4819| 
        MOVL      ACC,*-SP[18]          ; [CPU_] |4819| 
$C$DW$622	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$622, DW_AT_low_pc(0x00)
	.dwattr $C$DW$622, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$622, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4819| 
        ; call occurs [#FS$$MPY] ; [] |4819| 
        MOVL      XAR1,ACC              ; [CPU_] |4819| 
        MOVL      P,*-SP[30]            ; [CPU_] |4819| 
        MOVL      ACC,*-SP[28]          ; [CPU_] |4819| 
        SUBUL     P,*-SP[34]            ; [CPU_] |4819| 
        SUBBL     ACC,*-SP[32]          ; [CPU_] |4819| 
$C$DW$623	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$623, DW_AT_low_pc(0x00)
	.dwattr $C$DW$623, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$623, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4819| 
        ; call occurs [#LL$$TOFS] ; [] |4819| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |4819| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4819| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4819| 
$C$DW$624	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$624, DW_AT_low_pc(0x00)
	.dwattr $C$DW$624, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$624, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4819| 
        ; call occurs [#FS$$MPY] ; [] |4819| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4819| 
        MOVL      ACC,XAR1              ; [CPU_] |4819| 
$C$DW$625	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$625, DW_AT_low_pc(0x00)
	.dwattr $C$DW$625, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$625, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4819| 
        ; call occurs [#FS$$DIV] ; [] |4819| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4819| 
        MOVB      XAR0,#96              ; [CPU_] |4819| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4819| 
$C$L101:    
	.dwpsn	file "../Source/prod.c",line 4821,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4821| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |4821| 
        MOVL      XAR0,#52              ; [CPU_] |4821| 
        ADDB      ACC,#96               ; [CPU_] |4821| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4821| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4821| 
$C$DW$626	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$626, DW_AT_low_pc(0x00)
	.dwattr $C$DW$626, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$626, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |4821| 
        ; call occurs [#FS$$NEG] ; [] |4821| 
        MOVB      XAR0,#96              ; [CPU_] |4821| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |4821| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4821| 
$C$DW$627	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$627, DW_AT_low_pc(0x00)
	.dwattr $C$DW$627, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$627, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4821| 
        ; call occurs [#FS$$MPY] ; [] |4821| 
        MOVL      XAR1,ACC              ; [CPU_] |4821| 
        MOVL      P,*-SP[34]            ; [CPU_] |4821| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |4821| 
$C$DW$628	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$628, DW_AT_low_pc(0x00)
	.dwattr $C$DW$628, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$628, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4821| 
        ; call occurs [#LL$$TOFS] ; [] |4821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4821| 
        MOVL      ACC,XAR1              ; [CPU_] |4821| 
$C$DW$629	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$629, DW_AT_low_pc(0x00)
	.dwattr $C$DW$629, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$629, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4821| 
        ; call occurs [#FS$$MPY] ; [] |4821| 
        MOVL      XAR6,ACC              ; [CPU_] |4821| 
        MOV       AL,#16384             ; [CPU_] |4821| 
        MOV       AH,#17948             ; [CPU_] |4821| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4821| 
        MOVL      ACC,XAR6              ; [CPU_] |4821| 
$C$DW$630	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$630, DW_AT_low_pc(0x00)
	.dwattr $C$DW$630, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$630, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4821| 
        ; call occurs [#FS$$DIV] ; [] |4821| 
        MOVL      XAR0,#36              ; [CPU_] |4821| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4821| 
        MOVB      XAR1,#118             ; [CPU_] |4821| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4821| 
$C$L102:    
	.dwpsn	file "../Source/prod.c",line 4824,column 6,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |4824| 
	.dwpsn	file "../Source/prod.c",line 4825,column 6,is_stmt,isa 0
        B         $C$L112,UNC           ; [CPU_] |4825| 
        ; branch occurs ; [] |4825| 
$C$L103:    
	.dwpsn	file "../Source/prod.c",line 4806,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4806| 
$C$DW$631	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$631, DW_AT_low_pc(0x00)
	.dwattr $C$DW$631, DW_AT_name("_delay_us")
	.dwattr $C$DW$631, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4806| 
        ; call occurs [#_delay_us] ; [] |4806| 
	.dwpsn	file "../Source/prod.c",line 4805,column 15,is_stmt,isa 0
        B         $C$L99,UNC            ; [CPU_] |4805| 
        ; branch occurs ; [] |4805| 
$C$L104:    
	.dwpsn	file "../Source/prod.c",line 4742,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |4742| 
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4743| 
	.dwpsn	file "../Source/prod.c",line 4742,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[5]          ; [CPU_] |4742| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] |4742| 
	.dwpsn	file "../Source/prod.c",line 4743,column 6,is_stmt,isa 0
        SUBB      XAR5,#18              ; [CPU_U] |4743| 
        MOVZ      AR5,AR5               ; [CPU_] |4743| 
        ADDB      XAR4,#6               ; [CPU_] 
$C$L105:    
	.dwpsn	file "../Source/prod.c",line 4745,column 7,is_stmt,isa 0
        MOV       ACC,*+XAR4[1] << #8   ; [CPU_] |4745| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4745| 
        MOV       *XAR5++,AL            ; [CPU_] |4745| 
	.dwpsn	file "../Source/prod.c",line 4746,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4746| 
	.dwpsn	file "../Source/prod.c",line 4744,column 18,is_stmt,isa 0
        BANZ      $C$L105,AR6--         ; [CPU_] |4744| 
        ; branchcc occurs ; [] |4744| 
	.dwpsn	file "../Source/prod.c",line 4749,column 6,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4749| 
        MOVB      XAR0,#46              ; [CPU_] |4749| 
        MOV       AL,*-SP[41]           ; [CPU_] |4749| 
        CMP       AL,*+XAR4[AR0]        ; [CPU_] |4749| 
        B         $C$L111,HIS           ; [CPU_] |4749| 
        ; branchcc occurs ; [] |4749| 
        MOVL      XAR0,#36              ; [CPU_] |4749| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4749| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4749| 
        ADDL      ACC,XAR6              ; [CPU_] |4749| 
        ADDB      ACC,#48               ; [CPU_] |4749| 
        MOVL      XAR1,ACC              ; [CPU_] |4749| 
        MOVL      ACC,*-SP[18]          ; [CPU_] |4749| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4749| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4749| 
$C$DW$632	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$632, DW_AT_low_pc(0x00)
	.dwattr $C$DW$632, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$632, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4749| 
        ; call occurs [#FS$$CMP] ; [] |4749| 
        CMPB      AL,#0                 ; [CPU_] |4749| 
        B         $C$L111,NEQ           ; [CPU_] |4749| 
        ; branchcc occurs ; [] |4749| 
	.dwpsn	file "../Source/prod.c",line 4753,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL78        ; [CPU_U] |4753| 
        MOVB      AL,#1                 ; [CPU_] |4753| 
        MOVL      XAR0,#44              ; [CPU_] |4753| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4753| 
        ADD       AL,*-SP[41]           ; [CPU_] |4753| 
        MOV       *-SP[3],AL            ; [CPU_] |4753| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4753| 
$C$DW$633	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$633, DW_AT_low_pc(0x00)
	.dwattr $C$DW$633, DW_AT_name("_sprintf")
	.dwattr $C$DW$633, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4753| 
        ; call occurs [#_sprintf] ; [] |4753| 
        MOVL      XAR0,#44              ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4754,column 6,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4754| 
	.dwpsn	file "../Source/prod.c",line 4753,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4753| 
	.dwpsn	file "../Source/prod.c",line 4754,column 6,is_stmt,isa 0
$C$DW$634	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$634, DW_AT_low_pc(0x00)
	.dwattr $C$DW$634, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$634, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4754| 
        ; call occurs [#_lcd_puts] ; [] |4754| 
	.dwpsn	file "../Source/prod.c",line 4756,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4757| 
	.dwpsn	file "../Source/prod.c",line 4756,column 6,is_stmt,isa 0
        MOVL      *-SP[34],ACC          ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4757,column 6,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |4757| 
	.dwpsn	file "../Source/prod.c",line 4756,column 6,is_stmt,isa 0
        MOV       *-SP[32],#0           ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4758| 
	.dwpsn	file "../Source/prod.c",line 4756,column 6,is_stmt,isa 0
        MOV       *-SP[31],#0           ; [CPU_] |4756| 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |4758| 
        MOVB      ACC,#0                ; [CPU_] |4758| 
        SUBB      ACC,#1                ; [CPU_] |4758| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4758| 
        B         $C$L107,EQ            ; [CPU_] |4758| 
        ; branchcc occurs ; [] |4758| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
$C$L106:    
	.dwpsn	file "../Source/prod.c",line 4759,column 14,is_stmt,isa 0
$C$DW$635	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$635, DW_AT_low_pc(0x00)
	.dwattr $C$DW$635, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$635, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4759| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4759| 
        CMPB      AL,#0                 ; [CPU_] |4759| 
        B         $C$L110,EQ            ; [CPU_] |4759| 
        ; branchcc occurs ; [] |4759| 
	.dwpsn	file "../Source/prod.c",line 4763,column 7,is_stmt,isa 0
$C$DW$636	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$636, DW_AT_low_pc(0x00)
	.dwattr $C$DW$636, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$636, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4763| 
        ; call occurs [#_ad7738_getraw] ; [] |4763| 
	.dwpsn	file "../Source/prod.c",line 4764,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |4764| 
        ADDL      XAR4,ACC              ; [CPU_] |4764| 
        MOVL      XAR0,#24              ; [CPU_] |4764| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4764| 
        MOVL      XAR0,#24              ; [CPU_] |4764| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4764| 
        ASR64     ACC:P,16              ; [CPU_] |4764| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4764| 
        MOVL      XAR0,#24              ; [CPU_] |4764| 
        ASR64     ACC:P,16              ; [CPU_] |4764| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4764| 
        MOVL      XAR0,#24              ; [CPU_] |4764| 
        ADDUL     P,*-SP[34]            ; [CPU_] |4764| 
        ADDCL     ACC,*-SP[32]          ; [CPU_] |4764| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4764| 
        MOVL      *-SP[34],P            ; [CPU_] |4764| 
        MOVL      *-SP[32],ACC          ; [CPU_] |4764| 
	.dwpsn	file "../Source/prod.c",line 4758,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4758| 
        SUBL      *-SP[40],ACC          ; [CPU_] |4758| 
        MOVB      ACC,#0                ; [CPU_] |4758| 
        SUBB      ACC,#1                ; [CPU_] |4758| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4758| 
        B         $C$L106,NEQ           ; [CPU_] |4758| 
        ; branchcc occurs ; [] |4758| 
$C$L107:    
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4766| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4766| 
        MOV       *-SP[2],#0            ; [CPU_] |4766| 
        MOVL      P,*-SP[34]            ; [CPU_] |4766| 
        MOV       *-SP[1],#0            ; [CPU_] |4766| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |4766| 
$C$DW$637	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$637, DW_AT_low_pc(0x00)
	.dwattr $C$DW$637, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$637, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |4766| 
        ; call occurs [#LL$$DIV] ; [] |4766| 
        ADDB      XAR1,#24              ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4768,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4768| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4768| 
	.dwpsn	file "../Source/prod.c",line 4766,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |4766| 
	.dwpsn	file "../Source/prod.c",line 4768,column 6,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] |4768| 
        MOV       AL,*-SP[41]           ; [CPU_] |4768| 
        SUB       AL,AR6                ; [CPU_] |4768| 
        MOVZ      AR7,AL                ; [CPU_] |4768| 
        MOVL      XAR4,#65535           ; [CPU_U] |4768| 
        MOVL      ACC,XAR4              ; [CPU_] |4768| 
        CMPL      ACC,XAR7              ; [CPU_] |4768| 
        B         $C$L102,NEQ           ; [CPU_] |4768| 
        ; branchcc occurs ; [] |4768| 
	.dwpsn	file "../Source/prod.c",line 4771,column 12,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |4771| 
        B         $C$L109,UNC           ; [CPU_] |4771| 
        ; branch occurs ; [] |4771| 
$C$L108:    
	.dwpsn	file "../Source/prod.c",line 4772,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4772| 
        MOVB      AL,#10                ; [CPU_] |4772| 
        MOV       T,*-SP[52]            ; [CPU_] |4772| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4772| 
        SETC      SXM                   ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] |4772| 
        MOVL      XAR0,#36              ; [CPU_] |4772| 
        ADDL      ACC,XAR6              ; [CPU_] |4772| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4772| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4772| 
        MOV       AL,*-SP[41]           ; [CPU_] |4772| 
        MOV       ACC,AL << 1           ; [CPU_] |4772| 
        ADDL      ACC,XAR6              ; [CPU_] |4772| 
        MOVL      XAR1,ACC              ; [CPU_] |4772| 
        MOVB      XAR0,#48              ; [CPU_] |4772| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4772| 
        MOVB      XAR0,#50              ; [CPU_] |4772| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4772| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4772| 
$C$DW$638	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$638, DW_AT_low_pc(0x00)
	.dwattr $C$DW$638, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$638, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4772| 
        ; call occurs [#FS$$SUB] ; [] |4772| 
        MOVL      XAR0,#42              ; [CPU_] |4772| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4772| 
        MOVB      XAR0,#74              ; [CPU_] |4772| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4772| 
        MOVB      XAR0,#72              ; [CPU_] |4772| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |4772| 
$C$DW$639	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$639, DW_AT_low_pc(0x00)
	.dwattr $C$DW$639, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$639, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4772| 
        ; call occurs [#L$$TOFS] ; [] |4772| 
        MOVL      XAR0,#42              ; [CPU_] |4772| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4772| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4772| 
$C$DW$640	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$640, DW_AT_low_pc(0x00)
	.dwattr $C$DW$640, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$640, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4772| 
        ; call occurs [#FS$$DIV] ; [] |4772| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |4772| 
        MOVB      XAR0,#44              ; [CPU_] |4772| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |4772| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |4772| 
$C$DW$641	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$641, DW_AT_low_pc(0x00)
	.dwattr $C$DW$641, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$641, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4772| 
        ; call occurs [#FS$$DIV] ; [] |4772| 
        MOVB      XAR0,#96              ; [CPU_] |4772| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4772| 
	.dwpsn	file "../Source/prod.c",line 4776,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |4776| 
        MOVB      XAR0,#44              ; [CPU_] |4776| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4776| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |4776| 
$C$DW$642	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$642, DW_AT_low_pc(0x00)
	.dwattr $C$DW$642, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$642, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4776| 
        ; call occurs [#FS$$MPY] ; [] |4776| 
        MOVB      XAR0,#72              ; [CPU_] |4776| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4776| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4776| 
$C$DW$643	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$643, DW_AT_low_pc(0x00)
	.dwattr $C$DW$643, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$643, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |4776| 
        ; call occurs [#L$$TOFS] ; [] |4776| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4776| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4776| 
$C$DW$644	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$644, DW_AT_low_pc(0x00)
	.dwattr $C$DW$644, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$644, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4776| 
        ; call occurs [#FS$$MPY] ; [] |4776| 
        MOVB      XAR0,#48              ; [CPU_] |4776| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4776| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4776| 
$C$DW$645	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$645, DW_AT_low_pc(0x00)
	.dwattr $C$DW$645, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$645, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4776| 
        ; call occurs [#FS$$SUB] ; [] |4776| 
        MOVB      XAR0,#118             ; [CPU_] |4776| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4776| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4771,column 43,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |4771| 
        MOVZ      AR6,*+XAR4[AR0]       ; [CPU_] 
$C$L109:    
	.dwpsn	file "../Source/prod.c",line 4771,column 19,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4771| 
        ADDB      AL,#-1                ; [CPU_] |4771| 
        CMP       AL,*-SP[41]           ; [CPU_] |4771| 
        B         $C$L108,GT            ; [CPU_] |4771| 
        ; branchcc occurs ; [] |4771| 
	.dwpsn	file "../Source/prod.c",line 4783,column 6,is_stmt,isa 0
        B         $C$L102,UNC           ; [CPU_] |4783| 
        ; branch occurs ; [] |4783| 
$C$L110:    
	.dwpsn	file "../Source/prod.c",line 4760,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4760| 
$C$DW$646	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$646, DW_AT_low_pc(0x00)
	.dwattr $C$DW$646, DW_AT_name("_delay_us")
	.dwattr $C$DW$646, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4760| 
        ; call occurs [#_delay_us] ; [] |4760| 
	.dwpsn	file "../Source/prod.c",line 4759,column 14,is_stmt,isa 0
        B         $C$L106,UNC           ; [CPU_] |4759| 
        ; branch occurs ; [] |4759| 
$C$L111:    
	.dwpsn	file "../Source/prod.c",line 4750,column 7,is_stmt,isa 0
        MOV       *-SP[41],#2           ; [CPU_] |4750| 
$C$L112:    
	.dwpsn	file "../Source/prod.c",line 4832,column 5,is_stmt,isa 0
$C$DW$647	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$647, DW_AT_low_pc(0x00)
	.dwattr $C$DW$647, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$647, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4832| 
        ; call occurs [#_lcd_clear] ; [] |4832| 
	.dwpsn	file "../Source/prod.c",line 4833,column 5,is_stmt,isa 0
$C$DW$648	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$648, DW_AT_low_pc(0x00)
	.dwattr $C$DW$648, DW_AT_name("_update_units")
	.dwattr $C$DW$648, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4833| 
        ; call occurs [#_update_units] ; [] |4833| 
        MOV       AL,*-SP[41]           ; [CPU_] |4833| 
	.dwpsn	file "../Source/prod.c",line 4836,column 6,is_stmt,isa 0
        B         $C$L320,NEQ           ; [CPU_] |4836| 
        ; branchcc occurs ; [] |4836| 
        MOVL      XAR7,*-SP[60]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4838,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4838| 
$C$L113:    
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4838,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4838| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4838,column 17,is_stmt,isa 0
        MOV       AL,*-SP[53]           ; [CPU_] |4838| 
	.dwpsn	file "../Source/prod.c",line 4839,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4839| 
	.dwpsn	file "../Source/prod.c",line 4838,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4838| 
        B         $C$L113,HI            ; [CPU_] |4838| 
        ; branchcc occurs ; [] |4838| 
	.dwpsn	file "../Source/prod.c",line 4841,column 5,is_stmt,isa 0
        MOV       *-SP[55],AL           ; [CPU_] |4841| 
	.dwpsn	file "../Source/prod.c",line 4842,column 5,is_stmt,isa 0
        B         $C$L320,UNC           ; [CPU_] |4842| 
        ; branch occurs ; [] |4842| 
$C$L114:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4552,column 5,is_stmt,isa 0
        CMPB      AL,#20                ; [CPU_] |4552| 
        B         $C$L323,LO            ; [CPU_] |4552| 
        ; branchcc occurs ; [] |4552| 
	.dwpsn	file "../Source/prod.c",line 4557,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |4557| 
        MOV       *-SP[52],AL           ; [CPU_] |4557| 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4559| 
	.dwpsn	file "../Source/prod.c",line 4558,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[3]          ; [CPU_] |4558| 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4559| 
	.dwpsn	file "../Source/prod.c",line 4558,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |4558| 
	.dwpsn	file "../Source/prod.c",line 4559,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4559| 
        MOV       AL,*-SP[52]           ; [CPU_] |4559| 
        B         $C$L323,NEQ           ; [CPU_] |4559| 
        ; branchcc occurs ; [] |4559| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CMPB      AL,#20                ; [CPU_] |4559| 
        B         $C$L323,HIS           ; [CPU_] |4559| 
        ; branchcc occurs ; [] |4559| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4565,column 5,is_stmt,isa 0
        MOVL      XAR0,#64              ; [CPU_] |4565| 
        MOVL      ACC,XAR4              ; [CPU_] |4565| 
        ADDB      ACC,#4                ; [CPU_] |4565| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4565| 
        MOV       AL,*+XAR4[4]          ; [CPU_] |4565| 
        CMPB      AL,#16                ; [CPU_] |4565| 
        B         $C$L323,HIS           ; [CPU_] |4565| 
        ; branchcc occurs ; [] |4565| 
	.dwpsn	file "../Source/prod.c",line 4569,column 17,is_stmt,isa 0
        ADDB      XAR4,#4               ; [CPU_] |4569| 
        MOVL      XAR0,#64              ; [CPU_] |4569| 
        CMPB      AL,#0                 ; [CPU_] |4569| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4569| 
        B         $C$L115,LEQ           ; [CPU_] |4569| 
        ; branchcc occurs ; [] |4569| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4569| 
        MOVL      XAR7,XAR4             ; [CPU_] 
        MOVZ      AR4,*+XAR4[4]         ; [CPU_] |4569| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,XAR0              ; [CPU_] |4569| 
        ADDB      XAR7,#5               ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |4569| 
        MOVL      XAR0,ACC              ; [CPU_] |4569| 
	.dwpsn	file "../Source/prod.c",line 4570,column 6,is_stmt,isa 0
        MOVB      AL,#5                 ; [CPU_] |4570| 
        ADD       AL,AR4                ; [CPU_] |4570| 
        MOVZ      AR6,AL                ; [CPU_] |4570| 
        SUBB      XAR4,#1               ; [CPU_U] 
        RPT       AR4
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |4570| 
	.dwpsn	file "../Source/prod.c",line 4569,column 17,is_stmt,isa 0
        B         $C$L116,UNC           ; [CPU_] |4569| 
        ; branch occurs ; [] |4569| 
$C$L115:    
	.dwpsn	file "../Source/prod.c",line 4564,column 5,is_stmt,isa 0
        MOVB      XAR6,#5               ; [CPU_] |4564| 
	.dwpsn	file "../Source/prod.c",line 4569,column 10,is_stmt,isa 0
        MOVL      XAR0,#_tsensor        ; [CPU_U] |4569| 
$C$L116:    
	.dwpsn	file "../Source/prod.c",line 4572,column 5,is_stmt,isa 0
        MOV       *+XAR0[0],#0          ; [CPU_] |4572| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*-SP[60]          ; [CPU_] |4572| 
	.dwpsn	file "../Source/prod.c",line 4574,column 5,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |4574| 
        MOVL      XAR4,ACC              ; [CPU_] |4574| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4574| 
        CMPB      AL,#16                ; [CPU_] |4574| 
        B         $C$L323,HIS           ; [CPU_] |4574| 
        ; branchcc occurs ; [] |4574| 
        ADDB      XAR4,#1               ; [CPU_] |4574| 
	.dwpsn	file "../Source/prod.c",line 4579,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4579| 
	.dwpsn	file "../Source/prod.c",line 4574,column 5,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4574| 
        MOVL      P,XAR4                ; [CPU_] |4574| 
	.dwpsn	file "../Source/prod.c",line 4579,column 17,is_stmt,isa 0
        B         $C$L118,LEQ           ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        MOVZ      AR5,AL                ; [CPU_] |4579| 
        MOVL      XAR0,#36              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR0,AR5               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4580,column 6,is_stmt,isa 0
        ADD       AR6,AL                ; [CPU_] |4580| 
        SUBB      XAR0,#1               ; [CPU_U] 
        ADDB      XAR4,#16              ; [CPU_] 
$C$L117:    
        MOVL      XAR7,P                ; [CPU_] 
        MOV       AL,*XAR7              ; [CPU_] |4580| 
        MOV       *XAR4++,AL            ; [CPU_] |4580| 
        ADDB      XAR7,#1               ; [CPU_] |4580| 
        MOVL      P,XAR7                ; [CPU_] |4580| 
	.dwpsn	file "../Source/prod.c",line 4579,column 17,is_stmt,isa 0
        BANZ      $C$L117,AR0--         ; [CPU_] |4579| 
        ; branchcc occurs ; [] |4579| 
        B         $C$L119,UNC           ; [CPU_] |4579| 
        ; branch occurs ; [] |4579| 
$C$L118:    
	.dwpsn	file "../Source/prod.c",line 4579,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4579| 
$C$L119:    
        MOVL      XAR0,#36              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4582,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4582| 
        ADD       ACC,AR5               ; [CPU_] |4582| 
        MOVL      XAR4,ACC              ; [CPU_] |4582| 
        MOVB      XAR0,#16              ; [CPU_] |4582| 
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
        ADDB      XAR6,#1               ; [CPU_] 
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4582| 
	.dwpsn	file "../Source/prod.c",line 4584,column 5,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4584| 
        MOV       @_tsensor+36,AL       ; [CPU_] |4584| 
        ADDB      XAR7,#1               ; [CPU_] |4584| 
        MOV       AL,AR6                ; [CPU_] 
        MOVL      P,XAR7                ; [CPU_] |4584| 
        MOVB      XAR7,#1               ; [CPU_] 
        ADD       AR7,AL                ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      ACC,*-SP[60]          ; [CPU_] 
        ADD       ACC,AR7               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,#56              ; [CPU_] |4584| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4584| 
$C$L120:    
	.dwpsn	file "../Source/prod.c",line 4588,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4588| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4588| 
	.dwpsn	file "../Source/prod.c",line 4589,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4588,column 6,is_stmt,isa 0
        ADD       AL,*+XAR7[0]          ; [CPU_] |4588| 
        MOV       *XAR5++,AL            ; [CPU_] |4588| 
	.dwpsn	file "../Source/prod.c",line 4589,column 6,is_stmt,isa 0
        ADDB      XAR7,#2               ; [CPU_] |4589| 
        MOVL      P,XAR7                ; [CPU_] |4589| 
	.dwpsn	file "../Source/prod.c",line 4587,column 17,is_stmt,isa 0
        BANZ      $C$L120,AR6--         ; [CPU_] |4587| 
        ; branchcc occurs ; [] |4587| 
        MOVL      XAR0,#54              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L121:    
	.dwpsn	file "../Source/prod.c",line 4595,column 6,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4595| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4595| 
	.dwpsn	file "../Source/prod.c",line 4596,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4595,column 6,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4595| 
        MOV       *XAR0++,AL            ; [CPU_] |4595| 
	.dwpsn	file "../Source/prod.c",line 4596,column 6,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4596| 
        MOVL      P,XAR5                ; [CPU_] |4596| 
	.dwpsn	file "../Source/prod.c",line 4594,column 17,is_stmt,isa 0
        BANZ      $C$L121,AR6--         ; [CPU_] |4594| 
        ; branchcc occurs ; [] |4594| 
	.dwpsn	file "../Source/prod.c",line 4599,column 5,is_stmt,isa 0
        MOVL      XAR5,#_tsensor        ; [CPU_U] |4599| 
        MOVB      XAR0,#40              ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4601,column 5,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4599,column 5,is_stmt,isa 0
        MOVL      ACC,*+XAR5[AR0]       ; [CPU_] |4599| 
        MOVB      XAR0,#142             ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4601,column 5,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4599,column 5,is_stmt,isa 0
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4599| 
	.dwpsn	file "../Source/prod.c",line 4601,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4601| 
        MOV       AL,*XAR7              ; [CPU_] |4601| 
        ADDB      XAR7,#1               ; [CPU_] |4601| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4602| 
	.dwpsn	file "../Source/prod.c",line 4601,column 5,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4601| 
	.dwpsn	file "../Source/prod.c",line 4602,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4602| 
        CMPB      AL,#6                 ; [CPU_] |4602| 
        B         $C$L122,GT            ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
        CMPB      AL,#6                 ; [CPU_] |4602| 
        B         $C$L125,EQ            ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
        CMPB      AL,#1                 ; [CPU_] |4602| 
        B         $C$L128,LOS           ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
        MOV       AH,AL                 ; [CPU_] |4602| 
        ADDB      AH,#-2                ; [CPU_] |4602| 
        CMPB      AH,#2                 ; [CPU_] |4602| 
        B         $C$L127,LOS           ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
        CMPB      AL,#5                 ; [CPU_] |4602| 
        B         $C$L126,EQ            ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
        B         $C$L123,UNC           ; [CPU_] |4602| 
        ; branch occurs ; [] |4602| 
$C$L122:    
        MOV       AH,AL                 ; [CPU_] |4602| 
        ADDB      AH,#-7                ; [CPU_] |4602| 
        CMPB      AH,#1                 ; [CPU_] |4602| 
        B         $C$L124,LOS           ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
        CMPB      AL,#15                ; [CPU_] |4602| 
        B         $C$L124,EQ            ; [CPU_] |4602| 
        ; branchcc occurs ; [] |4602| 
$C$L123:    
	.dwpsn	file "../Source/prod.c",line 4624,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |4624| 
        MOVB      *+XAR5[AR0],#16,UNC   ; [CPU_] |4624| 
	.dwpsn	file "../Source/prod.c",line 4625,column 6,is_stmt,isa 0
        B         $C$L129,UNC           ; [CPU_] |4625| 
        ; branch occurs ; [] |4625| 
$C$L124:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4621,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |4621| 
	.dwpsn	file "../Source/prod.c",line 4622,column 6,is_stmt,isa 0
        B         $C$L129,UNC           ; [CPU_] |4622| 
        ; branch occurs ; [] |4622| 
$C$L125:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4616,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |4616| 
	.dwpsn	file "../Source/prod.c",line 4617,column 6,is_stmt,isa 0
        B         $C$L129,UNC           ; [CPU_] |4617| 
        ; branch occurs ; [] |4617| 
$C$L126:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4613,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |4613| 
	.dwpsn	file "../Source/prod.c",line 4614,column 6,is_stmt,isa 0
        B         $C$L129,UNC           ; [CPU_] |4614| 
        ; branch occurs ; [] |4614| 
$C$L127:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4610,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |4610| 
	.dwpsn	file "../Source/prod.c",line 4611,column 6,is_stmt,isa 0
        B         $C$L129,UNC           ; [CPU_] |4611| 
        ; branch occurs ; [] |4611| 
$C$L128:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4605,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |4605| 
$C$L129:    
	.dwpsn	file "../Source/prod.c",line 4627,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |4627| 
        MOVB      XAR0,#43              ; [CPU_] |4627| 
        ADDB      XAR7,#42              ; [CPU_] |4627| 
        MOV       AL,*XAR7              ; [CPU_] |4627| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4627| 
	.dwpsn	file "../Source/prod.c",line 4628,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |4628| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4628| 
        MOVL      *+XAR5[AR0],ACC       ; [CPU_] |4628| 
	.dwpsn	file "../Source/prod.c",line 4630,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |4630| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4630| 
        CMPB      AL,#1                 ; [CPU_] |4630| 
        B         $C$L136,EQ            ; [CPU_] |4630| 
        ; branchcc occurs ; [] |4630| 
        CMPB      AL,#2                 ; [CPU_] |4630| 
        B         $C$L130,EQ            ; [CPU_] |4630| 
        ; branchcc occurs ; [] |4630| 
        CMPB      AL,#3                 ; [CPU_] |4630| 
        B         $C$L134,EQ            ; [CPU_] |4630| 
        ; branchcc occurs ; [] |4630| 
        B         $C$L133,UNC           ; [CPU_] |4630| 
        ; branch occurs ; [] |4630| 
$C$L130:    
	.dwpsn	file "../Source/prod.c",line 4647,column 6,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |4647| 
        MOVB      XAR0,#46              ; [CPU_] |4647| 
        MOV       AL,*XAR7              ; [CPU_] |4647| 
        MOV       *+XAR5[AR0],AL        ; [CPU_] |4647| 
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |4648| 
	.dwpsn	file "../Source/prod.c",line 4647,column 6,is_stmt,isa 0
        MOVL      P,XAR7                ; [CPU_] |4647| 
	.dwpsn	file "../Source/prod.c",line 4648,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |4648| 
        CMPB      AL,#12                ; [CPU_] |4648| 
        B         $C$L133,GT            ; [CPU_] |4648| 
        ; branchcc occurs ; [] |4648| 
        MOVL      XAR6,P                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4647,column 6,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |4647| 
	.dwpsn	file "../Source/prod.c",line 4653,column 11,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |4653| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4647,column 6,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4647| 
        MOVL      P,XAR6                ; [CPU_] |4647| 
$C$L131:    
	.dwpsn	file "../Source/prod.c",line 4661,column 6,is_stmt,isa 0
        CMP       AL,AR1                ; [CPU_] |4661| 
        B         $C$L139,LEQ           ; [CPU_] |4661| 
        ; branchcc occurs ; [] |4661| 
	.dwpsn	file "../Source/prod.c",line 4654,column 7,is_stmt,isa 0
        MOV       ACC,AR1 << 1          ; [CPU_] |4654| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] |4654| 
        ADDB      ACC,#48               ; [CPU_] |4654| 
        MOVL      XAR0,ACC              ; [CPU_] |4654| 
$C$L132:    
	.dwpsn	file "../Source/prod.c",line 4656,column 8,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4656| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4656| 
	.dwpsn	file "../Source/prod.c",line 4657,column 8,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4656,column 8,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4656| 
        MOV       *XAR0++,AL            ; [CPU_] |4656| 
	.dwpsn	file "../Source/prod.c",line 4657,column 8,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4657| 
        MOVL      P,XAR5                ; [CPU_] |4657| 
	.dwpsn	file "../Source/prod.c",line 4655,column 19,is_stmt,isa 0
        BANZ      $C$L132,AR6--         ; [CPU_] |4655| 
        ; branchcc occurs ; [] |4655| 
        MOVL      XAR5,#_tsensor        ; [CPU_U] 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4653,column 50,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |4653| 
        MOV       AL,*+XAR5[AR0]        ; [CPU_] 
        B         $C$L131,UNC           ; [CPU_] |4653| 
        ; branch occurs ; [] |4653| 
$C$L133:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4679,column 6,is_stmt,isa 0
        MOV       @_tsensor+36,#0       ; [CPU_] |4679| 
	.dwpsn	file "../Source/prod.c",line 4680,column 6,is_stmt,isa 0
        B         $C$L139,UNC           ; [CPU_] |4680| 
        ; branch occurs ; [] |4680| 
$C$L134:    
	.dwpsn	file "../Source/prod.c",line 4665,column 6,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4665| 
        MOVB      XAR6,#1               ; [CPU_] 
        SUBB      XAR5,#18              ; [CPU_U] |4665| 
        MOVZ      AR0,AR5               ; [CPU_] |4665| 
$C$L135:    
	.dwpsn	file "../Source/prod.c",line 4667,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4667| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4668,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4667,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4667| 
        MOV       *XAR0++,AL            ; [CPU_] |4667| 
	.dwpsn	file "../Source/prod.c",line 4668,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4668| 
        MOVL      P,XAR5                ; [CPU_] |4668| 
	.dwpsn	file "../Source/prod.c",line 4666,column 18,is_stmt,isa 0
        BANZ      $C$L135,AR6--         ; [CPU_] |4666| 
        ; branchcc occurs ; [] |4666| 
	.dwpsn	file "../Source/prod.c",line 4671,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4671| 
        MOV       AH,#0                 ; [CPU_] |4671| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4671| 
        MOVL      ACC,*-SP[18]          ; [CPU_] |4671| 
$C$DW$649	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$649, DW_AT_low_pc(0x00)
	.dwattr $C$DW$649, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$649, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4671| 
        ; call occurs [#FS$$CMP] ; [] |4671| 
        CMPB      AL,#0                 ; [CPU_] |4671| 
        B         $C$L138,NEQ           ; [CPU_] |4671| 
        ; branchcc occurs ; [] |4671| 
	.dwpsn	file "../Source/prod.c",line 4672,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |4672| 
        MOV       AH,#16314             ; [CPU_] |4672| 
        MOVL      *-SP[18],ACC          ; [CPU_] |4672| 
        B         $C$L138,UNC           ; [CPU_] |4672| 
        ; branch occurs ; [] |4672| 
$C$L136:    
        MOVL      XAR0,#52              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR0,*+FP[AR0]        ; [CPU_] 
$C$L137:    
	.dwpsn	file "../Source/prod.c",line 4635,column 7,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4635| 
        MOV       ACC,*+XAR4[0] << #8   ; [CPU_] |4635| 
	.dwpsn	file "../Source/prod.c",line 4636,column 7,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4635,column 7,is_stmt,isa 0
        ADD       AL,*+XAR5[0]          ; [CPU_] |4635| 
        MOV       *XAR0++,AL            ; [CPU_] |4635| 
	.dwpsn	file "../Source/prod.c",line 4636,column 7,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4636| 
        MOVL      P,XAR5                ; [CPU_] |4636| 
	.dwpsn	file "../Source/prod.c",line 4634,column 18,is_stmt,isa 0
        BANZ      $C$L137,AR6--         ; [CPU_] |4634| 
        ; branchcc occurs ; [] |4634| 
	.dwpsn	file "../Source/prod.c",line 4639,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |4639| 
        MOVL      XAR0,#52              ; [CPU_] |4639| 
        MOVL      ACC,XAR1              ; [CPU_] |4639| 
        ADDB      ACC,#96               ; [CPU_] |4639| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4639| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4639| 
        MOV       AL,#0                 ; [CPU_] |4639| 
        MOV       AH,#0                 ; [CPU_] |4639| 
        MOVB      XAR0,#96              ; [CPU_] |4639| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4639| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4639| 
$C$DW$650	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$650, DW_AT_low_pc(0x00)
	.dwattr $C$DW$650, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$650, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4639| 
        ; call occurs [#FS$$CMP] ; [] |4639| 
        CMPB      AL,#0                 ; [CPU_] |4639| 
        B         $C$L138,NEQ           ; [CPU_] |4639| 
        ; branchcc occurs ; [] |4639| 
	.dwpsn	file "../Source/prod.c",line 4640,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |4640| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4640| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |4640| 
$C$L138:    
        MOVW      DP,#_tsensor+46       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4642,column 6,is_stmt,isa 0
        MOVB      @_tsensor+46,#1,UNC   ; [CPU_] |4642| 
$C$L139:    
	.dwpsn	file "../Source/prod.c",line 4683,column 5,is_stmt,isa 0
        MOVL      XAR4,#_tsensor        ; [CPU_U] |4683| 
        MOVB      XAR0,#36              ; [CPU_] |4683| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4683| 
        B         $C$L323,EQ            ; [CPU_] |4683| 
        ; branchcc occurs ; [] |4683| 
	.dwpsn	file "../Source/prod.c",line 4687,column 5,is_stmt,isa 0
        MOVB      XAR1,#144             ; [CPU_] |4687| 
        MOV       AL,#0                 ; [CPU_] |4687| 
        MOV       AH,#0                 ; [CPU_] |4687| 
	.dwpsn	file "../Source/prod.c",line 4688,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |4688| 
	.dwpsn	file "../Source/prod.c",line 4687,column 5,is_stmt,isa 0
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |4687| 
	.dwpsn	file "../Source/prod.c",line 4688,column 5,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4688| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4688| 
	.dwpsn	file "../Source/prod.c",line 4689,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |4689| 
        MOV       AL,#0                 ; [CPU_] |4689| 
        MOV       AH,#0                 ; [CPU_] |4689| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |4689| 
	.dwpsn	file "../Source/prod.c",line 4690,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |4690| 
        MOV       AL,*-SP[52]           ; [CPU_] |4690| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |4690| 
        MOVZ      AR6,*-SP[53]          ; [CPU_] |4690| 
	.dwpsn	file "../Source/prod.c",line 4692,column 10,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4692| 
        SUBB      XAR6,#2               ; [CPU_U] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L141,UNC           ; [CPU_] |4692| 
        ; branch occurs ; [] |4692| 
$C$L140:    
        MOVL      ACC,*-SP[60]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4693,column 6,is_stmt,isa 0
        MOV       PL,*-SP[55]           ; [CPU_] |4693| 
        MOVL      XAR0,#44              ; [CPU_] |4693| 
        ADD       ACC,PL                ; [CPU_] |4693| 
        MOVL      XAR7,ACC              ; [CPU_] |4693| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4693| 
        ADD       ACC,PL                ; [CPU_] |4693| 
        MOVL      XAR4,ACC              ; [CPU_] |4693| 
	.dwpsn	file "../Source/prod.c",line 4692,column 33,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4692| 
	.dwpsn	file "../Source/prod.c",line 4693,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4693| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4693| 
        MOV       AL,PL                 ; [CPU_] |4693| 
        ADDB      AL,#1                 ; [CPU_] |4693| 
        MOV       *-SP[55],AL           ; [CPU_] |4693| 
$C$L141:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4692,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4692| 
        B         $C$L140,HI            ; [CPU_] |4692| 
        ; branchcc occurs ; [] |4692| 
        B         $C$L765,UNC           ; [CPU_] |4692| 
        ; branch occurs ; [] |4692| 
$C$L142:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4500,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4500| 
        B         $C$L323,LO            ; [CPU_] |4500| 
        ; branchcc occurs ; [] |4500| 
        MOVL      ACC,XAR4              ; [CPU_] |4500| 
        MOVL      XAR0,#66              ; [CPU_] |4500| 
        ADDB      ACC,#2                ; [CPU_] |4500| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4500| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4500| 
        B         $C$L323,LT            ; [CPU_] |4500| 
        ; branchcc occurs ; [] |4500| 
        MOVL      XAR5,XAR4             ; [CPU_] |4500| 
        MOVL      XAR0,#66              ; [CPU_] |4500| 
        CMPB      AL,#4                 ; [CPU_] |4500| 
        ADDB      XAR5,#2               ; [CPU_] |4500| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4500| 
        B         $C$L323,GEQ           ; [CPU_] |4500| 
        ; branchcc occurs ; [] |4500| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4500| 
        B         $C$L323,LT            ; [CPU_] |4500| 
        ; branchcc occurs ; [] |4500| 
        CMPB      AH,#2                 ; [CPU_] |4500| 
        B         $C$L323,GT            ; [CPU_] |4500| 
        ; branchcc occurs ; [] |4500| 
        MOV       AH,*-SP[50]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4506,column 5,is_stmt,isa 0
        B         $C$L143,EQ            ; [CPU_] |4506| 
        ; branchcc occurs ; [] |4506| 
	.dwpsn	file "../Source/prod.c",line 4509,column 6,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4509| 
        MOVZ      AR6,*-SP[52]          ; [CPU_] |4509| 
        MOVL      XAR0,#66              ; [CPU_] |4509| 
        MOVU      ACC,AL                ; [CPU_] |4509| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4509| 
        CMPL      ACC,XAR6              ; [CPU_] |4509| 
        B         $C$L144,EQ            ; [CPU_] |4509| 
        ; branchcc occurs ; [] |4509| 
        B         $C$L323,UNC           ; [CPU_] |4509| 
        ; branch occurs ; [] |4509| 
$C$L143:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 4507,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |4507| 
        MOVL      XAR0,#66              ; [CPU_] |4507| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |4507| 
        MOV       *-SP[52],AL           ; [CPU_] |4507| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4507| 
$C$L144:    
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4515| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        MOVL      XAR4,XAR5             ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4514,column 5,is_stmt,isa 0
        MOVL      XAR7,#_buff$1         ; [CPU_U] |4514| 
        MOV       *-SP[41],AL           ; [CPU_] |4514| 
        MOV       *+XAR7[2],AL          ; [CPU_] |4514| 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        ADDB      XAR4,#3               ; [CPU_] |4515| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4518| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4515,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |4515| 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        SUBB      XAR4,#26              ; [CPU_U] |4518| 
        MOVZ      AR4,AR4               ; [CPU_] |4518| 
	.dwpsn	file "../Source/prod.c",line 4516,column 5,is_stmt,isa 0
        MOV       *+XAR7[3],AL          ; [CPU_] |4516| 
	.dwpsn	file "../Source/prod.c",line 4518,column 5,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |4518| 
        ADDB      XAR7,#4               ; [CPU_] 
        ADDL      XAR4,ACC              ; [CPU_] |4518| 
        ADDB      XAR5,#4               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L145:    
	.dwpsn	file "../Source/prod.c",line 4520,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4520| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4520| 
	.dwpsn	file "../Source/prod.c",line 4521,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4521| 
        MOV       *XAR7++,AL            ; [CPU_] |4521| 
	.dwpsn	file "../Source/prod.c",line 4522,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4522| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4522| 
        MOV       *XAR4++,AL            ; [CPU_] |4522| 
	.dwpsn	file "../Source/prod.c",line 4523,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4523| 
        MOV       *XAR7++,AL            ; [CPU_] |4523| 
	.dwpsn	file "../Source/prod.c",line 4519,column 17,is_stmt,isa 0
        BANZ      $C$L145,AR6--         ; [CPU_] |4519| 
        ; branchcc occurs ; [] |4519| 
	.dwpsn	file "../Source/prod.c",line 4526,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4526| 
        SUBB      XAR4,#26              ; [CPU_U] |4526| 
        MOVZ      AR4,AR4               ; [CPU_] |4526| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4526| 
        ADDL      XAR4,ACC              ; [CPU_] |4526| 
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |4526| 
        MOV       ACC,#-32192 << 15     ; [CPU_] |4526| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4526| 
        MOVL      ACC,XAR1              ; [CPU_] |4526| 
$C$DW$651	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$651, DW_AT_low_pc(0x00)
	.dwattr $C$DW$651, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$651, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4526| 
        ; call occurs [#FS$$CMP] ; [] |4526| 
        CMPB      AL,#0                 ; [CPU_] |4526| 
        B         $C$L323,LT            ; [CPU_] |4526| 
        ; branchcc occurs ; [] |4526| 
        MOV       AL,#0                 ; [CPU_] |4526| 
        MOV       AH,#16672             ; [CPU_] |4526| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4526| 
        MOVL      ACC,XAR1              ; [CPU_] |4526| 
$C$DW$652	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$652, DW_AT_low_pc(0x00)
	.dwattr $C$DW$652, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$652, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4526| 
        ; call occurs [#FS$$CMP] ; [] |4526| 
        CMPB      AL,#0                 ; [CPU_] |4526| 
        B         $C$L323,GT            ; [CPU_] |4526| 
        ; branchcc occurs ; [] |4526| 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4531| 
        MOV       AH,#16672             ; [CPU_] |4531| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4531| 
        MOVL      ACC,XAR1              ; [CPU_] |4531| 
$C$DW$653	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$653, DW_AT_low_pc(0x00)
	.dwattr $C$DW$653, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$653, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |4531| 
        ; call occurs [#FS$$ADD] ; [] |4531| 
        MOVL      XAR6,ACC              ; [CPU_] |4531| 
        MOV       AL,#65024             ; [CPU_] |4531| 
        MOV       AH,#18175             ; [CPU_] |4531| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4531| 
        MOVL      ACC,XAR6              ; [CPU_] |4531| 
$C$DW$654	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$654, DW_AT_low_pc(0x00)
	.dwattr $C$DW$654, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$654, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4531| 
        ; call occurs [#FS$$MPY] ; [] |4531| 
        MOVL      XAR6,ACC              ; [CPU_] |4531| 
        MOV       AL,#0                 ; [CPU_] |4531| 
        MOV       AH,#16672             ; [CPU_] |4531| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4531| 
        MOVL      ACC,XAR6              ; [CPU_] |4531| 
$C$DW$655	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$655, DW_AT_low_pc(0x00)
	.dwattr $C$DW$655, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$655, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4531| 
        ; call occurs [#FS$$DIV] ; [] |4531| 
$C$DW$656	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$656, DW_AT_low_pc(0x00)
	.dwattr $C$DW$656, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$656, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |4531| 
        ; call occurs [#FS$$TOLL] ; [] |4531| 
	.dwpsn	file "../Source/prod.c",line 4532,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |4532| 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
        MOVL      *-SP[34],P            ; [CPU_] |4531| 
	.dwpsn	file "../Source/prod.c",line 4522,column 6,is_stmt,isa 0
        MOV       *-SP[55],#8           ; [CPU_] |4522| 
	.dwpsn	file "../Source/prod.c",line 4531,column 5,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |4531| 
	.dwpsn	file "../Source/prod.c",line 4532,column 5,is_stmt,isa 0
        MOVL      P,*-SP[34]            ; [CPU_] |4532| 
        CMP64     ACC:P                 ; [CPU_] |4532| 
        B         $C$L147,LEQ           ; [CPU_] |4532| 
        ; branchcc occurs ; [] |4532| 
	.dwpsn	file "../Source/prod.c",line 4534,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |4534| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |4534| 
        MOV       *-SP[2],#0            ; [CPU_] |4534| 
        MOVL      P,*-SP[34]            ; [CPU_] |4534| 
        MOV       *-SP[1],#0            ; [CPU_] |4534| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |4534| 
$C$DW$657	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$657, DW_AT_low_pc(0x00)
	.dwattr $C$DW$657, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$657, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |4534| 
        ; call occurs [#LL$$CMP] ; [] |4534| 
        CMPB      AL,#0                 ; [CPU_] |4534| 
        B         $C$L146,GEQ           ; [CPU_] |4534| 
        ; branchcc occurs ; [] |4534| 
	.dwpsn	file "../Source/prod.c",line 4537,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4537| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#37              ; [CPU_U] |4537| 
        MOVU      ACC,AR4               ; [CPU_] |4537| 
        ADD       ACC,*-SP[53]          ; [CPU_] |4537| 
        MOVL      XAR1,ACC              ; [CPU_] |4537| 
        MOV       AL,*-SP[34]           ; [CPU_] |4537| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4537| 
        B         $C$L148,UNC           ; [CPU_] |4537| 
        ; branch occurs ; [] |4537| 
$C$L146:    
	.dwpsn	file "../Source/prod.c",line 4535,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4535| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#37              ; [CPU_U] |4535| 
        MOVU      ACC,AR4               ; [CPU_] |4535| 
        ADD       ACC,*-SP[53]          ; [CPU_] |4535| 
        MOVL      XAR1,ACC              ; [CPU_] |4535| 
        MOV       *+XAR1[0],#65535      ; [CPU_] |4535| 
	.dwpsn	file "../Source/prod.c",line 4536,column 5,is_stmt,isa 0
        B         $C$L148,UNC           ; [CPU_] |4536| 
        ; branch occurs ; [] |4536| 
$C$L147:    
	.dwpsn	file "../Source/prod.c",line 4533,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4533| 
        SETC      SXM                   ; [CPU_] 
        SUBB      XAR4,#37              ; [CPU_U] |4533| 
        MOVU      ACC,AR4               ; [CPU_] |4533| 
        ADD       ACC,*-SP[53]          ; [CPU_] |4533| 
        MOVL      XAR1,ACC              ; [CPU_] |4533| 
        MOV       *+XAR1[0],#0          ; [CPU_] |4533| 
$C$L148:    
	.dwpsn	file "../Source/prod.c",line 4540,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4540| 
$C$DW$658	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$658, DW_AT_low_pc(0x00)
	.dwattr $C$DW$658, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$658, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4540| 
        ; call occurs [#_dac_setmode] ; [] |4540| 
	.dwpsn	file "../Source/prod.c",line 4542,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4542| 
        MOV       AH,*-SP[41]           ; [CPU_] |4542| 
$C$DW$659	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$659, DW_AT_low_pc(0x00)
	.dwattr $C$DW$659, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$659, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |4542| 
        ; call occurs [#_mcbsp_xmit] ; [] |4542| 
	.dwpsn	file "../Source/prod.c",line 4543,column 5,is_stmt,isa 0
$C$DW$660	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$660, DW_AT_low_pc(0x00)
	.dwattr $C$DW$660, DW_AT_name("_latch_dac")
	.dwattr $C$DW$660, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |4543| 
        ; call occurs [#_latch_dac] ; [] |4543| 
	.dwpsn	file "../Source/prod.c",line 4545,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4545| 
        MOV       T,*-SP[53]            ; [CPU_] |4545| 
        LSL       AL,T                  ; [CPU_] |4545| 
        OR        *-SP[50],AL           ; [CPU_] |4545| 
	.dwpsn	file "../Source/prod.c",line 4548,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |4548| 
        ; branch occurs ; [] |4548| 
$C$L149:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4454,column 5,is_stmt,isa 0
        CMPB      AL,#11                ; [CPU_] |4454| 
        B         $C$L323,LO            ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4454| 
        MOVL      XAR0,#66              ; [CPU_] |4454| 
        MOVL      ACC,XAR5              ; [CPU_] |4454| 
        ADDB      ACC,#2                ; [CPU_] |4454| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4454| 
        MOVZ      AR6,*+XAR5[2]         ; [CPU_] |4454| 
        MOVZ      AR7,AR6               ; [CPU_] |4454| 
        MOV       AL,*-SP[52]           ; [CPU_] |4454| 
        MOVU      ACC,AL                ; [CPU_] |4454| 
        CMPL      ACC,XAR7              ; [CPU_] |4454| 
        B         $C$L323,NEQ           ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
        MOV       AL,*-SP[50]           ; [CPU_] 
        ORB       AL,#0x07              ; [CPU_] |4454| 
        CMPB      AL,#7                 ; [CPU_] |4454| 
        B         $C$L323,NEQ           ; [CPU_] |4454| 
        ; branchcc occurs ; [] |4454| 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4460| 
        MOVL      ACC,XAR5              ; [CPU_] |4460| 
        MOVL      XAR0,#66              ; [CPU_] |4460| 
	.dwpsn	file "../Source/prod.c",line 4459,column 5,is_stmt,isa 0
        MOV       *-SP[52],AR6          ; [CPU_] |4459| 
        MOVL      XAR7,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4460,column 5,is_stmt,isa 0
        ADDB      ACC,#2                ; [CPU_] |4460| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4460| 
        MOV       *+XAR4[2],AR6         ; [CPU_] |4460| 
        MOVZ      AR4,SP                ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
        SUBB      XAR4,#26              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
        MOV       *-SP[55],#3           ; [CPU_] |4460| 
        MOVB      XAR4,#2               ; [CPU_] 
$C$L150:    
	.dwpsn	file "../Source/prod.c",line 4463,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |4463| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L151:    
	.dwpsn	file "../Source/prod.c",line 4465,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4465| 
        MOV       *+XAR0[0],AL          ; [CPU_] |4465| 
	.dwpsn	file "../Source/prod.c",line 4466,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4466| 
        MOV       *XAR7++,AL            ; [CPU_] |4466| 
	.dwpsn	file "../Source/prod.c",line 4467,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4467| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |4467| 
        MOV       *XAR0++,AL            ; [CPU_] |4467| 
	.dwpsn	file "../Source/prod.c",line 4468,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4468| 
        MOV       *XAR7++,AL            ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4464,column 18,is_stmt,isa 0
        BANZ      $C$L151,AR6--         ; [CPU_] |4464| 
        ; branchcc occurs ; [] |4464| 
	.dwpsn	file "../Source/prod.c",line 4462,column 17,is_stmt,isa 0
        ADDB      XAR1,#2               ; [CPU_] |4462| 
	.dwpsn	file "../Source/prod.c",line 4468,column 7,is_stmt,isa 0
        ADD       *-SP[55],#4           ; [CPU_] |4468| 
	.dwpsn	file "../Source/prod.c",line 4462,column 17,is_stmt,isa 0
        BANZ      $C$L150,AR4--         ; [CPU_] |4462| 
        ; branchcc occurs ; [] |4462| 
	.dwpsn	file "../Source/prod.c",line 4475,column 5,is_stmt,isa 0
        MOV       AL,*-SP[36]           ; [CPU_] |4475| 
$C$DW$661	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$661, DW_AT_low_pc(0x00)
	.dwattr $C$DW$661, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$661, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4475| 
        ; call occurs [#U$$TOFS] ; [] |4475| 
        MOVL      XAR1,ACC              ; [CPU_] |4475| 
        MOV       AL,*-SP[37]           ; [CPU_] |4475| 
$C$DW$662	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$662, DW_AT_low_pc(0x00)
	.dwattr $C$DW$662, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$662, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4475| 
        ; call occurs [#U$$TOFS] ; [] |4475| 
        MOVL      XAR0,#40              ; [CPU_] |4475| 
        MOV       T,*-SP[52]            ; [CPU_] |4475| 
        MOVL      *-SP[60],ACC          ; [CPU_] |4475| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4475| 
        MOVB      AL,#12                ; [CPU_] |4475| 
        MPYU      ACC,T,AL              ; [CPU_] |4475| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4475| 
        ADDL      ACC,XAR6              ; [CPU_] |4475| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4475| 
        MOVL      ACC,*-SP[60]          ; [CPU_] |4475| 
$C$DW$663	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$663, DW_AT_low_pc(0x00)
	.dwattr $C$DW$663, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$663, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4475| 
        ; call occurs [#FS$$SUB] ; [] |4475| 
        MOVL      XAR0,#42              ; [CPU_] |4475| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4475| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4475| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4475| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4475| 
$C$DW$664	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$664, DW_AT_low_pc(0x00)
	.dwattr $C$DW$664, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$664, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4475| 
        ; call occurs [#FS$$SUB] ; [] |4475| 
        MOVL      XAR0,#42              ; [CPU_] |4475| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4475| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4475| 
$C$DW$665	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$665, DW_AT_low_pc(0x00)
	.dwattr $C$DW$665, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$665, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4475| 
        ; call occurs [#FS$$DIV] ; [] |4475| 
        MOVL      XAR6,ACC              ; [CPU_] |4475| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |4475| 
        ADD       ACC,#777 << 2         ; [CPU_] |4475| 
        MOVL      XAR4,ACC              ; [CPU_] |4475| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4475| 
	.dwpsn	file "../Source/prod.c",line 4478,column 5,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |4478| 
$C$DW$666	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$666, DW_AT_low_pc(0x00)
	.dwattr $C$DW$666, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$666, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |4478| 
        ; call occurs [#U$$TOFS] ; [] |4478| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |4478| 
$C$DW$667	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$667, DW_AT_low_pc(0x00)
	.dwattr $C$DW$667, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$667, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4478| 
        ; call occurs [#FS$$SUB] ; [] |4478| 
        MOVL      XAR1,ACC              ; [CPU_] |4478| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4478| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4478| 
        MOVL      ACC,*-SP[22]          ; [CPU_] |4478| 
$C$DW$668	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$668, DW_AT_low_pc(0x00)
	.dwattr $C$DW$668, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$668, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4478| 
        ; call occurs [#FS$$SUB] ; [] |4478| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4478| 
        MOVL      ACC,XAR1              ; [CPU_] |4478| 
$C$DW$669	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$669, DW_AT_low_pc(0x00)
	.dwattr $C$DW$669, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$669, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4478| 
        ; call occurs [#FS$$DIV] ; [] |4478| 
        MOVL      XAR1,*-SP[58]         ; [CPU_] |4478| 
        MOVL      XAR6,ACC              ; [CPU_] |4478| 
        MOVL      ACC,XAR1              ; [CPU_] |4478| 
        ADD       ACC,#1553 << 1        ; [CPU_] |4478| 
        MOVL      XAR4,ACC              ; [CPU_] |4478| 
	.dwpsn	file "../Source/prod.c",line 4481,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4481| 
	.dwpsn	file "../Source/prod.c",line 4478,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4478| 
	.dwpsn	file "../Source/prod.c",line 4481,column 5,is_stmt,isa 0
        ADD       ACC,#777 << 2         ; [CPU_] |4481| 
        MOVL      XAR4,ACC              ; [CPU_] |4481| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4481| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4481| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |4481| 
$C$DW$670	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$670, DW_AT_low_pc(0x00)
	.dwattr $C$DW$670, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$670, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4481| 
        ; call occurs [#FS$$MPY] ; [] |4481| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4481| 
        MOVL      ACC,*-SP[60]          ; [CPU_] |4481| 
$C$DW$671	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$671, DW_AT_low_pc(0x00)
	.dwattr $C$DW$671, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$671, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4481| 
        ; call occurs [#FS$$SUB] ; [] |4481| 
        MOVL      XAR6,ACC              ; [CPU_] |4481| 
        MOVL      ACC,XAR1              ; [CPU_] |4481| 
        ADD       ACC,#1555 << 1        ; [CPU_] |4481| 
        MOVL      XAR4,ACC              ; [CPU_] |4481| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4484| 
	.dwpsn	file "../Source/prod.c",line 4481,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |4481| 
	.dwpsn	file "../Source/prod.c",line 4484,column 5,is_stmt,isa 0
$C$DW$672	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$672, DW_AT_low_pc(0x00)
	.dwattr $C$DW$672, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$672, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |4484| 
        ; call occurs [#_dac_setmode] ; [] |4484| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4490,column 5,is_stmt,isa 0
$C$DW$673	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$673, DW_AT_low_pc(0x00)
	.dwattr $C$DW$673, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$673, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4490| 
        ; call occurs [#_ad7738_setcal] ; [] |4490| 
        MOVL      XAR0,#78              ; [CPU_] |4490| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4490| 
	.dwpsn	file "../Source/prod.c",line 4491,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |4491| 
        MOVL      XAR1,ACC              ; [CPU_] |4491| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4491| 
$C$DW$674	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$674, DW_AT_low_pc(0x00)
	.dwattr $C$DW$674, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$674, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4491| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4491| 
	.dwpsn	file "../Source/prod.c",line 4492,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4492| 
$C$DW$675	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$675, DW_AT_low_pc(0x00)
	.dwattr $C$DW$675, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$675, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4492| 
        ; call occurs [#_ad7738_resetvall] ; [] |4492| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4485,column 5,is_stmt,isa 0
        MOV       *-SP[50],#0           ; [CPU_] |4485| 
	.dwpsn	file "../Source/prod.c",line 4496,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |4496| 
        ; branch occurs ; [] |4496| 
$C$L152:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4398,column 5,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |4398| 
        B         $C$L323,LO            ; [CPU_] |4398| 
        ; branchcc occurs ; [] |4398| 
        MOVL      ACC,XAR4              ; [CPU_] |4398| 
        MOVL      XAR0,#66              ; [CPU_] |4398| 
        MOVL      *-SP[58],XAR4         ; [CPU_] |4398| 
        ADDB      ACC,#2                ; [CPU_] |4398| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4398| 
        MOVZ      AR6,*+XAR4[2]         ; [CPU_] |4398| 
        MOV       AL,*-SP[52]           ; [CPU_] |4398| 
        MOVU      ACC,AL                ; [CPU_] |4398| 
        CMPL      ACC,XAR6              ; [CPU_] |4398| 
        B         $C$L323,NEQ           ; [CPU_] |4398| 
        ; branchcc occurs ; [] |4398| 
        MOV       AL,*+XAR4[3]          ; [CPU_] |4398| 
        B         $C$L323,LT            ; [CPU_] |4398| 
        ; branchcc occurs ; [] |4398| 
        CMPB      AL,#2                 ; [CPU_] |4398| 
        B         $C$L323,GEQ           ; [CPU_] |4398| 
        ; branchcc occurs ; [] |4398| 
	.dwpsn	file "../Source/prod.c",line 4405,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |4405| 
	.dwpsn	file "../Source/prod.c",line 4404,column 5,is_stmt,isa 0
        MOVL      XAR5,*-SP[58]         ; [CPU_] |4404| 
        MOV       *-SP[41],AL           ; [CPU_] |4404| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4405,column 5,is_stmt,isa 0
        SUBB      XAR6,#12              ; [CPU_U] |4405| 
        MOVZ      AR7,AR6               ; [CPU_] |4405| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
$C$L153:    
	.dwpsn	file "../Source/prod.c",line 4407,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |4407| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4407| 
	.dwpsn	file "../Source/prod.c",line 4406,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4406| 
        ADDB      XAR4,#2               ; [CPU_] |4406| 
	.dwpsn	file "../Source/prod.c",line 4407,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |4407| 
	.dwpsn	file "../Source/prod.c",line 4406,column 17,is_stmt,isa 0
        BANZ      $C$L153,AR6--         ; [CPU_] |4406| 
        ; branchcc occurs ; [] |4406| 
	.dwpsn	file "../Source/prod.c",line 4410,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4410| 
        SUBB      XAR4,#26              ; [CPU_U] |4410| 
        MOVZ      AR1,AR4               ; [CPU_] |4410| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |4410| 
        ADDL      XAR1,ACC              ; [CPU_] |4410| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |4410| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4410| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4410| 
$C$DW$676	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$676, DW_AT_low_pc(0x00)
	.dwattr $C$DW$676, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$676, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4410| 
        ; call occurs [#FS$$CMP] ; [] |4410| 
        CMPB      AL,#0                 ; [CPU_] |4410| 
        B         $C$L323,NEQ           ; [CPU_] |4410| 
        ; branchcc occurs ; [] |4410| 
	.dwpsn	file "../Source/prod.c",line 4414,column 5,is_stmt,isa 0
$C$DW$677	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$677, DW_AT_low_pc(0x00)
	.dwattr $C$DW$677, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$677, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4414| 
        ; call occurs [#_lcd_clear] ; [] |4414| 
	.dwpsn	file "../Source/prod.c",line 4415,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4415| 
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |4415| 
$C$DW$678	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$678, DW_AT_low_pc(0x00)
	.dwattr $C$DW$678, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$678, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4415| 
        ; call occurs [#_lcd_puts] ; [] |4415| 
	.dwpsn	file "../Source/prod.c",line 4416,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4416| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |4416| 
        MOVL      XAR0,#44              ; [CPU_] |4416| 
        ADD       AL,*-SP[52]           ; [CPU_] |4416| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4416| 
        MOV       *-SP[3],AL            ; [CPU_] |4416| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4416| 
$C$DW$679	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$679, DW_AT_low_pc(0x00)
	.dwattr $C$DW$679, DW_AT_name("_sprintf")
	.dwattr $C$DW$679, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4416| 
        ; call occurs [#_sprintf] ; [] |4416| 
        MOVL      XAR0,#44              ; [CPU_] |4416| 
	.dwpsn	file "../Source/prod.c",line 4417,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |4417| 
	.dwpsn	file "../Source/prod.c",line 4416,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4416| 
	.dwpsn	file "../Source/prod.c",line 4417,column 5,is_stmt,isa 0
$C$DW$680	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$680, DW_AT_low_pc(0x00)
	.dwattr $C$DW$680, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$680, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4417| 
        ; call occurs [#_lcd_puts] ; [] |4417| 
	.dwpsn	file "../Source/prod.c",line 4418,column 5,is_stmt,isa 0
        MOVB      AL,#88                ; [CPU_] |4418| 
        MOVL      XAR4,#$C$FSL81        ; [CPU_U] |4418| 
        MOVL      XAR0,#44              ; [CPU_] |4418| 
        ADD       AL,*-SP[41]           ; [CPU_] |4418| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |4418| 
        MOV       *-SP[3],AL            ; [CPU_] |4418| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |4418| 
        MOVL      *-SP[6],ACC           ; [CPU_] |4418| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |4418| 
        MOVL      XAR4,XAR1             ; [CPU_] |4418| 
$C$DW$681	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$681, DW_AT_low_pc(0x00)
	.dwattr $C$DW$681, DW_AT_name("_sprintf")
	.dwattr $C$DW$681, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |4418| 
        ; call occurs [#_sprintf] ; [] |4418| 
	.dwpsn	file "../Source/prod.c",line 4419,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |4419| 
	.dwpsn	file "../Source/prod.c",line 4418,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |4418| 
	.dwpsn	file "../Source/prod.c",line 4419,column 5,is_stmt,isa 0
$C$DW$682	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$682, DW_AT_low_pc(0x00)
	.dwattr $C$DW$682, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$682, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4419| 
        ; call occurs [#_lcd_puts] ; [] |4419| 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |4420| 
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |4420| 
$C$DW$683	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$683, DW_AT_low_pc(0x00)
	.dwattr $C$DW$683, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$683, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |4420| 
        ; call occurs [#_lcd_puts] ; [] |4420| 
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4422| 
        SUBB      XAR4,#34              ; [CPU_U] |4422| 
        MOVZ      AR1,AR4               ; [CPU_] |4422| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4420,column 5,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |4420| 
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
        MOV       ACC,AL << 2           ; [CPU_] |4422| 
        ADDL      XAR1,ACC              ; [CPU_] |4422| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |4423| 
	.dwpsn	file "../Source/prod.c",line 4422,column 5,is_stmt,isa 0
        ZAPA      ; [CPU_] |4422| 
        MOVL      *+XAR1[0],P           ; [CPU_] |4422| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4422| 
	.dwpsn	file "../Source/prod.c",line 4424,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4424| 
	.dwpsn	file "../Source/prod.c",line 4423,column 5,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |4423| 
	.dwpsn	file "../Source/prod.c",line 4424,column 5,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |4424| 
        MOVB      ACC,#0                ; [CPU_] |4424| 
        SUBB      ACC,#1                ; [CPU_] |4424| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4424| 
        B         $C$L156,EQ            ; [CPU_] |4424| 
        ; branchcc occurs ; [] |4424| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[60],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4425,column 13,is_stmt,isa 0
        B         $C$L155,UNC           ; [CPU_] |4425| 
        ; branch occurs ; [] |4425| 
$C$L154:    
	.dwpsn	file "../Source/prod.c",line 4426,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |4426| 
$C$DW$684	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$684, DW_AT_low_pc(0x00)
	.dwattr $C$DW$684, DW_AT_name("_delay_us")
	.dwattr $C$DW$684, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |4426| 
        ; call occurs [#_delay_us] ; [] |4426| 
$C$L155:    
	.dwpsn	file "../Source/prod.c",line 4425,column 13,is_stmt,isa 0
$C$DW$685	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$685, DW_AT_low_pc(0x00)
	.dwattr $C$DW$685, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$685, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |4425| 
        ; call occurs [#_ad7738_rawrdy] ; [] |4425| 
        CMPB      AL,#0                 ; [CPU_] |4425| 
        B         $C$L154,EQ            ; [CPU_] |4425| 
        ; branchcc occurs ; [] |4425| 
	.dwpsn	file "../Source/prod.c",line 4428,column 6,is_stmt,isa 0
$C$DW$686	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$686, DW_AT_low_pc(0x00)
	.dwattr $C$DW$686, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$686, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |4428| 
        ; call occurs [#_ad7738_getraw] ; [] |4428| 
	.dwpsn	file "../Source/prod.c",line 4429,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[60]          ; [CPU_] |4429| 
        ADDL      XAR4,ACC              ; [CPU_] |4429| 
        MOVL      XAR0,#22              ; [CPU_] |4429| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |4429| 
        MOVL      XAR0,#22              ; [CPU_] |4429| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4429| 
        ASR64     ACC:P,16              ; [CPU_] |4429| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4429| 
        MOVL      XAR0,#22              ; [CPU_] |4429| 
        ASR64     ACC:P,16              ; [CPU_] |4429| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4429| 
        MOVL      XAR0,#22              ; [CPU_] |4429| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |4429| 
        MOVL      *+FP[AR0],P           ; [CPU_] |4429| 
        MOVL      XAR0,#22              ; [CPU_] |4429| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4429| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |4429| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |4429| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4429| 
	.dwpsn	file "../Source/prod.c",line 4424,column 5,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |4424| 
        SUBL      *-SP[40],ACC          ; [CPU_] |4424| 
        MOVB      ACC,#0                ; [CPU_] |4424| 
        SUBB      ACC,#1                ; [CPU_] |4424| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |4424| 
        B         $C$L155,NEQ           ; [CPU_] |4424| 
        ; branchcc occurs ; [] |4424| 
$C$L156:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4431,column 5,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |4431| 
        B         $C$L157,NEQ           ; [CPU_] |4431| 
        ; branchcc occurs ; [] |4431| 
	.dwpsn	file "../Source/prod.c",line 4432,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[26]          ; [CPU_] |4432| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4432| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |4432| 
$C$DW$687	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$687, DW_AT_low_pc(0x00)
	.dwattr $C$DW$687, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$687, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |4432| 
        ; call occurs [#FS$$SUB] ; [] |4432| 
        MOVL      XAR6,ACC              ; [CPU_] |4432| 
        MOV       AL,#16384             ; [CPU_] |4432| 
        MOV       AH,#17948             ; [CPU_] |4432| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4432| 
        MOVL      ACC,XAR6              ; [CPU_] |4432| 
$C$DW$688	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$688, DW_AT_low_pc(0x00)
	.dwattr $C$DW$688, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$688, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4432| 
        ; call occurs [#FS$$MPY] ; [] |4432| 
        MOVL      XAR1,ACC              ; [CPU_] |4432| 
        MOVL      P,*-SP[30]            ; [CPU_] |4432| 
        MOVL      ACC,*-SP[28]          ; [CPU_] |4432| 
        SUBUL     P,*-SP[34]            ; [CPU_] |4432| 
        SUBBL     ACC,*-SP[32]          ; [CPU_] |4432| 
$C$DW$689	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$689, DW_AT_low_pc(0x00)
	.dwattr $C$DW$689, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$689, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |4432| 
        ; call occurs [#LL$$TOFS] ; [] |4432| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4432| 
        MOVL      ACC,XAR1              ; [CPU_] |4432| 
$C$DW$690	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$690, DW_AT_low_pc(0x00)
	.dwattr $C$DW$690, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$690, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4432| 
        ; call occurs [#FS$$DIV] ; [] |4432| 
        MOVL      XAR0,#40              ; [CPU_] |4432| 
        MOV       T,*-SP[52]            ; [CPU_] |4432| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4432| 
        MOVL      XAR6,ACC              ; [CPU_] |4432| 
        MOVB      AL,#10                ; [CPU_] |4432| 
        MPYU      ACC,T,AL              ; [CPU_] |4432| 
        ADDL      ACC,XAR7              ; [CPU_] |4432| 
        MOVL      XAR4,ACC              ; [CPU_] |4432| 
        MOVB      XAR0,#44              ; [CPU_] |4432| 
        MOVL      *+XAR4[AR0],XAR6      ; [CPU_] |4432| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4437,column 6,is_stmt,isa 0
$C$DW$691	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$691, DW_AT_low_pc(0x00)
	.dwattr $C$DW$691, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$691, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |4437| 
        ; call occurs [#_ad7738_setcal] ; [] |4437| 
        MOVL      XAR0,#78              ; [CPU_] |4437| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4437| 
	.dwpsn	file "../Source/prod.c",line 4438,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |4438| 
        MOVL      XAR1,ACC              ; [CPU_] |4438| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |4438| 
$C$DW$692	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$692, DW_AT_low_pc(0x00)
	.dwattr $C$DW$692, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$692, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |4438| 
        ; call occurs [#_ad7738_resetpeak] ; [] |4438| 
	.dwpsn	file "../Source/prod.c",line 4439,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4439| 
$C$DW$693	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$693, DW_AT_low_pc(0x00)
	.dwattr $C$DW$693, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$693, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |4439| 
        ; call occurs [#_ad7738_resetvall] ; [] |4439| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 4435,column 6,is_stmt,isa 0
        MOV       *-SP[42],#1           ; [CPU_] |4435| 
$C$L157:    
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4442,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4442| 
$C$L158:    
	.dwpsn	file "../Source/prod.c",line 4443,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4442,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |4442| 
	.dwpsn	file "../Source/prod.c",line 4443,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4442,column 17,is_stmt,isa 0
        MOV       AL,*-SP[53]           ; [CPU_] |4442| 
	.dwpsn	file "../Source/prod.c",line 4443,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4443| 
	.dwpsn	file "../Source/prod.c",line 4442,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |4442| 
        B         $C$L158,HI            ; [CPU_] |4442| 
        ; branchcc occurs ; [] |4442| 
	.dwpsn	file "../Source/prod.c",line 4445,column 5,is_stmt,isa 0
        MOV       *-SP[55],AL           ; [CPU_] |4445| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4448,column 5,is_stmt,isa 0
$C$DW$694	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$694, DW_AT_low_pc(0x00)
	.dwattr $C$DW$694, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$694, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |4448| 
        ; call occurs [#_lcd_clear] ; [] |4448| 
	.dwpsn	file "../Source/prod.c",line 4449,column 5,is_stmt,isa 0
$C$DW$695	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$695, DW_AT_low_pc(0x00)
	.dwattr $C$DW$695, DW_AT_name("_update_units")
	.dwattr $C$DW$695, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |4449| 
        ; call occurs [#_update_units] ; [] |4449| 
	.dwpsn	file "../Source/prod.c",line 4450,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |4450| 
        ; branch occurs ; [] |4450| 
$C$L159:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4373,column 5,is_stmt,isa 0
        CMPB      AL,#12                ; [CPU_] |4373| 
        B         $C$L323,LO            ; [CPU_] |4373| 
        ; branchcc occurs ; [] |4373| 
        MOVL      ACC,XAR4              ; [CPU_] |4373| 
        MOVL      XAR0,#66              ; [CPU_] |4373| 
        ADDB      ACC,#2                ; [CPU_] |4373| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4373| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4373| 
        B         $C$L323,LT            ; [CPU_] |4373| 
        ; branchcc occurs ; [] |4373| 
        MOVL      XAR5,XAR4             ; [CPU_] |4373| 
        MOVL      XAR0,#66              ; [CPU_] |4373| 
        CMPB      AL,#0                 ; [CPU_] |4373| 
        ADDB      XAR5,#2               ; [CPU_] |4373| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4373| 
        B         $C$L323,GT            ; [CPU_] |4373| 
        ; branchcc occurs ; [] |4373| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |4373| 
        CMPB      AH,#2                 ; [CPU_] |4373| 
        B         $C$L323,NEQ           ; [CPU_] |4373| 
        ; branchcc occurs ; [] |4373| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4380| 
        MOVL      XAR0,#66              ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4379,column 5,is_stmt,isa 0
        MOV       *-SP[52],AL           ; [CPU_] |4379| 
	.dwpsn	file "../Source/prod.c",line 4383,column 10,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |4383| 
	.dwpsn	file "../Source/prod.c",line 4380,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4380| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4380| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4380| 
	.dwpsn	file "../Source/prod.c",line 4381,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AH          ; [CPU_] |4381| 
        MOV       *-SP[55],#4           ; [CPU_] |4381| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4383,column 10,is_stmt,isa 0
        B         $C$L162,UNC           ; [CPU_] |4383| 
        ; branch occurs ; [] |4383| 
$C$L160:    
	.dwpsn	file "../Source/prod.c",line 4384,column 6,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |4384| 
        SUBB      XAR4,#26              ; [CPU_U] |4384| 
        MOVZ      AR4,AR4               ; [CPU_] |4384| 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        MOV       ACC,PL << 1           ; [CPU_] |4384| 
        MOVL      XAR0,#44              ; [CPU_] |4384| 
        ADDL      XAR4,ACC              ; [CPU_] |4384| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4384| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR5              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L161:    
	.dwpsn	file "../Source/prod.c",line 4386,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4386| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4386| 
	.dwpsn	file "../Source/prod.c",line 4387,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4387| 
        MOV       *XAR7++,AL            ; [CPU_] |4387| 
	.dwpsn	file "../Source/prod.c",line 4388,column 7,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |4388| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |4388| 
        MOV       *XAR4++,AL            ; [CPU_] |4388| 
	.dwpsn	file "../Source/prod.c",line 4389,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4389| 
        MOV       *XAR7++,AL            ; [CPU_] |4389| 
	.dwpsn	file "../Source/prod.c",line 4385,column 18,is_stmt,isa 0
        BANZ      $C$L161,AR6--         ; [CPU_] |4385| 
        ; branchcc occurs ; [] |4385| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4389,column 7,is_stmt,isa 0
        ADD       *-SP[55],#4           ; [CPU_] |4389| 
	.dwpsn	file "../Source/prod.c",line 4383,column 33,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4383| 
        MOV       PL,AL                 ; [CPU_] |4383| 
$C$L162:    
	.dwpsn	file "../Source/prod.c",line 4383,column 17,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4383| 
        MOV       AL,PL                 ; [CPU_] |4383| 
        CMP       AL,*+XAR5[3]          ; [CPU_] |4383| 
        B         $C$L160,LT            ; [CPU_] |4383| 
        ; branchcc occurs ; [] |4383| 
        B         $C$L765,UNC           ; [CPU_] |4383| 
        ; branch occurs ; [] |4383| 
$C$L163:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5328,column 5,is_stmt,isa 0
        CMPB      AL,#46                ; [CPU_] |5328| 
        B         $C$L323,LO            ; [CPU_] |5328| 
        ; branchcc occurs ; [] |5328| 
	.dwpsn	file "../Source/prod.c",line 5333,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5333| 
        MOVL      XAR0,#66              ; [CPU_] |5333| 
        MOVL      ACC,XAR7              ; [CPU_] |5333| 
        ADDB      ACC,#2                ; [CPU_] |5333| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5333| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5333| 
        CMPB      AL,#4                 ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOVB      XAR0,#13              ; [CPU_] |5333| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5333| 
        CMPB      AL,#4                 ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOVB      XAR0,#24              ; [CPU_] |5333| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5333| 
        CMPB      AL,#4                 ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOVB      XAR0,#35              ; [CPU_] |5333| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5333| 
        CMPB      AL,#4                 ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOVB      XAR0,#14              ; [CPU_] |5333| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOVB      XAR0,#25              ; [CPU_] |5333| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOVB      XAR0,#36              ; [CPU_] |5333| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5333| 
        B         $C$L323,GT            ; [CPU_] |5333| 
        ; branchcc occurs ; [] |5333| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#789 << 2         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1579 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L164:    
	.dwpsn	file "../Source/prod.c",line 5341,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5341| 
        ADD       ACC,#197 << 4         ; [CPU_] |5341| 
        MOVL      XAR6,ACC              ; [CPU_] |5341| 
        MOV       AL,*XAR7              ; [CPU_] |5341| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5341| 
	.dwpsn	file "../Source/prod.c",line 5342,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5342| 
        ADD       ACC,#197 << 4         ; [CPU_] |5342| 
        MOVL      XAR6,ACC              ; [CPU_] |5342| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5342| 
        MOV       *XAR4++,AL            ; [CPU_] |5342| 
	.dwpsn	file "../Source/prod.c",line 5343,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5343| 
        ADD       ACC,#3153 << 0        ; [CPU_] |5343| 
        MOVL      XAR6,ACC              ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5341,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5341| 
	.dwpsn	file "../Source/prod.c",line 5343,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5343| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5344| 
        ADD       ACC,#3153 << 0        ; [CPU_] |5344| 
        MOVL      XAR6,ACC              ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5343,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5344,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5344| 
        MOV       *XAR4++,AL            ; [CPU_] |5344| 
	.dwpsn	file "../Source/prod.c",line 5345,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5345| 
        ANDB      AL,#0xfe              ; [CPU_] |5345| 
        MOVZ      AR0,AL                ; [CPU_] |5345| 
        MOVL      ACC,XAR5              ; [CPU_] |5345| 
        ADD       ACC,#1577 << 1        ; [CPU_] |5345| 
        MOVL      XAR6,ACC              ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |5346| 
        ADD       ACC,#1577 << 1        ; [CPU_] |5346| 
	.dwpsn	file "../Source/prod.c",line 5345,column 6,is_stmt,isa 0
        MOV       *+XAR6[0],AR0         ; [CPU_] |5345| 
	.dwpsn	file "../Source/prod.c",line 5346,column 6,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |5346| 
        MOVL      XAR0,P                ; [CPU_] |5346| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |5346| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5346| 
$C$L165:    
	.dwpsn	file "../Source/prod.c",line 5350,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5350| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5350| 
	.dwpsn	file "../Source/prod.c",line 5351,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5351| 
        MOV       *XAR4++,AL            ; [CPU_] |5351| 
	.dwpsn	file "../Source/prod.c",line 5352,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5352| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5352| 
        MOV       *XAR0++,AL            ; [CPU_] |5352| 
	.dwpsn	file "../Source/prod.c",line 5353,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5353| 
        MOV       *XAR4++,AL            ; [CPU_] |5353| 
	.dwpsn	file "../Source/prod.c",line 5349,column 18,is_stmt,isa 0
        BANZ      $C$L165,AR6--         ; [CPU_] |5349| 
        ; branchcc occurs ; [] |5349| 
	.dwpsn	file "../Source/prod.c",line 5356,column 6,is_stmt,isa 0
        MOVL      XAR0,XAR1             ; [CPU_] |5356| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L166:    
	.dwpsn	file "../Source/prod.c",line 5358,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5358| 
        MOV       *+XAR0[0],AL          ; [CPU_] |5358| 
	.dwpsn	file "../Source/prod.c",line 5359,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5359| 
        MOV       *XAR4++,AL            ; [CPU_] |5359| 
	.dwpsn	file "../Source/prod.c",line 5360,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5360| 
        ADD       AL,*+XAR0[0]          ; [CPU_] |5360| 
        MOV       *XAR0++,AL            ; [CPU_] |5360| 
	.dwpsn	file "../Source/prod.c",line 5361,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5361| 
        MOV       *XAR4++,AL            ; [CPU_] |5361| 
	.dwpsn	file "../Source/prod.c",line 5357,column 18,is_stmt,isa 0
        BANZ      $C$L166,AR6--         ; [CPU_] |5357| 
        ; branchcc occurs ; [] |5357| 
	.dwpsn	file "../Source/prod.c",line 5340,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5340| 
	.dwpsn	file "../Source/prod.c",line 5343,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5343| 
        ADD       *-SP[55],#11          ; [CPU_] |5343| 
	.dwpsn	file "../Source/prod.c",line 5340,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |5340| 
        ADDB      XAR1,#8               ; [CPU_] |5340| 
        ADDB      ACC,#8                ; [CPU_] |5340| 
        SUBB      XAR6,#1               ; [CPU_U] |5340| 
        MOVZ      AR3,AR6               ; [CPU_] |5340| 
        MOVL      P,ACC                 ; [CPU_] |5340| 
        CMP       AR6,#-1               ; [CPU_] |5340| 
        B         $C$L164,NEQ           ; [CPU_] |5340| 
        ; branchcc occurs ; [] |5340| 
        B         $C$L175,UNC           ; [CPU_] |5340| 
        ; branch occurs ; [] |5340| 
$C$L167:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5265,column 5,is_stmt,isa 0
        CMPB      AL,#42                ; [CPU_] |5265| 
        B         $C$L323,LO            ; [CPU_] |5265| 
        ; branchcc occurs ; [] |5265| 
	.dwpsn	file "../Source/prod.c",line 5270,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5270| 
        MOVL      XAR0,#66              ; [CPU_] |5270| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5270| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5270| 
        CMPB      AL,#4                 ; [CPU_] |5270| 
        B         $C$L168,LEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        CMPB      AL,#7                 ; [CPU_] |5270| 
        B         $C$L323,NEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
$C$L168:    
        MOVL      XAR4,#_cmdbuff$2+12   ; [CPU_U] |5270| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5270| 
        CMPB      AL,#4                 ; [CPU_] |5270| 
        B         $C$L169,LEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        CMPB      AL,#7                 ; [CPU_] |5270| 
        B         $C$L323,NEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
$C$L169:    
        MOVL      XAR4,#_cmdbuff$2+22   ; [CPU_U] |5270| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5270| 
        CMPB      AL,#4                 ; [CPU_] |5270| 
        B         $C$L170,LEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        CMPB      AL,#7                 ; [CPU_] |5270| 
        B         $C$L323,NEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
$C$L170:    
        MOVL      XAR4,#_cmdbuff$2+32   ; [CPU_U] |5270| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5270| 
        CMPB      AL,#4                 ; [CPU_] |5270| 
        B         $C$L171,LEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        CMPB      AL,#7                 ; [CPU_] |5270| 
        B         $C$L323,NEQ           ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
$C$L171:    
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5270| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5270| 
        B         $C$L323,GT            ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        MOVB      XAR0,#13              ; [CPU_] |5270| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5270| 
        B         $C$L323,GT            ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        MOVB      XAR0,#23              ; [CPU_] |5270| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5270| 
        B         $C$L323,GT            ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        MOVB      XAR0,#33              ; [CPU_] |5270| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5270| 
        B         $C$L323,GT            ; [CPU_] |5270| 
        ; branchcc occurs ; [] |5270| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR0,XAR1             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#389 << 3         ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
        MOVL      ACC,XAR1              ; [CPU_] 
        ADD       ACC,#1557 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L172:    
	.dwpsn	file "../Source/prod.c",line 5281,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5281| 
        ADD       ACC,#97 << 5          ; [CPU_] |5281| 
        MOVL      XAR5,ACC              ; [CPU_] |5281| 
        MOV       AL,*XAR7              ; [CPU_] |5281| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5282,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5282| 
        ADD       ACC,#97 << 5          ; [CPU_] |5282| 
        MOVL      XAR5,ACC              ; [CPU_] |5282| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5282| 
        MOV       *XAR4++,AL            ; [CPU_] |5282| 
	.dwpsn	file "../Source/prod.c",line 5283,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5283| 
        ADD       ACC,#3105 << 0        ; [CPU_] |5283| 
        MOVL      XAR5,ACC              ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5281,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5281| 
	.dwpsn	file "../Source/prod.c",line 5283,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5283| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        MOVL      ACC,XAR0              ; [CPU_] |5284| 
        ADD       ACC,#3105 << 0        ; [CPU_] |5284| 
        MOVL      XAR5,ACC              ; [CPU_] |5284| 
	.dwpsn	file "../Source/prod.c",line 5283,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5284,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5284| 
        MOVL      XAR5,P                ; [CPU_] |5284| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |5284| 
$C$L173:    
	.dwpsn	file "../Source/prod.c",line 5295,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5295| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5295| 
	.dwpsn	file "../Source/prod.c",line 5296,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5296| 
        MOV       *XAR4++,AL            ; [CPU_] |5296| 
	.dwpsn	file "../Source/prod.c",line 5297,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5297| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5297| 
        MOV       *XAR5++,AL            ; [CPU_] |5297| 
	.dwpsn	file "../Source/prod.c",line 5298,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5298| 
        MOV       *XAR4++,AL            ; [CPU_] |5298| 
	.dwpsn	file "../Source/prod.c",line 5294,column 18,is_stmt,isa 0
        BANZ      $C$L173,AR6--         ; [CPU_] |5294| 
        ; branchcc occurs ; [] |5294| 
	.dwpsn	file "../Source/prod.c",line 5304,column 6,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |5304| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L174:    
	.dwpsn	file "../Source/prod.c",line 5311,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5311| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5311| 
	.dwpsn	file "../Source/prod.c",line 5312,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5312| 
        MOV       *XAR4++,AL            ; [CPU_] |5312| 
	.dwpsn	file "../Source/prod.c",line 5313,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5313| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5313| 
        MOV       *XAR5++,AL            ; [CPU_] |5313| 
	.dwpsn	file "../Source/prod.c",line 5314,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5314| 
        MOV       *XAR4++,AL            ; [CPU_] |5314| 
	.dwpsn	file "../Source/prod.c",line 5310,column 18,is_stmt,isa 0
        BANZ      $C$L174,AR6--         ; [CPU_] |5310| 
        ; branchcc occurs ; [] |5310| 
	.dwpsn	file "../Source/prod.c",line 5280,column 17,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |5280| 
	.dwpsn	file "../Source/prod.c",line 5283,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |5283| 
        ADD       *-SP[55],#10          ; [CPU_] |5283| 
	.dwpsn	file "../Source/prod.c",line 5280,column 17,is_stmt,isa 0
        ADDB      XAR0,#12              ; [CPU_] |5280| 
        ADDB      XAR1,#12              ; [CPU_] |5280| 
        ADDB      ACC,#12               ; [CPU_] |5280| 
        SUBB      XAR6,#1               ; [CPU_U] |5280| 
        MOVZ      AR3,AR6               ; [CPU_] |5280| 
        MOVL      P,ACC                 ; [CPU_] |5280| 
        CMP       AR6,#-1               ; [CPU_] |5280| 
        B         $C$L172,NEQ           ; [CPU_] |5280| 
        ; branchcc occurs ; [] |5280| 
$C$L175:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5321,column 5,is_stmt,isa 0
$C$DW$696	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$696, DW_AT_low_pc(0x00)
	.dwattr $C$DW$696, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$696, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5321| 
        ; call occurs [#_ad7738_setcal] ; [] |5321| 
	.dwpsn	file "../Source/prod.c",line 5324,column 5,is_stmt,isa 0
        B         $C$L186,UNC           ; [CPU_] |5324| 
        ; branch occurs ; [] |5324| 
$C$L176:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5233,column 5,is_stmt,isa 0
        CMPB      AL,#14                ; [CPU_] |5233| 
        B         $C$L323,LO            ; [CPU_] |5233| 
        ; branchcc occurs ; [] |5233| 
	.dwpsn	file "../Source/prod.c",line 5238,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |5238| 
        MOVL      XAR0,#66              ; [CPU_] |5238| 
        MOVL      ACC,XAR7              ; [CPU_] |5238| 
        ADDB      ACC,#2                ; [CPU_] |5238| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5238| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOV       AL,*+XAR7[5]          ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVB      XAR0,#8               ; [CPU_] |5238| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVB      XAR0,#11              ; [CPU_] |5238| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOV       AL,*+XAR7[3]          ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOV       AL,*+XAR7[6]          ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVB      XAR0,#9               ; [CPU_] |5238| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVB      XAR0,#12              ; [CPU_] |5238| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5238| 
        B         $C$L323,GT            ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVL      ACC,XAR7              ; [CPU_] |5238| 
        MOVL      XAR0,#64              ; [CPU_] |5238| 
        ADDB      ACC,#4                ; [CPU_] |5238| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5238| 
        MOV       AL,*+XAR7[4]          ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GEQ           ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOV       AL,*+XAR7[7]          ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GEQ           ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVB      XAR0,#10              ; [CPU_] |5238| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GEQ           ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVB      XAR0,#13              ; [CPU_] |5238| 
        MOV       AL,*+XAR7[AR0]        ; [CPU_] |5238| 
        CMPB      AL,#6                 ; [CPU_] |5238| 
        B         $C$L323,GEQ           ; [CPU_] |5238| 
        ; branchcc occurs ; [] |5238| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#773 << 2         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L177:    
	.dwpsn	file "../Source/prod.c",line 5249,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5249| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5250,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5249,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5249| 
	.dwpsn	file "../Source/prod.c",line 5250,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5250| 
	.dwpsn	file "../Source/prod.c",line 5251,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5251| 
        MOV       *+XAR5[1],AL          ; [CPU_] |5251| 
        ADDB      XAR7,#1               ; [CPU_] |5251| 
	.dwpsn	file "../Source/prod.c",line 5252,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |5252| 
        MOV       *XAR4++,AL            ; [CPU_] |5252| 
	.dwpsn	file "../Source/prod.c",line 5253,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |5253| 
        ADDB      XAR7,#1               ; [CPU_] |5253| 
        MOV       *+XAR5[2],AL          ; [CPU_] |5253| 
	.dwpsn	file "../Source/prod.c",line 5254,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |5254| 
	.dwpsn	file "../Source/prod.c",line 5248,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |5248| 
	.dwpsn	file "../Source/prod.c",line 5254,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |5254| 
	.dwpsn	file "../Source/prod.c",line 5248,column 17,is_stmt,isa 0
        BANZ      $C$L177,AR6--         ; [CPU_] |5248| 
        ; branchcc occurs ; [] |5248| 
	.dwpsn	file "../Source/prod.c",line 5258,column 5,is_stmt,isa 0
$C$DW$697	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$697, DW_AT_low_pc(0x00)
	.dwattr $C$DW$697, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$697, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5258| 
        ; call occurs [#_lcd_clear] ; [] |5258| 
	.dwpsn	file "../Source/prod.c",line 5259,column 5,is_stmt,isa 0
$C$DW$698	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$698, DW_AT_low_pc(0x00)
	.dwattr $C$DW$698, DW_AT_name("_update_units")
	.dwattr $C$DW$698, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5259| 
        ; call occurs [#_update_units] ; [] |5259| 
	.dwpsn	file "../Source/prod.c",line 5254,column 6,is_stmt,isa 0
        ADD       *-SP[55],#12          ; [CPU_] |5254| 
	.dwpsn	file "../Source/prod.c",line 5261,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |5261| 
        ; branch occurs ; [] |5261| 
$C$L178:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5212,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5212| 
        B         $C$L323,LO            ; [CPU_] |5212| 
        ; branchcc occurs ; [] |5212| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5217,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5217| 
        MOVB      XAR0,#36              ; [CPU_] |5217| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5217| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5217| 
	.dwpsn	file "../Source/prod.c",line 5218,column 5,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |5218| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5218| 
        B         $C$L179,NEQ           ; [CPU_] |5218| 
        ; branchcc occurs ; [] |5218| 
	.dwpsn	file "../Source/prod.c",line 5220,column 7,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |5220| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5220| 
        MOVW      DP,#_tagwasthere      ; [CPU_U] 
        MOV       @_tagwasthere,#0      ; [CPU_] |5220| 
	.dwpsn	file "../Source/prod.c",line 5221,column 7,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |5221| 
	.dwpsn	file "../Source/prod.c",line 5223,column 6,is_stmt,isa 0
$C$DW$699	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$699, DW_AT_low_pc(0x00)
	.dwattr $C$DW$699, DW_AT_name("_update_units")
	.dwattr $C$DW$699, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5223| 
        ; call occurs [#_update_units] ; [] |5223| 
$C$L179:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5227,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5227| 
	.dwpsn	file "../Source/prod.c",line 5229,column 5,is_stmt,isa 0
        B         $C$L231,UNC           ; [CPU_] |5229| 
        ; branch occurs ; [] |5229| 
$C$L180:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5171,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5171| 
        B         $C$L323,LO            ; [CPU_] |5171| 
        ; branchcc occurs ; [] |5171| 
	.dwpsn	file "../Source/prod.c",line 5177,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5177| 
        ADDB      XAR4,#2               ; [CPU_] |5177| 
        MOV       ACC,*+XAR5[3] << #8   ; [CPU_] |5177| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5177| 
        MOVZ      AR3,AL                ; [CPU_] |5177| 
	.dwpsn	file "../Source/prod.c",line 5178,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5178| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5178| 
        CMP       AR3,#4096             ; [CPU_] |5178| 
        B         $C$L323,HI            ; [CPU_] |5178| 
        ; branchcc occurs ; [] |5178| 
	.dwpsn	file "../Source/prod.c",line 5184,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |5184| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        ADDB      XAR5,#5               ; [CPU_] 
        SUBB      XAR6,#12              ; [CPU_U] |5184| 
        MOVZ      AR7,AR6               ; [CPU_] |5184| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L181:    
	.dwpsn	file "../Source/prod.c",line 5186,column 6,is_stmt,isa 0
        MOV       ACC,*+XAR5[0] << #8   ; [CPU_] |5186| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |5186| 
	.dwpsn	file "../Source/prod.c",line 5185,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5185| 
        ADDB      XAR4,#2               ; [CPU_] |5185| 
	.dwpsn	file "../Source/prod.c",line 5186,column 6,is_stmt,isa 0
        MOV       *XAR7++,AL            ; [CPU_] |5186| 
	.dwpsn	file "../Source/prod.c",line 5185,column 17,is_stmt,isa 0
        BANZ      $C$L181,AR6--         ; [CPU_] |5185| 
        ; branchcc occurs ; [] |5185| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5191,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5191| 
        MOVB      XAR1,#38              ; [CPU_] |5191| 
        SPM       #0                    ; [CPU_] 
        MOV       *+XAR4[AR1],AR3       ; [CPU_] |5191| 
	.dwpsn	file "../Source/prod.c",line 5192,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[12]          ; [CPU_] |5192| 
        MOVB      XAR1,#40              ; [CPU_] |5192| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |5192| 
	.dwpsn	file "../Source/prod.c",line 5193,column 5,is_stmt,isa 0
$C$DW$700	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$700, DW_AT_low_pc(0x00)
	.dwattr $C$DW$700, DW_AT_name("_maf_rst")
	.dwattr $C$DW$700, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |5193| 
        ; call occurs [#_maf_rst] ; [] |5193| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5198,column 5,is_stmt,isa 0
        AND       AL,AR3,#0x00ff        ; [CPU_] |5198| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5198| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5198,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |5198| 
	.dwpsn	file "../Source/prod.c",line 5199,column 5,is_stmt,isa 0
        MOV       AL,AR3                ; [CPU_] |5199| 
        LSR       AL,8                  ; [CPU_] |5199| 
        MOV       *+XAR4[3],AL          ; [CPU_] |5199| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |5202| 
        MOVB      XAR1,#40              ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOVL      XAR6,XAR5             ; [CPU_] |5203| 
        MOVL      XAR0,#50              ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR1]        ; [CPU_] |5202| 
        ANDB      AL,#0xff              ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        ADDB      XAR6,#40              ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5202,column 5,is_stmt,isa 0
        MOV       *+XAR4[4],AL          ; [CPU_] |5202| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR6        ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        MOVB      XAR0,#41              ; [CPU_] |5204| 
	.dwpsn	file "../Source/prod.c",line 5203,column 5,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |5203| 
        LSR       AL,8                  ; [CPU_] |5203| 
        MOV       *+XAR4[5],AL          ; [CPU_] |5203| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |5204| 
        AND       AH,AL,#0x00ff         ; [CPU_] |5204| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5204,column 5,is_stmt,isa 0
        MOV       *+XAR4[6],AH          ; [CPU_] |5204| 
	.dwpsn	file "../Source/prod.c",line 5205,column 5,is_stmt,isa 0
        MOV       *+XAR4[7],AL          ; [CPU_] |5205| 
        MOV       *-SP[55],#8           ; [CPU_] |5205| 
	.dwpsn	file "../Source/prod.c",line 5208,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |5208| 
        ; branch occurs ; [] |5208| 
$C$L182:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5138,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5138| 
        B         $C$L323,LO            ; [CPU_] |5138| 
        ; branchcc occurs ; [] |5138| 
        MOVL      ACC,XAR4              ; [CPU_] |5138| 
        MOVL      XAR0,#66              ; [CPU_] |5138| 
        ADDB      ACC,#2                ; [CPU_] |5138| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5138| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5138| 
        B         $C$L323,LT            ; [CPU_] |5138| 
        ; branchcc occurs ; [] |5138| 
        MOVL      XAR5,XAR4             ; [CPU_] |5138| 
        MOVL      XAR0,#66              ; [CPU_] |5138| 
        CMPB      AL,#0                 ; [CPU_] |5138| 
        ADDB      XAR5,#2               ; [CPU_] |5138| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5138| 
        B         $C$L323,GT            ; [CPU_] |5138| 
        ; branchcc occurs ; [] |5138| 
        MOV       AH,*+XAR4[3]          ; [CPU_] |5138| 
        B         $C$L323,LT            ; [CPU_] |5138| 
        ; branchcc occurs ; [] |5138| 
        CMPB      AH,#20                ; [CPU_] |5138| 
        B         $C$L323,GEQ           ; [CPU_] |5138| 
        ; branchcc occurs ; [] |5138| 
	.dwpsn	file "../Source/prod.c",line 5148,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |5148| 
        MOVL      XAR0,#66              ; [CPU_] |5148| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5148| 
        MOVL      XAR0,#80              ; [CPU_] |5148| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |5148| 
	.dwpsn	file "../Source/prod.c",line 5146,column 5,is_stmt,isa 0
        MOVL      *-SP[52],ACC          ; [CPU_] |5146| 
	.dwpsn	file "../Source/prod.c",line 5148,column 5,is_stmt,isa 0
        MOVZ      AR0,*-SP[52]          ; [CPU_] |5148| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |5148| 
        B         $C$L321,NEQ           ; [CPU_] |5148| 
        ; branchcc occurs ; [] |5148| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 5154,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5154| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5154| 
        MOVB      AL,#10                ; [CPU_] |5154| 
        MOV       T,*-SP[52]            ; [CPU_] |5154| 
        MPYU      ACC,T,AL              ; [CPU_] |5154| 
        ADDL      ACC,XAR6              ; [CPU_] |5154| 
        MOVL      XAR4,ACC              ; [CPU_] |5154| 
        MOVB      XAR0,#42              ; [CPU_] |5154| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] |5154| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |5154| 
	.dwpsn	file "../Source/prod.c",line 5155,column 5,is_stmt,isa 0
$C$DW$701	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$701, DW_AT_low_pc(0x00)
	.dwattr $C$DW$701, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$701, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5155| 
        ; call occurs [#_ad7738_setcal] ; [] |5155| 
        MOVL      XAR0,#78              ; [CPU_] |5155| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5155| 
	.dwpsn	file "../Source/prod.c",line 5157,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |5157| 
        MOVL      XAR1,ACC              ; [CPU_] |5157| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |5157| 
$C$DW$702	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$702, DW_AT_low_pc(0x00)
	.dwattr $C$DW$702, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$702, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5157| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5157| 
	.dwpsn	file "../Source/prod.c",line 5158,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |5158| 
$C$DW$703	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$703, DW_AT_low_pc(0x00)
	.dwattr $C$DW$703, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$703, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5158| 
        ; call occurs [#_ad7738_resetvall] ; [] |5158| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5161,column 5,is_stmt,isa 0
$C$DW$704	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$704, DW_AT_low_pc(0x00)
	.dwattr $C$DW$704, DW_AT_name("_update_units")
	.dwattr $C$DW$704, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5161| 
        ; call occurs [#_update_units] ; [] |5161| 
	.dwpsn	file "../Source/prod.c",line 5164,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5164| 
        MOV       AL,*-SP[52]           ; [CPU_] |5164| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5164| 
        MOV       AL,*-SP[51]           ; [CPU_] |5164| 
	.dwpsn	file "../Source/prod.c",line 5165,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |5165| 
        MOV       *-SP[55],#4           ; [CPU_] |5165| 
	.dwpsn	file "../Source/prod.c",line 5167,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |5167| 
        ; branch occurs ; [] |5167| 
$C$L183:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5102,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |5102| 
        B         $C$L323,LO            ; [CPU_] |5102| 
        ; branchcc occurs ; [] |5102| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVL      ACC,*-SP[60]          ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVB      XAR4,#1               ; [CPU_] 
$C$L184:    
	.dwpsn	file "../Source/prod.c",line 5108,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |5108| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L185:    
	.dwpsn	file "../Source/prod.c",line 5110,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |5110| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5110| 
	.dwpsn	file "../Source/prod.c",line 5111,column 7,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5111| 
        MOV       *XAR5++,AL            ; [CPU_] |5111| 
	.dwpsn	file "../Source/prod.c",line 5112,column 7,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |5112| 
        ADD       AL,*+XAR1[0]          ; [CPU_] |5112| 
        MOV       *XAR1++,AL            ; [CPU_] |5112| 
	.dwpsn	file "../Source/prod.c",line 5113,column 7,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5113| 
        MOV       *XAR5++,AL            ; [CPU_] |5113| 
	.dwpsn	file "../Source/prod.c",line 5109,column 18,is_stmt,isa 0
        BANZ      $C$L185,AR6--         ; [CPU_] |5109| 
        ; branchcc occurs ; [] |5109| 
	.dwpsn	file "../Source/prod.c",line 5107,column 17,is_stmt,isa 0
        ADDB      XAR0,#2               ; [CPU_] |5107| 
	.dwpsn	file "../Source/prod.c",line 5113,column 7,is_stmt,isa 0
        ADD       *-SP[55],#4           ; [CPU_] |5113| 
	.dwpsn	file "../Source/prod.c",line 5107,column 17,is_stmt,isa 0
        BANZ      $C$L184,AR4--         ; [CPU_] |5107| 
        ; branchcc occurs ; [] |5107| 
	.dwpsn	file "../Source/prod.c",line 5118,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |5118| 
        MOVL      ACC,XAR4              ; [CPU_] |5118| 
        ADD       ACC,#199 << 4         ; [CPU_] |5118| 
        MOVL      XAR6,ACC              ; [CPU_] |5118| 
        MOV       AL,*XAR7              ; [CPU_] |5118| 
        MOV       *+XAR6[0],AL          ; [CPU_] |5118| 
	.dwpsn	file "../Source/prod.c",line 5119,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5119| 
        MOVL      XAR6,XAR4             ; [CPU_] |5119| 
        ADD       ACC,#199 << 4         ; [CPU_] |5119| 
        MOVL      XAR4,ACC              ; [CPU_] |5119| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5119| 
        ANDB      AL,#0xff              ; [CPU_] |5119| 
        MOV       *XAR5++,AL            ; [CPU_] |5119| 
	.dwpsn	file "../Source/prod.c",line 5120,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5120| 
        ADD       ACC,#199 << 4         ; [CPU_] |5120| 
        MOVL      XAR4,ACC              ; [CPU_] |5120| 
	.dwpsn	file "../Source/prod.c",line 5118,column 5,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |5118| 
	.dwpsn	file "../Source/prod.c",line 5120,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR7[0] << #8   ; [CPU_] |5120| 
        ADD       *+XAR4[0],AL          ; [CPU_] |5120| 
	.dwpsn	file "../Source/prod.c",line 5121,column 5,is_stmt,isa 0
        MOVL      ACC,XAR6              ; [CPU_] |5121| 
        ADD       ACC,#199 << 4         ; [CPU_] |5121| 
        MOVL      XAR4,ACC              ; [CPU_] |5121| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5121| 
        LSR       AL,8                  ; [CPU_] |5121| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5121| 
	.dwpsn	file "../Source/prod.c",line 5120,column 5,is_stmt,isa 0
        ADD       *-SP[55],#2           ; [CPU_] |5120| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5126,column 5,is_stmt,isa 0
$C$DW$705	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$705, DW_AT_low_pc(0x00)
	.dwattr $C$DW$705, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$705, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5126| 
        ; call occurs [#_ad7738_setcal] ; [] |5126| 
	.dwpsn	file "../Source/prod.c",line 5127,column 5,is_stmt,isa 0
$C$DW$706	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$706, DW_AT_low_pc(0x00)
	.dwattr $C$DW$706, DW_AT_name("_velf_rst")
	.dwattr $C$DW$706, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |5127| 
        ; call occurs [#_velf_rst] ; [] |5127| 
$C$L186:    
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5131,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |5131| 
        ; branch occurs ; [] |5131| 
$C$L187:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5063,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5063| 
        B         $C$L323,LO            ; [CPU_] |5063| 
        ; branchcc occurs ; [] |5063| 
        MOVL      ACC,XAR4              ; [CPU_] |5063| 
        MOVL      XAR0,#66              ; [CPU_] |5063| 
        ADDB      ACC,#2                ; [CPU_] |5063| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5063| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |5063| 
        B         $C$L323,LT            ; [CPU_] |5063| 
        ; branchcc occurs ; [] |5063| 
        MOVL      XAR5,XAR4             ; [CPU_] |5063| 
        MOVL      XAR0,#66              ; [CPU_] |5063| 
        CMPB      AL,#20                ; [CPU_] |5063| 
        ADDB      XAR5,#2               ; [CPU_] |5063| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5063| 
        B         $C$L323,GEQ           ; [CPU_] |5063| 
        ; branchcc occurs ; [] |5063| 
	.dwpsn	file "../Source/prod.c",line 5067,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |5067| 
	.dwpsn	file "../Source/prod.c",line 5068,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5068| 
	.dwpsn	file "../Source/prod.c",line 5070,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5070| 
	.dwpsn	file "../Source/prod.c",line 5068,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |5068| 
	.dwpsn	file "../Source/prod.c",line 5070,column 5,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |5070| 
        ADDB      ACC,#2                ; [CPU_] |5070| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5070| 
        MOVL      XAR0,#40              ; [CPU_] |5070| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5070| 
        MOV       T,*-SP[51]            ; [CPU_] |5070| 
        MOVB      AL,#152               ; [CPU_] |5070| 
        MPYU      ACC,T,AL              ; [CPU_] |5070| 
        ADDL      ACC,XAR6              ; [CPU_] |5070| 
        ADDB      ACC,#194              ; [CPU_] |5070| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |5070| 
        ADDB      XAR5,#3               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L188:    
	.dwpsn	file "../Source/prod.c",line 5072,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5072| 
        MOV       *+XAR7[0],AL          ; [CPU_] |5072| 
	.dwpsn	file "../Source/prod.c",line 5073,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5073| 
        MOV       *XAR5++,AL            ; [CPU_] |5073| 
	.dwpsn	file "../Source/prod.c",line 5074,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5074| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |5074| 
        MOV       *XAR7++,AL            ; [CPU_] |5074| 
	.dwpsn	file "../Source/prod.c",line 5075,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5075| 
        MOV       *XAR5++,AL            ; [CPU_] |5075| 
	.dwpsn	file "../Source/prod.c",line 5071,column 17,is_stmt,isa 0
        BANZ      $C$L188,AR6--         ; [CPU_] |5071| 
        ; branchcc occurs ; [] |5071| 
	.dwpsn	file "../Source/prod.c",line 5080,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |5080| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5080| 
        MOVB      AL,#152               ; [CPU_] |5080| 
        MPYU      ACC,T,AL              ; [CPU_] |5080| 
        ADDL      ACC,XAR6              ; [CPU_] |5080| 
        MOVL      XAR1,ACC              ; [CPU_] |5080| 
        MOVB      XAR0,#95              ; [CPU_] |5080| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |5080| 
        CMPB      AL,#247               ; [CPU_] |5080| 
        B         $C$L191,NEQ           ; [CPU_] |5080| 
        ; branchcc occurs ; [] |5080| 
	.dwpsn	file "../Source/prod.c",line 5082,column 6,is_stmt,isa 0
        MOVB      XAR0,#194             ; [CPU_] |5082| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |5082| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5082| 
        MOV       AL,#0                 ; [CPU_] |5082| 
        MOV       AH,#17096             ; [CPU_] |5082| 
$C$DW$707	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$707, DW_AT_low_pc(0x00)
	.dwattr $C$DW$707, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$707, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |5082| 
        ; call occurs [#FS$$DIV] ; [] |5082| 
        MOVB      XAR0,#96              ; [CPU_] |5082| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |5082| 
        MOVL      XAR0,#40              ; [CPU_] |5082| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |5082| 
	.dwpsn	file "../Source/prod.c",line 5085,column 11,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |5085| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L189:    
	.dwpsn	file "../Source/prod.c",line 5086,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[51]          ; [CPU_] |5086| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5086| 
        CMPL      ACC,XAR6              ; [CPU_] |5086| 
        B         $C$L190,NEQ           ; [CPU_] |5086| 
        ; branchcc occurs ; [] |5086| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5089,column 8,is_stmt,isa 0
$C$DW$708	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$708, DW_AT_low_pc(0x00)
	.dwattr $C$DW$708, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$708, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5089| 
        ; call occurs [#_ad7738_setcal] ; [] |5089| 
        MOVL      XAR0,#78              ; [CPU_] |5089| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5089| 
	.dwpsn	file "../Source/prod.c",line 5090,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |5090| 
        MOVL      XAR4,ACC              ; [CPU_] |5090| 
        MOVL      *-SP[58],ACC          ; [CPU_] |5090| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5090| 
$C$DW$709	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$709, DW_AT_low_pc(0x00)
	.dwattr $C$DW$709, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$709, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5090| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5090| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |5090| 
	.dwpsn	file "../Source/prod.c",line 5091,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5091| 
$C$DW$710	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$710, DW_AT_low_pc(0x00)
	.dwattr $C$DW$710, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$710, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5091| 
        ; call occurs [#_ad7738_resetvall] ; [] |5091| 
 clrc INTM
$C$L190:    
	.dwpsn	file "../Source/prod.c",line 5085,column 19,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |5085| 
        ADDB      XAR1,#10              ; [CPU_] |5085| 
        B         $C$L189,EQ            ; [CPU_] |5085| 
        ; branchcc occurs ; [] |5085| 
$C$L191:    
	.dwpsn	file "../Source/prod.c",line 5074,column 6,is_stmt,isa 0
        MOV       *-SP[55],#7           ; [CPU_] |5074| 
	.dwpsn	file "../Source/prod.c",line 5098,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |5098| 
        ; branch occurs ; [] |5098| 
$C$L192:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4962,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4962| 
        B         $C$L323,LO            ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
        MOVL      ACC,XAR4              ; [CPU_] |4962| 
        MOVL      XAR0,#66              ; [CPU_] |4962| 
        ADDB      ACC,#2                ; [CPU_] |4962| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4962| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |4962| 
        B         $C$L323,LT            ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
        MOVL      XAR5,XAR4             ; [CPU_] |4962| 
        MOVL      XAR0,#66              ; [CPU_] |4962| 
        CMPB      AL,#20                ; [CPU_] |4962| 
        ADDB      XAR5,#2               ; [CPU_] |4962| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4962| 
        B         $C$L323,GEQ           ; [CPU_] |4962| 
        ; branchcc occurs ; [] |4962| 
	.dwpsn	file "../Source/prod.c",line 4967,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |4967| 
        MOVL      XAR0,#66              ; [CPU_] |4967| 
        MOV       *-SP[51],AL           ; [CPU_] |4967| 
        ADDB      XAR5,#2               ; [CPU_] |4967| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4967| 
	.dwpsn	file "../Source/prod.c",line 4968,column 5,is_stmt,isa 0
        MOVZ      AR6,*+XAR4[3]         ; [CPU_] |4968| 
        MOV       AL,AR6                ; [CPU_] |4968| 
        CMPB      AL,#247               ; [CPU_] |4968| 
        B         $C$L193,EQ            ; [CPU_] |4968| 
        ; branchcc occurs ; [] |4968| 
	.dwpsn	file "../Source/prod.c",line 4970,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |4970| 
        MOVL      XAR0,#66              ; [CPU_] |4970| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4970| 
        MOVL      XAR0,#40              ; [CPU_] |4970| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4970| 
        MOVB      AL,#152               ; [CPU_] |4970| 
        MOV       T,*-SP[51]            ; [CPU_] |4970| 
        MPYU      ACC,T,AL              ; [CPU_] |4970| 
        ADDL      ACC,XAR7              ; [CPU_] |4970| 
        MOVL      XAR4,ACC              ; [CPU_] |4970| 
        MOVB      XAR0,#94              ; [CPU_] |4970| 
        MOV       PH,#0                 ; [CPU_] |4970| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4970| 
        ANDB      AL,#0xf0              ; [CPU_] |4970| 
        MOVU      ACC,AL                ; [CPU_] |4970| 
        MOVL      XAR7,ACC              ; [CPU_] |4970| 
        MOV       AL,AR6                ; [CPU_] |4970| 
        ANDB      AL,#240               ; [CPU_] |4970| 
        MOV       PL,AL                 ; [CPU_] |4970| 
        MOVL      ACC,XAR7              ; [CPU_] |4970| 
        CMPL      ACC,P                 ; [CPU_] |4970| 
        B         $C$L323,NEQ           ; [CPU_] |4970| 
        ; branchcc occurs ; [] |4970| 
$C$L193:    
	.dwpsn	file "../Source/prod.c",line 4976,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4976| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4976| 
        MOVB      AL,#152               ; [CPU_] |4976| 
        MOV       T,*-SP[51]            ; [CPU_] |4976| 
        MPYU      ACC,T,AL              ; [CPU_] |4976| 
        ADDL      ACC,XAR7              ; [CPU_] |4976| 
        MOVL      XAR1,ACC              ; [CPU_] |4976| 
        MOVB      XAR0,#95              ; [CPU_] |4976| 
	.dwpsn	file "../Source/prod.c",line 4977,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4977| 
	.dwpsn	file "../Source/prod.c",line 4976,column 5,is_stmt,isa 0
        MOV       *+XAR1[AR0],AR6       ; [CPU_] |4976| 
	.dwpsn	file "../Source/prod.c",line 4977,column 5,is_stmt,isa 0
        MOV       AL,*-SP[51]           ; [CPU_] |4977| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4977| 
	.dwpsn	file "../Source/prod.c",line 4978,column 5,is_stmt,isa 0
        ADDB      XAR1,#94              ; [CPU_] |4978| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |4978| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4978| 
        MOV       AL,AR6                ; [CPU_] |4978| 
        MOV       *-SP[55],#4           ; [CPU_] |4978| 
	.dwpsn	file "../Source/prod.c",line 4980,column 5,is_stmt,isa 0
        CMPB      AL,#247               ; [CPU_] |4980| 
        B         $C$L203,EQ            ; [CPU_] |4980| 
        ; branchcc occurs ; [] |4980| 
	.dwpsn	file "../Source/prod.c",line 4983,column 12,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4983| 
        CMP       AL,*+XAR1[1]          ; [CPU_] |4983| 
        B         $C$L202,EQ            ; [CPU_] |4983| 
        ; branchcc occurs ; [] |4983| 
	.dwpsn	file "../Source/prod.c",line 4987,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4987| 
        CMPB      AL,#34                ; [CPU_] |4987| 
        B         $C$L194,GT            ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        CMPB      AL,#34                ; [CPU_] |4987| 
        B         $C$L198,EQ            ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        CMPB      AL,#16                ; [CPU_] |4987| 
        B         $C$L201,EQ            ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        CMPB      AL,#17                ; [CPU_] |4987| 
        B         $C$L200,EQ            ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        B         $C$L202,UNC           ; [CPU_] |4987| 
        ; branch occurs ; [] |4987| 
$C$L194:    
        CMPB      AL,#35                ; [CPU_] |4987| 
        B         $C$L196,EQ            ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        CMPB      AL,#36                ; [CPU_] |4987| 
        B         $C$L202,NEQ           ; [CPU_] |4987| 
        ; branchcc occurs ; [] |4987| 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5028,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5028| 
        B         $C$L195,EQ            ; [CPU_] |5028| 
        ; branchcc occurs ; [] |5028| 
        CMPB      AL,#35                ; [CPU_] |5028| 
        B         $C$L205,NEQ           ; [CPU_] |5028| 
        ; branchcc occurs ; [] |5028| 
	.dwpsn	file "../Source/prod.c",line 5033,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |5033| 
        MOV       AH,#15820             ; [CPU_] |5033| 
	.dwpsn	file "../Source/prod.c",line 5034,column 8,is_stmt,isa 0
        B         $C$L204,UNC           ; [CPU_] |5034| 
        ; branch occurs ; [] |5034| 
$C$L195:    
	.dwpsn	file "../Source/prod.c",line 5030,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |5030| 
        MOV       AH,#15649             ; [CPU_] |5030| 
	.dwpsn	file "../Source/prod.c",line 5031,column 8,is_stmt,isa 0
        B         $C$L204,UNC           ; [CPU_] |5031| 
        ; branch occurs ; [] |5031| 
$C$L196:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5016,column 7,is_stmt,isa 0
        CMPB      AL,#34                ; [CPU_] |5016| 
        B         $C$L197,EQ            ; [CPU_] |5016| 
        ; branchcc occurs ; [] |5016| 
        CMPB      AL,#36                ; [CPU_] |5016| 
        B         $C$L205,NEQ           ; [CPU_] |5016| 
        ; branchcc occurs ; [] |5016| 
	.dwpsn	file "../Source/prod.c",line 5021,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5021| 
        MOV       AH,#16672             ; [CPU_] |5021| 
	.dwpsn	file "../Source/prod.c",line 5022,column 8,is_stmt,isa 0
        B         $C$L204,UNC           ; [CPU_] |5022| 
        ; branch occurs ; [] |5022| 
$C$L197:    
	.dwpsn	file "../Source/prod.c",line 5018,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |5018| 
        MOV       AH,#16073             ; [CPU_] |5018| 
	.dwpsn	file "../Source/prod.c",line 5019,column 8,is_stmt,isa 0
        B         $C$L204,UNC           ; [CPU_] |5019| 
        ; branch occurs ; [] |5019| 
$C$L198:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5004,column 7,is_stmt,isa 0
        CMPB      AL,#35                ; [CPU_] |5004| 
        B         $C$L199,EQ            ; [CPU_] |5004| 
        ; branchcc occurs ; [] |5004| 
        CMPB      AL,#36                ; [CPU_] |5004| 
        B         $C$L205,NEQ           ; [CPU_] |5004| 
        ; branchcc occurs ; [] |5004| 
	.dwpsn	file "../Source/prod.c",line 5009,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |5009| 
        MOV       AH,#16843             ; [CPU_] |5009| 
	.dwpsn	file "../Source/prod.c",line 5010,column 8,is_stmt,isa 0
        B         $C$L204,UNC           ; [CPU_] |5010| 
        ; branch occurs ; [] |5010| 
$C$L199:    
	.dwpsn	file "../Source/prod.c",line 5006,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |5006| 
        MOV       AH,#16418             ; [CPU_] |5006| 
	.dwpsn	file "../Source/prod.c",line 5007,column 8,is_stmt,isa 0
        B         $C$L204,UNC           ; [CPU_] |5007| 
        ; branch occurs ; [] |5007| 
$C$L200:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4997,column 7,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4997| 
        B         $C$L205,NEQ           ; [CPU_] |4997| 
        ; branchcc occurs ; [] |4997| 
	.dwpsn	file "../Source/prod.c",line 4998,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |4998| 
        MOV       AH,#16397             ; [CPU_] |4998| 
        B         $C$L204,UNC           ; [CPU_] |4998| 
        ; branch occurs ; [] |4998| 
$C$L201:    
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4990,column 7,is_stmt,isa 0
        CMPB      AL,#17                ; [CPU_] |4990| 
        B         $C$L205,NEQ           ; [CPU_] |4990| 
        ; branchcc occurs ; [] |4990| 
	.dwpsn	file "../Source/prod.c",line 4991,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |4991| 
        MOV       AH,#16104             ; [CPU_] |4991| 
        B         $C$L204,UNC           ; [CPU_] |4991| 
        ; branch occurs ; [] |4991| 
$C$L202:    
	.dwpsn	file "../Source/prod.c",line 4985,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |4985| 
	.dwpsn	file "../Source/prod.c",line 4986,column 5,is_stmt,isa 0
        B         $C$L204,UNC           ; [CPU_] |4986| 
        ; branch occurs ; [] |4986| 
$C$L203:    
	.dwpsn	file "../Source/prod.c",line 4981,column 6,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |4981| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |4981| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4981| 
        MOV       AL,#0                 ; [CPU_] |4981| 
        MOV       AH,#17096             ; [CPU_] |4981| 
$C$DW$711	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$711, DW_AT_low_pc(0x00)
	.dwattr $C$DW$711, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$711, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |4981| 
        ; call occurs [#FS$$DIV] ; [] |4981| 
$C$L204:    
        MOVL      *+XAR1[2],ACC         ; [CPU_] |4981| 
$C$L205:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5047,column 10,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |5047| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L206:    
	.dwpsn	file "../Source/prod.c",line 5048,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[51]          ; [CPU_] |5048| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |5048| 
        CMPL      ACC,XAR6              ; [CPU_] |5048| 
        B         $C$L207,NEQ           ; [CPU_] |5048| 
        ; branchcc occurs ; [] |5048| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5049,column 7,is_stmt,isa 0
$C$DW$712	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$712, DW_AT_low_pc(0x00)
	.dwattr $C$DW$712, DW_AT_name("_update_units")
	.dwattr $C$DW$712, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5049| 
        ; call occurs [#_update_units] ; [] |5049| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5051,column 7,is_stmt,isa 0
$C$DW$713	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$713, DW_AT_low_pc(0x00)
	.dwattr $C$DW$713, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$713, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5051| 
        ; call occurs [#_ad7738_setcal] ; [] |5051| 
        MOVL      XAR0,#78              ; [CPU_] |5051| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |5051| 
	.dwpsn	file "../Source/prod.c",line 5052,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |5052| 
        MOVL      XAR4,ACC              ; [CPU_] |5052| 
        MOVL      *-SP[58],ACC          ; [CPU_] |5052| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5052| 
$C$DW$714	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$714, DW_AT_low_pc(0x00)
	.dwattr $C$DW$714, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$714, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5052| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5052| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |5052| 
	.dwpsn	file "../Source/prod.c",line 5053,column 7,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |5053| 
$C$DW$715	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$715, DW_AT_low_pc(0x00)
	.dwattr $C$DW$715, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$715, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5053| 
        ; call occurs [#_ad7738_resetvall] ; [] |5053| 
 clrc INTM
$C$L207:    
	.dwpsn	file "../Source/prod.c",line 5047,column 18,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |5047| 
        ADDB      XAR1,#10              ; [CPU_] |5047| 
        B         $C$L206,EQ            ; [CPU_] |5047| 
        ; branchcc occurs ; [] |5047| 
        B         $C$L307,UNC           ; [CPU_] |5047| 
        ; branch occurs ; [] |5047| 
$C$L208:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4934,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4934| 
        B         $C$L323,LO            ; [CPU_] |4934| 
        ; branchcc occurs ; [] |4934| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4934| 
        MOVL      XAR0,#66              ; [CPU_] |4934| 
        MOVL      ACC,XAR7              ; [CPU_] |4934| 
        ADDB      ACC,#2                ; [CPU_] |4934| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4934| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4934| 
        B         $C$L323,LT            ; [CPU_] |4934| 
        ; branchcc occurs ; [] |4934| 
        ADDB      XAR4,#2               ; [CPU_] |4934| 
        MOVL      XAR0,#66              ; [CPU_] |4934| 
        CMPB      AL,#20                ; [CPU_] |4934| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4934| 
        B         $C$L323,GEQ           ; [CPU_] |4934| 
        ; branchcc occurs ; [] |4934| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4934| 
        MOVB      AH,#4                 ; [CPU_] |4934| 
        ADD       AH,AR6                ; [CPU_] |4934| 
        CMP       AH,*-SP[53]           ; [CPU_] |4934| 
        B         $C$L323,HI            ; [CPU_] |4934| 
        ; branchcc occurs ; [] |4934| 
	.dwpsn	file "../Source/prod.c",line 4939,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |4939| 
	.dwpsn	file "../Source/prod.c",line 4940,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4940| 
        MOVL      XAR0,#66              ; [CPU_] |4940| 
        MOVW      DP,#_buff$1+2         ; [CPU_U] 
        ADDB      ACC,#2                ; [CPU_] |4940| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4940| 
        MOV       AL,*-SP[51]           ; [CPU_] |4940| 
        MOV       @_buff$1+2,AL         ; [CPU_] |4940| 
        MOV       AL,AR6                ; [CPU_] |4940| 
	.dwpsn	file "../Source/prod.c",line 4942,column 5,is_stmt,isa 0
        CMPB      AL,#16                ; [CPU_] |4942| 
        MOVB      XAR6,#15,HIS          ; [CPU_] |4942| 
        B         $C$L209,HIS           ; [CPU_] |4942| 
        ; branchcc occurs ; [] |4942| 
        MOVZ      AR6,*+XAR7[3]         ; [CPU_] |4942| 
$C$L209:    
	.dwpsn	file "../Source/prod.c",line 4944,column 10,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4944| 
        MOVB      XAR5,#0               ; [CPU_] |4944| 
	.dwpsn	file "../Source/prod.c",line 4944,column 17,is_stmt,isa 0
        B         $C$L211,EQ            ; [CPU_] |4944| 
        ; branchcc occurs ; [] |4944| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[51]            ; [CPU_] 
        MOVL      P,*+FP[AR0]           ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        ADDB      ACC,#68               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR7,#4               ; [CPU_] 
$C$L210:    
	.dwpsn	file "../Source/prod.c",line 4945,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4945| 
	.dwpsn	file "../Source/prod.c",line 4944,column 17,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4944| 
	.dwpsn	file "../Source/prod.c",line 4945,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4945| 
	.dwpsn	file "../Source/prod.c",line 4944,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |4944| 
	.dwpsn	file "../Source/prod.c",line 4945,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |4945| 
	.dwpsn	file "../Source/prod.c",line 4944,column 17,is_stmt,isa 0
        CMP       AL,AR5                ; [CPU_] |4944| 
        B         $C$L210,HI            ; [CPU_] |4944| 
        ; branchcc occurs ; [] |4944| 
$C$L211:    
	.dwpsn	file "../Source/prod.c",line 4947,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4947| 
        MOVB      AL,#152               ; [CPU_] |4947| 
        MOV       T,*-SP[51]            ; [CPU_] |4947| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4947| 
        MPYU      P,T,AL                ; [CPU_] |4947| 
        MOVL      ACC,P                 ; [CPU_] |4947| 
        ADD       ACC,AR5               ; [CPU_] |4947| 
        ADDL      ACC,XAR6              ; [CPU_] |4947| 
        MOVL      XAR4,ACC              ; [CPU_] |4947| 
        MOVB      XAR0,#68              ; [CPU_] |4947| 
	.dwpsn	file "../Source/prod.c",line 4951,column 5,is_stmt,isa 0
        MOVL      ACC,P                 ; [CPU_] |4951| 
	.dwpsn	file "../Source/prod.c",line 4947,column 5,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |4947| 
	.dwpsn	file "../Source/prod.c",line 4951,column 5,is_stmt,isa 0
        ADDL      ACC,XAR6              ; [CPU_] |4951| 
        MOVL      XAR4,ACC              ; [CPU_] |4951| 
        MOVL      XAR1,ACC              ; [CPU_] |4951| 
        ADDB      XAR4,#68              ; [CPU_] |4951| 
$C$DW$716	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$716, DW_AT_low_pc(0x00)
	.dwattr $C$DW$716, DW_AT_name("_strlen")
	.dwattr $C$DW$716, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |4951| 
        ; call occurs [#_strlen] ; [] |4951| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4952| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4952| 
	.dwpsn	file "../Source/prod.c",line 4953,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |4953| 
	.dwpsn	file "../Source/prod.c",line 4952,column 5,is_stmt,isa 0
        MOV       *-SP[55],#4           ; [CPU_] |4952| 
	.dwpsn	file "../Source/prod.c",line 4953,column 17,is_stmt,isa 0
        B         $C$L307,EQ            ; [CPU_] |4953| 
        ; branchcc occurs ; [] |4953| 
        ADDB      XAR4,#4               ; [CPU_] 
        ADDB      XAR1,#68              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4953,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |4953| 
$C$L212:    
	.dwpsn	file "../Source/prod.c",line 4954,column 6,is_stmt,isa 0
        MOV       AH,*XAR1++            ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4953,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |4953| 
	.dwpsn	file "../Source/prod.c",line 4954,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |4954| 
        INC       *-SP[55]              ; [CPU_] |4954| 
	.dwpsn	file "../Source/prod.c",line 4953,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |4953| 
        B         $C$L212,HI            ; [CPU_] |4953| 
        ; branchcc occurs ; [] |4953| 
        B         $C$L307,UNC           ; [CPU_] |4953| 
        ; branch occurs ; [] |4953| 
$C$L213:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5492,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |5492| 
        B         $C$L323,LO            ; [CPU_] |5492| 
        ; branchcc occurs ; [] |5492| 
	.dwpsn	file "../Source/prod.c",line 5497,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR4             ; [CPU_] |5497| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5498| 
	.dwpsn	file "../Source/prod.c",line 5497,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |5497| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |5497| 
        MOV       *-SP[51],AL           ; [CPU_] |5497| 
	.dwpsn	file "../Source/prod.c",line 5498,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |5498| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |5498| 
        MOVL      XAR1,XAR5             ; [CPU_] 
        MOV       *+XAR5[2],AL          ; [CPU_] |5498| 
	.dwpsn	file "../Source/prod.c",line 5500,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |5500| 
        SUBB      XAR5,#26              ; [CPU_U] |5500| 
        ADDB      XAR1,#3               ; [CPU_] 
        MOVZ      AR5,AR5               ; [CPU_] |5500| 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L214:    
	.dwpsn	file "../Source/prod.c",line 5502,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |5502| 
        MOV       *+XAR5[0],AL          ; [CPU_] |5502| 
	.dwpsn	file "../Source/prod.c",line 5503,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |5503| 
        MOV       *XAR1++,AL            ; [CPU_] |5503| 
	.dwpsn	file "../Source/prod.c",line 5504,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |5504| 
        ADD       AL,*+XAR5[0]          ; [CPU_] |5504| 
        MOV       *XAR5++,AL            ; [CPU_] |5504| 
	.dwpsn	file "../Source/prod.c",line 5505,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |5505| 
        MOV       *XAR1++,AL            ; [CPU_] |5505| 
	.dwpsn	file "../Source/prod.c",line 5501,column 17,is_stmt,isa 0
        BANZ      $C$L214,AR6--         ; [CPU_] |5501| 
        ; branchcc occurs ; [] |5501| 
        MOV       AL,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5509,column 5,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |5509| 
        B         $C$L323,HIS           ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
        MOVL      XAR0,#40              ; [CPU_] |5509| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |5509| 
        MOVB      AL,#12                ; [CPU_] |5509| 
        MOV       T,*-SP[51]            ; [CPU_] |5509| 
        MPYU      ACC,T,AL              ; [CPU_] |5509| 
        ADDL      ACC,XAR6              ; [CPU_] |5509| 
        ADD       ACC,#97 << 5          ; [CPU_] |5509| 
        MOVL      XAR4,ACC              ; [CPU_] |5509| 
        MOVL      *-SP[58],ACC          ; [CPU_] |5509| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |5509| 
        CMPB      AL,#7                 ; [CPU_] |5509| 
        B         $C$L323,NEQ           ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |5509| 
        MOV       *-SP[41],#0           ; [CPU_] |5509| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5509| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |5509| 
$C$DW$717	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$717, DW_AT_low_pc(0x00)
	.dwattr $C$DW$717, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$717, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5509| 
        ; call occurs [#FS$$CMP] ; [] |5509| 
        CMPB      AL,#0                 ; [CPU_] |5509| 
        B         $C$L215,GEQ           ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
        MOV       *-SP[41],#1           ; [CPU_] |5509| 
$C$L215:    
        MOV       AL,*-SP[41]           ; [CPU_] 
        B         $C$L323,NEQ           ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
        MOV       AL,#0                 ; [CPU_] |5509| 
        MOV       AH,#16672             ; [CPU_] |5509| 
        MOV       *-SP[41],#0           ; [CPU_] |5509| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5509| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |5509| 
$C$DW$718	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$718, DW_AT_low_pc(0x00)
	.dwattr $C$DW$718, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$718, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5509| 
        ; call occurs [#FS$$CMP] ; [] |5509| 
        CMPB      AL,#0                 ; [CPU_] |5509| 
        B         $C$L216,LEQ           ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
        MOV       *-SP[41],#1           ; [CPU_] |5509| 
$C$L216:    
        MOV       AL,*-SP[41]           ; [CPU_] 
        B         $C$L323,NEQ           ; [CPU_] |5509| 
        ; branchcc occurs ; [] |5509| 
	.dwpsn	file "../Source/prod.c",line 5516,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |5516| 
        MOV       AH,#0                 ; [CPU_] |5516| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5516| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |5516| 
$C$DW$719	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$719, DW_AT_low_pc(0x00)
	.dwattr $C$DW$719, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$719, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |5516| 
        ; call occurs [#FS$$CMP] ; [] |5516| 
        CMPB      AL,#0                 ; [CPU_] |5516| 
        B         $C$L217,GEQ           ; [CPU_] |5516| 
        ; branchcc occurs ; [] |5516| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |5516| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |5516| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5516| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |5516| 
        B         $C$L218,UNC           ; [CPU_] |5516| 
        ; branch occurs ; [] |5516| 
$C$L217:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] |5516| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |5516| 
        MOVL      *-SP[2],ACC           ; [CPU_] |5516| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |5516| 
$C$L218:    
$C$DW$720	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$720, DW_AT_low_pc(0x00)
	.dwattr $C$DW$720, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$720, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |5516| 
        ; call occurs [#FS$$MPY] ; [] |5516| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |5516| 
        MOVL      XAR6,*+XAR4[6]        ; [CPU_] |5516| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |5516| 
$C$DW$721	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$721, DW_AT_low_pc(0x00)
	.dwattr $C$DW$721, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$721, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |5516| 
        ; call occurs [#FS$$ADD] ; [] |5516| 
$C$DW$722	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$722, DW_AT_low_pc(0x00)
	.dwattr $C$DW$722, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$722, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |5516| 
        ; call occurs [#FS$$TOLL] ; [] |5516| 
	.dwpsn	file "../Source/prod.c",line 5523,column 5,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |5523| 
	.dwpsn	file "../Source/prod.c",line 5516,column 6,is_stmt,isa 0
        MOVL      *-SP[34],P            ; [CPU_] |5516| 
	.dwpsn	file "../Source/prod.c",line 5504,column 6,is_stmt,isa 0
        MOV       *-SP[55],#7           ; [CPU_] |5504| 
	.dwpsn	file "../Source/prod.c",line 5516,column 6,is_stmt,isa 0
        MOVL      *-SP[32],ACC          ; [CPU_] |5516| 
	.dwpsn	file "../Source/prod.c",line 5523,column 5,is_stmt,isa 0
        MOVL      P,*-SP[34]            ; [CPU_] |5523| 
        CMP64     ACC:P                 ; [CPU_] |5523| 
        B         $C$L220,LEQ           ; [CPU_] |5523| 
        ; branchcc occurs ; [] |5523| 
	.dwpsn	file "../Source/prod.c",line 5525,column 12,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |5525| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |5525| 
        MOV       *-SP[2],#0            ; [CPU_] |5525| 
        MOVL      P,*-SP[34]            ; [CPU_] |5525| 
        MOV       *-SP[1],#0            ; [CPU_] |5525| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |5525| 
$C$DW$723	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$723, DW_AT_low_pc(0x00)
	.dwattr $C$DW$723, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$723, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |5525| 
        ; call occurs [#LL$$CMP] ; [] |5525| 
        CMPB      AL,#0                 ; [CPU_] |5525| 
        B         $C$L219,GEQ           ; [CPU_] |5525| 
        ; branchcc occurs ; [] |5525| 
	.dwpsn	file "../Source/prod.c",line 5528,column 6,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |5528| 
        MOV       *-SP[37],AL           ; [CPU_] |5528| 
        B         $C$L221,UNC           ; [CPU_] |5528| 
        ; branch occurs ; [] |5528| 
$C$L219:    
	.dwpsn	file "../Source/prod.c",line 5526,column 6,is_stmt,isa 0
        MOV       *-SP[37],#65535       ; [CPU_] |5526| 
	.dwpsn	file "../Source/prod.c",line 5527,column 5,is_stmt,isa 0
        B         $C$L221,UNC           ; [CPU_] |5527| 
        ; branch occurs ; [] |5527| 
$C$L220:    
	.dwpsn	file "../Source/prod.c",line 5524,column 6,is_stmt,isa 0
        MOV       *-SP[37],#0           ; [CPU_] |5524| 
$C$L221:    
        MOV       AH,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5531,column 5,is_stmt,isa 0
        MOV       AL,*-SP[37]           ; [CPU_] |5531| 
$C$DW$724	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$724, DW_AT_low_pc(0x00)
	.dwattr $C$DW$724, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$724, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |5531| 
        ; call occurs [#_mcbsp_xmit] ; [] |5531| 
	.dwpsn	file "../Source/prod.c",line 5532,column 5,is_stmt,isa 0
$C$DW$725	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$725, DW_AT_low_pc(0x00)
	.dwattr $C$DW$725, DW_AT_name("_latch_dac")
	.dwattr $C$DW$725, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |5532| 
        ; call occurs [#_latch_dac] ; [] |5532| 
	.dwpsn	file "../Source/prod.c",line 5535,column 5,is_stmt,isa 0
        MOV       AL,*-SP[37]           ; [CPU_] |5535| 
        ANDB      AL,#0xff              ; [CPU_] |5535| 
        MOV       *XAR1++,AL            ; [CPU_] |5535| 
	.dwpsn	file "../Source/prod.c",line 5536,column 5,is_stmt,isa 0
        MOV       AL,*-SP[37]           ; [CPU_] |5536| 
        LSR       AL,8                  ; [CPU_] |5536| 
        MOV       *+XAR1[0],AL          ; [CPU_] |5536| 
	.dwpsn	file "../Source/prod.c",line 5539,column 5,is_stmt,isa 0
        B         $C$L756,UNC           ; [CPU_] |5539| 
        ; branch occurs ; [] |5539| 
$C$L222:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5428,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5428| 
        B         $C$L323,LO            ; [CPU_] |5428| 
        ; branchcc occurs ; [] |5428| 
	.dwpsn	file "../Source/prod.c",line 5433,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5433| 
	.dwpsn	file "../Source/prod.c",line 5438,column 5,is_stmt,isa 0
        B         $C$L233,UNC           ; [CPU_] |5438| 
        ; branch occurs ; [] |5438| 
$C$L223:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5414,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5414| 
        B         $C$L323,LO            ; [CPU_] |5414| 
        ; branchcc occurs ; [] |5414| 
	.dwpsn	file "../Source/prod.c",line 5419,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5419| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5419| 
$C$DW$726	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$726, DW_AT_low_pc(0x00)
	.dwattr $C$DW$726, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$726, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5419| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5419| 
	.dwpsn	file "../Source/prod.c",line 5424,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5424| 
        ; branch occurs ; [] |5424| 
$C$L224:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5478,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5478| 
        B         $C$L323,LO            ; [CPU_] |5478| 
        ; branchcc occurs ; [] |5478| 
	.dwpsn	file "../Source/prod.c",line 5483,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5483| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5483| 
$C$DW$727	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$727, DW_AT_low_pc(0x00)
	.dwattr $C$DW$727, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$727, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |5483| 
        ; call occurs [#_shunt_switch] ; [] |5483| 
	.dwpsn	file "../Source/prod.c",line 5488,column 5,is_stmt,isa 0
        B         $C$L227,UNC           ; [CPU_] |5488| 
        ; branch occurs ; [] |5488| 
$C$L225:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5462,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5462| 
        B         $C$L323,LO            ; [CPU_] |5462| 
        ; branchcc occurs ; [] |5462| 
	.dwpsn	file "../Source/prod.c",line 5467,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5467| 
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5467| 
$C$DW$728	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$728, DW_AT_low_pc(0x00)
	.dwattr $C$DW$728, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$728, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5467| 
        ; call occurs [#_ad7738_resettare] ; [] |5467| 
	.dwpsn	file "../Source/prod.c",line 5468,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5468| 
$C$DW$729	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$729, DW_AT_low_pc(0x00)
	.dwattr $C$DW$729, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$729, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5468| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5468| 
	.dwpsn	file "../Source/prod.c",line 5469,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x0030  ; [CPU_] |5469| 
$C$L226:    
$C$DW$730	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$730, DW_AT_low_pc(0x00)
	.dwattr $C$DW$730, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$730, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5469| 
        ; call occurs [#_ad7738_resetvall] ; [] |5469| 
$C$L227:    
	.dwpsn	file "../Source/prod.c",line 5472,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |5472| 
        MOVL      XAR0,#66              ; [CPU_] |5472| 
        ADDB      ACC,#2                ; [CPU_] |5472| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5472| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5472| 
        ANDB      AL,#0x0f              ; [CPU_] |5472| 
	.dwpsn	file "../Source/prod.c",line 5474,column 5,is_stmt,isa 0
        B         $C$L235,UNC           ; [CPU_] |5474| 
        ; branch occurs ; [] |5474| 
$C$L228:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5442,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5442| 
        B         $C$L323,LO            ; [CPU_] |5442| 
        ; branchcc occurs ; [] |5442| 
	.dwpsn	file "../Source/prod.c",line 5447,column 5,is_stmt,isa 0
        MOV       *-SP[41],#1           ; [CPU_] |5447| 
	.dwpsn	file "../Source/prod.c",line 5448,column 10,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |5448| 
$C$L229:    
        MOV       AL,*-SP[41]           ; [CPU_] 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5449,column 6,is_stmt,isa 0
        AND       AL,@_cmdbuff$2+2      ; [CPU_] |5449| 
        B         $C$L230,EQ            ; [CPU_] |5449| 
        ; branchcc occurs ; [] |5449| 
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5450,column 7,is_stmt,isa 0
$C$DW$731	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$731, DW_AT_low_pc(0x00)
	.dwattr $C$DW$731, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$731, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |5450| 
        ; call occurs [#_ad7738_resetlimit] ; [] |5450| 
$C$L230:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5448,column 17,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |5448| 
	.dwpsn	file "../Source/prod.c",line 5452,column 6,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |5452| 
        MOV       *-SP[41],AL           ; [CPU_] |5452| 
	.dwpsn	file "../Source/prod.c",line 5448,column 17,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |5448| 
        CMPB      AL,#4                 ; [CPU_] |5448| 
        B         $C$L229,LT            ; [CPU_] |5448| 
        ; branchcc occurs ; [] |5448| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5456,column 5,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |5456| 
        ANDB      AL,#0x0f              ; [CPU_] |5456| 
$C$L231:    
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |5456| 
        MOVL      XAR0,#66              ; [CPU_] |5456| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |5456| 
	.dwpsn	file "../Source/prod.c",line 5458,column 5,is_stmt,isa 0
        B         $C$L235,UNC           ; [CPU_] |5458| 
        ; branch occurs ; [] |5458| 
$C$L232:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5399,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5399| 
        B         $C$L323,LO            ; [CPU_] |5399| 
        ; branchcc occurs ; [] |5399| 
	.dwpsn	file "../Source/prod.c",line 5404,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5404| 
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5404| 
$C$DW$732	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$732, DW_AT_low_pc(0x00)
	.dwattr $C$DW$732, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$732, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5404| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5404| 
$C$L233:    
	.dwpsn	file "../Source/prod.c",line 5405,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x000f  ; [CPU_] |5405| 
	.dwpsn	file "../Source/prod.c",line 5410,column 5,is_stmt,isa 0
        B         $C$L226,UNC           ; [CPU_] |5410| 
        ; branch occurs ; [] |5410| 
$C$L234:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5376,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |5376| 
        B         $C$L237,LO            ; [CPU_] |5376| 
        ; branchcc occurs ; [] |5376| 
	.dwpsn	file "../Source/prod.c",line 5388,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |5388| 
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5388| 
$C$DW$733	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$733, DW_AT_low_pc(0x00)
	.dwattr $C$DW$733, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$733, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5388| 
        ; call occurs [#_ad7738_resettare] ; [] |5388| 
	.dwpsn	file "../Source/prod.c",line 5389,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5389| 
$C$DW$734	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$734, DW_AT_low_pc(0x00)
	.dwattr $C$DW$734, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$734, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5389| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5389| 
	.dwpsn	file "../Source/prod.c",line 5390,column 5,is_stmt,isa 0
        AND       AL,*+XAR1[2],#0x00ff  ; [CPU_] |5390| 
$C$DW$735	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$735, DW_AT_low_pc(0x00)
	.dwattr $C$DW$735, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$735, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5390| 
        ; call occurs [#_ad7738_resetvall] ; [] |5390| 
	.dwpsn	file "../Source/prod.c",line 5393,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |5393| 
        MOVL      ACC,XAR1              ; [CPU_] |5393| 
        ADDB      ACC,#2                ; [CPU_] |5393| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |5393| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |5393| 
        ANDB      AL,#0xff              ; [CPU_] |5393| 
$C$L235:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5393| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5393| 
$C$L236:    
	.dwpsn	file "../Source/prod.c",line 5391,column 5,is_stmt,isa 0
        MOV       *-SP[42],#1           ; [CPU_] |5391| 
	.dwpsn	file "../Source/prod.c",line 5395,column 5,is_stmt,isa 0
        B         $C$L764,UNC           ; [CPU_] |5395| 
        ; branch occurs ; [] |5395| 
$C$L237:    
	.dwpsn	file "../Source/prod.c",line 5378,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5378| 
$C$DW$736	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$736, DW_AT_low_pc(0x00)
	.dwattr $C$DW$736, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$736, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |5378| 
        ; call occurs [#_ad7738_resettare] ; [] |5378| 
	.dwpsn	file "../Source/prod.c",line 5379,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5379| 
$C$DW$737	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$737, DW_AT_low_pc(0x00)
	.dwattr $C$DW$737, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$737, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5379| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5379| 
	.dwpsn	file "../Source/prod.c",line 5380,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5380| 
$C$DW$738	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$738, DW_AT_low_pc(0x00)
	.dwattr $C$DW$738, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$738, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5380| 
        ; call occurs [#_ad7738_resetvall] ; [] |5380| 
	.dwpsn	file "../Source/prod.c",line 5383,column 6,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5383| 
        MOVB      *+XAR4[2],#255,UNC    ; [CPU_] |5383| 
	.dwpsn	file "../Source/prod.c",line 5385,column 6,is_stmt,isa 0
        B         $C$L236,UNC           ; [CPU_] |5385| 
        ; branch occurs ; [] |5385| 
$C$L238:    
	.dwpsn	file "../Source/prod.c",line 5551,column 5,is_stmt,isa 0
        MOV       AL,*-SP[42]           ; [CPU_] |5551| 
        MOV       *-SP[41],#0           ; [CPU_] |5551| 
	.dwpsn	file "../Source/prod.c",line 5552,column 5,is_stmt,isa 0
        B         $C$L320,EQ            ; [CPU_] |5552| 
        ; branchcc occurs ; [] |5552| 
	.dwpsn	file "../Source/prod.c",line 5554,column 6,is_stmt,isa 0
$C$DW$739	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$739, DW_AT_low_pc(0x00)
	.dwattr $C$DW$739, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$739, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5554| 
        ; call occurs [#_lcd_clear] ; [] |5554| 
	.dwpsn	file "../Source/prod.c",line 5555,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5555| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |5555| 
$C$DW$740	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$740, DW_AT_low_pc(0x00)
	.dwattr $C$DW$740, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$740, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5555| 
        ; call occurs [#_lcd_puts] ; [] |5555| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L239:    
	.dwpsn	file "../Source/prod.c",line 5558,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5558| 
$C$DW$741	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$741, DW_AT_low_pc(0x00)
	.dwattr $C$DW$741, DW_AT_name("_delay_us")
	.dwattr $C$DW$741, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5558| 
        ; call occurs [#_delay_us] ; [] |5558| 
	.dwpsn	file "../Source/prod.c",line 5557,column 18,is_stmt,isa 0
        BANZ      $C$L239,AR3--         ; [CPU_] |5557| 
        ; branchcc occurs ; [] |5557| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5562,column 6,is_stmt,isa 0
$C$DW$742	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$742, DW_AT_low_pc(0x00)
	.dwattr $C$DW$742, DW_AT_name("_conf_write")
	.dwattr $C$DW$742, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5562| 
        ; call occurs [#_conf_write] ; [] |5562| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 5565,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |5565| 
        B         $C$L240,NEQ           ; [CPU_] |5565| 
        ; branchcc occurs ; [] |5565| 
	.dwpsn	file "../Source/prod.c",line 5566,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5566| 
        MOVB      AL,#16                ; [CPU_] |5566| 
        SPM       #0                    ; [CPU_] 
$C$DW$743	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$743, DW_AT_low_pc(0x00)
	.dwattr $C$DW$743, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$743, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5566| 
        ; call occurs [#_lcd_puts] ; [] |5566| 
	.dwpsn	file "../Source/prod.c",line 5567,column 7,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |5567| 
	.dwpsn	file "../Source/prod.c",line 5568,column 6,is_stmt,isa 0
        B         $C$L241,UNC           ; [CPU_] |5568| 
        ; branch occurs ; [] |5568| 
$C$L240:    
	.dwpsn	file "../Source/prod.c",line 5569,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5569| 
        MOVB      AL,#16                ; [CPU_] |5569| 
        SPM       #0                    ; [CPU_] 
$C$DW$744	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$744, DW_AT_low_pc(0x00)
	.dwattr $C$DW$744, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$744, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5569| 
        ; call occurs [#_lcd_puts] ; [] |5569| 
	.dwpsn	file "../Source/prod.c",line 5570,column 7,is_stmt,isa 0
        MOV       *-SP[41],#3           ; [CPU_] |5570| 
$C$L241:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L242:    
	.dwpsn	file "../Source/prod.c",line 5574,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5574| 
$C$DW$745	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$745, DW_AT_low_pc(0x00)
	.dwattr $C$DW$745, DW_AT_name("_delay_us")
	.dwattr $C$DW$745, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5574| 
        ; call occurs [#_delay_us] ; [] |5574| 
	.dwpsn	file "../Source/prod.c",line 5573,column 18,is_stmt,isa 0
        BANZ      $C$L242,AR3--         ; [CPU_] |5573| 
        ; branchcc occurs ; [] |5573| 
        B         $C$L319,UNC           ; [CPU_] |5573| 
        ; branch occurs ; [] |5573| 
$C$L243:    
	.dwpsn	file "../Source/prod.c",line 3661,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3661| 
        CMPB      AL,#1                 ; [CPU_] |3661| 
        B         $C$L244,EQ            ; [CPU_] |3661| 
        ; branchcc occurs ; [] |3661| 
        ADDB      XAR4,#2               ; [CPU_] |3661| 
        MOVL      XAR0,#66              ; [CPU_] |3661| 
        CMPB      AL,#2                 ; [CPU_] |3661| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3661| 
        B         $C$L765,NEQ           ; [CPU_] |3661| 
        ; branchcc occurs ; [] |3661| 
$C$L244:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3662,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3662| 
        MOVL      XAR0,#66              ; [CPU_] |3662| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3662| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3662| 
$C$DW$746	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$746, DW_AT_low_pc(0x00)
	.dwattr $C$DW$746, DW_AT_name("_set_numSensors")
	.dwattr $C$DW$746, DW_AT_TI_call

        LCR       #_set_numSensors      ; [CPU_] |3662| 
        ; call occurs [#_set_numSensors] ; [] |3662| 
        B         $C$L765,UNC           ; [CPU_] |3662| 
        ; branch occurs ; [] |3662| 
$C$L245:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3608,column 5,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3608| 
        B         $C$L323,LO            ; [CPU_] |3608| 
        ; branchcc occurs ; [] |3608| 
	.dwpsn	file "../Source/prod.c",line 3614,column 5,is_stmt,isa 0
        MOVZ      AR6,SP                ; [CPU_] |3614| 
        MOVL      XAR0,#44              ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        SUBB      XAR6,#16              ; [CPU_U] |3614| 
        MOVZ      AR7,AR6               ; [CPU_] |3614| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#3               ; [CPU_] 
$C$L246:    
	.dwpsn	file "../Source/prod.c",line 3616,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3616| 
        MOV       *+XAR7[0],AL          ; [CPU_] |3616| 
	.dwpsn	file "../Source/prod.c",line 3617,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3617| 
        MOV       *XAR5++,AL            ; [CPU_] |3617| 
	.dwpsn	file "../Source/prod.c",line 3618,column 6,is_stmt,isa 0
        MOV       ACC,*XAR4++ << #8     ; [CPU_] |3618| 
        ADD       AL,*+XAR7[0]          ; [CPU_] |3618| 
        MOV       *XAR7++,AL            ; [CPU_] |3618| 
	.dwpsn	file "../Source/prod.c",line 3619,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3619| 
        MOV       *XAR5++,AL            ; [CPU_] |3619| 
	.dwpsn	file "../Source/prod.c",line 3615,column 17,is_stmt,isa 0
        BANZ      $C$L246,AR6--         ; [CPU_] |3615| 
        ; branchcc occurs ; [] |3615| 
	.dwpsn	file "../Source/prod.c",line 3622,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[16]          ; [CPU_] |3622| 
$C$DW$747	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$747, DW_AT_low_pc(0x00)
	.dwattr $C$DW$747, DW_AT_name("_setAutoHeight")
	.dwattr $C$DW$747, DW_AT_TI_call

        LCR       #_setAutoHeight       ; [CPU_] |3622| 
        ; call occurs [#_setAutoHeight] ; [] |3622| 
	.dwpsn	file "../Source/prod.c",line 3623,column 5,is_stmt,isa 0
$C$DW$748	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$748, DW_AT_low_pc(0x00)
	.dwattr $C$DW$748, DW_AT_name("_ad7738_getpos")
	.dwattr $C$DW$748, DW_AT_TI_call

        LCR       #_ad7738_getpos       ; [CPU_] |3623| 
        ; call occurs [#_ad7738_getpos] ; [] |3623| 
$C$DW$749	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$749, DW_AT_low_pc(0x00)
	.dwattr $C$DW$749, DW_AT_name("_calcAutoDir")
	.dwattr $C$DW$749, DW_AT_TI_call

        LCR       #_calcAutoDir         ; [CPU_] |3623| 
        ; call occurs [#_calcAutoDir] ; [] |3623| 
	.dwpsn	file "../Source/prod.c",line 3624,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |3624| 
        MOVL      XAR0,#66              ; [CPU_] |3624| 
        MOVL      ACC,XAR4              ; [CPU_] |3624| 
        ADDB      ACC,#2                ; [CPU_] |3624| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3624| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3624| 
$C$DW$750	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$750, DW_AT_low_pc(0x00)
	.dwattr $C$DW$750, DW_AT_name("_setautoHeightEnable")
	.dwattr $C$DW$750, DW_AT_TI_call

        LCR       #_setautoHeightEnable ; [CPU_] |3624| 
        ; call occurs [#_setautoHeightEnable] ; [] |3624| 
	.dwpsn	file "../Source/prod.c",line 3618,column 6,is_stmt,isa 0
        MOV       *-SP[55],#7           ; [CPU_] |3618| 
	.dwpsn	file "../Source/prod.c",line 3626,column 5,is_stmt,isa 0
        B         $C$L320,UNC           ; [CPU_] |3626| 
        ; branch occurs ; [] |3626| 
$C$L247:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3596,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3596| 
        B         $C$L323,LO            ; [CPU_] |3596| 
        ; branchcc occurs ; [] |3596| 
	.dwpsn	file "../Source/prod.c",line 3600,column 5,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3600| 
        AND       AL,*+XAR1[2],#0x0001  ; [CPU_] |3600| 
$C$DW$751	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$751, DW_AT_low_pc(0x00)
	.dwattr $C$DW$751, DW_AT_name("_setMotorDir")
	.dwattr $C$DW$751, DW_AT_TI_call

        LCR       #_setMotorDir         ; [CPU_] |3600| 
        ; call occurs [#_setMotorDir] ; [] |3600| 
	.dwpsn	file "../Source/prod.c",line 3601,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |3601| 
        MOVL      ACC,XAR1              ; [CPU_] |3601| 
        ADDB      ACC,#2                ; [CPU_] |3601| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3601| 
        MOV       AL,*+XAR1[2]          ; [CPU_] |3601| 
        ASR       AL,4                  ; [CPU_] |3601| 
        ANDB      AL,#0x01              ; [CPU_] |3601| 
$C$DW$752	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$752, DW_AT_low_pc(0x00)
	.dwattr $C$DW$752, DW_AT_name("_setMotorJog")
	.dwattr $C$DW$752, DW_AT_TI_call

        LCR       #_setMotorJog         ; [CPU_] |3601| 
        ; call occurs [#_setMotorJog] ; [] |3601| 
	.dwpsn	file "../Source/prod.c",line 3606,column 5,is_stmt,isa 0
        B         $C$L763,UNC           ; [CPU_] |3606| 
        ; branch occurs ; [] |3606| 
$C$L248:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4321,column 5,is_stmt,isa 0
        CMPB      AL,#15                ; [CPU_] |4321| 
        B         $C$L323,LO            ; [CPU_] |4321| 
        ; branchcc occurs ; [] |4321| 
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |4321| 
        MOVL      XAR0,#66              ; [CPU_] |4321| 
        MOVL      ACC,XAR7              ; [CPU_] |4321| 
        ADDB      ACC,#2                ; [CPU_] |4321| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4321| 
        MOV       AL,*+XAR7[2]          ; [CPU_] |4321| 
        B         $C$L323,LT            ; [CPU_] |4321| 
        ; branchcc occurs ; [] |4321| 
        ADDB      XAR4,#2               ; [CPU_] |4321| 
        MOVL      XAR0,#66              ; [CPU_] |4321| 
        CMPB      AL,#0                 ; [CPU_] |4321| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4321| 
        B         $C$L323,GT            ; [CPU_] |4321| 
        ; branchcc occurs ; [] |4321| 
	.dwpsn	file "../Source/prod.c",line 4326,column 5,is_stmt,isa 0
        MOV       *-SP[52],AL           ; [CPU_] |4326| 
	.dwpsn	file "../Source/prod.c",line 4327,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4327| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOVL      XAR0,#66              ; [CPU_] |4330| 
	.dwpsn	file "../Source/prod.c",line 4327,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4327| 
	.dwpsn	file "../Source/prod.c",line 4330,column 5,is_stmt,isa 0
        MOVL      ACC,XAR7              ; [CPU_] |4330| 
        ADDB      ACC,#2                ; [CPU_] |4330| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4330| 
        MOVL      XAR0,#40              ; [CPU_] |4330| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4330| 
        MOV       T,*-SP[52]            ; [CPU_] |4330| 
        MOVB      AL,#10                ; [CPU_] |4330| 
        MPYU      ACC,T,AL              ; [CPU_] |4330| 
        ADDL      ACC,XAR6              ; [CPU_] |4330| 
        ADDB      ACC,#46               ; [CPU_] |4330| 
        MOVL      XAR4,ACC              ; [CPU_] |4330| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR7,#3               ; [CPU_] 
$C$L249:    
	.dwpsn	file "../Source/prod.c",line 4332,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4332| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4332| 
        ADDB      XAR7,#1               ; [CPU_] |4332| 
	.dwpsn	file "../Source/prod.c",line 4333,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4333| 
        ADD       *XAR4++,AL            ; [CPU_] |4333| 
	.dwpsn	file "../Source/prod.c",line 4331,column 17,is_stmt,isa 0
        BANZ      $C$L249,AR6--         ; [CPU_] |4331| 
        ; branchcc occurs ; [] |4331| 
	.dwpsn	file "../Source/prod.c",line 4336,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |4336| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4336| 
        MOVB      AL,#10                ; [CPU_] |4336| 
        MPYU      ACC,T,AL              ; [CPU_] |4336| 
        ADDL      ACC,XAR6              ; [CPU_] |4336| 
        MOVL      XAR5,ACC              ; [CPU_] |4336| 
        ADDB      ACC,#48               ; [CPU_] |4336| 
        MOVL      XAR4,ACC              ; [CPU_] |4336| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] |4336| 
$C$L250:    
	.dwpsn	file "../Source/prod.c",line 4338,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4338| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4338| 
        ADDB      XAR7,#1               ; [CPU_] |4338| 
	.dwpsn	file "../Source/prod.c",line 4339,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4339| 
        ADD       *XAR4++,AL            ; [CPU_] |4339| 
	.dwpsn	file "../Source/prod.c",line 4337,column 17,is_stmt,isa 0
        BANZ      $C$L250,AR6--         ; [CPU_] |4337| 
        ; branchcc occurs ; [] |4337| 
	.dwpsn	file "../Source/prod.c",line 4342,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4342| 
        ADDB      ACC,#50               ; [CPU_] |4342| 
        MOVL      XAR4,ACC              ; [CPU_] |4342| 
        MOVL      P,ACC                 ; [CPU_] |4342| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L251:    
	.dwpsn	file "../Source/prod.c",line 4344,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |4344| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4344| 
        ADDB      XAR7,#1               ; [CPU_] |4344| 
	.dwpsn	file "../Source/prod.c",line 4345,column 6,is_stmt,isa 0
        MOV       ACC,*XAR7++ << #8     ; [CPU_] |4345| 
        ADD       *XAR4++,AL            ; [CPU_] |4345| 
	.dwpsn	file "../Source/prod.c",line 4343,column 17,is_stmt,isa 0
        BANZ      $C$L251,AR6--         ; [CPU_] |4343| 
        ; branchcc occurs ; [] |4343| 
	.dwpsn	file "../Source/prod.c",line 4349,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4349| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4349| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR5,#46              ; [CPU_] |4349| 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L252:    
	.dwpsn	file "../Source/prod.c",line 4351,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4351| 
        ANDB      AL,#0xff              ; [CPU_] |4351| 
        MOV       *XAR4++,AL            ; [CPU_] |4351| 
	.dwpsn	file "../Source/prod.c",line 4352,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4352| 
        LSR       AL,8                  ; [CPU_] |4352| 
        MOV       *XAR4++,AL            ; [CPU_] |4352| 
	.dwpsn	file "../Source/prod.c",line 4350,column 17,is_stmt,isa 0
        BANZ      $C$L252,AR6--         ; [CPU_] |4350| 
        ; branchcc occurs ; [] |4350| 
	.dwpsn	file "../Source/prod.c",line 4355,column 5,is_stmt,isa 0
        MOVL      XAR5,XT               ; [CPU_] |4355| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L253:    
	.dwpsn	file "../Source/prod.c",line 4357,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4357| 
        ANDB      AL,#0xff              ; [CPU_] |4357| 
        MOV       *XAR4++,AL            ; [CPU_] |4357| 
	.dwpsn	file "../Source/prod.c",line 4358,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4358| 
        LSR       AL,8                  ; [CPU_] |4358| 
        MOV       *XAR4++,AL            ; [CPU_] |4358| 
	.dwpsn	file "../Source/prod.c",line 4356,column 17,is_stmt,isa 0
        BANZ      $C$L253,AR6--         ; [CPU_] |4356| 
        ; branchcc occurs ; [] |4356| 
	.dwpsn	file "../Source/prod.c",line 4361,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |4361| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L254:    
	.dwpsn	file "../Source/prod.c",line 4363,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4363| 
        ANDB      AL,#0xff              ; [CPU_] |4363| 
        MOV       *XAR4++,AL            ; [CPU_] |4363| 
	.dwpsn	file "../Source/prod.c",line 4364,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4364| 
        LSR       AL,8                  ; [CPU_] |4364| 
        MOV       *XAR4++,AL            ; [CPU_] |4364| 
	.dwpsn	file "../Source/prod.c",line 4362,column 17,is_stmt,isa 0
        BANZ      $C$L254,AR6--         ; [CPU_] |4362| 
        ; branchcc occurs ; [] |4362| 
	.dwpsn	file "../Source/prod.c",line 4352,column 6,is_stmt,isa 0
        MOV       *-SP[55],#15          ; [CPU_] |4352| 
	.dwpsn	file "../Source/prod.c",line 4369,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |4369| 
        ; branch occurs ; [] |4369| 
$C$L255:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4279,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |4279| 
        B         $C$L323,LO            ; [CPU_] |4279| 
        ; branchcc occurs ; [] |4279| 
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |4279| 
        MOVL      XAR0,#66              ; [CPU_] |4279| 
        MOVL      ACC,XAR5              ; [CPU_] |4279| 
        ADDB      ACC,#2                ; [CPU_] |4279| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |4279| 
        MOV       AL,*+XAR5[2]          ; [CPU_] |4279| 
        B         $C$L323,LT            ; [CPU_] |4279| 
        ; branchcc occurs ; [] |4279| 
        ADDB      XAR4,#2               ; [CPU_] |4279| 
        MOVL      XAR0,#66              ; [CPU_] |4279| 
        CMPB      AL,#0                 ; [CPU_] |4279| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |4279| 
        B         $C$L323,GT            ; [CPU_] |4279| 
        ; branchcc occurs ; [] |4279| 
	.dwpsn	file "../Source/prod.c",line 4284,column 5,is_stmt,isa 0
        MOV       *-SP[52],AL           ; [CPU_] |4284| 
	.dwpsn	file "../Source/prod.c",line 4285,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4285| 
	.dwpsn	file "../Source/prod.c",line 4287,column 5,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4287| 
        MOVL      XAR0,#66              ; [CPU_] |4287| 
	.dwpsn	file "../Source/prod.c",line 4285,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |4285| 
	.dwpsn	file "../Source/prod.c",line 4287,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |4287| 
        MOVL      XAR0,#40              ; [CPU_] |4287| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4287| 
        MOVB      AL,#10                ; [CPU_] |4287| 
        MOV       T,*-SP[52]            ; [CPU_] |4287| 
        MPYU      ACC,T,AL              ; [CPU_] |4287| 
        ADDL      ACC,XAR6              ; [CPU_] |4287| 
        ADDB      ACC,#46               ; [CPU_] |4287| 
        MOVL      XAR5,ACC              ; [CPU_] |4287| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR4,#3               ; [CPU_] 
$C$L256:    
	.dwpsn	file "../Source/prod.c",line 4289,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4289| 
        ANDB      AL,#0xff              ; [CPU_] |4289| 
        MOV       *XAR4++,AL            ; [CPU_] |4289| 
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4290| 
        LSR       AL,8                  ; [CPU_] |4290| 
        MOV       *XAR4++,AL            ; [CPU_] |4290| 
	.dwpsn	file "../Source/prod.c",line 4288,column 17,is_stmt,isa 0
        BANZ      $C$L256,AR0--         ; [CPU_] |4288| 
        ; branchcc occurs ; [] |4288| 
	.dwpsn	file "../Source/prod.c",line 4293,column 5,is_stmt,isa 0
        MOVB      AL,#10                ; [CPU_] |4293| 
        MPYU      ACC,T,AL              ; [CPU_] |4293| 
        ADDL      ACC,XAR6              ; [CPU_] |4293| 
        MOVL      XAR5,ACC              ; [CPU_] |4293| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |4293| 
        ADDB      XAR5,#48              ; [CPU_] |4293| 
$C$L257:    
	.dwpsn	file "../Source/prod.c",line 4295,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4295| 
        ANDB      AL,#0xff              ; [CPU_] |4295| 
        MOV       *XAR4++,AL            ; [CPU_] |4295| 
	.dwpsn	file "../Source/prod.c",line 4296,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4296| 
        LSR       AL,8                  ; [CPU_] |4296| 
        MOV       *XAR4++,AL            ; [CPU_] |4296| 
	.dwpsn	file "../Source/prod.c",line 4294,column 17,is_stmt,isa 0
        BANZ      $C$L257,AR6--         ; [CPU_] |4294| 
        ; branchcc occurs ; [] |4294| 
	.dwpsn	file "../Source/prod.c",line 4299,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR7             ; [CPU_] |4299| 
	.dwpsn	file "../Source/prod.c",line 4290,column 6,is_stmt,isa 0
        MOV       *-SP[55],#15          ; [CPU_] |4290| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4299,column 5,is_stmt,isa 0
        ADDB      XAR5,#50              ; [CPU_] |4299| 
$C$L258:    
	.dwpsn	file "../Source/prod.c",line 4301,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4301| 
        ANDB      AL,#0xff              ; [CPU_] |4301| 
        MOV       *XAR4++,AL            ; [CPU_] |4301| 
	.dwpsn	file "../Source/prod.c",line 4302,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4302| 
        LSR       AL,8                  ; [CPU_] |4302| 
        MOV       *XAR4++,AL            ; [CPU_] |4302| 
	.dwpsn	file "../Source/prod.c",line 4300,column 17,is_stmt,isa 0
        BANZ      $C$L258,AR0--         ; [CPU_] |4300| 
        ; branchcc occurs ; [] |4300| 
        B         $C$L765,UNC           ; [CPU_] |4300| 
        ; branch occurs ; [] |4300| 
$C$L259:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3921,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3921| 
        B         $C$L323,LO            ; [CPU_] |3921| 
        ; branchcc occurs ; [] |3921| 
        MOVL      ACC,XAR4              ; [CPU_] |3921| 
        MOVL      XAR0,#66              ; [CPU_] |3921| 
        ADDB      ACC,#2                ; [CPU_] |3921| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3921| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3921| 
        B         $C$L323,LT            ; [CPU_] |3921| 
        ; branchcc occurs ; [] |3921| 
        MOVL      XAR5,XAR4             ; [CPU_] |3921| 
        MOVL      XAR0,#66              ; [CPU_] |3921| 
        CMPB      AL,#20                ; [CPU_] |3921| 
        ADDB      XAR5,#2               ; [CPU_] |3921| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3921| 
        B         $C$L323,GEQ           ; [CPU_] |3921| 
        ; branchcc occurs ; [] |3921| 
	.dwpsn	file "../Source/prod.c",line 3925,column 5,is_stmt,isa 0
        MOV       *-SP[51],AL           ; [CPU_] |3925| 
	.dwpsn	file "../Source/prod.c",line 3926,column 5,is_stmt,isa 0
        MOVL      XAR1,#_buff$1         ; [CPU_U] |3926| 
	.dwpsn	file "../Source/prod.c",line 3929,column 5,is_stmt,isa 0
        ADDB      XAR4,#2               ; [CPU_] |3929| 
        MOVL      XAR0,#66              ; [CPU_] |3929| 
	.dwpsn	file "../Source/prod.c",line 3926,column 5,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |3926| 
	.dwpsn	file "../Source/prod.c",line 3929,column 5,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3929| 
        MOVL      XAR0,#40              ; [CPU_] |3929| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3929| 
        MOVB      AL,#152               ; [CPU_] |3929| 
        MOV       T,*-SP[51]            ; [CPU_] |3929| 
        MPYU      ACC,T,AL              ; [CPU_] |3929| 
        ADDL      ACC,XAR6              ; [CPU_] |3929| 
        ADDB      ACC,#52               ; [CPU_] |3929| 
        MOVL      XAR4,ACC              ; [CPU_] |3929| 
$C$DW$753	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$753, DW_AT_low_pc(0x00)
	.dwattr $C$DW$753, DW_AT_name("_strlen")
	.dwattr $C$DW$753, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3929| 
        ; call occurs [#_strlen] ; [] |3929| 
        MOVZ      AR6,AL                ; [CPU_] |3929| 
	.dwpsn	file "../Source/prod.c",line 3930,column 5,is_stmt,isa 0
        MOV       *+XAR1[3],AL          ; [CPU_] |3930| 
	.dwpsn	file "../Source/prod.c",line 3931,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3931| 
	.dwpsn	file "../Source/prod.c",line 3930,column 5,is_stmt,isa 0
        MOV       *-SP[55],#4           ; [CPU_] |3930| 
	.dwpsn	file "../Source/prod.c",line 3931,column 17,is_stmt,isa 0
        B         $C$L261,EQ            ; [CPU_] |3931| 
        ; branchcc occurs ; [] |3931| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      AL,#152               ; [CPU_] 
        MOV       T,*-SP[51]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR7              ; [CPU_] 
        ADDB      ACC,#52               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3931,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3931| 
$C$L260:    
	.dwpsn	file "../Source/prod.c",line 3932,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3931,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3931| 
	.dwpsn	file "../Source/prod.c",line 3932,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3931,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3931| 
	.dwpsn	file "../Source/prod.c",line 3932,column 6,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |3932| 
	.dwpsn	file "../Source/prod.c",line 3931,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3931| 
        B         $C$L260,HI            ; [CPU_] |3931| 
        ; branchcc occurs ; [] |3931| 
$C$L261:    
	.dwpsn	file "../Source/prod.c",line 3936,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3936| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3936| 
        MOVB      AL,#152               ; [CPU_] |3936| 
        MOV       T,*-SP[51]            ; [CPU_] |3936| 
        MPYU      ACC,T,AL              ; [CPU_] |3936| 
        ADDL      ACC,XAR6              ; [CPU_] |3936| 
        MOVL      XAR4,ACC              ; [CPU_] |3936| 
        MOVL      XAR1,ACC              ; [CPU_] |3936| 
        ADDB      XAR4,#68              ; [CPU_] |3936| 
$C$DW$754	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$754, DW_AT_low_pc(0x00)
	.dwattr $C$DW$754, DW_AT_name("_strlen")
	.dwattr $C$DW$754, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3936| 
        ; call occurs [#_strlen] ; [] |3936| 
        MOVL      XAR0,#44              ; [CPU_] |3936| 
	.dwpsn	file "../Source/prod.c",line 3937,column 5,is_stmt,isa 0
        MOVZ      AR7,*-SP[55]          ; [CPU_] |3937| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3936,column 5,is_stmt,isa 0
        MOVZ      AR6,AL                ; [CPU_] |3936| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3936| 
	.dwpsn	file "../Source/prod.c",line 3937,column 5,is_stmt,isa 0
        ADD       ACC,AR7               ; [CPU_] |3937| 
        MOVL      XAR4,ACC              ; [CPU_] |3937| 
        MOV       AL,AR7                ; [CPU_] |3937| 
        ADDB      AL,#1                 ; [CPU_] |3937| 
        MOV       *XAR4++,AR6           ; [CPU_] |3937| 
        MOV       *-SP[55],AL           ; [CPU_] |3937| 
        MOV       AL,AR6                ; [CPU_] |3937| 
	.dwpsn	file "../Source/prod.c",line 3938,column 17,is_stmt,isa 0
        B         $C$L263,EQ            ; [CPU_] |3938| 
        ; branchcc occurs ; [] |3938| 
        MOVL      XAR5,XAR1             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3938,column 10,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |3938| 
        ADDB      XAR5,#68              ; [CPU_] 
$C$L262:    
	.dwpsn	file "../Source/prod.c",line 3939,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3938,column 17,is_stmt,isa 0
        ADDB      AH,#1                 ; [CPU_] |3938| 
	.dwpsn	file "../Source/prod.c",line 3939,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3938,column 17,is_stmt,isa 0
        MOV       AL,AR6                ; [CPU_] |3938| 
	.dwpsn	file "../Source/prod.c",line 3939,column 6,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |3939| 
	.dwpsn	file "../Source/prod.c",line 3938,column 17,is_stmt,isa 0
        CMP       AL,AH                 ; [CPU_] |3938| 
        B         $C$L262,HI            ; [CPU_] |3938| 
        ; branchcc occurs ; [] |3938| 
$C$L263:    
	.dwpsn	file "../Source/prod.c",line 3943,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3943| 
        MOVB      XAR0,#3               ; [CPU_] 
        ADDB      XAR5,#84              ; [CPU_] |3943| 
$C$L264:    
	.dwpsn	file "../Source/prod.c",line 3945,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3945| 
        ANDB      AL,#0xff              ; [CPU_] |3945| 
        MOV       *XAR4++,AL            ; [CPU_] |3945| 
	.dwpsn	file "../Source/prod.c",line 3946,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3946| 
        LSR       AL,8                  ; [CPU_] |3946| 
        MOV       *XAR4++,AL            ; [CPU_] |3946| 
	.dwpsn	file "../Source/prod.c",line 3944,column 17,is_stmt,isa 0
        BANZ      $C$L264,AR0--         ; [CPU_] |3944| 
        ; branchcc occurs ; [] |3944| 
	.dwpsn	file "../Source/prod.c",line 3951,column 5,is_stmt,isa 0
        MOVB      XAR0,#88              ; [CPU_] |3951| 
	.dwpsn	file "../Source/prod.c",line 3954,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3954| 
	.dwpsn	file "../Source/prod.c",line 3951,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3951| 
        MOV       *XAR4++,AL            ; [CPU_] |3951| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3954,column 5,is_stmt,isa 0
        ADDB      XAR5,#90              ; [CPU_] |3954| 
$C$L265:    
	.dwpsn	file "../Source/prod.c",line 3956,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3956| 
        ANDB      AL,#0xff              ; [CPU_] |3956| 
        MOV       *XAR4++,AL            ; [CPU_] |3956| 
	.dwpsn	file "../Source/prod.c",line 3957,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3957| 
        LSR       AL,8                  ; [CPU_] |3957| 
        MOV       *XAR4++,AL            ; [CPU_] |3957| 
	.dwpsn	file "../Source/prod.c",line 3955,column 17,is_stmt,isa 0
        BANZ      $C$L265,AR0--         ; [CPU_] |3955| 
        ; branchcc occurs ; [] |3955| 
	.dwpsn	file "../Source/prod.c",line 3962,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3962| 
        MOVB      XAR0,#1               ; [CPU_] 
        ADDB      XAR5,#92              ; [CPU_] |3962| 
$C$L266:    
	.dwpsn	file "../Source/prod.c",line 3964,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3964| 
        ANDB      AL,#0xff              ; [CPU_] |3964| 
        MOV       *XAR4++,AL            ; [CPU_] |3964| 
	.dwpsn	file "../Source/prod.c",line 3965,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3965| 
        LSR       AL,8                  ; [CPU_] |3965| 
        MOV       *XAR4++,AL            ; [CPU_] |3965| 
	.dwpsn	file "../Source/prod.c",line 3963,column 17,is_stmt,isa 0
        BANZ      $C$L266,AR0--         ; [CPU_] |3963| 
        ; branchcc occurs ; [] |3963| 
	.dwpsn	file "../Source/prod.c",line 3970,column 5,is_stmt,isa 0
        MOVB      XAR0,#94              ; [CPU_] |3970| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3970| 
	.dwpsn	file "../Source/prod.c",line 3976,column 5,is_stmt,isa 0
        MOVL      XAR5,XAR1             ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3970,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3970| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOVB      XAR0,#95              ; [CPU_] |3973| 
	.dwpsn	file "../Source/prod.c",line 3970,column 5,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3970| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3973| 
	.dwpsn	file "../Source/prod.c",line 3976,column 5,is_stmt,isa 0
        ADDB      XAR5,#96              ; [CPU_] |3976| 
	.dwpsn	file "../Source/prod.c",line 3973,column 5,is_stmt,isa 0
        ANDB      AL,#0xff              ; [CPU_] |3973| 
        MOVB      XAR0,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |3973| 
$C$L267:    
	.dwpsn	file "../Source/prod.c",line 3978,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3978| 
        ANDB      AL,#0xff              ; [CPU_] |3978| 
        MOV       *XAR4++,AL            ; [CPU_] |3978| 
	.dwpsn	file "../Source/prod.c",line 3979,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3979| 
        LSR       AL,8                  ; [CPU_] |3979| 
        MOV       *XAR4++,AL            ; [CPU_] |3979| 
	.dwpsn	file "../Source/prod.c",line 3977,column 17,is_stmt,isa 0
        BANZ      $C$L267,AR0--         ; [CPU_] |3977| 
        ; branchcc occurs ; [] |3977| 
	.dwpsn	file "../Source/prod.c",line 3946,column 6,is_stmt,isa 0
        ADD       *-SP[55],#23          ; [CPU_] |3946| 
	.dwpsn	file "../Source/prod.c",line 3984,column 5,is_stmt,isa 0
        MOVB      XAR0,#88              ; [CPU_] |3984| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3984| 
        CMPB      AL,#2                 ; [CPU_] |3984| 
        B         $C$L270,EQ            ; [CPU_] |3984| 
        ; branchcc occurs ; [] |3984| 
	.dwpsn	file "../Source/prod.c",line 4022,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4022| 
        ADDB      ACC,#148              ; [CPU_] |4022| 
        MOVL      XAR5,ACC              ; [CPU_] |4022| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4020,column 6,is_stmt,isa 0
        MOV       *XAR4++,#0            ; [CPU_] |4020| 
$C$L268:    
	.dwpsn	file "../Source/prod.c",line 4024,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4024| 
        ANDB      AL,#0xff              ; [CPU_] |4024| 
        MOV       *XAR4++,AL            ; [CPU_] |4024| 
	.dwpsn	file "../Source/prod.c",line 4025,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4025| 
        LSR       AL,8                  ; [CPU_] |4025| 
        MOV       *XAR4++,AL            ; [CPU_] |4025| 
	.dwpsn	file "../Source/prod.c",line 4023,column 18,is_stmt,isa 0
        BANZ      $C$L268,AR0--         ; [CPU_] |4023| 
        ; branchcc occurs ; [] |4023| 
	.dwpsn	file "../Source/prod.c",line 4029,column 6,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4029| 
        ADDB      ACC,#170              ; [CPU_] |4029| 
        MOVL      XAR5,ACC              ; [CPU_] |4029| 
        MOVB      XAR0,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4020,column 6,is_stmt,isa 0
        ADD       *-SP[55],#9           ; [CPU_] |4020| 
$C$L269:    
	.dwpsn	file "../Source/prod.c",line 4031,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4031| 
        ANDB      AL,#0xff              ; [CPU_] |4031| 
        MOV       *XAR4++,AL            ; [CPU_] |4031| 
	.dwpsn	file "../Source/prod.c",line 4032,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4032| 
        LSR       AL,8                  ; [CPU_] |4032| 
        MOV       *XAR4++,AL            ; [CPU_] |4032| 
	.dwpsn	file "../Source/prod.c",line 4030,column 18,is_stmt,isa 0
        BANZ      $C$L269,AR0--         ; [CPU_] |4030| 
        ; branchcc occurs ; [] |4030| 
        B         $C$L279,UNC           ; [CPU_] |4030| 
        ; branch occurs ; [] |4030| 
$C$L270:    
	.dwpsn	file "../Source/prod.c",line 3985,column 6,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |3985| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |3985| 
	.dwpsn	file "../Source/prod.c",line 3986,column 11,is_stmt,isa 0
        MOV       PL,#0                 ; [CPU_] |3986| 
	.dwpsn	file "../Source/prod.c",line 3985,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |3985| 
        INC       *-SP[55]              ; [CPU_] |3985| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3986,column 11,is_stmt,isa 0
        B         $C$L274,UNC           ; [CPU_] |3986| 
        ; branch occurs ; [] |3986| 
$C$L271:    
	.dwpsn	file "../Source/prod.c",line 3988,column 7,is_stmt,isa 0
        MOV       ACC,AL                ; [CPU_] |3988| 
        MOVL      XAR0,#40              ; [CPU_] |3988| 
        MOV       T,*-SP[51]            ; [CPU_] |3988| 
        MOVL      XAR6,ACC              ; [CPU_] |3988| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |3988| 
        MOVB      AL,#76                ; [CPU_] |3988| 
        MOVL      XAR5,#_conf_data      ; [CPU_U] 
        MPYU      ACC,T,AL              ; [CPU_] |3988| 
        ADDL      ACC,XAR6              ; [CPU_] |3988| 
        LSL       ACC,1                 ; [CPU_] |3988| 
        ADDL      ACC,XAR7              ; [CPU_] |3988| 
        ADDB      ACC,#100              ; [CPU_] |3988| 
        MOVL      XAR7,ACC              ; [CPU_] |3988| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,XAR5              ; [CPU_] 
        ADDB      ACC,#124              ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
$C$L272:    
	.dwpsn	file "../Source/prod.c",line 3990,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3990| 
        ANDB      AL,#0xff              ; [CPU_] |3990| 
        MOV       *XAR4++,AL            ; [CPU_] |3990| 
	.dwpsn	file "../Source/prod.c",line 3991,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3991| 
        LSR       AL,8                  ; [CPU_] |3991| 
        MOV       *XAR4++,AL            ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3989,column 19,is_stmt,isa 0
        BANZ      $C$L272,AR6--         ; [CPU_] |3989| 
        ; branchcc occurs ; [] |3989| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L273:    
	.dwpsn	file "../Source/prod.c",line 3997,column 8,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3997| 
        ANDB      AL,#0xff              ; [CPU_] |3997| 
        MOV       *XAR4++,AL            ; [CPU_] |3997| 
	.dwpsn	file "../Source/prod.c",line 3998,column 8,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3998| 
        LSR       AL,8                  ; [CPU_] |3998| 
        MOV       *XAR4++,AL            ; [CPU_] |3998| 
	.dwpsn	file "../Source/prod.c",line 3996,column 19,is_stmt,isa 0
        BANZ      $C$L273,AR0--         ; [CPU_] |3996| 
        ; branchcc occurs ; [] |3996| 
        MOV       AL,PL                 ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3991,column 8,is_stmt,isa 0
        ADD       *-SP[55],#8           ; [CPU_] |3991| 
	.dwpsn	file "../Source/prod.c",line 3986,column 51,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |3986| 
        MOV       PL,AL                 ; [CPU_] |3986| 
$C$L274:    
	.dwpsn	file "../Source/prod.c",line 3986,column 18,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |3986| 
        MOV       AL,PL                 ; [CPU_] |3986| 
        CMP       AL,*+XAR1[AR0]        ; [CPU_] |3986| 
        B         $C$L271,LT            ; [CPU_] |3986| 
        ; branchcc occurs ; [] |3986| 
	.dwpsn	file "../Source/prod.c",line 4003,column 11,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |4003| 
        SETC      SXM                   ; [CPU_] 
        B         $C$L278,UNC           ; [CPU_] |4003| 
        ; branch occurs ; [] |4003| 
$C$L275:    
	.dwpsn	file "../Source/prod.c",line 4005,column 7,is_stmt,isa 0
        MOV       ACC,AR5               ; [CPU_] |4005| 
        MOVL      XAR0,#40              ; [CPU_] |4005| 
        MOV       T,*-SP[51]            ; [CPU_] |4005| 
        MOVL      P,ACC                 ; [CPU_] |4005| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |4005| 
        MOVB      AL,#76                ; [CPU_] |4005| 
        MPYU      ACC,T,AL              ; [CPU_] |4005| 
        ADDL      ACC,P                 ; [CPU_] |4005| 
        LSL       ACC,1                 ; [CPU_] |4005| 
        ADDL      ACC,XAR6              ; [CPU_] |4005| 
        ADDB      ACC,#148              ; [CPU_] |4005| 
        MOVL      XAR7,ACC              ; [CPU_] |4005| 
        MOVB      AL,#76                ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] 
        LSL       ACC,1                 ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#170              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L276:    
	.dwpsn	file "../Source/prod.c",line 4007,column 8,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4007| 
        ANDB      AL,#0xff              ; [CPU_] |4007| 
        MOV       *XAR4++,AL            ; [CPU_] |4007| 
	.dwpsn	file "../Source/prod.c",line 4008,column 8,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4008| 
        LSR       AL,8                  ; [CPU_] |4008| 
        MOV       *XAR4++,AL            ; [CPU_] |4008| 
	.dwpsn	file "../Source/prod.c",line 4006,column 19,is_stmt,isa 0
        BANZ      $C$L276,AR6--         ; [CPU_] |4006| 
        ; branchcc occurs ; [] |4006| 
	.dwpsn	file "../Source/prod.c",line 4012,column 7,is_stmt,isa 0
        MOVL      XAR6,P                ; [CPU_] |4012| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L277:    
	.dwpsn	file "../Source/prod.c",line 4014,column 8,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4014| 
        ANDB      AL,#0xff              ; [CPU_] |4014| 
        MOV       *XAR4++,AL            ; [CPU_] |4014| 
	.dwpsn	file "../Source/prod.c",line 4015,column 8,is_stmt,isa 0
        MOV       AL,*XAR6++            ; [CPU_] |4015| 
        LSR       AL,8                  ; [CPU_] |4015| 
        MOV       *XAR4++,AL            ; [CPU_] |4015| 
	.dwpsn	file "../Source/prod.c",line 4013,column 19,is_stmt,isa 0
        BANZ      $C$L277,AR0--         ; [CPU_] |4013| 
        ; branchcc occurs ; [] |4013| 
	.dwpsn	file "../Source/prod.c",line 4003,column 55,is_stmt,isa 0
        ADDB      XAR5,#1               ; [CPU_] |4003| 
	.dwpsn	file "../Source/prod.c",line 4008,column 8,is_stmt,isa 0
        ADD       *-SP[55],#8           ; [CPU_] |4008| 
$C$L278:    
	.dwpsn	file "../Source/prod.c",line 4019,column 5,is_stmt,isa 0
        MOVB      XAR0,#98              ; [CPU_] |4019| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4019| 
        ADDB      AL,#-1                ; [CPU_] |4019| 
        CMP       AL,AR5                ; [CPU_] |4019| 
        B         $C$L275,GT            ; [CPU_] |4019| 
        ; branchcc occurs ; [] |4019| 
$C$L279:    
	.dwpsn	file "../Source/prod.c",line 4038,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4038| 
        ADDB      ACC,#192              ; [CPU_] |4038| 
        MOVL      XAR5,ACC              ; [CPU_] |4038| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L280:    
	.dwpsn	file "../Source/prod.c",line 4040,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4040| 
        ANDB      AL,#0xff              ; [CPU_] |4040| 
        MOV       *XAR4++,AL            ; [CPU_] |4040| 
	.dwpsn	file "../Source/prod.c",line 4041,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4041| 
        LSR       AL,8                  ; [CPU_] |4041| 
        MOV       *XAR4++,AL            ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4039,column 17,is_stmt,isa 0
        BANZ      $C$L280,AR0--         ; [CPU_] |4039| 
        ; branchcc occurs ; [] |4039| 
	.dwpsn	file "../Source/prod.c",line 4046,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4046| 
        ADDB      ACC,#194              ; [CPU_] |4046| 
        MOVL      XAR5,ACC              ; [CPU_] |4046| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L281:    
	.dwpsn	file "../Source/prod.c",line 4048,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4048| 
        ANDB      AL,#0xff              ; [CPU_] |4048| 
        MOV       *XAR4++,AL            ; [CPU_] |4048| 
	.dwpsn	file "../Source/prod.c",line 4049,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4049| 
        LSR       AL,8                  ; [CPU_] |4049| 
        MOV       *XAR4++,AL            ; [CPU_] |4049| 
	.dwpsn	file "../Source/prod.c",line 4047,column 17,is_stmt,isa 0
        BANZ      $C$L281,AR0--         ; [CPU_] |4047| 
        ; branchcc occurs ; [] |4047| 
	.dwpsn	file "../Source/prod.c",line 4054,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4054| 
        ADDB      ACC,#198              ; [CPU_] |4054| 
        MOVL      XAR5,ACC              ; [CPU_] |4054| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L282:    
	.dwpsn	file "../Source/prod.c",line 4056,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4056| 
        ANDB      AL,#0xff              ; [CPU_] |4056| 
        MOV       *XAR4++,AL            ; [CPU_] |4056| 
	.dwpsn	file "../Source/prod.c",line 4057,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4057| 
        LSR       AL,8                  ; [CPU_] |4057| 
        MOV       *XAR4++,AL            ; [CPU_] |4057| 
	.dwpsn	file "../Source/prod.c",line 4055,column 17,is_stmt,isa 0
        BANZ      $C$L282,AR0--         ; [CPU_] |4055| 
        ; branchcc occurs ; [] |4055| 
	.dwpsn	file "../Source/prod.c",line 4062,column 5,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |4062| 
        ADDB      ACC,#200              ; [CPU_] |4062| 
        MOVL      XAR5,ACC              ; [CPU_] |4062| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L283:    
	.dwpsn	file "../Source/prod.c",line 4064,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4064| 
        ANDB      AL,#0xff              ; [CPU_] |4064| 
        MOV       *XAR4++,AL            ; [CPU_] |4064| 
	.dwpsn	file "../Source/prod.c",line 4065,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4065| 
        LSR       AL,8                  ; [CPU_] |4065| 
        MOV       *XAR4++,AL            ; [CPU_] |4065| 
	.dwpsn	file "../Source/prod.c",line 4063,column 17,is_stmt,isa 0
        BANZ      $C$L283,AR0--         ; [CPU_] |4063| 
        ; branchcc occurs ; [] |4063| 
	.dwpsn	file "../Source/prod.c",line 4070,column 5,is_stmt,isa 0
        MOVB      XAR0,#202             ; [CPU_] |4070| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |4070| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4070| 
	.dwpsn	file "../Source/prod.c",line 4041,column 6,is_stmt,isa 0
        ADD       *-SP[55],#17          ; [CPU_] |4041| 
	.dwpsn	file "../Source/prod.c",line 4073,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |4073| 
        ; branch occurs ; [] |4073| 
$C$L284:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3863,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3863| 
        B         $C$L323,LO            ; [CPU_] |3863| 
        ; branchcc occurs ; [] |3863| 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3863| 
        MOVL      XAR0,#66              ; [CPU_] |3863| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3863| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3863| 
        B         $C$L323,LT            ; [CPU_] |3863| 
        ; branchcc occurs ; [] |3863| 
        CMPB      AL,#0                 ; [CPU_] |3863| 
        B         $C$L323,GT            ; [CPU_] |3863| 
        ; branchcc occurs ; [] |3863| 
	.dwpsn	file "../Source/prod.c",line 3867,column 5,is_stmt,isa 0
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3867| 
        MOV       *+XAR5[2],AL          ; [CPU_] |3867| 
	.dwpsn	file "../Source/prod.c",line 3869,column 5,is_stmt,isa 0
        MOV       T,*+XAR4[0]           ; [CPU_] |3869| 
        MOVL      XAR0,#40              ; [CPU_] |3869| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3869| 
        MPYB      ACC,T,#10             ; [CPU_] |3869| 
        ADDL      ACC,XAR6              ; [CPU_] |3869| 
        MOVL      XAR4,ACC              ; [CPU_] |3869| 
        MOVL      XAR7,ACC              ; [CPU_] |3869| 
        MOVB      XAR0,#42              ; [CPU_] |3869| 
        MOVL      P,ACC                 ; [CPU_] |3869| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3869| 
	.dwpsn	file "../Source/prod.c",line 3876,column 5,is_stmt,isa 0
        ADDB      XAR7,#44              ; [CPU_] |3876| 
        MOVL      XAR4,XAR5             ; [CPU_] 
        MOVL      XAR0,XAR7             ; [CPU_] |3876| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3869,column 5,is_stmt,isa 0
        MOV       *+XAR5[3],AL          ; [CPU_] |3869| 
        ADDB      XAR4,#4               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3873,column 6,is_stmt,isa 0
        RPT       #3
||     MOV       *XAR4++,#0            ; [CPU_] |3873| 
$C$L285:    
	.dwpsn	file "../Source/prod.c",line 3879,column 6,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |3879| 
        ANDB      AL,#0xff              ; [CPU_] |3879| 
        MOV       *XAR4++,AL            ; [CPU_] |3879| 
	.dwpsn	file "../Source/prod.c",line 3880,column 6,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |3880| 
        LSR       AL,8                  ; [CPU_] |3880| 
        MOV       *XAR4++,AL            ; [CPU_] |3880| 
	.dwpsn	file "../Source/prod.c",line 3877,column 17,is_stmt,isa 0
        BANZ      $C$L285,AR6--         ; [CPU_] |3877| 
        ; branchcc occurs ; [] |3877| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L286:    
	.dwpsn	file "../Source/prod.c",line 3887,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3887| 
        ANDB      AL,#0xff              ; [CPU_] |3887| 
        MOV       *XAR4++,AL            ; [CPU_] |3887| 
	.dwpsn	file "../Source/prod.c",line 3888,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3888| 
        LSR       AL,8                  ; [CPU_] |3888| 
        MOV       *XAR4++,AL            ; [CPU_] |3888| 
	.dwpsn	file "../Source/prod.c",line 3885,column 17,is_stmt,isa 0
        BANZ      $C$L286,AR6--         ; [CPU_] |3885| 
        ; branchcc occurs ; [] |3885| 
	.dwpsn	file "../Source/prod.c",line 3892,column 5,is_stmt,isa 0
        MOVL      XAR5,P                ; [CPU_] |3892| 
        ADDB      XAR5,#46              ; [CPU_] |3892| 
        MOVL      XAR7,XAR5             ; [CPU_] |3892| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L287:    
	.dwpsn	file "../Source/prod.c",line 3895,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3895| 
        ANDB      AL,#0xff              ; [CPU_] |3895| 
        MOV       *XAR4++,AL            ; [CPU_] |3895| 
	.dwpsn	file "../Source/prod.c",line 3896,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3896| 
        LSR       AL,8                  ; [CPU_] |3896| 
        MOV       *XAR4++,AL            ; [CPU_] |3896| 
	.dwpsn	file "../Source/prod.c",line 3893,column 17,is_stmt,isa 0
        BANZ      $C$L287,AR6--         ; [CPU_] |3893| 
        ; branchcc occurs ; [] |3893| 
	.dwpsn	file "../Source/prod.c",line 3900,column 5,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |3900| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L288:    
	.dwpsn	file "../Source/prod.c",line 3903,column 6,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |3903| 
        ANDB      AL,#0xff              ; [CPU_] |3903| 
        MOV       *XAR4++,AL            ; [CPU_] |3903| 
	.dwpsn	file "../Source/prod.c",line 3904,column 6,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |3904| 
        LSR       AL,8                  ; [CPU_] |3904| 
        MOV       *XAR4++,AL            ; [CPU_] |3904| 
	.dwpsn	file "../Source/prod.c",line 3901,column 17,is_stmt,isa 0
        BANZ      $C$L288,AR6--         ; [CPU_] |3901| 
        ; branchcc occurs ; [] |3901| 
	.dwpsn	file "../Source/prod.c",line 3873,column 6,is_stmt,isa 0
        MOV       *-SP[55],#28          ; [CPU_] |3873| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L289:    
	.dwpsn	file "../Source/prod.c",line 3911,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3911| 
        ANDB      AL,#0xff              ; [CPU_] |3911| 
        MOV       *XAR4++,AL            ; [CPU_] |3911| 
	.dwpsn	file "../Source/prod.c",line 3912,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3912| 
        LSR       AL,8                  ; [CPU_] |3912| 
        MOV       *XAR4++,AL            ; [CPU_] |3912| 
	.dwpsn	file "../Source/prod.c",line 3909,column 17,is_stmt,isa 0
        BANZ      $C$L289,AR6--         ; [CPU_] |3909| 
        ; branchcc occurs ; [] |3909| 
        B         $C$L765,UNC           ; [CPU_] |3909| 
        ; branch occurs ; [] |3909| 
$C$L290:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3817,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3817| 
        B         $C$L323,LO            ; [CPU_] |3817| 
        ; branchcc occurs ; [] |3817| 
	.dwpsn	file "../Source/prod.c",line 3821,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |3821| 
        B         $C$L291,EQ            ; [CPU_] |3821| 
        ; branchcc occurs ; [] |3821| 
        CMPB      AL,#1                 ; [CPU_] |3821| 
        B         $C$L291,EQ            ; [CPU_] |3821| 
        ; branchcc occurs ; [] |3821| 
        CMPB      AL,#2                 ; [CPU_] |3821| 
        B         $C$L291,EQ            ; [CPU_] |3821| 
        ; branchcc occurs ; [] |3821| 
        ADDB      XAR4,#2               ; [CPU_] |3821| 
        MOVL      XAR0,#66              ; [CPU_] |3821| 
        CMPB      AL,#3                 ; [CPU_] |3821| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3821| 
        B         $C$L323,NEQ           ; [CPU_] |3821| 
        ; branchcc occurs ; [] |3821| 
$C$L291:    
	.dwpsn	file "../Source/prod.c",line 3827,column 5,is_stmt,isa 0
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |3827| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR0,#66              ; [CPU_] |3827| 
        MOVL      XAR4,XAR5             ; [CPU_] |3827| 
        AND       AL,@_cmdbuff$2+2,#0xfffe ; [CPU_] |3827| 
        ADDB      XAR5,#2               ; [CPU_] |3827| 
        MOVL      *+FP[AR0],XAR5        ; [CPU_] |3827| 
        ADDB      XAR4,#6               ; [CPU_] |3827| 
        B         $C$L296,NEQ           ; [CPU_] |3827| 
        ; branchcc occurs ; [] |3827| 
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3828,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |3828| 
        B         $C$L323,LO            ; [CPU_] |3828| 
        ; branchcc occurs ; [] |3828| 
        ADDB      XAR4,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3833,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |3833| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L292:    
	.dwpsn	file "../Source/prod.c",line 3835,column 7,is_stmt,isa 0
        MOVX      TL,*--XAR4            ; [CPU_] |3835| 
        ADDL      ACC,XT                ; [CPU_] |3835| 
	.dwpsn	file "../Source/prod.c",line 3836,column 7,is_stmt,isa 0
        LSL       ACC,8                 ; [CPU_] |3836| 
	.dwpsn	file "../Source/prod.c",line 3834,column 18,is_stmt,isa 0
        BANZ      $C$L292,AR6--         ; [CPU_] |3834| 
        ; branchcc occurs ; [] |3834| 
        MOVL      XAR0,#74              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3839,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |3839| 
        MOVB      XAR0,#7               ; [CPU_] 
$C$L293:    
	.dwpsn	file "../Source/prod.c",line 3840,column 7,is_stmt,isa 0
        CMPL      ACC,*+XAR5[0]         ; [CPU_] |3840| 
        B         $C$L294,EQ            ; [CPU_] |3840| 
        ; branchcc occurs ; [] |3840| 
	.dwpsn	file "../Source/prod.c",line 3839,column 18,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |3839| 
        ADDB      XAR4,#1               ; [CPU_] |3839| 
        BANZ      $C$L293,AR0--         ; [CPU_] |3839| 
        ; branchcc occurs ; [] |3839| 
        B         $C$L295,UNC           ; [CPU_] |3839| 
        ; branch occurs ; [] |3839| 
$C$L294:    
	.dwpsn	file "../Source/prod.c",line 3841,column 8,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |3841| 
        MOVB      XAR0,#35              ; [CPU_] |3841| 
        MOV       *+XAR5[AR0],AR4       ; [CPU_] |3841| 
$C$L295:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3845,column 6,is_stmt,isa 0
        CMPB      AL,#8                 ; [CPU_] |3845| 
        B         $C$L323,EQ            ; [CPU_] |3845| 
        ; branchcc occurs ; [] |3845| 
$C$L296:    
	.dwpsn	file "../Source/prod.c",line 3851,column 5,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3851| 
        MOVL      XAR0,#66              ; [CPU_] |3851| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      ACC,XAR7              ; [CPU_] |3851| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3851| 
        ADDB      ACC,#2                ; [CPU_] |3851| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3851| 
        MOVB      XAR0,#34              ; [CPU_] |3851| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3851| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |3851| 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] |3851| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3851| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L297:    
	.dwpsn	file "../Source/prod.c",line 3854,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3854| 
        MOV       *XAR4++,AL            ; [CPU_] |3854| 
	.dwpsn	file "../Source/prod.c",line 3853,column 12,is_stmt,isa 0
        INC       *-SP[55]              ; [CPU_] |3853| 
        MOV       AL,*-SP[53]           ; [CPU_] |3853| 
	.dwpsn	file "../Source/prod.c",line 3854,column 6,is_stmt,isa 0
        ADDB      XAR7,#1               ; [CPU_] |3854| 
	.dwpsn	file "../Source/prod.c",line 3853,column 12,is_stmt,isa 0
        CMP       AL,*-SP[55]           ; [CPU_] |3853| 
        B         $C$L297,HI            ; [CPU_] |3853| 
        ; branchcc occurs ; [] |3853| 
        B         $C$L307,UNC           ; [CPU_] |3853| 
        ; branch occurs ; [] |3853| 
$C$L298:    
	.dwpsn	file "../Source/prod.c",line 3801,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |3801| 
        MOVB      XAR0,#34              ; [CPU_] |3801| 
        MOVL      XAR5,#_buff$1         ; [CPU_U] |3801| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3801| 
	.dwpsn	file "../Source/prod.c",line 3803,column 5,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |3803| 
	.dwpsn	file "../Source/prod.c",line 3801,column 5,is_stmt,isa 0
        MOV       *+XAR5[2],AL          ; [CPU_] |3801| 
        MOV       *-SP[55],#3           ; [CPU_] |3801| 
	.dwpsn	file "../Source/prod.c",line 3803,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |3803| 
        CMPB      AL,#1                 ; [CPU_] |3803| 
        B         $C$L299,EQ            ; [CPU_] |3803| 
        ; branchcc occurs ; [] |3803| 
        MOVB      XAR1,#34              ; [CPU_] |3803| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |3803| 
        B         $C$L765,NEQ           ; [CPU_] |3803| 
        ; branchcc occurs ; [] |3803| 
$C$L299:    
	.dwpsn	file "../Source/prod.c",line 3805,column 6,is_stmt,isa 0
        MOVB      XAR0,#35              ; [CPU_] |3805| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |3805| 
        MOVL      XAR0,#74              ; [CPU_] |3805| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |3805| 
        MOVL      XAR0,#44              ; [CPU_] |3805| 
        ADDL      ACC,XAR6              ; [CPU_] |3805| 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] |3805| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3805| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3808,column 7,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |3808| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *-SP[55],AL           ; [CPU_] |3808| 
$C$L300:    
	.dwpsn	file "../Source/prod.c",line 3807,column 7,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |3807| 
        ANDB      AL,#0xff              ; [CPU_] |3807| 
        MOV       *XAR4++,AL            ; [CPU_] |3807| 
	.dwpsn	file "../Source/prod.c",line 3808,column 7,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3808| 
        LSR       AL,8                  ; [CPU_] |3808| 
        MOV       *XAR4++,AL            ; [CPU_] |3808| 
	.dwpsn	file "../Source/prod.c",line 3806,column 18,is_stmt,isa 0
        BANZ      $C$L300,AR6--         ; [CPU_] |3806| 
        ; branchcc occurs ; [] |3806| 
        B         $C$L765,UNC           ; [CPU_] |3806| 
        ; branch occurs ; [] |3806| 
$C$L301:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3780,column 5,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |3780| 
        B         $C$L323,LO            ; [CPU_] |3780| 
        ; branchcc occurs ; [] |3780| 
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3780| 
        MOVL      XAR0,#66              ; [CPU_] |3780| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3780| 
        ADDB      AL,#3                 ; [CPU_] |3780| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3780| 
        CMP       AL,*-SP[53]           ; [CPU_] |3780| 
        B         $C$L323,HI            ; [CPU_] |3780| 
        ; branchcc occurs ; [] |3780| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3785,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3785| 
        ADDB      XAR4,#2               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        B         $C$L303,UNC           ; [CPU_] |3785| 
        ; branch occurs ; [] |3785| 
$C$L302:    
	.dwpsn	file "../Source/prod.c",line 3786,column 6,is_stmt,isa 0
        MOV       PL,#3                 ; [CPU_] |3786| 
        ADD       PL,AL                 ; [CPU_] |3786| 
        MOVL      ACC,XAR7              ; [CPU_] |3786| 
        ADD       ACC,PL                ; [CPU_] |3786| 
        MOVL      XAR7,ACC              ; [CPU_] |3786| 
	.dwpsn	file "../Source/prod.c",line 3785,column 33,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3785| 
	.dwpsn	file "../Source/prod.c",line 3786,column 6,is_stmt,isa 0
        MOV       AL,*XAR7              ; [CPU_] |3786| 
        MOV       *XAR4++,AL            ; [CPU_] |3786| 
$C$L303:    
	.dwpsn	file "../Source/prod.c",line 3785,column 17,is_stmt,isa 0
        MOVL      XAR7,#_cmdbuff$2      ; [CPU_U] |3785| 
        MOVL      XAR0,#66              ; [CPU_] |3785| 
        MOVL      ACC,XAR7              ; [CPU_] |3785| 
        ADDB      ACC,#2                ; [CPU_] |3785| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3785| 
        MOV       AL,AR6                ; [CPU_] |3785| 
        CMP       AL,*+XAR7[2]          ; [CPU_] |3785| 
        B         $C$L302,LT            ; [CPU_] |3785| 
        ; branchcc occurs ; [] |3785| 
	.dwpsn	file "../Source/prod.c",line 3788,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |3788| 
        MOVL      XAR0,#76              ; [CPU_] |3788| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3788| 
	.dwpsn	file "../Source/prod.c",line 3791,column 5,is_stmt,isa 0
$C$DW$755	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$755, DW_AT_low_pc(0x00)
	.dwattr $C$DW$755, DW_AT_name("_strlen")
	.dwattr $C$DW$755, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3791| 
        ; call occurs [#_strlen] ; [] |3791| 
	.dwpsn	file "../Source/prod.c",line 3792,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3792| 
	.dwpsn	file "../Source/prod.c",line 3793,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3793| 
	.dwpsn	file "../Source/prod.c",line 3792,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |3792| 
        MOV       *-SP[55],#3           ; [CPU_] |3792| 
	.dwpsn	file "../Source/prod.c",line 3793,column 17,is_stmt,isa 0
        B         $C$L307,EQ            ; [CPU_] |3793| 
        ; branchcc occurs ; [] |3793| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3793,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3793| 
        ADDB      XAR4,#3               ; [CPU_] 
        ADDB      XAR5,#2               ; [CPU_] 
$C$L304:    
	.dwpsn	file "../Source/prod.c",line 3794,column 6,is_stmt,isa 0
        MOV       AH,*XAR5++            ; [CPU_] |3794| 
	.dwpsn	file "../Source/prod.c",line 3793,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3793| 
	.dwpsn	file "../Source/prod.c",line 3794,column 6,is_stmt,isa 0
        MOV       *XAR4++,AH            ; [CPU_] |3794| 
        INC       *-SP[55]              ; [CPU_] |3794| 
	.dwpsn	file "../Source/prod.c",line 3793,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3793| 
        B         $C$L304,HI            ; [CPU_] |3793| 
        ; branchcc occurs ; [] |3793| 
	.dwpsn	file "../Source/prod.c",line 3797,column 5,is_stmt,isa 0
        B         $C$L307,UNC           ; [CPU_] |3797| 
        ; branch occurs ; [] |3797| 
$C$L305:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3760,column 5,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |3760| 
        B         $C$L323,LO            ; [CPU_] |3760| 
        ; branchcc occurs ; [] |3760| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3765,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3765| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3765| 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
        MOVL      ACC,*-SP[60]          ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L306:    
	.dwpsn	file "../Source/prod.c",line 3767,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |3767| 
        MOV       *+XAR4[0],AL          ; [CPU_] |3767| 
	.dwpsn	file "../Source/prod.c",line 3768,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |3768| 
        MOV       *XAR7++,AL            ; [CPU_] |3768| 
	.dwpsn	file "../Source/prod.c",line 3769,column 6,is_stmt,isa 0
        MOV       ACC,*XAR5++ << #8     ; [CPU_] |3769| 
        ADD       AL,*+XAR4[0]          ; [CPU_] |3769| 
        MOV       *XAR4++,AL            ; [CPU_] |3769| 
	.dwpsn	file "../Source/prod.c",line 3770,column 6,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |3770| 
        MOV       *XAR7++,AL            ; [CPU_] |3770| 
	.dwpsn	file "../Source/prod.c",line 3766,column 17,is_stmt,isa 0
        BANZ      $C$L306,AR6--         ; [CPU_] |3766| 
        ; branchcc occurs ; [] |3766| 
	.dwpsn	file "../Source/prod.c",line 3770,column 6,is_stmt,isa 0
        ADD       *-SP[55],#4           ; [CPU_] |3770| 
$C$L307:    
	.dwpsn	file "../Source/prod.c",line 3773,column 5,is_stmt,isa 0
        MOV       *-SP[42],#1           ; [CPU_] |3773| 
	.dwpsn	file "../Source/prod.c",line 3776,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |3776| 
        ; branch occurs ; [] |3776| 
$C$L308:    
	.dwpsn	file "../Source/prod.c",line 5685,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5685 | cmd_mode = SCI_MODE_ASCII;                                             
; 5686 | //ssr_set(3, 0);                        // indicate gui not connected  
; 5687 | //scia_set_cmd_mode( cmd_mode );                // set the ASCII comman
;     | d mode                                                                 
; 5688 | bincmdresult = OK_SendResult;                                          
;----------------------------------------------------------------------
        MOV       @_cmd_mode,#0         ; [CPU_] |5685| 
	.dwpsn	file "../Source/prod.c",line 5691,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5691 | update_units();                                                        
;----------------------------------------------------------------------
$C$DW$756	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$756, DW_AT_low_pc(0x00)
	.dwattr $C$DW$756, DW_AT_name("_update_units")
	.dwattr $C$DW$756, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5691| 
        ; call occurs [#_update_units] ; [] |5691| 
	.dwpsn	file "../Source/prod.c",line 5684,column 5,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |5684| 
	.dwpsn	file "../Source/prod.c",line 5692,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5692 | break;                                                                 
; 5694 | default:                                                               
; 5696 | // send back NACK?                                                     
; 5698 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L765,UNC           ; [CPU_] |5692| 
        ; branch occurs ; [] |5692| 
$C$L309:    
	.dwpsn	file "../Source/prod.c",line 5678,column 5,is_stmt,isa 0
        MOV       *-SP[47],#1           ; [CPU_] |5678| 
	.dwpsn	file "../Source/prod.c",line 5680,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |5680| 
        ; branch occurs ; [] |5680| 
$C$L310:    
	.dwpsn	file "../Source/prod.c",line 4315,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |4315| 
	.dwpsn	file "../Source/prod.c",line 4316,column 5,is_stmt,isa 0
        B         $C$L312,UNC           ; [CPU_] |4316| 
        ; branch occurs ; [] |4316| 
$C$L311:    
	.dwpsn	file "../Source/prod.c",line 4311,column 5,is_stmt,isa 0
        MOVB      AH,#0                 ; [CPU_] |4311| 
$C$L312:    
        MOVB      AL,#0                 ; [CPU_] |4311| 
$C$DW$757	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$757, DW_AT_low_pc(0x00)
	.dwattr $C$DW$757, DW_AT_name("_ssr_set")
	.dwattr $C$DW$757, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |4311| 
        ; call occurs [#_ssr_set] ; [] |4311| 
	.dwpsn	file "../Source/prod.c",line 4312,column 5,is_stmt,isa 0
        B         $C$L320,UNC           ; [CPU_] |4312| 
        ; branch occurs ; [] |4312| 
$C$L313:    
	.dwpsn	file "../Source/prod.c",line 5619,column 5,is_stmt,isa 0
$C$DW$758	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$758, DW_AT_low_pc(0x00)
	.dwattr $C$DW$758, DW_AT_name("_conf_read")
	.dwattr $C$DW$758, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |5619| 
        ; call occurs [#_conf_read] ; [] |5619| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5622,column 5,is_stmt,isa 0
$C$DW$759	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$759, DW_AT_low_pc(0x00)
	.dwattr $C$DW$759, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$759, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5622| 
        ; call occurs [#_ad7738_setcal] ; [] |5622| 
	.dwpsn	file "../Source/prod.c",line 5623,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5623| 
$C$DW$760	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$760, DW_AT_low_pc(0x00)
	.dwattr $C$DW$760, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$760, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5623| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5623| 
	.dwpsn	file "../Source/prod.c",line 5624,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5624| 
$C$DW$761	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$761, DW_AT_low_pc(0x00)
	.dwattr $C$DW$761, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$761, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5624| 
        ; call occurs [#_ad7738_resetvall] ; [] |5624| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5628,column 5,is_stmt,isa 0
$C$DW$762	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$762, DW_AT_low_pc(0x00)
	.dwattr $C$DW$762, DW_AT_name("_update_units")
	.dwattr $C$DW$762, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5628| 
        ; call occurs [#_update_units] ; [] |5628| 
	.dwpsn	file "../Source/prod.c",line 5627,column 5,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |5627| 
	.dwpsn	file "../Source/prod.c",line 5630,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |5630| 
        ; branch occurs ; [] |5630| 
$C$L314:    
	.dwpsn	file "../Source/prod.c",line 5583,column 5,is_stmt,isa 0
$C$DW$763	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$763, DW_AT_low_pc(0x00)
	.dwattr $C$DW$763, DW_AT_name("_conf_default")
	.dwattr $C$DW$763, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |5583| 
        ; call occurs [#_conf_default] ; [] |5583| 
	.dwpsn	file "../Source/prod.c",line 5586,column 5,is_stmt,isa 0
$C$DW$764	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$764, DW_AT_low_pc(0x00)
	.dwattr $C$DW$764, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$764, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5586| 
        ; call occurs [#_lcd_clear] ; [] |5586| 
	.dwpsn	file "../Source/prod.c",line 5587,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |5587| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |5587| 
$C$DW$765	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$765, DW_AT_low_pc(0x00)
	.dwattr $C$DW$765, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$765, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5587| 
        ; call occurs [#_lcd_puts] ; [] |5587| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L315:    
	.dwpsn	file "../Source/prod.c",line 5590,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5590| 
$C$DW$766	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$766, DW_AT_low_pc(0x00)
	.dwattr $C$DW$766, DW_AT_name("_delay_us")
	.dwattr $C$DW$766, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5590| 
        ; call occurs [#_delay_us] ; [] |5590| 
	.dwpsn	file "../Source/prod.c",line 5589,column 17,is_stmt,isa 0
        BANZ      $C$L315,AR3--         ; [CPU_] |5589| 
        ; branchcc occurs ; [] |5589| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5594,column 5,is_stmt,isa 0
$C$DW$767	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$767, DW_AT_low_pc(0x00)
	.dwattr $C$DW$767, DW_AT_name("_conf_write")
	.dwattr $C$DW$767, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |5594| 
        ; call occurs [#_conf_write] ; [] |5594| 
        MOVZ      AR1,AL                ; [CPU_] |5594| 
	.dwpsn	file "../Source/prod.c",line 5595,column 5,is_stmt,isa 0
$C$DW$768	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$768, DW_AT_low_pc(0x00)
	.dwattr $C$DW$768, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$768, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |5595| 
        ; call occurs [#_ad7738_setcal] ; [] |5595| 
	.dwpsn	file "../Source/prod.c",line 5596,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5596| 
$C$DW$769	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$769, DW_AT_low_pc(0x00)
	.dwattr $C$DW$769, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$769, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |5596| 
        ; call occurs [#_ad7738_resetpeak] ; [] |5596| 
	.dwpsn	file "../Source/prod.c",line 5597,column 5,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |5597| 
$C$DW$770	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$770, DW_AT_low_pc(0x00)
	.dwattr $C$DW$770, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$770, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |5597| 
        ; call occurs [#_ad7738_resetvall] ; [] |5597| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5600,column 5,is_stmt,isa 0
        B         $C$L316,NEQ           ; [CPU_] |5600| 
        ; branchcc occurs ; [] |5600| 
	.dwpsn	file "../Source/prod.c",line 5601,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL84        ; [CPU_U] |5601| 
        MOVB      AL,#31                ; [CPU_] |5601| 
        SPM       #0                    ; [CPU_] 
$C$DW$771	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$771, DW_AT_low_pc(0x00)
	.dwattr $C$DW$771, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$771, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5601| 
        ; call occurs [#_lcd_puts] ; [] |5601| 
	.dwpsn	file "../Source/prod.c",line 5602,column 6,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |5602| 
	.dwpsn	file "../Source/prod.c",line 5603,column 6,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |5603| 
	.dwpsn	file "../Source/prod.c",line 5604,column 5,is_stmt,isa 0
        B         $C$L317,UNC           ; [CPU_] |5604| 
        ; branch occurs ; [] |5604| 
$C$L316:    
	.dwpsn	file "../Source/prod.c",line 5605,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL85        ; [CPU_U] |5605| 
        MOVB      AL,#31                ; [CPU_] |5605| 
        SPM       #0                    ; [CPU_] 
$C$DW$772	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$772, DW_AT_low_pc(0x00)
	.dwattr $C$DW$772, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$772, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |5605| 
        ; call occurs [#_lcd_puts] ; [] |5605| 
	.dwpsn	file "../Source/prod.c",line 5606,column 6,is_stmt,isa 0
        MOV       *-SP[41],#3           ; [CPU_] |5606| 
$C$L317:    
        MOVB      XAR3,#49              ; [CPU_] 
$C$L318:    
	.dwpsn	file "../Source/prod.c",line 5609,column 6,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |5609| 
$C$DW$773	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$773, DW_AT_low_pc(0x00)
	.dwattr $C$DW$773, DW_AT_name("_delay_us")
	.dwattr $C$DW$773, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5609| 
        ; call occurs [#_delay_us] ; [] |5609| 
	.dwpsn	file "../Source/prod.c",line 5608,column 17,is_stmt,isa 0
        BANZ      $C$L318,AR3--         ; [CPU_] |5608| 
        ; branchcc occurs ; [] |5608| 
$C$L319:    
	.dwpsn	file "../Source/prod.c",line 5611,column 5,is_stmt,isa 0
$C$DW$774	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$774, DW_AT_low_pc(0x00)
	.dwattr $C$DW$774, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$774, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |5611| 
        ; call occurs [#_lcd_clear] ; [] |5611| 
	.dwpsn	file "../Source/prod.c",line 5612,column 5,is_stmt,isa 0
$C$DW$775	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$775, DW_AT_low_pc(0x00)
	.dwattr $C$DW$775, DW_AT_name("_update_units")
	.dwattr $C$DW$775, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |5612| 
        ; call occurs [#_update_units] ; [] |5612| 
$C$L320:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5701,column 4,is_stmt,isa 0
;----------------------------------------------------------------------
; 5701 | switch (bincmdresult) {                                                
; 5702 | case OK_SendResult:                                                    
; 5703 |         scia_send_bin(buff, j);         // send back                   
; 5705 |         if (cmdbuff[1] == SwitchToASCII) {                             
; 5706 |                 delay_us(2000);                 // 2ms                 
; 5707 |                 scia_set_cmd_mode(cmd_mode);// set the ASCII command mo
;     | de                                                                     
; 5709 |         break;                                                         
; 5711 | case Error_UnImpl:                                                     
; 5713 |         buff[1] = CmdUnImpl;                                           
; 5714 |         buff[2] = cmdbuff[1];                                          
; 5715 |         scia_send_bin(buff, 3);         // send back                   
; 5716 |         break;                                                         
; 5718 | case Error_Invalid:                                                    
; 5720 |         buff[1] = CmdInvalid;                                          
; 5721 |         buff[2] = cmdbuff[1];                                          
; 5722 |         scia_send_bin(buff, 3);         // send back                   
; 5723 |         break;                                                         
; 5725 | case Error_Exe:                                                        
;----------------------------------------------------------------------
        B         $C$L765,EQ            ; [CPU_] |5701| 
        ; branchcc occurs ; [] |5701| 
        CMPB      AL,#1                 ; [CPU_] |5701| 
        B         $C$L324,EQ            ; [CPU_] |5701| 
        ; branchcc occurs ; [] |5701| 
        CMPB      AL,#2                 ; [CPU_] |5701| 
        B         $C$L323,EQ            ; [CPU_] |5701| 
        ; branchcc occurs ; [] |5701| 
        CMPB      AL,#3                 ; [CPU_] |5701| 
        B         $C$L648,NEQ           ; [CPU_] |5701| 
        ; branchcc occurs ; [] |5701| 
$C$L321:    
	.dwpsn	file "../Source/prod.c",line 5727,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5727 | buff[1] = CmdExeErr;                                                   
;----------------------------------------------------------------------
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5727| 
        MOVB      *+XAR4[1],#250,UNC    ; [CPU_] |5727| 
$C$L322:    
	.dwpsn	file "../Source/prod.c",line 5728,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5728 | buff[2] = cmdbuff[1];                                                  
;----------------------------------------------------------------------
        MOVL      XAR5,#_cmdbuff$2      ; [CPU_U] |5728| 
        MOV       AL,*+XAR5[1]          ; [CPU_] |5728| 
        MOV       *+XAR4[2],AL          ; [CPU_] |5728| 
	.dwpsn	file "../Source/prod.c",line 5729,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5729 | scia_send_bin(buff, 3);         // send back                           
;----------------------------------------------------------------------
        MOVB      AL,#3                 ; [CPU_] |5729| 
$C$DW$776	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$776, DW_AT_low_pc(0x00)
	.dwattr $C$DW$776, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$776, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5729| 
        ; call occurs [#_scia_send_bin] ; [] |5729| 
	.dwpsn	file "../Source/prod.c",line 5730,column 5,is_stmt,isa 0
;----------------------------------------------------------------------
; 5730 | break;                                                                 
; 5732 | default:                                                               
; 5734 | break;                                                                 
;----------------------------------------------------------------------
        B         $C$L648,UNC           ; [CPU_] |5730| 
        ; branch occurs ; [] |5730| 
$C$L323:    
	.dwpsn	file "../Source/prod.c",line 5720,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5720| 
        MOVB      *+XAR4[1],#249,UNC    ; [CPU_] |5720| 
	.dwpsn	file "../Source/prod.c",line 5723,column 5,is_stmt,isa 0
        B         $C$L322,UNC           ; [CPU_] |5723| 
        ; branch occurs ; [] |5723| 
$C$L324:    
	.dwpsn	file "../Source/prod.c",line 5713,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |5713| 
        MOVB      *+XAR4[1],#248,UNC    ; [CPU_] |5713| 
	.dwpsn	file "../Source/prod.c",line 5716,column 5,is_stmt,isa 0
        B         $C$L322,UNC           ; [CPU_] |5716| 
        ; branch occurs ; [] |5716| 
$C$L325:    
	.dwpsn	file "../Source/prod.c",line 944,column 4,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |944| 
        MOV       AH,*+XAR4[0]          ; [CPU_] |944| 
        MOV       AL,AH                 ; [CPU_] |944| 
        ADDB      AL,#-65               ; [CPU_] |944| 
        CMPB      AL,#25                ; [CPU_] |944| 
        B         $C$L635,HI            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
        MOV       AL,AH                 ; [CPU_] |944| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,#$C$SW1          ; [CPU_U] |944| 
        ADDB      AL,#-65               ; [CPU_] |944| 
        MOV       ACC,AL << #1          ; [CPU_] |944| 
        MOV       ACC,AL                ; [CPU_] |944| 
        ADDL      XAR7,ACC              ; [CPU_] |944| 
        MOVL      XAR7,*XAR7            ; [CPU_] |944| 
        LB        *XAR7                 ; [CPU_] |944| 
        ; branch occurs ; [] |944| 
	.sect	".switch:_main"
	.clink
$C$SW1:	.long	$C$L643	; 65
	.long	$C$L601	; 66
	.long	$C$L540	; 67
	.long	$C$L524	; 68
	.long	$C$L517	; 69
	.long	$C$L508	; 70
	.long	$C$L635	; 0
	.long	$C$L642	; 72
	.long	$C$L635	; 0
	.long	$C$L504	; 74
	.long	$C$L641	; 75
	.long	$C$L472	; 76
	.long	$C$L635	; 0
	.long	$C$L635	; 0
	.long	$C$L449	; 79
	.long	$C$L435	; 80
	.long	$C$L640	; 81
	.long	$C$L420	; 82
	.long	$C$L357	; 83
	.long	$C$L354	; 84
	.long	$C$L329	; 85
	.long	$C$L635	; 0
	.long	$C$L635	; 0
	.long	$C$L638	; 88
	.long	$C$L326	; 89
	.long	$C$L636	; 90
	.sect	".text"
$C$L326:    
	.dwpsn	file "../Source/prod.c",line 1003,column 5,is_stmt,isa 0
$C$DW$777	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$777, DW_AT_low_pc(0x00)
	.dwattr $C$DW$777, DW_AT_name("_getautoHeightEnable")
	.dwattr $C$DW$777, DW_AT_TI_call

        LCR       #_getautoHeightEnable ; [CPU_] |1003| 
        ; call occurs [#_getautoHeightEnable] ; [] |1003| 
        CMPB      AL,#0                 ; [CPU_] |1003| 
        B         $C$L328,NEQ           ; [CPU_] |1003| 
        ; branchcc occurs ; [] |1003| 
	.dwpsn	file "../Source/prod.c",line 1005,column 6,is_stmt,isa 0
$C$DW$778	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$778, DW_AT_low_pc(0x00)
	.dwattr $C$DW$778, DW_AT_name("_ad7738_getpos")
	.dwattr $C$DW$778, DW_AT_TI_call

        LCR       #_ad7738_getpos       ; [CPU_] |1005| 
        ; call occurs [#_ad7738_getpos] ; [] |1005| 
$C$DW$779	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$779, DW_AT_low_pc(0x00)
	.dwattr $C$DW$779, DW_AT_name("_calcAutoDir")
	.dwattr $C$DW$779, DW_AT_TI_call

        LCR       #_calcAutoDir         ; [CPU_] |1005| 
        ; call occurs [#_calcAutoDir] ; [] |1005| 
	.dwpsn	file "../Source/prod.c",line 1006,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1006| 
$C$L327:    
$C$DW$780	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$780, DW_AT_low_pc(0x00)
	.dwattr $C$DW$780, DW_AT_name("_setautoHeightEnable")
	.dwattr $C$DW$780, DW_AT_TI_call

        LCR       #_setautoHeightEnable ; [CPU_] |1006| 
        ; call occurs [#_setautoHeightEnable] ; [] |1006| 
	.dwpsn	file "../Source/prod.c",line 1007,column 5,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |1007| 
        ; branch occurs ; [] |1007| 
$C$L328:    
	.dwpsn	file "../Source/prod.c",line 1009,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1009| 
        B         $C$L327,UNC           ; [CPU_] |1009| 
        ; branch occurs ; [] |1009| 
$C$L329:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1111,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1111| 
        B         $C$L635,LO            ; [CPU_] |1111| 
        ; branchcc occurs ; [] |1111| 
	.dwpsn	file "../Source/prod.c",line 1114,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1114| 
        CMPB      AL,#73                ; [CPU_] |1114| 
        B         $C$L330,GT            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#73                ; [CPU_] |1114| 
        B         $C$L341,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#66                ; [CPU_] |1114| 
        B         $C$L333,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#67                ; [CPU_] |1114| 
        B         $C$L350,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#70                ; [CPU_] |1114| 
        B         $C$L347,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        B         $C$L635,UNC           ; [CPU_] |1114| 
        ; branch occurs ; [] |1114| 
$C$L330:    
        CMPB      AL,#78                ; [CPU_] |1114| 
        B         $C$L331,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#83                ; [CPU_] |1114| 
        B         $C$L340,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        CMPB      AL,#87                ; [CPU_] |1114| 
        B         $C$L339,EQ            ; [CPU_] |1114| 
        ; branchcc occurs ; [] |1114| 
        B         $C$L635,UNC           ; [CPU_] |1114| 
        ; branch occurs ; [] |1114| 
$C$L331:    
	.dwpsn	file "../Source/prod.c",line 1131,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL87        ; [CPU_U] |1131| 
        MOVL      XAR0,#44              ; [CPU_] |1131| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1131| 
        MOVB      *-SP[3],#31,UNC       ; [CPU_] |1131| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1131| 
        MOVL      XAR4,XAR1             ; [CPU_] |1131| 
$C$DW$781	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$781, DW_AT_low_pc(0x00)
	.dwattr $C$DW$781, DW_AT_name("_sprintf")
	.dwattr $C$DW$781, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1131| 
        ; call occurs [#_sprintf] ; [] |1131| 
	.dwpsn	file "../Source/prod.c",line 1132,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1132| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1132| 
	.dwpsn	file "../Source/prod.c",line 1131,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1131| 
	.dwpsn	file "../Source/prod.c",line 1132,column 6,is_stmt,isa 0
$C$DW$782	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$782, DW_AT_low_pc(0x00)
	.dwattr $C$DW$782, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$782, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1132| 
        ; call occurs [#_scia_getparam] ; [] |1132| 
        CMPB      AL,#31                ; [CPU_] |1132| 
        B         $C$L332,LOS           ; [CPU_] |1132| 
        ; branchcc occurs ; [] |1132| 
	.dwpsn	file "../Source/prod.c",line 1136,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1136| 
        MOVB      XAR0,#31              ; [CPU_] |1136| 
	.dwpsn	file "../Source/prod.c",line 1135,column 7,is_stmt,isa 0
        MOVB      AL,#31                ; [CPU_] |1135| 
	.dwpsn	file "../Source/prod.c",line 1136,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1136| 
$C$L332:    
	.dwpsn	file "../Source/prod.c",line 1139,column 6,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1139| 
        MOVL      XAR0,#76              ; [CPU_] |1139| 
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1139| 
        ADD       AH,AL                 ; [CPU_] |1139| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1139| 
        MOVU      ACC,AH                ; [CPU_] |1139| 
        MOVL      XAR5,XAR1             ; [CPU_] |1139| 
$C$DW$783	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$783, DW_AT_low_pc(0x00)
	.dwattr $C$DW$783, DW_AT_name("_memcpy")
	.dwattr $C$DW$783, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1139| 
        ; call occurs [#_memcpy] ; [] |1139| 
        MOVL      XAR4,XAR1             ; [CPU_] |1139| 
	.dwpsn	file "../Source/prod.c",line 1143,column 6,is_stmt,isa 0
$C$DW$784	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$784, DW_AT_low_pc(0x00)
	.dwattr $C$DW$784, DW_AT_name("_scia_puts")
	.dwattr $C$DW$784, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1143| 
        ; call occurs [#_scia_puts] ; [] |1143| 
	.dwpsn	file "../Source/prod.c",line 1144,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1144| 
	.dwpsn	file "../Source/prod.c",line 1146,column 6,is_stmt,isa 0
        B         $C$L412,UNC           ; [CPU_] |1146| 
        ; branch occurs ; [] |1146| 
$C$L333:    
	.dwpsn	file "../Source/prod.c",line 1236,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1236| 
        MOVB      XAR0,#34              ; [CPU_] |1236| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1236| 
        CMPB      AL,#3                 ; [CPU_] |1236| 
        B         $C$L338,EQ            ; [CPU_] |1236| 
        ; branchcc occurs ; [] |1236| 
        MOVB      XAR1,#34              ; [CPU_] |1236| 
        MOV       AL,*+XAR4[AR1]        ; [CPU_] |1236| 
        CMPB      AL,#2                 ; [CPU_] |1236| 
        B         $C$L338,EQ            ; [CPU_] |1236| 
        ; branchcc occurs ; [] |1236| 
        MOVL      XAR0,#74              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1243,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1243| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] |1243| 
$C$L334:    
	.dwpsn	file "../Source/prod.c",line 1244,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL88        ; [CPU_U] |1244| 
        MOVL      XAR0,#44              ; [CPU_] |1244| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1244| 
        MOV       *-SP[3],AL            ; [CPU_] |1244| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1244| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1244| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1244| 
$C$DW$785	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$785, DW_AT_low_pc(0x00)
	.dwattr $C$DW$785, DW_AT_name("_sprintf")
	.dwattr $C$DW$785, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1244| 
        ; call occurs [#_sprintf] ; [] |1244| 
        MOVL      XAR0,#44              ; [CPU_] |1244| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1244| 
	.dwpsn	file "../Source/prod.c",line 1245,column 7,is_stmt,isa 0
$C$DW$786	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$786, DW_AT_low_pc(0x00)
	.dwattr $C$DW$786, DW_AT_name("_scia_puts")
	.dwattr $C$DW$786, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1245| 
        ; call occurs [#_scia_puts] ; [] |1245| 
        MOV       AL,*-SP[41]           ; [CPU_] |1245| 
	.dwpsn	file "../Source/prod.c",line 1246,column 7,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |1246| 
        B         $C$L335,GEQ           ; [CPU_] |1246| 
        ; branchcc occurs ; [] |1246| 
	.dwpsn	file "../Source/prod.c",line 1247,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1247| 
$C$DW$787	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$787, DW_AT_low_pc(0x00)
	.dwattr $C$DW$787, DW_AT_name("_scia_puts")
	.dwattr $C$DW$787, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1247| 
        ; call occurs [#_scia_puts] ; [] |1247| 
$C$L335:    
	.dwpsn	file "../Source/prod.c",line 1243,column 18,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |1243| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        CMPB      AL,#8                 ; [CPU_] |1243| 
        B         $C$L334,LT            ; [CPU_] |1243| 
        ; branchcc occurs ; [] |1243| 
	.dwpsn	file "../Source/prod.c",line 1250,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1250| 
$C$DW$788	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$788, DW_AT_low_pc(0x00)
	.dwattr $C$DW$788, DW_AT_name("_scia_puts")
	.dwattr $C$DW$788, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1250| 
        ; call occurs [#_scia_puts] ; [] |1250| 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1251,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL90        ; [CPU_U] |1251| 
        MOVB      XAR0,#35              ; [CPU_] |1251| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+35     ; [CPU_] |1251| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1251| 
        MOV       *-SP[3],AL            ; [CPU_] |1251| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1251| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1251| 
        MOVL      XAR0,#74              ; [CPU_] |1251| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1251| 
        ADDL      ACC,XAR6              ; [CPU_] |1251| 
        MOVL      XAR4,ACC              ; [CPU_] |1251| 
        MOVL      XAR0,#44              ; [CPU_] |1251| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1251| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1251| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1251| 
        MOVL      XAR4,XAR1             ; [CPU_] |1251| 
$C$DW$789	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$789, DW_AT_low_pc(0x00)
	.dwattr $C$DW$789, DW_AT_name("_sprintf")
	.dwattr $C$DW$789, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1251| 
        ; call occurs [#_sprintf] ; [] |1251| 
        MOVL      XAR4,XAR1             ; [CPU_] |1251| 
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1254| 
	.dwpsn	file "../Source/prod.c",line 1251,column 6,is_stmt,isa 0
        MOV       *-SP[41],AL           ; [CPU_] |1251| 
	.dwpsn	file "../Source/prod.c",line 1254,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1254| 
        MOVL      XAR5,XAR1             ; [CPU_] |1254| 
$C$DW$790	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$790, DW_AT_low_pc(0x00)
	.dwattr $C$DW$790, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$790, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1254| 
        ; call occurs [#_scia_getparam] ; [] |1254| 
        MOVL      XAR4,XAR1             ; [CPU_] |1254| 
	.dwpsn	file "../Source/prod.c",line 1255,column 6,is_stmt,isa 0
$C$DW$791	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$791, DW_AT_low_pc(0x00)
	.dwattr $C$DW$791, DW_AT_name("_scia_puts")
	.dwattr $C$DW$791, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1255| 
        ; call occurs [#_scia_puts] ; [] |1255| 
	.dwpsn	file "../Source/prod.c",line 1256,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1256| 
$C$DW$792	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$792, DW_AT_low_pc(0x00)
	.dwattr $C$DW$792, DW_AT_name("_scia_puts")
	.dwattr $C$DW$792, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1256| 
        ; call occurs [#_scia_puts] ; [] |1256| 
        MOV       AL,*-SP[41]           ; [CPU_] |1256| 
	.dwpsn	file "../Source/prod.c",line 1257,column 6,is_stmt,isa 0
        B         $C$L337,EQ            ; [CPU_] |1257| 
        ; branchcc occurs ; [] |1257| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1262,column 6,is_stmt,isa 0
$C$DW$793	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$793, DW_AT_low_pc(0x00)
	.dwattr $C$DW$793, DW_AT_name("_atoi")
	.dwattr $C$DW$793, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1262| 
        ; call occurs [#_atoi] ; [] |1262| 
        CMPB      AL,#7                 ; [CPU_] |1262| 
        B         $C$L336,HI            ; [CPU_] |1262| 
        ; branchcc occurs ; [] |1262| 
	.dwpsn	file "../Source/prod.c",line 1268,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1268| 
        MOVB      XAR1,#35              ; [CPU_] |1268| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1268| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL91        ; [CPU_U] |1269| 
        CLRC      SXM                   ; [CPU_] 
        MOVB      XAR0,#35              ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1268,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1268| 
	.dwpsn	file "../Source/prod.c",line 1269,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1269| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1269| 
        MOVL      XAR0,#74              ; [CPU_] |1269| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1269| 
	.dwpsn	file "../Source/prod.c",line 1276,column 6,is_stmt,isa 0
        B         $C$L344,UNC           ; [CPU_] |1276| 
        ; branch occurs ; [] |1276| 
$C$L336:    
	.dwpsn	file "../Source/prod.c",line 1264,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL93        ; [CPU_U] |1264| 
	.dwpsn	file "../Source/prod.c",line 1266,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |1266| 
        ; branch occurs ; [] |1266| 
$C$L337:    
	.dwpsn	file "../Source/prod.c",line 1258,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL94        ; [CPU_U] |1258| 
	.dwpsn	file "../Source/prod.c",line 1260,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |1260| 
        ; branch occurs ; [] |1260| 
$C$L338:    
	.dwpsn	file "../Source/prod.c",line 1238,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL95        ; [CPU_U] |1238| 
	.dwpsn	file "../Source/prod.c",line 1240,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |1240| 
        ; branch occurs ; [] |1240| 
$C$L339:    
	.dwpsn	file "../Source/prod.c",line 1309,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL96        ; [CPU_U] |1309| 
        MOVB      XAR0,#40              ; [CPU_] |1309| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1309| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1309| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1309| 
        MOVL      XAR0,#44              ; [CPU_] |1309| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1309| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1309| 
$C$DW$794	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$794, DW_AT_low_pc(0x00)
	.dwattr $C$DW$794, DW_AT_name("_sprintf")
	.dwattr $C$DW$794, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1309| 
        ; call occurs [#_sprintf] ; [] |1309| 
        MOVL      XAR0,#44              ; [CPU_] |1309| 
	.dwpsn	file "../Source/prod.c",line 1311,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1311| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1311| 
	.dwpsn	file "../Source/prod.c",line 1309,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1309| 
	.dwpsn	file "../Source/prod.c",line 1311,column 6,is_stmt,isa 0
$C$DW$795	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$795, DW_AT_low_pc(0x00)
	.dwattr $C$DW$795, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$795, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1311| 
        ; call occurs [#_scia_getparam] ; [] |1311| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1311,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1311| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$796	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$796, DW_AT_low_pc(0x00)
	.dwattr $C$DW$796, DW_AT_name("_strtod")
	.dwattr $C$DW$796, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1312,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1312| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1312| 
        MOVB      XAR1,#40              ; [CPU_] |1312| 
        MOVL      *+XAR4[AR1],ACC       ; [CPU_] |1312| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1312| 
	.dwpsn	file "../Source/prod.c",line 1313,column 6,is_stmt,isa 0
$C$DW$797	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$797, DW_AT_low_pc(0x00)
	.dwattr $C$DW$797, DW_AT_name("_scia_puts")
	.dwattr $C$DW$797, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1313| 
        ; call occurs [#_scia_puts] ; [] |1313| 
	.dwpsn	file "../Source/prod.c",line 1314,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1314| 
$C$DW$798	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$798, DW_AT_low_pc(0x00)
	.dwattr $C$DW$798, DW_AT_name("_scia_puts")
	.dwattr $C$DW$798, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1314| 
        ; call occurs [#_scia_puts] ; [] |1314| 
	.dwpsn	file "../Source/prod.c",line 1316,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1316| 
        MOVL      XAR4,#$C$FSL97        ; [CPU_U] |1316| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1316| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1316| 
        MOVB      XAR1,#40              ; [CPU_] |1316| 
        MOVL      XAR0,#44              ; [CPU_] |1316| 
        MOVL      ACC,*+XAR4[AR1]       ; [CPU_] |1316| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1316| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1316| 
        MOVL      XAR4,XAR1             ; [CPU_] |1316| 
$C$DW$799	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$799, DW_AT_low_pc(0x00)
	.dwattr $C$DW$799, DW_AT_name("_sprintf")
	.dwattr $C$DW$799, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1316| 
        ; call occurs [#_sprintf] ; [] |1316| 
        MOVL      XAR4,XAR1             ; [CPU_] |1316| 
	.dwpsn	file "../Source/prod.c",line 1318,column 6,is_stmt,isa 0
$C$DW$800	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$800, DW_AT_low_pc(0x00)
	.dwattr $C$DW$800, DW_AT_name("_scia_puts")
	.dwattr $C$DW$800, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1318| 
        ; call occurs [#_scia_puts] ; [] |1318| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1322,column 6,is_stmt,isa 0
$C$DW$801	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$801, DW_AT_low_pc(0x00)
	.dwattr $C$DW$801, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$801, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1322| 
        ; call occurs [#_ad7738_setcal] ; [] |1322| 
	.dwpsn	file "../Source/prod.c",line 1325,column 6,is_stmt,isa 0
        B         $C$L348,UNC           ; [CPU_] |1325| 
        ; branch occurs ; [] |1325| 
$C$L340:    
	.dwpsn	file "../Source/prod.c",line 1119,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1119| 
        MOVL      XAR4,#$C$FSL98        ; [CPU_U] |1119| 
        MOV       AL,#1024              ; [CPU_] |1119| 
        MOVL      XAR5,XAR1             ; [CPU_] |1119| 
$C$DW$802	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$802, DW_AT_low_pc(0x00)
	.dwattr $C$DW$802, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$802, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1119| 
        ; call occurs [#_scia_getparam] ; [] |1119| 
        MOVL      XAR4,XAR1             ; [CPU_] |1119| 
	.dwpsn	file "../Source/prod.c",line 1121,column 6,is_stmt,isa 0
$C$DW$803	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$803, DW_AT_low_pc(0x00)
	.dwattr $C$DW$803, DW_AT_name("_atol")
	.dwattr $C$DW$803, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |1121| 
        ; call occurs [#_atol] ; [] |1121| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1121| 
	.dwpsn	file "../Source/prod.c",line 1123,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL99        ; [CPU_U] |1123| 
	.dwpsn	file "../Source/prod.c",line 1121,column 6,is_stmt,isa 0
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1121| 
	.dwpsn	file "../Source/prod.c",line 1123,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1123| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1123| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1123| 
	.dwpsn	file "../Source/prod.c",line 1126,column 6,is_stmt,isa 0
        B         $C$L411,UNC           ; [CPU_] |1126| 
        ; branch occurs ; [] |1126| 
$C$L341:    
        MOVL      XAR0,#72              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1201,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1201| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] |1201| 
$C$L342:    
	.dwpsn	file "../Source/prod.c",line 1202,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL100       ; [CPU_U] |1202| 
        MOVL      XAR0,#44              ; [CPU_] |1202| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1202| 
        MOV       *-SP[3],AL            ; [CPU_] |1202| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1202| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1202| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1202| 
$C$DW$804	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$804, DW_AT_low_pc(0x00)
	.dwattr $C$DW$804, DW_AT_name("_sprintf")
	.dwattr $C$DW$804, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1202| 
        ; call occurs [#_sprintf] ; [] |1202| 
        MOVL      XAR0,#44              ; [CPU_] |1202| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1202| 
	.dwpsn	file "../Source/prod.c",line 1203,column 7,is_stmt,isa 0
$C$DW$805	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$805, DW_AT_low_pc(0x00)
	.dwattr $C$DW$805, DW_AT_name("_scia_puts")
	.dwattr $C$DW$805, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1203| 
        ; call occurs [#_scia_puts] ; [] |1203| 
        MOV       AL,*-SP[41]           ; [CPU_] |1203| 
	.dwpsn	file "../Source/prod.c",line 1204,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1204| 
        B         $C$L343,GEQ           ; [CPU_] |1204| 
        ; branchcc occurs ; [] |1204| 
	.dwpsn	file "../Source/prod.c",line 1205,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |1205| 
$C$DW$806	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$806, DW_AT_low_pc(0x00)
	.dwattr $C$DW$806, DW_AT_name("_scia_puts")
	.dwattr $C$DW$806, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1205| 
        ; call occurs [#_scia_puts] ; [] |1205| 
$C$L343:    
	.dwpsn	file "../Source/prod.c",line 1201,column 18,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |1201| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        CMPB      AL,#4                 ; [CPU_] |1201| 
        B         $C$L342,LT            ; [CPU_] |1201| 
        ; branchcc occurs ; [] |1201| 
	.dwpsn	file "../Source/prod.c",line 1208,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1208| 
$C$DW$807	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$807, DW_AT_low_pc(0x00)
	.dwattr $C$DW$807, DW_AT_name("_scia_puts")
	.dwattr $C$DW$807, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1208| 
        ; call occurs [#_scia_puts] ; [] |1208| 
        MOVW      DP,#_conf_data+34     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1209,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL101       ; [CPU_U] |1209| 
        MOVB      XAR0,#34              ; [CPU_] |1209| 
        SETC      SXM                   ; [CPU_] 
        MOV       AL,@_conf_data+34     ; [CPU_] |1209| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1209| 
        MOV       *-SP[3],AL            ; [CPU_] |1209| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1209| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1209| 
        MOVL      XAR0,#72              ; [CPU_] |1209| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1209| 
        ADDL      ACC,XAR6              ; [CPU_] |1209| 
        MOVL      XAR4,ACC              ; [CPU_] |1209| 
        MOVL      XAR0,#44              ; [CPU_] |1209| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1209| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1209| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1209| 
        MOVL      XAR4,XAR1             ; [CPU_] |1209| 
$C$DW$808	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$808, DW_AT_low_pc(0x00)
	.dwattr $C$DW$808, DW_AT_name("_sprintf")
	.dwattr $C$DW$808, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1209| 
        ; call occurs [#_sprintf] ; [] |1209| 
        MOVL      XAR4,XAR1             ; [CPU_] |1209| 
	.dwpsn	file "../Source/prod.c",line 1211,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1211| 
        MOV       AL,#1024              ; [CPU_] |1211| 
        MOVL      XAR5,XAR1             ; [CPU_] |1211| 
$C$DW$809	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$809, DW_AT_low_pc(0x00)
	.dwattr $C$DW$809, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$809, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1211| 
        ; call occurs [#_scia_getparam] ; [] |1211| 
        MOV       *-SP[41],AL           ; [CPU_] |1211| 
        MOVL      XAR4,XAR1             ; [CPU_] |1211| 
	.dwpsn	file "../Source/prod.c",line 1212,column 6,is_stmt,isa 0
$C$DW$810	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$810, DW_AT_low_pc(0x00)
	.dwattr $C$DW$810, DW_AT_name("_scia_puts")
	.dwattr $C$DW$810, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1212| 
        ; call occurs [#_scia_puts] ; [] |1212| 
	.dwpsn	file "../Source/prod.c",line 1213,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1213| 
$C$DW$811	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$811, DW_AT_low_pc(0x00)
	.dwattr $C$DW$811, DW_AT_name("_scia_puts")
	.dwattr $C$DW$811, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1213| 
        ; call occurs [#_scia_puts] ; [] |1213| 
        MOV       AL,*-SP[41]           ; [CPU_] |1213| 
	.dwpsn	file "../Source/prod.c",line 1214,column 6,is_stmt,isa 0
        B         $C$L346,EQ            ; [CPU_] |1214| 
        ; branchcc occurs ; [] |1214| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1218,column 6,is_stmt,isa 0
$C$DW$812	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$812, DW_AT_low_pc(0x00)
	.dwattr $C$DW$812, DW_AT_name("_atoi")
	.dwattr $C$DW$812, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1218| 
        ; call occurs [#_atoi] ; [] |1218| 
        CMPB      AL,#3                 ; [CPU_] |1218| 
        B         $C$L345,HI            ; [CPU_] |1218| 
        ; branchcc occurs ; [] |1218| 
	.dwpsn	file "../Source/prod.c",line 1224,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1224| 
        MOVB      XAR1,#34              ; [CPU_] |1224| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1224| 
	.dwpsn	file "../Source/prod.c",line 1225,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL102       ; [CPU_U] |1225| 
        SETC      SXM                   ; [CPU_] 
        MOVB      XAR0,#34              ; [CPU_] |1225| 
	.dwpsn	file "../Source/prod.c",line 1224,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR1],AL        ; [CPU_] |1224| 
	.dwpsn	file "../Source/prod.c",line 1225,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR5          ; [CPU_] |1225| 
        MOV       ACC,*+XAR4[AR0] << 1  ; [CPU_] |1225| 
        MOVL      XAR0,#72              ; [CPU_] |1225| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1225| 
$C$L344:    
        ADDL      ACC,XAR6              ; [CPU_] |1225| 
        MOVL      XAR4,ACC              ; [CPU_] |1225| 
        MOVL      XAR0,#44              ; [CPU_] |1225| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1225| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1225| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1225| 
        MOVL      XAR4,XAR1             ; [CPU_] |1225| 
$C$DW$813	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$813, DW_AT_low_pc(0x00)
	.dwattr $C$DW$813, DW_AT_name("_sprintf")
	.dwattr $C$DW$813, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1225| 
        ; call occurs [#_sprintf] ; [] |1225| 
        MOVL      XAR4,XAR1             ; [CPU_] |1225| 
	.dwpsn	file "../Source/prod.c",line 1228,column 6,is_stmt,isa 0
$C$DW$814	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$814, DW_AT_low_pc(0x00)
	.dwattr $C$DW$814, DW_AT_name("_scia_puts")
	.dwattr $C$DW$814, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1228| 
        ; call occurs [#_scia_puts] ; [] |1228| 
	.dwpsn	file "../Source/prod.c",line 1229,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL92        ; [CPU_U] |1229| 
	.dwpsn	file "../Source/prod.c",line 1232,column 6,is_stmt,isa 0
        B         $C$L412,UNC           ; [CPU_] |1232| 
        ; branch occurs ; [] |1232| 
$C$L345:    
	.dwpsn	file "../Source/prod.c",line 1220,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL103       ; [CPU_U] |1220| 
	.dwpsn	file "../Source/prod.c",line 1222,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |1222| 
        ; branch occurs ; [] |1222| 
$C$L346:    
	.dwpsn	file "../Source/prod.c",line 1215,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL104       ; [CPU_U] |1215| 
	.dwpsn	file "../Source/prod.c",line 1216,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |1216| 
        ; branch occurs ; [] |1216| 
$C$L347:    
	.dwpsn	file "../Source/prod.c",line 1282,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL105       ; [CPU_U] |1282| 
        MOVL      XAR0,#44              ; [CPU_] |1282| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1282| 
        MOV       *-SP[3],#4096         ; [CPU_] |1282| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1282| 
        MOVL      XAR4,XAR1             ; [CPU_] |1282| 
$C$DW$815	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$815, DW_AT_low_pc(0x00)
	.dwattr $C$DW$815, DW_AT_name("_sprintf")
	.dwattr $C$DW$815, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1282| 
        ; call occurs [#_sprintf] ; [] |1282| 
        MOVL      XAR4,XAR1             ; [CPU_] |1282| 
	.dwpsn	file "../Source/prod.c",line 1284,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1284| 
        MOV       AL,#1024              ; [CPU_] |1284| 
        MOVL      XAR5,XAR1             ; [CPU_] |1284| 
$C$DW$816	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$816, DW_AT_low_pc(0x00)
	.dwattr $C$DW$816, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$816, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1284| 
        ; call occurs [#_scia_getparam] ; [] |1284| 
	.dwpsn	file "../Source/prod.c",line 1285,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1285| 
$C$DW$817	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$817, DW_AT_low_pc(0x00)
	.dwattr $C$DW$817, DW_AT_name("_atoi")
	.dwattr $C$DW$817, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1285| 
        ; call occurs [#_atoi] ; [] |1285| 
        MOV       *-SP[41],AL           ; [CPU_] |1285| 
	.dwpsn	file "../Source/prod.c",line 1286,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1286| 
$C$DW$818	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$818, DW_AT_low_pc(0x00)
	.dwattr $C$DW$818, DW_AT_name("_scia_puts")
	.dwattr $C$DW$818, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1286| 
        ; call occurs [#_scia_puts] ; [] |1286| 
        MOV       AL,*-SP[41]           ; [CPU_] |1286| 
	.dwpsn	file "../Source/prod.c",line 1288,column 8,is_stmt,isa 0
        B         $C$L349,LEQ           ; [CPU_] |1288| 
        ; branchcc occurs ; [] |1288| 
        CMP       AL,#4096              ; [CPU_] |1288| 
        B         $C$L349,GT            ; [CPU_] |1288| 
        ; branchcc occurs ; [] |1288| 
	.dwpsn	file "../Source/prod.c",line 1293,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1293| 
$C$DW$819	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$819, DW_AT_low_pc(0x00)
	.dwattr $C$DW$819, DW_AT_name("_scia_puts")
	.dwattr $C$DW$819, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1293| 
        ; call occurs [#_scia_puts] ; [] |1293| 
	.dwpsn	file "../Source/prod.c",line 1295,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL106       ; [CPU_U] |1295| 
        MOVL      XAR0,#44              ; [CPU_] |1295| 
        MOV       AL,*-SP[41]           ; [CPU_] |1295| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1295| 
        MOV       *-SP[3],AL            ; [CPU_] |1295| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1295| 
        MOVL      XAR4,XAR1             ; [CPU_] |1295| 
$C$DW$820	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$820, DW_AT_low_pc(0x00)
	.dwattr $C$DW$820, DW_AT_name("_sprintf")
	.dwattr $C$DW$820, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1295| 
        ; call occurs [#_sprintf] ; [] |1295| 
        MOVL      XAR4,XAR1             ; [CPU_] |1295| 
	.dwpsn	file "../Source/prod.c",line 1297,column 6,is_stmt,isa 0
$C$DW$821	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$821, DW_AT_low_pc(0x00)
	.dwattr $C$DW$821, DW_AT_name("_scia_puts")
	.dwattr $C$DW$821, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1297| 
        ; call occurs [#_scia_puts] ; [] |1297| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1302,column 6,is_stmt,isa 0
        MOVB      XAR0,#38              ; [CPU_] |1302| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1302| 
        MOV       AL,*-SP[41]           ; [CPU_] |1302| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1302| 
$C$L348:    
	.dwpsn	file "../Source/prod.c",line 1303,column 6,is_stmt,isa 0
$C$DW$822	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$822, DW_AT_low_pc(0x00)
	.dwattr $C$DW$822, DW_AT_name("_maf_rst")
	.dwattr $C$DW$822, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1303| 
        ; call occurs [#_maf_rst] ; [] |1303| 
	.dwpsn	file "../Source/prod.c",line 1305,column 6,is_stmt,isa 0
        B         $C$L500,UNC           ; [CPU_] |1305| 
        ; branch occurs ; [] |1305| 
$C$L349:    
	.dwpsn	file "../Source/prod.c",line 1290,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL107       ; [CPU_U] |1290| 
$C$DW$823	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$823, DW_AT_low_pc(0x00)
	.dwattr $C$DW$823, DW_AT_name("_scia_puts")
	.dwattr $C$DW$823, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1290| 
        ; call occurs [#_scia_puts] ; [] |1290| 
	.dwpsn	file "../Source/prod.c",line 1281,column 6,is_stmt,isa 0
        B         $C$L347,UNC           ; [CPU_] |1281| 
        ; branch occurs ; [] |1281| 
$C$L350:    
	.dwpsn	file "../Source/prod.c",line 1153,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1153| 
        MOVL      XAR0,#44              ; [CPU_] |1153| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1153| 
        MOVB      *-SP[3],#1,UNC        ; [CPU_] |1153| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1153| 
        MOVL      XAR4,XAR1             ; [CPU_] |1153| 
$C$DW$824	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$824, DW_AT_low_pc(0x00)
	.dwattr $C$DW$824, DW_AT_name("_sprintf")
	.dwattr $C$DW$824, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1153| 
        ; call occurs [#_sprintf] ; [] |1153| 
        MOVL      XAR4,XAR1             ; [CPU_] |1153| 
	.dwpsn	file "../Source/prod.c",line 1154,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1154| 
        MOV       AL,#1024              ; [CPU_] |1154| 
        MOVL      XAR5,XAR1             ; [CPU_] |1154| 
$C$DW$825	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$825, DW_AT_low_pc(0x00)
	.dwattr $C$DW$825, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$825, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1154| 
        ; call occurs [#_scia_getparam] ; [] |1154| 
	.dwpsn	file "../Source/prod.c",line 1155,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1155| 
$C$DW$826	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$826, DW_AT_low_pc(0x00)
	.dwattr $C$DW$826, DW_AT_name("_atoi")
	.dwattr $C$DW$826, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1155| 
        ; call occurs [#_atoi] ; [] |1155| 
        MOV       *-SP[52],AL           ; [CPU_] |1155| 
	.dwpsn	file "../Source/prod.c",line 1156,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1156| 
$C$DW$827	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$827, DW_AT_low_pc(0x00)
	.dwattr $C$DW$827, DW_AT_name("_scia_puts")
	.dwattr $C$DW$827, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1156| 
        ; call occurs [#_scia_puts] ; [] |1156| 
        MOV       AL,*-SP[52]           ; [CPU_] |1156| 
	.dwpsn	file "../Source/prod.c",line 1158,column 8,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |1158| 
        B         $C$L353,NEQ           ; [CPU_] |1158| 
        ; branchcc occurs ; [] |1158| 
	.dwpsn	file "../Source/prod.c",line 1162,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1162| 
$C$DW$828	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$828, DW_AT_low_pc(0x00)
	.dwattr $C$DW$828, DW_AT_name("_scia_puts")
	.dwattr $C$DW$828, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1162| 
        ; call occurs [#_scia_puts] ; [] |1162| 
	.dwpsn	file "../Source/prod.c",line 1163,column 6,is_stmt,isa 0
        DEC       *-SP[52]              ; [CPU_] |1163| 
$C$L351:    
	.dwpsn	file "../Source/prod.c",line 1168,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1168| 
        MOVL      XAR0,#44              ; [CPU_] |1168| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1168| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1168| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1168| 
        MOVL      XAR4,XAR1             ; [CPU_] |1168| 
$C$DW$829	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$829, DW_AT_low_pc(0x00)
	.dwattr $C$DW$829, DW_AT_name("_sprintf")
	.dwattr $C$DW$829, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1168| 
        ; call occurs [#_sprintf] ; [] |1168| 
        MOVL      XAR4,XAR1             ; [CPU_] |1168| 
	.dwpsn	file "../Source/prod.c",line 1169,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1169| 
        MOV       AL,#1024              ; [CPU_] |1169| 
        MOVL      XAR5,XAR1             ; [CPU_] |1169| 
$C$DW$830	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$830, DW_AT_low_pc(0x00)
	.dwattr $C$DW$830, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$830, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1169| 
        ; call occurs [#_scia_getparam] ; [] |1169| 
	.dwpsn	file "../Source/prod.c",line 1170,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1170| 
$C$DW$831	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$831, DW_AT_low_pc(0x00)
	.dwattr $C$DW$831, DW_AT_name("_atoi")
	.dwattr $C$DW$831, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1170| 
        ; call occurs [#_atoi] ; [] |1170| 
        MOV       *-SP[51],AL           ; [CPU_] |1170| 
	.dwpsn	file "../Source/prod.c",line 1171,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1171| 
$C$DW$832	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$832, DW_AT_low_pc(0x00)
	.dwattr $C$DW$832, DW_AT_name("_scia_puts")
	.dwattr $C$DW$832, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1171| 
        ; call occurs [#_scia_puts] ; [] |1171| 
        MOV       AL,*-SP[51]           ; [CPU_] |1171| 
	.dwpsn	file "../Source/prod.c",line 1175,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1175| 
        CMPB      AL,#20                ; [CPU_] |1175| 
        B         $C$L352,HIS           ; [CPU_] |1175| 
        ; branchcc occurs ; [] |1175| 
	.dwpsn	file "../Source/prod.c",line 1179,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1179| 
$C$DW$833	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$833, DW_AT_low_pc(0x00)
	.dwattr $C$DW$833, DW_AT_name("_scia_puts")
	.dwattr $C$DW$833, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1179| 
        ; call occurs [#_scia_puts] ; [] |1179| 
	.dwpsn	file "../Source/prod.c",line 1182,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1182| 
        MOVL      XAR4,#$C$FSL110       ; [CPU_U] |1182| 
        MOVL      XAR0,#44              ; [CPU_] |1182| 
        MOV       AH,*-SP[51]           ; [CPU_] |1182| 
        ADD       AL,*-SP[52]           ; [CPU_] |1182| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1182| 
        MOV       *-SP[3],AL            ; [CPU_] |1182| 
        MOV       *-SP[4],AH            ; [CPU_] |1182| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1182| 
        DEC       *-SP[51]              ; [CPU_] |1182| 
        MOVL      XAR4,XAR1             ; [CPU_] |1182| 
$C$DW$834	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$834, DW_AT_low_pc(0x00)
	.dwattr $C$DW$834, DW_AT_name("_sprintf")
	.dwattr $C$DW$834, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1182| 
        ; call occurs [#_sprintf] ; [] |1182| 
        MOVL      XAR4,XAR1             ; [CPU_] |1182| 
	.dwpsn	file "../Source/prod.c",line 1184,column 6,is_stmt,isa 0
$C$DW$835	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$835, DW_AT_low_pc(0x00)
	.dwattr $C$DW$835, DW_AT_name("_scia_puts")
	.dwattr $C$DW$835, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1184| 
        ; call occurs [#_scia_puts] ; [] |1184| 
        MOV       AL,*-SP[51]           ; [CPU_] |1184| 
	.dwpsn	file "../Source/prod.c",line 1185,column 6,is_stmt,isa 0
$C$DW$836	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$836, DW_AT_low_pc(0x00)
	.dwattr $C$DW$836, DW_AT_name("_print_sensor")
	.dwattr $C$DW$836, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1185| 
        ; call occurs [#_print_sensor] ; [] |1185| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1189,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1189| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1189| 
        MOVB      AL,#10                ; [CPU_] |1189| 
        MOV       T,*-SP[52]            ; [CPU_] |1189| 
        MPYU      ACC,T,AL              ; [CPU_] |1189| 
        ADDL      ACC,XAR6              ; [CPU_] |1189| 
        MOVL      XAR4,ACC              ; [CPU_] |1189| 
        MOVB      XAR0,#42              ; [CPU_] |1189| 
        SPM       #0                    ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] |1189| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1189| 
	.dwpsn	file "../Source/prod.c",line 1190,column 6,is_stmt,isa 0
$C$DW$837	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$837, DW_AT_low_pc(0x00)
	.dwattr $C$DW$837, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$837, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1190| 
        ; call occurs [#_ad7738_setcal] ; [] |1190| 
        MOVL      XAR0,#78              ; [CPU_] |1190| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1190| 
	.dwpsn	file "../Source/prod.c",line 1192,column 6,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |1192| 
        MOVL      XAR1,ACC              ; [CPU_] |1192| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1192| 
$C$DW$838	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$838, DW_AT_low_pc(0x00)
	.dwattr $C$DW$838, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$838, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1192| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1192| 
	.dwpsn	file "../Source/prod.c",line 1193,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1193| 
$C$DW$839	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$839, DW_AT_low_pc(0x00)
	.dwattr $C$DW$839, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$839, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1193| 
        ; call occurs [#_ad7738_resetvall] ; [] |1193| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1197,column 6,is_stmt,isa 0
        B         $C$L595,UNC           ; [CPU_] |1197| 
        ; branch occurs ; [] |1197| 
$C$L352:    
	.dwpsn	file "../Source/prod.c",line 1177,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1177| 
$C$DW$840	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$840, DW_AT_low_pc(0x00)
	.dwattr $C$DW$840, DW_AT_name("_scia_puts")
	.dwattr $C$DW$840, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1177| 
        ; call occurs [#_scia_puts] ; [] |1177| 
	.dwpsn	file "../Source/prod.c",line 1167,column 6,is_stmt,isa 0
        B         $C$L351,UNC           ; [CPU_] |1167| 
        ; branch occurs ; [] |1167| 
$C$L353:    
	.dwpsn	file "../Source/prod.c",line 1160,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1160| 
$C$DW$841	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$841, DW_AT_low_pc(0x00)
	.dwattr $C$DW$841, DW_AT_name("_scia_puts")
	.dwattr $C$DW$841, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1160| 
        ; call occurs [#_scia_puts] ; [] |1160| 
	.dwpsn	file "../Source/prod.c",line 1152,column 6,is_stmt,isa 0
        B         $C$L350,UNC           ; [CPU_] |1152| 
        ; branch occurs ; [] |1152| 
$C$L354:    
	.dwpsn	file "../Source/prod.c",line 988,column 5,is_stmt,isa 0
$C$DW$842	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$842, DW_AT_low_pc(0x00)
	.dwattr $C$DW$842, DW_AT_name("_getStartStop")
	.dwattr $C$DW$842, DW_AT_TI_call

        LCR       #_getStartStop        ; [CPU_] |988| 
        ; call occurs [#_getStartStop] ; [] |988| 
        CMPB      AL,#0                 ; [CPU_] |988| 
        B         $C$L355,NEQ           ; [CPU_] |988| 
        ; branchcc occurs ; [] |988| 
	.dwpsn	file "../Source/prod.c",line 989,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |989| 
	.dwpsn	file "../Source/prod.c",line 990,column 5,is_stmt,isa 0
        B         $C$L356,UNC           ; [CPU_] |990| 
        ; branch occurs ; [] |990| 
$C$L355:    
	.dwpsn	file "../Source/prod.c",line 991,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |991| 
$C$L356:    
$C$DW$843	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$843, DW_AT_low_pc(0x00)
	.dwattr $C$DW$843, DW_AT_name("_toggleFastDataCollect")
	.dwattr $C$DW$843, DW_AT_TI_call

        LCR       #_toggleFastDataCollect ; [CPU_] |991| 
        ; call occurs [#_toggleFastDataCollect] ; [] |991| 
        B         $C$L646,UNC           ; [CPU_] |991| 
        ; branch occurs ; [] |991| 
$C$L357:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2013,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2013| 
        B         $C$L635,LO            ; [CPU_] |2013| 
        ; branchcc occurs ; [] |2013| 
	.dwpsn	file "../Source/prod.c",line 2018,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2018| 
        CMPB      AL,#78                ; [CPU_] |2018| 
        B         $C$L358,EQ            ; [CPU_] |2018| 
        ; branchcc occurs ; [] |2018| 
        CMPB      AL,#85                ; [CPU_] |2018| 
        B         $C$L358,EQ            ; [CPU_] |2018| 
        ; branchcc occurs ; [] |2018| 
        CMPB      AL,#66                ; [CPU_] |2018| 
        B         $C$L358,EQ            ; [CPU_] |2018| 
        ; branchcc occurs ; [] |2018| 
        CMPB      AL,#68                ; [CPU_] |2018| 
        B         $C$L635,NEQ           ; [CPU_] |2018| 
        ; branchcc occurs ; [] |2018| 
$C$L358:    
	.dwpsn	file "../Source/prod.c",line 2021,column 5,is_stmt,isa 0
        MOVZ      AR1,*+XAR4[1]         ; [CPU_] |2021| 
	.dwpsn	file "../Source/prod.c",line 2042,column 5,is_stmt,isa 0
        MOV       *-SP[41],#20          ; [CPU_] |2042| 
$C$L359:    
	.dwpsn	file "../Source/prod.c",line 2044,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |2044| 
        MOVL      XAR0,#44              ; [CPU_] |2044| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2044| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |2044| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2044| 
$C$DW$844	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$844, DW_AT_low_pc(0x00)
	.dwattr $C$DW$844, DW_AT_name("_sprintf")
	.dwattr $C$DW$844, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2044| 
        ; call occurs [#_sprintf] ; [] |2044| 
        MOVL      XAR0,#44              ; [CPU_] |2044| 
	.dwpsn	file "../Source/prod.c",line 2045,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2045| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2044,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2044| 
	.dwpsn	file "../Source/prod.c",line 2045,column 6,is_stmt,isa 0
$C$DW$845	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$845, DW_AT_low_pc(0x00)
	.dwattr $C$DW$845, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$845, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2045| 
        ; call occurs [#_scia_getparam] ; [] |2045| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2045| 
	.dwpsn	file "../Source/prod.c",line 2046,column 6,is_stmt,isa 0
$C$DW$846	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$846, DW_AT_low_pc(0x00)
	.dwattr $C$DW$846, DW_AT_name("_atoi")
	.dwattr $C$DW$846, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2046| 
        ; call occurs [#_atoi] ; [] |2046| 
        MOV       *-SP[51],AL           ; [CPU_] |2046| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2046| 
	.dwpsn	file "../Source/prod.c",line 2047,column 6,is_stmt,isa 0
$C$DW$847	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$847, DW_AT_low_pc(0x00)
	.dwattr $C$DW$847, DW_AT_name("_scia_puts")
	.dwattr $C$DW$847, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2047| 
        ; call occurs [#_scia_puts] ; [] |2047| 
        MOV       AL,*-SP[51]           ; [CPU_] |2047| 
	.dwpsn	file "../Source/prod.c",line 2051,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2051| 
        CMPB      AL,#20                ; [CPU_] |2051| 
        B         $C$L419,HIS           ; [CPU_] |2051| 
        ; branchcc occurs ; [] |2051| 
	.dwpsn	file "../Source/prod.c",line 2055,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2055| 
$C$DW$848	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$848, DW_AT_low_pc(0x00)
	.dwattr $C$DW$848, DW_AT_name("_scia_puts")
	.dwattr $C$DW$848, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2055| 
        ; call occurs [#_scia_puts] ; [] |2055| 
	.dwpsn	file "../Source/prod.c",line 2056,column 5,is_stmt,isa 0
        DEC       *-SP[51]              ; [CPU_] |2056| 
	.dwpsn	file "../Source/prod.c",line 2058,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |2058| 
        CMPB      AL,#66                ; [CPU_] |2058| 
        B         $C$L414,EQ            ; [CPU_] |2058| 
        ; branchcc occurs ; [] |2058| 
        CMPB      AL,#68                ; [CPU_] |2058| 
        B         $C$L413,EQ            ; [CPU_] |2058| 
        ; branchcc occurs ; [] |2058| 
        CMPB      AL,#78                ; [CPU_] |2058| 
        B         $C$L409,EQ            ; [CPU_] |2058| 
        ; branchcc occurs ; [] |2058| 
        CMPB      AL,#85                ; [CPU_] |2058| 
        B         $C$L635,NEQ           ; [CPU_] |2058| 
        ; branchcc occurs ; [] |2058| 
	.dwpsn	file "../Source/prod.c",line 2087,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2087| 
	.dwpsn	file "../Source/prod.c",line 2085,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2085| 
        MOV       AH,#0                 ; [CPU_] |2085| 
	.dwpsn	file "../Source/prod.c",line 2087,column 6,is_stmt,isa 0
        MOV       T,*-SP[51]            ; [CPU_] |2087| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2087| 
	.dwpsn	file "../Source/prod.c",line 2085,column 6,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |2085| 
	.dwpsn	file "../Source/prod.c",line 2087,column 6,is_stmt,isa 0
        MOVB      AL,#152               ; [CPU_] |2087| 
        MPYU      ACC,T,AL              ; [CPU_] |2087| 
        ADDL      ACC,XAR6              ; [CPU_] |2087| 
        ADDB      ACC,#94               ; [CPU_] |2087| 
        MOVL      XAR1,ACC              ; [CPU_] |2087| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2087| 
        CMPB      AL,#35                ; [CPU_] |2087| 
        B         $C$L360,GT            ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
        CMPB      AL,#35                ; [CPU_] |2087| 
        B         $C$L376,EQ            ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
        CMPB      AL,#16                ; [CPU_] |2087| 
        B         $C$L396,EQ            ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
        CMPB      AL,#17                ; [CPU_] |2087| 
        B         $C$L392,EQ            ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
        CMPB      AL,#34                ; [CPU_] |2087| 
        B         $C$L383,EQ            ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
        B         $C$L400,UNC           ; [CPU_] |2087| 
        ; branch occurs ; [] |2087| 
$C$L360:    
        CMPB      AL,#36                ; [CPU_] |2087| 
        B         $C$L369,EQ            ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
        CMPB      AL,#53                ; [CPU_] |2087| 
        B         $C$L365,EQ            ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
        CMPB      AL,#70                ; [CPU_] |2087| 
        B         $C$L400,NEQ           ; [CPU_] |2087| 
        ; branchcc occurs ; [] |2087| 
$C$L361:    
	.dwpsn	file "../Source/prod.c",line 2276,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL113       ; [CPU_U] |2276| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2276| 
        MOV       AL,#1024              ; [CPU_] |2276| 
$C$DW$849	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$849, DW_AT_low_pc(0x00)
	.dwattr $C$DW$849, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$849, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2276| 
        ; call occurs [#_scia_getparam] ; [] |2276| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2276| 
	.dwpsn	file "../Source/prod.c",line 2278,column 8,is_stmt,isa 0
$C$DW$850	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$850, DW_AT_low_pc(0x00)
	.dwattr $C$DW$850, DW_AT_name("_atoi")
	.dwattr $C$DW$850, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2278| 
        ; call occurs [#_atoi] ; [] |2278| 
        MOV       *-SP[41],AL           ; [CPU_] |2278| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2278| 
	.dwpsn	file "../Source/prod.c",line 2279,column 8,is_stmt,isa 0
$C$DW$851	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$851, DW_AT_low_pc(0x00)
	.dwattr $C$DW$851, DW_AT_name("_scia_puts")
	.dwattr $C$DW$851, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2279| 
        ; call occurs [#_scia_puts] ; [] |2279| 
        MOV       AL,*-SP[41]           ; [CPU_] |2279| 
	.dwpsn	file "../Source/prod.c",line 2280,column 8,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2280| 
        B         $C$L362,EQ            ; [CPU_] |2280| 
        ; branchcc occurs ; [] |2280| 
        CMPB      AL,#7                 ; [CPU_] |2280| 
        B         $C$L363,EQ            ; [CPU_] |2280| 
        ; branchcc occurs ; [] |2280| 
	.dwpsn	file "../Source/prod.c",line 2281,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2281| 
$C$DW$852	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$852, DW_AT_low_pc(0x00)
	.dwattr $C$DW$852, DW_AT_name("_scia_puts")
	.dwattr $C$DW$852, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2281| 
        ; call occurs [#_scia_puts] ; [] |2281| 
$C$L362:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2283,column 16,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2283| 
        B         $C$L363,EQ            ; [CPU_] |2283| 
        ; branchcc occurs ; [] |2283| 
        CMPB      AL,#7                 ; [CPU_] |2283| 
        B         $C$L361,NEQ           ; [CPU_] |2283| 
        ; branchcc occurs ; [] |2283| 
$C$L363:    
	.dwpsn	file "../Source/prod.c",line 2284,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2284| 
$C$DW$853	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$853, DW_AT_low_pc(0x00)
	.dwattr $C$DW$853, DW_AT_name("_scia_puts")
	.dwattr $C$DW$853, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2284| 
        ; call occurs [#_scia_puts] ; [] |2284| 
        MOV       AL,*-SP[41]           ; [CPU_] |2284| 
	.dwpsn	file "../Source/prod.c",line 2286,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2286| 
        B         $C$L364,EQ            ; [CPU_] |2286| 
        ; branchcc occurs ; [] |2286| 
        CMPB      AL,#7                 ; [CPU_] |2286| 
        B         $C$L399,EQ            ; [CPU_] |2286| 
        ; branchcc occurs ; [] |2286| 
        B         $C$L400,UNC           ; [CPU_] |2286| 
        ; branch occurs ; [] |2286| 
$C$L364:    
	.dwpsn	file "../Source/prod.c",line 2288,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2288| 
        MOVL      *-SP[18],ACC          ; [CPU_] |2288| 
        MOV       AL,*-SP[41]           ; [CPU_] |2288| 
	.dwpsn	file "../Source/prod.c",line 2289,column 8,is_stmt,isa 0
        ORB       AL,#0x40              ; [CPU_] |2289| 
	.dwpsn	file "../Source/prod.c",line 2290,column 8,is_stmt,isa 0
        B         $C$L404,UNC           ; [CPU_] |2290| 
        ; branch occurs ; [] |2290| 
$C$L365:    
	.dwpsn	file "../Source/prod.c",line 2251,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL114       ; [CPU_U] |2251| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2251| 
        MOV       AL,#1024              ; [CPU_] |2251| 
$C$DW$854	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$854, DW_AT_low_pc(0x00)
	.dwattr $C$DW$854, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$854, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2251| 
        ; call occurs [#_scia_getparam] ; [] |2251| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2251| 
	.dwpsn	file "../Source/prod.c",line 2253,column 8,is_stmt,isa 0
$C$DW$855	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$855, DW_AT_low_pc(0x00)
	.dwattr $C$DW$855, DW_AT_name("_atoi")
	.dwattr $C$DW$855, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2253| 
        ; call occurs [#_atoi] ; [] |2253| 
        MOV       *-SP[41],AL           ; [CPU_] |2253| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2253| 
	.dwpsn	file "../Source/prod.c",line 2254,column 8,is_stmt,isa 0
$C$DW$856	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$856, DW_AT_low_pc(0x00)
	.dwattr $C$DW$856, DW_AT_name("_scia_puts")
	.dwattr $C$DW$856, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2254| 
        ; call occurs [#_scia_puts] ; [] |2254| 
        MOV       AL,*-SP[41]           ; [CPU_] |2254| 
	.dwpsn	file "../Source/prod.c",line 2255,column 8,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2255| 
        B         $C$L366,EQ            ; [CPU_] |2255| 
        ; branchcc occurs ; [] |2255| 
        CMPB      AL,#7                 ; [CPU_] |2255| 
        B         $C$L367,EQ            ; [CPU_] |2255| 
        ; branchcc occurs ; [] |2255| 
	.dwpsn	file "../Source/prod.c",line 2256,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2256| 
$C$DW$857	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$857, DW_AT_low_pc(0x00)
	.dwattr $C$DW$857, DW_AT_name("_scia_puts")
	.dwattr $C$DW$857, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2256| 
        ; call occurs [#_scia_puts] ; [] |2256| 
$C$L366:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2258,column 16,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2258| 
        B         $C$L367,EQ            ; [CPU_] |2258| 
        ; branchcc occurs ; [] |2258| 
        CMPB      AL,#7                 ; [CPU_] |2258| 
        B         $C$L365,NEQ           ; [CPU_] |2258| 
        ; branchcc occurs ; [] |2258| 
$C$L367:    
	.dwpsn	file "../Source/prod.c",line 2259,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2259| 
$C$DW$858	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$858, DW_AT_low_pc(0x00)
	.dwattr $C$DW$858, DW_AT_name("_scia_puts")
	.dwattr $C$DW$858, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2259| 
        ; call occurs [#_scia_puts] ; [] |2259| 
        MOV       AL,*-SP[41]           ; [CPU_] |2259| 
	.dwpsn	file "../Source/prod.c",line 2261,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2261| 
        B         $C$L368,EQ            ; [CPU_] |2261| 
        ; branchcc occurs ; [] |2261| 
        CMPB      AL,#7                 ; [CPU_] |2261| 
        B         $C$L399,EQ            ; [CPU_] |2261| 
        ; branchcc occurs ; [] |2261| 
        B         $C$L400,UNC           ; [CPU_] |2261| 
        ; branch occurs ; [] |2261| 
$C$L368:    
	.dwpsn	file "../Source/prod.c",line 2263,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2263| 
        MOVL      *-SP[18],ACC          ; [CPU_] |2263| 
        MOV       AL,*-SP[41]           ; [CPU_] |2263| 
	.dwpsn	file "../Source/prod.c",line 2264,column 8,is_stmt,isa 0
        ORB       AL,#0x30              ; [CPU_] |2264| 
	.dwpsn	file "../Source/prod.c",line 2265,column 8,is_stmt,isa 0
        B         $C$L404,UNC           ; [CPU_] |2265| 
        ; branch occurs ; [] |2265| 
$C$L369:    
	.dwpsn	file "../Source/prod.c",line 2217,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2217| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2217| 
        MOV       AL,#1024              ; [CPU_] |2217| 
$C$DW$859	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$859, DW_AT_low_pc(0x00)
	.dwattr $C$DW$859, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$859, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2217| 
        ; call occurs [#_scia_getparam] ; [] |2217| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2217| 
	.dwpsn	file "../Source/prod.c",line 2220,column 8,is_stmt,isa 0
$C$DW$860	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$860, DW_AT_low_pc(0x00)
	.dwattr $C$DW$860, DW_AT_name("_atoi")
	.dwattr $C$DW$860, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2220| 
        ; call occurs [#_atoi] ; [] |2220| 
        MOV       *-SP[41],AL           ; [CPU_] |2220| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2220| 
	.dwpsn	file "../Source/prod.c",line 2221,column 8,is_stmt,isa 0
$C$DW$861	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$861, DW_AT_low_pc(0x00)
	.dwattr $C$DW$861, DW_AT_name("_scia_puts")
	.dwattr $C$DW$861, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2221| 
        ; call occurs [#_scia_puts] ; [] |2221| 
        MOV       AL,*-SP[41]           ; [CPU_] |2221| 
	.dwpsn	file "../Source/prod.c",line 2222,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2222| 
        B         $C$L370,EQ            ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
        CMPB      AL,#3                 ; [CPU_] |2222| 
        B         $C$L371,EQ            ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
        CMPB      AL,#4                 ; [CPU_] |2222| 
        B         $C$L372,EQ            ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
        CMPB      AL,#7                 ; [CPU_] |2222| 
        B         $C$L373,EQ            ; [CPU_] |2222| 
        ; branchcc occurs ; [] |2222| 
	.dwpsn	file "../Source/prod.c",line 2223,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2223| 
$C$DW$862	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$862, DW_AT_low_pc(0x00)
	.dwattr $C$DW$862, DW_AT_name("_scia_puts")
	.dwattr $C$DW$862, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2223| 
        ; call occurs [#_scia_puts] ; [] |2223| 
$C$L370:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2225,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2225| 
        B         $C$L373,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
$C$L371:    
        CMPB      AL,#3                 ; [CPU_] |2225| 
        B         $C$L373,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
$C$L372:    
        CMPB      AL,#4                 ; [CPU_] |2225| 
        B         $C$L373,EQ            ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
        CMPB      AL,#7                 ; [CPU_] |2225| 
        B         $C$L369,NEQ           ; [CPU_] |2225| 
        ; branchcc occurs ; [] |2225| 
$C$L373:    
	.dwpsn	file "../Source/prod.c",line 2226,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2226| 
$C$DW$863	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$863, DW_AT_low_pc(0x00)
	.dwattr $C$DW$863, DW_AT_name("_scia_puts")
	.dwattr $C$DW$863, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2226| 
        ; call occurs [#_scia_puts] ; [] |2226| 
        MOV       AL,*-SP[41]           ; [CPU_] |2226| 
	.dwpsn	file "../Source/prod.c",line 2228,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2228| 
        B         $C$L375,EQ            ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
        CMPB      AL,#3                 ; [CPU_] |2228| 
        B         $C$L374,EQ            ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
        CMPB      AL,#4                 ; [CPU_] |2228| 
        B         $C$L391,EQ            ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
        CMPB      AL,#7                 ; [CPU_] |2228| 
        B         $C$L399,EQ            ; [CPU_] |2228| 
        ; branchcc occurs ; [] |2228| 
        B         $C$L400,UNC           ; [CPU_] |2228| 
        ; branch occurs ; [] |2228| 
$C$L374:    
	.dwpsn	file "../Source/prod.c",line 2234,column 8,is_stmt,isa 0
        MOV       AL,#52429             ; [CPU_] |2234| 
        MOV       AH,#15820             ; [CPU_] |2234| 
	.dwpsn	file "../Source/prod.c",line 2236,column 8,is_stmt,isa 0
        B         $C$L389,UNC           ; [CPU_] |2236| 
        ; branch occurs ; [] |2236| 
$C$L375:    
	.dwpsn	file "../Source/prod.c",line 2230,column 8,is_stmt,isa 0
        MOV       AL,#17029             ; [CPU_] |2230| 
        MOV       AH,#15649             ; [CPU_] |2230| 
	.dwpsn	file "../Source/prod.c",line 2232,column 8,is_stmt,isa 0
        B         $C$L389,UNC           ; [CPU_] |2232| 
        ; branch occurs ; [] |2232| 
$C$L376:    
	.dwpsn	file "../Source/prod.c",line 2183,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2183| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2183| 
        MOV       AL,#1024              ; [CPU_] |2183| 
$C$DW$864	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$864, DW_AT_low_pc(0x00)
	.dwattr $C$DW$864, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$864, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2183| 
        ; call occurs [#_scia_getparam] ; [] |2183| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2183| 
	.dwpsn	file "../Source/prod.c",line 2186,column 8,is_stmt,isa 0
$C$DW$865	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$865, DW_AT_low_pc(0x00)
	.dwattr $C$DW$865, DW_AT_name("_atoi")
	.dwattr $C$DW$865, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2186| 
        ; call occurs [#_atoi] ; [] |2186| 
        MOV       *-SP[41],AL           ; [CPU_] |2186| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2186| 
	.dwpsn	file "../Source/prod.c",line 2187,column 8,is_stmt,isa 0
$C$DW$866	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$866, DW_AT_low_pc(0x00)
	.dwattr $C$DW$866, DW_AT_name("_scia_puts")
	.dwattr $C$DW$866, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2187| 
        ; call occurs [#_scia_puts] ; [] |2187| 
        MOV       AL,*-SP[41]           ; [CPU_] |2187| 
	.dwpsn	file "../Source/prod.c",line 2188,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2188| 
        B         $C$L377,EQ            ; [CPU_] |2188| 
        ; branchcc occurs ; [] |2188| 
        CMPB      AL,#3                 ; [CPU_] |2188| 
        B         $C$L378,EQ            ; [CPU_] |2188| 
        ; branchcc occurs ; [] |2188| 
        CMPB      AL,#4                 ; [CPU_] |2188| 
        B         $C$L379,EQ            ; [CPU_] |2188| 
        ; branchcc occurs ; [] |2188| 
        CMPB      AL,#7                 ; [CPU_] |2188| 
        B         $C$L380,EQ            ; [CPU_] |2188| 
        ; branchcc occurs ; [] |2188| 
	.dwpsn	file "../Source/prod.c",line 2189,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2189| 
$C$DW$867	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$867, DW_AT_low_pc(0x00)
	.dwattr $C$DW$867, DW_AT_name("_scia_puts")
	.dwattr $C$DW$867, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2189| 
        ; call occurs [#_scia_puts] ; [] |2189| 
$C$L377:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2191,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2191| 
        B         $C$L380,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
$C$L378:    
        CMPB      AL,#3                 ; [CPU_] |2191| 
        B         $C$L380,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
$C$L379:    
        CMPB      AL,#4                 ; [CPU_] |2191| 
        B         $C$L380,EQ            ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
        CMPB      AL,#7                 ; [CPU_] |2191| 
        B         $C$L376,NEQ           ; [CPU_] |2191| 
        ; branchcc occurs ; [] |2191| 
$C$L380:    
	.dwpsn	file "../Source/prod.c",line 2192,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2192| 
$C$DW$868	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$868, DW_AT_low_pc(0x00)
	.dwattr $C$DW$868, DW_AT_name("_scia_puts")
	.dwattr $C$DW$868, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2192| 
        ; call occurs [#_scia_puts] ; [] |2192| 
        MOV       AL,*-SP[41]           ; [CPU_] |2192| 
	.dwpsn	file "../Source/prod.c",line 2194,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2194| 
        B         $C$L382,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
        CMPB      AL,#3                 ; [CPU_] |2194| 
        B         $C$L391,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
        CMPB      AL,#4                 ; [CPU_] |2194| 
        B         $C$L381,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
        CMPB      AL,#7                 ; [CPU_] |2194| 
        B         $C$L399,EQ            ; [CPU_] |2194| 
        ; branchcc occurs ; [] |2194| 
        B         $C$L400,UNC           ; [CPU_] |2194| 
        ; branch occurs ; [] |2194| 
$C$L381:    
	.dwpsn	file "../Source/prod.c",line 2204,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2204| 
        MOV       AH,#16672             ; [CPU_] |2204| 
	.dwpsn	file "../Source/prod.c",line 2206,column 8,is_stmt,isa 0
        B         $C$L389,UNC           ; [CPU_] |2206| 
        ; branch occurs ; [] |2206| 
$C$L382:    
	.dwpsn	file "../Source/prod.c",line 2196,column 8,is_stmt,isa 0
        MOV       AL,#37670             ; [CPU_] |2196| 
        MOV       AH,#16073             ; [CPU_] |2196| 
	.dwpsn	file "../Source/prod.c",line 2198,column 8,is_stmt,isa 0
        B         $C$L389,UNC           ; [CPU_] |2198| 
        ; branch occurs ; [] |2198| 
$C$L383:    
	.dwpsn	file "../Source/prod.c",line 2149,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL115       ; [CPU_U] |2149| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2149| 
        MOV       AL,#1024              ; [CPU_] |2149| 
$C$DW$869	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$869, DW_AT_low_pc(0x00)
	.dwattr $C$DW$869, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$869, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2149| 
        ; call occurs [#_scia_getparam] ; [] |2149| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2149| 
	.dwpsn	file "../Source/prod.c",line 2152,column 8,is_stmt,isa 0
$C$DW$870	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$870, DW_AT_low_pc(0x00)
	.dwattr $C$DW$870, DW_AT_name("_atoi")
	.dwattr $C$DW$870, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2152| 
        ; call occurs [#_atoi] ; [] |2152| 
        MOV       *-SP[41],AL           ; [CPU_] |2152| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2152| 
	.dwpsn	file "../Source/prod.c",line 2153,column 8,is_stmt,isa 0
$C$DW$871	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$871, DW_AT_low_pc(0x00)
	.dwattr $C$DW$871, DW_AT_name("_scia_puts")
	.dwattr $C$DW$871, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2153| 
        ; call occurs [#_scia_puts] ; [] |2153| 
        MOV       AL,*-SP[41]           ; [CPU_] |2153| 
	.dwpsn	file "../Source/prod.c",line 2154,column 8,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2154| 
        B         $C$L384,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#3                 ; [CPU_] |2154| 
        B         $C$L385,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#4                 ; [CPU_] |2154| 
        B         $C$L386,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
        CMPB      AL,#7                 ; [CPU_] |2154| 
        B         $C$L387,EQ            ; [CPU_] |2154| 
        ; branchcc occurs ; [] |2154| 
	.dwpsn	file "../Source/prod.c",line 2155,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2155| 
$C$DW$872	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$872, DW_AT_low_pc(0x00)
	.dwattr $C$DW$872, DW_AT_name("_scia_puts")
	.dwattr $C$DW$872, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2155| 
        ; call occurs [#_scia_puts] ; [] |2155| 
$C$L384:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2157,column 16,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2157| 
        B         $C$L387,EQ            ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
$C$L385:    
        CMPB      AL,#3                 ; [CPU_] |2157| 
        B         $C$L387,EQ            ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
$C$L386:    
        CMPB      AL,#4                 ; [CPU_] |2157| 
        B         $C$L387,EQ            ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
        CMPB      AL,#7                 ; [CPU_] |2157| 
        B         $C$L383,NEQ           ; [CPU_] |2157| 
        ; branchcc occurs ; [] |2157| 
$C$L387:    
	.dwpsn	file "../Source/prod.c",line 2158,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2158| 
$C$DW$873	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$873, DW_AT_low_pc(0x00)
	.dwattr $C$DW$873, DW_AT_name("_scia_puts")
	.dwattr $C$DW$873, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2158| 
        ; call occurs [#_scia_puts] ; [] |2158| 
        MOV       AL,*-SP[41]           ; [CPU_] |2158| 
	.dwpsn	file "../Source/prod.c",line 2160,column 7,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2160| 
        B         $C$L391,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
        CMPB      AL,#3                 ; [CPU_] |2160| 
        B         $C$L390,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
        CMPB      AL,#4                 ; [CPU_] |2160| 
        B         $C$L388,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
        CMPB      AL,#7                 ; [CPU_] |2160| 
        B         $C$L399,EQ            ; [CPU_] |2160| 
        ; branchcc occurs ; [] |2160| 
        B         $C$L400,UNC           ; [CPU_] |2160| 
        ; branch occurs ; [] |2160| 
$C$L388:    
	.dwpsn	file "../Source/prod.c",line 2170,column 8,is_stmt,isa 0
        MOV       AL,#13107             ; [CPU_] |2170| 
        MOV       AH,#16843             ; [CPU_] |2170| 
$C$L389:    
        MOVL      *-SP[18],ACC          ; [CPU_] |2170| 
        MOV       AL,*-SP[41]           ; [CPU_] |2170| 
	.dwpsn	file "../Source/prod.c",line 2171,column 8,is_stmt,isa 0
        ORB       AL,#0x20              ; [CPU_] |2171| 
	.dwpsn	file "../Source/prod.c",line 2172,column 8,is_stmt,isa 0
        B         $C$L404,UNC           ; [CPU_] |2172| 
        ; branch occurs ; [] |2172| 
$C$L390:    
	.dwpsn	file "../Source/prod.c",line 2166,column 8,is_stmt,isa 0
        MOV       AL,#36700             ; [CPU_] |2166| 
        MOV       AH,#16418             ; [CPU_] |2166| 
	.dwpsn	file "../Source/prod.c",line 2168,column 8,is_stmt,isa 0
        B         $C$L389,UNC           ; [CPU_] |2168| 
        ; branch occurs ; [] |2168| 
$C$L391:    
	.dwpsn	file "../Source/prod.c",line 2162,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2162| 
	.dwpsn	file "../Source/prod.c",line 2164,column 8,is_stmt,isa 0
        B         $C$L389,UNC           ; [CPU_] |2164| 
        ; branch occurs ; [] |2164| 
$C$L392:    
	.dwpsn	file "../Source/prod.c",line 2120,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2120| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2120| 
        MOV       AL,#1024              ; [CPU_] |2120| 
$C$DW$874	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$874, DW_AT_low_pc(0x00)
	.dwattr $C$DW$874, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$874, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2120| 
        ; call occurs [#_scia_getparam] ; [] |2120| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2120| 
	.dwpsn	file "../Source/prod.c",line 2122,column 8,is_stmt,isa 0
$C$DW$875	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$875, DW_AT_low_pc(0x00)
	.dwattr $C$DW$875, DW_AT_name("_atoi")
	.dwattr $C$DW$875, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2122| 
        ; call occurs [#_atoi] ; [] |2122| 
        MOV       *-SP[41],AL           ; [CPU_] |2122| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2122| 
	.dwpsn	file "../Source/prod.c",line 2123,column 8,is_stmt,isa 0
$C$DW$876	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$876, DW_AT_low_pc(0x00)
	.dwattr $C$DW$876, DW_AT_name("_scia_puts")
	.dwattr $C$DW$876, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2123| 
        ; call occurs [#_scia_puts] ; [] |2123| 
        MOV       AL,*-SP[41]           ; [CPU_] |2123| 
	.dwpsn	file "../Source/prod.c",line 2124,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2124| 
        B         $C$L394,EQ            ; [CPU_] |2124| 
        ; branchcc occurs ; [] |2124| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2124| 
        B         $C$L393,EQ            ; [CPU_] |2124| 
        ; branchcc occurs ; [] |2124| 
	.dwpsn	file "../Source/prod.c",line 2125,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2125| 
$C$DW$877	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$877, DW_AT_low_pc(0x00)
	.dwattr $C$DW$877, DW_AT_name("_scia_puts")
	.dwattr $C$DW$877, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2125| 
        ; call occurs [#_scia_puts] ; [] |2125| 
$C$L393:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2127,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2127| 
        B         $C$L394,EQ            ; [CPU_] |2127| 
        ; branchcc occurs ; [] |2127| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2127| 
        B         $C$L392,NEQ           ; [CPU_] |2127| 
        ; branchcc occurs ; [] |2127| 
$C$L394:    
	.dwpsn	file "../Source/prod.c",line 2128,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2128| 
$C$DW$878	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$878, DW_AT_low_pc(0x00)
	.dwattr $C$DW$878, DW_AT_name("_scia_puts")
	.dwattr $C$DW$878, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2128| 
        ; call occurs [#_scia_puts] ; [] |2128| 
        MOV       AL,*-SP[41]           ; [CPU_] |2128| 
	.dwpsn	file "../Source/prod.c",line 2130,column 7,is_stmt,isa 0
        B         $C$L395,EQ            ; [CPU_] |2130| 
        ; branchcc occurs ; [] |2130| 
        CMPB      AL,#1                 ; [CPU_] |2130| 
        B         $C$L402,EQ            ; [CPU_] |2130| 
        ; branchcc occurs ; [] |2130| 
        CMPB      AL,#7                 ; [CPU_] |2130| 
        B         $C$L399,EQ            ; [CPU_] |2130| 
        ; branchcc occurs ; [] |2130| 
        B         $C$L400,UNC           ; [CPU_] |2130| 
        ; branch occurs ; [] |2130| 
$C$L395:    
	.dwpsn	file "../Source/prod.c",line 2132,column 8,is_stmt,isa 0
        MOV       AL,#6282              ; [CPU_] |2132| 
        MOV       AH,#16397             ; [CPU_] |2132| 
	.dwpsn	file "../Source/prod.c",line 2134,column 8,is_stmt,isa 0
        B         $C$L403,UNC           ; [CPU_] |2134| 
        ; branch occurs ; [] |2134| 
$C$L396:    
	.dwpsn	file "../Source/prod.c",line 2091,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL116       ; [CPU_U] |2091| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2091| 
        MOV       AL,#1024              ; [CPU_] |2091| 
$C$DW$879	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$879, DW_AT_low_pc(0x00)
	.dwattr $C$DW$879, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$879, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2091| 
        ; call occurs [#_scia_getparam] ; [] |2091| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2091| 
	.dwpsn	file "../Source/prod.c",line 2093,column 8,is_stmt,isa 0
$C$DW$880	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$880, DW_AT_low_pc(0x00)
	.dwattr $C$DW$880, DW_AT_name("_atoi")
	.dwattr $C$DW$880, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2093| 
        ; call occurs [#_atoi] ; [] |2093| 
        MOV       *-SP[41],AL           ; [CPU_] |2093| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2093| 
	.dwpsn	file "../Source/prod.c",line 2094,column 8,is_stmt,isa 0
$C$DW$881	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$881, DW_AT_low_pc(0x00)
	.dwattr $C$DW$881, DW_AT_name("_scia_puts")
	.dwattr $C$DW$881, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2094| 
        ; call occurs [#_scia_puts] ; [] |2094| 
        MOV       AL,*-SP[41]           ; [CPU_] |2094| 
	.dwpsn	file "../Source/prod.c",line 2095,column 8,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2095| 
        B         $C$L398,EQ            ; [CPU_] |2095| 
        ; branchcc occurs ; [] |2095| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2095| 
        B         $C$L397,EQ            ; [CPU_] |2095| 
        ; branchcc occurs ; [] |2095| 
	.dwpsn	file "../Source/prod.c",line 2096,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2096| 
$C$DW$882	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$882, DW_AT_low_pc(0x00)
	.dwattr $C$DW$882, DW_AT_name("_scia_puts")
	.dwattr $C$DW$882, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2096| 
        ; call occurs [#_scia_puts] ; [] |2096| 
$C$L397:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2098,column 16,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2098| 
        B         $C$L398,EQ            ; [CPU_] |2098| 
        ; branchcc occurs ; [] |2098| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2098| 
        B         $C$L396,NEQ           ; [CPU_] |2098| 
        ; branchcc occurs ; [] |2098| 
$C$L398:    
	.dwpsn	file "../Source/prod.c",line 2099,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2099| 
$C$DW$883	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$883, DW_AT_low_pc(0x00)
	.dwattr $C$DW$883, DW_AT_name("_scia_puts")
	.dwattr $C$DW$883, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2099| 
        ; call occurs [#_scia_puts] ; [] |2099| 
        MOV       AL,*-SP[41]           ; [CPU_] |2099| 
	.dwpsn	file "../Source/prod.c",line 2101,column 7,is_stmt,isa 0
        B         $C$L402,EQ            ; [CPU_] |2101| 
        ; branchcc occurs ; [] |2101| 
        CMPB      AL,#1                 ; [CPU_] |2101| 
        B         $C$L401,EQ            ; [CPU_] |2101| 
        ; branchcc occurs ; [] |2101| 
        CMPB      AL,#7                 ; [CPU_] |2101| 
        B         $C$L400,NEQ           ; [CPU_] |2101| 
        ; branchcc occurs ; [] |2101| 
$C$L399:    
	.dwpsn	file "../Source/prod.c",line 2111,column 8,is_stmt,isa 0
        MOVB      XAR0,#100             ; [CPU_] |2111| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2111| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2111| 
        MOV       AL,#0                 ; [CPU_] |2111| 
        MOV       AH,#17096             ; [CPU_] |2111| 
$C$DW$884	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$884, DW_AT_low_pc(0x00)
	.dwattr $C$DW$884, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$884, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2111| 
        ; call occurs [#FS$$DIV] ; [] |2111| 
        MOVL      *-SP[18],ACC          ; [CPU_] |2111| 
        MOV       AL,*-SP[41]           ; [CPU_] |2111| 
	.dwpsn	file "../Source/prod.c",line 2112,column 8,is_stmt,isa 0
        ORB       AL,#0xf0              ; [CPU_] |2112| 
        MOV       *-SP[41],AL           ; [CPU_] |2112| 
$C$L400:    
	.dwpsn	file "../Source/prod.c",line 2302,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2302| 
        MOV       AH,#0                 ; [CPU_] |2302| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2302| 
        MOVL      ACC,*-SP[18]          ; [CPU_] |2302| 
$C$DW$885	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$885, DW_AT_low_pc(0x00)
	.dwattr $C$DW$885, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$885, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2302| 
        ; call occurs [#FS$$CMP] ; [] |2302| 
        CMPB      AL,#0                 ; [CPU_] |2302| 
        B         $C$L405,NEQ           ; [CPU_] |2302| 
        ; branchcc occurs ; [] |2302| 
	.dwpsn	file "../Source/prod.c",line 2303,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL117       ; [CPU_U] |2303| 
	.dwpsn	file "../Source/prod.c",line 2304,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |2304| 
        ; branch occurs ; [] |2304| 
$C$L401:    
	.dwpsn	file "../Source/prod.c",line 2107,column 8,is_stmt,isa 0
        MOV       AL,#15682             ; [CPU_] |2107| 
        MOV       AH,#16104             ; [CPU_] |2107| 
	.dwpsn	file "../Source/prod.c",line 2109,column 8,is_stmt,isa 0
        B         $C$L403,UNC           ; [CPU_] |2109| 
        ; branch occurs ; [] |2109| 
$C$L402:    
	.dwpsn	file "../Source/prod.c",line 2103,column 8,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |2103| 
$C$L403:    
        MOVL      *-SP[18],ACC          ; [CPU_] |2103| 
        MOV       AL,*-SP[41]           ; [CPU_] |2103| 
	.dwpsn	file "../Source/prod.c",line 2104,column 8,is_stmt,isa 0
        ORB       AL,#0x10              ; [CPU_] |2104| 
$C$L404:    
        MOV       *-SP[41],AL           ; [CPU_] |2104| 
$C$L405:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2307,column 6,is_stmt,isa 0
        CMP       AL,*+XAR1[1]          ; [CPU_] |2307| 
        B         $C$L408,EQ            ; [CPU_] |2307| 
        ; branchcc occurs ; [] |2307| 
	.dwpsn	file "../Source/prod.c",line 2313,column 6,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2313| 
	.dwpsn	file "../Source/prod.c",line 2317,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL118       ; [CPU_U] |2317| 
	.dwpsn	file "../Source/prod.c",line 2314,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[18]          ; [CPU_] |2314| 
	.dwpsn	file "../Source/prod.c",line 2317,column 6,is_stmt,isa 0
        MOVL      XAR0,#70              ; [CPU_] |2317| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2314,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |2314| 
	.dwpsn	file "../Source/prod.c",line 2317,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2317| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2317| 
        ADD       AL,*-SP[51]           ; [CPU_] |2317| 
        MOV       *-SP[3],AL            ; [CPU_] |2317| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2317| 
        MOV       AL,*+XAR1[1]          ; [CPU_] |2317| 
        ANDB      AL,#0x0f              ; [CPU_] |2317| 
        MOV       ACC,AL << 1           ; [CPU_] |2317| 
        ADDL      ACC,XAR6              ; [CPU_] |2317| 
        MOVL      XAR4,ACC              ; [CPU_] |2317| 
        MOVL      XAR0,#44              ; [CPU_] |2317| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2317| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2317| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2317| 
        MOVL      XAR4,XAR1             ; [CPU_] |2317| 
$C$DW$886	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$886, DW_AT_low_pc(0x00)
	.dwattr $C$DW$886, DW_AT_name("_sprintf")
	.dwattr $C$DW$886, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2317| 
        ; call occurs [#_sprintf] ; [] |2317| 
        MOVL      XAR4,XAR1             ; [CPU_] |2317| 
	.dwpsn	file "../Source/prod.c",line 2319,column 6,is_stmt,isa 0
$C$DW$887	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$887, DW_AT_low_pc(0x00)
	.dwattr $C$DW$887, DW_AT_name("_scia_puts")
	.dwattr $C$DW$887, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2319| 
        ; call occurs [#_scia_puts] ; [] |2319| 
        MOVL      XAR0,#40              ; [CPU_] |2319| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2319| 
	.dwpsn	file "../Source/prod.c",line 2321,column 11,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |2321| 
	.dwpsn	file "../Source/prod.c",line 2315,column 6,is_stmt,isa 0
        MOV       *-SP[42],#1           ; [CPU_] |2315| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L406:    
	.dwpsn	file "../Source/prod.c",line 2322,column 7,is_stmt,isa 0
        MOVZ      AR6,*-SP[51]          ; [CPU_] |2322| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2322| 
        CMPL      ACC,XAR6              ; [CPU_] |2322| 
        B         $C$L407,NEQ           ; [CPU_] |2322| 
        ; branchcc occurs ; [] |2322| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2323,column 8,is_stmt,isa 0
$C$DW$888	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$888, DW_AT_low_pc(0x00)
	.dwattr $C$DW$888, DW_AT_name("_update_units")
	.dwattr $C$DW$888, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2323| 
        ; call occurs [#_update_units] ; [] |2323| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2325,column 8,is_stmt,isa 0
$C$DW$889	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$889, DW_AT_low_pc(0x00)
	.dwattr $C$DW$889, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$889, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2325| 
        ; call occurs [#_ad7738_setcal] ; [] |2325| 
        MOVL      XAR0,#78              ; [CPU_] |2325| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2325| 
	.dwpsn	file "../Source/prod.c",line 2326,column 8,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |2326| 
        MOVL      XAR4,ACC              ; [CPU_] |2326| 
        MOVL      *-SP[58],ACC          ; [CPU_] |2326| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2326| 
$C$DW$890	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$890, DW_AT_low_pc(0x00)
	.dwattr $C$DW$890, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$890, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2326| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2326| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2326| 
	.dwpsn	file "../Source/prod.c",line 2327,column 8,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2327| 
$C$DW$891	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$891, DW_AT_low_pc(0x00)
	.dwattr $C$DW$891, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$891, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2327| 
        ; call occurs [#_ad7738_resetvall] ; [] |2327| 
 clrc INTM
$C$L407:    
	.dwpsn	file "../Source/prod.c",line 2321,column 19,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |2321| 
        ADDB      XAR1,#10              ; [CPU_] |2321| 
        B         $C$L406,EQ            ; [CPU_] |2321| 
        ; branchcc occurs ; [] |2321| 
        B         $C$L646,UNC           ; [CPU_] |2321| 
        ; branch occurs ; [] |2321| 
$C$L408:    
	.dwpsn	file "../Source/prod.c",line 2308,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL119       ; [CPU_U] |2308| 
	.dwpsn	file "../Source/prod.c",line 2310,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |2310| 
        ; branch occurs ; [] |2310| 
$C$L409:    
	.dwpsn	file "../Source/prod.c",line 2064,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2064| 
        MOVL      XAR4,#$C$FSL120       ; [CPU_U] |2064| 
        MOVL      XAR0,#44              ; [CPU_] |2064| 
        ADD       AL,*-SP[51]           ; [CPU_] |2064| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2064| 
        MOV       *-SP[3],AL            ; [CPU_] |2064| 
        MOVB      *-SP[4],#15,UNC       ; [CPU_] |2064| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2064| 
        MOV       *-SP[41],AL           ; [CPU_] |2064| 
        MOVL      XAR4,XAR1             ; [CPU_] |2064| 
$C$DW$892	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$892, DW_AT_low_pc(0x00)
	.dwattr $C$DW$892, DW_AT_name("_sprintf")
	.dwattr $C$DW$892, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2064| 
        ; call occurs [#_sprintf] ; [] |2064| 
	.dwpsn	file "../Source/prod.c",line 2066,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2066| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2066| 
	.dwpsn	file "../Source/prod.c",line 2064,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2064| 
	.dwpsn	file "../Source/prod.c",line 2066,column 6,is_stmt,isa 0
$C$DW$893	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$893, DW_AT_low_pc(0x00)
	.dwattr $C$DW$893, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$893, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2066| 
        ; call occurs [#_scia_getparam] ; [] |2066| 
        MOVZ      AR6,AL                ; [CPU_] |2066| 
        CMPB      AL,#15                ; [CPU_] |2066| 
        B         $C$L410,LOS           ; [CPU_] |2066| 
        ; branchcc occurs ; [] |2066| 
	.dwpsn	file "../Source/prod.c",line 2070,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |2070| 
        MOVB      XAR0,#15              ; [CPU_] |2070| 
	.dwpsn	file "../Source/prod.c",line 2069,column 7,is_stmt,isa 0
        MOVB      XAR6,#15              ; [CPU_] |2069| 
	.dwpsn	file "../Source/prod.c",line 2070,column 7,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |2070| 
$C$L410:    
	.dwpsn	file "../Source/prod.c",line 2072,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2072| 
        MOVB      AL,#152               ; [CPU_] |2072| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |2072| 
        MOV       T,*-SP[51]            ; [CPU_] |2072| 
        MPYU      ACC,T,AL              ; [CPU_] |2072| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2072| 
        ADDL      ACC,XAR7              ; [CPU_] |2072| 
        ADDB      ACC,#68               ; [CPU_] |2072| 
        MOVL      XAR1,ACC              ; [CPU_] |2072| 
        MOVL      XAR4,ACC              ; [CPU_] |2072| 
        MOVB      AH,#1                 ; [CPU_] |2072| 
        ADD       AH,AR6                ; [CPU_] |2072| 
        MOVU      ACC,AH                ; [CPU_] |2072| 
$C$DW$894	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$894, DW_AT_low_pc(0x00)
	.dwattr $C$DW$894, DW_AT_name("_memcpy")
	.dwattr $C$DW$894, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |2072| 
        ; call occurs [#_memcpy] ; [] |2072| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2072| 
	.dwpsn	file "../Source/prod.c",line 2074,column 6,is_stmt,isa 0
$C$DW$895	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$895, DW_AT_low_pc(0x00)
	.dwattr $C$DW$895, DW_AT_name("_scia_puts")
	.dwattr $C$DW$895, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2074| 
        ; call occurs [#_scia_puts] ; [] |2074| 
	.dwpsn	file "../Source/prod.c",line 2075,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2075| 
$C$DW$896	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$896, DW_AT_low_pc(0x00)
	.dwattr $C$DW$896, DW_AT_name("_scia_puts")
	.dwattr $C$DW$896, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2075| 
        ; call occurs [#_scia_puts] ; [] |2075| 
	.dwpsn	file "../Source/prod.c",line 2078,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL121       ; [CPU_U] |2078| 
        MOV       AL,*-SP[41]           ; [CPU_] |2078| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2078| 
        MOV       *-SP[3],AL            ; [CPU_] |2078| 
        MOVL      *-SP[6],XAR1          ; [CPU_] |2078| 
$C$L411:    
        MOVL      XAR0,#44              ; [CPU_] |2078| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2078| 
        MOVL      XAR4,XAR1             ; [CPU_] |2078| 
$C$DW$897	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$897, DW_AT_low_pc(0x00)
	.dwattr $C$DW$897, DW_AT_name("_sprintf")
	.dwattr $C$DW$897, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2078| 
        ; call occurs [#_sprintf] ; [] |2078| 
        MOVL      XAR4,XAR1             ; [CPU_] |2078| 
$C$L412:    
	.dwpsn	file "../Source/prod.c",line 2080,column 6,is_stmt,isa 0
$C$DW$898	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$898, DW_AT_low_pc(0x00)
	.dwattr $C$DW$898, DW_AT_name("_scia_puts")
	.dwattr $C$DW$898, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2080| 
        ; call occurs [#_scia_puts] ; [] |2080| 
	.dwpsn	file "../Source/prod.c",line 2081,column 6,is_stmt,isa 0
        B         $C$L501,UNC           ; [CPU_] |2081| 
        ; branch occurs ; [] |2081| 
$C$L413:    
	.dwpsn	file "../Source/prod.c",line 2375,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2375| 
        MOVB      AL,#152               ; [CPU_] |2375| 
        MOV       T,*-SP[51]            ; [CPU_] |2375| 
        MOVL      XAR4,#$C$FSL122       ; [CPU_U] |2375| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2375| 
        MPYU      ACC,T,AL              ; [CPU_] |2375| 
        MOVB      XAR0,#94              ; [CPU_] |2375| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2375| 
        ADDL      ACC,XAR6              ; [CPU_] |2375| 
        MOVL      XAR1,ACC              ; [CPU_] |2375| 
        MOVB      AL,#1                 ; [CPU_] |2375| 
        ADD       AL,*-SP[51]           ; [CPU_] |2375| 
        MOV       *-SP[41],AL           ; [CPU_] |2375| 
        MOV       *-SP[3],AL            ; [CPU_] |2375| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2375| 
        MOVL      XAR0,#70              ; [CPU_] |2375| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2375| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2375| 
        MOV       ACC,AL << 1           ; [CPU_] |2375| 
        ADDL      ACC,XAR6              ; [CPU_] |2375| 
        MOVL      XAR4,ACC              ; [CPU_] |2375| 
        MOVL      XAR0,#44              ; [CPU_] |2375| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2375| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2375| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2375| 
$C$DW$899	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$899, DW_AT_low_pc(0x00)
	.dwattr $C$DW$899, DW_AT_name("_sprintf")
	.dwattr $C$DW$899, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2375| 
        ; call occurs [#_sprintf] ; [] |2375| 
        MOVL      XAR0,#44              ; [CPU_] |2375| 
	.dwpsn	file "../Source/prod.c",line 2377,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2377| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2377| 
	.dwpsn	file "../Source/prod.c",line 2375,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2375| 
	.dwpsn	file "../Source/prod.c",line 2377,column 6,is_stmt,isa 0
$C$DW$900	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$900, DW_AT_low_pc(0x00)
	.dwattr $C$DW$900, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$900, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2377| 
        ; call occurs [#_scia_getparam] ; [] |2377| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2377,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2377| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$901	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$901, DW_AT_low_pc(0x00)
	.dwattr $C$DW$901, DW_AT_name("_strtod")
	.dwattr $C$DW$901, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2378,column 6,is_stmt,isa 0
        MOVB      XAR0,#198             ; [CPU_] |2378| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2378| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2378| 
	.dwpsn	file "../Source/prod.c",line 2379,column 6,is_stmt,isa 0
$C$DW$902	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$902, DW_AT_low_pc(0x00)
	.dwattr $C$DW$902, DW_AT_name("_scia_puts")
	.dwattr $C$DW$902, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2379| 
        ; call occurs [#_scia_puts] ; [] |2379| 
	.dwpsn	file "../Source/prod.c",line 2380,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2380| 
$C$DW$903	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$903, DW_AT_low_pc(0x00)
	.dwattr $C$DW$903, DW_AT_name("_scia_puts")
	.dwattr $C$DW$903, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2380| 
        ; call occurs [#_scia_puts] ; [] |2380| 
	.dwpsn	file "../Source/prod.c",line 2382,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL123       ; [CPU_U] |2382| 
        MOVL      XAR0,#44              ; [CPU_] |2382| 
        MOV       AL,*-SP[41]           ; [CPU_] |2382| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2382| 
        MOV       *-SP[3],AL            ; [CPU_] |2382| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2382| 
$C$DW$904	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$904, DW_AT_low_pc(0x00)
	.dwattr $C$DW$904, DW_AT_name("_sprintf")
	.dwattr $C$DW$904, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2382| 
        ; call occurs [#_sprintf] ; [] |2382| 
        MOVL      XAR0,#44              ; [CPU_] |2382| 
	.dwpsn	file "../Source/prod.c",line 2383,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2383| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2383| 
	.dwpsn	file "../Source/prod.c",line 2382,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2382| 
	.dwpsn	file "../Source/prod.c",line 2383,column 6,is_stmt,isa 0
$C$DW$905	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$905, DW_AT_low_pc(0x00)
	.dwattr $C$DW$905, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$905, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2383| 
        ; call occurs [#_scia_getparam] ; [] |2383| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$906	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$906, DW_AT_low_pc(0x00)
	.dwattr $C$DW$906, DW_AT_name("_strtod")
	.dwattr $C$DW$906, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2384,column 6,is_stmt,isa 0
        MOVB      XAR0,#200             ; [CPU_] |2384| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2384| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2384| 
	.dwpsn	file "../Source/prod.c",line 2385,column 6,is_stmt,isa 0
$C$DW$907	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$907, DW_AT_low_pc(0x00)
	.dwattr $C$DW$907, DW_AT_name("_scia_puts")
	.dwattr $C$DW$907, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2385| 
        ; call occurs [#_scia_puts] ; [] |2385| 
	.dwpsn	file "../Source/prod.c",line 2386,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2386| 
$C$DW$908	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$908, DW_AT_low_pc(0x00)
	.dwattr $C$DW$908, DW_AT_name("_scia_puts")
	.dwattr $C$DW$908, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2386| 
        ; call occurs [#_scia_puts] ; [] |2386| 
	.dwpsn	file "../Source/prod.c",line 2389,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL124       ; [CPU_U] |2389| 
        MOVB      XAR0,#198             ; [CPU_] |2389| 
        MOV       AL,*-SP[41]           ; [CPU_] |2389| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2389| 
        MOV       *-SP[3],AL            ; [CPU_] |2389| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2389| 
        MOVB      XAR0,#200             ; [CPU_] |2389| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2389| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2389| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2389| 
	.dwpsn	file "../Source/prod.c",line 2398,column 6,is_stmt,isa 0
        B         $C$L498,UNC           ; [CPU_] |2398| 
        ; branch occurs ; [] |2398| 
$C$L414:    
        MOVB      AL,#1                 ; [CPU_] 
        ADD       AL,*-SP[51]           ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] 
$C$L415:    
	.dwpsn	file "../Source/prod.c",line 2338,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL125       ; [CPU_U] |2338| 
        MOV       AL,*-SP[41]           ; [CPU_] |2338| 
        MOVL      XAR0,#44              ; [CPU_] |2338| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2338| 
        MOV       *-SP[3],AL            ; [CPU_] |2338| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2338| 
        MOVL      XAR4,XAR1             ; [CPU_] |2338| 
$C$DW$909	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$909, DW_AT_low_pc(0x00)
	.dwattr $C$DW$909, DW_AT_name("_sprintf")
	.dwattr $C$DW$909, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2338| 
        ; call occurs [#_sprintf] ; [] |2338| 
        MOVL      XAR4,XAR1             ; [CPU_] |2338| 
	.dwpsn	file "../Source/prod.c",line 2339,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2339| 
        MOV       AL,#1024              ; [CPU_] |2339| 
        MOVL      XAR5,XAR1             ; [CPU_] |2339| 
$C$DW$910	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$910, DW_AT_low_pc(0x00)
	.dwattr $C$DW$910, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$910, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2339| 
        ; call occurs [#_scia_getparam] ; [] |2339| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$911	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$911, DW_AT_low_pc(0x00)
	.dwattr $C$DW$911, DW_AT_name("_strtod")
	.dwattr $C$DW$911, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[18],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2341,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2341| 
$C$DW$912	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$912, DW_AT_low_pc(0x00)
	.dwattr $C$DW$912, DW_AT_name("_scia_puts")
	.dwattr $C$DW$912, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2341| 
        ; call occurs [#_scia_puts] ; [] |2341| 
	.dwpsn	file "../Source/prod.c",line 2343,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2343| 
        MOV       AH,#0                 ; [CPU_] |2343| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2343| 
        MOVL      ACC,*-SP[18]          ; [CPU_] |2343| 
$C$DW$913	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$913, DW_AT_low_pc(0x00)
	.dwattr $C$DW$913, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$913, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2343| 
        ; call occurs [#FS$$CMP] ; [] |2343| 
        CMPB      AL,#0                 ; [CPU_] |2343| 
        B         $C$L418,EQ            ; [CPU_] |2343| 
        ; branchcc occurs ; [] |2343| 
	.dwpsn	file "../Source/prod.c",line 2347,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2347| 
$C$DW$914	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$914, DW_AT_low_pc(0x00)
	.dwattr $C$DW$914, DW_AT_name("_scia_puts")
	.dwattr $C$DW$914, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2347| 
        ; call occurs [#_scia_puts] ; [] |2347| 
	.dwpsn	file "../Source/prod.c",line 2348,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2348| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2348| 
        MOVB      AL,#152               ; [CPU_] |2348| 
        MOV       T,*-SP[51]            ; [CPU_] |2348| 
        MPYU      ACC,T,AL              ; [CPU_] |2348| 
        ADDL      ACC,XAR6              ; [CPU_] |2348| 
        MOVL      XAR1,ACC              ; [CPU_] |2348| 
        MOVB      XAR0,#194             ; [CPU_] |2348| 
	.dwpsn	file "../Source/prod.c",line 2351,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL126       ; [CPU_U] |2351| 
	.dwpsn	file "../Source/prod.c",line 2348,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[18]          ; [CPU_] |2348| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2348| 
	.dwpsn	file "../Source/prod.c",line 2351,column 6,is_stmt,isa 0
        MOVB      XAR0,#194             ; [CPU_] |2351| 
        MOV       AL,*-SP[41]           ; [CPU_] |2351| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2351| 
        MOV       *-SP[3],AL            ; [CPU_] |2351| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2351| 
        MOVL      XAR0,#44              ; [CPU_] |2351| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2351| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2351| 
$C$DW$915	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$915, DW_AT_low_pc(0x00)
	.dwattr $C$DW$915, DW_AT_name("_sprintf")
	.dwattr $C$DW$915, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2351| 
        ; call occurs [#_sprintf] ; [] |2351| 
        MOVL      XAR0,#44              ; [CPU_] |2351| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2351| 
	.dwpsn	file "../Source/prod.c",line 2353,column 6,is_stmt,isa 0
$C$DW$916	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$916, DW_AT_low_pc(0x00)
	.dwattr $C$DW$916, DW_AT_name("_scia_puts")
	.dwattr $C$DW$916, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2353| 
        ; call occurs [#_scia_puts] ; [] |2353| 
	.dwpsn	file "../Source/prod.c",line 2349,column 6,is_stmt,isa 0
        MOV       *-SP[42],#1           ; [CPU_] |2349| 
	.dwpsn	file "../Source/prod.c",line 2355,column 6,is_stmt,isa 0
        MOVB      XAR0,#95              ; [CPU_] |2355| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |2355| 
        CMPB      AL,#247               ; [CPU_] |2355| 
        B         $C$L646,NEQ           ; [CPU_] |2355| 
        ; branchcc occurs ; [] |2355| 
	.dwpsn	file "../Source/prod.c",line 2357,column 7,is_stmt,isa 0
        MOVB      XAR0,#194             ; [CPU_] |2357| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2357| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2357| 
        MOV       AL,#0                 ; [CPU_] |2357| 
        MOV       AH,#17096             ; [CPU_] |2357| 
$C$DW$917	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$917, DW_AT_low_pc(0x00)
	.dwattr $C$DW$917, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$917, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |2357| 
        ; call occurs [#FS$$DIV] ; [] |2357| 
        MOVB      XAR0,#96              ; [CPU_] |2357| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2357| 
        MOVL      XAR0,#40              ; [CPU_] |2357| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2357| 
	.dwpsn	file "../Source/prod.c",line 2360,column 12,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |2360| 
        ADDB      XAR1,#42              ; [CPU_] 
$C$L416:    
	.dwpsn	file "../Source/prod.c",line 2361,column 8,is_stmt,isa 0
        MOVZ      AR6,*-SP[51]          ; [CPU_] |2361| 
        MOVU      ACC,*+XAR1[0]         ; [CPU_] |2361| 
        CMPL      ACC,XAR6              ; [CPU_] |2361| 
        B         $C$L417,NEQ           ; [CPU_] |2361| 
        ; branchcc occurs ; [] |2361| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2364,column 9,is_stmt,isa 0
$C$DW$918	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$918, DW_AT_low_pc(0x00)
	.dwattr $C$DW$918, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$918, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2364| 
        ; call occurs [#_ad7738_setcal] ; [] |2364| 
        MOVL      XAR0,#78              ; [CPU_] |2364| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2364| 
	.dwpsn	file "../Source/prod.c",line 2365,column 9,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |2365| 
        MOVL      XAR4,ACC              ; [CPU_] |2365| 
        MOVL      *-SP[58],ACC          ; [CPU_] |2365| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |2365| 
$C$DW$919	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$919, DW_AT_low_pc(0x00)
	.dwattr $C$DW$919, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$919, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |2365| 
        ; call occurs [#_ad7738_resetpeak] ; [] |2365| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2365| 
	.dwpsn	file "../Source/prod.c",line 2366,column 9,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |2366| 
$C$DW$920	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$920, DW_AT_low_pc(0x00)
	.dwattr $C$DW$920, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$920, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |2366| 
        ; call occurs [#_ad7738_resetvall] ; [] |2366| 
 clrc INTM
$C$L417:    
	.dwpsn	file "../Source/prod.c",line 2360,column 20,is_stmt,isa 0
        INC       *-SP[52]              ; [CPU_] |2360| 
        ADDB      XAR1,#10              ; [CPU_] |2360| 
        B         $C$L416,EQ            ; [CPU_] |2360| 
        ; branchcc occurs ; [] |2360| 
        B         $C$L646,UNC           ; [CPU_] |2360| 
        ; branch occurs ; [] |2360| 
$C$L418:    
	.dwpsn	file "../Source/prod.c",line 2345,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2345| 
$C$DW$921	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$921, DW_AT_low_pc(0x00)
	.dwattr $C$DW$921, DW_AT_name("_scia_puts")
	.dwattr $C$DW$921, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2345| 
        ; call occurs [#_scia_puts] ; [] |2345| 
	.dwpsn	file "../Source/prod.c",line 2337,column 6,is_stmt,isa 0
        B         $C$L415,UNC           ; [CPU_] |2337| 
        ; branch occurs ; [] |2337| 
$C$L419:    
	.dwpsn	file "../Source/prod.c",line 2053,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2053| 
$C$DW$922	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$922, DW_AT_low_pc(0x00)
	.dwattr $C$DW$922, DW_AT_name("_scia_puts")
	.dwattr $C$DW$922, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2053| 
        ; call occurs [#_scia_puts] ; [] |2053| 
	.dwpsn	file "../Source/prod.c",line 2043,column 5,is_stmt,isa 0
        B         $C$L359,UNC           ; [CPU_] |2043| 
        ; branch occurs ; [] |2043| 
$C$L420:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3015,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3015| 
        B         $C$L635,LO            ; [CPU_] |3015| 
        ; branchcc occurs ; [] |3015| 
	.dwpsn	file "../Source/prod.c",line 3018,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3018| 
        CMPB      AL,#83                ; [CPU_] |3018| 
        B         $C$L421,GT            ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
        CMPB      AL,#83                ; [CPU_] |3018| 
        B         $C$L427,EQ            ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
        CMPB      AL,#73                ; [CPU_] |3018| 
        B         $C$L432,EQ            ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
        CMPB      AL,#76                ; [CPU_] |3018| 
        B         $C$L434,EQ            ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
        CMPB      AL,#80                ; [CPU_] |3018| 
        B         $C$L429,EQ            ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
        B         $C$L635,UNC           ; [CPU_] |3018| 
        ; branch occurs ; [] |3018| 
$C$L421:    
        CMPB      AL,#84                ; [CPU_] |3018| 
        B         $C$L423,EQ            ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
        CMPB      AL,#86                ; [CPU_] |3018| 
        B         $C$L635,NEQ           ; [CPU_] |3018| 
        ; branchcc occurs ; [] |3018| 
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3046| 
        B         $C$L422,LOS           ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L422,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3046,column 6,is_stmt,isa 0
$C$DW$923	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$923, DW_AT_low_pc(0x00)
	.dwattr $C$DW$923, DW_AT_name("_atoi")
	.dwattr $C$DW$923, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3046| 
        ; call occurs [#_atoi] ; [] |3046| 
        CMPB      AL,#2                 ; [CPU_] |3046| 
        B         $C$L422,GEQ           ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
        CMPB      AL,#0                 ; [CPU_] |3046| 
        B         $C$L422,LEQ           ; [CPU_] |3046| 
        ; branchcc occurs ; [] |3046| 
	.dwpsn	file "../Source/prod.c",line 3048,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3048| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3048| 
        ADD       ACC,AR5               ; [CPU_] |3048| 
        MOVL      XAR4,ACC              ; [CPU_] |3048| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3048| 
	.dwpsn	file "../Source/prod.c",line 3049,column 6,is_stmt,isa 0
        B         $C$L425,UNC           ; [CPU_] |3049| 
        ; branch occurs ; [] |3049| 
$C$L422:    
	.dwpsn	file "../Source/prod.c",line 3050,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3050| 
        B         $C$L425,UNC           ; [CPU_] |3050| 
        ; branch occurs ; [] |3050| 
$C$L423:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3022,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3022| 
        B         $C$L426,LOS           ; [CPU_] |3022| 
        ; branchcc occurs ; [] |3022| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L426,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3022,column 6,is_stmt,isa 0
$C$DW$924	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$924, DW_AT_low_pc(0x00)
	.dwattr $C$DW$924, DW_AT_name("_atoi")
	.dwattr $C$DW$924, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3022| 
        ; call occurs [#_atoi] ; [] |3022| 
        CMPB      AL,#2                 ; [CPU_] |3022| 
        MOVZ      AR4,AL                ; [CPU_] |3022| 
        B         $C$L426,GEQ           ; [CPU_] |3022| 
        ; branchcc occurs ; [] |3022| 
        CMPB      AL,#0                 ; [CPU_] |3022| 
        B         $C$L426,LEQ           ; [CPU_] |3022| 
        ; branchcc occurs ; [] |3022| 
        MOVL      XAR0,#78              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3024,column 7,is_stmt,isa 0
        SUBB      XAR4,#1               ; [CPU_U] |3024| 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR4               ; [CPU_] |3024| 
$C$L424:    
        MOVL      XAR1,ACC              ; [CPU_] |3024| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |3024| 
$C$DW$925	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$925, DW_AT_low_pc(0x00)
	.dwattr $C$DW$925, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$925, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3024| 
        ; call occurs [#_ad7738_resettare] ; [] |3024| 
	.dwpsn	file "../Source/prod.c",line 3025,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3025| 
$C$DW$926	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$926, DW_AT_low_pc(0x00)
	.dwattr $C$DW$926, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$926, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3025| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3025| 
	.dwpsn	file "../Source/prod.c",line 3026,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |3026| 
$C$L425:    
$C$DW$927	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$927, DW_AT_low_pc(0x00)
	.dwattr $C$DW$927, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$927, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3026| 
        ; call occurs [#_ad7738_resetvall] ; [] |3026| 
	.dwpsn	file "../Source/prod.c",line 3027,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |3027| 
        ; branch occurs ; [] |3027| 
$C$L426:    
	.dwpsn	file "../Source/prod.c",line 3028,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3028| 
$C$DW$928	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$928, DW_AT_low_pc(0x00)
	.dwattr $C$DW$928, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$928, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3028| 
        ; call occurs [#_ad7738_resettare] ; [] |3028| 
	.dwpsn	file "../Source/prod.c",line 3029,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3029| 
$C$DW$929	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$929, DW_AT_low_pc(0x00)
	.dwattr $C$DW$929, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$929, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3029| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3029| 
	.dwpsn	file "../Source/prod.c",line 3030,column 7,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |3030| 
        B         $C$L425,UNC           ; [CPU_] |3030| 
        ; branch occurs ; [] |3030| 
$C$L427:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3056,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3056| 
        B         $C$L428,LOS           ; [CPU_] |3056| 
        ; branchcc occurs ; [] |3056| 
        MOVL      ACC,XAR4              ; [CPU_] |3056| 
        MOVL      XAR0,#66              ; [CPU_] |3056| 
        ADDB      ACC,#2                ; [CPU_] |3056| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |3056| 
        MOV       AL,*+XAR4[2]          ; [CPU_] |3056| 
        CMPB      AL,#67                ; [CPU_] |3056| 
        B         $C$L428,NEQ           ; [CPU_] |3056| 
        ; branchcc occurs ; [] |3056| 
	.dwpsn	file "../Source/prod.c",line 3057,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3057| 
$C$DW$930	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$930, DW_AT_low_pc(0x00)
	.dwattr $C$DW$930, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$930, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3057| 
        ; call occurs [#_shunt_switch] ; [] |3057| 
	.dwpsn	file "../Source/prod.c",line 3058,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL127       ; [CPU_U] |3058| 
	.dwpsn	file "../Source/prod.c",line 3059,column 6,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |3059| 
        ; branch occurs ; [] |3059| 
$C$L428:    
	.dwpsn	file "../Source/prod.c",line 3060,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3060| 
$C$DW$931	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$931, DW_AT_low_pc(0x00)
	.dwattr $C$DW$931, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$931, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |3060| 
        ; call occurs [#_shunt_switch] ; [] |3060| 
	.dwpsn	file "../Source/prod.c",line 3061,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL128       ; [CPU_U] |3061| 
        B         $C$L645,UNC           ; [CPU_] |3061| 
        ; branch occurs ; [] |3061| 
$C$L429:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3036,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3036| 
        B         $C$L431,LOS           ; [CPU_] |3036| 
        ; branchcc occurs ; [] |3036| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L431,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3036,column 6,is_stmt,isa 0
$C$DW$932	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$932, DW_AT_low_pc(0x00)
	.dwattr $C$DW$932, DW_AT_name("_atoi")
	.dwattr $C$DW$932, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3036| 
        ; call occurs [#_atoi] ; [] |3036| 
        CMPB      AL,#2                 ; [CPU_] |3036| 
        B         $C$L431,GEQ           ; [CPU_] |3036| 
        ; branchcc occurs ; [] |3036| 
        CMPB      AL,#0                 ; [CPU_] |3036| 
        B         $C$L431,LEQ           ; [CPU_] |3036| 
        ; branchcc occurs ; [] |3036| 
	.dwpsn	file "../Source/prod.c",line 3038,column 7,is_stmt,isa 0
        MOVZ      AR5,AL                ; [CPU_] |3038| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR5,#1               ; [CPU_U] |3038| 
        ADD       ACC,AR5               ; [CPU_] |3038| 
        MOVL      XAR4,ACC              ; [CPU_] |3038| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |3038| 
$C$L430:    
$C$DW$933	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$933, DW_AT_low_pc(0x00)
	.dwattr $C$DW$933, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$933, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3038| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3038| 
	.dwpsn	file "../Source/prod.c",line 3039,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |3039| 
        ; branch occurs ; [] |3039| 
$C$L431:    
	.dwpsn	file "../Source/prod.c",line 3040,column 7,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3040| 
        B         $C$L430,UNC           ; [CPU_] |3040| 
        ; branch occurs ; [] |3040| 
$C$L432:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3075,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3075| 
        B         $C$L433,LOS           ; [CPU_] |3075| 
        ; branchcc occurs ; [] |3075| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L433,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3075,column 6,is_stmt,isa 0
$C$DW$934	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$934, DW_AT_low_pc(0x00)
	.dwattr $C$DW$934, DW_AT_name("_atoi")
	.dwattr $C$DW$934, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3075| 
        ; call occurs [#_atoi] ; [] |3075| 
        CMPB      AL,#2                 ; [CPU_] |3075| 
        MOVZ      AR6,AL                ; [CPU_] |3075| 
        B         $C$L433,GT            ; [CPU_] |3075| 
        ; branchcc occurs ; [] |3075| 
        CMPB      AL,#0                 ; [CPU_] |3075| 
        B         $C$L433,LEQ           ; [CPU_] |3075| 
        ; branchcc occurs ; [] |3075| 
        MOVL      XAR0,#78              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3077,column 7,is_stmt,isa 0
        ADD       ACC,AR6               ; [CPU_] |3077| 
	.dwpsn	file "../Source/prod.c",line 3080,column 6,is_stmt,isa 0
        B         $C$L424,UNC           ; [CPU_] |3080| 
        ; branch occurs ; [] |3080| 
$C$L433:    
	.dwpsn	file "../Source/prod.c",line 3081,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3081| 
$C$DW$935	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$935, DW_AT_low_pc(0x00)
	.dwattr $C$DW$935, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$935, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |3081| 
        ; call occurs [#_ad7738_resettare] ; [] |3081| 
	.dwpsn	file "../Source/prod.c",line 3082,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3082| 
$C$DW$936	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$936, DW_AT_low_pc(0x00)
	.dwattr $C$DW$936, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$936, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3082| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3082| 
	.dwpsn	file "../Source/prod.c",line 3083,column 7,is_stmt,isa 0
        MOVB      AL,#240               ; [CPU_] |3083| 
        B         $C$L425,UNC           ; [CPU_] |3083| 
        ; branch occurs ; [] |3083| 
$C$L434:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3067,column 6,is_stmt,isa 0
$C$DW$937	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$937, DW_AT_low_pc(0x00)
	.dwattr $C$DW$937, DW_AT_name("_atoi")
	.dwattr $C$DW$937, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |3067| 
        ; call occurs [#_atoi] ; [] |3067| 
	.dwpsn	file "../Source/prod.c",line 3070,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |3070| 
        MOV       *-SP[52],AL           ; [CPU_] |3070| 
$C$DW$938	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$938, DW_AT_low_pc(0x00)
	.dwattr $C$DW$938, DW_AT_name("_ad7738_resetlimit")
	.dwattr $C$DW$938, DW_AT_TI_call

        LCR       #_ad7738_resetlimit   ; [CPU_] |3070| 
        ; call occurs [#_ad7738_resetlimit] ; [] |3070| 
	.dwpsn	file "../Source/prod.c",line 3071,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |3071| 
        ; branch occurs ; [] |3071| 
$C$L435:    
	.dwpsn	file "../Source/prod.c",line 1018,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1018| 
        CMPB      AL,#76                ; [CPU_] |1018| 
        B         $C$L436,GT            ; [CPU_] |1018| 
        ; branchcc occurs ; [] |1018| 
        CMPB      AL,#76                ; [CPU_] |1018| 
        B         $C$L444,EQ            ; [CPU_] |1018| 
        ; branchcc occurs ; [] |1018| 
        CMPB      AL,#65                ; [CPU_] |1018| 
        B         $C$L437,EQ            ; [CPU_] |1018| 
        ; branchcc occurs ; [] |1018| 
        CMPB      AL,#68                ; [CPU_] |1018| 
        B         $C$L448,EQ            ; [CPU_] |1018| 
        ; branchcc occurs ; [] |1018| 
        B         $C$L635,UNC           ; [CPU_] |1018| 
        ; branch occurs ; [] |1018| 
$C$L436:    
        CMPB      AL,#79                ; [CPU_] |1018| 
        B         $C$L447,EQ            ; [CPU_] |1018| 
        ; branchcc occurs ; [] |1018| 
        CMPB      AL,#83                ; [CPU_] |1018| 
        B         $C$L445,EQ            ; [CPU_] |1018| 
        ; branchcc occurs ; [] |1018| 
        B         $C$L635,UNC           ; [CPU_] |1018| 
        ; branch occurs ; [] |1018| 
$C$L437:    
	.dwpsn	file "../Source/prod.c",line 1023,column 6,is_stmt,isa 0
        MOV       ACC,#32512 << 15      ; [CPU_] |1023| 
	.dwpsn	file "../Source/prod.c",line 1024,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL129       ; [CPU_U] |1024| 
	.dwpsn	file "../Source/prod.c",line 1023,column 6,is_stmt,isa 0
        MOVL      *-SP[20],ACC          ; [CPU_] |1023| 
	.dwpsn	file "../Source/prod.c",line 1024,column 6,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1024| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1024| 
        MOVL      XAR4,#$C$FSL61        ; [CPU_U] |1024| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1024| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1024| 
        MOVL      XAR4,#$C$FSL62        ; [CPU_U] |1024| 
        MOVL      *-SP[8],XAR4          ; [CPU_] |1024| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1024| 
        MOVL      XAR4,XAR1             ; [CPU_] |1024| 
$C$DW$939	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$939, DW_AT_low_pc(0x00)
	.dwattr $C$DW$939, DW_AT_name("_sprintf")
	.dwattr $C$DW$939, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1024| 
        ; call occurs [#_sprintf] ; [] |1024| 
	.dwpsn	file "../Source/prod.c",line 1026,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1026| 
$C$DW$940	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$940, DW_AT_low_pc(0x00)
	.dwattr $C$DW$940, DW_AT_name("_scia_puts")
	.dwattr $C$DW$940, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1026| 
        ; call occurs [#_scia_puts] ; [] |1026| 
	.dwpsn	file "../Source/prod.c",line 1027,column 6,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |1027| 
        MOVL      XAR4,#$C$FSL130       ; [CPU_U] |1027| 
        LSR       AL,8                  ; [CPU_] |1027| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1027| 
        MOV       *-SP[3],AL            ; [CPU_] |1027| 
        IN        AL,*(04004H)          ; [CPU_] |1027| 
        MOVL      XAR4,XAR1             ; [CPU_] |1027| 
        ANDB      AL,#0xff              ; [CPU_] |1027| 
        MOV       *-SP[4],AL            ; [CPU_] |1027| 
$C$DW$941	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$941, DW_AT_low_pc(0x00)
	.dwattr $C$DW$941, DW_AT_name("_sprintf")
	.dwattr $C$DW$941, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1027| 
        ; call occurs [#_sprintf] ; [] |1027| 
	.dwpsn	file "../Source/prod.c",line 1029,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1029| 
$C$DW$942	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$942, DW_AT_low_pc(0x00)
	.dwattr $C$DW$942, DW_AT_name("_scia_puts")
	.dwattr $C$DW$942, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1029| 
        ; call occurs [#_scia_puts] ; [] |1029| 
	.dwpsn	file "../Source/prod.c",line 1030,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1030| 
        MOVL      XAR4,#$C$FSL131       ; [CPU_U] |1030| 
        MOVL      XAR0,#44              ; [CPU_] |1030| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1030| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1030| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1030| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1030| 
$C$DW$943	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$943, DW_AT_low_pc(0x00)
	.dwattr $C$DW$943, DW_AT_name("_sprintf")
	.dwattr $C$DW$943, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1030| 
        ; call occurs [#_sprintf] ; [] |1030| 
        MOVL      XAR0,#44              ; [CPU_] |1030| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1030| 
	.dwpsn	file "../Source/prod.c",line 1031,column 6,is_stmt,isa 0
$C$DW$944	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$944, DW_AT_low_pc(0x00)
	.dwattr $C$DW$944, DW_AT_name("_scia_puts")
	.dwattr $C$DW$944, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1031| 
        ; call occurs [#_scia_puts] ; [] |1031| 
	.dwpsn	file "../Source/prod.c",line 1032,column 6,is_stmt,isa 0
        MOVL      XAR0,#76              ; [CPU_] |1032| 
        MOVL      XAR4,#$C$FSL132       ; [CPU_U] |1032| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1032| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1032| 
        MOVL      XAR0,#44              ; [CPU_] |1032| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1032| 
$C$DW$945	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$945, DW_AT_low_pc(0x00)
	.dwattr $C$DW$945, DW_AT_name("_sprintf")
	.dwattr $C$DW$945, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1032| 
        ; call occurs [#_sprintf] ; [] |1032| 
        MOVL      XAR0,#44              ; [CPU_] |1032| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1032| 
	.dwpsn	file "../Source/prod.c",line 1034,column 6,is_stmt,isa 0
$C$DW$946	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$946, DW_AT_low_pc(0x00)
	.dwattr $C$DW$946, DW_AT_name("_scia_puts")
	.dwattr $C$DW$946, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1034| 
        ; call occurs [#_scia_puts] ; [] |1034| 
	.dwpsn	file "../Source/prod.c",line 1036,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1036| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR4,#$C$FSL133       ; [CPU_U] |1036| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1036| 
        MOV       ACC,*+XAR1[AR0] << 1  ; [CPU_] |1036| 
        MOVL      XAR0,#72              ; [CPU_] |1036| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1036| 
        ADDL      ACC,XAR6              ; [CPU_] |1036| 
        MOVL      XAR4,ACC              ; [CPU_] |1036| 
        MOVL      XAR0,#44              ; [CPU_] |1036| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1036| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1036| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1036| 
$C$DW$947	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$947, DW_AT_low_pc(0x00)
	.dwattr $C$DW$947, DW_AT_name("_sprintf")
	.dwattr $C$DW$947, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1036| 
        ; call occurs [#_sprintf] ; [] |1036| 
        MOVL      XAR0,#44              ; [CPU_] |1036| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1036| 
	.dwpsn	file "../Source/prod.c",line 1038,column 6,is_stmt,isa 0
$C$DW$948	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$948, DW_AT_low_pc(0x00)
	.dwattr $C$DW$948, DW_AT_name("_scia_puts")
	.dwattr $C$DW$948, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1038| 
        ; call occurs [#_scia_puts] ; [] |1038| 
	.dwpsn	file "../Source/prod.c",line 1039,column 6,is_stmt,isa 0
        MOVB      XAR0,#34              ; [CPU_] |1039| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1039| 
        B         $C$L438,EQ            ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
        MOVB      XAR0,#34              ; [CPU_] |1039| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1039| 
        CMPB      AL,#1                 ; [CPU_] |1039| 
        B         $C$L439,NEQ           ; [CPU_] |1039| 
        ; branchcc occurs ; [] |1039| 
$C$L438:    
	.dwpsn	file "../Source/prod.c",line 1041,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL134       ; [CPU_U] |1041| 
        MOVL      XAR0,#74              ; [CPU_] |1041| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1041| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1041| 
        CLRC      SXM                   ; [CPU_] 
        MOVW      DP,#_conf_data+35     ; [CPU_U] 
        MOV       ACC,@_conf_data+35 << 1 ; [CPU_] |1041| 
        ADDL      ACC,XAR6              ; [CPU_] |1041| 
        MOVL      XAR4,ACC              ; [CPU_] |1041| 
        MOVL      XAR0,#44              ; [CPU_] |1041| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1041| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1041| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1041| 
        MOVL      XAR4,XAR1             ; [CPU_] |1041| 
$C$DW$949	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$949, DW_AT_low_pc(0x00)
	.dwattr $C$DW$949, DW_AT_name("_sprintf")
	.dwattr $C$DW$949, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1041| 
        ; call occurs [#_sprintf] ; [] |1041| 
        MOVL      XAR4,XAR1             ; [CPU_] |1041| 
	.dwpsn	file "../Source/prod.c",line 1043,column 7,is_stmt,isa 0
$C$DW$950	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$950, DW_AT_low_pc(0x00)
	.dwattr $C$DW$950, DW_AT_name("_scia_puts")
	.dwattr $C$DW$950, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1043| 
        ; call occurs [#_scia_puts] ; [] |1043| 
$C$L439:    
        MOVW      DP,#_conf_data+36     ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1045,column 6,is_stmt,isa 0
        MOV       AL,@_conf_data+36     ; [CPU_] |1045| 
        B         $C$L440,NEQ           ; [CPU_] |1045| 
        ; branchcc occurs ; [] |1045| 
        MOVL      XAR4,#$C$FSL135       ; [CPU_U] |1045| 
        B         $C$L441,UNC           ; [CPU_] |1045| 
        ; branch occurs ; [] |1045| 
$C$L440:    
        MOVL      XAR4,#$C$FSL136       ; [CPU_U] |1045| 
$C$L441:    
        MOVL      XAR5,#$C$FSL137       ; [CPU_U] |1045| 
        MOVL      XAR0,#44              ; [CPU_] |1045| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1045| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1045| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1045| 
        MOVL      XAR4,XAR1             ; [CPU_] |1045| 
$C$DW$951	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$951, DW_AT_low_pc(0x00)
	.dwattr $C$DW$951, DW_AT_name("_sprintf")
	.dwattr $C$DW$951, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1045| 
        ; call occurs [#_sprintf] ; [] |1045| 
        MOVL      XAR4,XAR1             ; [CPU_] |1045| 
	.dwpsn	file "../Source/prod.c",line 1047,column 6,is_stmt,isa 0
$C$DW$952	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$952, DW_AT_low_pc(0x00)
	.dwattr $C$DW$952, DW_AT_name("_scia_puts")
	.dwattr $C$DW$952, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1047| 
        ; call occurs [#_scia_puts] ; [] |1047| 
	.dwpsn	file "../Source/prod.c",line 1049,column 6,is_stmt,isa 0
        MOVL      XAR1,#_conf_data      ; [CPU_U] |1049| 
        MOVB      XAR0,#38              ; [CPU_] |1049| 
        MOVL      XAR4,#$C$FSL138       ; [CPU_U] |1049| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1049| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1049| 
        MOVL      XAR0,#44              ; [CPU_] |1049| 
        MOV       *-SP[3],AL            ; [CPU_] |1049| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1049| 
$C$DW$953	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$953, DW_AT_low_pc(0x00)
	.dwattr $C$DW$953, DW_AT_name("_sprintf")
	.dwattr $C$DW$953, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1049| 
        ; call occurs [#_sprintf] ; [] |1049| 
        MOVL      XAR0,#44              ; [CPU_] |1049| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1049| 
	.dwpsn	file "../Source/prod.c",line 1051,column 6,is_stmt,isa 0
$C$DW$954	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$954, DW_AT_low_pc(0x00)
	.dwattr $C$DW$954, DW_AT_name("_scia_puts")
	.dwattr $C$DW$954, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1051| 
        ; call occurs [#_scia_puts] ; [] |1051| 
        ADDB      XAR1,#42              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1053,column 11,is_stmt,isa 0
        MOV       *-SP[52],#0           ; [CPU_] |1053| 
$C$L442:    
	.dwpsn	file "../Source/prod.c",line 1054,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1054| 
$C$DW$955	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$955, DW_AT_low_pc(0x00)
	.dwattr $C$DW$955, DW_AT_name("_scia_puts")
	.dwattr $C$DW$955, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1054| 
        ; call occurs [#_scia_puts] ; [] |1054| 
        MOV       AL,*-SP[52]           ; [CPU_] |1054| 
	.dwpsn	file "../Source/prod.c",line 1055,column 7,is_stmt,isa 0
$C$DW$956	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$956, DW_AT_low_pc(0x00)
	.dwattr $C$DW$956, DW_AT_name("_print_channel")
	.dwattr $C$DW$956, DW_AT_TI_call

        LCR       #_print_channel       ; [CPU_] |1055| 
        ; call occurs [#_print_channel] ; [] |1055| 
	.dwpsn	file "../Source/prod.c",line 1056,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1056| 
$C$DW$957	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$957, DW_AT_low_pc(0x00)
	.dwattr $C$DW$957, DW_AT_name("_print_sensor")
	.dwattr $C$DW$957, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1056| 
        ; call occurs [#_print_sensor] ; [] |1056| 
	.dwpsn	file "../Source/prod.c",line 1053,column 19,is_stmt,isa 0
        ADDB      XAR1,#10              ; [CPU_] |1053| 
        INC       *-SP[52]              ; [CPU_] |1053| 
        B         $C$L442,EQ            ; [CPU_] |1053| 
        ; branchcc occurs ; [] |1053| 
	.dwpsn	file "../Source/prod.c",line 1059,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1059| 
$C$DW$958	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$958, DW_AT_low_pc(0x00)
	.dwattr $C$DW$958, DW_AT_name("_scia_puts")
	.dwattr $C$DW$958, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1059| 
        ; call occurs [#_scia_puts] ; [] |1059| 
	.dwpsn	file "../Source/prod.c",line 1060,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL139       ; [CPU_U] |1060| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1060| 
        MOVL      XAR4,#_conf_data      ; [CPU_U] |1060| 
        MOVL      ACC,XAR4              ; [CPU_] |1060| 
        ADD       ACC,#199 << 4         ; [CPU_] |1060| 
        MOVL      XAR4,ACC              ; [CPU_] |1060| 
        MOVL      XAR0,#44              ; [CPU_] |1060| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1060| 
        MOV       *-SP[3],AL            ; [CPU_] |1060| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1060| 
$C$DW$959	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$959, DW_AT_low_pc(0x00)
	.dwattr $C$DW$959, DW_AT_name("_sprintf")
	.dwattr $C$DW$959, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1060| 
        ; call occurs [#_sprintf] ; [] |1060| 
        MOVL      XAR0,#44              ; [CPU_] |1060| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1060| 
	.dwpsn	file "../Source/prod.c",line 1062,column 6,is_stmt,isa 0
$C$DW$960	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$960, DW_AT_low_pc(0x00)
	.dwattr $C$DW$960, DW_AT_name("_scia_puts")
	.dwattr $C$DW$960, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1062| 
        ; call occurs [#_scia_puts] ; [] |1062| 
        MOVL      XAR0,#40              ; [CPU_] |1062| 
	.dwpsn	file "../Source/prod.c",line 1063,column 11,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |1063| 
	.dwpsn	file "../Source/prod.c",line 1062,column 6,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1062| 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
$C$L443:    
	.dwpsn	file "../Source/prod.c",line 1064,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL140       ; [CPU_U] |1064| 
        MOVB      AL,#65                ; [CPU_] |1064| 
        MOVL      XAR0,#44              ; [CPU_] |1064| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1064| 
        ADD       AL,*-SP[41]           ; [CPU_] |1064| 
        MOV       *-SP[3],AL            ; [CPU_] |1064| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1064| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1064| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1064| 
$C$DW$961	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$961, DW_AT_low_pc(0x00)
	.dwattr $C$DW$961, DW_AT_name("_sprintf")
	.dwattr $C$DW$961, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1064| 
        ; call occurs [#_sprintf] ; [] |1064| 
        MOVL      XAR0,#44              ; [CPU_] |1064| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1064| 
	.dwpsn	file "../Source/prod.c",line 1066,column 7,is_stmt,isa 0
$C$DW$962	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$962, DW_AT_low_pc(0x00)
	.dwattr $C$DW$962, DW_AT_name("_scia_puts")
	.dwattr $C$DW$962, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1066| 
        ; call occurs [#_scia_puts] ; [] |1066| 
	.dwpsn	file "../Source/prod.c",line 1063,column 18,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |1063| 
	.dwpsn	file "../Source/prod.c",line 1066,column 7,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |1066| 
	.dwpsn	file "../Source/prod.c",line 1063,column 18,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1063| 
        B         $C$L443,LT            ; [CPU_] |1063| 
        ; branchcc occurs ; [] |1063| 
	.dwpsn	file "../Source/prod.c",line 1068,column 6,is_stmt,isa 0
$C$DW$963	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$963, DW_AT_low_pc(0x00)
	.dwattr $C$DW$963, DW_AT_name("_print_vfd")
	.dwattr $C$DW$963, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1068| 
        ; call occurs [#_print_vfd] ; [] |1068| 
	.dwpsn	file "../Source/prod.c",line 1069,column 6,is_stmt,isa 0
$C$DW$964	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$964, DW_AT_low_pc(0x00)
	.dwattr $C$DW$964, DW_AT_name("_print_dac")
	.dwattr $C$DW$964, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1069| 
        ; call occurs [#_print_dac] ; [] |1069| 
$C$L444:    
	.dwpsn	file "../Source/prod.c",line 1070,column 6,is_stmt,isa 0
$C$DW$965	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$965, DW_AT_low_pc(0x00)
	.dwattr $C$DW$965, DW_AT_name("_print_limits")
	.dwattr $C$DW$965, DW_AT_TI_call

        LCR       #_print_limits        ; [CPU_] |1070| 
        ; call occurs [#_print_limits] ; [] |1070| 
	.dwpsn	file "../Source/prod.c",line 1071,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |1071| 
        ; branch occurs ; [] |1071| 
$C$L445:    
	.dwpsn	file "../Source/prod.c",line 1075,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1075| 
$C$DW$966	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$966, DW_AT_low_pc(0x00)
	.dwattr $C$DW$966, DW_AT_name("_scia_puts")
	.dwattr $C$DW$966, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1075| 
        ; call occurs [#_scia_puts] ; [] |1075| 
	.dwpsn	file "../Source/prod.c",line 1077,column 11,is_stmt,isa 0
        MOV       *-SP[51],#0           ; [CPU_] |1077| 
$C$L446:    
	.dwpsn	file "../Source/prod.c",line 1078,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1078| 
        MOVL      XAR4,#$C$FSL141       ; [CPU_U] |1078| 
        MOVL      XAR0,#44              ; [CPU_] |1078| 
        ADD       AL,*-SP[51]           ; [CPU_] |1078| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1078| 
        MOVZ      AR1,AL                ; [CPU_] |1078| 
        MOV       *-SP[3],AL            ; [CPU_] |1078| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1078| 
$C$DW$967	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$967, DW_AT_low_pc(0x00)
	.dwattr $C$DW$967, DW_AT_name("_sprintf")
	.dwattr $C$DW$967, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1078| 
        ; call occurs [#_sprintf] ; [] |1078| 
        MOVL      XAR0,#44              ; [CPU_] |1078| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1078| 
	.dwpsn	file "../Source/prod.c",line 1079,column 7,is_stmt,isa 0
$C$DW$968	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$968, DW_AT_low_pc(0x00)
	.dwattr $C$DW$968, DW_AT_name("_scia_puts")
	.dwattr $C$DW$968, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1079| 
        ; call occurs [#_scia_puts] ; [] |1079| 
        MOV       AL,*-SP[51]           ; [CPU_] |1079| 
	.dwpsn	file "../Source/prod.c",line 1080,column 7,is_stmt,isa 0
$C$DW$969	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$969, DW_AT_low_pc(0x00)
	.dwattr $C$DW$969, DW_AT_name("_print_sensor")
	.dwattr $C$DW$969, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |1080| 
        ; call occurs [#_print_sensor] ; [] |1080| 
	.dwpsn	file "../Source/prod.c",line 1077,column 19,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |1077| 
        MOV       *-SP[51],AR1          ; [CPU_] |1077| 
        CMPB      AL,#20                ; [CPU_] |1077| 
        B         $C$L446,LO            ; [CPU_] |1077| 
        ; branchcc occurs ; [] |1077| 
        B         $C$L646,UNC           ; [CPU_] |1077| 
        ; branch occurs ; [] |1077| 
$C$L447:    
	.dwpsn	file "../Source/prod.c",line 1091,column 6,is_stmt,isa 0
$C$DW$970	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$970, DW_AT_low_pc(0x00)
	.dwattr $C$DW$970, DW_AT_name("_print_dac")
	.dwattr $C$DW$970, DW_AT_TI_call

        LCR       #_print_dac           ; [CPU_] |1091| 
        ; call occurs [#_print_dac] ; [] |1091| 
	.dwpsn	file "../Source/prod.c",line 1092,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |1092| 
        ; branch occurs ; [] |1092| 
$C$L448:    
	.dwpsn	file "../Source/prod.c",line 1086,column 6,is_stmt,isa 0
$C$DW$971	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$971, DW_AT_low_pc(0x00)
	.dwattr $C$DW$971, DW_AT_name("_print_vfd")
	.dwattr $C$DW$971, DW_AT_TI_call

        LCR       #_print_vfd           ; [CPU_] |1086| 
        ; call occurs [#_print_vfd] ; [] |1086| 
	.dwpsn	file "../Source/prod.c",line 1087,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |1087| 
        ; branch occurs ; [] |1087| 
$C$L449:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2635,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2635| 
        B         $C$L635,LO            ; [CPU_] |2635| 
        ; branchcc occurs ; [] |2635| 
	.dwpsn	file "../Source/prod.c",line 2638,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2638| 
        CMPB      AL,#68                ; [CPU_] |2638| 
        B         $C$L450,EQ            ; [CPU_] |2638| 
        ; branchcc occurs ; [] |2638| 
        CMPB      AL,#83                ; [CPU_] |2638| 
        B         $C$L456,EQ            ; [CPU_] |2638| 
        ; branchcc occurs ; [] |2638| 
        B         $C$L635,UNC           ; [CPU_] |2638| 
        ; branch occurs ; [] |2638| 
$C$L450:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2756,column 7,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2756| 
        B         $C$L635,LO            ; [CPU_] |2756| 
        ; branchcc occurs ; [] |2756| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L635,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
        MOV       AL,*+XAR4[3]          ; [CPU_] |51| 
        CMPB      AL,#86                ; [CPU_] |51| 
        B         $C$L635,NEQ           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2760,column 6,is_stmt,isa 0
$C$DW$972	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$972, DW_AT_low_pc(0x00)
	.dwattr $C$DW$972, DW_AT_name("_atoi")
	.dwattr $C$DW$972, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2760| 
        ; call occurs [#_atoi] ; [] |2760| 
        MOV       *-SP[51],AL           ; [CPU_] |2760| 
	.dwpsn	file "../Source/prod.c",line 2762,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2762| 
        CMPB      AL,#4                 ; [CPU_] |2762| 
        B         $C$L635,HIS           ; [CPU_] |2762| 
        ; branchcc occurs ; [] |2762| 
	.dwpsn	file "../Source/prod.c",line 2768,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2768| 
        MOV       *-SP[51],AL           ; [CPU_] |2768| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2768| 
        MOV       T,AL                  ; [CPU_] |2768| 
        MOVB      AL,#12                ; [CPU_] |2768| 
        MPYU      ACC,T,AL              ; [CPU_] |2768| 
        ADDL      ACC,XAR6              ; [CPU_] |2768| 
        ADD       ACC,#97 << 5          ; [CPU_] |2768| 
        MOVL      XAR1,ACC              ; [CPU_] |2768| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2768| 
        CMPB      AL,#7                 ; [CPU_] |2768| 
        B         $C$L635,NEQ           ; [CPU_] |2768| 
        ; branchcc occurs ; [] |2768| 
        MOVL      XAR0,#64              ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$973	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$973, DW_AT_low_pc(0x00)
	.dwattr $C$DW$973, DW_AT_name("_strtod")
	.dwattr $C$DW$973, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2772,column 6,is_stmt,isa 0
        MOVL      *-SP[26],ACC          ; [CPU_] |2772| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
        MOVL      *-SP[58],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2774,column 7,is_stmt,isa 0
        MOV       ACC,#-32192 << 15     ; [CPU_] |2774| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2774| 
        MOVL      ACC,XAR6              ; [CPU_] |2774| 
$C$DW$974	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$974, DW_AT_low_pc(0x00)
	.dwattr $C$DW$974, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$974, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2774| 
        ; call occurs [#FS$$CMP] ; [] |2774| 
        CMPB      AL,#0                 ; [CPU_] |2774| 
        B         $C$L635,LT            ; [CPU_] |2774| 
        ; branchcc occurs ; [] |2774| 
        MOV       AL,#0                 ; [CPU_] |2774| 
        MOV       AH,#16672             ; [CPU_] |2774| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2774| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |2774| 
$C$DW$975	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$975, DW_AT_low_pc(0x00)
	.dwattr $C$DW$975, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$975, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2774| 
        ; call occurs [#FS$$CMP] ; [] |2774| 
        CMPB      AL,#0                 ; [CPU_] |2774| 
        B         $C$L635,GT            ; [CPU_] |2774| 
        ; branchcc occurs ; [] |2774| 
	.dwpsn	file "../Source/prod.c",line 2780,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |2780| 
        MOV       AH,#0                 ; [CPU_] |2780| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2780| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |2780| 
$C$DW$976	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$976, DW_AT_low_pc(0x00)
	.dwattr $C$DW$976, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$976, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |2780| 
        ; call occurs [#FS$$CMP] ; [] |2780| 
        CMPB      AL,#0                 ; [CPU_] |2780| 
        B         $C$L451,GEQ           ; [CPU_] |2780| 
        ; branchcc occurs ; [] |2780| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |2780| 
        MOVL      *-SP[2],ACC           ; [CPU_] |2780| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2780| 
        B         $C$L452,UNC           ; [CPU_] |2780| 
        ; branch occurs ; [] |2780| 
$C$L451:    
        MOVL      ACC,*-SP[58]          ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |2780| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |2780| 
$C$L452:    
$C$DW$977	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$977, DW_AT_low_pc(0x00)
	.dwattr $C$DW$977, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$977, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |2780| 
        ; call occurs [#FS$$MPY] ; [] |2780| 
        MOVL      XAR6,*+XAR1[6]        ; [CPU_] |2780| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |2780| 
$C$DW$978	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$978, DW_AT_low_pc(0x00)
	.dwattr $C$DW$978, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$978, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |2780| 
        ; call occurs [#FS$$ADD] ; [] |2780| 
$C$DW$979	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$979, DW_AT_low_pc(0x00)
	.dwattr $C$DW$979, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$979, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |2780| 
        ; call occurs [#FS$$TOLL] ; [] |2780| 
	.dwpsn	file "../Source/prod.c",line 2787,column 6,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |2787| 
	.dwpsn	file "../Source/prod.c",line 2780,column 7,is_stmt,isa 0
        MOVL      *-SP[34],P            ; [CPU_] |2780| 
        MOVL      *-SP[32],ACC          ; [CPU_] |2780| 
	.dwpsn	file "../Source/prod.c",line 2787,column 6,is_stmt,isa 0
        MOVL      P,*-SP[34]            ; [CPU_] |2787| 
        CMP64     ACC:P                 ; [CPU_] |2787| 
        B         $C$L454,LEQ           ; [CPU_] |2787| 
        ; branchcc occurs ; [] |2787| 
	.dwpsn	file "../Source/prod.c",line 2789,column 13,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |2789| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2789| 
        MOV       *-SP[2],#0            ; [CPU_] |2789| 
        MOVL      P,*-SP[34]            ; [CPU_] |2789| 
        MOV       *-SP[1],#0            ; [CPU_] |2789| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |2789| 
$C$DW$980	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$980, DW_AT_low_pc(0x00)
	.dwattr $C$DW$980, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$980, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |2789| 
        ; call occurs [#LL$$CMP] ; [] |2789| 
        CMPB      AL,#0                 ; [CPU_] |2789| 
        B         $C$L453,GEQ           ; [CPU_] |2789| 
        ; branchcc occurs ; [] |2789| 
	.dwpsn	file "../Source/prod.c",line 2792,column 7,is_stmt,isa 0
        MOV       AL,*-SP[34]           ; [CPU_] |2792| 
        MOV       *-SP[37],AL           ; [CPU_] |2792| 
        B         $C$L455,UNC           ; [CPU_] |2792| 
        ; branch occurs ; [] |2792| 
$C$L453:    
	.dwpsn	file "../Source/prod.c",line 2790,column 7,is_stmt,isa 0
        MOV       *-SP[37],#65535       ; [CPU_] |2790| 
	.dwpsn	file "../Source/prod.c",line 2791,column 6,is_stmt,isa 0
        B         $C$L455,UNC           ; [CPU_] |2791| 
        ; branch occurs ; [] |2791| 
$C$L454:    
	.dwpsn	file "../Source/prod.c",line 2788,column 7,is_stmt,isa 0
        MOV       *-SP[37],#0           ; [CPU_] |2788| 
$C$L455:    
        MOV       AH,*-SP[51]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2795,column 6,is_stmt,isa 0
        MOV       AL,*-SP[37]           ; [CPU_] |2795| 
$C$DW$981	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$981, DW_AT_low_pc(0x00)
	.dwattr $C$DW$981, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$981, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |2795| 
        ; call occurs [#_mcbsp_xmit] ; [] |2795| 
	.dwpsn	file "../Source/prod.c",line 2796,column 6,is_stmt,isa 0
$C$DW$982	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$982, DW_AT_low_pc(0x00)
	.dwattr $C$DW$982, DW_AT_name("_latch_dac")
	.dwattr $C$DW$982, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |2796| 
        ; call occurs [#_latch_dac] ; [] |2796| 
	.dwpsn	file "../Source/prod.c",line 2798,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2798| 
        MOVL      XAR4,#$C$FSL142       ; [CPU_U] |2798| 
        ADD       AL,*-SP[51]           ; [CPU_] |2798| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2798| 
        MOV       *-SP[3],AL            ; [CPU_] |2798| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |2798| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2798| 
        MOV       AL,*-SP[37]           ; [CPU_] |2798| 
        MOV       *-SP[7],AL            ; [CPU_] |2798| 
	.dwpsn	file "../Source/prod.c",line 2802,column 6,is_stmt,isa 0
        B         $C$L506,UNC           ; [CPU_] |2802| 
        ; branch occurs ; [] |2802| 
$C$L456:    
	.dwpsn	file "../Source/prod.c",line 2645,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL143       ; [CPU_U] |2645| 
        MOVL      XAR0,#44              ; [CPU_] |2645| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2645| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2645| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2645| 
        MOVL      XAR4,XAR1             ; [CPU_] |2645| 
$C$DW$983	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$983, DW_AT_low_pc(0x00)
	.dwattr $C$DW$983, DW_AT_name("_sprintf")
	.dwattr $C$DW$983, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2645| 
        ; call occurs [#_sprintf] ; [] |2645| 
        MOVL      XAR4,XAR1             ; [CPU_] |2645| 
	.dwpsn	file "../Source/prod.c",line 2646,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2646| 
        MOV       AL,#1024              ; [CPU_] |2646| 
        MOVL      XAR5,XAR1             ; [CPU_] |2646| 
$C$DW$984	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$984, DW_AT_low_pc(0x00)
	.dwattr $C$DW$984, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$984, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2646| 
        ; call occurs [#_scia_getparam] ; [] |2646| 
	.dwpsn	file "../Source/prod.c",line 2647,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2647| 
$C$DW$985	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$985, DW_AT_low_pc(0x00)
	.dwattr $C$DW$985, DW_AT_name("_atoi")
	.dwattr $C$DW$985, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2647| 
        ; call occurs [#_atoi] ; [] |2647| 
        MOV       *-SP[51],AL           ; [CPU_] |2647| 
	.dwpsn	file "../Source/prod.c",line 2648,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2648| 
$C$DW$986	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$986, DW_AT_low_pc(0x00)
	.dwattr $C$DW$986, DW_AT_name("_scia_puts")
	.dwattr $C$DW$986, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2648| 
        ; call occurs [#_scia_puts] ; [] |2648| 
        MOV       AL,*-SP[51]           ; [CPU_] |2648| 
	.dwpsn	file "../Source/prod.c",line 2650,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2650| 
        CMPB      AL,#4                 ; [CPU_] |2650| 
        B         $C$L471,HIS           ; [CPU_] |2650| 
        ; branchcc occurs ; [] |2650| 
	.dwpsn	file "../Source/prod.c",line 2654,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2654| 
$C$DW$987	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$987, DW_AT_low_pc(0x00)
	.dwattr $C$DW$987, DW_AT_name("_scia_puts")
	.dwattr $C$DW$987, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2654| 
        ; call occurs [#_scia_puts] ; [] |2654| 
        MOVL      XAR0,#62              ; [CPU_] |2654| 
	.dwpsn	file "../Source/prod.c",line 2658,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2658| 
	.dwpsn	file "../Source/prod.c",line 2654,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2654| 
	.dwpsn	file "../Source/prod.c",line 2658,column 11,is_stmt,isa 0
        MOV       *-SP[41],AL           ; [CPU_] |2658| 
$C$L457:    
	.dwpsn	file "../Source/prod.c",line 2659,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2659| 
        MOVL      XAR0,#44              ; [CPU_] |2659| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2659| 
        MOV       *-SP[3],AL            ; [CPU_] |2659| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2659| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2659| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2659| 
$C$DW$988	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$988, DW_AT_low_pc(0x00)
	.dwattr $C$DW$988, DW_AT_name("_sprintf")
	.dwattr $C$DW$988, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2659| 
        ; call occurs [#_sprintf] ; [] |2659| 
        MOVL      XAR0,#44              ; [CPU_] |2659| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2659| 
	.dwpsn	file "../Source/prod.c",line 2660,column 7,is_stmt,isa 0
$C$DW$989	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$989, DW_AT_low_pc(0x00)
	.dwattr $C$DW$989, DW_AT_name("_scia_puts")
	.dwattr $C$DW$989, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2660| 
        ; call occurs [#_scia_puts] ; [] |2660| 
	.dwpsn	file "../Source/prod.c",line 2661,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2661| 
$C$DW$990	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$990, DW_AT_low_pc(0x00)
	.dwattr $C$DW$990, DW_AT_name("_scia_puts")
	.dwattr $C$DW$990, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2661| 
        ; call occurs [#_scia_puts] ; [] |2661| 
	.dwpsn	file "../Source/prod.c",line 2658,column 18,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |2658| 
	.dwpsn	file "../Source/prod.c",line 2661,column 7,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |2661| 
	.dwpsn	file "../Source/prod.c",line 2658,column 18,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2658| 
        B         $C$L457,LT            ; [CPU_] |2658| 
        ; branchcc occurs ; [] |2658| 
	.dwpsn	file "../Source/prod.c",line 2664,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2664| 
        MOVB      XAR0,#14              ; [CPU_] |2664| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2664| 
        MOVB      *-SP[3],#7,UNC        ; [CPU_] |2664| 
        MOVL      XAR4,#_LPV            ; [CPU_U] |2664| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |2664| 
        MOVL      XAR0,#44              ; [CPU_] |2664| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2664| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2664| 
        MOVL      XAR4,XAR1             ; [CPU_] |2664| 
$C$DW$991	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$991, DW_AT_low_pc(0x00)
	.dwattr $C$DW$991, DW_AT_name("_sprintf")
	.dwattr $C$DW$991, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2664| 
        ; call occurs [#_sprintf] ; [] |2664| 
	.dwpsn	file "../Source/prod.c",line 2665,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2665| 
$C$DW$992	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$992, DW_AT_low_pc(0x00)
	.dwattr $C$DW$992, DW_AT_name("_scia_puts")
	.dwattr $C$DW$992, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2665| 
        ; call occurs [#_scia_puts] ; [] |2665| 
	.dwpsn	file "../Source/prod.c",line 2666,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2666| 
$C$DW$993	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$993, DW_AT_low_pc(0x00)
	.dwattr $C$DW$993, DW_AT_name("_scia_puts")
	.dwattr $C$DW$993, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2666| 
        ; call occurs [#_scia_puts] ; [] |2666| 
	.dwpsn	file "../Source/prod.c",line 2667,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL145       ; [CPU_U] |2667| 
	.dwpsn	file "../Source/prod.c",line 2666,column 6,is_stmt,isa 0
        MOV       AH,*-SP[51]           ; [CPU_] |2666| 
	.dwpsn	file "../Source/prod.c",line 2667,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2667| 
        DEC       *-SP[51]              ; [CPU_] |2667| 
        MOV       *-SP[41],AH           ; [CPU_] |2667| 
        MOV       *-SP[3],AH            ; [CPU_] |2667| 
        MOVL      XAR4,XAR1             ; [CPU_] |2667| 
$C$DW$994	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$994, DW_AT_low_pc(0x00)
	.dwattr $C$DW$994, DW_AT_name("_sprintf")
	.dwattr $C$DW$994, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2667| 
        ; call occurs [#_sprintf] ; [] |2667| 
	.dwpsn	file "../Source/prod.c",line 2669,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2669| 
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2669| 
        MOV       AL,#1024              ; [CPU_] |2669| 
        MOVL      XAR5,XAR1             ; [CPU_] |2669| 
$C$DW$995	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$995, DW_AT_low_pc(0x00)
	.dwattr $C$DW$995, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$995, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2669| 
        ; call occurs [#_scia_getparam] ; [] |2669| 
        MOVL      XAR4,XAR1             ; [CPU_] |2669| 
	.dwpsn	file "../Source/prod.c",line 2670,column 6,is_stmt,isa 0
$C$DW$996	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$996, DW_AT_low_pc(0x00)
	.dwattr $C$DW$996, DW_AT_name("_atoi")
	.dwattr $C$DW$996, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2670| 
        ; call occurs [#_atoi] ; [] |2670| 
	.dwpsn	file "../Source/prod.c",line 2663,column 6,is_stmt,isa 0
        MOV       *-SP[54],#7           ; [CPU_] |2663| 
	.dwpsn	file "../Source/prod.c",line 2670,column 6,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |2670| 
	.dwpsn	file "../Source/prod.c",line 2671,column 6,is_stmt,isa 0
        CMPB      AL,#5                 ; [CPU_] |2671| 
        B         $C$L458,LO            ; [CPU_] |2671| 
        ; branchcc occurs ; [] |2671| 
        CMPB      AL,#7                 ; [CPU_] |2671| 
        B         $C$L458,EQ            ; [CPU_] |2671| 
        ; branchcc occurs ; [] |2671| 
	.dwpsn	file "../Source/prod.c",line 2673,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2673| 
$C$DW$997	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$997, DW_AT_low_pc(0x00)
	.dwattr $C$DW$997, DW_AT_name("_scia_puts")
	.dwattr $C$DW$997, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2673| 
        ; call occurs [#_scia_puts] ; [] |2673| 
	.dwpsn	file "../Source/prod.c",line 2672,column 7,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |2672| 
$C$L458:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2676,column 6,is_stmt,isa 0
$C$DW$998	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$998, DW_AT_low_pc(0x00)
	.dwattr $C$DW$998, DW_AT_name("_scia_puts")
	.dwattr $C$DW$998, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2676| 
        ; call occurs [#_scia_puts] ; [] |2676| 
	.dwpsn	file "../Source/prod.c",line 2677,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2677| 
$C$DW$999	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$999, DW_AT_low_pc(0x00)
	.dwattr $C$DW$999, DW_AT_name("_scia_puts")
	.dwattr $C$DW$999, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2677| 
        ; call occurs [#_scia_puts] ; [] |2677| 
	.dwpsn	file "../Source/prod.c",line 2678,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2678| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2678| 
        MOVB      AL,#12                ; [CPU_] |2678| 
        MOV       T,*-SP[51]            ; [CPU_] |2678| 
        MPYU      ACC,T,AL              ; [CPU_] |2678| 
        ADDL      ACC,XAR6              ; [CPU_] |2678| 
        ADD       ACC,#97 << 5          ; [CPU_] |2678| 
        MOVL      XAR1,ACC              ; [CPU_] |2678| 
        MOV       AL,*-SP[53]           ; [CPU_] |2678| 
	.dwpsn	file "../Source/prod.c",line 2680,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2680| 
	.dwpsn	file "../Source/prod.c",line 2678,column 6,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2678| 
	.dwpsn	file "../Source/prod.c",line 2680,column 6,is_stmt,isa 0
        B         $C$L465,EQ            ; [CPU_] |2680| 
        ; branchcc occurs ; [] |2680| 
	.dwpsn	file "../Source/prod.c",line 2682,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2682| 
        B         $C$L460,EQ            ; [CPU_] |2682| 
        ; branchcc occurs ; [] |2682| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2682| 
        B         $C$L460,EQ            ; [CPU_] |2682| 
        ; branchcc occurs ; [] |2682| 
	.dwpsn	file "../Source/prod.c",line 2685,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2685| 
        B         $C$L459,EQ            ; [CPU_] |2685| 
        ; branchcc occurs ; [] |2685| 
        CMPB      AL,#4                 ; [CPU_] |2685| 
        B         $C$L461,NEQ           ; [CPU_] |2685| 
        ; branchcc occurs ; [] |2685| 
$C$L459:    
	.dwpsn	file "../Source/prod.c",line 2686,column 8,is_stmt,isa 0
        MOV       *-SP[54],#2           ; [CPU_] |2686| 
        B         $C$L461,UNC           ; [CPU_] |2686| 
        ; branch occurs ; [] |2686| 
$C$L460:    
	.dwpsn	file "../Source/prod.c",line 2684,column 8,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |2684| 
$C$L461:    
        MOV       AL,*-SP[54]           ; [CPU_] 
        MOV       *-SP[42],AL           ; [CPU_] 
$C$L462:    
	.dwpsn	file "../Source/prod.c",line 2691,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2691| 
        MOV       AL,*-SP[54]           ; [CPU_] |2691| 
        MOVL      XAR0,#44              ; [CPU_] |2691| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2691| 
        MOV       *-SP[3],AL            ; [CPU_] |2691| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2691| 
$C$DW$1000	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1000, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1000, DW_AT_name("_sprintf")
	.dwattr $C$DW$1000, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2691| 
        ; call occurs [#_sprintf] ; [] |2691| 
        MOVL      XAR0,#44              ; [CPU_] |2691| 
	.dwpsn	file "../Source/prod.c",line 2692,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2692| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2691,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2691| 
	.dwpsn	file "../Source/prod.c",line 2692,column 8,is_stmt,isa 0
$C$DW$1001	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1001, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1001, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1001, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2692| 
        ; call occurs [#_scia_getparam] ; [] |2692| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2692| 
	.dwpsn	file "../Source/prod.c",line 2693,column 8,is_stmt,isa 0
$C$DW$1002	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1002, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1002, DW_AT_name("_atoi")
	.dwattr $C$DW$1002, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2693| 
        ; call occurs [#_atoi] ; [] |2693| 
        MOV       *-SP[52],AL           ; [CPU_] |2693| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2693| 
	.dwpsn	file "../Source/prod.c",line 2694,column 8,is_stmt,isa 0
$C$DW$1003	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1003, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1003, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1003, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2694| 
        ; call occurs [#_scia_puts] ; [] |2694| 
        MOV       AL,*-SP[52]           ; [CPU_] |2694| 
	.dwpsn	file "../Source/prod.c",line 2696,column 9,is_stmt,isa 0
        B         $C$L470,EQ            ; [CPU_] |2696| 
        ; branchcc occurs ; [] |2696| 
        MOV       AL,*-SP[42]           ; [CPU_] 
        CMP       AL,*-SP[52]           ; [CPU_] |2696| 
        B         $C$L470,LO            ; [CPU_] |2696| 
        ; branchcc occurs ; [] |2696| 
	.dwpsn	file "../Source/prod.c",line 2700,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2700| 
$C$DW$1004	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1004, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1004, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1004, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2700| 
        ; call occurs [#_scia_puts] ; [] |2700| 
	.dwpsn	file "../Source/prod.c",line 2702,column 7,is_stmt,isa 0
        DEC       *-SP[52]              ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2700,column 7,is_stmt,isa 0
        MOV       AL,*-SP[52]           ; [CPU_] |2700| 
	.dwpsn	file "../Source/prod.c",line 2702,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2702| 
        MOV       AL,*-SP[53]           ; [CPU_] |2702| 
	.dwpsn	file "../Source/prod.c",line 2705,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2705| 
        B         $C$L463,EQ            ; [CPU_] |2705| 
        ; branchcc occurs ; [] |2705| 
        CMPB      AL,#4                 ; [CPU_] |2705| 
        B         $C$L465,NEQ           ; [CPU_] |2705| 
        ; branchcc occurs ; [] |2705| 
	.dwpsn	file "../Source/prod.c",line 2710,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL147       ; [CPU_U] |2710| 
        B         $C$L464,UNC           ; [CPU_] |2710| 
        ; branch occurs ; [] |2710| 
$C$L463:    
	.dwpsn	file "../Source/prod.c",line 2708,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL148       ; [CPU_U] |2708| 
$C$L464:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |2708| 
        MOVL      XAR0,#44              ; [CPU_] |2708| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2708| 
$C$DW$1005	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1005, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1005, DW_AT_name("_sprintf")
	.dwattr $C$DW$1005, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2708| 
        ; call occurs [#_sprintf] ; [] |2708| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2712,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2712| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2712| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1006	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1006, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1006, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1006, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2712| 
        ; call occurs [#_scia_getparam] ; [] |2712| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2712,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2712| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1007	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1007, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1007, DW_AT_name("_strtod")
	.dwattr $C$DW$1007, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2713,column 8,is_stmt,isa 0
        MOVB      XAR0,#8               ; [CPU_] |2713| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2713| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2713| 
	.dwpsn	file "../Source/prod.c",line 2714,column 8,is_stmt,isa 0
$C$DW$1008	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1008, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1008, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1008, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2714| 
        ; call occurs [#_scia_puts] ; [] |2714| 
	.dwpsn	file "../Source/prod.c",line 2715,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2715| 
$C$DW$1009	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1009, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1009, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1009, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2715| 
        ; call occurs [#_scia_puts] ; [] |2715| 
	.dwpsn	file "../Source/prod.c",line 2718,column 8,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2718| 
        MOVL      XAR4,#$C$FSL149       ; [CPU_U] |2718| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2718| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2718| 
$C$DW$1010	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1010, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1010, DW_AT_name("_sprintf")
	.dwattr $C$DW$1010, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2718| 
        ; call occurs [#_sprintf] ; [] |2718| 
        MOVL      XAR0,#44              ; [CPU_] |2718| 
	.dwpsn	file "../Source/prod.c",line 2719,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2719| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2719| 
	.dwpsn	file "../Source/prod.c",line 2718,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2718| 
	.dwpsn	file "../Source/prod.c",line 2719,column 8,is_stmt,isa 0
$C$DW$1011	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1011, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1011, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1011, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2719| 
        ; call occurs [#_scia_getparam] ; [] |2719| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2719,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2719| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1012	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1012, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1012, DW_AT_name("_strtod")
	.dwattr $C$DW$1012, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2720,column 8,is_stmt,isa 0
        MOVB      XAR0,#10              ; [CPU_] |2720| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |2720| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2720| 
	.dwpsn	file "../Source/prod.c",line 2721,column 8,is_stmt,isa 0
$C$DW$1013	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1013, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1013, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1013, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2721| 
        ; call occurs [#_scia_puts] ; [] |2721| 
	.dwpsn	file "../Source/prod.c",line 2722,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2722| 
$C$DW$1014	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1014, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1014, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1014, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2722| 
        ; call occurs [#_scia_puts] ; [] |2722| 
$C$L465:    
	.dwpsn	file "../Source/prod.c",line 2729,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL150       ; [CPU_U] |2729| 
        MOV       AL,*-SP[41]           ; [CPU_] |2729| 
        MOVL      XAR0,#62              ; [CPU_] |2729| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2729| 
        MOV       *-SP[3],AL            ; [CPU_] |2729| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2729| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[53]           ; [CPU_] |2729| 
        MOV       ACC,AL << 1           ; [CPU_] |2729| 
        ADDL      ACC,XAR6              ; [CPU_] |2729| 
        MOVL      XAR4,ACC              ; [CPU_] |2729| 
        MOVL      XAR0,#44              ; [CPU_] |2729| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2729| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2729| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2729| 
$C$DW$1015	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1015, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1015, DW_AT_name("_sprintf")
	.dwattr $C$DW$1015, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2729| 
        ; call occurs [#_sprintf] ; [] |2729| 
        MOVL      XAR0,#44              ; [CPU_] |2729| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2729| 
	.dwpsn	file "../Source/prod.c",line 2731,column 6,is_stmt,isa 0
$C$DW$1016	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1016, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1016, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1016, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2731| 
        ; call occurs [#_scia_puts] ; [] |2731| 
	.dwpsn	file "../Source/prod.c",line 2726,column 6,is_stmt,isa 0
        MOV       *-SP[42],#1           ; [CPU_] |2726| 
        MOV       AL,*-SP[53]           ; [CPU_] |2726| 
	.dwpsn	file "../Source/prod.c",line 2733,column 6,is_stmt,isa 0
        CMPB      AL,#7                 ; [CPU_] |2733| 
        B         $C$L467,EQ            ; [CPU_] |2733| 
        ; branchcc occurs ; [] |2733| 
	.dwpsn	file "../Source/prod.c",line 2736,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL151       ; [CPU_U] |2736| 
        MOVB      AL,#1                 ; [CPU_] |2736| 
        MOVL      XAR0,#44              ; [CPU_] |2736| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2736| 
        ADD       AL,*-SP[52]           ; [CPU_] |2736| 
        MOV       *-SP[3],AL            ; [CPU_] |2736| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2736| 
$C$DW$1017	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1017, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1017, DW_AT_name("_sprintf")
	.dwattr $C$DW$1017, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2736| 
        ; call occurs [#_sprintf] ; [] |2736| 
        MOVL      XAR0,#44              ; [CPU_] |2736| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2736| 
	.dwpsn	file "../Source/prod.c",line 2737,column 7,is_stmt,isa 0
$C$DW$1018	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1018, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1018, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1018, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2737| 
        ; call occurs [#_scia_puts] ; [] |2737| 
        MOV       AL,*-SP[53]           ; [CPU_] |2737| 
	.dwpsn	file "../Source/prod.c",line 2739,column 7,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2739| 
        B         $C$L466,EQ            ; [CPU_] |2739| 
        ; branchcc occurs ; [] |2739| 
        CMPB      AL,#4                 ; [CPU_] |2739| 
        B         $C$L469,NEQ           ; [CPU_] |2739| 
        ; branchcc occurs ; [] |2739| 
$C$L466:    
	.dwpsn	file "../Source/prod.c",line 2740,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL152       ; [CPU_U] |2740| 
        MOVB      XAR0,#8               ; [CPU_] |2740| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2740| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2740| 
        MOVB      XAR0,#10              ; [CPU_] |2740| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2740| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |2740| 
        MOVL      XAR0,#44              ; [CPU_] |2740| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2740| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2740| 
        MOVL      XAR4,XAR1             ; [CPU_] |2740| 
$C$DW$1019	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1019, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1019, DW_AT_name("_sprintf")
	.dwattr $C$DW$1019, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2740| 
        ; call occurs [#_sprintf] ; [] |2740| 
        MOVL      XAR4,XAR1             ; [CPU_] |2740| 
	.dwpsn	file "../Source/prod.c",line 2743,column 8,is_stmt,isa 0
        B         $C$L468,UNC           ; [CPU_] |2743| 
        ; branch occurs ; [] |2743| 
$C$L467:    
	.dwpsn	file "../Source/prod.c",line 2734,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2734| 
$C$L468:    
$C$DW$1020	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1020, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1020, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1020, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2734| 
        ; call occurs [#_scia_puts] ; [] |2734| 
$C$L469:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2748,column 6,is_stmt,isa 0
$C$DW$1021	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1021, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1021, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1021, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2748| 
        ; call occurs [#_ad7738_setcal] ; [] |2748| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 2750,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |2750| 
        ; branch occurs ; [] |2750| 
$C$L470:    
	.dwpsn	file "../Source/prod.c",line 2698,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2698| 
$C$DW$1022	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1022, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1022, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1022, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2698| 
        ; call occurs [#_scia_puts] ; [] |2698| 
	.dwpsn	file "../Source/prod.c",line 2690,column 7,is_stmt,isa 0
        B         $C$L462,UNC           ; [CPU_] |2690| 
        ; branch occurs ; [] |2690| 
$C$L471:    
	.dwpsn	file "../Source/prod.c",line 2652,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2652| 
$C$DW$1023	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1023, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1023, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1023, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2652| 
        ; call occurs [#_scia_puts] ; [] |2652| 
	.dwpsn	file "../Source/prod.c",line 2644,column 6,is_stmt,isa 0
        B         $C$L456,UNC           ; [CPU_] |2644| 
        ; branch occurs ; [] |2644| 
$C$L472:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2816,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2816| 
        B         $C$L635,LO            ; [CPU_] |2816| 
        ; branchcc occurs ; [] |2816| 
	.dwpsn	file "../Source/prod.c",line 2819,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2819| 
        CMPB      AL,#83                ; [CPU_] |2819| 
        B         $C$L635,NEQ           ; [CPU_] |2819| 
        ; branchcc occurs ; [] |2819| 
$C$L473:    
	.dwpsn	file "../Source/prod.c",line 2826,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL153       ; [CPU_U] |2826| 
        MOVL      XAR0,#44              ; [CPU_] |2826| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2826| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2826| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2826| 
        MOVL      XAR4,XAR1             ; [CPU_] |2826| 
$C$DW$1024	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1024, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1024, DW_AT_name("_sprintf")
	.dwattr $C$DW$1024, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2826| 
        ; call occurs [#_sprintf] ; [] |2826| 
        MOVL      XAR4,XAR1             ; [CPU_] |2826| 
	.dwpsn	file "../Source/prod.c",line 2827,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2827| 
        MOV       AL,#1024              ; [CPU_] |2827| 
        MOVL      XAR5,XAR1             ; [CPU_] |2827| 
$C$DW$1025	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1025, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1025, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1025, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2827| 
        ; call occurs [#_scia_getparam] ; [] |2827| 
	.dwpsn	file "../Source/prod.c",line 2828,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2828| 
$C$DW$1026	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1026, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1026, DW_AT_name("_atoi")
	.dwattr $C$DW$1026, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2828| 
        ; call occurs [#_atoi] ; [] |2828| 
        MOV       *-SP[51],AL           ; [CPU_] |2828| 
	.dwpsn	file "../Source/prod.c",line 2829,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2829| 
$C$DW$1027	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1027, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1027, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1027, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2829| 
        ; call occurs [#_scia_puts] ; [] |2829| 
        MOV       AL,*-SP[51]           ; [CPU_] |2829| 
	.dwpsn	file "../Source/prod.c",line 2831,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2831| 
        CMPB      AL,#4                 ; [CPU_] |2831| 
        B         $C$L503,HIS           ; [CPU_] |2831| 
        ; branchcc occurs ; [] |2831| 
	.dwpsn	file "../Source/prod.c",line 2835,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2835| 
$C$DW$1028	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1028, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1028, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1028, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2835| 
        ; call occurs [#_scia_puts] ; [] |2835| 
        MOVZ      AR1,*-SP[51]          ; [CPU_] |2835| 
	.dwpsn	file "../Source/prod.c",line 2838,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL154       ; [CPU_U] |2838| 
        MOVL      XAR0,#44              ; [CPU_] |2838| 
        DEC       *-SP[51]              ; [CPU_] |2838| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2838| 
        MOV       *-SP[41],AR1          ; [CPU_] |2838| 
        MOV       *-SP[3],AR1           ; [CPU_] |2838| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2838| 
$C$DW$1029	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1029, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1029, DW_AT_name("_sprintf")
	.dwattr $C$DW$1029, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2838| 
        ; call occurs [#_sprintf] ; [] |2838| 
        MOVL      XAR0,#44              ; [CPU_] |2838| 
	.dwpsn	file "../Source/prod.c",line 2839,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2839| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2839| 
	.dwpsn	file "../Source/prod.c",line 2838,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2838| 
	.dwpsn	file "../Source/prod.c",line 2839,column 6,is_stmt,isa 0
$C$DW$1030	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1030, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1030, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1030, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2839| 
        ; call occurs [#_scia_getparam] ; [] |2839| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2839| 
	.dwpsn	file "../Source/prod.c",line 2840,column 6,is_stmt,isa 0
$C$DW$1031	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1031, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1031, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1031, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2840| 
        ; call occurs [#_scia_puts] ; [] |2840| 
	.dwpsn	file "../Source/prod.c",line 2841,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2841| 
$C$DW$1032	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1032, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1032, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1032, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2841| 
        ; call occurs [#_scia_puts] ; [] |2841| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2841| 
	.dwpsn	file "../Source/prod.c",line 2843,column 6,is_stmt,isa 0
$C$DW$1033	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1033, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1033, DW_AT_name("_atoi")
	.dwattr $C$DW$1033, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2843| 
        ; call occurs [#_atoi] ; [] |2843| 
        CMPB      AL,#1                 ; [CPU_] |2843| 
        B         $C$L474,EQ            ; [CPU_] |2843| 
        ; branchcc occurs ; [] |2843| 
	.dwpsn	file "../Source/prod.c",line 2992,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2992| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2992| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2992| 
        ADDL      ACC,XAR6              ; [CPU_] |2992| 
        ADD       ACC,#1577 << 1        ; [CPU_] |2992| 
        MOVL      XAR4,ACC              ; [CPU_] |2992| 
	.dwpsn	file "../Source/prod.c",line 2993,column 7,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |2993| 
	.dwpsn	file "../Source/prod.c",line 2992,column 7,is_stmt,isa 0
        AND       *+XAR4[0],#0xff7f     ; [CPU_] |2992| 
	.dwpsn	file "../Source/prod.c",line 2993,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL155       ; [CPU_U] |2993| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2993| 
        MOV       *-SP[3],AR1           ; [CPU_] |2993| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2993| 
$C$DW$1034	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1034, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1034, DW_AT_name("_sprintf")
	.dwattr $C$DW$1034, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2993| 
        ; call occurs [#_sprintf] ; [] |2993| 
        B         $C$L499,UNC           ; [CPU_] |2993| 
        ; branch occurs ; [] |2993| 
$C$L474:    
	.dwpsn	file "../Source/prod.c",line 2846,column 7,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2846| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2846| 
        MOV       AL,*-SP[51]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 3           ; [CPU_] |2846| 
        ADDL      ACC,XAR6              ; [CPU_] |2846| 
        ADD       ACC,#197 << 4         ; [CPU_] |2846| 
        MOVL      XAR1,ACC              ; [CPU_] |2846| 
        MOVL      XAR0,#62              ; [CPU_] |2846| 
        OR        *+XAR1[2],#0x0080     ; [CPU_] |2846| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2846| 
        MOVL      *-SP[58],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2849,column 12,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2849| 
        MOV       *-SP[54],AL           ; [CPU_] |2849| 
$C$L475:    
	.dwpsn	file "../Source/prod.c",line 2850,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2850| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2850| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |2850| 
        MOV       *-SP[3],AL            ; [CPU_] |2850| 
        MOVL      XAR0,#44              ; [CPU_] |2850| 
        MOVL      ACC,*XAR4++           ; [CPU_] |2850| 
        MOVL      *-SP[58],XAR4         ; [CPU_] |2850| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2850| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2850| 
$C$DW$1035	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1035, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1035, DW_AT_name("_sprintf")
	.dwattr $C$DW$1035, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2850| 
        ; call occurs [#_sprintf] ; [] |2850| 
        MOVL      XAR0,#44              ; [CPU_] |2850| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2850| 
	.dwpsn	file "../Source/prod.c",line 2851,column 8,is_stmt,isa 0
$C$DW$1036	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1036, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1036, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1036, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2851| 
        ; call occurs [#_scia_puts] ; [] |2851| 
        MOV       AL,*-SP[54]           ; [CPU_] |2851| 
	.dwpsn	file "../Source/prod.c",line 2852,column 8,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |2852| 
        B         $C$L476,GEQ           ; [CPU_] |2852| 
        ; branchcc occurs ; [] |2852| 
	.dwpsn	file "../Source/prod.c",line 2853,column 9,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2853| 
$C$DW$1037	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1037, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1037, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1037, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2853| 
        ; call occurs [#_scia_puts] ; [] |2853| 
$C$L476:    
	.dwpsn	file "../Source/prod.c",line 2849,column 19,is_stmt,isa 0
        INC       *-SP[54]              ; [CPU_] |2849| 
        MOV       AL,*-SP[54]           ; [CPU_] 
        CMPB      AL,#5                 ; [CPU_] |2849| 
        B         $C$L475,LT            ; [CPU_] |2849| 
        ; branchcc occurs ; [] |2849| 
	.dwpsn	file "../Source/prod.c",line 2856,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2856| 
$C$DW$1038	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1038, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1038, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1038, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2856| 
        ; call occurs [#_scia_puts] ; [] |2856| 
	.dwpsn	file "../Source/prod.c",line 2857,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL156       ; [CPU_U] |2857| 
        MOVL      XAR0,#44              ; [CPU_] |2857| 
        MOV       AL,*-SP[41]           ; [CPU_] |2857| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2857| 
        MOV       *-SP[3],AL            ; [CPU_] |2857| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2857| 
$C$DW$1039	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1039, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1039, DW_AT_name("_sprintf")
	.dwattr $C$DW$1039, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2857| 
        ; call occurs [#_sprintf] ; [] |2857| 
        MOVL      XAR0,#44              ; [CPU_] |2857| 
	.dwpsn	file "../Source/prod.c",line 2860,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2860| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2860| 
	.dwpsn	file "../Source/prod.c",line 2857,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2857| 
	.dwpsn	file "../Source/prod.c",line 2860,column 7,is_stmt,isa 0
$C$DW$1040	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1040, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1040, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1040, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2860| 
        ; call occurs [#_scia_getparam] ; [] |2860| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2860| 
	.dwpsn	file "../Source/prod.c",line 2861,column 7,is_stmt,isa 0
$C$DW$1041	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1041, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1041, DW_AT_name("_atoi")
	.dwattr $C$DW$1041, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2861| 
        ; call occurs [#_atoi] ; [] |2861| 
        MOV       *-SP[53],AL           ; [CPU_] |2861| 
        CMPB      AL,#5                 ; [CPU_] |2861| 
        B         $C$L477,LO            ; [CPU_] |2861| 
        ; branchcc occurs ; [] |2861| 
	.dwpsn	file "../Source/prod.c",line 2864,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2864| 
$C$DW$1042	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1042, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1042, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1042, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2864| 
        ; call occurs [#_scia_puts] ; [] |2864| 
	.dwpsn	file "../Source/prod.c",line 2863,column 8,is_stmt,isa 0
        MOV       *-SP[53],#0           ; [CPU_] |2863| 
$C$L477:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2867,column 7,is_stmt,isa 0
$C$DW$1043	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1043, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1043, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1043, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2867| 
        ; call occurs [#_scia_puts] ; [] |2867| 
	.dwpsn	file "../Source/prod.c",line 2868,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2868| 
$C$DW$1044	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1044, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1044, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1044, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2868| 
        ; call occurs [#_scia_puts] ; [] |2868| 
        MOV       AL,*-SP[53]           ; [CPU_] |2868| 
	.dwpsn	file "../Source/prod.c",line 2869,column 7,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |2869| 
	.dwpsn	file "../Source/prod.c",line 2871,column 7,is_stmt,isa 0
        AND       AL,AL,#0xfffe         ; [CPU_] |2871| 
        B         $C$L479,EQ            ; [CPU_] |2871| 
        ; branchcc occurs ; [] |2871| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |2871| 
        B         $C$L479,EQ            ; [CPU_] |2871| 
        ; branchcc occurs ; [] |2871| 
	.dwpsn	file "../Source/prod.c",line 2874,column 14,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |2874| 
        B         $C$L478,EQ            ; [CPU_] |2874| 
        ; branchcc occurs ; [] |2874| 
        CMPB      AL,#4                 ; [CPU_] |2874| 
        B         $C$L480,NEQ           ; [CPU_] |2874| 
        ; branchcc occurs ; [] |2874| 
$C$L478:    
	.dwpsn	file "../Source/prod.c",line 2875,column 8,is_stmt,isa 0
        MOV       *-SP[54],#2           ; [CPU_] |2875| 
        B         $C$L480,UNC           ; [CPU_] |2875| 
        ; branch occurs ; [] |2875| 
$C$L479:    
	.dwpsn	file "../Source/prod.c",line 2873,column 8,is_stmt,isa 0
        MOV       *-SP[54],#1           ; [CPU_] |2873| 
$C$L480:    
        MOV       AL,*-SP[54]           ; [CPU_] 
        MOV       *-SP[42],AL           ; [CPU_] 
$C$L481:    
	.dwpsn	file "../Source/prod.c",line 2880,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2880| 
        MOV       AL,*-SP[54]           ; [CPU_] |2880| 
        MOVL      XAR0,#44              ; [CPU_] |2880| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2880| 
        MOV       *-SP[3],AL            ; [CPU_] |2880| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2880| 
$C$DW$1045	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1045, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1045, DW_AT_name("_sprintf")
	.dwattr $C$DW$1045, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2880| 
        ; call occurs [#_sprintf] ; [] |2880| 
        MOVL      XAR0,#44              ; [CPU_] |2880| 
	.dwpsn	file "../Source/prod.c",line 2881,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2881| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2881| 
	.dwpsn	file "../Source/prod.c",line 2880,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2880| 
	.dwpsn	file "../Source/prod.c",line 2881,column 8,is_stmt,isa 0
$C$DW$1046	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1046, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1046, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1046, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2881| 
        ; call occurs [#_scia_getparam] ; [] |2881| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2881| 
	.dwpsn	file "../Source/prod.c",line 2882,column 8,is_stmt,isa 0
$C$DW$1047	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1047, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1047, DW_AT_name("_atoi")
	.dwattr $C$DW$1047, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2882| 
        ; call occurs [#_atoi] ; [] |2882| 
        MOV       *-SP[52],AL           ; [CPU_] |2882| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2882| 
	.dwpsn	file "../Source/prod.c",line 2883,column 8,is_stmt,isa 0
$C$DW$1048	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1048, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1048, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1048, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2883| 
        ; call occurs [#_scia_puts] ; [] |2883| 
        MOV       AL,*-SP[52]           ; [CPU_] |2883| 
	.dwpsn	file "../Source/prod.c",line 2885,column 9,is_stmt,isa 0
        B         $C$L502,EQ            ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
        MOV       AL,*-SP[42]           ; [CPU_] 
        CMP       AL,*-SP[52]           ; [CPU_] |2885| 
        B         $C$L502,LO            ; [CPU_] |2885| 
        ; branchcc occurs ; [] |2885| 
	.dwpsn	file "../Source/prod.c",line 2889,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2889| 
$C$DW$1049	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1049, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1049, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1049, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2889| 
        ; call occurs [#_scia_puts] ; [] |2889| 
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
        DEC       *-SP[52]              ; [CPU_] |2891| 
	.dwpsn	file "../Source/prod.c",line 2889,column 7,is_stmt,isa 0
        MOV       AL,*-SP[52]           ; [CPU_] |2889| 
	.dwpsn	file "../Source/prod.c",line 2894,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL157       ; [CPU_U] |2894| 
	.dwpsn	file "../Source/prod.c",line 2891,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2891| 
	.dwpsn	file "../Source/prod.c",line 2894,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2894| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2894| 
$C$DW$1050	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1050, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1050, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1050, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2894| 
        ; call occurs [#_scia_getparam] ; [] |2894| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2894| 
	.dwpsn	file "../Source/prod.c",line 2897,column 7,is_stmt,isa 0
$C$DW$1051	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1051, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1051, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1051, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2897| 
        ; call occurs [#_scia_puts] ; [] |2897| 
	.dwpsn	file "../Source/prod.c",line 2898,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2898| 
$C$DW$1052	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1052, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1052, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1052, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2898| 
        ; call occurs [#_scia_puts] ; [] |2898| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2898| 
	.dwpsn	file "../Source/prod.c",line 2900,column 7,is_stmt,isa 0
$C$DW$1053	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1053, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1053, DW_AT_name("_atoi")
	.dwattr $C$DW$1053, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2900| 
        ; call occurs [#_atoi] ; [] |2900| 
        CMPB      AL,#1                 ; [CPU_] |2900| 
        B         $C$L482,EQ            ; [CPU_] |2900| 
        ; branchcc occurs ; [] |2900| 
	.dwpsn	file "../Source/prod.c",line 2904,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffbf     ; [CPU_] |2904| 
        B         $C$L483,UNC           ; [CPU_] |2904| 
        ; branch occurs ; [] |2904| 
$C$L482:    
	.dwpsn	file "../Source/prod.c",line 2902,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0040     ; [CPU_] |2902| 
$C$L483:    
	.dwpsn	file "../Source/prod.c",line 2907,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL158       ; [CPU_U] |2907| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2907| 
        MOV       AL,#1024              ; [CPU_] |2907| 
$C$DW$1054	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1054, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1054, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1054, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2907| 
        ; call occurs [#_scia_getparam] ; [] |2907| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2907| 
	.dwpsn	file "../Source/prod.c",line 2910,column 7,is_stmt,isa 0
$C$DW$1055	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1055, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1055, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1055, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2910| 
        ; call occurs [#_scia_puts] ; [] |2910| 
	.dwpsn	file "../Source/prod.c",line 2911,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2911| 
$C$DW$1056	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1056, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1056, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1056, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2911| 
        ; call occurs [#_scia_puts] ; [] |2911| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2911| 
	.dwpsn	file "../Source/prod.c",line 2913,column 7,is_stmt,isa 0
$C$DW$1057	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1057, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1057, DW_AT_name("_atoi")
	.dwattr $C$DW$1057, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2913| 
        ; call occurs [#_atoi] ; [] |2913| 
        CMPB      AL,#1                 ; [CPU_] |2913| 
        B         $C$L484,EQ            ; [CPU_] |2913| 
        ; branchcc occurs ; [] |2913| 
	.dwpsn	file "../Source/prod.c",line 2917,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xffdf     ; [CPU_] |2917| 
        B         $C$L485,UNC           ; [CPU_] |2917| 
        ; branch occurs ; [] |2917| 
$C$L484:    
	.dwpsn	file "../Source/prod.c",line 2915,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0020     ; [CPU_] |2915| 
$C$L485:    
	.dwpsn	file "../Source/prod.c",line 2920,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL159       ; [CPU_U] |2920| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2920| 
        MOV       AL,#1024              ; [CPU_] |2920| 
$C$DW$1058	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1058, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1058, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1058, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2920| 
        ; call occurs [#_scia_getparam] ; [] |2920| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2920| 
	.dwpsn	file "../Source/prod.c",line 2923,column 7,is_stmt,isa 0
$C$DW$1059	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1059, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1059, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1059, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2923| 
        ; call occurs [#_scia_puts] ; [] |2923| 
	.dwpsn	file "../Source/prod.c",line 2924,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2924| 
$C$DW$1060	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1060, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1060, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1060, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2924| 
        ; call occurs [#_scia_puts] ; [] |2924| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2924| 
	.dwpsn	file "../Source/prod.c",line 2926,column 7,is_stmt,isa 0
$C$DW$1061	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1061, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1061, DW_AT_name("_atoi")
	.dwattr $C$DW$1061, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2926| 
        ; call occurs [#_atoi] ; [] |2926| 
        CMPB      AL,#1                 ; [CPU_] |2926| 
        B         $C$L486,EQ            ; [CPU_] |2926| 
        ; branchcc occurs ; [] |2926| 
	.dwpsn	file "../Source/prod.c",line 2930,column 8,is_stmt,isa 0
        AND       *+XAR1[2],#0xfffd     ; [CPU_] |2930| 
        B         $C$L487,UNC           ; [CPU_] |2930| 
        ; branch occurs ; [] |2930| 
$C$L486:    
	.dwpsn	file "../Source/prod.c",line 2928,column 8,is_stmt,isa 0
        OR        *+XAR1[2],#0x0002     ; [CPU_] |2928| 
$C$L487:    
	.dwpsn	file "../Source/prod.c",line 2934,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |2934| 
        CMPB      AL,#2                 ; [CPU_] |2934| 
        B         $C$L489,LOS           ; [CPU_] |2934| 
        ; branchcc occurs ; [] |2934| 
        CMPB      AL,#3                 ; [CPU_] |2934| 
        B         $C$L488,EQ            ; [CPU_] |2934| 
        ; branchcc occurs ; [] |2934| 
        CMPB      AL,#4                 ; [CPU_] |2934| 
        B         $C$L491,NEQ           ; [CPU_] |2934| 
        ; branchcc occurs ; [] |2934| 
        MOVW      DP,#_VEL_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2946,column 8,is_stmt,isa 0
        MOVL      ACC,@_VEL_U           ; [CPU_] |2946| 
	.dwpsn	file "../Source/prod.c",line 2947,column 8,is_stmt,isa 0
        B         $C$L490,UNC           ; [CPU_] |2947| 
        ; branch occurs ; [] |2947| 
$C$L488:    
        MOVW      DP,#_POS_U            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 2943,column 8,is_stmt,isa 0
        MOVL      ACC,@_POS_U           ; [CPU_] |2943| 
	.dwpsn	file "../Source/prod.c",line 2944,column 8,is_stmt,isa 0
        B         $C$L490,UNC           ; [CPU_] |2944| 
        ; branch occurs ; [] |2944| 
$C$L489:    
	.dwpsn	file "../Source/prod.c",line 2938,column 8,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2938| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2938| 
        MOV       T,#10                 ; [CPU_] |2938| 
        MPYXU     ACC,T,*+XAR1[1]       ; [CPU_] |2938| 
        ADDL      ACC,XAR6              ; [CPU_] |2938| 
        MOVL      XAR4,ACC              ; [CPU_] |2938| 
        MOVB      XAR0,#42              ; [CPU_] |2938| 
        MOV       T,*+XAR4[AR0]         ; [CPU_] |2938| 
        MPYB      ACC,T,#152            ; [CPU_] |2938| 
        ADDL      ACC,XAR6              ; [CPU_] |2938| 
        MOVL      XAR4,ACC              ; [CPU_] |2938| 
        MOVB      XAR0,#95              ; [CPU_] |2938| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |2938| 
        MOVL      XAR0,#70              ; [CPU_] |2938| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2938| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |2938| 
        MOV       ACC,AL << 1           ; [CPU_] |2938| 
        ADDL      ACC,XAR6              ; [CPU_] |2938| 
        MOVL      XAR4,ACC              ; [CPU_] |2938| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2938| 
$C$L490:    
        MOVL      XAR0,#48              ; [CPU_] |2938| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |2938| 
$C$L491:    
	.dwpsn	file "../Source/prod.c",line 2951,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL160       ; [CPU_U] |2951| 
        MOVL      XAR0,#48              ; [CPU_] |2951| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2951| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2951| 
        MOVL      XAR0,#44              ; [CPU_] |2951| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2951| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2951| 
$C$DW$1062	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1062, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1062, DW_AT_name("_sprintf")
	.dwattr $C$DW$1062, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2951| 
        ; call occurs [#_sprintf] ; [] |2951| 
        MOVL      XAR0,#44              ; [CPU_] |2951| 
	.dwpsn	file "../Source/prod.c",line 2952,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2952| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2952| 
	.dwpsn	file "../Source/prod.c",line 2951,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2951| 
	.dwpsn	file "../Source/prod.c",line 2952,column 7,is_stmt,isa 0
$C$DW$1063	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1063, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1063, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1063, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2952| 
        ; call occurs [#_scia_getparam] ; [] |2952| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2952| 
	.dwpsn	file "../Source/prod.c",line 2953,column 7,is_stmt,isa 0
$C$DW$1064	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1064, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1064, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1064, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2953| 
        ; call occurs [#_scia_puts] ; [] |2953| 
	.dwpsn	file "../Source/prod.c",line 2954,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2954| 
$C$DW$1065	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1065, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1065, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1065, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2954| 
        ; call occurs [#_scia_puts] ; [] |2954| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2954,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2954| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1066	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1066, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1066, DW_AT_name("_strtod")
	.dwattr $C$DW$1066, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2960,column 7,is_stmt,isa 0
        MOVL      XAR0,#48              ; [CPU_] |2960| 
        MOVL      XAR4,#$C$FSL161       ; [CPU_U] |2960| 
	.dwpsn	file "../Source/prod.c",line 2956,column 7,is_stmt,isa 0
        MOVL      *+XAR1[4],ACC         ; [CPU_] |2956| 
	.dwpsn	file "../Source/prod.c",line 2960,column 7,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2960| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2960| 
        MOVL      XAR0,#44              ; [CPU_] |2960| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2960| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2960| 
$C$DW$1067	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1067, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1067, DW_AT_name("_sprintf")
	.dwattr $C$DW$1067, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2960| 
        ; call occurs [#_sprintf] ; [] |2960| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2961,column 7,is_stmt,isa 0
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2961| 
        MOV       AL,#1024              ; [CPU_] |2961| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1068	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1068, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1068, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1068, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2961| 
        ; call occurs [#_scia_getparam] ; [] |2961| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2961| 
	.dwpsn	file "../Source/prod.c",line 2962,column 7,is_stmt,isa 0
$C$DW$1069	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1069, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1069, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1069, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2962| 
        ; call occurs [#_scia_puts] ; [] |2962| 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2963| 
$C$DW$1070	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1070, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1070, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1070, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2963| 
        ; call occurs [#_scia_puts] ; [] |2963| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 2963,column 7,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2963| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1071	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1071, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1071, DW_AT_name("_strtod")
	.dwattr $C$DW$1071, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 2971,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL162       ; [CPU_U] |2971| 
        MOVL      XAR0,#62              ; [CPU_] |2971| 
	.dwpsn	file "../Source/prod.c",line 2965,column 7,is_stmt,isa 0
        MOVL      *+XAR1[6],ACC         ; [CPU_] |2965| 
	.dwpsn	file "../Source/prod.c",line 2971,column 7,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |2971| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2971| 
        MOV       *-SP[3],AL            ; [CPU_] |2971| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2971| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[53]           ; [CPU_] |2971| 
        MOV       ACC,AL << 1           ; [CPU_] |2971| 
        ADDL      ACC,XAR6              ; [CPU_] |2971| 
        MOVL      XAR4,ACC              ; [CPU_] |2971| 
        MOVL      XAR0,#44              ; [CPU_] |2971| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2971| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2971| 
        MOVB      AL,#1                 ; [CPU_] |2971| 
        ADD       AL,*-SP[52]           ; [CPU_] |2971| 
        MOV       *-SP[7],AL            ; [CPU_] |2971| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2971| 
$C$DW$1072	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1072, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1072, DW_AT_name("_sprintf")
	.dwattr $C$DW$1072, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2971| 
        ; call occurs [#_sprintf] ; [] |2971| 
        MOVL      XAR0,#44              ; [CPU_] |2971| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2971| 
	.dwpsn	file "../Source/prod.c",line 2974,column 7,is_stmt,isa 0
$C$DW$1073	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1073, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1073, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1073, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2974| 
        ; call occurs [#_scia_puts] ; [] |2974| 
	.dwpsn	file "../Source/prod.c",line 2976,column 7,is_stmt,isa 0
        TBIT      *+XAR1[2],#6          ; [CPU_] |2976| 
        B         $C$L492,TC            ; [CPU_] |2976| 
        ; branchcc occurs ; [] |2976| 
        MOVL      XAR4,#$C$FSL163       ; [CPU_U] |2976| 
        B         $C$L493,UNC           ; [CPU_] |2976| 
        ; branch occurs ; [] |2976| 
$C$L492:    
        MOVL      XAR4,#$C$FSL164       ; [CPU_U] |2976| 
$C$L493:    
        TBIT      *+XAR1[2],#5          ; [CPU_] |2976| 
        B         $C$L494,TC            ; [CPU_] |2976| 
        ; branchcc occurs ; [] |2976| 
        MOVL      XAR5,#$C$FSL41        ; [CPU_U] |2976| 
        B         $C$L495,UNC           ; [CPU_] |2976| 
        ; branch occurs ; [] |2976| 
$C$L494:    
        MOVL      XAR5,#$C$FSL165       ; [CPU_U] |2976| 
$C$L495:    
        TBIT      *+XAR1[2],#1          ; [CPU_] |2976| 
        B         $C$L496,TC            ; [CPU_] |2976| 
        ; branchcc occurs ; [] |2976| 
        MOVL      XAR6,#$C$FSL43        ; [CPU_U] |2976| 
        B         $C$L497,UNC           ; [CPU_] |2976| 
        ; branch occurs ; [] |2976| 
$C$L496:    
        MOVL      XAR6,#$C$FSL44        ; [CPU_U] |2976| 
$C$L497:    
        MOVL      XAR7,#$C$FSL166       ; [CPU_U] |2976| 
        MOVL      XAR0,#44              ; [CPU_] |2976| 
        MOVL      *-SP[2],XAR7          ; [CPU_] |2976| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |2976| 
        MOVL      *-SP[6],XAR5          ; [CPU_] |2976| 
        MOVL      *-SP[8],XAR6          ; [CPU_] |2976| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2976| 
$C$DW$1074	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1074, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1074, DW_AT_name("_sprintf")
	.dwattr $C$DW$1074, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2976| 
        ; call occurs [#_sprintf] ; [] |2976| 
        MOVL      XAR0,#44              ; [CPU_] |2976| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2976| 
	.dwpsn	file "../Source/prod.c",line 2983,column 7,is_stmt,isa 0
$C$DW$1075	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1075, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1075, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1075, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2983| 
        ; call occurs [#_scia_puts] ; [] |2983| 
	.dwpsn	file "../Source/prod.c",line 2984,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL167       ; [CPU_U] |2984| 
        MOVL      XAR0,#48              ; [CPU_] |2984| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2984| 
        MOVL      ACC,*+XAR1[4]         ; [CPU_] |2984| 
        MOVL      *-SP[4],ACC           ; [CPU_] |2984| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2984| 
        MOVL      XAR0,#48              ; [CPU_] |2984| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2984| 
        MOVL      ACC,*+XAR1[6]         ; [CPU_] |2984| 
        MOVL      *-SP[8],ACC           ; [CPU_] |2984| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |2984| 
        MOVL      *-SP[10],ACC          ; [CPU_] |2984| 
$C$L498:    
        MOVL      XAR0,#44              ; [CPU_] |2984| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2984| 
        MOVL      XAR4,XAR1             ; [CPU_] |2984| 
$C$DW$1076	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1076, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1076, DW_AT_name("_sprintf")
	.dwattr $C$DW$1076, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2984| 
        ; call occurs [#_sprintf] ; [] |2984| 
        MOVL      XAR4,XAR1             ; [CPU_] |2984| 
	.dwpsn	file "../Source/prod.c",line 2988,column 7,is_stmt,isa 0
$C$DW$1077	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1077, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1077, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1077, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2988| 
        ; call occurs [#_scia_puts] ; [] |2988| 
$C$L499:    
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2999,column 6,is_stmt,isa 0
$C$DW$1078	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1078, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1078, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1078, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2999| 
        ; call occurs [#_ad7738_setcal] ; [] |2999| 
$C$L500:    
 clrc INTM
$C$L501:    
	.dwpsn	file "../Source/prod.c",line 2996,column 6,is_stmt,isa 0
        MOV       *-SP[42],#1           ; [CPU_] |2996| 
	.dwpsn	file "../Source/prod.c",line 3001,column 6,is_stmt,isa 0
        B         $C$L647,UNC           ; [CPU_] |3001| 
        ; branch occurs ; [] |3001| 
$C$L502:    
	.dwpsn	file "../Source/prod.c",line 2887,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2887| 
$C$DW$1079	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1079, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1079, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1079, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2887| 
        ; call occurs [#_scia_puts] ; [] |2887| 
	.dwpsn	file "../Source/prod.c",line 2879,column 7,is_stmt,isa 0
        B         $C$L481,UNC           ; [CPU_] |2879| 
        ; branch occurs ; [] |2879| 
$C$L503:    
	.dwpsn	file "../Source/prod.c",line 2833,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2833| 
$C$DW$1080	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1080, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1080, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1080, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2833| 
        ; call occurs [#_scia_puts] ; [] |2833| 
	.dwpsn	file "../Source/prod.c",line 2825,column 6,is_stmt,isa 0
        B         $C$L473,UNC           ; [CPU_] |2825| 
        ; branch occurs ; [] |2825| 
$C$L504:    
	.dwpsn	file "../Source/prod.c",line 965,column 5,is_stmt,isa 0
$C$DW$1081	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1081, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1081, DW_AT_name("_getMotorJog")
	.dwattr $C$DW$1081, DW_AT_TI_call

        LCR       #_getMotorJog         ; [CPU_] |965| 
        ; call occurs [#_getMotorJog] ; [] |965| 
        CMPB      AL,#0                 ; [CPU_] |965| 
        B         $C$L507,NEQ           ; [CPU_] |965| 
        ; branchcc occurs ; [] |965| 
	.dwpsn	file "../Source/prod.c",line 966,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |966| 
$C$DW$1082	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1082, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1082, DW_AT_name("_setMotorJog")
	.dwattr $C$DW$1082, DW_AT_TI_call

        LCR       #_setMotorJog         ; [CPU_] |966| 
        ; call occurs [#_setMotorJog] ; [] |966| 
	.dwpsn	file "../Source/prod.c",line 967,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL168       ; [CPU_U] |967| 
$C$L505:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |967| 
$C$L506:    
        MOVL      XAR0,#44              ; [CPU_] |967| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |967| 
	.dwpsn	file "../Source/prod.c",line 970,column 5,is_stmt,isa 0
        B         $C$L644,UNC           ; [CPU_] |970| 
        ; branch occurs ; [] |970| 
$C$L507:    
	.dwpsn	file "../Source/prod.c",line 971,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |971| 
$C$DW$1083	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1083, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1083, DW_AT_name("_setMotorJog")
	.dwattr $C$DW$1083, DW_AT_TI_call

        LCR       #_setMotorJog         ; [CPU_] |971| 
        ; call occurs [#_setMotorJog] ; [] |971| 
	.dwpsn	file "../Source/prod.c",line 972,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL169       ; [CPU_U] |972| 
	.dwpsn	file "../Source/prod.c",line 973,column 6,is_stmt,isa 0
        B         $C$L505,UNC           ; [CPU_] |973| 
        ; branch occurs ; [] |973| 
$C$L508:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3305,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |3305| 
        B         $C$L635,LO            ; [CPU_] |3305| 
        ; branchcc occurs ; [] |3305| 
	.dwpsn	file "../Source/prod.c",line 3308,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3308| 
        CMPB      AL,#68                ; [CPU_] |3308| 
        B         $C$L512,EQ            ; [CPU_] |3308| 
        ; branchcc occurs ; [] |3308| 
        CMPB      AL,#82                ; [CPU_] |3308| 
        B         $C$L511,EQ            ; [CPU_] |3308| 
        ; branchcc occurs ; [] |3308| 
        CMPB      AL,#87                ; [CPU_] |3308| 
        B         $C$L635,NEQ           ; [CPU_] |3308| 
        ; branchcc occurs ; [] |3308| 
        MOV       AL,*-SP[42]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3312,column 6,is_stmt,isa 0
        B         $C$L509,NEQ           ; [CPU_] |3312| 
        ; branchcc occurs ; [] |3312| 
	.dwpsn	file "../Source/prod.c",line 3336,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL170       ; [CPU_U] |3336| 
	.dwpsn	file "../Source/prod.c",line 3338,column 6,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |3338| 
        ; branch occurs ; [] |3338| 
$C$L509:    
	.dwpsn	file "../Source/prod.c",line 3314,column 7,is_stmt,isa 0
$C$DW$1084	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1084, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1084, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1084, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3314| 
        ; call occurs [#_lcd_clear] ; [] |3314| 
	.dwpsn	file "../Source/prod.c",line 3315,column 7,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3315| 
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3315| 
$C$DW$1085	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1085, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1085, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1085, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3315| 
        ; call occurs [#_lcd_puts] ; [] |3315| 
	.dwpsn	file "../Source/prod.c",line 3316,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL83        ; [CPU_U] |3316| 
$C$DW$1086	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1086, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1086, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1086, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3316| 
        ; call occurs [#_scia_puts] ; [] |3316| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L510:    
	.dwpsn	file "../Source/prod.c",line 3319,column 8,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3319| 
$C$DW$1087	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1087, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1087, DW_AT_name("_delay_us")
	.dwattr $C$DW$1087, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3319| 
        ; call occurs [#_delay_us] ; [] |3319| 
	.dwpsn	file "../Source/prod.c",line 3318,column 19,is_stmt,isa 0
        BANZ      $C$L510,AR3--         ; [CPU_] |3318| 
        ; branchcc occurs ; [] |3318| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3323,column 7,is_stmt,isa 0
$C$DW$1088	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1088, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1088, DW_AT_name("_conf_write")
	.dwattr $C$DW$1088, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3323| 
        ; call occurs [#_conf_write] ; [] |3323| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 3326,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3326| 
        B         $C$L515,NEQ           ; [CPU_] |3326| 
        ; branchcc occurs ; [] |3326| 
	.dwpsn	file "../Source/prod.c",line 3327,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL171       ; [CPU_U] |3327| 
	.dwpsn	file "../Source/prod.c",line 3329,column 7,is_stmt,isa 0
        B         $C$L514,UNC           ; [CPU_] |3329| 
        ; branch occurs ; [] |3329| 
$C$L511:    
	.dwpsn	file "../Source/prod.c",line 3343,column 6,is_stmt,isa 0
$C$DW$1089	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1089, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1089, DW_AT_name("_conf_read")
	.dwattr $C$DW$1089, DW_AT_TI_call

        LCR       #_conf_read           ; [CPU_] |3343| 
        ; call occurs [#_conf_read] ; [] |3343| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3346,column 6,is_stmt,isa 0
$C$DW$1090	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1090, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1090, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1090, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3346| 
        ; call occurs [#_ad7738_setcal] ; [] |3346| 
	.dwpsn	file "../Source/prod.c",line 3347,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3347| 
$C$DW$1091	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1091, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1091, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1091, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3347| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3347| 
	.dwpsn	file "../Source/prod.c",line 3348,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3348| 
$C$DW$1092	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1092, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1092, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1092, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3348| 
        ; call occurs [#_ad7738_resetvall] ; [] |3348| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3351,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL172       ; [CPU_U] |3351| 
$C$DW$1093	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1093, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1093, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1093, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3351| 
        ; call occurs [#_scia_puts] ; [] |3351| 
	.dwpsn	file "../Source/prod.c",line 3354,column 6,is_stmt,isa 0
$C$DW$1094	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1094, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1094, DW_AT_name("_update_units")
	.dwattr $C$DW$1094, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3354| 
        ; call occurs [#_update_units] ; [] |3354| 
	.dwpsn	file "../Source/prod.c",line 3352,column 6,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |3352| 
	.dwpsn	file "../Source/prod.c",line 3356,column 6,is_stmt,isa 0
        B         $C$L648,UNC           ; [CPU_] |3356| 
        ; branch occurs ; [] |3356| 
$C$L512:    
	.dwpsn	file "../Source/prod.c",line 3360,column 6,is_stmt,isa 0
$C$DW$1095	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1095, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1095, DW_AT_name("_conf_default")
	.dwattr $C$DW$1095, DW_AT_TI_call

        LCR       #_conf_default        ; [CPU_] |3360| 
        ; call occurs [#_conf_default] ; [] |3360| 
	.dwpsn	file "../Source/prod.c",line 3363,column 6,is_stmt,isa 0
$C$DW$1096	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1096, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1096, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1096, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3363| 
        ; call occurs [#_lcd_clear] ; [] |3363| 
	.dwpsn	file "../Source/prod.c",line 3364,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3364| 
        MOVL      XAR4,#$C$FSL86        ; [CPU_U] |3364| 
$C$DW$1097	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1097, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1097, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1097, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |3364| 
        ; call occurs [#_lcd_puts] ; [] |3364| 
	.dwpsn	file "../Source/prod.c",line 3365,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL173       ; [CPU_U] |3365| 
$C$DW$1098	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1098, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1098, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1098, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3365| 
        ; call occurs [#_scia_puts] ; [] |3365| 
        MOVB      XAR3,#49              ; [CPU_] 
$C$L513:    
	.dwpsn	file "../Source/prod.c",line 3368,column 7,is_stmt,isa 0
        MOV       AL,#1000              ; [CPU_] |3368| 
$C$DW$1099	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1099, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1099, DW_AT_name("_delay_us")
	.dwattr $C$DW$1099, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3368| 
        ; call occurs [#_delay_us] ; [] |3368| 
	.dwpsn	file "../Source/prod.c",line 3367,column 18,is_stmt,isa 0
        BANZ      $C$L513,AR3--         ; [CPU_] |3367| 
        ; branchcc occurs ; [] |3367| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3372,column 6,is_stmt,isa 0
$C$DW$1100	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1100, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1100, DW_AT_name("_conf_write")
	.dwattr $C$DW$1100, DW_AT_TI_call

        LCR       #_conf_write          ; [CPU_] |3372| 
        ; call occurs [#_conf_write] ; [] |3372| 
        MOVZ      AR1,AL                ; [CPU_] |3372| 
	.dwpsn	file "../Source/prod.c",line 3373,column 6,is_stmt,isa 0
$C$DW$1101	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1101, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1101, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1101, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |3373| 
        ; call occurs [#_ad7738_setcal] ; [] |3373| 
	.dwpsn	file "../Source/prod.c",line 3374,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3374| 
$C$DW$1102	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1102, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1102, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1102, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |3374| 
        ; call occurs [#_ad7738_resetpeak] ; [] |3374| 
	.dwpsn	file "../Source/prod.c",line 3375,column 6,is_stmt,isa 0
        MOVB      AL,#255               ; [CPU_] |3375| 
$C$DW$1103	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1103, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1103, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1103, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |3375| 
        ; call occurs [#_ad7738_resetvall] ; [] |3375| 
 clrc INTM
        MOV       AL,AR1                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3378,column 6,is_stmt,isa 0
        B         $C$L515,NEQ           ; [CPU_] |3378| 
        ; branchcc occurs ; [] |3378| 
	.dwpsn	file "../Source/prod.c",line 3379,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL174       ; [CPU_U] |3379| 
$C$L514:    
        SPM       #0                    ; [CPU_] 
$C$DW$1104	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1104, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1104, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1104, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3379| 
        ; call occurs [#_scia_puts] ; [] |3379| 
	.dwpsn	file "../Source/prod.c",line 3381,column 7,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |3381| 
	.dwpsn	file "../Source/prod.c",line 3382,column 6,is_stmt,isa 0
        B         $C$L516,UNC           ; [CPU_] |3382| 
        ; branch occurs ; [] |3382| 
$C$L515:    
	.dwpsn	file "../Source/prod.c",line 3383,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL175       ; [CPU_U] |3383| 
        SPM       #0                    ; [CPU_] 
$C$DW$1105	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1105, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1105, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1105, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3383| 
        ; call occurs [#_scia_puts] ; [] |3383| 
$C$L516:    
	.dwpsn	file "../Source/prod.c",line 3385,column 6,is_stmt,isa 0
$C$DW$1106	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1106, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1106, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1106, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |3385| 
        ; call occurs [#_lcd_clear] ; [] |3385| 
	.dwpsn	file "../Source/prod.c",line 3386,column 6,is_stmt,isa 0
$C$DW$1107	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1107, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1107, DW_AT_name("_update_units")
	.dwattr $C$DW$1107, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |3386| 
        ; call occurs [#_update_units] ; [] |3386| 
	.dwpsn	file "../Source/prod.c",line 3387,column 6,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |3387| 
        ; branch occurs ; [] |3387| 
$C$L517:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2412,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2412| 
        B         $C$L635,LO            ; [CPU_] |2412| 
        ; branchcc occurs ; [] |2412| 
	.dwpsn	file "../Source/prod.c",line 2415,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2415| 
        CMPB      AL,#70                ; [CPU_] |2415| 
        B         $C$L522,EQ            ; [CPU_] |2415| 
        ; branchcc occurs ; [] |2415| 
        CMPB      AL,#80                ; [CPU_] |2415| 
        B         $C$L646,NEQ           ; [CPU_] |2415| 
        ; branchcc occurs ; [] |2415| 
$C$L518:    
	.dwpsn	file "../Source/prod.c",line 2452,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL176       ; [CPU_U] |2452| 
        MOVL      XAR0,#44              ; [CPU_] |2452| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2452| 
        MOVB      *-SP[3],#2,UNC        ; [CPU_] |2452| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2452| 
        MOVL      XAR4,XAR1             ; [CPU_] |2452| 
$C$DW$1108	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1108, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1108, DW_AT_name("_sprintf")
	.dwattr $C$DW$1108, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2452| 
        ; call occurs [#_sprintf] ; [] |2452| 
        MOVL      XAR4,XAR1             ; [CPU_] |2452| 
	.dwpsn	file "../Source/prod.c",line 2453,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2453| 
        MOV       AL,#1024              ; [CPU_] |2453| 
        MOVL      XAR5,XAR1             ; [CPU_] |2453| 
$C$DW$1109	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1109, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1109, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1109, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2453| 
        ; call occurs [#_scia_getparam] ; [] |2453| 
	.dwpsn	file "../Source/prod.c",line 2454,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2454| 
$C$DW$1110	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1110, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1110, DW_AT_name("_atoi")
	.dwattr $C$DW$1110, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2454| 
        ; call occurs [#_atoi] ; [] |2454| 
        MOV       *-SP[51],AL           ; [CPU_] |2454| 
	.dwpsn	file "../Source/prod.c",line 2455,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2455| 
$C$DW$1111	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1111, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1111, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1111, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2455| 
        ; call occurs [#_scia_puts] ; [] |2455| 
        MOV       AL,*-SP[51]           ; [CPU_] |2455| 
	.dwpsn	file "../Source/prod.c",line 2457,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2457| 
        CMPB      AL,#2                 ; [CPU_] |2457| 
        B         $C$L521,HIS           ; [CPU_] |2457| 
        ; branchcc occurs ; [] |2457| 
	.dwpsn	file "../Source/prod.c",line 2461,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2461| 
$C$DW$1112	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1112, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1112, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1112, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2461| 
        ; call occurs [#_scia_puts] ; [] |2461| 
        MOVZ      AR1,*-SP[51]          ; [CPU_] |2461| 
	.dwpsn	file "../Source/prod.c",line 2464,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL177       ; [CPU_U] |2464| 
        MOVL      XAR0,#44              ; [CPU_] |2464| 
        DEC       *-SP[51]              ; [CPU_] |2464| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2464| 
        MOV       *-SP[3],AR1           ; [CPU_] |2464| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2464| 
$C$DW$1113	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1113, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1113, DW_AT_name("_sprintf")
	.dwattr $C$DW$1113, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2464| 
        ; call occurs [#_sprintf] ; [] |2464| 
        MOVL      XAR0,#44              ; [CPU_] |2464| 
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2465| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2464,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2464| 
	.dwpsn	file "../Source/prod.c",line 2465,column 6,is_stmt,isa 0
$C$DW$1114	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1114, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1114, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1114, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2465| 
        ; call occurs [#_scia_getparam] ; [] |2465| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2465| 
	.dwpsn	file "../Source/prod.c",line 2466,column 6,is_stmt,isa 0
$C$DW$1115	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1115, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1115, DW_AT_name("_atol")
	.dwattr $C$DW$1115, DW_AT_TI_call

        LCR       #_atol                ; [CPU_] |2466| 
        ; call occurs [#_atol] ; [] |2466| 
        MOVL      *-SP[14],ACC          ; [CPU_] |2466| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2466| 
	.dwpsn	file "../Source/prod.c",line 2467,column 6,is_stmt,isa 0
$C$DW$1116	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1116, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1116, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1116, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2467| 
        ; call occurs [#_scia_puts] ; [] |2467| 
	.dwpsn	file "../Source/prod.c",line 2468,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2468| 
$C$DW$1117	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1117, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1117, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1117, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2468| 
        ; call occurs [#_scia_puts] ; [] |2468| 
	.dwpsn	file "../Source/prod.c",line 2469,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[14]          ; [CPU_] |2469| 
        B         $C$L519,NEQ           ; [CPU_] |2469| 
        ; branchcc occurs ; [] |2469| 
	.dwpsn	file "../Source/prod.c",line 2470,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL178       ; [CPU_U] |2470| 
	.dwpsn	file "../Source/prod.c",line 2471,column 7,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |2471| 
        ; branch occurs ; [] |2471| 
$C$L519:    
	.dwpsn	file "../Source/prod.c",line 2473,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL179       ; [CPU_U] |2473| 
        MOVL      XAR0,#44              ; [CPU_] |2473| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2473| 
        MOV       *-SP[3],AR1           ; [CPU_] |2473| 
        MOVL      ACC,*-SP[14]          ; [CPU_] |2473| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2473| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2473| 
        MOVL      XAR4,XAR1             ; [CPU_] |2473| 
$C$DW$1118	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1118, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1118, DW_AT_name("_sprintf")
	.dwattr $C$DW$1118, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2473| 
        ; call occurs [#_sprintf] ; [] |2473| 
        MOVL      XAR4,XAR1             ; [CPU_] |2473| 
	.dwpsn	file "../Source/prod.c",line 2475,column 6,is_stmt,isa 0
$C$DW$1119	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1119, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1119, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1119, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2475| 
        ; call occurs [#_scia_puts] ; [] |2475| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2480,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2480| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2480| 
        CLRC      SXM                   ; [CPU_] 
        MOV       AL,*-SP[51]           ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] |2480| 
        ADDL      ACC,XAR6              ; [CPU_] |2480| 
        MOVL      XAR6,*-SP[14]         ; [CPU_] |2480| 
        ADD       ACC,#1593 << 1        ; [CPU_] |2480| 
        MOVL      XAR4,ACC              ; [CPU_] |2480| 
        MOVL      *+XAR4[0],XAR6        ; [CPU_] |2480| 
$C$L520:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2481,column 6,is_stmt,isa 0
$C$DW$1120	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1120, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1120, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1120, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |2481| 
        ; call occurs [#_ad7738_setcal] ; [] |2481| 
	.dwpsn	file "../Source/prod.c",line 2482,column 6,is_stmt,isa 0
$C$DW$1121	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1121, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1121, DW_AT_name("_velf_rst")
	.dwattr $C$DW$1121, DW_AT_TI_call

        LCR       #_velf_rst            ; [CPU_] |2482| 
        ; call occurs [#_velf_rst] ; [] |2482| 
	.dwpsn	file "../Source/prod.c",line 2484,column 6,is_stmt,isa 0
        B         $C$L500,UNC           ; [CPU_] |2484| 
        ; branch occurs ; [] |2484| 
$C$L521:    
	.dwpsn	file "../Source/prod.c",line 2459,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2459| 
$C$DW$1122	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1122, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1122, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1122, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2459| 
        ; call occurs [#_scia_puts] ; [] |2459| 
	.dwpsn	file "../Source/prod.c",line 2451,column 6,is_stmt,isa 0
        B         $C$L518,UNC           ; [CPU_] |2451| 
        ; branch occurs ; [] |2451| 
$C$L522:    
	.dwpsn	file "../Source/prod.c",line 2422,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL180       ; [CPU_U] |2422| 
        MOVL      XAR0,#44              ; [CPU_] |2422| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2422| 
        MOV       *-SP[3],#4096         ; [CPU_] |2422| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2422| 
        MOVL      XAR4,XAR1             ; [CPU_] |2422| 
$C$DW$1123	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1123, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1123, DW_AT_name("_sprintf")
	.dwattr $C$DW$1123, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2422| 
        ; call occurs [#_sprintf] ; [] |2422| 
        MOVL      XAR4,XAR1             ; [CPU_] |2422| 
	.dwpsn	file "../Source/prod.c",line 2424,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2424| 
        MOV       AL,#1024              ; [CPU_] |2424| 
        MOVL      XAR5,XAR1             ; [CPU_] |2424| 
$C$DW$1124	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1124, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1124, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1124, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2424| 
        ; call occurs [#_scia_getparam] ; [] |2424| 
	.dwpsn	file "../Source/prod.c",line 2425,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2425| 
$C$DW$1125	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1125, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1125, DW_AT_name("_atoi")
	.dwattr $C$DW$1125, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2425| 
        ; call occurs [#_atoi] ; [] |2425| 
        MOV       *-SP[41],AL           ; [CPU_] |2425| 
	.dwpsn	file "../Source/prod.c",line 2426,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2426| 
$C$DW$1126	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1126, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1126, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1126, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2426| 
        ; call occurs [#_scia_puts] ; [] |2426| 
        MOV       AL,*-SP[41]           ; [CPU_] |2426| 
	.dwpsn	file "../Source/prod.c",line 2428,column 8,is_stmt,isa 0
        B         $C$L523,LEQ           ; [CPU_] |2428| 
        ; branchcc occurs ; [] |2428| 
        CMP       AL,#4096              ; [CPU_] |2428| 
        B         $C$L523,GT            ; [CPU_] |2428| 
        ; branchcc occurs ; [] |2428| 
	.dwpsn	file "../Source/prod.c",line 2432,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2432| 
$C$DW$1127	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1127, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1127, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1127, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2432| 
        ; call occurs [#_scia_puts] ; [] |2432| 
	.dwpsn	file "../Source/prod.c",line 2434,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL181       ; [CPU_U] |2434| 
        MOVL      XAR0,#44              ; [CPU_] |2434| 
        MOV       AL,*-SP[41]           ; [CPU_] |2434| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2434| 
        MOV       *-SP[3],AL            ; [CPU_] |2434| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2434| 
        MOVL      XAR4,XAR1             ; [CPU_] |2434| 
$C$DW$1128	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1128, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1128, DW_AT_name("_sprintf")
	.dwattr $C$DW$1128, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2434| 
        ; call occurs [#_sprintf] ; [] |2434| 
        MOVL      XAR4,XAR1             ; [CPU_] |2434| 
	.dwpsn	file "../Source/prod.c",line 2436,column 6,is_stmt,isa 0
$C$DW$1129	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1129, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1129, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1129, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2436| 
        ; call occurs [#_scia_puts] ; [] |2436| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 2441,column 6,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |2441| 
        MOVL      ACC,XAR4              ; [CPU_] |2441| 
        ADD       ACC,#199 << 4         ; [CPU_] |2441| 
        MOVL      XAR4,ACC              ; [CPU_] |2441| 
        MOV       AL,*-SP[41]           ; [CPU_] |2441| 
        MOV       *+XAR4[0],AL          ; [CPU_] |2441| 
	.dwpsn	file "../Source/prod.c",line 2445,column 6,is_stmt,isa 0
        B         $C$L520,UNC           ; [CPU_] |2445| 
        ; branch occurs ; [] |2445| 
$C$L523:    
	.dwpsn	file "../Source/prod.c",line 2430,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2430| 
$C$DW$1130	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1130, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1130, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1130, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2430| 
        ; call occurs [#_scia_puts] ; [] |2430| 
	.dwpsn	file "../Source/prod.c",line 2421,column 6,is_stmt,isa 0
        B         $C$L522,UNC           ; [CPU_] |2421| 
        ; branch occurs ; [] |2421| 
$C$L524:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2494,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |2494| 
        B         $C$L635,LO            ; [CPU_] |2494| 
        ; branchcc occurs ; [] |2494| 
	.dwpsn	file "../Source/prod.c",line 2497,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |2497| 
        CMPB      AL,#83                ; [CPU_] |2497| 
        B         $C$L635,NEQ           ; [CPU_] |2497| 
        ; branchcc occurs ; [] |2497| 
$C$L525:    
	.dwpsn	file "../Source/prod.c",line 2504,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL182       ; [CPU_U] |2504| 
        MOVL      XAR0,#44              ; [CPU_] |2504| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2504| 
        MOVB      *-SP[3],#4,UNC        ; [CPU_] |2504| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2504| 
        MOVL      XAR4,XAR1             ; [CPU_] |2504| 
$C$DW$1131	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1131, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1131, DW_AT_name("_sprintf")
	.dwattr $C$DW$1131, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2504| 
        ; call occurs [#_sprintf] ; [] |2504| 
        MOVL      XAR4,XAR1             ; [CPU_] |2504| 
	.dwpsn	file "../Source/prod.c",line 2505,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2505| 
        MOV       AL,#1024              ; [CPU_] |2505| 
        MOVL      XAR5,XAR1             ; [CPU_] |2505| 
$C$DW$1132	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1132, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1132, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1132, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2505| 
        ; call occurs [#_scia_getparam] ; [] |2505| 
	.dwpsn	file "../Source/prod.c",line 2506,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2506| 
$C$DW$1133	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1133, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1133, DW_AT_name("_atoi")
	.dwattr $C$DW$1133, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2506| 
        ; call occurs [#_atoi] ; [] |2506| 
        MOV       *-SP[51],AL           ; [CPU_] |2506| 
	.dwpsn	file "../Source/prod.c",line 2507,column 7,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |2507| 
$C$DW$1134	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1134, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1134, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1134, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2507| 
        ; call occurs [#_scia_puts] ; [] |2507| 
        MOV       AL,*-SP[51]           ; [CPU_] |2507| 
	.dwpsn	file "../Source/prod.c",line 2509,column 8,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |2509| 
        CMPB      AL,#4                 ; [CPU_] |2509| 
        B         $C$L539,HIS           ; [CPU_] |2509| 
        ; branchcc occurs ; [] |2509| 
	.dwpsn	file "../Source/prod.c",line 2513,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2513| 
$C$DW$1135	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1135, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1135, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1135, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2513| 
        ; call occurs [#_scia_puts] ; [] |2513| 
        MOVL      XAR0,#62              ; [CPU_] |2513| 
	.dwpsn	file "../Source/prod.c",line 2517,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |2517| 
	.dwpsn	file "../Source/prod.c",line 2513,column 6,is_stmt,isa 0
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2513| 
	.dwpsn	file "../Source/prod.c",line 2517,column 11,is_stmt,isa 0
        MOV       *-SP[41],AL           ; [CPU_] |2517| 
$C$L526:    
	.dwpsn	file "../Source/prod.c",line 2518,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL144       ; [CPU_U] |2518| 
        MOVL      XAR0,#44              ; [CPU_] |2518| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2518| 
        MOV       *-SP[3],AL            ; [CPU_] |2518| 
        MOVL      ACC,*XAR1++           ; [CPU_] |2518| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2518| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2518| 
$C$DW$1136	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1136, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1136, DW_AT_name("_sprintf")
	.dwattr $C$DW$1136, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2518| 
        ; call occurs [#_sprintf] ; [] |2518| 
        MOVL      XAR0,#44              ; [CPU_] |2518| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2518| 
	.dwpsn	file "../Source/prod.c",line 2519,column 7,is_stmt,isa 0
$C$DW$1137	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1137, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1137, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1137, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2519| 
        ; call occurs [#_scia_puts] ; [] |2519| 
        MOV       AL,*-SP[41]           ; [CPU_] |2519| 
	.dwpsn	file "../Source/prod.c",line 2520,column 7,is_stmt,isa 0
        CMPB      AL,#6                 ; [CPU_] |2520| 
        B         $C$L527,GEQ           ; [CPU_] |2520| 
        ; branchcc occurs ; [] |2520| 
	.dwpsn	file "../Source/prod.c",line 2521,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL89        ; [CPU_U] |2521| 
$C$DW$1138	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1138, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1138, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1138, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2521| 
        ; call occurs [#_scia_puts] ; [] |2521| 
$C$L527:    
	.dwpsn	file "../Source/prod.c",line 2517,column 18,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |2517| 
        MOV       AL,*-SP[41]           ; [CPU_] 
        CMPB      AL,#7                 ; [CPU_] |2517| 
        B         $C$L526,LT            ; [CPU_] |2517| 
        ; branchcc occurs ; [] |2517| 
	.dwpsn	file "../Source/prod.c",line 2524,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2524| 
$C$DW$1139	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1139, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1139, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1139, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2524| 
        ; call occurs [#_scia_puts] ; [] |2524| 
	.dwpsn	file "../Source/prod.c",line 2525,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL183       ; [CPU_U] |2525| 
        MOVL      XAR0,#44              ; [CPU_] |2525| 
	.dwpsn	file "../Source/prod.c",line 2524,column 6,is_stmt,isa 0
        MOV       AH,*-SP[51]           ; [CPU_] |2524| 
	.dwpsn	file "../Source/prod.c",line 2525,column 6,is_stmt,isa 0
        MOVL      *-SP[2],XAR4          ; [CPU_] |2525| 
        MOV       *-SP[3],AH            ; [CPU_] |2525| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2525| 
        DEC       *-SP[51]              ; [CPU_] |2525| 
        MOV       *-SP[41],AH           ; [CPU_] |2525| 
        MOVL      XAR4,XAR1             ; [CPU_] |2525| 
$C$DW$1140	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1140, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1140, DW_AT_name("_sprintf")
	.dwattr $C$DW$1140, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2525| 
        ; call occurs [#_sprintf] ; [] |2525| 
        MOVL      XAR4,XAR1             ; [CPU_] |2525| 
	.dwpsn	file "../Source/prod.c",line 2527,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |2527| 
        MOV       AL,#1024              ; [CPU_] |2527| 
        MOVL      XAR5,XAR1             ; [CPU_] |2527| 
$C$DW$1141	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1141, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1141, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1141, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2527| 
        ; call occurs [#_scia_getparam] ; [] |2527| 
        MOVL      XAR4,XAR1             ; [CPU_] |2527| 
	.dwpsn	file "../Source/prod.c",line 2528,column 6,is_stmt,isa 0
$C$DW$1142	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1142, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1142, DW_AT_name("_atoi")
	.dwattr $C$DW$1142, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2528| 
        ; call occurs [#_atoi] ; [] |2528| 
        MOVZ      AR1,AL                ; [CPU_] |2528| 
        CMPB      AL,#7                 ; [CPU_] |2528| 
        B         $C$L528,LO            ; [CPU_] |2528| 
        ; branchcc occurs ; [] |2528| 
	.dwpsn	file "../Source/prod.c",line 2531,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL146       ; [CPU_U] |2531| 
$C$DW$1143	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1143, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1143, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1143, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2531| 
        ; call occurs [#_scia_puts] ; [] |2531| 
	.dwpsn	file "../Source/prod.c",line 2530,column 7,is_stmt,isa 0
        MOVB      XAR1,#0               ; [CPU_] |2530| 
$C$L528:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2534,column 6,is_stmt,isa 0
$C$DW$1144	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1144, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1144, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1144, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2534| 
        ; call occurs [#_scia_puts] ; [] |2534| 
	.dwpsn	file "../Source/prod.c",line 2535,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2535| 
$C$DW$1145	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1145, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1145, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1145, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2535| 
        ; call occurs [#_scia_puts] ; [] |2535| 
	.dwpsn	file "../Source/prod.c",line 2536,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |2536| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2536| 
        MOVB      AL,#3                 ; [CPU_] |2536| 
        MOV       T,*-SP[51]            ; [CPU_] |2536| 
        MPYU      ACC,T,AL              ; [CPU_] |2536| 
        ADDL      ACC,XAR6              ; [CPU_] |2536| 
        ADD       ACC,#773 << 2         ; [CPU_] |2536| 
        MOVL      XAR4,ACC              ; [CPU_] |2536| 
        MOV       *+XAR4[0],AR1         ; [CPU_] |2536| 
	.dwpsn	file "../Source/prod.c",line 2538,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR4             ; [CPU_] |2538| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |2538| 
        CMPB      AL,#2                 ; [CPU_] |2538| 
        B         $C$L532,LOS           ; [CPU_] |2538| 
        ; branchcc occurs ; [] |2538| 
        MOV       AH,AL                 ; [CPU_] |2538| 
        ADDB      AH,#-3                ; [CPU_] |2538| 
        CMPB      AH,#1                 ; [CPU_] |2538| 
        B         $C$L531,LOS           ; [CPU_] |2538| 
        ; branchcc occurs ; [] |2538| 
        CMPB      AL,#5                 ; [CPU_] |2538| 
        B         $C$L529,EQ            ; [CPU_] |2538| 
        ; branchcc occurs ; [] |2538| 
        CMPB      AL,#6                 ; [CPU_] |2538| 
        B         $C$L594,NEQ           ; [CPU_] |2538| 
        ; branchcc occurs ; [] |2538| 
	.dwpsn	file "../Source/prod.c",line 2612,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL184       ; [CPU_U] |2612| 
        MOV       AL,*-SP[41]           ; [CPU_] |2612| 
        MOVL      XAR0,#62              ; [CPU_] |2612| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2612| 
        MOV       *-SP[3],AL            ; [CPU_] |2612| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2612| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2612| 
        ADDL      ACC,XAR6              ; [CPU_] |2612| 
        MOVL      XAR4,ACC              ; [CPU_] |2612| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2612| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2612| 
	.dwpsn	file "../Source/prod.c",line 2615,column 7,is_stmt,isa 0
        B         $C$L536,UNC           ; [CPU_] |2615| 
        ; branch occurs ; [] |2615| 
$C$L529:    
	.dwpsn	file "../Source/prod.c",line 2593,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2593| 
        MOVL      XAR0,#44              ; [CPU_] |2593| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2593| 
        MOVB      *-SP[3],#1,UNC        ; [CPU_] |2593| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2593| 
$C$DW$1146	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1146, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1146, DW_AT_name("_sprintf")
	.dwattr $C$DW$1146, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2593| 
        ; call occurs [#_sprintf] ; [] |2593| 
        MOVL      XAR0,#44              ; [CPU_] |2593| 
	.dwpsn	file "../Source/prod.c",line 2594,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2594| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2594| 
	.dwpsn	file "../Source/prod.c",line 2593,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2593| 
	.dwpsn	file "../Source/prod.c",line 2594,column 8,is_stmt,isa 0
$C$DW$1147	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1147, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1147, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1147, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2594| 
        ; call occurs [#_scia_getparam] ; [] |2594| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2594| 
	.dwpsn	file "../Source/prod.c",line 2595,column 8,is_stmt,isa 0
$C$DW$1148	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1148, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1148, DW_AT_name("_atoi")
	.dwattr $C$DW$1148, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2595| 
        ; call occurs [#_atoi] ; [] |2595| 
        MOV       *-SP[52],AL           ; [CPU_] |2595| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2595| 
	.dwpsn	file "../Source/prod.c",line 2596,column 8,is_stmt,isa 0
$C$DW$1149	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1149, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1149, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1149, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2596| 
        ; call occurs [#_scia_puts] ; [] |2596| 
        MOV       AL,*-SP[52]           ; [CPU_] |2596| 
	.dwpsn	file "../Source/prod.c",line 2598,column 9,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |2598| 
        B         $C$L530,NEQ           ; [CPU_] |2598| 
        ; branchcc occurs ; [] |2598| 
	.dwpsn	file "../Source/prod.c",line 2602,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2602| 
$C$DW$1150	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1150, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1150, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1150, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2602| 
        ; call occurs [#_scia_puts] ; [] |2602| 
	.dwpsn	file "../Source/prod.c",line 2604,column 7,is_stmt,isa 0
        DEC       *-SP[52]              ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2606,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL185       ; [CPU_U] |2606| 
        MOVL      XAR0,#62              ; [CPU_] |2606| 
	.dwpsn	file "../Source/prod.c",line 2602,column 7,is_stmt,isa 0
        MOV       AL,*-SP[52]           ; [CPU_] |2602| 
	.dwpsn	file "../Source/prod.c",line 2604,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2604| 
	.dwpsn	file "../Source/prod.c",line 2606,column 7,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |2606| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2606| 
        MOV       *-SP[3],AL            ; [CPU_] |2606| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2606| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2606| 
        ADDL      ACC,XAR6              ; [CPU_] |2606| 
        MOVL      XAR4,ACC              ; [CPU_] |2606| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2606| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2606| 
        MOVB      AL,#1                 ; [CPU_] |2606| 
        ADD       AL,*-SP[52]           ; [CPU_] |2606| 
        MOV       *-SP[7],AL            ; [CPU_] |2606| 
	.dwpsn	file "../Source/prod.c",line 2609,column 7,is_stmt,isa 0
        B         $C$L536,UNC           ; [CPU_] |2609| 
        ; branch occurs ; [] |2609| 
$C$L530:    
	.dwpsn	file "../Source/prod.c",line 2600,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2600| 
$C$DW$1151	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1151, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1151, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1151, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2600| 
        ; call occurs [#_scia_puts] ; [] |2600| 
	.dwpsn	file "../Source/prod.c",line 2592,column 7,is_stmt,isa 0
        B         $C$L529,UNC           ; [CPU_] |2592| 
        ; branch occurs ; [] |2592| 
$C$L531:    
	.dwpsn	file "../Source/prod.c",line 2550,column 7,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |2550| 
        B         $C$L533,UNC           ; [CPU_] |2550| 
        ; branch occurs ; [] |2550| 
$C$L532:    
	.dwpsn	file "../Source/prod.c",line 2544,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |2544| 
$C$L533:    
        MOV       *-SP[53],AL           ; [CPU_] |2544| 
        MOV       *-SP[42],AL           ; [CPU_] 
$C$L534:    
	.dwpsn	file "../Source/prod.c",line 2555,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |2555| 
        MOV       AL,*-SP[53]           ; [CPU_] |2555| 
        MOVL      XAR0,#44              ; [CPU_] |2555| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2555| 
        MOV       *-SP[3],AL            ; [CPU_] |2555| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2555| 
$C$DW$1152	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1152, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1152, DW_AT_name("_sprintf")
	.dwattr $C$DW$1152, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2555| 
        ; call occurs [#_sprintf] ; [] |2555| 
        MOVL      XAR0,#44              ; [CPU_] |2555| 
	.dwpsn	file "../Source/prod.c",line 2556,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |2556| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2556| 
	.dwpsn	file "../Source/prod.c",line 2555,column 8,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |2555| 
	.dwpsn	file "../Source/prod.c",line 2556,column 8,is_stmt,isa 0
$C$DW$1153	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1153, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1153, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1153, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2556| 
        ; call occurs [#_scia_getparam] ; [] |2556| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2556| 
	.dwpsn	file "../Source/prod.c",line 2557,column 8,is_stmt,isa 0
$C$DW$1154	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1154, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1154, DW_AT_name("_atoi")
	.dwattr $C$DW$1154, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2557| 
        ; call occurs [#_atoi] ; [] |2557| 
        MOV       *-SP[52],AL           ; [CPU_] |2557| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2557| 
	.dwpsn	file "../Source/prod.c",line 2558,column 8,is_stmt,isa 0
$C$DW$1155	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1155, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1155, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1155, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2558| 
        ; call occurs [#_scia_puts] ; [] |2558| 
        MOV       AL,*-SP[52]           ; [CPU_] |2558| 
	.dwpsn	file "../Source/prod.c",line 2560,column 9,is_stmt,isa 0
        B         $C$L538,EQ            ; [CPU_] |2560| 
        ; branchcc occurs ; [] |2560| 
        MOV       AL,*-SP[42]           ; [CPU_] 
        CMP       AL,*-SP[52]           ; [CPU_] |2560| 
        B         $C$L538,LO            ; [CPU_] |2560| 
        ; branchcc occurs ; [] |2560| 
	.dwpsn	file "../Source/prod.c",line 2564,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2564| 
$C$DW$1156	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1156, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1156, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1156, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2564| 
        ; call occurs [#_scia_puts] ; [] |2564| 
	.dwpsn	file "../Source/prod.c",line 2566,column 7,is_stmt,isa 0
        DEC       *-SP[52]              ; [CPU_] |2566| 
	.dwpsn	file "../Source/prod.c",line 2564,column 7,is_stmt,isa 0
        MOV       AL,*-SP[52]           ; [CPU_] |2564| 
	.dwpsn	file "../Source/prod.c",line 2566,column 7,is_stmt,isa 0
        MOV       *+XAR1[1],AL          ; [CPU_] |2566| 
$C$L535:    
	.dwpsn	file "../Source/prod.c",line 2571,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL186       ; [CPU_U] |2571| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |2571| 
        MOV       AL,#1024              ; [CPU_] |2571| 
$C$DW$1157	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1157, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1157, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1157, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |2571| 
        ; call occurs [#_scia_getparam] ; [] |2571| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |2571| 
	.dwpsn	file "../Source/prod.c",line 2573,column 8,is_stmt,isa 0
$C$DW$1158	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1158, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1158, DW_AT_name("_atoi")
	.dwattr $C$DW$1158, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |2573| 
        ; call occurs [#_atoi] ; [] |2573| 
        MOV       *-SP[42],AL           ; [CPU_] |2573| 
        CMPB      AL,#0                 ; [CPU_] |2573| 
        B         $C$L537,LT            ; [CPU_] |2573| 
        ; branchcc occurs ; [] |2573| 
        CMPB      AL,#6                 ; [CPU_] |2573| 
        B         $C$L537,GEQ           ; [CPU_] |2573| 
        ; branchcc occurs ; [] |2573| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 2579,column 7,is_stmt,isa 0
$C$DW$1159	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1159, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1159, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1159, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2579| 
        ; call occurs [#_scia_puts] ; [] |2579| 
	.dwpsn	file "../Source/prod.c",line 2580,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |2580| 
$C$DW$1160	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1160, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1160, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1160, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2580| 
        ; call occurs [#_scia_puts] ; [] |2580| 
        MOV       AL,*-SP[42]           ; [CPU_] |2580| 
	.dwpsn	file "../Source/prod.c",line 2583,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL187       ; [CPU_U] |2583| 
        MOVL      XAR0,#62              ; [CPU_] |2583| 
	.dwpsn	file "../Source/prod.c",line 2581,column 7,is_stmt,isa 0
        MOV       *+XAR1[2],AL          ; [CPU_] |2581| 
	.dwpsn	file "../Source/prod.c",line 2583,column 7,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |2583| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |2583| 
        MOV       *-SP[3],AL            ; [CPU_] |2583| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |2583| 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |2583| 
        ADDL      ACC,XAR6              ; [CPU_] |2583| 
        MOVL      XAR4,ACC              ; [CPU_] |2583| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |2583| 
        MOVL      *-SP[6],ACC           ; [CPU_] |2583| 
        MOVB      AL,#1                 ; [CPU_] |2583| 
        ADD       AL,*-SP[52]           ; [CPU_] |2583| 
        MOV       *-SP[7],AL            ; [CPU_] |2583| 
        MOV       AL,*-SP[42]           ; [CPU_] |2583| 
        MOV       *-SP[8],AL            ; [CPU_] |2583| 
$C$L536:    
        MOVL      XAR0,#44              ; [CPU_] |2583| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |2583| 
        MOVL      XAR4,XAR1             ; [CPU_] |2583| 
$C$DW$1161	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1161, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1161, DW_AT_name("_sprintf")
	.dwattr $C$DW$1161, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |2583| 
        ; call occurs [#_sprintf] ; [] |2583| 
        MOVL      XAR4,XAR1             ; [CPU_] |2583| 
	.dwpsn	file "../Source/prod.c",line 2586,column 7,is_stmt,isa 0
$C$DW$1162	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1162, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1162, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1162, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2586| 
        ; call occurs [#_scia_puts] ; [] |2586| 
	.dwpsn	file "../Source/prod.c",line 2621,column 6,is_stmt,isa 0
        B         $C$L594,UNC           ; [CPU_] |2621| 
        ; branch occurs ; [] |2621| 
$C$L537:    
	.dwpsn	file "../Source/prod.c",line 2577,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |2577| 
$C$DW$1163	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1163, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1163, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1163, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2577| 
        ; call occurs [#_scia_puts] ; [] |2577| 
	.dwpsn	file "../Source/prod.c",line 2570,column 7,is_stmt,isa 0
        B         $C$L535,UNC           ; [CPU_] |2570| 
        ; branch occurs ; [] |2570| 
$C$L538:    
	.dwpsn	file "../Source/prod.c",line 2562,column 8,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2562| 
$C$DW$1164	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1164, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1164, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1164, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2562| 
        ; call occurs [#_scia_puts] ; [] |2562| 
	.dwpsn	file "../Source/prod.c",line 2554,column 7,is_stmt,isa 0
        B         $C$L534,UNC           ; [CPU_] |2554| 
        ; branch occurs ; [] |2554| 
$C$L539:    
	.dwpsn	file "../Source/prod.c",line 2511,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |2511| 
$C$DW$1165	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1165, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1165, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1165, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |2511| 
        ; call occurs [#_scia_puts] ; [] |2511| 
	.dwpsn	file "../Source/prod.c",line 2503,column 6,is_stmt,isa 0
        B         $C$L525,UNC           ; [CPU_] |2503| 
        ; branch occurs ; [] |2503| 
$C$L540:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1601,column 6,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1601| 
        B         $C$L635,LO            ; [CPU_] |1601| 
        ; branchcc occurs ; [] |1601| 
	.dwpsn	file "../Source/prod.c",line 1606,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1606| 
        CMPB      AL,#86                ; [CPU_] |1606| 
        B         $C$L541,EQ            ; [CPU_] |1606| 
        ; branchcc occurs ; [] |1606| 
        CMPB      AL,#77                ; [CPU_] |1606| 
        B         $C$L541,EQ            ; [CPU_] |1606| 
        ; branchcc occurs ; [] |1606| 
        CMPB      AL,#83                ; [CPU_] |1606| 
        B         $C$L635,NEQ           ; [CPU_] |1606| 
        ; branchcc occurs ; [] |1606| 
$C$L541:    
	.dwpsn	file "../Source/prod.c",line 1609,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1609| 
        MOV       *-SP[41],AL           ; [CPU_] |1609| 
	.dwpsn	file "../Source/prod.c",line 1611,column 5,is_stmt,isa 0
$C$DW$1166	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1166, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1166, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1166, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1611| 
        ; call occurs [#_lcd_clear] ; [] |1611| 
	.dwpsn	file "../Source/prod.c",line 1612,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1612| 
        MOVL      XAR4,#$C$FSL73        ; [CPU_U] |1612| 
$C$DW$1167	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1167, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1167, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1167, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1612| 
        ; call occurs [#_lcd_puts] ; [] |1612| 
$C$L542:    
	.dwpsn	file "../Source/prod.c",line 1618,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL108       ; [CPU_U] |1618| 
        MOVL      XAR0,#44              ; [CPU_] |1618| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1618| 
        MOVB      *-SP[3],#1,UNC        ; [CPU_] |1618| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1618| 
        MOVL      XAR4,XAR1             ; [CPU_] |1618| 
$C$DW$1168	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1168, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1168, DW_AT_name("_sprintf")
	.dwattr $C$DW$1168, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1618| 
        ; call occurs [#_sprintf] ; [] |1618| 
        MOVL      XAR4,XAR1             ; [CPU_] |1618| 
	.dwpsn	file "../Source/prod.c",line 1619,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1619| 
        MOV       AL,#1024              ; [CPU_] |1619| 
        MOVL      XAR5,XAR1             ; [CPU_] |1619| 
$C$DW$1169	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1169, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1169, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1169, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1619| 
        ; call occurs [#_scia_getparam] ; [] |1619| 
	.dwpsn	file "../Source/prod.c",line 1620,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1620| 
$C$DW$1170	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1170, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1170, DW_AT_name("_atoi")
	.dwattr $C$DW$1170, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1620| 
        ; call occurs [#_atoi] ; [] |1620| 
        MOV       *-SP[52],AL           ; [CPU_] |1620| 
	.dwpsn	file "../Source/prod.c",line 1621,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1621| 
$C$DW$1171	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1171, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1171, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1171, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1621| 
        ; call occurs [#_scia_puts] ; [] |1621| 
        MOV       AL,*-SP[52]           ; [CPU_] |1621| 
	.dwpsn	file "../Source/prod.c",line 1623,column 7,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |1623| 
        B         $C$L600,NEQ           ; [CPU_] |1623| 
        ; branchcc occurs ; [] |1623| 
	.dwpsn	file "../Source/prod.c",line 1627,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1627| 
$C$DW$1172	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1172, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1172, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1172, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1627| 
        ; call occurs [#_scia_puts] ; [] |1627| 
	.dwpsn	file "../Source/prod.c",line 1628,column 5,is_stmt,isa 0
        DEC       *-SP[52]              ; [CPU_] |1628| 
$C$L543:    
	.dwpsn	file "../Source/prod.c",line 1633,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL109       ; [CPU_U] |1633| 
        MOVL      XAR0,#44              ; [CPU_] |1633| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1633| 
        MOVB      *-SP[3],#20,UNC       ; [CPU_] |1633| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1633| 
        MOVL      XAR4,XAR1             ; [CPU_] |1633| 
$C$DW$1173	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1173, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1173, DW_AT_name("_sprintf")
	.dwattr $C$DW$1173, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1633| 
        ; call occurs [#_sprintf] ; [] |1633| 
        MOVL      XAR4,XAR1             ; [CPU_] |1633| 
	.dwpsn	file "../Source/prod.c",line 1634,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1634| 
        MOV       AL,#1024              ; [CPU_] |1634| 
        MOVL      XAR5,XAR1             ; [CPU_] |1634| 
$C$DW$1174	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1174, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1174, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1174, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1634| 
        ; call occurs [#_scia_getparam] ; [] |1634| 
	.dwpsn	file "../Source/prod.c",line 1635,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1635| 
$C$DW$1175	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1175, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1175, DW_AT_name("_atoi")
	.dwattr $C$DW$1175, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1635| 
        ; call occurs [#_atoi] ; [] |1635| 
        MOV       *-SP[51],AL           ; [CPU_] |1635| 
	.dwpsn	file "../Source/prod.c",line 1636,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1636| 
$C$DW$1176	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1176, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1176, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1176, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1636| 
        ; call occurs [#_scia_puts] ; [] |1636| 
        MOV       AL,*-SP[51]           ; [CPU_] |1636| 
	.dwpsn	file "../Source/prod.c",line 1640,column 7,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1640| 
        CMPB      AL,#20                ; [CPU_] |1640| 
        B         $C$L599,HIS           ; [CPU_] |1640| 
        ; branchcc occurs ; [] |1640| 
	.dwpsn	file "../Source/prod.c",line 1644,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1644| 
$C$DW$1177	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1177, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1177, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1177, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1644| 
        ; call occurs [#_scia_puts] ; [] |1644| 
	.dwpsn	file "../Source/prod.c",line 1648,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1648| 
        MOVL      XAR4,#$C$FSL74        ; [CPU_U] |1648| 
        MOVL      XAR0,#44              ; [CPU_] |1648| 
	.dwpsn	file "../Source/prod.c",line 1644,column 5,is_stmt,isa 0
        MOV       AH,*-SP[51]           ; [CPU_] |1644| 
	.dwpsn	file "../Source/prod.c",line 1648,column 5,is_stmt,isa 0
        ADD       AL,*-SP[52]           ; [CPU_] |1648| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1648| 
        MOV       *-SP[3],AL            ; [CPU_] |1648| 
        MOV       *-SP[4],AH            ; [CPU_] |1648| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1648| 
        DEC       *-SP[51]              ; [CPU_] |1648| 
        MOV       *-SP[53],AH           ; [CPU_] |1648| 
        MOV       *-SP[54],AL           ; [CPU_] |1648| 
        MOVL      XAR4,XAR1             ; [CPU_] |1648| 
$C$DW$1178	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1178, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1178, DW_AT_name("_sprintf")
	.dwattr $C$DW$1178, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1648| 
        ; call occurs [#_sprintf] ; [] |1648| 
	.dwpsn	file "../Source/prod.c",line 1649,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1649| 
        MOVL      XAR4,XAR1             ; [CPU_] |1649| 
$C$DW$1179	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1179, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1179, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1179, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1649| 
        ; call occurs [#_lcd_puts] ; [] |1649| 
	.dwpsn	file "../Source/prod.c",line 1653,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL188       ; [CPU_U] |1653| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1653| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1653| 
        MOVL      XAR4,XAR1             ; [CPU_] |1653| 
$C$DW$1180	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1180, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1180, DW_AT_name("_sprintf")
	.dwattr $C$DW$1180, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1653| 
        ; call occurs [#_sprintf] ; [] |1653| 
	.dwpsn	file "../Source/prod.c",line 1654,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1654| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1654| 
        MOVL      XAR4,XAR1             ; [CPU_] |1654| 
$C$DW$1181	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1181, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1181, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1181, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1654| 
        ; call occurs [#_scia_getparam] ; [] |1654| 
        CMPB      AL,#15                ; [CPU_] |1654| 
        B         $C$L544,LOS           ; [CPU_] |1654| 
        ; branchcc occurs ; [] |1654| 
	.dwpsn	file "../Source/prod.c",line 1658,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1658| 
        MOVB      XAR0,#15              ; [CPU_] |1658| 
	.dwpsn	file "../Source/prod.c",line 1657,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1657| 
	.dwpsn	file "../Source/prod.c",line 1658,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1658| 
$C$L544:    
	.dwpsn	file "../Source/prod.c",line 1660,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1660| 
        MOVL      XAR0,#36              ; [CPU_] |1660| 
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1660| 
        ADD       AH,AL                 ; [CPU_] |1660| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1660| 
        MOVU      ACC,AH                ; [CPU_] |1660| 
        MOVL      XAR5,XAR1             ; [CPU_] |1660| 
$C$DW$1182	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1182, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1182, DW_AT_name("_memcpy")
	.dwattr $C$DW$1182, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1660| 
        ; call occurs [#_memcpy] ; [] |1660| 
        MOVL      XAR4,XAR1             ; [CPU_] |1660| 
	.dwpsn	file "../Source/prod.c",line 1661,column 5,is_stmt,isa 0
$C$DW$1183	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1183, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1183, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1183, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1661| 
        ; call occurs [#_scia_puts] ; [] |1661| 
	.dwpsn	file "../Source/prod.c",line 1662,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1662| 
$C$DW$1184	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1184, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1184, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1184, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1662| 
        ; call occurs [#_scia_puts] ; [] |1662| 
	.dwpsn	file "../Source/prod.c",line 1666,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL189       ; [CPU_U] |1666| 
        MOVL      XAR0,#44              ; [CPU_] |1666| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1666| 
        MOVB      *-SP[3],#15,UNC       ; [CPU_] |1666| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1666| 
$C$DW$1185	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1185, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1185, DW_AT_name("_sprintf")
	.dwattr $C$DW$1185, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1666| 
        ; call occurs [#_sprintf] ; [] |1666| 
        MOVL      XAR0,#44              ; [CPU_] |1666| 
	.dwpsn	file "../Source/prod.c",line 1667,column 5,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1667| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1667| 
	.dwpsn	file "../Source/prod.c",line 1666,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1666| 
	.dwpsn	file "../Source/prod.c",line 1667,column 5,is_stmt,isa 0
$C$DW$1186	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1186, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1186, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1186, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1667| 
        ; call occurs [#_scia_getparam] ; [] |1667| 
        CMPB      AL,#15                ; [CPU_] |1667| 
        B         $C$L545,LOS           ; [CPU_] |1667| 
        ; branchcc occurs ; [] |1667| 
	.dwpsn	file "../Source/prod.c",line 1671,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1671| 
        MOVB      XAR0,#15              ; [CPU_] |1671| 
	.dwpsn	file "../Source/prod.c",line 1670,column 6,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |1670| 
	.dwpsn	file "../Source/prod.c",line 1671,column 6,is_stmt,isa 0
        MOV       *+XAR4[AR0],#0        ; [CPU_] |1671| 
$C$L545:    
	.dwpsn	file "../Source/prod.c",line 1673,column 5,is_stmt,isa 0
        MOVB      AH,#1                 ; [CPU_] |1673| 
        MOVL      XAR0,#60              ; [CPU_] |1673| 
        MOVL      XAR5,XAR1             ; [CPU_] |1673| 
        ADD       AH,AL                 ; [CPU_] |1673| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1673| 
        MOVU      ACC,AH                ; [CPU_] |1673| 
$C$DW$1187	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1187, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1187, DW_AT_name("_memcpy")
	.dwattr $C$DW$1187, DW_AT_TI_call

        LCR       #_memcpy              ; [CPU_] |1673| 
        ; call occurs [#_memcpy] ; [] |1673| 
        MOVL      XAR4,XAR1             ; [CPU_] |1673| 
	.dwpsn	file "../Source/prod.c",line 1674,column 5,is_stmt,isa 0
$C$DW$1188	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1188, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1188, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1188, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1674| 
        ; call occurs [#_scia_puts] ; [] |1674| 
	.dwpsn	file "../Source/prod.c",line 1675,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1675| 
$C$DW$1189	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1189, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1189, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1189, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1675| 
        ; call occurs [#_scia_puts] ; [] |1675| 
        MOVL      XAR0,#70              ; [CPU_] |1675| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1675| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1678,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1678| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] 
        MOV       *-SP[55],AL           ; [CPU_] |1678| 
$C$L546:    
	.dwpsn	file "../Source/prod.c",line 1679,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL190       ; [CPU_U] |1679| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1679| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1679| 
        MOV       *-SP[3],AL            ; [CPU_] |1679| 
        MOVL      ACC,*XAR4++           ; [CPU_] |1679| 
        MOVL      *-SP[58],XAR4         ; [CPU_] |1679| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1679| 
        MOVL      XAR4,XAR1             ; [CPU_] |1679| 
$C$DW$1190	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1190, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1190, DW_AT_name("_sprintf")
	.dwattr $C$DW$1190, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1679| 
        ; call occurs [#_sprintf] ; [] |1679| 
	.dwpsn	file "../Source/prod.c",line 1678,column 17,is_stmt,isa 0
        ADDB      XAR1,#8               ; [CPU_] |1678| 
        INC       *-SP[55]              ; [CPU_] |1678| 
        MOV       AL,*-SP[55]           ; [CPU_] |1678| 
        CMPB      AL,#7                 ; [CPU_] |1678| 
        B         $C$L546,LT            ; [CPU_] |1678| 
        ; branchcc occurs ; [] |1678| 
	.dwpsn	file "../Source/prod.c",line 1681,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |1681| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1681| 
        MOVB      XAR1,#54              ; [CPU_] |1681| 
        MOV       *+XAR4[AR1],#0        ; [CPU_] |1681| 
	.dwpsn	file "../Source/prod.c",line 1682,column 5,is_stmt,isa 0
$C$DW$1191	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1191, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1191, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1191, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1682| 
        ; call occurs [#_scia_puts] ; [] |1682| 
	.dwpsn	file "../Source/prod.c",line 1683,column 5,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1683| 
        MOV       AL,#1024              ; [CPU_] |1683| 
        MOVL      XAR4,#$C$FSL191       ; [CPU_U] |1683| 
        MOVL      XAR5,XAR1             ; [CPU_] |1683| 
$C$DW$1192	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1192, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1192, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1192, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1683| 
        ; call occurs [#_scia_getparam] ; [] |1683| 
        MOVL      XAR4,XAR1             ; [CPU_] |1683| 
	.dwpsn	file "../Source/prod.c",line 1685,column 5,is_stmt,isa 0
$C$DW$1193	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1193, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1193, DW_AT_name("_atoi")
	.dwattr $C$DW$1193, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1685| 
        ; call occurs [#_atoi] ; [] |1685| 
        MOVB      XAR0,#42              ; [CPU_] |1685| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1685| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1685| 
	.dwpsn	file "../Source/prod.c",line 1687,column 5,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1687| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1687| 
        CMPB      AL,#6                 ; [CPU_] |1687| 
        B         $C$L547,GT            ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        CMPB      AL,#6                 ; [CPU_] |1687| 
        B         $C$L550,EQ            ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        CMPB      AL,#1                 ; [CPU_] |1687| 
        B         $C$L553,LOS           ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        MOV       AH,AL                 ; [CPU_] |1687| 
        ADDB      AH,#-2                ; [CPU_] |1687| 
        CMPB      AH,#2                 ; [CPU_] |1687| 
        B         $C$L552,LOS           ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        CMPB      AL,#5                 ; [CPU_] |1687| 
        B         $C$L551,EQ            ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        B         $C$L548,UNC           ; [CPU_] |1687| 
        ; branch occurs ; [] |1687| 
$C$L547:    
        MOV       AH,AL                 ; [CPU_] |1687| 
        ADDB      AH,#-7                ; [CPU_] |1687| 
        CMPB      AH,#1                 ; [CPU_] |1687| 
        B         $C$L549,LOS           ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
        CMPB      AL,#15                ; [CPU_] |1687| 
        B         $C$L549,EQ            ; [CPU_] |1687| 
        ; branchcc occurs ; [] |1687| 
$C$L548:    
	.dwpsn	file "../Source/prod.c",line 1709,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1709| 
        MOVB      *+XAR4[AR0],#16,UNC   ; [CPU_] |1709| 
	.dwpsn	file "../Source/prod.c",line 1710,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL192       ; [CPU_U] |1710| 
$C$DW$1194	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1194, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1194, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1194, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1710| 
        ; call occurs [#_scia_puts] ; [] |1710| 
	.dwpsn	file "../Source/prod.c",line 1711,column 6,is_stmt,isa 0
        B         $C$L554,UNC           ; [CPU_] |1711| 
        ; branch occurs ; [] |1711| 
$C$L549:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1706,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x00f0  ; [CPU_] |1706| 
	.dwpsn	file "../Source/prod.c",line 1707,column 6,is_stmt,isa 0
        B         $C$L554,UNC           ; [CPU_] |1707| 
        ; branch occurs ; [] |1707| 
$C$L550:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1701,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0040  ; [CPU_] |1701| 
	.dwpsn	file "../Source/prod.c",line 1702,column 6,is_stmt,isa 0
        B         $C$L554,UNC           ; [CPU_] |1702| 
        ; branch occurs ; [] |1702| 
$C$L551:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1698,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0030  ; [CPU_] |1698| 
	.dwpsn	file "../Source/prod.c",line 1699,column 6,is_stmt,isa 0
        B         $C$L554,UNC           ; [CPU_] |1699| 
        ; branch occurs ; [] |1699| 
$C$L552:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1695,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0020  ; [CPU_] |1695| 
	.dwpsn	file "../Source/prod.c",line 1696,column 6,is_stmt,isa 0
        B         $C$L554,UNC           ; [CPU_] |1696| 
        ; branch occurs ; [] |1696| 
$C$L553:    
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1690,column 6,is_stmt,isa 0
        OR        @_tsensor+42,#0x0010  ; [CPU_] |1690| 
$C$L554:    
	.dwpsn	file "../Source/prod.c",line 1713,column 5,is_stmt,isa 0
        MOVL      XAR7,#_tsensor        ; [CPU_U] |1713| 
        MOVL      XAR4,XAR7             ; [CPU_] |1713| 
        MOVB      XAR0,#43              ; [CPU_] |1713| 
        ADDB      XAR7,#42              ; [CPU_] |1713| 
        MOV       AL,*XAR7              ; [CPU_] |1713| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1713| 
	.dwpsn	file "../Source/prod.c",line 1714,column 5,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1714| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1714| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1714| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1714| 
	.dwpsn	file "../Source/prod.c",line 1716,column 5,is_stmt,isa 0
$C$DW$1195	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1195, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1195, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1195, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1716| 
        ; call occurs [#_scia_puts] ; [] |1716| 
	.dwpsn	file "../Source/prod.c",line 1717,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1717| 
$C$DW$1196	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1196, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1196, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1196, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1717| 
        ; call occurs [#_scia_puts] ; [] |1717| 
$C$L555:    
	.dwpsn	file "../Source/prod.c",line 1722,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL193       ; [CPU_U] |1722| 
        MOVL      XAR5,XAR1             ; [CPU_] |1722| 
        MOV       AL,#1024              ; [CPU_] |1722| 
$C$DW$1197	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1197, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1197, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1197, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1722| 
        ; call occurs [#_scia_getparam] ; [] |1722| 
        MOVL      XAR4,XAR1             ; [CPU_] |1722| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1198	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1198, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1198, DW_AT_name("_strtod")
	.dwattr $C$DW$1198, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        MOVB      XAR0,#40              ; [CPU_] |1723| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1723| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR3,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1723,column 6,is_stmt,isa 0
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1723| 
	.dwpsn	file "../Source/prod.c",line 1725,column 7,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1725| 
        MOV       AH,#0                 ; [CPU_] |1725| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1725| 
        MOVL      ACC,XAR3              ; [CPU_] |1725| 
$C$DW$1199	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1199, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1199, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1199, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1725| 
        ; call occurs [#FS$$CMP] ; [] |1725| 
        CMPB      AL,#0                 ; [CPU_] |1725| 
        B         $C$L598,EQ            ; [CPU_] |1725| 
        ; branchcc occurs ; [] |1725| 
	.dwpsn	file "../Source/prod.c",line 1729,column 5,is_stmt,isa 0
        MOVL      XAR0,#36              ; [CPU_] |1729| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1729| 
        MOVB      XAR1,#142             ; [CPU_] |1729| 
        MOVL      *+XAR4[AR1],XAR3      ; [CPU_] |1729| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1729| 
	.dwpsn	file "../Source/prod.c",line 1730,column 5,is_stmt,isa 0
$C$DW$1200	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1200, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1200, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1200, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1730| 
        ; call occurs [#_scia_puts] ; [] |1730| 
	.dwpsn	file "../Source/prod.c",line 1731,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1731| 
$C$DW$1201	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1201, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1201, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1201, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1731| 
        ; call occurs [#_scia_puts] ; [] |1731| 
        MOV       AL,*-SP[52]           ; [CPU_] |1731| 
	.dwpsn	file "../Source/prod.c",line 1733,column 5,is_stmt,isa 0
$C$DW$1202	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1202, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1202, DW_AT_name("_tagid")
	.dwattr $C$DW$1202, DW_AT_TI_call

        LCR       #_tagid               ; [CPU_] |1733| 
        ; call occurs [#_tagid] ; [] |1733| 
        MOVL      XAR0,#36              ; [CPU_] |1733| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |1733| 
        MOVL      XAR4,XAR5             ; [CPU_] |1733| 
        ADDB      XAR4,#32              ; [CPU_] |1733| 
	.dwpsn	file "../Source/prod.c",line 1735,column 5,is_stmt,isa 0
        ADDB      XAR5,#32              ; [CPU_] |1735| 
	.dwpsn	file "../Source/prod.c",line 1733,column 5,is_stmt,isa 0
        MOVL      *+XAR4[0],P           ; [CPU_] |1733| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1733| 
	.dwpsn	file "../Source/prod.c",line 1735,column 5,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1735| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1735| 
        MOV       *-SP[2],#0            ; [CPU_] |1735| 
        MOV       *-SP[1],#0            ; [CPU_] |1735| 
        MOVL      XAR4,*+XAR5[0]        ; [CPU_] |1735| 
        MOVL      XAR5,*+XAR5[2]        ; [CPU_] |1735| 
        MOVL      P,XAR4                ; [CPU_] |1735| 
        MOVL      ACC,XAR5              ; [CPU_] |1735| 
$C$DW$1203	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1203, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1203, DW_AT_name("ULL$$CMP")
	.dwattr $C$DW$1203, DW_AT_TI_call

        FFC       XAR7,#ULL$$CMP        ; [CPU_] |1735| 
        ; call occurs [#ULL$$CMP] ; [] |1735| 
        CMPB      AL,#0                 ; [CPU_] |1735| 
        B         $C$L556,NEQ           ; [CPU_] |1735| 
        ; branchcc occurs ; [] |1735| 
	.dwpsn	file "../Source/prod.c",line 1736,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL194       ; [CPU_U] |1736| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1736| 
	.dwpsn	file "../Source/prod.c",line 1737,column 5,is_stmt,isa 0
        B         $C$L557,UNC           ; [CPU_] |1737| 
        ; branch occurs ; [] |1737| 
$C$L556:    
	.dwpsn	file "../Source/prod.c",line 1738,column 6,is_stmt,isa 0
        MOVL      XAR6,#$C$FSL195       ; [CPU_U] |1738| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1738| 
        MOVL      *-SP[6],XAR4          ; [CPU_] |1738| 
        MOVL      *-SP[4],XAR5          ; [CPU_] |1738| 
$C$L557:    
        MOVL      XAR0,#44              ; [CPU_] |1738| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1738| 
$C$DW$1204	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1204, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1204, DW_AT_name("_sprintf")
	.dwattr $C$DW$1204, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1738| 
        ; call occurs [#_sprintf] ; [] |1738| 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1740,column 5,is_stmt,isa 0
$C$DW$1205	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1205, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1205, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1205, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1740| 
        ; call occurs [#_scia_puts] ; [] |1740| 
        MOV       AL,*-SP[41]           ; [CPU_] |1740| 
	.dwpsn	file "../Source/prod.c",line 1742,column 5,is_stmt,isa 0
        CMPB      AL,#77                ; [CPU_] |1742| 
        B         $C$L571,EQ            ; [CPU_] |1742| 
        ; branchcc occurs ; [] |1742| 
        CMPB      AL,#83                ; [CPU_] |1742| 
        B         $C$L563,EQ            ; [CPU_] |1742| 
        ; branchcc occurs ; [] |1742| 
        CMPB      AL,#86                ; [CPU_] |1742| 
        B         $C$L628,NEQ           ; [CPU_] |1742| 
        ; branchcc occurs ; [] |1742| 
	.dwpsn	file "../Source/prod.c",line 1747,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL196       ; [CPU_U] |1747| 
        MOVB      AL,#40                ; [CPU_] |1747| 
$C$DW$1206	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1206, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1206, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1206, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1747| 
        ; call occurs [#_lcd_puts] ; [] |1747| 
	.dwpsn	file "../Source/prod.c",line 1749,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1749| 
        MOVB      XAR0,#36              ; [CPU_] |1749| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL197       ; [CPU_U] |1752| 
	.dwpsn	file "../Source/prod.c",line 1749,column 6,is_stmt,isa 0
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1749| 
	.dwpsn	file "../Source/prod.c",line 1750,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1750| 
        MOVB      *+XAR1[AR0],#1,UNC    ; [CPU_] |1750| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1752| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1752| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1752| 
        MOVL      XAR0,#70              ; [CPU_] |1752| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1752| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1752| 
        MOV       ACC,AL << 1           ; [CPU_] |1752| 
        ADDL      ACC,XAR6              ; [CPU_] |1752| 
        MOVL      XAR4,ACC              ; [CPU_] |1752| 
        MOVL      XAR0,#44              ; [CPU_] |1752| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1752| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1752| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1752| 
$C$DW$1207	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1207, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1207, DW_AT_name("_sprintf")
	.dwattr $C$DW$1207, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1752| 
        ; call occurs [#_sprintf] ; [] |1752| 
        MOVL      XAR0,#44              ; [CPU_] |1752| 
	.dwpsn	file "../Source/prod.c",line 1754,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1754| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1754| 
	.dwpsn	file "../Source/prod.c",line 1752,column 6,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1752| 
	.dwpsn	file "../Source/prod.c",line 1754,column 6,is_stmt,isa 0
$C$DW$1208	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1208, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1208, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1208, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1754| 
        ; call occurs [#_scia_getparam] ; [] |1754| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1754,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1754| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
$C$DW$1209	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1209, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1209, DW_AT_name("_strtod")
	.dwattr $C$DW$1209, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1755| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVL      XAR6,ACC              ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1755,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1755| 
	.dwpsn	file "../Source/prod.c",line 1756,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1756| 
        MOV       AH,#0                 ; [CPU_] |1756| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1756| 
        MOVL      ACC,XAR6              ; [CPU_] |1756| 
$C$DW$1210	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1210, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1210, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1210, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1756| 
        ; call occurs [#FS$$CMP] ; [] |1756| 
        CMPB      AL,#0                 ; [CPU_] |1756| 
        B         $C$L558,NEQ           ; [CPU_] |1756| 
        ; branchcc occurs ; [] |1756| 
	.dwpsn	file "../Source/prod.c",line 1757,column 7,is_stmt,isa 0
        MOVB      XAR0,#96              ; [CPU_] |1757| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1757| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1757| 
$C$L558:    
        MOVL      XAR1,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1759,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1759| 
$C$DW$1211	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1211, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1211, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1211, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1759| 
        ; call occurs [#_scia_puts] ; [] |1759| 
	.dwpsn	file "../Source/prod.c",line 1760,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1760| 
$C$DW$1212	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1212, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1212, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1212, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1760| 
        ; call occurs [#_scia_puts] ; [] |1760| 
	.dwpsn	file "../Source/prod.c",line 1762,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1762| 
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1762| 
        MOVL      XAR5,XAR1             ; [CPU_] |1762| 
$C$DW$1213	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1213, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1213, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1213, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1762| 
        ; call occurs [#_scia_getparam] ; [] |1762| 
	.dwpsn	file "../Source/prod.c",line 1765,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1765| 
$C$DW$1214	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1214, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1214, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1214, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1765| 
        ; call occurs [#_scia_puts] ; [] |1765| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1767| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1768| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOVL      *-SP[34],ACC          ; [CPU_] |1767| 
	.dwpsn	file "../Source/prod.c",line 1768,column 6,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |1768| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOV       *-SP[32],#0           ; [CPU_] |1767| 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1769| 
	.dwpsn	file "../Source/prod.c",line 1767,column 6,is_stmt,isa 0
        MOV       *-SP[31],#0           ; [CPU_] |1767| 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |1769| 
        MOVB      ACC,#0                ; [CPU_] |1769| 
        SUBB      ACC,#1                ; [CPU_] |1769| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1769| 
        B         $C$L561,EQ            ; [CPU_] |1769| 
        ; branchcc occurs ; [] |1769| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1770,column 14,is_stmt,isa 0
        B         $C$L560,UNC           ; [CPU_] |1770| 
        ; branch occurs ; [] |1770| 
$C$L559:    
	.dwpsn	file "../Source/prod.c",line 1771,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1771| 
$C$DW$1215	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1215, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1215, DW_AT_name("_delay_us")
	.dwattr $C$DW$1215, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1771| 
        ; call occurs [#_delay_us] ; [] |1771| 
$C$L560:    
	.dwpsn	file "../Source/prod.c",line 1770,column 14,is_stmt,isa 0
$C$DW$1216	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1216, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1216, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1216, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1770| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1770| 
        CMPB      AL,#0                 ; [CPU_] |1770| 
        B         $C$L559,EQ            ; [CPU_] |1770| 
        ; branchcc occurs ; [] |1770| 
	.dwpsn	file "../Source/prod.c",line 1774,column 7,is_stmt,isa 0
$C$DW$1217	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1217, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1217, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1217, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1774| 
        ; call occurs [#_ad7738_getraw] ; [] |1774| 
	.dwpsn	file "../Source/prod.c",line 1775,column 7,is_stmt,isa 0
        MOVL      ACC,XAR1              ; [CPU_] |1775| 
        ADDL      XAR4,ACC              ; [CPU_] |1775| 
        MOVL      XAR0,#20              ; [CPU_] |1775| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1775| 
        MOVL      XAR0,#20              ; [CPU_] |1775| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1775| 
        ASR64     ACC:P,16              ; [CPU_] |1775| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1775| 
        MOVL      XAR0,#20              ; [CPU_] |1775| 
        ASR64     ACC:P,16              ; [CPU_] |1775| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1775| 
        MOVL      XAR0,#20              ; [CPU_] |1775| 
        ADDUL     P,*-SP[34]            ; [CPU_] |1775| 
        ADDCL     ACC,*-SP[32]          ; [CPU_] |1775| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1775| 
        MOVL      *-SP[34],P            ; [CPU_] |1775| 
        MOVL      *-SP[32],ACC          ; [CPU_] |1775| 
	.dwpsn	file "../Source/prod.c",line 1769,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1769| 
        SUBL      *-SP[40],ACC          ; [CPU_] |1769| 
        MOVB      ACC,#0                ; [CPU_] |1769| 
        SUBB      ACC,#1                ; [CPU_] |1769| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1769| 
        B         $C$L560,NEQ           ; [CPU_] |1769| 
        ; branchcc occurs ; [] |1769| 
$C$L561:    
	.dwpsn	file "../Source/prod.c",line 1777,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL199       ; [CPU_U] |1777| 
$C$DW$1218	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1218, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1218, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1218, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1777| 
        ; call occurs [#_scia_puts] ; [] |1777| 
	.dwpsn	file "../Source/prod.c",line 1779,column 6,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1779| 
        MOVL      XAR0,#52              ; [CPU_] |1779| 
        MOVL      ACC,XAR1              ; [CPU_] |1779| 
        ADDB      ACC,#96               ; [CPU_] |1779| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1779| 
        MOVL      XAR0,#40              ; [CPU_] |1779| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1779| 
        MOV       T,*-SP[52]            ; [CPU_] |1779| 
        MOVB      AL,#10                ; [CPU_] |1779| 
        MPYU      ACC,T,AL              ; [CPU_] |1779| 
        ADDL      ACC,XAR6              ; [CPU_] |1779| 
        ADDB      ACC,#42               ; [CPU_] |1779| 
        MOVL      XAR4,ACC              ; [CPU_] |1779| 
        MOVL      XAR0,#42              ; [CPU_] |1779| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1779| 
$C$L562:    
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1779| 
$C$DW$1219	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1219, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1219, DW_AT_name("FS$$NEG")
	.dwattr $C$DW$1219, DW_AT_TI_call

        LCR       #FS$$NEG              ; [CPU_] |1779| 
        ; call occurs [#FS$$NEG] ; [] |1779| 
        MOVB      XAR0,#96              ; [CPU_] |1779| 
        MOVL      XAR6,*+XAR1[AR0]      ; [CPU_] |1779| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1779| 
$C$DW$1220	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1220, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1220, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1220, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1779| 
        ; call occurs [#FS$$MPY] ; [] |1779| 
        MOVL      *-SP[58],ACC          ; [CPU_] |1779| 
        MOVL      P,*-SP[34]            ; [CPU_] |1779| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |1779| 
$C$DW$1221	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1221, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1221, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1221, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1779| 
        ; call occurs [#LL$$TOFS] ; [] |1779| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1779| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |1779| 
$C$DW$1222	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1222, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1222, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1222, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1779| 
        ; call occurs [#FS$$MPY] ; [] |1779| 
        MOVL      XAR6,ACC              ; [CPU_] |1779| 
        MOV       AL,#16384             ; [CPU_] |1779| 
        MOV       AH,#17948             ; [CPU_] |1779| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1779| 
        MOVL      ACC,XAR6              ; [CPU_] |1779| 
$C$DW$1223	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1223, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1223, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1223, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1779| 
        ; call occurs [#FS$$DIV] ; [] |1779| 
        MOVB      XAR0,#118             ; [CPU_] |1779| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1779| 
	.dwpsn	file "../Source/prod.c",line 1781,column 6,is_stmt,isa 0
        B         $C$L585,UNC           ; [CPU_] |1781| 
        ; branch occurs ; [] |1781| 
$C$L563:    
	.dwpsn	file "../Source/prod.c",line 1864,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL200       ; [CPU_U] |1864| 
        MOVB      AL,#40                ; [CPU_] |1864| 
$C$DW$1224	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1224, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1224, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1224, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1864| 
        ; call occurs [#_lcd_puts] ; [] |1864| 
	.dwpsn	file "../Source/prod.c",line 1866,column 6,is_stmt,isa 0
        MOVB      XAR0,#36              ; [CPU_] |1866| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1866| 
	.dwpsn	file "../Source/prod.c",line 1869,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL201       ; [CPU_U] |1869| 
	.dwpsn	file "../Source/prod.c",line 1866,column 6,is_stmt,isa 0
        MOVB      *+XAR4[AR0],#3,UNC    ; [CPU_] |1866| 
	.dwpsn	file "../Source/prod.c",line 1867,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1867| 
        MOVB      *+XAR4[AR0],#1,UNC    ; [CPU_] |1867| 
	.dwpsn	file "../Source/prod.c",line 1869,column 6,is_stmt,isa 0
        MOVB      XAR0,#42              ; [CPU_] |1869| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |1869| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |1869| 
        MOVL      XAR0,#70              ; [CPU_] |1869| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1869| 
        SETC      SXM                   ; [CPU_] 
        ANDB      AL,#0x0f              ; [CPU_] |1869| 
        MOV       ACC,AL << 1           ; [CPU_] |1869| 
        ADDL      ACC,XAR6              ; [CPU_] |1869| 
        MOVL      XAR4,ACC              ; [CPU_] |1869| 
        MOVL      XAR0,#44              ; [CPU_] |1869| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1869| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1869| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1869| 
        MOVL      XAR4,XAR1             ; [CPU_] |1869| 
$C$DW$1225	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1225, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1225, DW_AT_name("_sprintf")
	.dwattr $C$DW$1225, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1869| 
        ; call occurs [#_sprintf] ; [] |1869| 
        MOVL      XAR4,XAR1             ; [CPU_] |1869| 
	.dwpsn	file "../Source/prod.c",line 1872,column 6,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1872| 
        MOV       AL,#1024              ; [CPU_] |1872| 
        MOVL      XAR5,XAR1             ; [CPU_] |1872| 
$C$DW$1226	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1226, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1226, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1226, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1872| 
        ; call occurs [#_scia_getparam] ; [] |1872| 
	.dwpsn	file "../Source/prod.c",line 1873,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1873| 
$C$DW$1227	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1227, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1227, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1227, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1873| 
        ; call occurs [#_scia_puts] ; [] |1873| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1228	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1228, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1228, DW_AT_name("_strtod")
	.dwattr $C$DW$1228, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
        MOVL      *-SP[18],ACC          ; [CPU_] |205| 
	.dwpsn	file "../Source/prod.c",line 1875,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1875| 
        MOV       AH,#0                 ; [CPU_] |1875| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1875| 
        MOVL      ACC,*-SP[18]          ; [CPU_] |1875| 
$C$DW$1229	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1229, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1229, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1229, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1875| 
        ; call occurs [#FS$$CMP] ; [] |1875| 
        CMPB      AL,#0                 ; [CPU_] |1875| 
        B         $C$L564,NEQ           ; [CPU_] |1875| 
        ; branchcc occurs ; [] |1875| 
	.dwpsn	file "../Source/prod.c",line 1876,column 7,is_stmt,isa 0
        MOV       AL,#57672             ; [CPU_] |1876| 
        MOV       AH,#16314             ; [CPU_] |1876| 
	.dwpsn	file "../Source/prod.c",line 1877,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL202       ; [CPU_U] |1877| 
	.dwpsn	file "../Source/prod.c",line 1876,column 7,is_stmt,isa 0
        MOVL      *-SP[18],ACC          ; [CPU_] |1876| 
	.dwpsn	file "../Source/prod.c",line 1877,column 7,is_stmt,isa 0
$C$DW$1230	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1230, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1230, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1230, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1877| 
        ; call occurs [#_scia_puts] ; [] |1877| 
$C$L564:    
	.dwpsn	file "../Source/prod.c",line 1879,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1879| 
$C$DW$1231	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1231, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1231, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1231, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1879| 
        ; call occurs [#_scia_puts] ; [] |1879| 
	.dwpsn	file "../Source/prod.c",line 1881,column 6,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1881| 
        MOVL      XAR4,#$C$FSL198       ; [CPU_U] |1881| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1881| 
$C$DW$1232	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1232, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1232, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1232, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1881| 
        ; call occurs [#_scia_getparam] ; [] |1881| 
	.dwpsn	file "../Source/prod.c",line 1884,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1884| 
$C$DW$1233	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1233, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1233, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1233, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1884| 
        ; call occurs [#_scia_puts] ; [] |1884| 
        MOVZ      AR4,SP                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1886,column 11,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1886| 
        MOV       *-SP[42],AL           ; [CPU_] |1886| 
        SUBB      XAR4,#34              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L565:    
	.dwpsn	file "../Source/prod.c",line 1887,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1887| 
        B         $C$L567,LEQ           ; [CPU_] |1887| 
        ; branchcc occurs ; [] |1887| 
	.dwpsn	file "../Source/prod.c",line 1889,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1889| 
$C$DW$1234	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1234, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1234, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1234, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1889| 
        ; call occurs [#_shunt_switch] ; [] |1889| 
        MOV       *-SP[41],#49          ; [CPU_] 
$C$L566:    
	.dwpsn	file "../Source/prod.c",line 1891,column 9,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1891| 
$C$DW$1235	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1235, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1235, DW_AT_name("_delay_us")
	.dwattr $C$DW$1235, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1891| 
        ; call occurs [#_delay_us] ; [] |1891| 
        MOVZ      AR6,*-SP[41]          ; [CPU_] |1891| 
	.dwpsn	file "../Source/prod.c",line 1890,column 20,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1890| 
        MOVZ      AR0,AR6               ; [CPU_] |1890| 
        MOV       *-SP[41],AR6          ; [CPU_] |1890| 
        CMP       AR0,#-1               ; [CPU_] |1890| 
        B         $C$L566,NEQ           ; [CPU_] |1890| 
        ; branchcc occurs ; [] |1890| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1894,column 8,is_stmt,isa 0
$C$DW$1236	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1236, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1236, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1236, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1894| 
        ; call occurs [#_maf_rst] ; [] |1894| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1896,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1896| 
        SPM       #0                    ; [CPU_] 
$C$DW$1237	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1237, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1237, DW_AT_name("_delay_us")
	.dwattr $C$DW$1237, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1896| 
        ; call occurs [#_delay_us] ; [] |1896| 
$C$L567:    
	.dwpsn	file "../Source/prod.c",line 1899,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1899| 
	.dwpsn	file "../Source/prod.c",line 1900,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1900| 
	.dwpsn	file "../Source/prod.c",line 1899,column 7,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1899| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1899| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1901| 
	.dwpsn	file "../Source/prod.c",line 1900,column 7,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |1900| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |1901| 
        MOVB      ACC,#0                ; [CPU_] |1901| 
        SUBB      ACC,#1                ; [CPU_] |1901| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1901| 
        B         $C$L569,EQ            ; [CPU_] |1901| 
        ; branchcc occurs ; [] |1901| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
$C$L568:    
	.dwpsn	file "../Source/prod.c",line 1902,column 15,is_stmt,isa 0
$C$DW$1238	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1238, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1238, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1238, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1902| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1902| 
        CMPB      AL,#0                 ; [CPU_] |1902| 
        B         $C$L570,EQ            ; [CPU_] |1902| 
        ; branchcc occurs ; [] |1902| 
	.dwpsn	file "../Source/prod.c",line 1906,column 8,is_stmt,isa 0
$C$DW$1239	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1239, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1239, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1239, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1906| 
        ; call occurs [#_ad7738_getraw] ; [] |1906| 
	.dwpsn	file "../Source/prod.c",line 1907,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |1907| 
        ADDL      XAR4,ACC              ; [CPU_] |1907| 
        MOVL      XAR0,#18              ; [CPU_] |1907| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1907| 
        MOVL      XAR0,#18              ; [CPU_] |1907| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1907| 
        ASR64     ACC:P,16              ; [CPU_] |1907| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1907| 
        MOVL      XAR0,#18              ; [CPU_] |1907| 
        ASR64     ACC:P,16              ; [CPU_] |1907| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1907| 
        MOVL      XAR0,#18              ; [CPU_] |1907| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1907| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1907| 
        MOVL      XAR0,#18              ; [CPU_] |1907| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1907| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1907| 
        MOVL      *+XAR1[0],XAR6        ; [CPU_] |1907| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1907| 
	.dwpsn	file "../Source/prod.c",line 1901,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1901| 
        SUBL      *-SP[40],ACC          ; [CPU_] |1901| 
        MOVB      ACC,#0                ; [CPU_] |1901| 
        SUBB      ACC,#1                ; [CPU_] |1901| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1901| 
        B         $C$L568,NEQ           ; [CPU_] |1901| 
        ; branchcc occurs ; [] |1901| 
$C$L569:    
	.dwpsn	file "../Source/prod.c",line 1886,column 18,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |1886| 
        ADDB      XAR1,#4               ; [CPU_] |1886| 
        MOV       AL,*-SP[42]           ; [CPU_] |1886| 
        CMPB      AL,#2                 ; [CPU_] |1886| 
        B         $C$L565,LT            ; [CPU_] |1886| 
        ; branchcc occurs ; [] |1886| 
	.dwpsn	file "../Source/prod.c",line 1911,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1911| 
$C$DW$1240	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1240, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1240, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1240, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1911| 
        ; call occurs [#_shunt_switch] ; [] |1911| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1913,column 6,is_stmt,isa 0
$C$DW$1241	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1241, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1241, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1241, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1913| 
        ; call occurs [#_maf_rst] ; [] |1913| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1916,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL199       ; [CPU_U] |1916| 
$C$DW$1242	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1242, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1242, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1242, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1916| 
        ; call occurs [#_scia_puts] ; [] |1916| 
	.dwpsn	file "../Source/prod.c",line 1918,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1918| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1918| 
        MOVB      AL,#10                ; [CPU_] |1918| 
        MOV       T,*-SP[52]            ; [CPU_] |1918| 
        MPYU      ACC,T,AL              ; [CPU_] |1918| 
        ADDL      ACC,XAR6              ; [CPU_] |1918| 
        MOVL      *-SP[58],ACC          ; [CPU_] |1918| 
        MOV       AL,#16384             ; [CPU_] |1918| 
        MOV       AH,#17948             ; [CPU_] |1918| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1918| 
        MOVL      ACC,*-SP[18]          ; [CPU_] |1918| 
$C$DW$1243	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1243, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1243, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1243, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1918| 
        ; call occurs [#FS$$MPY] ; [] |1918| 
        MOVL      XAR1,ACC              ; [CPU_] |1918| 
        MOVL      P,*-SP[30]            ; [CPU_] |1918| 
        MOVL      ACC,*-SP[28]          ; [CPU_] |1918| 
        SUBUL     P,*-SP[34]            ; [CPU_] |1918| 
        SUBBL     ACC,*-SP[32]          ; [CPU_] |1918| 
$C$DW$1244	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1244, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1244, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1244, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1918| 
        ; call occurs [#LL$$TOFS] ; [] |1918| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1918| 
        MOVB      XAR0,#44              ; [CPU_] |1918| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1918| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1918| 
$C$DW$1245	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1245, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1245, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1245, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1918| 
        ; call occurs [#FS$$MPY] ; [] |1918| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1918| 
        MOVL      ACC,XAR1              ; [CPU_] |1918| 
$C$DW$1246	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1246, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1246, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1246, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1918| 
        ; call occurs [#FS$$DIV] ; [] |1918| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1918| 
        MOVB      XAR0,#96              ; [CPU_] |1918| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1918| 
	.dwpsn	file "../Source/prod.c",line 1920,column 6,is_stmt,isa 0
        MOVL      XAR0,#52              ; [CPU_] |1920| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1920| 
        MOVL      ACC,XAR1              ; [CPU_] |1920| 
        ADDB      ACC,#96               ; [CPU_] |1920| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1920| 
        ADDB      XAR4,#42              ; [CPU_] |1920| 
        MOVL      XAR0,#42              ; [CPU_] |1920| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1920| 
	.dwpsn	file "../Source/prod.c",line 1922,column 6,is_stmt,isa 0
        B         $C$L562,UNC           ; [CPU_] |1922| 
        ; branch occurs ; [] |1922| 
$C$L570:    
	.dwpsn	file "../Source/prod.c",line 1903,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1903| 
$C$DW$1247	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1247, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1247, DW_AT_name("_delay_us")
	.dwattr $C$DW$1247, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1903| 
        ; call occurs [#_delay_us] ; [] |1903| 
	.dwpsn	file "../Source/prod.c",line 1902,column 15,is_stmt,isa 0
        B         $C$L568,UNC           ; [CPU_] |1902| 
        ; branch occurs ; [] |1902| 
$C$L571:    
        MOVW      DP,#_tsensor+36       ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1785,column 6,is_stmt,isa 0
        MOVB      @_tsensor+36,#2,UNC   ; [CPU_] |1785| 
$C$L572:    
	.dwpsn	file "../Source/prod.c",line 1790,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL203       ; [CPU_U] |1790| 
        MOVL      XAR0,#44              ; [CPU_] |1790| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1790| 
        MOVB      *-SP[3],#12,UNC       ; [CPU_] |1790| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1790| 
        MOVL      XAR4,XAR1             ; [CPU_] |1790| 
$C$DW$1248	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1248, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1248, DW_AT_name("_sprintf")
	.dwattr $C$DW$1248, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1790| 
        ; call occurs [#_sprintf] ; [] |1790| 
        MOVL      XAR4,XAR1             ; [CPU_] |1790| 
	.dwpsn	file "../Source/prod.c",line 1791,column 7,is_stmt,isa 0
        MOVL      XAR1,*-SP[60]         ; [CPU_] |1791| 
        MOV       AL,#1024              ; [CPU_] |1791| 
        MOVL      XAR5,XAR1             ; [CPU_] |1791| 
$C$DW$1249	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1249, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1249, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1249, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1791| 
        ; call occurs [#_scia_getparam] ; [] |1791| 
        MOVL      XAR4,XAR1             ; [CPU_] |1791| 
	.dwpsn	file "../Source/prod.c",line 1792,column 7,is_stmt,isa 0
$C$DW$1250	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1250, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1250, DW_AT_name("_atoi")
	.dwattr $C$DW$1250, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1792| 
        ; call occurs [#_atoi] ; [] |1792| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1792| 
        MOVB      XAR0,#46              ; [CPU_] |1792| 
        MOV       *+XAR1[AR0],AL        ; [CPU_] |1792| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1792| 
	.dwpsn	file "../Source/prod.c",line 1793,column 7,is_stmt,isa 0
$C$DW$1251	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1251, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1251, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1251, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1793| 
        ; call occurs [#_scia_puts] ; [] |1793| 
	.dwpsn	file "../Source/prod.c",line 1795,column 8,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1795| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1795| 
        CMPB      AL,#2                 ; [CPU_] |1795| 
        B         $C$L597,LT            ; [CPU_] |1795| 
        ; branchcc occurs ; [] |1795| 
        CMPB      AL,#12                ; [CPU_] |1795| 
        B         $C$L597,GT            ; [CPU_] |1795| 
        ; branchcc occurs ; [] |1795| 
	.dwpsn	file "../Source/prod.c",line 1800,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1800| 
$C$DW$1252	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1252, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1252, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1252, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1800| 
        ; call occurs [#_scia_puts] ; [] |1800| 
	.dwpsn	file "../Source/prod.c",line 1802,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |1802| 
        MOVL      XAR4,#$C$FSL204       ; [CPU_U] |1802| 
        MOVL      XAR0,#44              ; [CPU_] |1802| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1802| 
        ADDB      XAR7,#46              ; [CPU_] |1802| 
        MOV       AL,*XAR7              ; [CPU_] |1802| 
        MOV       *-SP[3],AL            ; [CPU_] |1802| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1802| 
        MOVL      XAR4,XAR1             ; [CPU_] |1802| 
$C$DW$1253	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1253, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1253, DW_AT_name("_sprintf")
	.dwattr $C$DW$1253, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1802| 
        ; call occurs [#_sprintf] ; [] |1802| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1803| 
	.dwpsn	file "../Source/prod.c",line 1802,column 6,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |1802| 
	.dwpsn	file "../Source/prod.c",line 1803,column 6,is_stmt,isa 0
$C$DW$1254	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1254, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1254, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1254, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1803| 
        ; call occurs [#_lcd_puts] ; [] |1803| 
	.dwpsn	file "../Source/prod.c",line 1806,column 11,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |1806| 
	.dwpsn	file "../Source/prod.c",line 1806,column 18,is_stmt,isa 0
        MOVL      XAR1,#_tsensor        ; [CPU_U] |1806| 
	.dwpsn	file "../Source/prod.c",line 1806,column 11,is_stmt,isa 0
        B         $C$L574,UNC           ; [CPU_] |1806| 
        ; branch occurs ; [] |1806| 
$C$L573:    
        MOV       AL,*-SP[42]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1807,column 7,is_stmt,isa 0
        MOV       ACC,AL << #1          ; [CPU_] |1807| 
        SUB       AL,*-SP[41]           ; [CPU_] |1807| 
        ADDB      AL,#1                 ; [CPU_] |1807| 
$C$DW$1255	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1255, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1255, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1255, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1807| 
        ; call occurs [#I$$TOFS] ; [] |1807| 
        MOVW      DP,#_tsensor+40       ; [CPU_U] 
        MOVL      XAR6,@_tsensor+40     ; [CPU_] |1807| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1807| 
$C$DW$1256	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1256, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1256, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1256, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1807| 
        ; call occurs [#FS$$MPY] ; [] |1807| 
        MOVL      *-SP[58],ACC          ; [CPU_] |1807| 
        MOV       AL,*-SP[41]           ; [CPU_] |1807| 
$C$DW$1257	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1257, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1257, DW_AT_name("I$$TOFS")
	.dwattr $C$DW$1257, DW_AT_TI_call

        LCR       #I$$TOFS              ; [CPU_] |1807| 
        ; call occurs [#I$$TOFS] ; [] |1807| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1807| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |1807| 
$C$DW$1258	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1258, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1258, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1258, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1807| 
        ; call occurs [#FS$$DIV] ; [] |1807| 
        MOVZ      AR6,*-SP[42]          ; [CPU_] |1807| 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] |1807| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1807| 
        ADDL      ACC,XAR1              ; [CPU_] |1807| 
        MOVL      XAR4,ACC              ; [CPU_] |1807| 
        MOVB      XAR0,#48              ; [CPU_] |1807| 
	.dwpsn	file "../Source/prod.c",line 1806,column 38,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |1806| 
	.dwpsn	file "../Source/prod.c",line 1807,column 7,is_stmt,isa 0
        MOVL      *+XAR4[AR0],XAR7      ; [CPU_] |1807| 
	.dwpsn	file "../Source/prod.c",line 1806,column 38,is_stmt,isa 0
        MOV       *-SP[42],AR6          ; [CPU_] |1806| 
$C$L574:    
	.dwpsn	file "../Source/prod.c",line 1806,column 18,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1806| 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] |1806| 
        MOV       *-SP[41],AL           ; [CPU_] |1806| 
        CMP       AL,*-SP[42]           ; [CPU_] |1806| 
        B         $C$L573,GT            ; [CPU_] |1806| 
        ; branchcc occurs ; [] |1806| 
	.dwpsn	file "../Source/prod.c",line 1812,column 11,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |1812| 
        B         $C$L577,UNC           ; [CPU_] |1812| 
        ; branch occurs ; [] |1812| 
$C$L575:    
        MOVZ      AR6,*-SP[42]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1813,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL205       ; [CPU_U] |1813| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1813| 
        MOVL      XAR0,#44              ; [CPU_] |1813| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1813| 
        ADDL      ACC,XAR1              ; [CPU_] |1813| 
        ADDB      ACC,#48               ; [CPU_] |1813| 
        MOVL      XAR1,ACC              ; [CPU_] |1813| 
        MOVB      AL,#1                 ; [CPU_] |1813| 
        ADD       AL,AR6                ; [CPU_] |1813| 
        MOV       *-SP[3],AL            ; [CPU_] |1813| 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1813| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1813| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1813| 
$C$DW$1259	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1259, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1259, DW_AT_name("_sprintf")
	.dwattr $C$DW$1259, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1813| 
        ; call occurs [#_sprintf] ; [] |1813| 
        MOVL      XAR0,#44              ; [CPU_] |1813| 
	.dwpsn	file "../Source/prod.c",line 1815,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1815| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1815| 
	.dwpsn	file "../Source/prod.c",line 1813,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1813| 
	.dwpsn	file "../Source/prod.c",line 1815,column 7,is_stmt,isa 0
$C$DW$1260	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1260, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1260, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1260, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1815| 
        ; call occurs [#_scia_getparam] ; [] |1815| 
        CMPB      AL,#0                 ; [CPU_] |1815| 
        B         $C$L576,EQ            ; [CPU_] |1815| 
        ; branchcc occurs ; [] |1815| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        MOVB      XAR5,#0               ; [CPU_] |205| 
$C$DW$1261	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1261, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1261, DW_AT_name("_strtod")
	.dwattr $C$DW$1261, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1819,column 8,is_stmt,isa 0
        MOVL      *+XAR1[0],ACC         ; [CPU_] |1819| 
$C$L576:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1821,column 7,is_stmt,isa 0
$C$DW$1262	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1262, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1262, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1262, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1821| 
        ; call occurs [#_scia_puts] ; [] |1821| 
	.dwpsn	file "../Source/prod.c",line 1822,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |1822| 
$C$DW$1263	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1263, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1263, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1263, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1822| 
        ; call occurs [#_scia_puts] ; [] |1822| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1812,column 38,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |1812| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] 
$C$L577:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1812,column 18,is_stmt,isa 0
        CMP       AL,*-SP[42]           ; [CPU_] |1812| 
        B         $C$L575,GT            ; [CPU_] |1812| 
        ; branchcc occurs ; [] |1812| 
	.dwpsn	file "../Source/prod.c",line 1828,column 11,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |1828| 
        B         $C$L582,UNC           ; [CPU_] |1828| 
        ; branch occurs ; [] |1828| 
$C$L578:    
        MOVZ      AR6,*-SP[42]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1829,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL206       ; [CPU_U] |1829| 
        MOV       ACC,AR6 << 1          ; [CPU_] |1829| 
        ADDL      ACC,XAR1              ; [CPU_] |1829| 
        ADDB      ACC,#48               ; [CPU_] |1829| 
        MOVL      XAR1,ACC              ; [CPU_] |1829| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1829| 
        MOVL      XAR0,#70              ; [CPU_] |1829| 
        MOVW      DP,#_tsensor+42       ; [CPU_U] 
        MOVL      ACC,*+XAR1[0]         ; [CPU_] |1829| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1829| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |1829| 
        MOV       AL,@_tsensor+42       ; [CPU_] |1829| 
        ANDB      AL,#0x0f              ; [CPU_] |1829| 
        MOV       ACC,AL << 1           ; [CPU_] |1829| 
        ADDL      ACC,XAR7              ; [CPU_] |1829| 
        MOVL      XAR4,ACC              ; [CPU_] |1829| 
        MOVL      XAR0,#44              ; [CPU_] |1829| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1829| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1829| 
        MOVB      AL,#1                 ; [CPU_] |1829| 
        ADD       AL,AR6                ; [CPU_] |1829| 
        MOV       *-SP[7],AL            ; [CPU_] |1829| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1829| 
$C$DW$1264	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1264, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1264, DW_AT_name("_sprintf")
	.dwattr $C$DW$1264, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1829| 
        ; call occurs [#_sprintf] ; [] |1829| 
        MOVL      XAR0,#44              ; [CPU_] |1829| 
	.dwpsn	file "../Source/prod.c",line 1833,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1833| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1833| 
	.dwpsn	file "../Source/prod.c",line 1829,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1829| 
	.dwpsn	file "../Source/prod.c",line 1833,column 7,is_stmt,isa 0
$C$DW$1265	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1265, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1265, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1265, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1833| 
        ; call occurs [#_scia_getparam] ; [] |1833| 
	.dwpsn	file "../Source/prod.c",line 1834,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1834| 
$C$DW$1266	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1266, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1266, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1266, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1834| 
        ; call occurs [#_scia_puts] ; [] |1834| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOVB      ACC,#0                ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1837| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOVL      *-SP[34],ACC          ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1837,column 7,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |1837| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOV       *-SP[32],#0           ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1838| 
	.dwpsn	file "../Source/prod.c",line 1836,column 7,is_stmt,isa 0
        MOV       *-SP[31],#0           ; [CPU_] |1836| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |1838| 
        MOVB      ACC,#0                ; [CPU_] |1838| 
        SUBB      ACC,#1                ; [CPU_] |1838| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1838| 
        B         $C$L581,EQ            ; [CPU_] |1838| 
        ; branchcc occurs ; [] |1838| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1839,column 15,is_stmt,isa 0
        B         $C$L580,UNC           ; [CPU_] |1839| 
        ; branch occurs ; [] |1839| 
$C$L579:    
	.dwpsn	file "../Source/prod.c",line 1840,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1840| 
$C$DW$1267	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1267, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1267, DW_AT_name("_delay_us")
	.dwattr $C$DW$1267, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1840| 
        ; call occurs [#_delay_us] ; [] |1840| 
$C$L580:    
	.dwpsn	file "../Source/prod.c",line 1839,column 15,is_stmt,isa 0
$C$DW$1268	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1268, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1268, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1268, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1839| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1839| 
        CMPB      AL,#0                 ; [CPU_] |1839| 
        B         $C$L579,EQ            ; [CPU_] |1839| 
        ; branchcc occurs ; [] |1839| 
	.dwpsn	file "../Source/prod.c",line 1843,column 8,is_stmt,isa 0
$C$DW$1269	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1269, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1269, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1269, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1843| 
        ; call occurs [#_ad7738_getraw] ; [] |1843| 
	.dwpsn	file "../Source/prod.c",line 1844,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |1844| 
        ADDL      XAR4,ACC              ; [CPU_] |1844| 
        MOVL      XAR0,#16              ; [CPU_] |1844| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1844| 
        MOVL      XAR0,#16              ; [CPU_] |1844| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1844| 
        ASR64     ACC:P,16              ; [CPU_] |1844| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1844| 
        MOVL      XAR0,#16              ; [CPU_] |1844| 
        ASR64     ACC:P,16              ; [CPU_] |1844| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1844| 
        MOVL      XAR0,#16              ; [CPU_] |1844| 
        ADDUL     P,*-SP[34]            ; [CPU_] |1844| 
        ADDCL     ACC,*-SP[32]          ; [CPU_] |1844| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1844| 
        MOVL      *-SP[34],P            ; [CPU_] |1844| 
        MOVL      *-SP[32],ACC          ; [CPU_] |1844| 
	.dwpsn	file "../Source/prod.c",line 1838,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1838| 
        SUBL      *-SP[40],ACC          ; [CPU_] |1838| 
        MOVB      ACC,#0                ; [CPU_] |1838| 
        SUBB      ACC,#1                ; [CPU_] |1838| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1838| 
        B         $C$L580,NEQ           ; [CPU_] |1838| 
        ; branchcc occurs ; [] |1838| 
$C$L581:    
	.dwpsn	file "../Source/prod.c",line 1846,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL199       ; [CPU_U] |1846| 
$C$DW$1270	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1270, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1270, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1270, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1846| 
        ; call occurs [#_scia_puts] ; [] |1846| 
	.dwpsn	file "../Source/prod.c",line 1847,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1847| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1847| 
        MOV       *-SP[2],#0            ; [CPU_] |1847| 
        MOV       *-SP[1],#0            ; [CPU_] |1847| 
        MOVL      P,*-SP[34]            ; [CPU_] |1847| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |1847| 
$C$DW$1271	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1271, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1271, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1271, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1847| 
        ; call occurs [#LL$$DIV] ; [] |1847| 
        ADDB      XAR1,#24              ; [CPU_] |1847| 
        MOVB      XAR0,#46              ; [CPU_] 
        MOVL      *+XAR1[0],P           ; [CPU_] |1847| 
	.dwpsn	file "../Source/prod.c",line 1828,column 38,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |1828| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] 
$C$L582:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1828,column 18,is_stmt,isa 0
        CMP       AL,*-SP[42]           ; [CPU_] |1828| 
        B         $C$L578,GT            ; [CPU_] |1828| 
        ; branchcc occurs ; [] |1828| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#10                ; [CPU_] 
        MOV       T,*-SP[52]            ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1851,column 11,is_stmt,isa 0
        MOV       *-SP[42],#0           ; [CPU_] |1851| 
        MPYU      ACC,T,AL              ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADDB      ACC,#42               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        B         $C$L584,UNC           ; [CPU_] |1851| 
        ; branch occurs ; [] |1851| 
$C$L583:    
        MOV       AL,*-SP[42]           ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1852,column 7,is_stmt,isa 0
        MOV       ACC,AL << 1           ; [CPU_] |1852| 
        ADDL      XAR1,ACC              ; [CPU_] |1852| 
        MOVB      XAR0,#48              ; [CPU_] |1852| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1852| 
        MOVB      XAR0,#50              ; [CPU_] |1852| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1852| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1852| 
$C$DW$1272	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1272, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1272, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1272, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1852| 
        ; call occurs [#FS$$SUB] ; [] |1852| 
        MOVB      XAR0,#74              ; [CPU_] |1852| 
        MOVL      *-SP[58],ACC          ; [CPU_] |1852| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1852| 
        MOVB      XAR0,#72              ; [CPU_] |1852| 
        SUBL      ACC,*+XAR1[AR0]       ; [CPU_] |1852| 
$C$DW$1273	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1273, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1273, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1273, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1852| 
        ; call occurs [#L$$TOFS] ; [] |1852| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1852| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |1852| 
$C$DW$1274	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1274, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1274, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1274, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1852| 
        ; call occurs [#FS$$DIV] ; [] |1852| 
        MOVL      XAR0,#42              ; [CPU_] |1852| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1852| 
        MOVL      XAR6,*+XAR4[2]        ; [CPU_] |1852| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1852| 
$C$DW$1275	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1275, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1275, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1275, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1852| 
        ; call occurs [#FS$$DIV] ; [] |1852| 
        MOVB      XAR0,#96              ; [CPU_] |1852| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1852| 
	.dwpsn	file "../Source/prod.c",line 1856,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1856| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1856| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1856| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1856| 
$C$DW$1276	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1276, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1276, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1276, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1856| 
        ; call occurs [#FS$$MPY] ; [] |1856| 
        MOVB      XAR0,#72              ; [CPU_] |1856| 
        MOVL      *-SP[58],ACC          ; [CPU_] |1856| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1856| 
$C$DW$1277	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1277, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1277, DW_AT_name("L$$TOFS")
	.dwattr $C$DW$1277, DW_AT_TI_call

        LCR       #L$$TOFS              ; [CPU_] |1856| 
        ; call occurs [#L$$TOFS] ; [] |1856| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1856| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |1856| 
$C$DW$1278	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1278, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1278, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1278, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1856| 
        ; call occurs [#FS$$MPY] ; [] |1856| 
        MOVB      XAR0,#48              ; [CPU_] |1856| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1856| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1856| 
$C$DW$1279	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1279, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1279, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1279, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1856| 
        ; call occurs [#FS$$SUB] ; [] |1856| 
        MOVB      XAR0,#118             ; [CPU_] |1856| 
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1856| 
        MOVB      XAR0,#46              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1851,column 42,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |1851| 
        MOVL      XAR1,#_tsensor        ; [CPU_U] 
        MOV       AL,*+XAR1[AR0]        ; [CPU_] 
        MOV       *-SP[41],AL           ; [CPU_] 
$C$L584:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1860,column 6,is_stmt,isa 0
        ADDB      AL,#-1                ; [CPU_] |1860| 
        CMP       AL,*-SP[42]           ; [CPU_] |1860| 
        B         $C$L583,GT            ; [CPU_] |1860| 
        ; branchcc occurs ; [] |1860| 
$C$L585:    
	.dwpsn	file "../Source/prod.c",line 1931,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL207       ; [CPU_U] |1931| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1931| 
        MOV       AL,#1024              ; [CPU_] |1931| 
$C$DW$1280	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1280, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1280, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1280, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1931| 
        ; call occurs [#_scia_getparam] ; [] |1931| 
	.dwpsn	file "../Source/prod.c",line 1934,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1934| 
$C$DW$1281	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1281, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1281, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1281, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1934| 
        ; call occurs [#_scia_puts] ; [] |1934| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#26              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#38              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVL      XAR3,#_tsensor        ; [CPU_U] |1962| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#34              ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1936,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1936| 
        MOVZ      AR1,AR4               ; [CPU_] 
        MOV       *-SP[42],AL           ; [CPU_] |1936| 
$C$L586:    
	.dwpsn	file "../Source/prod.c",line 1937,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1937| 
        B         $C$L588,LEQ           ; [CPU_] |1937| 
        ; branchcc occurs ; [] |1937| 
	.dwpsn	file "../Source/prod.c",line 1939,column 7,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1939| 
$C$DW$1282	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1282, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1282, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1282, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1939| 
        ; call occurs [#_shunt_switch] ; [] |1939| 
        MOV       *-SP[41],#49          ; [CPU_] 
$C$L587:    
	.dwpsn	file "../Source/prod.c",line 1941,column 8,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1941| 
$C$DW$1283	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1283, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1283, DW_AT_name("_delay_us")
	.dwattr $C$DW$1283, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1941| 
        ; call occurs [#_delay_us] ; [] |1941| 
        MOVZ      AR6,*-SP[41]          ; [CPU_] |1941| 
	.dwpsn	file "../Source/prod.c",line 1940,column 19,is_stmt,isa 0
        SUBB      XAR6,#1               ; [CPU_U] |1940| 
        MOVZ      AR0,AR6               ; [CPU_] |1940| 
        MOV       *-SP[41],AR6          ; [CPU_] |1940| 
        CMP       AR0,#-1               ; [CPU_] |1940| 
        B         $C$L587,NEQ           ; [CPU_] |1940| 
        ; branchcc occurs ; [] |1940| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1944,column 7,is_stmt,isa 0
$C$DW$1284	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1284, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1284, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1284, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1944| 
        ; call occurs [#_maf_rst] ; [] |1944| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1946,column 7,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |1946| 
        SPM       #0                    ; [CPU_] 
$C$DW$1285	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1285, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1285, DW_AT_name("_delay_us")
	.dwattr $C$DW$1285, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1946| 
        ; call occurs [#_delay_us] ; [] |1946| 
$C$L588:    
	.dwpsn	file "../Source/prod.c",line 1949,column 6,is_stmt,isa 0
        ZAPA      ; [CPU_] |1949| 
	.dwpsn	file "../Source/prod.c",line 1950,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1950| 
	.dwpsn	file "../Source/prod.c",line 1949,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1949| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1949| 
	.dwpsn	file "../Source/prod.c",line 1951,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1951| 
	.dwpsn	file "../Source/prod.c",line 1950,column 6,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |1950| 
	.dwpsn	file "../Source/prod.c",line 1951,column 6,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |1951| 
        MOVB      ACC,#0                ; [CPU_] |1951| 
        SUBB      ACC,#1                ; [CPU_] |1951| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1951| 
        B         $C$L590,EQ            ; [CPU_] |1951| 
        ; branchcc occurs ; [] |1951| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
$C$L589:    
	.dwpsn	file "../Source/prod.c",line 1952,column 14,is_stmt,isa 0
$C$DW$1286	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1286, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1286, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1286, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1952| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1952| 
        CMPB      AL,#0                 ; [CPU_] |1952| 
        B         $C$L596,EQ            ; [CPU_] |1952| 
        ; branchcc occurs ; [] |1952| 
	.dwpsn	file "../Source/prod.c",line 1956,column 7,is_stmt,isa 0
$C$DW$1287	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1287, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1287, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1287, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1956| 
        ; call occurs [#_ad7738_getraw] ; [] |1956| 
	.dwpsn	file "../Source/prod.c",line 1957,column 7,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |1957| 
        ADDL      XAR4,ACC              ; [CPU_] |1957| 
        MOVL      XAR0,#14              ; [CPU_] |1957| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1957| 
        MOVL      XAR0,#14              ; [CPU_] |1957| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1957| 
        ASR64     ACC:P,16              ; [CPU_] |1957| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1957| 
        MOVL      XAR0,#14              ; [CPU_] |1957| 
        ASR64     ACC:P,16              ; [CPU_] |1957| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1957| 
        MOVL      XAR0,#14              ; [CPU_] |1957| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1957| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1957| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1957| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1957| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1957| 
	.dwpsn	file "../Source/prod.c",line 1951,column 6,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1951| 
        SUBL      *-SP[40],ACC          ; [CPU_] |1951| 
        MOVB      ACC,#0                ; [CPU_] |1951| 
        SUBB      ACC,#1                ; [CPU_] |1951| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1951| 
        B         $C$L589,NEQ           ; [CPU_] |1951| 
        ; branchcc occurs ; [] |1951| 
$C$L590:    
	.dwpsn	file "../Source/prod.c",line 1959,column 6,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1959| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1959| 
        MOV       *-SP[2],#0            ; [CPU_] |1959| 
        MOV       *-SP[1],#0            ; [CPU_] |1959| 
        MOVL      P,*+XAR1[0]           ; [CPU_] |1959| 
        MOVL      ACC,*+XAR1[2]         ; [CPU_] |1959| 
$C$DW$1288	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1288, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1288, DW_AT_name("LL$$DIV")
	.dwattr $C$DW$1288, DW_AT_TI_call

        LCR       #LL$$DIV              ; [CPU_] |1959| 
        ; call occurs [#LL$$DIV] ; [] |1959| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOVB      XAR0,#46              ; [CPU_] |1962| 
	.dwpsn	file "../Source/prod.c",line 1959,column 6,is_stmt,isa 0
        MOVL      *+XAR1[0],P           ; [CPU_] |1959| 
	.dwpsn	file "../Source/prod.c",line 1961,column 6,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |1961| 
	.dwpsn	file "../Source/prod.c",line 1959,column 6,is_stmt,isa 0
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1959| 
	.dwpsn	file "../Source/prod.c",line 1962,column 6,is_stmt,isa 0
        MOV       AL,*+XAR3[AR0]        ; [CPU_] |1962| 
        CMPB      AL,#2                 ; [CPU_] |1962| 
        B         $C$L593,LEQ           ; [CPU_] |1962| 
        ; branchcc occurs ; [] |1962| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1963,column 7,is_stmt,isa 0
        B         $C$L592,UNC           ; [CPU_] |1963| 
        ; branch occurs ; [] |1963| 
$C$L591:    
	.dwpsn	file "../Source/prod.c",line 1964,column 8,is_stmt,isa 0
        MOVZ      AR4,AR5               ; [CPU_] |1964| 
$C$L592:    
        MOV       AL,AR4                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1963,column 14,is_stmt,isa 0
        CMPB      AL,#9                 ; [CPU_] |1963| 
        B         $C$L593,HIS           ; [CPU_] |1963| 
        ; branchcc occurs ; [] |1963| 
        MOVB      AL,#1                 ; [CPU_] |1963| 
        ADD       AL,AR4                ; [CPU_] |1963| 
        MOVZ      AR5,AL                ; [CPU_] |1963| 
        MOV       ACC,AR5 << 1          ; [CPU_] |1963| 
        ADDL      ACC,XAR3              ; [CPU_] |1963| 
        MOVL      XAR6,ACC              ; [CPU_] |1963| 
        MOVB      XAR0,#72              ; [CPU_] |1963| 
        MOVL      ACC,*+XAR6[AR0]       ; [CPU_] |1963| 
        MOVL      XAR0,#12              ; [CPU_] |1963| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1963| 
        MOVL      XAR0,#12              ; [CPU_] |1963| 
        ASR64     ACC:P,16              ; [CPU_] |1963| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1963| 
        MOVL      XAR0,#12              ; [CPU_] |1963| 
        ASR64     ACC:P,16              ; [CPU_] |1963| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1963| 
        MOVL      *-SP[4],P             ; [CPU_] |1963| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1963| 
        MOVL      P,*-SP[34]            ; [CPU_] |1963| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |1963| 
$C$DW$1289	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1289, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1289, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1289, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1963| 
        ; call occurs [#LL$$CMP] ; [] |1963| 
        CMPB      AL,#0                 ; [CPU_] |1963| 
        B         $C$L591,GT            ; [CPU_] |1963| 
        ; branchcc occurs ; [] |1963| 
$C$L593:    
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1967,column 6,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |1967| 
        ADDL      ACC,XAR3              ; [CPU_] |1967| 
        MOVL      XAR4,ACC              ; [CPU_] |1967| 
        MOVB      XAR0,#96              ; [CPU_] |1967| 
        MOVL      *-SP[58],ACC          ; [CPU_] |1967| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |1967| 
        MOVL      XAR0,#42              ; [CPU_] |1967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1967| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1967| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1967| 
$C$DW$1290	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1290, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1290, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1290, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1967| 
        ; call occurs [#FS$$MPY] ; [] |1967| 
        MOVL      XAR0,#36              ; [CPU_] |1967| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1967| 
        MOVL      P,*XAR1++             ; [CPU_] |1967| 
        MOVL      ACC,*XAR1++           ; [CPU_] |1967| 
$C$DW$1291	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1291, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1291, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1291, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1967| 
        ; call occurs [#LL$$TOFS] ; [] |1967| 
        MOVL      XAR0,#36              ; [CPU_] |1967| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1967| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1967| 
$C$DW$1292	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1292, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1292, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1292, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1967| 
        ; call occurs [#FS$$MPY] ; [] |1967| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1967| 
        MOVB      XAR0,#118             ; [CPU_] |1967| 
        MOVL      XAR6,*+XAR4[AR0]      ; [CPU_] |1967| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1967| 
$C$DW$1293	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1293, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1293, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1293, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1967| 
        ; call occurs [#FS$$ADD] ; [] |1967| 
        MOVL      XAR0,#38              ; [CPU_] |1967| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1967| 
        MOVL      XAR0,#38              ; [CPU_] |1967| 
        MOVL      *XAR4++,ACC           ; [CPU_] |1967| 
	.dwpsn	file "../Source/prod.c",line 1936,column 17,is_stmt,isa 0
        INC       *-SP[42]              ; [CPU_] |1936| 
	.dwpsn	file "../Source/prod.c",line 1967,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1967| 
        MOV       AL,*-SP[42]           ; [CPU_] |1967| 
	.dwpsn	file "../Source/prod.c",line 1936,column 17,is_stmt,isa 0
        CMPB      AL,#2                 ; [CPU_] |1936| 
        B         $C$L586,LT            ; [CPU_] |1936| 
        ; branchcc occurs ; [] |1936| 
	.dwpsn	file "../Source/prod.c",line 1971,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1971| 
$C$DW$1294	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1294, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1294, DW_AT_name("_shunt_switch")
	.dwattr $C$DW$1294, DW_AT_TI_call

        LCR       #_shunt_switch        ; [CPU_] |1971| 
        ; call occurs [#_shunt_switch] ; [] |1971| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1973,column 5,is_stmt,isa 0
$C$DW$1295	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1295, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1295, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1295, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |1973| 
        ; call occurs [#_maf_rst] ; [] |1973| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1976,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL199       ; [CPU_U] |1976| 
$C$DW$1296	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1296, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1296, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1296, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1976| 
        ; call occurs [#_scia_puts] ; [] |1976| 
	.dwpsn	file "../Source/prod.c",line 1978,column 5,is_stmt,isa 0
        MOVL      ACC,*-SP[26]          ; [CPU_] |1978| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1978| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1978| 
$C$DW$1297	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1297, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1297, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1297, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1978| 
        ; call occurs [#FS$$SUB] ; [] |1978| 
        MOVL      XAR0,#36              ; [CPU_] |1978| 
        MOVL      XAR4,#_tsensor        ; [CPU_U] |1978| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |1978| 
        MOVB      XAR0,#140             ; [CPU_] |1978| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1978| 
	.dwpsn	file "../Source/prod.c",line 1981,column 5,is_stmt,isa 0
        MOVB      XAR0,#144             ; [CPU_] |1981| 
        MOV       AL,#0                 ; [CPU_] |1981| 
        MOV       AH,#0                 ; [CPU_] |1981| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1981| 
	.dwpsn	file "../Source/prod.c",line 1982,column 5,is_stmt,isa 0
        MOVB      XAR0,#146             ; [CPU_] |1982| 
        MOV       ACC,#32512 << 15      ; [CPU_] |1982| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1982| 
	.dwpsn	file "../Source/prod.c",line 1983,column 5,is_stmt,isa 0
        MOVB      XAR0,#148             ; [CPU_] |1983| 
        MOV       AL,#0                 ; [CPU_] |1983| 
        MOV       AH,#0                 ; [CPU_] |1983| 
        MOVL      *+XAR4[AR0],ACC       ; [CPU_] |1983| 
	.dwpsn	file "../Source/prod.c",line 1984,column 5,is_stmt,isa 0
        MOVB      XAR0,#150             ; [CPU_] |1984| 
        MOV       AL,*-SP[52]           ; [CPU_] |1984| 
        MOV       *+XAR4[AR0],AL        ; [CPU_] |1984| 
 setc INTM
	.dwpsn	file "../Source/prod.c",line 1987,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1987| 
        MOVB      AL,#152               ; [CPU_] |1987| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1987| 
        MOV       T,*-SP[51]            ; [CPU_] |1987| 
        MOVL      XAR7,XAR4             ; [CPU_] |1987| 
        MPYU      ACC,T,AL              ; [CPU_] |1987| 
        ADDL      ACC,XAR6              ; [CPU_] |1987| 
        ADDB      ACC,#52               ; [CPU_] |1987| 
        MOVL      XAR5,ACC              ; [CPU_] |1987| 
        MOVL      XAR0,#42              ; [CPU_] |1987| 
        RPT       #151
||     PREAD     *XAR5++,*XAR7         ; [CPU_] |1987| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1987| 
        MOV       AL,*-SP[51]           ; [CPU_] |1987| 
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1990,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],AL          ; [CPU_] |1990| 
	.dwpsn	file "../Source/prod.c",line 1992,column 5,is_stmt,isa 0
$C$DW$1298	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1298, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1298, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1298, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1992| 
        ; call occurs [#_ad7738_setcal] ; [] |1992| 
        MOVL      XAR0,#78              ; [CPU_] |1992| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1992| 
	.dwpsn	file "../Source/prod.c",line 1993,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |1993| 
        MOVL      XAR1,ACC              ; [CPU_] |1993| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1993| 
$C$DW$1299	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1299, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1299, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1299, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1993| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1993| 
	.dwpsn	file "../Source/prod.c",line 1994,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1994| 
$C$DW$1300	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1300, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1300, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1300, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1994| 
        ; call occurs [#_ad7738_resetvall] ; [] |1994| 
 clrc INTM
	.dwpsn	file "../Source/prod.c",line 1997,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL208       ; [CPU_U] |1997| 
        MOV       AL,*-SP[54]           ; [CPU_] |1997| 
        MOVL      XAR0,#44              ; [CPU_] |1997| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1997| 
        MOV       *-SP[3],AL            ; [CPU_] |1997| 
        MOV       AL,*-SP[53]           ; [CPU_] |1997| 
        MOV       *-SP[4],AL            ; [CPU_] |1997| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1997| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,XAR1             ; [CPU_] |1997| 
$C$DW$1301	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1301, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1301, DW_AT_name("_sprintf")
	.dwattr $C$DW$1301, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1997| 
        ; call occurs [#_sprintf] ; [] |1997| 
        MOVL      XAR4,XAR1             ; [CPU_] |1997| 
	.dwpsn	file "../Source/prod.c",line 1999,column 5,is_stmt,isa 0
$C$DW$1302	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1302, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1302, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1302, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1999| 
        ; call occurs [#_scia_puts] ; [] |1999| 
        MOV       AL,*-SP[51]           ; [CPU_] |1999| 
	.dwpsn	file "../Source/prod.c",line 2000,column 5,is_stmt,isa 0
$C$DW$1303	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1303, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1303, DW_AT_name("_print_sensor")
	.dwattr $C$DW$1303, DW_AT_TI_call

        LCR       #_print_sensor        ; [CPU_] |2000| 
        ; call occurs [#_print_sensor] ; [] |2000| 
$C$L594:    
	.dwpsn	file "../Source/prod.c",line 2003,column 5,is_stmt,isa 0
$C$DW$1304	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1304, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1304, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1304, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |2003| 
        ; call occurs [#_lcd_clear] ; [] |2003| 
$C$L595:    
	.dwpsn	file "../Source/prod.c",line 2004,column 5,is_stmt,isa 0
$C$DW$1305	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1305, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1305, DW_AT_name("_update_units")
	.dwattr $C$DW$1305, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |2004| 
        ; call occurs [#_update_units] ; [] |2004| 
	.dwpsn	file "../Source/prod.c",line 2005,column 5,is_stmt,isa 0
        B         $C$L501,UNC           ; [CPU_] |2005| 
        ; branch occurs ; [] |2005| 
$C$L596:    
	.dwpsn	file "../Source/prod.c",line 1953,column 8,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1953| 
$C$DW$1306	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1306, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1306, DW_AT_name("_delay_us")
	.dwattr $C$DW$1306, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1953| 
        ; call occurs [#_delay_us] ; [] |1953| 
	.dwpsn	file "../Source/prod.c",line 1952,column 14,is_stmt,isa 0
        B         $C$L589,UNC           ; [CPU_] |1952| 
        ; branch occurs ; [] |1952| 
$C$L597:    
	.dwpsn	file "../Source/prod.c",line 1797,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1797| 
$C$DW$1307	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1307, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1307, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1307, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1797| 
        ; call occurs [#_scia_puts] ; [] |1797| 
	.dwpsn	file "../Source/prod.c",line 1789,column 6,is_stmt,isa 0
        B         $C$L572,UNC           ; [CPU_] |1789| 
        ; branch occurs ; [] |1789| 
$C$L598:    
	.dwpsn	file "../Source/prod.c",line 1727,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1727| 
$C$DW$1308	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1308, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1308, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1308, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1727| 
        ; call occurs [#_scia_puts] ; [] |1727| 
	.dwpsn	file "../Source/prod.c",line 1721,column 5,is_stmt,isa 0
        B         $C$L555,UNC           ; [CPU_] |1721| 
        ; branch occurs ; [] |1721| 
$C$L599:    
	.dwpsn	file "../Source/prod.c",line 1642,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL111       ; [CPU_U] |1642| 
$C$DW$1309	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1309, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1309, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1309, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1642| 
        ; call occurs [#_scia_puts] ; [] |1642| 
	.dwpsn	file "../Source/prod.c",line 1632,column 5,is_stmt,isa 0
        B         $C$L543,UNC           ; [CPU_] |1632| 
        ; branch occurs ; [] |1632| 
$C$L600:    
	.dwpsn	file "../Source/prod.c",line 1625,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL112       ; [CPU_U] |1625| 
$C$DW$1310	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1310, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1310, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1310, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1625| 
        ; call occurs [#_scia_puts] ; [] |1625| 
	.dwpsn	file "../Source/prod.c",line 1617,column 5,is_stmt,isa 0
        B         $C$L542,UNC           ; [CPU_] |1617| 
        ; branch occurs ; [] |1617| 
$C$L601:    
        MOV       AL,*-SP[53]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1339,column 6,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1339| 
        B         $C$L635,LO            ; [CPU_] |1339| 
        ; branchcc occurs ; [] |1339| 
	.dwpsn	file "C:\ti\ccsv6\tools\compiler\ti-cgt-c2000_15.12.6.LTS\include\_isfuncdef.h",line 51,column 40,is_stmt,isa 0
        MOVL      ACC,XAR4              ; [CPU_] |51| 
        MOVL      XAR0,#66              ; [CPU_] |51| 
        ADDB      ACC,#2                ; [CPU_] |51| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |51| 
        MOVZ      AR5,*+XAR4[2]         ; [CPU_] |51| 
        MOVL      XAR0,#68              ; [CPU_] |51| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |51| 
        ADDB      XAR5,#1               ; [CPU_] |51| 
        ADD       ACC,AR5               ; [CPU_] |51| 
        MOVL      XAR4,ACC              ; [CPU_] |51| 
        TBIT      *+XAR4[0],#2          ; [CPU_] |51| 
        B         $C$L635,NTC           ; [CPU_] |51| 
        ; branchcc occurs ; [] |51| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1343,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |1343| 
        CMPB      AL,#67                ; [CPU_] |1343| 
        B         $C$L602,EQ            ; [CPU_] |1343| 
        ; branchcc occurs ; [] |1343| 
        CMPB      AL,#68                ; [CPU_] |1343| 
        B         $C$L635,NEQ           ; [CPU_] |1343| 
        ; branchcc occurs ; [] |1343| 
$C$L602:    
        MOVL      XAR0,#66              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1348,column 5,is_stmt,isa 0
$C$DW$1311	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1311, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1311, DW_AT_name("_atoi")
	.dwattr $C$DW$1311, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1348| 
        ; call occurs [#_atoi] ; [] |1348| 
        CMPB      AL,#1                 ; [CPU_] |1348| 
        MOV       *-SP[52],AL           ; [CPU_] |1348| 
        B         $C$L635,NEQ           ; [CPU_] |1348| 
        ; branchcc occurs ; [] |1348| 
	.dwpsn	file "../Source/prod.c",line 1355,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1355| 
        MOV       AH,#0                 ; [CPU_] |1355| 
        MOVL      *-SP[26],ACC          ; [CPU_] |1355| 
	.dwpsn	file "../Source/prod.c",line 1356,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1356| 
        MOV       AH,#0                 ; [CPU_] |1356| 
        MOVL      *-SP[24],ACC          ; [CPU_] |1356| 
        MOV       AL,*-SP[53]           ; [CPU_] |1356| 
	.dwpsn	file "../Source/prod.c",line 1357,column 17,is_stmt,isa 0
        CMPB      AL,#3                 ; [CPU_] |1357| 
        B         $C$L606,LOS           ; [CPU_] |1357| 
        ; branchcc occurs ; [] |1357| 
        MOVL      XAR1,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1357,column 10,is_stmt,isa 0
        MOV       *-SP[41],#3           ; [CPU_] |1357| 
        ADDB      XAR1,#3               ; [CPU_] 
$C$L603:    
	.dwpsn	file "../Source/prod.c",line 1358,column 6,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1358| 
        CMPB      AL,#88                ; [CPU_] |1358| 
        B         $C$L604,NEQ           ; [CPU_] |1358| 
        ; branchcc occurs ; [] |1358| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[41]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1312	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1312, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1312, DW_AT_name("_strtod")
	.dwattr $C$DW$1312, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1360,column 7,is_stmt,isa 0
        MOVL      *-SP[26],ACC          ; [CPU_] |1360| 
        MOV       AL,*+XAR1[0]          ; [CPU_] 
$C$L604:    
	.dwpsn	file "../Source/prod.c",line 1363,column 6,is_stmt,isa 0
        CMPB      AL,#89                ; [CPU_] |1363| 
        B         $C$L605,NEQ           ; [CPU_] |1363| 
        ; branchcc occurs ; [] |1363| 
	.dwpsn	file "C:/ti/ccsv6/tools/compiler/ti-cgt-c2000_15.12.6.LTS/include/stdlib.h",line 205,column 3,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |205| 
        INC       *-SP[41]              ; [CPU_] |205| 
        MOVB      XAR5,#0               ; [CPU_] |205| 
        MOVL      XAR4,XAR1             ; [CPU_] |205| 
$C$DW$1313	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1313, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1313, DW_AT_name("_strtod")
	.dwattr $C$DW$1313, DW_AT_TI_call

        LCR       #_strtod              ; [CPU_] |205| 
        ; call occurs [#_strtod] ; [] |205| 
	.dwpsn	file "../Source/prod.c",line 1365,column 7,is_stmt,isa 0
        MOVL      *-SP[24],ACC          ; [CPU_] |1365| 
$C$L605:    
	.dwpsn	file "../Source/prod.c",line 1357,column 17,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |1357| 
        MOV       AL,*-SP[53]           ; [CPU_] |1357| 
        ADDB      XAR1,#1               ; [CPU_] |1357| 
        CMP       AL,*-SP[41]           ; [CPU_] |1357| 
        B         $C$L603,HI            ; [CPU_] |1357| 
        ; branchcc occurs ; [] |1357| 
$C$L606:    
	.dwpsn	file "../Source/prod.c",line 1370,column 6,is_stmt,isa 0
        MOVL      ACC,*-SP[24]          ; [CPU_] |1370| 
	.dwpsn	file "../Source/prod.c",line 1353,column 5,is_stmt,isa 0
        DEC       *-SP[52]              ; [CPU_] |1353| 
	.dwpsn	file "../Source/prod.c",line 1370,column 6,is_stmt,isa 0
        MOVL      *-SP[2],ACC           ; [CPU_] |1370| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1370| 
$C$DW$1314	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1314, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1314, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1314, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1370| 
        ; call occurs [#FS$$CMP] ; [] |1370| 
        CMPB      AL,#0                 ; [CPU_] |1370| 
        B         $C$L635,EQ            ; [CPU_] |1370| 
        ; branchcc occurs ; [] |1370| 
	.dwpsn	file "../Source/prod.c",line 1374,column 5,is_stmt,isa 0
$C$DW$1315	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1315, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1315, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1315, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1374| 
        ; call occurs [#_lcd_clear] ; [] |1374| 
	.dwpsn	file "../Source/prod.c",line 1375,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1375| 
        MOVL      XAR4,#$C$FSL80        ; [CPU_U] |1375| 
        MOVL      XAR0,#44              ; [CPU_] |1375| 
        ADD       AL,*-SP[52]           ; [CPU_] |1375| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1375| 
        MOVZ      AR1,AL                ; [CPU_] |1375| 
        MOV       *-SP[53],AL           ; [CPU_] |1375| 
        MOV       *-SP[3],AL            ; [CPU_] |1375| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1375| 
$C$DW$1316	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1316, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1316, DW_AT_name("_sprintf")
	.dwattr $C$DW$1316, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1375| 
        ; call occurs [#_sprintf] ; [] |1375| 
        MOVL      XAR0,#44              ; [CPU_] |1375| 
	.dwpsn	file "../Source/prod.c",line 1376,column 5,is_stmt,isa 0
        MOVB      AL,#20                ; [CPU_] |1376| 
	.dwpsn	file "../Source/prod.c",line 1375,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1375| 
	.dwpsn	file "../Source/prod.c",line 1376,column 5,is_stmt,isa 0
$C$DW$1317	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1317, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1317, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1317, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1376| 
        ; call occurs [#_lcd_puts] ; [] |1376| 
	.dwpsn	file "../Source/prod.c",line 1377,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL209       ; [CPU_U] |1377| 
        MOVL      XAR0,#44              ; [CPU_] |1377| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1377| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1377| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1377| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1377| 
$C$DW$1318	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1318, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1318, DW_AT_name("_sprintf")
	.dwattr $C$DW$1318, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1377| 
        ; call occurs [#_sprintf] ; [] |1377| 
        MOVL      XAR0,#44              ; [CPU_] |1377| 
	.dwpsn	file "../Source/prod.c",line 1378,column 5,is_stmt,isa 0
        MOVB      AL,#40                ; [CPU_] |1378| 
	.dwpsn	file "../Source/prod.c",line 1377,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1377| 
	.dwpsn	file "../Source/prod.c",line 1378,column 5,is_stmt,isa 0
$C$DW$1319	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1319, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1319, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1319, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1378| 
        ; call occurs [#_lcd_puts] ; [] |1378| 
	.dwpsn	file "../Source/prod.c",line 1379,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL210       ; [CPU_U] |1379| 
        MOVL      XAR0,#44              ; [CPU_] |1379| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1379| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1379| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1379| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1379| 
$C$DW$1320	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1320, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1320, DW_AT_name("_sprintf")
	.dwattr $C$DW$1320, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1379| 
        ; call occurs [#_sprintf] ; [] |1379| 
        MOVL      XAR0,#44              ; [CPU_] |1379| 
	.dwpsn	file "../Source/prod.c",line 1380,column 5,is_stmt,isa 0
        MOVB      AL,#60                ; [CPU_] |1380| 
	.dwpsn	file "../Source/prod.c",line 1379,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1379| 
	.dwpsn	file "../Source/prod.c",line 1380,column 5,is_stmt,isa 0
$C$DW$1321	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1321, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1321, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1321, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1380| 
        ; call occurs [#_lcd_puts] ; [] |1380| 
	.dwpsn	file "../Source/prod.c",line 1382,column 5,is_stmt,isa 0
        MOVL      XAR0,#38              ; [CPU_] |1382| 
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1382| 
        MOVL      ACC,*-SP[60]          ; [CPU_] |1382| 
        ADDB      ACC,#1                ; [CPU_] |1382| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1382| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |1382| 
        CMPB      AL,#67                ; [CPU_] |1382| 
        B         $C$L629,EQ            ; [CPU_] |1382| 
        ; branchcc occurs ; [] |1382| 
        CMPB      AL,#68                ; [CPU_] |1382| 
        B         $C$L635,NEQ           ; [CPU_] |1382| 
        ; branchcc occurs ; [] |1382| 
	.dwpsn	file "../Source/prod.c",line 1435,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1435| 
        MOV       AH,#16672             ; [CPU_] |1435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1435| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1435| 
$C$DW$1322	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1322, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1322, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1322, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1435| 
        ; call occurs [#FS$$CMP] ; [] |1435| 
        CMPB      AL,#0                 ; [CPU_] |1435| 
        B         $C$L628,GT            ; [CPU_] |1435| 
        ; branchcc occurs ; [] |1435| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1435| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1435| 
$C$DW$1323	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1323, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1323, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1323, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1435| 
        ; call occurs [#FS$$CMP] ; [] |1435| 
        CMPB      AL,#0                 ; [CPU_] |1435| 
        B         $C$L628,LT            ; [CPU_] |1435| 
        ; branchcc occurs ; [] |1435| 
        MOV       AL,#0                 ; [CPU_] |1435| 
        MOV       AH,#16672             ; [CPU_] |1435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1435| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1435| 
$C$DW$1324	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1324, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1324, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1324, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1435| 
        ; call occurs [#FS$$CMP] ; [] |1435| 
        CMPB      AL,#0                 ; [CPU_] |1435| 
        B         $C$L628,GT            ; [CPU_] |1435| 
        ; branchcc occurs ; [] |1435| 
        SETC      SXM                   ; [CPU_] 
        MOV       ACC,#-32192 << 15     ; [CPU_] |1435| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1435| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1435| 
$C$DW$1325	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1325, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1325, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1325, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1435| 
        ; call occurs [#FS$$CMP] ; [] |1435| 
        CMPB      AL,#0                 ; [CPU_] |1435| 
        B         $C$L628,LT            ; [CPU_] |1435| 
        ; branchcc occurs ; [] |1435| 
	.dwpsn	file "../Source/prod.c",line 1443,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL211       ; [CPU_U] |1443| 
        MOVB      AL,#0                 ; [CPU_] |1443| 
$C$DW$1326	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1326, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1326, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1326, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1443| 
        ; call occurs [#_lcd_puts] ; [] |1443| 
	.dwpsn	file "../Source/prod.c",line 1445,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL212       ; [CPU_U] |1445| 
        MOVL      XAR0,#44              ; [CPU_] |1445| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1445| 
        MOV       *-SP[3],AR1           ; [CPU_] |1445| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1445| 
        MOVL      XAR4,XAR1             ; [CPU_] |1445| 
$C$DW$1327	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1327, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1327, DW_AT_name("_sprintf")
	.dwattr $C$DW$1327, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1445| 
        ; call occurs [#_sprintf] ; [] |1445| 
        MOVL      XAR4,XAR1             ; [CPU_] |1445| 
	.dwpsn	file "../Source/prod.c",line 1448,column 6,is_stmt,isa 0
$C$DW$1328	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1328, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1328, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1328, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1448| 
        ; call occurs [#_scia_puts] ; [] |1448| 
	.dwpsn	file "../Source/prod.c",line 1449,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL213       ; [CPU_U] |1449| 
$C$DW$1329	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1329, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1329, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1329, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1449| 
        ; call occurs [#_scia_puts] ; [] |1449| 
	.dwpsn	file "../Source/prod.c",line 1450,column 6,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1450| 
$C$DW$1330	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1330, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1330, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1330, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1450| 
        ; call occurs [#_dac_setmode] ; [] |1450| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVB      AL,#12                ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        MOV       T,*-SP[52]            ; [CPU_] 
        MPYU      ACC,T,AL              ; [CPU_] 
        SUBB      XAR4,#37              ; [CPU_U] 
        ADDL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1553 << 1        ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
        MOV       AL,*-SP[52]           ; [CPU_] 
        MOV       *-SP[42],AL           ; [CPU_] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOV       *-SP[41],#1           ; [CPU_] 
        MOVL      *-SP[60],ACC          ; [CPU_] 
        SUBB      XAR4,#26              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
$C$L607:    
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1453,column 7,is_stmt,isa 0
        MOVL      XAR1,*+XAR4[0]        ; [CPU_] |1453| 
	.dwpsn	file "../Source/prod.c",line 1454,column 8,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1454| 
        MOV       AH,#0                 ; [CPU_] |1454| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1454| 
        MOVL      ACC,XAR1              ; [CPU_] |1454| 
$C$DW$1331	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1331, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1331, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1331, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1454| 
        ; call occurs [#FS$$CMP] ; [] |1454| 
        CMPB      AL,#0                 ; [CPU_] |1454| 
        B         $C$L608,GEQ           ; [CPU_] |1454| 
        ; branchcc occurs ; [] |1454| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1454| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1454| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1454| 
        B         $C$L609,UNC           ; [CPU_] |1454| 
        ; branch occurs ; [] |1454| 
$C$L608:    
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1454| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1454| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1454| 
$C$L609:    
$C$DW$1332	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1332, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1332, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1332, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1454| 
        ; call occurs [#FS$$MPY] ; [] |1454| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1454| 
        MOVL      XAR6,*+XAR4[4]        ; [CPU_] |1454| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1454| 
$C$DW$1333	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1333, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1333, DW_AT_name("FS$$ADD")
	.dwattr $C$DW$1333, DW_AT_TI_call

        LCR       #FS$$ADD              ; [CPU_] |1454| 
        ; call occurs [#FS$$ADD] ; [] |1454| 
$C$DW$1334	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1334, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1334, DW_AT_name("FS$$TOLL")
	.dwattr $C$DW$1334, DW_AT_TI_call

        LCR       #FS$$TOLL             ; [CPU_] |1454| 
        ; call occurs [#FS$$TOLL] ; [] |1454| 
	.dwpsn	file "../Source/prod.c",line 1460,column 7,is_stmt,isa 0
        CMP64     ACC:P                 ; [CPU_] |1460| 
	.dwpsn	file "../Source/prod.c",line 1454,column 8,is_stmt,isa 0
        MOVL      *-SP[34],P            ; [CPU_] |1454| 
        MOVL      *-SP[32],ACC          ; [CPU_] |1454| 
	.dwpsn	file "../Source/prod.c",line 1460,column 7,is_stmt,isa 0
        MOVL      P,*-SP[34]            ; [CPU_] |1460| 
        CMP64     ACC:P                 ; [CPU_] |1460| 
        B         $C$L611,LEQ           ; [CPU_] |1460| 
        ; branchcc occurs ; [] |1460| 
	.dwpsn	file "../Source/prod.c",line 1462,column 14,is_stmt,isa 0
        MOVL      XAR4,#65535           ; [CPU_U] |1462| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |1462| 
        MOV       *-SP[2],#0            ; [CPU_] |1462| 
        MOVL      P,*-SP[34]            ; [CPU_] |1462| 
        MOV       *-SP[1],#0            ; [CPU_] |1462| 
        MOVL      ACC,*-SP[32]          ; [CPU_] |1462| 
$C$DW$1335	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1335, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1335, DW_AT_name("LL$$CMP")
	.dwattr $C$DW$1335, DW_AT_TI_call

        FFC       XAR7,#LL$$CMP         ; [CPU_] |1462| 
        ; call occurs [#LL$$CMP] ; [] |1462| 
        CMPB      AL,#0                 ; [CPU_] |1462| 
        B         $C$L610,GEQ           ; [CPU_] |1462| 
        ; branchcc occurs ; [] |1462| 
	.dwpsn	file "../Source/prod.c",line 1465,column 8,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1465| 
        MOV       AL,*-SP[34]           ; [CPU_] |1465| 
        MOV       *+XAR4[0],AL          ; [CPU_] |1465| 
        B         $C$L612,UNC           ; [CPU_] |1465| 
        ; branch occurs ; [] |1465| 
$C$L610:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1463,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#65535      ; [CPU_] |1463| 
	.dwpsn	file "../Source/prod.c",line 1464,column 7,is_stmt,isa 0
        B         $C$L612,UNC           ; [CPU_] |1464| 
        ; branch occurs ; [] |1464| 
$C$L611:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1461,column 8,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1461| 
$C$L612:    
	.dwpsn	file "../Source/prod.c",line 1468,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL214       ; [CPU_U] |1468| 
        MOVL      XAR0,#44              ; [CPU_] |1468| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1468| 
        MOVL      *-SP[4],XAR1          ; [CPU_] |1468| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1468| 
        MOVL      XAR4,XAR1             ; [CPU_] |1468| 
$C$DW$1336	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1336, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1336, DW_AT_name("_sprintf")
	.dwattr $C$DW$1336, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1468| 
        ; call occurs [#_sprintf] ; [] |1468| 
        MOVL      XAR4,XAR1             ; [CPU_] |1468| 
	.dwpsn	file "../Source/prod.c",line 1469,column 7,is_stmt,isa 0
$C$DW$1337	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1337, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1337, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1337, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1469| 
        ; call occurs [#_scia_puts] ; [] |1469| 
	.dwpsn	file "../Source/prod.c",line 1470,column 7,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |1470| 
        MOV       *+XAR1[0],#0          ; [CPU_] |1470| 
$C$L613:    
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1473,column 8,is_stmt,isa 0
        MOV       AH,*-SP[42]           ; [CPU_] |1473| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1473| 
$C$DW$1338	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1338, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1338, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1338, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1473| 
        ; call occurs [#_mcbsp_xmit] ; [] |1473| 
	.dwpsn	file "../Source/prod.c",line 1474,column 8,is_stmt,isa 0
$C$DW$1339	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1339, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1339, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1339, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1474| 
        ; call occurs [#_latch_dac] ; [] |1474| 
	.dwpsn	file "../Source/prod.c",line 1477,column 9,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1477| 
        MOVL      XAR4,XAR1             ; [CPU_] |1477| 
        MOVL      XAR5,XAR1             ; [CPU_] |1477| 
$C$DW$1340	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1340, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1340, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1340, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1477| 
        ; call occurs [#_scia_getparam] ; [] |1477| 
        MOVW      DP,#_cmdbuff$2        ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 1479,column 17,is_stmt,isa 0
        MOV       AL,@_cmdbuff$2        ; [CPU_] |1479| 
        CMPB      AL,#45                ; [CPU_] |1479| 
        B         $C$L614,EQ            ; [CPU_] |1479| 
        ; branchcc occurs ; [] |1479| 
        CMPB      AL,#83                ; [CPU_] |1479| 
        B         $C$L619,EQ            ; [CPU_] |1479| 
        ; branchcc occurs ; [] |1479| 
$C$L614:    
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1486,column 8,is_stmt,isa 0
$C$DW$1341	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1341, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1341, DW_AT_name("_atoi")
	.dwattr $C$DW$1341, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1486| 
        ; call occurs [#_atoi] ; [] |1486| 
        CMPB      AL,#0                 ; [CPU_] |1486| 
	.dwpsn	file "../Source/prod.c",line 1488,column 9,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1488| 
	.dwpsn	file "../Source/prod.c",line 1491,column 8,is_stmt,isa 0
        MOV       AH,*+XAR1[0]          ; [CPU_] |1491| 
        CMPB      AH,#43                ; [CPU_] |1491| 
        B         $C$L615,EQ            ; [CPU_] |1491| 
        ; branchcc occurs ; [] |1491| 
	.dwpsn	file "../Source/prod.c",line 1498,column 15,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1498| 
        B         $C$L618,NEQ           ; [CPU_] |1498| 
        ; branchcc occurs ; [] |1498| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1500,column 9,is_stmt,isa 0
        CMP       AL,*+XAR4[0]          ; [CPU_] |1500| 
        B         $C$L616,HI            ; [CPU_] |1500| 
        ; branchcc occurs ; [] |1500| 
	.dwpsn	file "../Source/prod.c",line 1501,column 10,is_stmt,isa 0
        SUB       *+XAR4[0],AL          ; [CPU_] |1501| 
	.dwpsn	file "../Source/prod.c",line 1502,column 9,is_stmt,isa 0
        B         $C$L618,UNC           ; [CPU_] |1502| 
        ; branch occurs ; [] |1502| 
$C$L615:    
	.dwpsn	file "../Source/prod.c",line 1493,column 9,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |1493| 
        MOV       AH,#65535             ; [CPU_] |1493| 
        SUB       AH,AL                 ; [CPU_] |1493| 
        CMP       AH,*+XAR4[0]          ; [CPU_] |1493| 
        B         $C$L617,HIS           ; [CPU_] |1493| 
        ; branchcc occurs ; [] |1493| 
$C$L616:    
	.dwpsn	file "../Source/prod.c",line 1496,column 10,is_stmt,isa 0
        MOV       *+XAR1[0],#0          ; [CPU_] |1496| 
        B         $C$L618,UNC           ; [CPU_] |1496| 
        ; branch occurs ; [] |1496| 
$C$L617:    
	.dwpsn	file "../Source/prod.c",line 1494,column 10,is_stmt,isa 0
        ADD       *+XAR4[0],AL          ; [CPU_] |1494| 
$C$L618:    
	.dwpsn	file "../Source/prod.c",line 1472,column 7,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1472| 
        B         $C$L613,NEQ           ; [CPU_] |1472| 
        ; branchcc occurs ; [] |1472| 
$C$L619:    
	.dwpsn	file "../Source/prod.c",line 1508,column 7,is_stmt,isa 0
        MOVL      XAR7,*-SP[60]         ; [CPU_] |1508| 
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1508| 
        MOVL      XAR0,#44              ; [CPU_] |1508| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1508| 
        MOV       AL,*XAR7              ; [CPU_] |1508| 
        MOV       *-SP[3],AL            ; [CPU_] |1508| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1508| 
        ADDB      XAR7,#1               ; [CPU_] |1508| 
        MOVL      *-SP[60],XAR7         ; [CPU_] |1508| 
        MOVL      XAR4,XAR1             ; [CPU_] |1508| 
$C$DW$1342	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1342, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1342, DW_AT_name("_sprintf")
	.dwattr $C$DW$1342, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1508| 
        ; call occurs [#_sprintf] ; [] |1508| 
        MOVL      XAR4,XAR1             ; [CPU_] |1508| 
	.dwpsn	file "../Source/prod.c",line 1509,column 7,is_stmt,isa 0
$C$DW$1343	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1343, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1343, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1343, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1509| 
        ; call occurs [#_scia_puts] ; [] |1509| 
	.dwpsn	file "../Source/prod.c",line 1452,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[41]          ; [CPU_] |1452| 
	.dwpsn	file "../Source/prod.c",line 1509,column 7,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1509| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1509| 
	.dwpsn	file "../Source/prod.c",line 1452,column 18,is_stmt,isa 0
        MOVL      XAR0,#42              ; [CPU_] |1452| 
        SUBB      XAR6,#1               ; [CPU_U] |1452| 
        ADDB      ACC,#2                ; [CPU_] |1452| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1452| 
        MOVZ      AR0,AR6               ; [CPU_] |1452| 
        MOV       *-SP[41],AR6          ; [CPU_] |1452| 
        CMP       AR0,#-1               ; [CPU_] |1452| 
        B         $C$L607,NEQ           ; [CPU_] |1452| 
        ; branchcc occurs ; [] |1452| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1512,column 6,is_stmt,isa 0
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1512| 
$C$DW$1344	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1344, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1344, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1344, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |1512| 
        ; call occurs [#FS$$TOU] ; [] |1512| 
        MOV       *-SP[35],AL           ; [CPU_] |1512| 
	.dwpsn	file "../Source/prod.c",line 1514,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL216       ; [CPU_U] |1514| 
$C$DW$1345	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1345, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1345, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1345, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1514| 
        ; call occurs [#_scia_puts] ; [] |1514| 
	.dwpsn	file "../Source/prod.c",line 1515,column 6,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1515| 
        MOVL      *-SP[60],XAR4         ; [CPU_] |1515| 
        MOV       *+XAR4[0],#0          ; [CPU_] |1515| 
$C$L620:    
	.dwpsn	file "../Source/prod.c",line 1518,column 7,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |1518| 
        MOV       AH,*-SP[42]           ; [CPU_] |1518| 
$C$DW$1346	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1346, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1346, DW_AT_name("_mcbsp_xmit")
	.dwattr $C$DW$1346, DW_AT_TI_call

        LCR       #_mcbsp_xmit          ; [CPU_] |1518| 
        ; call occurs [#_mcbsp_xmit] ; [] |1518| 
	.dwpsn	file "../Source/prod.c",line 1519,column 7,is_stmt,isa 0
$C$DW$1347	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1347, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1347, DW_AT_name("_latch_dac")
	.dwattr $C$DW$1347, DW_AT_TI_call

        LCR       #_latch_dac           ; [CPU_] |1519| 
        ; call occurs [#_latch_dac] ; [] |1519| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1519| 
	.dwpsn	file "../Source/prod.c",line 1522,column 8,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1522| 
        MOVL      XAR4,XAR5             ; [CPU_] |1522| 
$C$DW$1348	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1348, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1348, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1348, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1522| 
        ; call occurs [#_scia_getparam] ; [] |1522| 
	.dwpsn	file "../Source/prod.c",line 1527,column 8,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1527| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |1527| 
        CMPB      AL,#83                ; [CPU_] |1527| 
        B         $C$L625,EQ            ; [CPU_] |1527| 
        ; branchcc occurs ; [] |1527| 
        MOVL      XAR0,#38              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1530,column 7,is_stmt,isa 0
$C$DW$1349	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1349, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1349, DW_AT_name("_atoi")
	.dwattr $C$DW$1349, DW_AT_TI_call

        LCR       #_atoi                ; [CPU_] |1530| 
        ; call occurs [#_atoi] ; [] |1530| 
        CMPB      AL,#0                 ; [CPU_] |1530| 
	.dwpsn	file "../Source/prod.c",line 1535,column 7,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |1535| 
	.dwpsn	file "../Source/prod.c",line 1532,column 8,is_stmt,isa 0
        MOVB      AL,#1,EQ              ; [CPU_] |1532| 
	.dwpsn	file "../Source/prod.c",line 1535,column 7,is_stmt,isa 0
        MOV       AH,*+XAR4[0]          ; [CPU_] |1535| 
        CMPB      AH,#43                ; [CPU_] |1535| 
        B         $C$L621,EQ            ; [CPU_] |1535| 
        ; branchcc occurs ; [] |1535| 
	.dwpsn	file "../Source/prod.c",line 1542,column 14,is_stmt,isa 0
        CMPB      AH,#45                ; [CPU_] |1542| 
        B         $C$L624,NEQ           ; [CPU_] |1542| 
        ; branchcc occurs ; [] |1542| 
	.dwpsn	file "../Source/prod.c",line 1544,column 8,is_stmt,isa 0
        CMP       AL,*-SP[35]           ; [CPU_] |1544| 
        B         $C$L622,HI            ; [CPU_] |1544| 
        ; branchcc occurs ; [] |1544| 
	.dwpsn	file "../Source/prod.c",line 1545,column 9,is_stmt,isa 0
        SUB       *-SP[35],AL           ; [CPU_] |1545| 
	.dwpsn	file "../Source/prod.c",line 1546,column 8,is_stmt,isa 0
        B         $C$L624,UNC           ; [CPU_] |1546| 
        ; branch occurs ; [] |1546| 
$C$L621:    
	.dwpsn	file "../Source/prod.c",line 1537,column 8,is_stmt,isa 0
        MOV       AH,#65535             ; [CPU_] |1537| 
        SUB       AH,AL                 ; [CPU_] |1537| 
        CMP       AH,*-SP[35]           ; [CPU_] |1537| 
        B         $C$L623,HIS           ; [CPU_] |1537| 
        ; branchcc occurs ; [] |1537| 
$C$L622:    
	.dwpsn	file "../Source/prod.c",line 1540,column 9,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |1540| 
        B         $C$L624,UNC           ; [CPU_] |1540| 
        ; branch occurs ; [] |1540| 
$C$L623:    
	.dwpsn	file "../Source/prod.c",line 1538,column 9,is_stmt,isa 0
        ADD       *-SP[35],AL           ; [CPU_] |1538| 
$C$L624:    
	.dwpsn	file "../Source/prod.c",line 1517,column 6,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |1517| 
        B         $C$L620,NEQ           ; [CPU_] |1517| 
        ; branchcc occurs ; [] |1517| 
$C$L625:    
	.dwpsn	file "../Source/prod.c",line 1552,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL215       ; [CPU_U] |1552| 
        MOV       AL,*-SP[35]           ; [CPU_] |1552| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1552| 
        MOV       *-SP[3],AL            ; [CPU_] |1552| 
        MOVL      XAR4,XAR1             ; [CPU_] |1552| 
$C$DW$1350	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1350, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1350, DW_AT_name("_sprintf")
	.dwattr $C$DW$1350, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1552| 
        ; call occurs [#_sprintf] ; [] |1552| 
        MOVL      XAR4,XAR1             ; [CPU_] |1552| 
	.dwpsn	file "../Source/prod.c",line 1553,column 6,is_stmt,isa 0
$C$DW$1351	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1351, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1351, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1351, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1553| 
        ; call occurs [#_scia_puts] ; [] |1553| 
	.dwpsn	file "../Source/prod.c",line 1556,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |1556| 
        MOV       AH,#0                 ; [CPU_] |1556| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1556| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1556| 
$C$DW$1352	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1352, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1352, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1352, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |1556| 
        ; call occurs [#FS$$CMP] ; [] |1556| 
        CMPB      AL,#0                 ; [CPU_] |1556| 
        B         $C$L626,LT            ; [CPU_] |1556| 
        ; branchcc occurs ; [] |1556| 
	.dwpsn	file "../Source/prod.c",line 1562,column 7,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |1562| 
$C$DW$1353	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1353, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1353, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1353, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1562| 
        ; call occurs [#U$$TOFS] ; [] |1562| 
        MOVL      XAR1,ACC              ; [CPU_] |1562| 
        MOV       AL,*-SP[37]           ; [CPU_] |1562| 
$C$DW$1354	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1354, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1354, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1354, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1562| 
        ; call occurs [#U$$TOFS] ; [] |1562| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1562| 
$C$DW$1355	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1355, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1355, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1355, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1562| 
        ; call occurs [#FS$$SUB] ; [] |1562| 
        MOVL      XAR6,*-SP[26]         ; [CPU_] |1562| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1562| 
$C$DW$1356	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1356, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1356, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1356, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1562| 
        ; call occurs [#FS$$DIV] ; [] |1562| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1562| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1562| 
	.dwpsn	file "../Source/prod.c",line 1564,column 7,is_stmt,isa 0
        MOV       AL,*-SP[36]           ; [CPU_] |1564| 
$C$DW$1357	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1357, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1357, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1357, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1564| 
        ; call occurs [#U$$TOFS] ; [] |1564| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1564| 
$C$DW$1358	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1358, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1358, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1358, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1564| 
        ; call occurs [#FS$$SUB] ; [] |1564| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1564| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1564| 
$C$DW$1359	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1359, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1359, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1359, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1564| 
        ; call occurs [#FS$$DIV] ; [] |1564| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1564| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1564| 
        B         $C$L627,UNC           ; [CPU_] |1564| 
        ; branch occurs ; [] |1564| 
$C$L626:    
	.dwpsn	file "../Source/prod.c",line 1557,column 7,is_stmt,isa 0
        MOV       AL,*-SP[35]           ; [CPU_] |1557| 
$C$DW$1360	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1360, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1360, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1360, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1557| 
        ; call occurs [#U$$TOFS] ; [] |1557| 
        MOVL      XAR1,ACC              ; [CPU_] |1557| 
        MOV       AL,*-SP[37]           ; [CPU_] |1557| 
$C$DW$1361	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1361, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1361, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1361, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1557| 
        ; call occurs [#U$$TOFS] ; [] |1557| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1557| 
$C$DW$1362	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1362, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1362, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1362, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1557| 
        ; call occurs [#FS$$SUB] ; [] |1557| 
        MOVL      XAR6,*-SP[26]         ; [CPU_] |1557| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1557| 
$C$DW$1363	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1363, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1363, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1363, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1557| 
        ; call occurs [#FS$$DIV] ; [] |1557| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1557| 
        MOVL      *+XAR4[2],ACC         ; [CPU_] |1557| 
	.dwpsn	file "../Source/prod.c",line 1559,column 7,is_stmt,isa 0
        MOV       AL,*-SP[36]           ; [CPU_] |1559| 
$C$DW$1364	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1364, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1364, DW_AT_name("U$$TOFS")
	.dwattr $C$DW$1364, DW_AT_TI_call

        LCR       #U$$TOFS              ; [CPU_] |1559| 
        ; call occurs [#U$$TOFS] ; [] |1559| 
        MOVL      *-SP[2],XAR1          ; [CPU_] |1559| 
$C$DW$1365	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1365, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1365, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1365, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1559| 
        ; call occurs [#FS$$SUB] ; [] |1559| 
        MOVL      XAR6,*-SP[24]         ; [CPU_] |1559| 
        MOVL      *-SP[2],XAR6          ; [CPU_] |1559| 
$C$DW$1366	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1366, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1366, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1366, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1559| 
        ; call occurs [#FS$$DIV] ; [] |1559| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1559| 
        MOVL      *+XAR4[0],ACC         ; [CPU_] |1559| 
$C$L627:    
	.dwpsn	file "../Source/prod.c",line 1567,column 6,is_stmt,isa 0
        MOVL      *+XAR4[4],XAR1        ; [CPU_] |1567| 
	.dwpsn	file "../Source/prod.c",line 1569,column 6,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |1569| 
$C$DW$1367	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1367, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1367, DW_AT_name("_dac_setmode")
	.dwattr $C$DW$1367, DW_AT_TI_call

        LCR       #_dac_setmode         ; [CPU_] |1569| 
        ; call occurs [#_dac_setmode] ; [] |1569| 
	.dwpsn	file "../Source/prod.c",line 1571,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL217       ; [CPU_U] |1571| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1571| 
        MOVL      XAR4,*-SP[58]         ; [CPU_] |1571| 
        MOV       AL,*-SP[53]           ; [CPU_] |1571| 
        MOV       *-SP[3],AL            ; [CPU_] |1571| 
        MOVL      XAR0,#44              ; [CPU_] |1571| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |1571| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1571| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1571| 
        MOVL      *-SP[8],ACC           ; [CPU_] |1571| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |1571| 
        MOVL      *-SP[10],ACC          ; [CPU_] |1571| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1571| 
        MOVL      XAR4,XAR1             ; [CPU_] |1571| 
$C$DW$1368	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1368, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1368, DW_AT_name("_sprintf")
	.dwattr $C$DW$1368, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1571| 
        ; call occurs [#_sprintf] ; [] |1571| 
        MOVL      XAR4,XAR1             ; [CPU_] |1571| 
	.dwpsn	file "../Source/prod.c",line 1575,column 6,is_stmt,isa 0
$C$DW$1369	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1369, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1369, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1369, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1575| 
        ; call occurs [#_scia_puts] ; [] |1575| 
	.dwpsn	file "../Source/prod.c",line 1577,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL218       ; [CPU_U] |1577| 
	.dwpsn	file "../Source/prod.c",line 1578,column 6,is_stmt,isa 0
        B         $C$L633,UNC           ; [CPU_] |1578| 
        ; branch occurs ; [] |1578| 
$C$L628:    
	.dwpsn	file "../Source/prod.c",line 1437,column 7,is_stmt,isa 0
$C$DW$1370	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1370, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1370, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1370, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1437| 
        ; call occurs [#_lcd_clear] ; [] |1437| 
	.dwpsn	file "../Source/prod.c",line 1438,column 7,is_stmt,isa 0
$C$DW$1371	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1371, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1371, DW_AT_name("_update_units")
	.dwattr $C$DW$1371, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1438| 
        ; call occurs [#_update_units] ; [] |1438| 
	.dwpsn	file "../Source/prod.c",line 1439,column 7,is_stmt,isa 0
        B         $C$L635,UNC           ; [CPU_] |1439| 
        ; branch occurs ; [] |1439| 
$C$L629:    
	.dwpsn	file "../Source/prod.c",line 1387,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL79        ; [CPU_U] |1387| 
        MOVB      AL,#0                 ; [CPU_] |1387| 
$C$DW$1372	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1372, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1372, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1372, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |1387| 
        ; call occurs [#_lcd_puts] ; [] |1387| 
	.dwpsn	file "../Source/prod.c",line 1389,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL219       ; [CPU_U] |1389| 
        MOVL      XAR0,#44              ; [CPU_] |1389| 
        MOV       AL,*-SP[53]           ; [CPU_] |1389| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1389| 
        MOV       *-SP[3],AL            ; [CPU_] |1389| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1389| 
        MOVL      XAR4,XAR1             ; [CPU_] |1389| 
$C$DW$1373	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1373, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1373, DW_AT_name("_sprintf")
	.dwattr $C$DW$1373, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1389| 
        ; call occurs [#_sprintf] ; [] |1389| 
        MOVL      XAR4,XAR1             ; [CPU_] |1389| 
	.dwpsn	file "../Source/prod.c",line 1392,column 6,is_stmt,isa 0
$C$DW$1374	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1374, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1374, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1374, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1392| 
        ; call occurs [#_scia_puts] ; [] |1392| 
        MOVZ      AR4,SP                ; [CPU_] 
        SUBB      XAR4,#26              ; [CPU_U] 
        MOVU      ACC,AR4               ; [CPU_] 
        MOVZ      AR4,SP                ; [CPU_] 
        MOV       *-SP[41],#1           ; [CPU_] 
        MOVL      XAR0,#42              ; [CPU_] 
        MOVL      *+FP[AR0],ACC         ; [CPU_] 
        SUBB      XAR4,#34              ; [CPU_U] 
        MOVZ      AR1,AR4               ; [CPU_] 
$C$L630:    
	.dwpsn	file "../Source/prod.c",line 1405,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL220       ; [CPU_U] |1405| 
        MOVL      XAR0,#42              ; [CPU_] |1405| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1405| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1405| 
        MOVL      XAR0,#44              ; [CPU_] |1405| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1405| 
        MOVL      *-SP[4],ACC           ; [CPU_] |1405| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1405| 
$C$DW$1375	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1375, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1375, DW_AT_name("_sprintf")
	.dwattr $C$DW$1375, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1405| 
        ; call occurs [#_sprintf] ; [] |1405| 
        MOVL      XAR0,#44              ; [CPU_] |1405| 
	.dwpsn	file "../Source/prod.c",line 1408,column 7,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |1408| 
        MOVL      XAR5,*-SP[60]         ; [CPU_] |1408| 
	.dwpsn	file "../Source/prod.c",line 1405,column 7,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |1405| 
	.dwpsn	file "../Source/prod.c",line 1408,column 7,is_stmt,isa 0
$C$DW$1376	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1376, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1376, DW_AT_name("_scia_getparam")
	.dwattr $C$DW$1376, DW_AT_TI_call

        LCR       #_scia_getparam       ; [CPU_] |1408| 
        ; call occurs [#_scia_getparam] ; [] |1408| 
	.dwpsn	file "../Source/prod.c",line 1409,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL82        ; [CPU_U] |1409| 
$C$DW$1377	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1377, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1377, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1377, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1409| 
        ; call occurs [#_scia_puts] ; [] |1409| 
	.dwpsn	file "../Source/prod.c",line 1412,column 7,is_stmt,isa 0
        MOVL      XAR4,#10000           ; [CPU_U] |1412| 
	.dwpsn	file "../Source/prod.c",line 1411,column 7,is_stmt,isa 0
        ZAPA      ; [CPU_] |1411| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1411| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1411| 
	.dwpsn	file "../Source/prod.c",line 1413,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1413| 
	.dwpsn	file "../Source/prod.c",line 1412,column 7,is_stmt,isa 0
        MOVL      *-SP[40],XAR4         ; [CPU_] |1412| 
	.dwpsn	file "../Source/prod.c",line 1413,column 7,is_stmt,isa 0
        SUBL      *-SP[40],ACC          ; [CPU_] |1413| 
        MOVB      ACC,#0                ; [CPU_] |1413| 
        SUBB      ACC,#1                ; [CPU_] |1413| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1413| 
        B         $C$L632,EQ            ; [CPU_] |1413| 
        ; branchcc occurs ; [] |1413| 
        MOV       AL,*-SP[52]           ; [CPU_] 
        CLRC      SXM                   ; [CPU_] 
        MOV       ACC,AL << 1           ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
$C$L631:    
	.dwpsn	file "../Source/prod.c",line 1414,column 15,is_stmt,isa 0
$C$DW$1378	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1378, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1378, DW_AT_name("_ad7738_rawrdy")
	.dwattr $C$DW$1378, DW_AT_TI_call

        LCR       #_ad7738_rawrdy       ; [CPU_] |1414| 
        ; call occurs [#_ad7738_rawrdy] ; [] |1414| 
        CMPB      AL,#0                 ; [CPU_] |1414| 
        B         $C$L634,EQ            ; [CPU_] |1414| 
        ; branchcc occurs ; [] |1414| 
	.dwpsn	file "../Source/prod.c",line 1417,column 8,is_stmt,isa 0
$C$DW$1379	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1379, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1379, DW_AT_name("_ad7738_getraw")
	.dwattr $C$DW$1379, DW_AT_TI_call

        LCR       #_ad7738_getraw       ; [CPU_] |1417| 
        ; call occurs [#_ad7738_getraw] ; [] |1417| 
	.dwpsn	file "../Source/prod.c",line 1418,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |1418| 
        ADDL      XAR4,ACC              ; [CPU_] |1418| 
        MOVL      XAR0,#10              ; [CPU_] |1418| 
        MOVL      P,*+FP[AR0]           ; [CPU_] |1418| 
        MOVL      XAR0,#10              ; [CPU_] |1418| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |1418| 
        ASR64     ACC:P,16              ; [CPU_] |1418| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1418| 
        MOVL      XAR0,#10              ; [CPU_] |1418| 
        ASR64     ACC:P,16              ; [CPU_] |1418| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1418| 
        MOVL      XAR0,#10              ; [CPU_] |1418| 
        ADDUL     P,*+XAR1[0]           ; [CPU_] |1418| 
        MOVL      *+FP[AR0],P           ; [CPU_] |1418| 
        ADDCL     ACC,*+XAR1[2]         ; [CPU_] |1418| 
        MOVL      *+XAR1[0],P           ; [CPU_] |1418| 
        MOVL      *+XAR1[2],ACC         ; [CPU_] |1418| 
	.dwpsn	file "../Source/prod.c",line 1413,column 7,is_stmt,isa 0
        MOVB      ACC,#1                ; [CPU_] |1413| 
        SUBL      *-SP[40],ACC          ; [CPU_] |1413| 
        MOVB      ACC,#0                ; [CPU_] |1413| 
        SUBB      ACC,#1                ; [CPU_] |1413| 
        CMPL      ACC,*-SP[40]          ; [CPU_] |1413| 
        B         $C$L631,NEQ           ; [CPU_] |1413| 
        ; branchcc occurs ; [] |1413| 
$C$L632:    
	.dwpsn	file "../Source/prod.c",line 1421,column 7,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL199       ; [CPU_U] |1421| 
$C$DW$1380	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1380, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1380, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1380, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1421| 
        ; call occurs [#_scia_puts] ; [] |1421| 
	.dwpsn	file "../Source/prod.c",line 1404,column 18,is_stmt,isa 0
        MOVZ      AR6,*-SP[41]          ; [CPU_] |1404| 
        MOVL      XAR0,#42              ; [CPU_] |1404| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1404| 
        MOVL      XAR0,#42              ; [CPU_] |1404| 
        SUBB      XAR6,#1               ; [CPU_U] |1404| 
        ADDB      ACC,#2                ; [CPU_] |1404| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |1404| 
        MOVZ      AR0,AR6               ; [CPU_] |1404| 
        MOV       *-SP[41],AR6          ; [CPU_] |1404| 
        ADDB      XAR1,#4               ; [CPU_] |1404| 
        CMP       AR0,#-1               ; [CPU_] |1404| 
        B         $C$L630,NEQ           ; [CPU_] |1404| 
        ; branchcc occurs ; [] |1404| 
	.dwpsn	file "../Source/prod.c",line 1424,column 6,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |1424| 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] |1424| 
        MOVB      AL,#10                ; [CPU_] |1424| 
        MOV       T,*-SP[52]            ; [CPU_] |1424| 
        MPYU      ACC,T,AL              ; [CPU_] |1424| 
        ADDL      ACC,XAR6              ; [CPU_] |1424| 
        MOVL      XAR1,ACC              ; [CPU_] |1424| 
        MOVL      ACC,*-SP[26]          ; [CPU_] |1424| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1424| 
        MOVL      ACC,*-SP[24]          ; [CPU_] |1424| 
$C$DW$1381	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1381, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1381, DW_AT_name("FS$$SUB")
	.dwattr $C$DW$1381, DW_AT_TI_call

        LCR       #FS$$SUB              ; [CPU_] |1424| 
        ; call occurs [#FS$$SUB] ; [] |1424| 
        MOVL      XAR6,ACC              ; [CPU_] |1424| 
        MOV       AL,#16384             ; [CPU_] |1424| 
        MOV       AH,#17948             ; [CPU_] |1424| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1424| 
        MOVL      ACC,XAR6              ; [CPU_] |1424| 
$C$DW$1382	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1382, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1382, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1382, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |1424| 
        ; call occurs [#FS$$MPY] ; [] |1424| 
        MOVL      *-SP[58],ACC          ; [CPU_] |1424| 
        MOVL      P,*-SP[30]            ; [CPU_] |1424| 
        MOVL      ACC,*-SP[28]          ; [CPU_] |1424| 
        SUBUL     P,*-SP[34]            ; [CPU_] |1424| 
        SUBBL     ACC,*-SP[32]          ; [CPU_] |1424| 
$C$DW$1383	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1383, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1383, DW_AT_name("LL$$TOFS")
	.dwattr $C$DW$1383, DW_AT_TI_call

        LCR       #LL$$TOFS             ; [CPU_] |1424| 
        ; call occurs [#LL$$TOFS] ; [] |1424| 
        MOVL      *-SP[2],ACC           ; [CPU_] |1424| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |1424| 
$C$DW$1384	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1384, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1384, DW_AT_name("FS$$DIV")
	.dwattr $C$DW$1384, DW_AT_TI_call

        LCR       #FS$$DIV              ; [CPU_] |1424| 
        ; call occurs [#FS$$DIV] ; [] |1424| 
        MOVB      XAR0,#44              ; [CPU_] |1424| 
	.dwpsn	file "../Source/prod.c",line 1427,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL221       ; [CPU_U] |1427| 
	.dwpsn	file "../Source/prod.c",line 1424,column 6,is_stmt,isa 0
        MOVL      *+XAR1[AR0],ACC       ; [CPU_] |1424| 
	.dwpsn	file "../Source/prod.c",line 1427,column 6,is_stmt,isa 0
        MOVB      XAR0,#44              ; [CPU_] |1427| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |1427| 
        MOV       AL,*-SP[53]           ; [CPU_] |1427| 
        MOV       *-SP[3],AL            ; [CPU_] |1427| 
        MOVL      ACC,*+XAR1[AR0]       ; [CPU_] |1427| 
        MOVL      XAR0,#44              ; [CPU_] |1427| 
        MOVL      *-SP[6],ACC           ; [CPU_] |1427| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |1427| 
        MOVL      XAR4,XAR1             ; [CPU_] |1427| 
$C$DW$1385	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1385, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1385, DW_AT_name("_sprintf")
	.dwattr $C$DW$1385, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |1427| 
        ; call occurs [#_sprintf] ; [] |1427| 
        MOVL      XAR4,XAR1             ; [CPU_] |1427| 
	.dwpsn	file "../Source/prod.c",line 1429,column 6,is_stmt,isa 0
$C$DW$1386	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1386, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1386, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1386, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1429| 
        ; call occurs [#_scia_puts] ; [] |1429| 
	.dwpsn	file "../Source/prod.c",line 1430,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL222       ; [CPU_U] |1430| 
$C$L633:    
$C$DW$1387	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1387, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1387, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1387, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |1430| 
        ; call occurs [#_scia_puts] ; [] |1430| 
	.dwpsn	file "../Source/prod.c",line 1585,column 5,is_stmt,isa 0
$C$DW$1388	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1388, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1388, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1388, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |1585| 
        ; call occurs [#_lcd_clear] ; [] |1585| 
	.dwpsn	file "../Source/prod.c",line 1586,column 5,is_stmt,isa 0
$C$DW$1389	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1389, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1389, DW_AT_name("_update_units")
	.dwattr $C$DW$1389, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |1586| 
        ; call occurs [#_update_units] ; [] |1586| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 1589,column 5,is_stmt,isa 0
$C$DW$1390	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1390, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1390, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1390, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |1589| 
        ; call occurs [#_ad7738_setcal] ; [] |1589| 
        MOVL      XAR0,#78              ; [CPU_] |1589| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |1589| 
	.dwpsn	file "../Source/prod.c",line 1590,column 5,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |1590| 
        MOVL      XAR1,ACC              ; [CPU_] |1590| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |1590| 
$C$DW$1391	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1391, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1391, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1391, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |1590| 
        ; call occurs [#_ad7738_resetpeak] ; [] |1590| 
	.dwpsn	file "../Source/prod.c",line 1591,column 5,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |1591| 
$C$DW$1392	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1392, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1392, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1392, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |1591| 
        ; call occurs [#_ad7738_resetvall] ; [] |1591| 
	.dwpsn	file "../Source/prod.c",line 1593,column 5,is_stmt,isa 0
        B         $C$L500,UNC           ; [CPU_] |1593| 
        ; branch occurs ; [] |1593| 
$C$L634:    
	.dwpsn	file "../Source/prod.c",line 1415,column 9,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |1415| 
$C$DW$1393	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1393, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1393, DW_AT_name("_delay_us")
	.dwattr $C$DW$1393, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |1415| 
        ; call occurs [#_delay_us] ; [] |1415| 
	.dwpsn	file "../Source/prod.c",line 1414,column 15,is_stmt,isa 0
        B         $C$L631,UNC           ; [CPU_] |1414| 
        ; branch occurs ; [] |1414| 
$C$L635:    
	.dwpsn	file "../Source/prod.c",line 3544,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL223       ; [CPU_U] |3544| 
$C$DW$1394	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1394, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1394, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1394, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3544| 
        ; call occurs [#_scia_puts] ; [] |3544| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] |3544| 
	.dwpsn	file "../Source/prod.c",line 3545,column 5,is_stmt,isa 0
$C$DW$1395	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1395, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1395, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1395, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3545| 
        ; call occurs [#_scia_puts] ; [] |3545| 
	.dwpsn	file "../Source/prod.c",line 3546,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL224       ; [CPU_U] |3546| 
	.dwpsn	file "../Source/prod.c",line 3547,column 5,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |3547| 
        ; branch occurs ; [] |3547| 
$C$L636:    
	.dwpsn	file "../Source/prod.c",line 3505,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL225       ; [CPU_U] |3505| 
$C$DW$1396	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1396, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1396, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1396, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3505| 
        ; call occurs [#_scia_puts] ; [] |3505| 
        MOVB      XAR3,#99              ; [CPU_] 
$C$L637:    
	.dwpsn	file "../Source/prod.c",line 3509,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3509| 
$C$DW$1397	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1397, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1397, DW_AT_name("_delay_us")
	.dwattr $C$DW$1397, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3509| 
        ; call occurs [#_delay_us] ; [] |3509| 
	.dwpsn	file "../Source/prod.c",line 3507,column 17,is_stmt,isa 0
        BANZ      $C$L637,AR3--         ; [CPU_] |3507| 
        ; branchcc occurs ; [] |3507| 
	.dwpsn	file "../Source/prod.c",line 3512,column 5,is_stmt,isa 0
$C$DW$1398	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1398, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1398, DW_AT_name("_reboot")
	.dwattr $C$DW$1398, DW_AT_TI_call

        LCR       #_reboot              ; [CPU_] |3512| 
        ; call occurs [#_reboot] ; [] |3512| 
	.dwpsn	file "../Source/prod.c",line 3513,column 5,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |3513| 
        ; branch occurs ; [] |3513| 
$C$L638:    
	.dwpsn	file "../Source/prod.c",line 3489,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL226       ; [CPU_U] |3489| 
$C$DW$1399	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1399, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1399, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1399, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3489| 
        ; call occurs [#_scia_puts] ; [] |3489| 
        MOVB      XAR3,#9               ; [CPU_] 
$C$L639:    
	.dwpsn	file "../Source/prod.c",line 3493,column 6,is_stmt,isa 0
        MOV       AL,#20000             ; [CPU_] |3493| 
$C$DW$1400	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1400, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1400, DW_AT_name("_delay_us")
	.dwattr $C$DW$1400, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |3493| 
        ; call occurs [#_delay_us] ; [] |3493| 
	.dwpsn	file "../Source/prod.c",line 3491,column 17,is_stmt,isa 0
        BANZ      $C$L639,AR3--         ; [CPU_] |3491| 
        ; branchcc occurs ; [] |3491| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3497| 
	.dwpsn	file "../Source/prod.c",line 3496,column 5,is_stmt,isa 0
        MOVB      @_cmd_mode,#1,UNC     ; [CPU_] |3496| 
	.dwpsn	file "../Source/prod.c",line 3497,column 5,is_stmt,isa 0
$C$DW$1401	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1401, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1401, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1401, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |3497| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |3497| 
	.dwpsn	file "../Source/prod.c",line 3501,column 5,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |3501| 
        ; branch occurs ; [] |3501| 
$C$L640:    
	.dwpsn	file "../Source/prod.c",line 978,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL227       ; [CPU_U] |978| 
        MOVL      XAR0,#44              ; [CPU_] |978| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |978| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |978| 
        MOVL      XAR4,XAR1             ; [CPU_] |978| 
$C$DW$1402	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1402, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1402, DW_AT_name("_sprintf")
	.dwattr $C$DW$1402, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |978| 
        ; call occurs [#_sprintf] ; [] |978| 
        MOVL      XAR4,XAR1             ; [CPU_] |978| 
	.dwpsn	file "../Source/prod.c",line 979,column 5,is_stmt,isa 0
$C$DW$1403	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1403, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1403, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1403, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |979| 
        ; call occurs [#_scia_puts] ; [] |979| 
	.dwpsn	file "../Source/prod.c",line 980,column 5,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |980| 
$C$DW$1404	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1404, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1404, DW_AT_name("_delay_us")
	.dwattr $C$DW$1404, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |980| 
        ; call occurs [#_delay_us] ; [] |980| 
	.dwpsn	file "../Source/prod.c",line 981,column 5,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |981| 
$C$DW$1405	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1405, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1405, DW_AT_name("_delay_us")
	.dwattr $C$DW$1405, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |981| 
        ; call occurs [#_delay_us] ; [] |981| 
	.dwpsn	file "../Source/prod.c",line 982,column 5,is_stmt,isa 0
        MOV       AL,#10000             ; [CPU_] |982| 
$C$DW$1406	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1406, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1406, DW_AT_name("_delay_us")
	.dwattr $C$DW$1406, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |982| 
        ; call occurs [#_delay_us] ; [] |982| 
 LCR 0x3F7FF6
	.dwpsn	file "../Source/prod.c",line 986,column 5,is_stmt,isa 0
        B         $C$L646,UNC           ; [CPU_] |986| 
        ; branch occurs ; [] |986| 
$C$L641:    
	.dwpsn	file "../Source/prod.c",line 996,column 5,is_stmt,isa 0
$C$DW$1407	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1407, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1407, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1407, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |996| 
        ; call occurs [#_prod_getavail] ; [] |996| 
        TEST      ACC                   ; [CPU_] |996| 
        B         $C$L646,EQ            ; [CPU_] |996| 
        ; branchcc occurs ; [] |996| 
	.dwpsn	file "../Source/prod.c",line 997,column 6,is_stmt,isa 0
$C$DW$1408	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1408, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1408, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1408, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |997| 
        ; call occurs [#_prod_getnext] ; [] |997| 
	.dwpsn	file "../Source/prod.c",line 998,column 6,is_stmt,isa 0
        MOVL      XAR5,#$C$FSL228       ; [CPU_U] |998| 
        MOVB      XAR0,#8               ; [CPU_] |998| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |998| 
        MOVL      ACC,*+XAR4[6]         ; [CPU_] |998| 
        MOVL      *-SP[4],ACC           ; [CPU_] |998| 
        MOVL      ACC,*+XAR4[AR0]       ; [CPU_] |998| 
        MOVL      XAR0,#44              ; [CPU_] |998| 
        MOVL      *-SP[6],ACC           ; [CPU_] |998| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |998| 
        MOVL      *-SP[8],ACC           ; [CPU_] |998| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |998| 
        MOVL      XAR4,XAR1             ; [CPU_] |998| 
$C$DW$1409	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1409, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1409, DW_AT_name("_sprintf")
	.dwattr $C$DW$1409, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |998| 
        ; call occurs [#_sprintf] ; [] |998| 
        MOVL      XAR4,XAR1             ; [CPU_] |998| 
	.dwpsn	file "../Source/prod.c",line 999,column 6,is_stmt,isa 0
$C$DW$1410	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1410, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1410, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1410, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |999| 
        ; call occurs [#_scia_puts] ; [] |999| 
	.dwpsn	file "../Source/prod.c",line 996,column 5,is_stmt,isa 0
        B         $C$L641,UNC           ; [CPU_] |996| 
        ; branch occurs ; [] |996| 
$C$L642:    
	.dwpsn	file "../Source/prod.c",line 3400,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL229       ; [CPU_U] |3400| 
$C$DW$1411	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1411, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1411, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1411, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3400| 
        ; call occurs [#_scia_puts] ; [] |3400| 
	.dwpsn	file "../Source/prod.c",line 3402,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL230       ; [CPU_U] |3402| 
$C$DW$1412	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1412, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1412, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1412, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3402| 
        ; call occurs [#_scia_puts] ; [] |3402| 
	.dwpsn	file "../Source/prod.c",line 3403,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL231       ; [CPU_U] |3403| 
$C$DW$1413	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1413, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1413, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1413, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3403| 
        ; call occurs [#_scia_puts] ; [] |3403| 
	.dwpsn	file "../Source/prod.c",line 3405,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL232       ; [CPU_U] |3405| 
$C$DW$1414	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1414, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1414, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1414, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3405| 
        ; call occurs [#_scia_puts] ; [] |3405| 
	.dwpsn	file "../Source/prod.c",line 3406,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL233       ; [CPU_U] |3406| 
$C$DW$1415	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1415, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1415, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1415, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3406| 
        ; call occurs [#_scia_puts] ; [] |3406| 
	.dwpsn	file "../Source/prod.c",line 3407,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL234       ; [CPU_U] |3407| 
$C$DW$1416	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1416, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1416, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1416, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3407| 
        ; call occurs [#_scia_puts] ; [] |3407| 
	.dwpsn	file "../Source/prod.c",line 3408,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3408| 
$C$DW$1417	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1417, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1417, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1417, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3408| 
        ; call occurs [#_scia_puts] ; [] |3408| 
	.dwpsn	file "../Source/prod.c",line 3410,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL235       ; [CPU_U] |3410| 
$C$DW$1418	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1418, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1418, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1418, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3410| 
        ; call occurs [#_scia_puts] ; [] |3410| 
	.dwpsn	file "../Source/prod.c",line 3411,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL236       ; [CPU_U] |3411| 
$C$DW$1419	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1419, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1419, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1419, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3411| 
        ; call occurs [#_scia_puts] ; [] |3411| 
	.dwpsn	file "../Source/prod.c",line 3412,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL237       ; [CPU_U] |3412| 
$C$DW$1420	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1420, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1420, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1420, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3412| 
        ; call occurs [#_scia_puts] ; [] |3412| 
	.dwpsn	file "../Source/prod.c",line 3413,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL238       ; [CPU_U] |3413| 
$C$DW$1421	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1421, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1421, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1421, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3413| 
        ; call occurs [#_scia_puts] ; [] |3413| 
	.dwpsn	file "../Source/prod.c",line 3414,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL239       ; [CPU_U] |3414| 
$C$DW$1422	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1422, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1422, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1422, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3414| 
        ; call occurs [#_scia_puts] ; [] |3414| 
	.dwpsn	file "../Source/prod.c",line 3415,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL240       ; [CPU_U] |3415| 
$C$DW$1423	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1423, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1423, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1423, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3415| 
        ; call occurs [#_scia_puts] ; [] |3415| 
	.dwpsn	file "../Source/prod.c",line 3416,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3416| 
$C$DW$1424	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1424, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1424, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1424, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3416| 
        ; call occurs [#_scia_puts] ; [] |3416| 
	.dwpsn	file "../Source/prod.c",line 3418,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL241       ; [CPU_U] |3418| 
$C$DW$1425	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1425, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1425, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1425, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3418| 
        ; call occurs [#_scia_puts] ; [] |3418| 
	.dwpsn	file "../Source/prod.c",line 3420,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL242       ; [CPU_U] |3420| 
$C$DW$1426	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1426, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1426, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1426, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3420| 
        ; call occurs [#_scia_puts] ; [] |3420| 
	.dwpsn	file "../Source/prod.c",line 3422,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3422| 
$C$DW$1427	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1427, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1427, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1427, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3422| 
        ; call occurs [#_scia_puts] ; [] |3422| 
	.dwpsn	file "../Source/prod.c",line 3424,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL243       ; [CPU_U] |3424| 
$C$DW$1428	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1428, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1428, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1428, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3424| 
        ; call occurs [#_scia_puts] ; [] |3424| 
	.dwpsn	file "../Source/prod.c",line 3425,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL244       ; [CPU_U] |3425| 
$C$DW$1429	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1429, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1429, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1429, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3425| 
        ; call occurs [#_scia_puts] ; [] |3425| 
	.dwpsn	file "../Source/prod.c",line 3426,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL245       ; [CPU_U] |3426| 
$C$DW$1430	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1430, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1430, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1430, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3426| 
        ; call occurs [#_scia_puts] ; [] |3426| 
	.dwpsn	file "../Source/prod.c",line 3427,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3427| 
$C$DW$1431	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1431, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1431, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1431, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3427| 
        ; call occurs [#_scia_puts] ; [] |3427| 
	.dwpsn	file "../Source/prod.c",line 3429,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL246       ; [CPU_U] |3429| 
$C$DW$1432	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1432, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1432, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1432, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3429| 
        ; call occurs [#_scia_puts] ; [] |3429| 
	.dwpsn	file "../Source/prod.c",line 3430,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL247       ; [CPU_U] |3430| 
$C$DW$1433	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1433, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1433, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1433, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3430| 
        ; call occurs [#_scia_puts] ; [] |3430| 
	.dwpsn	file "../Source/prod.c",line 3431,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL248       ; [CPU_U] |3431| 
$C$DW$1434	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1434, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1434, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1434, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3431| 
        ; call occurs [#_scia_puts] ; [] |3431| 
	.dwpsn	file "../Source/prod.c",line 3432,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL249       ; [CPU_U] |3432| 
$C$DW$1435	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1435, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1435, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1435, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3432| 
        ; call occurs [#_scia_puts] ; [] |3432| 
	.dwpsn	file "../Source/prod.c",line 3433,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3433| 
$C$DW$1436	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1436, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1436, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1436, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3433| 
        ; call occurs [#_scia_puts] ; [] |3433| 
	.dwpsn	file "../Source/prod.c",line 3435,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL250       ; [CPU_U] |3435| 
$C$DW$1437	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1437, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1437, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1437, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3435| 
        ; call occurs [#_scia_puts] ; [] |3435| 
	.dwpsn	file "../Source/prod.c",line 3436,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL251       ; [CPU_U] |3436| 
$C$DW$1438	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1438, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1438, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1438, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3436| 
        ; call occurs [#_scia_puts] ; [] |3436| 
	.dwpsn	file "../Source/prod.c",line 3438,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3438| 
$C$DW$1439	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1439, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1439, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1439, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3438| 
        ; call occurs [#_scia_puts] ; [] |3438| 
	.dwpsn	file "../Source/prod.c",line 3440,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL252       ; [CPU_U] |3440| 
$C$DW$1440	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1440, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1440, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1440, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3440| 
        ; call occurs [#_scia_puts] ; [] |3440| 
	.dwpsn	file "../Source/prod.c",line 3441,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3441| 
$C$DW$1441	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1441, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1441, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1441, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3441| 
        ; call occurs [#_scia_puts] ; [] |3441| 
	.dwpsn	file "../Source/prod.c",line 3443,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL253       ; [CPU_U] |3443| 
$C$DW$1442	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1442, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1442, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1442, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3443| 
        ; call occurs [#_scia_puts] ; [] |3443| 
	.dwpsn	file "../Source/prod.c",line 3445,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL254       ; [CPU_U] |3445| 
$C$DW$1443	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1443, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1443, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1443, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3445| 
        ; call occurs [#_scia_puts] ; [] |3445| 
	.dwpsn	file "../Source/prod.c",line 3447,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3447| 
$C$DW$1444	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1444, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1444, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1444, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3447| 
        ; call occurs [#_scia_puts] ; [] |3447| 
	.dwpsn	file "../Source/prod.c",line 3449,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL255       ; [CPU_U] |3449| 
$C$DW$1445	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1445, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1445, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1445, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3449| 
        ; call occurs [#_scia_puts] ; [] |3449| 
	.dwpsn	file "../Source/prod.c",line 3450,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3450| 
$C$DW$1446	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1446, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1446, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1446, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3450| 
        ; call occurs [#_scia_puts] ; [] |3450| 
	.dwpsn	file "../Source/prod.c",line 3452,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL256       ; [CPU_U] |3452| 
$C$DW$1447	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1447, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1447, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1447, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3452| 
        ; call occurs [#_scia_puts] ; [] |3452| 
	.dwpsn	file "../Source/prod.c",line 3453,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL257       ; [CPU_U] |3453| 
$C$DW$1448	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1448, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1448, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1448, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3453| 
        ; call occurs [#_scia_puts] ; [] |3453| 
	.dwpsn	file "../Source/prod.c",line 3454,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL258       ; [CPU_U] |3454| 
$C$DW$1449	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1449, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1449, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1449, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3454| 
        ; call occurs [#_scia_puts] ; [] |3454| 
	.dwpsn	file "../Source/prod.c",line 3455,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL259       ; [CPU_U] |3455| 
$C$DW$1450	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1450, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1450, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1450, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3455| 
        ; call occurs [#_scia_puts] ; [] |3455| 
	.dwpsn	file "../Source/prod.c",line 3456,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL260       ; [CPU_U] |3456| 
$C$DW$1451	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1451, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1451, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1451, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3456| 
        ; call occurs [#_scia_puts] ; [] |3456| 
	.dwpsn	file "../Source/prod.c",line 3457,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL261       ; [CPU_U] |3457| 
$C$DW$1452	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1452, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1452, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1452, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3457| 
        ; call occurs [#_scia_puts] ; [] |3457| 
	.dwpsn	file "../Source/prod.c",line 3458,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL262       ; [CPU_U] |3458| 
$C$DW$1453	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1453, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1453, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1453, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3458| 
        ; call occurs [#_scia_puts] ; [] |3458| 
	.dwpsn	file "../Source/prod.c",line 3459,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3459| 
$C$DW$1454	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1454, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1454, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1454, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3459| 
        ; call occurs [#_scia_puts] ; [] |3459| 
	.dwpsn	file "../Source/prod.c",line 3470,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL263       ; [CPU_U] |3470| 
$C$DW$1455	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1455, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1455, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1455, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3470| 
        ; call occurs [#_scia_puts] ; [] |3470| 
	.dwpsn	file "../Source/prod.c",line 3472,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL264       ; [CPU_U] |3472| 
$C$DW$1456	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1456, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1456, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1456, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3472| 
        ; call occurs [#_scia_puts] ; [] |3472| 
	.dwpsn	file "../Source/prod.c",line 3474,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL265       ; [CPU_U] |3474| 
$C$DW$1457	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1457, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1457, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1457, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3474| 
        ; call occurs [#_scia_puts] ; [] |3474| 
	.dwpsn	file "../Source/prod.c",line 3476,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3476| 
$C$DW$1458	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1458, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1458, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1458, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3476| 
        ; call occurs [#_scia_puts] ; [] |3476| 
	.dwpsn	file "../Source/prod.c",line 3478,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL266       ; [CPU_U] |3478| 
$C$DW$1459	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1459, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1459, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1459, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3478| 
        ; call occurs [#_scia_puts] ; [] |3478| 
	.dwpsn	file "../Source/prod.c",line 3483,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL11        ; [CPU_U] |3483| 
	.dwpsn	file "../Source/prod.c",line 3485,column 5,is_stmt,isa 0
        B         $C$L645,UNC           ; [CPU_] |3485| 
        ; branch occurs ; [] |3485| 
$C$L643:    
	.dwpsn	file "../Source/prod.c",line 954,column 5,is_stmt,isa 0
$C$DW$1460	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1460, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1460, DW_AT_name("_ad7738_getload")
	.dwattr $C$DW$1460, DW_AT_TI_call

        LCR       #_ad7738_getload      ; [CPU_] |954| 
        ; call occurs [#_ad7738_getload] ; [] |954| 
        MOVL      XAR4,#$C$FSL267       ; [CPU_U] |954| 
        MOVL      XAR0,#44              ; [CPU_] |954| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |954| 
        MOVL      *-SP[4],ACC           ; [CPU_] |954| 
        MOVL      XAR1,*+FP[AR0]        ; [CPU_] |954| 
        MOVL      XAR4,XAR1             ; [CPU_] |954| 
$C$DW$1461	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1461, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1461, DW_AT_name("_sprintf")
	.dwattr $C$DW$1461, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |954| 
        ; call occurs [#_sprintf] ; [] |954| 
	.dwpsn	file "../Source/prod.c",line 955,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |955| 
$C$DW$1462	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1462, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1462, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1462, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |955| 
        ; call occurs [#_scia_puts] ; [] |955| 
	.dwpsn	file "../Source/prod.c",line 957,column 5,is_stmt,isa 0
        MOV       AL,*(0:0x2000)        ; [CPU_] |957| 
        MOVL      XAR4,#$C$FSL268       ; [CPU_U] |957| 
        AND       AH,AL,#0x0002         ; [CPU_] |957| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |957| 
        ANDB      AL,#1                 ; [CPU_] |957| 
        MOV       *-SP[3],AH            ; [CPU_] |957| 
        MOV       *-SP[4],AL            ; [CPU_] |957| 
        MOVL      XAR4,XAR1             ; [CPU_] |957| 
$C$DW$1463	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1463, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1463, DW_AT_name("_sprintf")
	.dwattr $C$DW$1463, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |957| 
        ; call occurs [#_sprintf] ; [] |957| 
	.dwpsn	file "../Source/prod.c",line 958,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |958| 
$C$DW$1464	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1464, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1464, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1464, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |958| 
        ; call occurs [#_scia_puts] ; [] |958| 
	.dwpsn	file "../Source/prod.c",line 959,column 5,is_stmt,isa 0
$C$DW$1465	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1465, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1465, DW_AT_name("_ad7738_getpos")
	.dwattr $C$DW$1465, DW_AT_TI_call

        LCR       #_ad7738_getpos       ; [CPU_] |959| 
        ; call occurs [#_ad7738_getpos] ; [] |959| 
        MOVL      XAR4,#$C$FSL269       ; [CPU_U] |959| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |959| 
        MOVL      *-SP[4],ACC           ; [CPU_] |959| 
$C$L644:    
        MOVL      XAR4,XAR1             ; [CPU_] |959| 
$C$DW$1466	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1466, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1466, DW_AT_name("_sprintf")
	.dwattr $C$DW$1466, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |959| 
        ; call occurs [#_sprintf] ; [] |959| 
	.dwpsn	file "../Source/prod.c",line 960,column 5,is_stmt,isa 0
        MOVL      XAR4,XAR1             ; [CPU_] |960| 
$C$L645:    
$C$DW$1467	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1467, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1467, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1467, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |960| 
        ; call occurs [#_scia_puts] ; [] |960| 
$C$L646:    
        MOV       AL,*-SP[42]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3551,column 4,is_stmt,isa 0
        B         $C$L648,EQ            ; [CPU_] |3551| 
        ; branchcc occurs ; [] |3551| 
$C$L647:    
	.dwpsn	file "../Source/prod.c",line 3552,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL270       ; [CPU_U] |3552| 
        SPM       #0                    ; [CPU_] 
$C$DW$1468	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1468, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1468, DW_AT_name("_scia_puts")
	.dwattr $C$DW$1468, DW_AT_TI_call

        LCR       #_scia_puts           ; [CPU_] |3552| 
        ; call occurs [#_scia_puts] ; [] |3552| 
$C$L648:    
	.dwpsn	file "../Source/prod.c",line 598,column 3,is_stmt,isa 0
        IN        AL,*(0400eH)          ; [CPU_] |598| 
        TBIT      AL,#4                 ; [CPU_] |598| 
        B         $C$L649,TC            ; [CPU_] |598| 
        ; branchcc occurs ; [] |598| 
	.dwpsn	file "../Source/prod.c",line 600,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |600| 
        SPM       #0                    ; [CPU_] 
$C$DW$1469	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1469, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1469, DW_AT_name("_ad7738_resettare")
	.dwattr $C$DW$1469, DW_AT_TI_call

        LCR       #_ad7738_resettare    ; [CPU_] |600| 
        ; call occurs [#_ad7738_resettare] ; [] |600| 
	.dwpsn	file "../Source/prod.c",line 601,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |601| 
$C$DW$1470	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1470, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1470, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1470, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |601| 
        ; call occurs [#_ad7738_resetpeak] ; [] |601| 
	.dwpsn	file "../Source/prod.c",line 602,column 4,is_stmt,isa 0
        MOVB      AL,#15                ; [CPU_] |602| 
$C$DW$1471	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1471, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1471, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1471, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |602| 
        ; call occurs [#_ad7738_resetvall] ; [] |602| 
$C$L649:    
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 680,column 3,is_stmt,isa 0
$C$DW$1472	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1472, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1472, DW_AT_name("_ad7738_monrdy")
	.dwattr $C$DW$1472, DW_AT_TI_call

        LCR       #_ad7738_monrdy       ; [CPU_] |680| 
        ; call occurs [#_ad7738_monrdy] ; [] |680| 
        CMPB      AL,#0                 ; [CPU_] |680| 
        B         $C$L674,EQ            ; [CPU_] |680| 
        ; branchcc occurs ; [] |680| 
	.dwpsn	file "../Source/prod.c",line 682,column 4,is_stmt,isa 0
$C$DW$1473	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1473, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1473, DW_AT_name("_ad7738_monclr")
	.dwattr $C$DW$1473, DW_AT_TI_call

        LCR       #_ad7738_monclr       ; [CPU_] |682| 
        ; call occurs [#_ad7738_monclr] ; [] |682| 
        MOVL      XAR4,*-SP[62]         ; [CPU_] |682| 
	.dwpsn	file "../Source/prod.c",line 685,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |685| 
        CMPB      AL,#3                 ; [CPU_] |685| 
        B         $C$L650,GT            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#3                 ; [CPU_] |685| 
        B         $C$L656,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#0                 ; [CPU_] |685| 
        B         $C$L659,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#1                 ; [CPU_] |685| 
        B         $C$L658,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#2                 ; [CPU_] |685| 
        B         $C$L657,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        B         $C$L671,UNC           ; [CPU_] |685| 
        ; branch occurs ; [] |685| 
$C$L650:    
        CMPB      AL,#4                 ; [CPU_] |685| 
        B         $C$L655,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#5                 ; [CPU_] |685| 
        B         $C$L651,EQ            ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
        CMPB      AL,#6                 ; [CPU_] |685| 
        B         $C$L671,NEQ           ; [CPU_] |685| 
        ; branchcc occurs ; [] |685| 
	.dwpsn	file "../Source/prod.c",line 740,column 5,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |740| 
        MOVL      XAR0,#46              ; [CPU_] |740| 
        MOVL      *-SP[2],XAR4          ; [CPU_] |740| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |740| 
	.dwpsn	file "../Source/prod.c",line 741,column 5,is_stmt,isa 0
        B         $C$L669,UNC           ; [CPU_] |741| 
        ; branch occurs ; [] |741| 
$C$L651:    
	.dwpsn	file "../Source/prod.c",line 735,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |735| 
$C$DW$1474	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1474, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1474, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1474, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |735| 
        ; call occurs [#_ad7738_getlimitst] ; [] |735| 
	.dwpsn	file "../Source/prod.c",line 736,column 5,is_stmt,isa 0
        TBIT      AL,#7                 ; [CPU_] |736| 
        B         $C$L653,NTC           ; [CPU_] |736| 
        ; branchcc occurs ; [] |736| 
        TBIT      AL,#0                 ; [CPU_] |736| 
        B         $C$L652,NTC           ; [CPU_] |736| 
        ; branchcc occurs ; [] |736| 
        MOVL      XAR4,#$C$FSL272       ; [CPU_U] |736| 
        B         $C$L654,UNC           ; [CPU_] |736| 
        ; branch occurs ; [] |736| 
$C$L652:    
        MOVL      XAR4,#$C$FSL273       ; [CPU_U] |736| 
        B         $C$L654,UNC           ; [CPU_] |736| 
        ; branch occurs ; [] |736| 
$C$L653:    
        MOVL      XAR4,#$C$FSL274       ; [CPU_U] |736| 
$C$L654:    
        MOVL      XAR5,#$C$FSL52        ; [CPU_U] |736| 
        MOVL      *-SP[2],XAR5          ; [CPU_] |736| 
        MOVL      *-SP[4],XAR4          ; [CPU_] |736| 
	.dwpsn	file "../Source/prod.c",line 738,column 5,is_stmt,isa 0
        B         $C$L670,UNC           ; [CPU_] |738| 
        ; branch occurs ; [] |738| 
$C$L655:    
	.dwpsn	file "../Source/prod.c",line 707,column 5,is_stmt,isa 0
$C$DW$1475	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1475, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1475, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1475, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |707| 
        ; call occurs [#_ad7738_getmon] ; [] |707| 
        MOVL      XAR5,*-SP[62]         ; [CPU_] |707| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 709,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |709| 
        ADDL      XAR4,ACC              ; [CPU_] |709| 
        MOVL      ACC,*+XAR4[6]         ; [CPU_] |709| 
        B         $C$L661,UNC           ; [CPU_] |709| 
        ; branch occurs ; [] |709| 
$C$L656:    
	.dwpsn	file "../Source/prod.c",line 702,column 5,is_stmt,isa 0
$C$DW$1476	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1476, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1476, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1476, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |702| 
        ; call occurs [#_ad7738_getmon] ; [] |702| 
        MOVL      XAR5,*-SP[62]         ; [CPU_] |702| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 703,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |703| 
        ADDL      XAR4,ACC              ; [CPU_] |703| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |703| 
	.dwpsn	file "../Source/prod.c",line 704,column 5,is_stmt,isa 0
        B         $C$L661,UNC           ; [CPU_] |704| 
        ; branch occurs ; [] |704| 
$C$L657:    
	.dwpsn	file "../Source/prod.c",line 697,column 5,is_stmt,isa 0
$C$DW$1477	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1477, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1477, DW_AT_name("_ad7738_getvall")
	.dwattr $C$DW$1477, DW_AT_TI_call

        LCR       #_ad7738_getvall      ; [CPU_] |697| 
        ; call occurs [#_ad7738_getvall] ; [] |697| 
	.dwpsn	file "../Source/prod.c",line 699,column 5,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |699| 
        ; branch occurs ; [] |699| 
$C$L658:    
	.dwpsn	file "../Source/prod.c",line 692,column 5,is_stmt,isa 0
$C$DW$1478	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1478, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1478, DW_AT_name("_ad7738_getpeak")
	.dwattr $C$DW$1478, DW_AT_TI_call

        LCR       #_ad7738_getpeak      ; [CPU_] |692| 
        ; call occurs [#_ad7738_getpeak] ; [] |692| 
	.dwpsn	file "../Source/prod.c",line 694,column 5,is_stmt,isa 0
        B         $C$L660,UNC           ; [CPU_] |694| 
        ; branch occurs ; [] |694| 
$C$L659:    
	.dwpsn	file "../Source/prod.c",line 687,column 5,is_stmt,isa 0
$C$DW$1479	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1479, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1479, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1479, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |687| 
        ; call occurs [#_ad7738_getmon] ; [] |687| 
$C$L660:    
        MOVL      XAR5,*-SP[62]         ; [CPU_] |687| 
        CLRC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 688,column 5,is_stmt,isa 0
        MOV       ACC,*+XAR5[1] << 1    ; [CPU_] |688| 
        ADDL      XAR4,ACC              ; [CPU_] |688| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |688| 
$C$L661:    
        MOVL      XAR4,*-SP[62]         ; [CPU_] 
        MOVL      *-SP[12],ACC          ; [CPU_] |688| 
	.dwpsn	file "../Source/prod.c",line 712,column 20,is_stmt,isa 0
        MOV       AL,*+XAR4[2]          ; [CPU_] |712| 
        CMPB      AL,#3                 ; [CPU_] |712| 
        B         $C$L662,GT            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#3                 ; [CPU_] |712| 
        B         $C$L664,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#0                 ; [CPU_] |712| 
        B         $C$L667,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#1                 ; [CPU_] |712| 
        B         $C$L666,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#2                 ; [CPU_] |712| 
        B         $C$L665,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        B         $C$L671,UNC           ; [CPU_] |712| 
        ; branch occurs ; [] |712| 
$C$L662:    
        CMPB      AL,#4                 ; [CPU_] |712| 
        B         $C$L663,EQ            ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
        CMPB      AL,#5                 ; [CPU_] |712| 
        B         $C$L671,NEQ           ; [CPU_] |712| 
        ; branchcc occurs ; [] |712| 
	.dwpsn	file "../Source/prod.c",line 729,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL32        ; [CPU_U] |729| 
	.dwpsn	file "../Source/prod.c",line 730,column 6,is_stmt,isa 0
        B         $C$L668,UNC           ; [CPU_] |730| 
        ; branch occurs ; [] |730| 
$C$L663:    
	.dwpsn	file "../Source/prod.c",line 726,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL275       ; [CPU_U] |726| 
	.dwpsn	file "../Source/prod.c",line 727,column 6,is_stmt,isa 0
        B         $C$L668,UNC           ; [CPU_] |727| 
        ; branch occurs ; [] |727| 
$C$L664:    
	.dwpsn	file "../Source/prod.c",line 723,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL276       ; [CPU_U] |723| 
	.dwpsn	file "../Source/prod.c",line 724,column 6,is_stmt,isa 0
        B         $C$L668,UNC           ; [CPU_] |724| 
        ; branch occurs ; [] |724| 
$C$L665:    
	.dwpsn	file "../Source/prod.c",line 720,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL277       ; [CPU_U] |720| 
	.dwpsn	file "../Source/prod.c",line 721,column 6,is_stmt,isa 0
        B         $C$L668,UNC           ; [CPU_] |721| 
        ; branch occurs ; [] |721| 
$C$L666:    
	.dwpsn	file "../Source/prod.c",line 717,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL271       ; [CPU_U] |717| 
	.dwpsn	file "../Source/prod.c",line 718,column 6,is_stmt,isa 0
        B         $C$L668,UNC           ; [CPU_] |718| 
        ; branch occurs ; [] |718| 
$C$L667:    
	.dwpsn	file "../Source/prod.c",line 714,column 6,is_stmt,isa 0
        MOVL      XAR4,#$C$FSL278       ; [CPU_U] |714| 
$C$L668:    
        MOVL      *-SP[2],XAR4          ; [CPU_] |714| 
        MOVL      ACC,*-SP[12]          ; [CPU_] |714| 
$C$L669:    
        MOVL      *-SP[4],ACC           ; [CPU_] |714| 
$C$L670:    
        MOVL      XAR0,#44              ; [CPU_] |714| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |714| 
$C$DW$1480	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1480, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1480, DW_AT_name("_sprintf")
	.dwattr $C$DW$1480, DW_AT_TI_call

        LCR       #_sprintf             ; [CPU_] |714| 
        ; call occurs [#_sprintf] ; [] |714| 
$C$L671:    
        MOV       T,*-SP[49]            ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 745,column 4,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |745| 
        MPYB      ACC,T,#20             ; [CPU_] |745| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |745| 
        ADDB      AL,#7                 ; [CPU_] |745| 
$C$DW$1481	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1481, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1481, DW_AT_name("_lcd_puts")
	.dwattr $C$DW$1481, DW_AT_TI_call

        LCR       #_lcd_puts            ; [CPU_] |745| 
        ; call occurs [#_lcd_puts] ; [] |745| 
	.dwpsn	file "../Source/prod.c",line 748,column 4,is_stmt,isa 0
        INC       *-SP[49]              ; [CPU_] |748| 
	.dwpsn	file "../Source/prod.c",line 745,column 4,is_stmt,isa 0
        MOV       AL,*-SP[49]           ; [CPU_] |745| 
	.dwpsn	file "../Source/prod.c",line 748,column 4,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |748| 
        B         $C$L672,HIS           ; [CPU_] |748| 
        ; branchcc occurs ; [] |748| 
        MOVL      ACC,*-SP[62]          ; [CPU_] 
        ADDB      ACC,#3                ; [CPU_] |748| 
        B         $C$L673,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L672:    
        MOVL      XAR0,#40              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 749,column 5,is_stmt,isa 0
        MOV       *-SP[49],#0           ; [CPU_] |749| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#773 << 2         ; [CPU_] 
$C$L673:    
        MOVL      *-SP[62],ACC          ; [CPU_] 
$C$L674:    
	.dwpsn	file "../Source/prod.c",line 758,column 3,is_stmt,isa 0
$C$DW$1482	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1482, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1482, DW_AT_name("_ad7738_tempstart")
	.dwattr $C$DW$1482, DW_AT_TI_call

        LCR       #_ad7738_tempstart    ; [CPU_] |758| 
        ; call occurs [#_ad7738_tempstart] ; [] |758| 
        CMPB      AL,#0                 ; [CPU_] |758| 
        B         $C$L675,NEQ           ; [CPU_] |758| 
        ; branchcc occurs ; [] |758| 
	.dwpsn	file "../Source/prod.c",line 763,column 8,is_stmt,isa 0
$C$DW$1483	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1483, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1483, DW_AT_name("_ad7738_tempread")
	.dwattr $C$DW$1483, DW_AT_TI_call

        LCR       #_ad7738_tempread     ; [CPU_] |763| 
        ; call occurs [#_ad7738_tempread] ; [] |763| 
        CMPB      AL,#0                 ; [CPU_] |763| 
        B         $C$L676,EQ            ; [CPU_] |763| 
        ; branchcc occurs ; [] |763| 
	.dwpsn	file "../Source/prod.c",line 764,column 4,is_stmt,isa 0
$C$DW$1484	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1484, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1484, DW_AT_name("_ds1820read")
	.dwattr $C$DW$1484, DW_AT_TI_call

        LCR       #_ds1820read          ; [CPU_] |764| 
        ; call occurs [#_ds1820read] ; [] |764| 
        MOVL      XAR0,#46              ; [CPU_] |764| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |764| 
	.dwpsn	file "../Source/prod.c",line 765,column 4,is_stmt,isa 0
$C$DW$1485	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1485, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1485, DW_AT_name("_ad7738_settemp")
	.dwattr $C$DW$1485, DW_AT_TI_call

        LCR       #_ad7738_settemp      ; [CPU_] |765| 
        ; call occurs [#_ad7738_settemp] ; [] |765| 
        B         $C$L676,UNC           ; [CPU_] |765| 
        ; branch occurs ; [] |765| 
$C$L675:    
	.dwpsn	file "../Source/prod.c",line 759,column 4,is_stmt,isa 0
$C$DW$1486	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1486, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1486, DW_AT_name("_ds1820start")
	.dwattr $C$DW$1486, DW_AT_TI_call

        LCR       #_ds1820start         ; [CPU_] |759| 
        ; call occurs [#_ds1820start] ; [] |759| 
$C$L676:    
	.dwpsn	file "../Source/prod.c",line 772,column 3,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |772| 
        MOVB      XAR0,#36              ; [CPU_] |772| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |772| 
        B         $C$L681,EQ            ; [CPU_] |772| 
        ; branchcc occurs ; [] |772| 
$C$DW$1487	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1487, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1487, DW_AT_name("_ad7738_tagsdetect")
	.dwattr $C$DW$1487, DW_AT_TI_call

        LCR       #_ad7738_tagsdetect   ; [CPU_] |772| 
        ; call occurs [#_ad7738_tagsdetect] ; [] |772| 
        CMPB      AL,#0                 ; [CPU_] |772| 
        B         $C$L681,EQ            ; [CPU_] |772| 
        ; branchcc occurs ; [] |772| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 773,column 4,is_stmt,isa 0
$C$DW$1488	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1488, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1488, DW_AT_name("_tagdetect")
	.dwattr $C$DW$1488, DW_AT_TI_call

        LCR       #_tagdetect           ; [CPU_] |773| 
        ; call occurs [#_tagdetect] ; [] |773| 
        CMPB      AL,#0                 ; [CPU_] |773| 
        B         $C$L677,NEQ           ; [CPU_] |773| 
        ; branchcc occurs ; [] |773| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 796,column 5,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |796| 
        MOV       *+XAR4[0],#0          ; [CPU_] |796| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |796| 
	.dwpsn	file "../Source/prod.c",line 798,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |798| 
        ADDU      ACC,*+FP[AR0]         ; [CPU_] |798| 
        MOVL      XAR4,ACC              ; [CPU_] |798| 
        MOV       AL,*+XAR4[0]          ; [CPU_] |798| 
        B         $C$L679,EQ            ; [CPU_] |798| 
        ; branchcc occurs ; [] |798| 
	.dwpsn	file "../Source/prod.c",line 799,column 6,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |799| 
	.dwpsn	file "../Source/prod.c",line 800,column 6,is_stmt,isa 0
$C$DW$1489	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1489, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1489, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1489, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |800| 
        ; call occurs [#_lcd_clear] ; [] |800| 
	.dwpsn	file "../Source/prod.c",line 801,column 6,is_stmt,isa 0
$C$DW$1490	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1490, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1490, DW_AT_name("_update_units")
	.dwattr $C$DW$1490, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |801| 
        ; call occurs [#_update_units] ; [] |801| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 802,column 6,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |802| 
        B         $C$L679,UNC           ; [CPU_] |802| 
        ; branch occurs ; [] |802| 
$C$L677:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 775,column 5,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |775| 
        B         $C$L678,NEQ           ; [CPU_] |775| 
        ; branchcc occurs ; [] |775| 
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 778,column 6,is_stmt,isa 0
$C$DW$1491	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1491, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1491, DW_AT_name("_matchTag")
	.dwattr $C$DW$1491, DW_AT_TI_call

        LCR       #_matchTag            ; [CPU_] |778| 
        ; call occurs [#_matchTag] ; [] |778| 
        MOVL      XAR0,#80              ; [CPU_] |778| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |778| 
        MOVL      XAR0,#9               ; [CPU_] |778| 
        MOVZ      AR0,*+FP[AR0]         ; [CPU_] |778| 
	.dwpsn	file "../Source/prod.c",line 779,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |779| 
        B         $C$L678,EQ            ; [CPU_] |779| 
        ; branchcc occurs ; [] |779| 
 setc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 782,column 7,is_stmt,isa 0
$C$DW$1492	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1492, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1492, DW_AT_name("_maf_rst")
	.dwattr $C$DW$1492, DW_AT_TI_call

        LCR       #_maf_rst             ; [CPU_] |782| 
        ; call occurs [#_maf_rst] ; [] |782| 
	.dwpsn	file "../Source/prod.c",line 783,column 7,is_stmt,isa 0
$C$DW$1493	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1493, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1493, DW_AT_name("_ad7738_setcal")
	.dwattr $C$DW$1493, DW_AT_TI_call

        LCR       #_ad7738_setcal       ; [CPU_] |783| 
        ; call occurs [#_ad7738_setcal] ; [] |783| 
        MOVL      XAR0,#78              ; [CPU_] |783| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |783| 
	.dwpsn	file "../Source/prod.c",line 784,column 7,is_stmt,isa 0
        ADDU      ACC,*-SP[52]          ; [CPU_] |784| 
        MOVL      XAR1,ACC              ; [CPU_] |784| 
        MOV       AL,*+XAR1[0]          ; [CPU_] |784| 
$C$DW$1494	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1494, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1494, DW_AT_name("_ad7738_resetpeak")
	.dwattr $C$DW$1494, DW_AT_TI_call

        LCR       #_ad7738_resetpeak    ; [CPU_] |784| 
        ; call occurs [#_ad7738_resetpeak] ; [] |784| 
	.dwpsn	file "../Source/prod.c",line 785,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |785| 
$C$DW$1495	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1495, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1495, DW_AT_name("_ad7738_resetvall")
	.dwattr $C$DW$1495, DW_AT_TI_call

        LCR       #_ad7738_resetvall    ; [CPU_] |785| 
        ; call occurs [#_ad7738_resetvall] ; [] |785| 
 clrc INTM
        SPM       #0                    ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 788,column 7,is_stmt,isa 0
$C$DW$1496	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1496, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1496, DW_AT_name("_lcd_clear")
	.dwattr $C$DW$1496, DW_AT_TI_call

        LCR       #_lcd_clear           ; [CPU_] |788| 
        ; call occurs [#_lcd_clear] ; [] |788| 
	.dwpsn	file "../Source/prod.c",line 789,column 7,is_stmt,isa 0
$C$DW$1497	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1497, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1497, DW_AT_name("_update_units")
	.dwattr $C$DW$1497, DW_AT_TI_call

        LCR       #_update_units        ; [CPU_] |789| 
        ; call occurs [#_update_units] ; [] |789| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 790,column 7,is_stmt,isa 0
        MOVB      @_autoidchanged,#1,UNC ; [CPU_] |790| 
$C$L678:    
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 793,column 5,is_stmt,isa 0
        MOVB      *+XAR4[0],#1,UNC      ; [CPU_] |793| 
$C$L679:    
        MOVL      XAR0,#9               ; [CPU_] 
        MOV       AL,*+FP[AR0]          ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 807,column 4,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |807| 
        ADDB      AL,#1                 ; [CPU_] |807| 
        MOV       *+FP[AR0],AL          ; [CPU_] |807| 
        B         $C$L680,NEQ           ; [CPU_] |807| 
        ; branchcc occurs ; [] |807| 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#82              ; [CPU_] |807| 
        ADDB      ACC,#1                ; [CPU_] |807| 
        MOVL      *+FP[AR0],ACC         ; [CPU_] |807| 
        B         $C$L681,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L680:    
        MOVL      XAR4,#_tagwasthere    ; [CPU_U] 
        MOVL      XAR0,#82              ; [CPU_] 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 808,column 5,is_stmt,isa 0
        MOVL      XAR0,#9               ; [CPU_] |808| 
        MOV       *+FP[AR0],#0          ; [CPU_] |808| 
$C$L681:    
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 816,column 3,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |816| 
        CMPB      AL,#1                 ; [CPU_] |816| 
        B         $C$L698,NEQ           ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
        MOV       AL,*-SP[48]           ; [CPU_] 
        B         $C$L698,EQ            ; [CPU_] |816| 
        ; branchcc occurs ; [] |816| 
	.dwpsn	file "../Source/prod.c",line 819,column 4,is_stmt,isa 0
$C$DW$1498	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1498, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1498, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1498, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |819| 
        ; call occurs [#_prod_getavail] ; [] |819| 
        MOVL      XAR6,ACC              ; [CPU_] |819| 
        MOV       T,*-SP[45]            ; [CPU_] |819| 
        MPY       P,T,*-SP[46]          ; [CPU_] |819| 
        MOVU      ACC,PL                ; [CPU_] |819| 
        CMPL      ACC,XAR6              ; [CPU_] |819| 
        B         $C$L684,LOS           ; [CPU_] |819| 
        ; branchcc occurs ; [] |819| 
        MOV       AL,*-SP[47]           ; [CPU_] 
        B         $C$L684,NEQ           ; [CPU_] |819| 
        ; branchcc occurs ; [] |819| 
	.dwpsn	file "../Source/prod.c",line 889,column 11,is_stmt,isa 0
$C$DW$1499	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1499, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1499, DW_AT_name("_ad7738_getlimitchgd")
	.dwattr $C$DW$1499, DW_AT_TI_call

        LCR       #_ad7738_getlimitchgd ; [CPU_] |889| 
        ; call occurs [#_ad7738_getlimitchgd] ; [] |889| 
        CMPB      AL,#0                 ; [CPU_] |889| 
        B         $C$L682,NEQ           ; [CPU_] |889| 
        ; branchcc occurs ; [] |889| 
        MOVW      DP,#_autoidchanged    ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 897,column 11,is_stmt,isa 0
        MOV       AL,@_autoidchanged    ; [CPU_] |897| 
        B         $C$L698,EQ            ; [CPU_] |897| 
        ; branchcc occurs ; [] |897| 
	.dwpsn	file "../Source/prod.c",line 898,column 5,is_stmt,isa 0
        MOV       @_autoidchanged,#0    ; [CPU_] |898| 
	.dwpsn	file "../Source/prod.c",line 901,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |901| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |903| 
        MOVB      XAR0,#36              ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 901,column 5,is_stmt,isa 0
        MOV       *+XAR4[0],#0          ; [CPU_] |901| 
	.dwpsn	file "../Source/prod.c",line 902,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#53,UNC     ; [CPU_] |902| 
	.dwpsn	file "../Source/prod.c",line 903,column 5,is_stmt,isa 0
        MOV       AL,*+XAR5[AR0]        ; [CPU_] |903| 
        MOVL      XAR0,#80              ; [CPU_] |903| 
        MOV       *+XAR4[2],AL          ; [CPU_] |903| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |903| 
	.dwpsn	file "../Source/prod.c",line 905,column 6,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |905| 
        MOV       AL,*XAR7              ; [CPU_] |905| 
        MOV       *+XAR4[3],AL          ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 907,column 5,is_stmt,isa 0
        MOVB      AL,#4                 ; [CPU_] |907| 
	.dwpsn	file "../Source/prod.c",line 905,column 6,is_stmt,isa 0
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |905| 
	.dwpsn	file "../Source/prod.c",line 907,column 5,is_stmt,isa 0
        B         $C$L697,UNC           ; [CPU_] |907| 
        ; branch occurs ; [] |907| 
$C$L682:    
	.dwpsn	file "../Source/prod.c",line 891,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |891| 
        MOV       *+XAR4[0],#0          ; [CPU_] |891| 
        MOVL      XAR1,XAR4             ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 893,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |893| 
	.dwpsn	file "../Source/prod.c",line 892,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#57,UNC     ; [CPU_] |892| 
	.dwpsn	file "../Source/prod.c",line 893,column 10,is_stmt,isa 0
        MOV       *-SP[41],AL           ; [CPU_] |893| 
        ADDB      XAR1,#2               ; [CPU_] 
$C$L683:    
	.dwpsn	file "../Source/prod.c",line 894,column 6,is_stmt,isa 0
$C$DW$1500	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1500, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1500, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1500, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |894| 
        ; call occurs [#_ad7738_getlimitst] ; [] |894| 
        MOV       *XAR1++,AL            ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 893,column 17,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |893| 
	.dwpsn	file "../Source/prod.c",line 894,column 6,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |894| 
	.dwpsn	file "../Source/prod.c",line 893,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |893| 
        B         $C$L683,LT            ; [CPU_] |893| 
        ; branchcc occurs ; [] |893| 
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 896,column 5,is_stmt,isa 0
        MOVB      AL,#6                 ; [CPU_] |896| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 897,column 4,is_stmt,isa 0
        B         $C$L697,UNC           ; [CPU_] |897| 
        ; branch occurs ; [] |897| 
$C$L684:    
        MOV       AL,*-SP[45]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 826,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |826| 
	.dwpsn	file "../Source/prod.c",line 824,column 5,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |824| 
	.dwpsn	file "../Source/prod.c",line 826,column 5,is_stmt,isa 0
        MOVL      *-SP[58],XAR4         ; [CPU_] |826| 
        MOV       *+XAR4[0],#0          ; [CPU_] |826| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        MOVB      XAR1,#7               ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 827,column 5,is_stmt,isa 0
        MOVB      *+XAR4[1],#221,UNC    ; [CPU_] |827| 
        MOV       AL,*-SP[46]           ; [CPU_] |827| 
	.dwpsn	file "../Source/prod.c",line 828,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AL          ; [CPU_] |828| 
        MOV       AL,*-SP[53]           ; [CPU_] |828| 
	.dwpsn	file "../Source/prod.c",line 829,column 5,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |829| 
        MOV       *+XAR4[3],AL          ; [CPU_] |829| 
        MOV       AL,*-SP[53]           ; [CPU_] |829| 
	.dwpsn	file "../Source/prod.c",line 830,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |830| 
        MOV       *+XAR4[4],AL          ; [CPU_] |830| 
        MOV       AL,*-SP[44]           ; [CPU_] |830| 
	.dwpsn	file "../Source/prod.c",line 831,column 5,is_stmt,isa 0
        MOV       *+XAR4[5],AL          ; [CPU_] |831| 
        MOV       AH,*-SP[43]           ; [CPU_] |831| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        AND       AL,AH,#0x00ff         ; [CPU_] |832| 
        MOV       *+XAR4[6],AL          ; [CPU_] |832| 
        MOV       AL,AH                 ; [CPU_] |832| 
        ADDB      AL,#1                 ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 823,column 5,is_stmt,isa 0
        MOV       *-SP[41],#0           ; [CPU_] |823| 
	.dwpsn	file "../Source/prod.c",line 832,column 5,is_stmt,isa 0
        MOV       *-SP[43],AL           ; [CPU_] |832| 
	.dwpsn	file "../Source/prod.c",line 834,column 5,is_stmt,isa 0
        B         $C$L694,UNC           ; [CPU_] |834| 
        ; branch occurs ; [] |834| 
$C$L685:    
	.dwpsn	file "../Source/prod.c",line 835,column 6,is_stmt,isa 0
$C$DW$1501	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1501, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1501, DW_AT_name("_prod_getnext")
	.dwattr $C$DW$1501, DW_AT_TI_call

        LCR       #_prod_getnext        ; [CPU_] |835| 
        ; call occurs [#_prod_getnext] ; [] |835| 
	.dwpsn	file "../Source/prod.c",line 837,column 7,is_stmt,isa 0
        DEC       *-SP[53]              ; [CPU_] |837| 
	.dwpsn	file "../Source/prod.c",line 835,column 6,is_stmt,isa 0
        MOVL      P,XAR4                ; [CPU_] |835| 
	.dwpsn	file "../Source/prod.c",line 837,column 7,is_stmt,isa 0
        B         $C$L694,NEQ           ; [CPU_] |837| 
        ; branchcc occurs ; [] |837| 
        MOV       AL,*-SP[45]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 839,column 6,is_stmt,isa 0
        MOV       *-SP[53],AL           ; [CPU_] |839| 
        MOV       AL,*-SP[44]           ; [CPU_] |839| 
	.dwpsn	file "../Source/prod.c",line 844,column 7,is_stmt,isa 0
        TBIT      AL,#0                 ; [CPU_] |844| 
        B         $C$L687,NTC           ; [CPU_] |844| 
        ; branchcc occurs ; [] |844| 
	.dwpsn	file "../Source/prod.c",line 845,column 8,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |845| 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 846,column 21,is_stmt,isa 0
        MOV       *-SP[51],#2           ; [CPU_] |846| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 848,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |848| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 845,column 8,is_stmt,isa 0
        MOVL      XAR7,P                ; [CPU_] |845| 
$C$L686:    
	.dwpsn	file "../Source/prod.c",line 847,column 9,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |847| 
        ANDB      AL,#0xff              ; [CPU_] |847| 
        MOV       *XAR5++,AL            ; [CPU_] |847| 
	.dwpsn	file "../Source/prod.c",line 848,column 9,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |848| 
        LSR       AL,8                  ; [CPU_] |848| 
        MOV       *XAR5++,AL            ; [CPU_] |848| 
	.dwpsn	file "../Source/prod.c",line 846,column 21,is_stmt,isa 0
        BANZ      $C$L686,AR6--         ; [CPU_] |846| 
        ; branchcc occurs ; [] |846| 
$C$L687:    
	.dwpsn	file "../Source/prod.c",line 842,column 6,is_stmt,isa 0
        MOVB      AL,#2                 ; [CPU_] |842| 
	.dwpsn	file "../Source/prod.c",line 855,column 11,is_stmt,isa 0
        MOVB      XAR7,#0               ; [CPU_] |855| 
        MOVB      XAR4,#1               ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 842,column 6,is_stmt,isa 0
        MOV       *-SP[52],AL           ; [CPU_] |842| 
$C$L688:    
	.dwpsn	file "../Source/prod.c",line 856,column 7,is_stmt,isa 0
        AND       AL,*-SP[44]           ; [CPU_] |856| 
        B         $C$L690,EQ            ; [CPU_] |856| 
        ; branchcc occurs ; [] |856| 
	.dwpsn	file "../Source/prod.c",line 857,column 8,is_stmt,isa 0
        MOV       ACC,AR7 << 1          ; [CPU_] |857| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |857| 
        ADDB      ACC,#2                ; [CPU_] |857| 
        MOVL      XAR0,ACC              ; [CPU_] |857| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |857| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 860,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |860| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 858,column 21,is_stmt,isa 0
        MOV       *-SP[51],#2           ; [CPU_] |858| 
$C$L689:    
	.dwpsn	file "../Source/prod.c",line 859,column 9,is_stmt,isa 0
        MOV       AL,*+XAR0[0]          ; [CPU_] |859| 
        ANDB      AL,#0xff              ; [CPU_] |859| 
        MOV       *XAR5++,AL            ; [CPU_] |859| 
	.dwpsn	file "../Source/prod.c",line 860,column 9,is_stmt,isa 0
        MOV       AL,*XAR0++            ; [CPU_] |860| 
        LSR       AL,8                  ; [CPU_] |860| 
        MOV       *XAR5++,AL            ; [CPU_] |860| 
	.dwpsn	file "../Source/prod.c",line 858,column 21,is_stmt,isa 0
        BANZ      $C$L689,AR6--         ; [CPU_] |858| 
        ; branchcc occurs ; [] |858| 
$C$L690:    
	.dwpsn	file "../Source/prod.c",line 855,column 18,is_stmt,isa 0
        MOV       AL,*-SP[52]           ; [CPU_] |855| 
        ADDB      XAR7,#1               ; [CPU_] |855| 
	.dwpsn	file "../Source/prod.c",line 864,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |864| 
        MOV       *-SP[52],AL           ; [CPU_] |864| 
	.dwpsn	file "../Source/prod.c",line 855,column 18,is_stmt,isa 0
        BANZ      $C$L688,AR4--         ; [CPU_] |855| 
        ; branchcc occurs ; [] |855| 
	.dwpsn	file "../Source/prod.c",line 840,column 6,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |840| 
	.dwpsn	file "../Source/prod.c",line 867,column 11,is_stmt,isa 0
        MOVB      XAR4,#0               ; [CPU_] |867| 
        SETC      SXM                   ; [CPU_] 
$C$L691:    
        MOV       AL,*-SP[52]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 868,column 7,is_stmt,isa 0
        AND       AL,*-SP[44]           ; [CPU_] |868| 
        B         $C$L693,EQ            ; [CPU_] |868| 
        ; branchcc occurs ; [] |868| 
	.dwpsn	file "../Source/prod.c",line 869,column 8,is_stmt,isa 0
        MOV       ACC,AR4 << 1          ; [CPU_] |869| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDL      ACC,P                 ; [CPU_] |869| 
        ADDB      ACC,#6                ; [CPU_] |869| 
        MOVL      XAR7,ACC              ; [CPU_] |869| 
        MOVL      ACC,*-SP[58]          ; [CPU_] |869| 
        ADD       ACC,AR1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 872,column 9,is_stmt,isa 0
        ADDB      XAR1,#4               ; [CPU_] |872| 
        MOVL      XAR5,ACC              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 870,column 21,is_stmt,isa 0
        MOV       *-SP[51],#2           ; [CPU_] |870| 
$C$L692:    
	.dwpsn	file "../Source/prod.c",line 871,column 9,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |871| 
        ANDB      AL,#0xff              ; [CPU_] |871| 
        MOV       *XAR5++,AL            ; [CPU_] |871| 
	.dwpsn	file "../Source/prod.c",line 872,column 9,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |872| 
        LSR       AL,8                  ; [CPU_] |872| 
        MOV       *XAR5++,AL            ; [CPU_] |872| 
	.dwpsn	file "../Source/prod.c",line 870,column 21,is_stmt,isa 0
        BANZ      $C$L692,AR6--         ; [CPU_] |870| 
        ; branchcc occurs ; [] |870| 
$C$L693:    
        MOV       AL,*-SP[52]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 867,column 18,is_stmt,isa 0
        ADDB      XAR4,#1               ; [CPU_] |867| 
	.dwpsn	file "../Source/prod.c",line 876,column 7,is_stmt,isa 0
        LSL       AL,1                  ; [CPU_] |876| 
        MOV       *-SP[52],AL           ; [CPU_] |876| 
	.dwpsn	file "../Source/prod.c",line 867,column 18,is_stmt,isa 0
        MOV       AL,AR4                ; [CPU_] |867| 
        CMPB      AL,#2                 ; [CPU_] |867| 
        B         $C$L691,LT            ; [CPU_] |867| 
        ; branchcc occurs ; [] |867| 
$C$L694:    
	.dwpsn	file "../Source/prod.c",line 834,column 12,is_stmt,isa 0
$C$DW$1502	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1502, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1502, DW_AT_name("_prod_getavail")
	.dwattr $C$DW$1502, DW_AT_TI_call

        LCR       #_prod_getavail       ; [CPU_] |834| 
        ; call occurs [#_prod_getavail] ; [] |834| 
        TEST      ACC                   ; [CPU_] |834| 
        B         $C$L695,EQ            ; [CPU_] |834| 
        ; branchcc occurs ; [] |834| 
        MOV       AL,*-SP[46]           ; [CPU_] 
        CMP       AL,*-SP[41]           ; [CPU_] |834| 
        B         $C$L685,HI            ; [CPU_] |834| 
        ; branchcc occurs ; [] |834| 
$C$L695:    
	.dwpsn	file "../Source/prod.c",line 880,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |880| 
        MOV       AL,*-SP[41]           ; [CPU_] |880| 
        MOV       *+XAR4[2],AL          ; [CPU_] |880| 
        MOV       AL,*-SP[47]           ; [CPU_] |880| 
	.dwpsn	file "../Source/prod.c",line 882,column 5,is_stmt,isa 0
        B         $C$L696,EQ            ; [CPU_] |882| 
        ; branchcc occurs ; [] |882| 
	.dwpsn	file "../Source/prod.c",line 883,column 6,is_stmt,isa 0
        MOV       *-SP[48],#0           ; [CPU_] |883| 
$C$L696:    
	.dwpsn	file "../Source/prod.c",line 886,column 5,is_stmt,isa 0
        MOV       AL,AR1                ; [CPU_] |886| 
$C$L697:    
$C$DW$1503	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1503, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1503, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1503, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |886| 
        ; call occurs [#_scia_send_bin] ; [] |886| 
$C$L698:    
	.dwpsn	file "../Source/prod.c",line 921,column 4,is_stmt,isa 0
$C$DW$1504	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1504, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1504, DW_AT_name("_scia_rx_getcmds")
	.dwattr $C$DW$1504, DW_AT_TI_call

        LCR       #_scia_rx_getcmds     ; [CPU_] |921| 
        ; call occurs [#_scia_rx_getcmds] ; [] |921| 
        CMPB      AL,#0                 ; [CPU_] |921| 
        B         $C$L648,EQ            ; [CPU_] |921| 
        ; branchcc occurs ; [] |921| 
        MOVL      XAR4,*-SP[60]         ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 927,column 3,is_stmt,isa 0
        MOV       AL,#1024              ; [CPU_] |927| 
$C$DW$1505	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1505, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1505, DW_AT_name("_scia_rx_getcmd")
	.dwattr $C$DW$1505, DW_AT_TI_call

        LCR       #_scia_rx_getcmd      ; [CPU_] |927| 
        ; call occurs [#_scia_rx_getcmd] ; [] |927| 
        MOV       *-SP[53],AL           ; [CPU_] |927| 
        CMPB      AL,#0                 ; [CPU_] |927| 
        B         $C$L648,EQ            ; [CPU_] |927| 
        ; branchcc occurs ; [] |927| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 944,column 4,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |944| 
        B         $C$L325,EQ            ; [CPU_] |944| 
        ; branchcc occurs ; [] |944| 
	.dwpsn	file "../Source/prod.c",line 3556,column 10,is_stmt,isa 0
        CMPB      AL,#1                 ; [CPU_] |3556| 
        B         $C$L648,NEQ           ; [CPU_] |3556| 
        ; branchcc occurs ; [] |3556| 
        MOV       AL,*-SP[53]           ; [CPU_] 
        CMPB      AL,#2                 ; [CPU_] |3556| 
        B         $C$L648,LO            ; [CPU_] |3556| 
        ; branchcc occurs ; [] |3556| 
        MOVL      XAR7,*-SP[60]         ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3590,column 4,is_stmt,isa 0
        MOVL      XAR1,#_cmdbuff$2      ; [CPU_U] |3590| 
	.dwpsn	file "../Source/prod.c",line 3579,column 5,is_stmt,isa 0
        RPT       #1
||     PREAD     *XAR4++,*XAR7         ; [CPU_] |3579| 
	.dwpsn	file "../Source/prod.c",line 3583,column 4,is_stmt,isa 0
        MOVL      XAR4,*-SP[60]         ; [CPU_] |3583| 
	.dwpsn	file "../Source/prod.c",line 3582,column 4,is_stmt,isa 0
        MOV       *-SP[55],#2           ; [CPU_] |3582| 
	.dwpsn	file "../Source/prod.c",line 3590,column 4,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3590| 
	.dwpsn	file "../Source/prod.c",line 3583,column 4,is_stmt,isa 0
        MOV       *-SP[41],#1           ; [CPU_] |3583| 
	.dwpsn	file "../Source/prod.c",line 3590,column 4,is_stmt,isa 0
        MOV       AL,*+XAR4[1]          ; [CPU_] |3590| 
        CMPB      AL,#131               ; [CPU_] |3590| 
        B         $C$L706,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#131               ; [CPU_] |3590| 
        B         $C$L314,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#56                ; [CPU_] |3590| 
        B         $C$L702,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#56                ; [CPU_] |3590| 
        B         $C$L736,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#48                ; [CPU_] |3590| 
        B         $C$L700,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#48                ; [CPU_] |3590| 
        B         $C$L284,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#33                ; [CPU_] |3590| 
        B         $C$L699,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#33                ; [CPU_] |3590| 
        B         $C$L305,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#16                ; [CPU_] |3590| 
        B         $C$L763,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        MOV       AH,AL                 ; [CPU_] |3590| 
        ADDB      AH,#-17               ; [CPU_] |3590| 
        CMPB      AH,#1                 ; [CPU_] |3590| 
        B         $C$L761,LOS           ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#32                ; [CPU_] |3590| 
        B         $C$L757,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L699:    
        CMPB      AL,#34                ; [CPU_] |3590| 
        B         $C$L301,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#35                ; [CPU_] |3590| 
        B         $C$L298,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#36                ; [CPU_] |3590| 
        B         $C$L290,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L700:    
        CMPB      AL,#52                ; [CPU_] |3590| 
        B         $C$L701,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#52                ; [CPU_] |3590| 
        B         $C$L750,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#49                ; [CPU_] |3590| 
        B         $C$L259,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#50                ; [CPU_] |3590| 
        B         $C$L753,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#51                ; [CPU_] |3590| 
        B         $C$L752,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L701:    
        CMPB      AL,#53                ; [CPU_] |3590| 
        B         $C$L749,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#54                ; [CPU_] |3590| 
        B         $C$L747,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#55                ; [CPU_] |3590| 
        B         $C$L740,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L702:    
        CMPB      AL,#82                ; [CPU_] |3590| 
        B         $C$L704,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#82                ; [CPU_] |3590| 
        B         $C$L720,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#70                ; [CPU_] |3590| 
        B         $C$L703,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#70                ; [CPU_] |3590| 
        B         $C$L724,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#57                ; [CPU_] |3590| 
        B         $C$L734,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        MOV       AH,AL                 ; [CPU_] |3590| 
        ADDB      AH,#-65               ; [CPU_] |3590| 
        CMPB      AH,#3                 ; [CPU_] |3590| 
        B         $C$L732,LOS           ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#69                ; [CPU_] |3590| 
        B         $C$L730,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L703:    
        CMPB      AL,#71                ; [CPU_] |3590| 
        B         $C$L255,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#72                ; [CPU_] |3590| 
        B         $C$L248,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#81                ; [CPU_] |3590| 
        B         $C$L247,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L704:    
        CMPB      AL,#86                ; [CPU_] |3590| 
        B         $C$L705,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#86                ; [CPU_] |3590| 
        B         $C$L243,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#83                ; [CPU_] |3590| 
        B         $C$L719,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#84                ; [CPU_] |3590| 
        B         $C$L716,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#85                ; [CPU_] |3590| 
        B         $C$L245,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L705:    
        CMPB      AL,#87                ; [CPU_] |3590| 
        B         $C$L715,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#88                ; [CPU_] |3590| 
        B         $C$L714,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#130               ; [CPU_] |3590| 
        B         $C$L238,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L706:    
        CMPB      AL,#167               ; [CPU_] |3590| 
        B         $C$L710,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#167               ; [CPU_] |3590| 
        B         $C$L178,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#150               ; [CPU_] |3590| 
        B         $C$L708,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#150               ; [CPU_] |3590| 
        B         $C$L222,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#146               ; [CPU_] |3590| 
        B         $C$L707,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#146               ; [CPU_] |3590| 
        B         $C$L228,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#132               ; [CPU_] |3590| 
        B         $C$L313,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#144               ; [CPU_] |3590| 
        B         $C$L234,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#145               ; [CPU_] |3590| 
        B         $C$L232,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L707:    
        CMPB      AL,#147               ; [CPU_] |3590| 
        B         $C$L225,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#148               ; [CPU_] |3590| 
        B         $C$L224,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#149               ; [CPU_] |3590| 
        B         $C$L223,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L708:    
        CMPB      AL,#162               ; [CPU_] |3590| 
        B         $C$L709,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#162               ; [CPU_] |3590| 
        B         $C$L187,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#153               ; [CPU_] |3590| 
        B         $C$L213,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#160               ; [CPU_] |3590| 
        B         $C$L208,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#161               ; [CPU_] |3590| 
        B         $C$L192,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L709:    
        CMPB      AL,#163               ; [CPU_] |3590| 
        B         $C$L183,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#165               ; [CPU_] |3590| 
        B         $C$L182,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#166               ; [CPU_] |3590| 
        B         $C$L180,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L710:    
        CMPB      AL,#194               ; [CPU_] |3590| 
        B         $C$L712,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#194               ; [CPU_] |3590| 
        B         $C$L149,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#186               ; [CPU_] |3590| 
        B         $C$L711,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#186               ; [CPU_] |3590| 
        B         $C$L311,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#168               ; [CPU_] |3590| 
        B         $C$L176,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#169               ; [CPU_] |3590| 
        B         $C$L167,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#170               ; [CPU_] |3590| 
        B         $C$L163,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L711:    
        CMPB      AL,#187               ; [CPU_] |3590| 
        B         $C$L310,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#192               ; [CPU_] |3590| 
        B         $C$L159,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#193               ; [CPU_] |3590| 
        B         $C$L152,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L712:    
        CMPB      AL,#198               ; [CPU_] |3590| 
        B         $C$L713,GT            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#198               ; [CPU_] |3590| 
        B         $C$L79,EQ             ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#195               ; [CPU_] |3590| 
        B         $C$L142,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#196               ; [CPU_] |3590| 
        B         $C$L114,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#197               ; [CPU_] |3590| 
        B         $C$L90,EQ             ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L713:    
        CMPB      AL,#210               ; [CPU_] |3590| 
        B         $C$L78,EQ             ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#211               ; [CPU_] |3590| 
        B         $C$L309,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        CMPB      AL,#240               ; [CPU_] |3590| 
        B         $C$L308,EQ            ; [CPU_] |3590| 
        ; branchcc occurs ; [] |3590| 
        B         $C$L320,UNC           ; [CPU_] |3590| 
        ; branch occurs ; [] |3590| 
$C$L714:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3702,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3702| 
        MOVL      XAR0,#66              ; [CPU_] |3702| 
        MOVB      AL,#3                 ; [CPU_] |3702| 
        AND       AH,@_cmdbuff$2+2,#0x0001 ; [CPU_] |3702| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3702| 
$C$DW$1506	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1506, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1506, DW_AT_name("_ssr_set")
	.dwattr $C$DW$1506, DW_AT_TI_call

        LCR       #_ssr_set             ; [CPU_] |3702| 
        ; call occurs [#_ssr_set] ; [] |3702| 
	.dwpsn	file "../Source/prod.c",line 3706,column 5,is_stmt,isa 0
        B         $C$L763,UNC           ; [CPU_] |3706| 
        ; branch occurs ; [] |3706| 
$C$L715:    
	.dwpsn	file "../Source/prod.c",line 3667,column 5,is_stmt,isa 0
$C$DW$1507	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1507, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1507, DW_AT_name("_get_numSensors")
	.dwattr $C$DW$1507, DW_AT_TI_call

        LCR       #_get_numSensors      ; [CPU_] |3667| 
        ; call occurs [#_get_numSensors] ; [] |3667| 
	.dwpsn	file "../Source/prod.c",line 3671,column 5,is_stmt,isa 0
        B         $C$L762,UNC           ; [CPU_] |3671| 
        ; branch occurs ; [] |3671| 
$C$L716:    
	.dwpsn	file "../Source/prod.c",line 3683,column 5,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |3683| 
$C$DW$1508	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1508, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1508, DW_AT_name("_ad7738_getDropTime")
	.dwattr $C$DW$1508, DW_AT_TI_call

        LCR       #_ad7738_getDropTime  ; [CPU_] |3683| 
        ; call occurs [#_ad7738_getDropTime] ; [] |3683| 
	.dwpsn	file "../Source/prod.c",line 3684,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3684| 
	.dwpsn	file "../Source/prod.c",line 3683,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3683| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[16],ACC          ; [CPU_] |3683| 
	.dwpsn	file "../Source/prod.c",line 3684,column 5,is_stmt,isa 0
        SUBB      XAR4,#16              ; [CPU_U] |3684| 
	.dwpsn	file "../Source/prod.c",line 3683,column 5,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3683| 
	.dwpsn	file "../Source/prod.c",line 3684,column 5,is_stmt,isa 0
        MOVZ      AR4,AR4               ; [CPU_] |3684| 
        ADD       ACC,*-SP[55]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L717:    
	.dwpsn	file "../Source/prod.c",line 3686,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3686| 
        ANDB      AL,#0xff              ; [CPU_] |3686| 
        MOV       *XAR1++,AL            ; [CPU_] |3686| 
	.dwpsn	file "../Source/prod.c",line 3687,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3687| 
        LSR       AL,8                  ; [CPU_] |3687| 
        MOV       *XAR1++,AL            ; [CPU_] |3687| 
	.dwpsn	file "../Source/prod.c",line 3685,column 17,is_stmt,isa 0
        BANZ      $C$L717,AR6--         ; [CPU_] |3685| 
        ; branchcc occurs ; [] |3685| 
	.dwpsn	file "../Source/prod.c",line 3690,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3690| 
$C$DW$1509	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1509, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1509, DW_AT_name("_ad7738_getDropTime")
	.dwattr $C$DW$1509, DW_AT_TI_call

        LCR       #_ad7738_getDropTime  ; [CPU_] |3690| 
        ; call occurs [#_ad7738_getDropTime] ; [] |3690| 
	.dwpsn	file "../Source/prod.c",line 3691,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3691| 
        SUBB      XAR4,#16              ; [CPU_U] |3691| 
        MOVZ      AR4,AR4               ; [CPU_] |3691| 
	.dwpsn	file "../Source/prod.c",line 3690,column 5,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |3690| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3687,column 6,is_stmt,isa 0
        ADD       *-SP[55],#8           ; [CPU_] |3687| 
$C$L718:    
	.dwpsn	file "../Source/prod.c",line 3693,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3693| 
        ANDB      AL,#0xff              ; [CPU_] |3693| 
        MOV       *XAR1++,AL            ; [CPU_] |3693| 
	.dwpsn	file "../Source/prod.c",line 3694,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3694| 
        LSR       AL,8                  ; [CPU_] |3694| 
        MOV       *XAR1++,AL            ; [CPU_] |3694| 
	.dwpsn	file "../Source/prod.c",line 3692,column 17,is_stmt,isa 0
        BANZ      $C$L718,AR6--         ; [CPU_] |3692| 
        ; branchcc occurs ; [] |3692| 
        B         $C$L765,UNC           ; [CPU_] |3692| 
        ; branch occurs ; [] |3692| 
$C$L719:    
	.dwpsn	file "../Source/prod.c",line 3675,column 5,is_stmt,isa 0
        MOVB      AL,#1                 ; [CPU_] |3675| 
$C$DW$1510	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1510, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1510, DW_AT_name("_toggleFastDataCollect")
	.dwattr $C$DW$1510, DW_AT_TI_call

        LCR       #_toggleFastDataCollect ; [CPU_] |3675| 
        ; call occurs [#_toggleFastDataCollect] ; [] |3675| 
	.dwpsn	file "../Source/prod.c",line 3679,column 5,is_stmt,isa 0
        B         $C$L763,UNC           ; [CPU_] |3679| 
        ; branch occurs ; [] |3679| 
$C$L720:    
	.dwpsn	file "../Source/prod.c",line 3630,column 5,is_stmt,isa 0
$C$DW$1511	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1511, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1511, DW_AT_name("_ad7738_getload")
	.dwattr $C$DW$1511, DW_AT_TI_call

        LCR       #_ad7738_getload      ; [CPU_] |3630| 
        ; call occurs [#_ad7738_getload] ; [] |3630| 
	.dwpsn	file "../Source/prod.c",line 3631,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3631| 
	.dwpsn	file "../Source/prod.c",line 3630,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |3630| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[16],ACC          ; [CPU_] |3630| 
	.dwpsn	file "../Source/prod.c",line 3631,column 5,is_stmt,isa 0
        SUBB      XAR4,#16              ; [CPU_U] |3631| 
	.dwpsn	file "../Source/prod.c",line 3630,column 5,is_stmt,isa 0
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |3630| 
	.dwpsn	file "../Source/prod.c",line 3631,column 5,is_stmt,isa 0
        MOVZ      AR4,AR4               ; [CPU_] |3631| 
        ADD       ACC,*-SP[55]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L721:    
	.dwpsn	file "../Source/prod.c",line 3633,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3633| 
        ANDB      AL,#0xff              ; [CPU_] |3633| 
        MOV       *XAR1++,AL            ; [CPU_] |3633| 
	.dwpsn	file "../Source/prod.c",line 3634,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3634| 
        LSR       AL,8                  ; [CPU_] |3634| 
        MOV       *XAR1++,AL            ; [CPU_] |3634| 
	.dwpsn	file "../Source/prod.c",line 3632,column 17,is_stmt,isa 0
        BANZ      $C$L721,AR6--         ; [CPU_] |3632| 
        ; branchcc occurs ; [] |3632| 
	.dwpsn	file "../Source/prod.c",line 3638,column 5,is_stmt,isa 0
$C$DW$1512	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1512, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1512, DW_AT_name("_ad7738_getpos")
	.dwattr $C$DW$1512, DW_AT_TI_call

        LCR       #_ad7738_getpos       ; [CPU_] |3638| 
        ; call occurs [#_ad7738_getpos] ; [] |3638| 
	.dwpsn	file "../Source/prod.c",line 3639,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3639| 
        SUBB      XAR4,#16              ; [CPU_U] |3639| 
        MOVZ      AR4,AR4               ; [CPU_] |3639| 
	.dwpsn	file "../Source/prod.c",line 3638,column 5,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |3638| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L722:    
	.dwpsn	file "../Source/prod.c",line 3641,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3641| 
        ANDB      AL,#0xff              ; [CPU_] |3641| 
        MOV       *XAR1++,AL            ; [CPU_] |3641| 
	.dwpsn	file "../Source/prod.c",line 3642,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3642| 
        LSR       AL,8                  ; [CPU_] |3642| 
        MOV       *XAR1++,AL            ; [CPU_] |3642| 
	.dwpsn	file "../Source/prod.c",line 3640,column 17,is_stmt,isa 0
        BANZ      $C$L722,AR6--         ; [CPU_] |3640| 
        ; branchcc occurs ; [] |3640| 
	.dwpsn	file "../Source/prod.c",line 3646,column 5,is_stmt,isa 0
$C$DW$1513	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1513, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1513, DW_AT_name("_ad7738_getpeakload")
	.dwattr $C$DW$1513, DW_AT_TI_call

        LCR       #_ad7738_getpeakload  ; [CPU_] |3646| 
        ; call occurs [#_ad7738_getpeakload] ; [] |3646| 
	.dwpsn	file "../Source/prod.c",line 3647,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3647| 
        SUBB      XAR4,#16              ; [CPU_U] |3647| 
        MOVZ      AR4,AR4               ; [CPU_] |3647| 
	.dwpsn	file "../Source/prod.c",line 3646,column 5,is_stmt,isa 0
        MOVL      *-SP[16],ACC          ; [CPU_] |3646| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3634,column 6,is_stmt,isa 0
        ADD       *-SP[55],#12          ; [CPU_] |3634| 
$C$L723:    
	.dwpsn	file "../Source/prod.c",line 3649,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3649| 
        ANDB      AL,#0xff              ; [CPU_] |3649| 
        MOV       *XAR1++,AL            ; [CPU_] |3649| 
	.dwpsn	file "../Source/prod.c",line 3650,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3650| 
        LSR       AL,8                  ; [CPU_] |3650| 
        MOV       *XAR1++,AL            ; [CPU_] |3650| 
	.dwpsn	file "../Source/prod.c",line 3648,column 17,is_stmt,isa 0
        BANZ      $C$L723,AR6--         ; [CPU_] |3648| 
        ; branchcc occurs ; [] |3648| 
        B         $C$L765,UNC           ; [CPU_] |3648| 
        ; branch occurs ; [] |3648| 
$C$L724:    
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4254,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4254| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4254| 
        ADD       ACC,*-SP[55]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L725:    
	.dwpsn	file "../Source/prod.c",line 4256,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |4256| 
        ANDB      AL,#0xff              ; [CPU_] |4256| 
        MOV       *XAR1++,AL            ; [CPU_] |4256| 
	.dwpsn	file "../Source/prod.c",line 4257,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |4257| 
        LSR       AL,8                  ; [CPU_] |4257| 
        MOV       *XAR1++,AL            ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4255,column 17,is_stmt,isa 0
        BANZ      $C$L725,AR6--         ; [CPU_] |4255| 
        ; branchcc occurs ; [] |4255| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4263,column 6,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4263| 
        MOV       AH,#0                 ; [CPU_] |4263| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4263| 
        ADDB      XAR4,#46              ; [CPU_] 
        MOVL      *-SP[58],XAR4         ; [CPU_] 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4263| 
$C$DW$1514	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1514, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1514, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1514, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4263| 
        ; call occurs [#FS$$CMP] ; [] |4263| 
        CMPB      AL,#0                 ; [CPU_] |4263| 
        B         $C$L726,NEQ           ; [CPU_] |4263| 
        ; branchcc occurs ; [] |4263| 
	.dwpsn	file "../Source/prod.c",line 4262,column 6,is_stmt,isa 0
        MOV       *-SP[41],#128         ; [CPU_] |4262| 
        B         $C$L727,UNC           ; [CPU_] 
        ; branch occurs ; [] 
$C$L726:    
	.dwpsn	file "../Source/prod.c",line 4264,column 7,is_stmt,isa 0
        MOV       *-SP[41],#129         ; [CPU_] |4264| 
$C$L727:    
	.dwpsn	file "../Source/prod.c",line 4266,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |4266| 
        MOV       AL,#0                 ; [CPU_] |4266| 
        MOV       AH,#0                 ; [CPU_] |4266| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4266| 
        MOVL      ACC,*+XAR4[2]         ; [CPU_] |4266| 
$C$DW$1515	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1515, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1515, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1515, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4266| 
        ; call occurs [#FS$$CMP] ; [] |4266| 
        CMPB      AL,#0                 ; [CPU_] |4266| 
        B         $C$L728,EQ            ; [CPU_] |4266| 
        ; branchcc occurs ; [] |4266| 
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4267,column 7,is_stmt,isa 0
        ORB       AL,#0x02              ; [CPU_] |4267| 
        MOV       *-SP[41],AL           ; [CPU_] |4267| 
$C$L728:    
	.dwpsn	file "../Source/prod.c",line 4269,column 6,is_stmt,isa 0
        MOVL      XAR4,*-SP[58]         ; [CPU_] |4269| 
        MOV       ACC,#32512 << 15      ; [CPU_] |4269| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4269| 
        MOVL      ACC,*+XAR4[4]         ; [CPU_] |4269| 
$C$DW$1516	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1516, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1516, DW_AT_name("FS$$CMP")
	.dwattr $C$DW$1516, DW_AT_TI_call

        LCR       #FS$$CMP              ; [CPU_] |4269| 
        ; call occurs [#FS$$CMP] ; [] |4269| 
        CMPB      AL,#0                 ; [CPU_] |4269| 
        B         $C$L729,EQ            ; [CPU_] |4269| 
        ; branchcc occurs ; [] |4269| 
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4270,column 7,is_stmt,isa 0
        ORB       AL,#0x04              ; [CPU_] |4270| 
        MOV       *-SP[41],AL           ; [CPU_] |4270| 
$C$L729:    
        MOV       AL,*-SP[41]           ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4272,column 6,is_stmt,isa 0
        ANDB      AL,#255               ; [CPU_] |4272| 
        MOV       *+XAR1[0],AL          ; [CPU_] |4272| 
	.dwpsn	file "../Source/prod.c",line 4257,column 6,is_stmt,isa 0
        ADD       *-SP[55],#5           ; [CPU_] |4257| 
	.dwpsn	file "../Source/prod.c",line 4261,column 17,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |4261| 
        ; branch occurs ; [] |4261| 
$C$L730:    
	.dwpsn	file "../Source/prod.c",line 4247,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4247| 
        MOV       AH,#16672             ; [CPU_] |4247| 
        MOVL      XAR0,#46              ; [CPU_] |4247| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4247| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4247| 
$C$DW$1517	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1517, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1517, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1517, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4247| 
        ; call occurs [#FS$$MPY] ; [] |4247| 
$C$DW$1518	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1518, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1518, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1518, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4247| 
        ; call occurs [#FS$$TOU] ; [] |4247| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4247| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4247| 
	.dwpsn	file "../Source/prod.c",line 4248,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4248| 
	.dwpsn	file "../Source/prod.c",line 4247,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4247| 
	.dwpsn	file "../Source/prod.c",line 4248,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4248| 
$C$L731:    
        MOV       *-SP[55],#4           ; [CPU_] |4248| 
	.dwpsn	file "../Source/prod.c",line 4250,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |4250| 
        ; branch occurs ; [] |4250| 
$C$L732:    
	.dwpsn	file "../Source/prod.c",line 4229,column 5,is_stmt,isa 0
        MOV       AL,#0                 ; [CPU_] |4229| 
        MOV       AH,#16672             ; [CPU_] |4229| 
        MOVL      XAR0,#46              ; [CPU_] |4229| 
        MOVL      *-SP[2],ACC           ; [CPU_] |4229| 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] |4229| 
$C$DW$1519	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1519, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1519, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1519, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4229| 
        ; call occurs [#FS$$MPY] ; [] |4229| 
$C$DW$1520	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1520, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1520, DW_AT_name("FS$$TOU")
	.dwattr $C$DW$1520, DW_AT_TI_call

        LCR       #FS$$TOU              ; [CPU_] |4229| 
        ; call occurs [#FS$$TOU] ; [] |4229| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4229| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4229| 
	.dwpsn	file "../Source/prod.c",line 4230,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4229,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4229| 
	.dwpsn	file "../Source/prod.c",line 4230,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4230| 
	.dwpsn	file "../Source/prod.c",line 4232,column 5,is_stmt,isa 0
$C$DW$1521	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1521, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1521, DW_AT_name("_ad7738_getmon")
	.dwattr $C$DW$1521, DW_AT_TI_call

        LCR       #_ad7738_getmon       ; [CPU_] |4232| 
        ; call occurs [#_ad7738_getmon] ; [] |4232| 
	.dwpsn	file "../Source/prod.c",line 4233,column 5,is_stmt,isa 0
        MOV       AL,#20480             ; [CPU_] |4233| 
        MOV       AH,#18371             ; [CPU_] |4233| 
        SETC      SXM                   ; [CPU_] 
        MOVL      *-SP[2],ACC           ; [CPU_] |4233| 
        MOV       ACC,*+XAR1[0] << 1    ; [CPU_] |4233| 
        ADDL      ACC,XAR4              ; [CPU_] |4233| 
        SUBB      ACC,#130              ; [CPU_] |4233| 
        MOVL      XAR4,ACC              ; [CPU_] |4233| 
        MOVL      ACC,*+XAR4[0]         ; [CPU_] |4233| 
$C$DW$1522	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1522, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1522, DW_AT_name("FS$$MPY")
	.dwattr $C$DW$1522, DW_AT_TI_call

        LCR       #FS$$MPY              ; [CPU_] |4233| 
        ; call occurs [#FS$$MPY] ; [] |4233| 
$C$DW$1523	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1523, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1523, DW_AT_name("FS$$TOL")
	.dwattr $C$DW$1523, DW_AT_TI_call

        LCR       #FS$$TOL              ; [CPU_] |4233| 
        ; call occurs [#FS$$TOL] ; [] |4233| 
	.dwpsn	file "../Source/prod.c",line 4234,column 5,is_stmt,isa 0
        MOVZ      AR5,SP                ; [CPU_] |4234| 
	.dwpsn	file "../Source/prod.c",line 4233,column 5,is_stmt,isa 0
        MOVL      XAR0,#44              ; [CPU_] |4233| 
        MOVL      *-SP[14],ACC          ; [CPU_] |4233| 
	.dwpsn	file "../Source/prod.c",line 4234,column 5,is_stmt,isa 0
        SUBB      XAR5,#14              ; [CPU_U] |4234| 
	.dwpsn	file "../Source/prod.c",line 4233,column 5,is_stmt,isa 0
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |4233| 
	.dwpsn	file "../Source/prod.c",line 4234,column 5,is_stmt,isa 0
        MOVZ      AR5,AR5               ; [CPU_] |4234| 
        MOVB      XAR6,#1               ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4237,column 6,is_stmt,isa 0
        MOV       *-SP[55],#8           ; [CPU_] |4237| 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L733:    
	.dwpsn	file "../Source/prod.c",line 4236,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4236| 
        ANDB      AL,#0xff              ; [CPU_] |4236| 
        MOV       *XAR4++,AL            ; [CPU_] |4236| 
	.dwpsn	file "../Source/prod.c",line 4237,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4237| 
        LSR       AL,8                  ; [CPU_] |4237| 
        MOV       *XAR4++,AL            ; [CPU_] |4237| 
	.dwpsn	file "../Source/prod.c",line 4235,column 17,is_stmt,isa 0
        BANZ      $C$L733,AR6--         ; [CPU_] |4235| 
        ; branchcc occurs ; [] |4235| 
        B         $C$L765,UNC           ; [CPU_] |4235| 
        ; branch occurs ; [] |4235| 
$C$L734:    
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4216,column 6,is_stmt,isa 0
        ADDB      AL,#4                 ; [CPU_] |4216| 
        MOV       *-SP[55],AL           ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4215,column 10,is_stmt,isa 0
        MOVB      AL,#0                 ; [CPU_] |4215| 
        MOV       *-SP[41],AL           ; [CPU_] |4215| 
$C$L735:    
	.dwpsn	file "../Source/prod.c",line 4216,column 6,is_stmt,isa 0
$C$DW$1524	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1524, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1524, DW_AT_name("_ad7738_getlimitst")
	.dwattr $C$DW$1524, DW_AT_TI_call

        LCR       #_ad7738_getlimitst   ; [CPU_] |4216| 
        ; call occurs [#_ad7738_getlimitst] ; [] |4216| 
        MOV       *XAR1++,AL            ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4215,column 17,is_stmt,isa 0
        INC       *-SP[41]              ; [CPU_] |4215| 
	.dwpsn	file "../Source/prod.c",line 4216,column 6,is_stmt,isa 0
        MOV       AL,*-SP[41]           ; [CPU_] |4216| 
	.dwpsn	file "../Source/prod.c",line 4215,column 17,is_stmt,isa 0
        CMPB      AL,#4                 ; [CPU_] |4215| 
        B         $C$L735,LT            ; [CPU_] |4215| 
        ; branchcc occurs ; [] |4215| 
        B         $C$L765,UNC           ; [CPU_] |4215| 
        ; branch occurs ; [] |4215| 
$C$L736:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] 
        MOVB      XAR3,#3               ; [CPU_] 
        ADD       ACC,*-SP[55]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR7             ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#789 << 2         ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR7              ; [CPU_] 
        ADD       ACC,#1579 << 1        ; [CPU_] 
        MOVL      XAR7,ACC              ; [CPU_] 
$C$L737:    
	.dwpsn	file "../Source/prod.c",line 4193,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4193| 
        ADD       ACC,#197 << 4         ; [CPU_] |4193| 
        MOVL      XAR6,ACC              ; [CPU_] |4193| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4193| 
        MOV       *XAR4++,AL            ; [CPU_] |4193| 
	.dwpsn	file "../Source/prod.c",line 4194,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4194| 
        ADD       ACC,#3153 << 0        ; [CPU_] |4194| 
        MOVL      XAR6,ACC              ; [CPU_] |4194| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4194| 
        MOV       *XAR4++,AL            ; [CPU_] |4194| 
	.dwpsn	file "../Source/prod.c",line 4195,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4195| 
        ADD       ACC,#1577 << 1        ; [CPU_] |4195| 
        MOVL      XAR6,ACC              ; [CPU_] |4195| 
	.dwpsn	file "../Source/prod.c",line 4197,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR0             ; [CPU_] |4197| 
	.dwpsn	file "../Source/prod.c",line 4195,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4195| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4195| 
$C$L738:    
	.dwpsn	file "../Source/prod.c",line 4199,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4199| 
        ANDB      AL,#0xff              ; [CPU_] |4199| 
        MOV       *XAR4++,AL            ; [CPU_] |4199| 
	.dwpsn	file "../Source/prod.c",line 4200,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4200| 
        LSR       AL,8                  ; [CPU_] |4200| 
        MOV       *XAR4++,AL            ; [CPU_] |4200| 
	.dwpsn	file "../Source/prod.c",line 4198,column 18,is_stmt,isa 0
        BANZ      $C$L738,AR6--         ; [CPU_] |4198| 
        ; branchcc occurs ; [] |4198| 
	.dwpsn	file "../Source/prod.c",line 4203,column 6,is_stmt,isa 0
        MOVL      XAR1,XAR7             ; [CPU_] |4203| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L739:    
	.dwpsn	file "../Source/prod.c",line 4205,column 7,is_stmt,isa 0
        MOV       AL,*+XAR1[0]          ; [CPU_] |4205| 
        ANDB      AL,#0xff              ; [CPU_] |4205| 
        MOV       *XAR4++,AL            ; [CPU_] |4205| 
	.dwpsn	file "../Source/prod.c",line 4206,column 7,is_stmt,isa 0
        MOV       AL,*XAR1++            ; [CPU_] |4206| 
        LSR       AL,8                  ; [CPU_] |4206| 
        MOV       *XAR4++,AL            ; [CPU_] |4206| 
	.dwpsn	file "../Source/prod.c",line 4204,column 18,is_stmt,isa 0
        BANZ      $C$L739,AR6--         ; [CPU_] |4204| 
        ; branchcc occurs ; [] |4204| 
	.dwpsn	file "../Source/prod.c",line 4194,column 6,is_stmt,isa 0
        MOVZ      AR6,AR3               ; [CPU_] |4194| 
        ADD       *-SP[55],#11          ; [CPU_] |4194| 
	.dwpsn	file "../Source/prod.c",line 4192,column 17,is_stmt,isa 0
        ADDB      XAR5,#8               ; [CPU_] |4192| 
        ADDB      XAR0,#8               ; [CPU_] |4192| 
        ADDB      XAR7,#8               ; [CPU_] |4192| 
        SUBB      XAR6,#1               ; [CPU_U] |4192| 
        MOVZ      AR3,AR6               ; [CPU_] |4192| 
        CMP       AR6,#-1               ; [CPU_] |4192| 
        B         $C$L737,NEQ           ; [CPU_] |4192| 
        ; branchcc occurs ; [] |4192| 
        B         $C$L765,UNC           ; [CPU_] |4192| 
        ; branch occurs ; [] |4192| 
$C$L740:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR6,*+FP[AR0]        ; [CPU_] 
        ADD       ACC,*-SP[55]          ; [CPU_] 
        MOV       *-SP[41],#3           ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      XAR5,XAR6             ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#389 << 3         ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1557 << 1        ; [CPU_] 
        MOVL      XAR0,ACC              ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#777 << 2         ; [CPU_] 
        MOVL      *-SP[58],ACC          ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1553 << 1        ; [CPU_] 
        MOVL      XT,ACC                ; [CPU_] 
        MOVL      ACC,XAR6              ; [CPU_] 
        ADD       ACC,#1555 << 1        ; [CPU_] 
        MOVL      P,ACC                 ; [CPU_] 
$C$L741:    
	.dwpsn	file "../Source/prod.c",line 4139,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4139| 
        ADD       ACC,#97 << 5          ; [CPU_] |4139| 
        MOVL      XAR6,ACC              ; [CPU_] |4139| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4139| 
        MOV       *XAR4++,AL            ; [CPU_] |4139| 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4140| 
        ADD       ACC,#3105 << 0        ; [CPU_] |4140| 
        MOVL      XAR6,ACC              ; [CPU_] |4140| 
	.dwpsn	file "../Source/prod.c",line 4144,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR1             ; [CPU_] |4144| 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        MOV       AL,*+XAR6[0]          ; [CPU_] |4140| 
        MOVB      XAR6,#1               ; [CPU_] 
        MOV       *XAR4++,AL            ; [CPU_] |4140| 
$C$L742:    
	.dwpsn	file "../Source/prod.c",line 4151,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4151| 
        ANDB      AL,#0xff              ; [CPU_] |4151| 
        MOV       *XAR4++,AL            ; [CPU_] |4151| 
	.dwpsn	file "../Source/prod.c",line 4152,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4152| 
        LSR       AL,8                  ; [CPU_] |4152| 
        MOV       *XAR4++,AL            ; [CPU_] |4152| 
	.dwpsn	file "../Source/prod.c",line 4150,column 18,is_stmt,isa 0
        BANZ      $C$L742,AR6--         ; [CPU_] |4150| 
        ; branchcc occurs ; [] |4150| 
	.dwpsn	file "../Source/prod.c",line 4157,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR0             ; [CPU_] |4157| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L743:    
	.dwpsn	file "../Source/prod.c",line 4164,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4164| 
        ANDB      AL,#0xff              ; [CPU_] |4164| 
        MOV       *XAR4++,AL            ; [CPU_] |4164| 
	.dwpsn	file "../Source/prod.c",line 4165,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4165| 
        LSR       AL,8                  ; [CPU_] |4165| 
        MOV       *XAR4++,AL            ; [CPU_] |4165| 
	.dwpsn	file "../Source/prod.c",line 4163,column 18,is_stmt,isa 0
        BANZ      $C$L743,AR6--         ; [CPU_] |4163| 
        ; branchcc occurs ; [] |4163| 
        MOVL      XAR7,*-SP[58]         ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L744:    
	.dwpsn	file "../Source/prod.c",line 4170,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4170| 
        ANDB      AL,#0xff              ; [CPU_] |4170| 
        MOV       *XAR4++,AL            ; [CPU_] |4170| 
	.dwpsn	file "../Source/prod.c",line 4171,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4171| 
        LSR       AL,8                  ; [CPU_] |4171| 
        MOV       *XAR4++,AL            ; [CPU_] |4171| 
	.dwpsn	file "../Source/prod.c",line 4169,column 18,is_stmt,isa 0
        BANZ      $C$L744,AR6--         ; [CPU_] |4169| 
        ; branchcc occurs ; [] |4169| 
        MOVL      XAR7,XT               ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L745:    
	.dwpsn	file "../Source/prod.c",line 4176,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4176| 
        ANDB      AL,#0xff              ; [CPU_] |4176| 
        MOV       *XAR4++,AL            ; [CPU_] |4176| 
	.dwpsn	file "../Source/prod.c",line 4177,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4177| 
        LSR       AL,8                  ; [CPU_] |4177| 
        MOV       *XAR4++,AL            ; [CPU_] |4177| 
	.dwpsn	file "../Source/prod.c",line 4175,column 18,is_stmt,isa 0
        BANZ      $C$L745,AR6--         ; [CPU_] |4175| 
        ; branchcc occurs ; [] |4175| 
        MOVL      XAR7,P                ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L746:    
	.dwpsn	file "../Source/prod.c",line 4182,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4182| 
        ANDB      AL,#0xff              ; [CPU_] |4182| 
        MOV       *XAR4++,AL            ; [CPU_] |4182| 
	.dwpsn	file "../Source/prod.c",line 4183,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4183| 
        LSR       AL,8                  ; [CPU_] |4183| 
        MOV       *XAR4++,AL            ; [CPU_] |4183| 
	.dwpsn	file "../Source/prod.c",line 4181,column 18,is_stmt,isa 0
        BANZ      $C$L746,AR6--         ; [CPU_] |4181| 
        ; branchcc occurs ; [] |4181| 
	.dwpsn	file "../Source/prod.c",line 4138,column 17,is_stmt,isa 0
        MOVL      ACC,*-SP[58]          ; [CPU_] |4138| 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        MOVZ      AR6,*-SP[41]          ; [CPU_] |4140| 
	.dwpsn	file "../Source/prod.c",line 4138,column 17,is_stmt,isa 0
        ADDB      ACC,#12               ; [CPU_] |4138| 
	.dwpsn	file "../Source/prod.c",line 4140,column 6,is_stmt,isa 0
        ADD       *-SP[55],#22          ; [CPU_] |4140| 
	.dwpsn	file "../Source/prod.c",line 4138,column 17,is_stmt,isa 0
        ADDB      XAR5,#12              ; [CPU_] |4138| 
        ADDB      XAR1,#12              ; [CPU_] |4138| 
        ADDB      XAR0,#12              ; [CPU_] |4138| 
        SUBB      XAR6,#1               ; [CPU_U] |4138| 
        MOVL      *-SP[58],ACC          ; [CPU_] |4138| 
        MOVL      ACC,XT                ; [CPU_] |4138| 
        MOV       *-SP[41],AR6          ; [CPU_] |4138| 
        ADDB      ACC,#12               ; [CPU_] |4138| 
        MOVL      XT,ACC                ; [CPU_] |4138| 
        MOVL      ACC,P                 ; [CPU_] |4138| 
        ADDB      ACC,#12               ; [CPU_] |4138| 
        MOVL      P,ACC                 ; [CPU_] |4138| 
        CMP       AR6,#-1               ; [CPU_] |4138| 
        B         $C$L741,NEQ           ; [CPU_] |4138| 
        ; branchcc occurs ; [] |4138| 
        B         $C$L765,UNC           ; [CPU_] |4138| 
        ; branch occurs ; [] |4138| 
$C$L747:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#773 << 2         ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        ADDB      AL,#12                ; [CPU_] |4131| 
        MOV       *-SP[55],AL           ; [CPU_] |4131| 
        MOVB      XAR6,#3               ; [CPU_] 
$C$L748:    
	.dwpsn	file "../Source/prod.c",line 4129,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4129| 
        MOV       *XAR4++,AL            ; [CPU_] |4129| 
	.dwpsn	file "../Source/prod.c",line 4130,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[1]          ; [CPU_] |4130| 
        MOV       *XAR4++,AL            ; [CPU_] |4130| 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[2]          ; [CPU_] |4131| 
	.dwpsn	file "../Source/prod.c",line 4128,column 17,is_stmt,isa 0
        ADDB      XAR5,#3               ; [CPU_] |4128| 
	.dwpsn	file "../Source/prod.c",line 4131,column 6,is_stmt,isa 0
        MOV       *XAR4++,AL            ; [CPU_] |4131| 
	.dwpsn	file "../Source/prod.c",line 4128,column 17,is_stmt,isa 0
        BANZ      $C$L748,AR6--         ; [CPU_] |4128| 
        ; branchcc occurs ; [] |4128| 
        B         $C$L765,UNC           ; [CPU_] |4128| 
        ; branch occurs ; [] |4128| 
$C$L749:    
	.dwpsn	file "../Source/prod.c",line 4119,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4119| 
        MOVB      XAR0,#36              ; [CPU_] |4119| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4119| 
        MOVL      XAR0,#80              ; [CPU_] |4119| 
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4119| 
        MOV       *+XAR4[2],AL          ; [CPU_] |4119| 
        MOVL      XAR7,*+FP[AR0]        ; [CPU_] |4119| 
	.dwpsn	file "../Source/prod.c",line 4121,column 6,is_stmt,isa 0
        MOVL      XAR0,#80              ; [CPU_] |4121| 
        MOV       AL,*XAR7              ; [CPU_] |4121| 
        MOV       *+XAR4[3],AL          ; [CPU_] |4121| 
        MOVL      *+FP[AR0],XAR7        ; [CPU_] |4121| 
	.dwpsn	file "../Source/prod.c",line 4120,column 17,is_stmt,isa 0
        B         $C$L731,UNC           ; [CPU_] |4120| 
        ; branch occurs ; [] |4120| 
$C$L750:    
	.dwpsn	file "../Source/prod.c",line 4105,column 5,is_stmt,isa 0
        MOVL      XAR4,#_conf_data      ; [CPU_U] |4105| 
        MOVB      XAR0,#38              ; [CPU_] |4105| 
        MOV       AL,*+XAR4[AR0]        ; [CPU_] |4105| 
        AND       AH,AL,#0x00ff         ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4106,column 5,is_stmt,isa 0
        MOVL      XAR0,#50              ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4105,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |4105| 
	.dwpsn	file "../Source/prod.c",line 4106,column 5,is_stmt,isa 0
        LSR       AL,8                  ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4105,column 5,is_stmt,isa 0
        MOV       *+XAR4[2],AH          ; [CPU_] |4105| 
	.dwpsn	file "../Source/prod.c",line 4106,column 5,is_stmt,isa 0
        MOV       *+XAR4[3],AL          ; [CPU_] |4106| 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] |4106| 
	.dwpsn	file "../Source/prod.c",line 4111,column 6,is_stmt,isa 0
        MOV       *-SP[55],#8           ; [CPU_] |4111| 
        MOVB      XAR6,#1               ; [CPU_] 
        ADDB      XAR4,#4               ; [CPU_] 
$C$L751:    
	.dwpsn	file "../Source/prod.c",line 4110,column 6,is_stmt,isa 0
        MOV       AL,*+XAR5[0]          ; [CPU_] |4110| 
        ANDB      AL,#0xff              ; [CPU_] |4110| 
        MOV       *XAR4++,AL            ; [CPU_] |4110| 
	.dwpsn	file "../Source/prod.c",line 4111,column 6,is_stmt,isa 0
        MOV       AL,*XAR5++            ; [CPU_] |4111| 
        LSR       AL,8                  ; [CPU_] |4111| 
        MOV       *XAR4++,AL            ; [CPU_] |4111| 
	.dwpsn	file "../Source/prod.c",line 4109,column 17,is_stmt,isa 0
        BANZ      $C$L751,AR6--         ; [CPU_] |4109| 
        ; branchcc occurs ; [] |4109| 
        B         $C$L765,UNC           ; [CPU_] |4109| 
        ; branch occurs ; [] |4109| 
$C$L752:    
        MOVL      XAR0,#44              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVZ      AR6,*-SP[55]          ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR5,*+FP[AR0]        ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        ADD       ACC,AR6               ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        ADDB      XAR5,#42              ; [CPU_] 
        MOV       AL,AR6                ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 4095,column 6,is_stmt,isa 0
        ADDB      AL,#1                 ; [CPU_] |4095| 
        MOV       *-SP[55],AL           ; [CPU_] |4095| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4095| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4095| 
	.dwpsn	file "../Source/prod.c",line 4094,column 17,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |4094| 
        ; branch occurs ; [] |4094| 
$C$L753:    
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        MOVL      XAR0,#40              ; [CPU_] 
        ADD       ACC,*-SP[55]          ; [CPU_] 
        MOVL      XAR4,ACC              ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        ADD       ACC,#1593 << 1        ; [CPU_] 
        MOVL      XAR5,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L754:    
	.dwpsn	file "../Source/prod.c",line 4078,column 6,is_stmt,isa 0
        MOVL      XAR7,XAR5             ; [CPU_] |4078| 
        MOVB      XAR0,#1               ; [CPU_] 
$C$L755:    
	.dwpsn	file "../Source/prod.c",line 4080,column 7,is_stmt,isa 0
        MOV       AL,*+XAR7[0]          ; [CPU_] |4080| 
        ANDB      AL,#0xff              ; [CPU_] |4080| 
        MOV       *XAR4++,AL            ; [CPU_] |4080| 
	.dwpsn	file "../Source/prod.c",line 4081,column 7,is_stmt,isa 0
        MOV       AL,*XAR7++            ; [CPU_] |4081| 
        LSR       AL,8                  ; [CPU_] |4081| 
        MOV       *XAR4++,AL            ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4079,column 18,is_stmt,isa 0
        BANZ      $C$L755,AR0--         ; [CPU_] |4079| 
        ; branchcc occurs ; [] |4079| 
	.dwpsn	file "../Source/prod.c",line 4077,column 17,is_stmt,isa 0
        ADDB      XAR5,#2               ; [CPU_] |4077| 
	.dwpsn	file "../Source/prod.c",line 4081,column 7,is_stmt,isa 0
        ADD       *-SP[55],#4           ; [CPU_] |4081| 
	.dwpsn	file "../Source/prod.c",line 4077,column 17,is_stmt,isa 0
        BANZ      $C$L754,AR6--         ; [CPU_] |4077| 
        ; branchcc occurs ; [] |4077| 
	.dwpsn	file "../Source/prod.c",line 4086,column 5,is_stmt,isa 0
        MOVL      XAR5,#_conf_data      ; [CPU_U] |4086| 
        MOVL      ACC,XAR5              ; [CPU_] |4086| 
        ADD       ACC,#199 << 4         ; [CPU_] |4086| 
        MOVL      XAR6,ACC              ; [CPU_] |4086| 
        MOV       AL,*+XAR6[0]          ; [CPU_] |4086| 
        ANDB      AL,#0xff              ; [CPU_] |4086| 
        MOV       *XAR4++,AL            ; [CPU_] |4086| 
	.dwpsn	file "../Source/prod.c",line 4087,column 5,is_stmt,isa 0
        MOVL      ACC,XAR5              ; [CPU_] |4087| 
        ADD       ACC,#199 << 4         ; [CPU_] |4087| 
        MOVL      XAR5,ACC              ; [CPU_] |4087| 
        MOV       AL,*+XAR5[0]          ; [CPU_] |4087| 
        LSR       AL,8                  ; [CPU_] |4087| 
        MOV       *+XAR4[0],AL          ; [CPU_] |4087| 
$C$L756:    
        ADD       *-SP[55],#2           ; [CPU_] |4087| 
	.dwpsn	file "../Source/prod.c",line 4090,column 5,is_stmt,isa 0
        B         $C$L765,UNC           ; [CPU_] |4090| 
        ; branch occurs ; [] |4090| 
$C$L757:    
	.dwpsn	file "../Source/prod.c",line 3732,column 5,is_stmt,isa 0
        MOVZ      AR4,SP                ; [CPU_] |3732| 
        MOVL      XAR0,#44              ; [CPU_] 
        SETC      SXM                   ; [CPU_] 
        MOVL      ACC,*+FP[AR0]         ; [CPU_] 
        SUBB      XAR4,#20              ; [CPU_U] |3732| 
        MOVZ      AR4,AR4               ; [CPU_] |3732| 
        ADD       ACC,*-SP[55]          ; [CPU_] 
        MOVL      XAR1,ACC              ; [CPU_] 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L758:    
	.dwpsn	file "../Source/prod.c",line 3734,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3734| 
        ANDB      AL,#0xff              ; [CPU_] |3734| 
        MOV       *XAR1++,AL            ; [CPU_] |3734| 
	.dwpsn	file "../Source/prod.c",line 3735,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3735| 
        LSR       AL,8                  ; [CPU_] |3735| 
        MOV       *XAR1++,AL            ; [CPU_] |3735| 
	.dwpsn	file "../Source/prod.c",line 3733,column 17,is_stmt,isa 0
        BANZ      $C$L758,AR6--         ; [CPU_] |3733| 
        ; branchcc occurs ; [] |3733| 
	.dwpsn	file "../Source/prod.c",line 3739,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3739| 
        ANDB      AL,#0xff              ; [CPU_] |3739| 
	.dwpsn	file "../Source/prod.c",line 3740,column 5,is_stmt,isa 0
        MOVL      XAR0,#40              ; [CPU_] |3740| 
	.dwpsn	file "../Source/prod.c",line 3739,column 5,is_stmt,isa 0
        MOV       *XAR1++,AL            ; [CPU_] |3739| 
	.dwpsn	file "../Source/prod.c",line 3740,column 5,is_stmt,isa 0
        IN        AL,*(04004H)          ; [CPU_] |3740| 
        LSR       AL,8                  ; [CPU_] |3740| 
        MOV       *XAR1++,AL            ; [CPU_] |3740| 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] |3740| 
        MOVB      XAR6,#1               ; [CPU_] 
$C$L759:    
	.dwpsn	file "../Source/prod.c",line 3744,column 6,is_stmt,isa 0
        MOV       AL,*+XAR4[0]          ; [CPU_] |3744| 
        ANDB      AL,#0xff              ; [CPU_] |3744| 
        MOV       *XAR1++,AL            ; [CPU_] |3744| 
	.dwpsn	file "../Source/prod.c",line 3745,column 6,is_stmt,isa 0
        MOV       AL,*XAR4++            ; [CPU_] |3745| 
        LSR       AL,8                  ; [CPU_] |3745| 
        MOV       *XAR1++,AL            ; [CPU_] |3745| 
	.dwpsn	file "../Source/prod.c",line 3743,column 17,is_stmt,isa 0
        BANZ      $C$L759,AR6--         ; [CPU_] |3743| 
        ; branchcc occurs ; [] |3743| 
        MOVL      XAR0,#76              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3749,column 5,is_stmt,isa 0
$C$DW$1525	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1525, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1525, DW_AT_name("_strlen")
	.dwattr $C$DW$1525, DW_AT_TI_call

        LCR       #_strlen              ; [CPU_] |3749| 
        ; call occurs [#_strlen] ; [] |3749| 
	.dwpsn	file "../Source/prod.c",line 3750,column 5,is_stmt,isa 0
        MOV       *+XAR1[0],AL          ; [CPU_] |3750| 
	.dwpsn	file "../Source/prod.c",line 3735,column 6,is_stmt,isa 0
        ADD       *-SP[55],#11          ; [CPU_] |3735| 
	.dwpsn	file "../Source/prod.c",line 3751,column 17,is_stmt,isa 0
        CMPB      AL,#0                 ; [CPU_] |3751| 
        B         $C$L765,EQ            ; [CPU_] |3751| 
        ; branchcc occurs ; [] |3751| 
        MOVL      XAR0,#40              ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 3750,column 5,is_stmt,isa 0
        ADDB      XAR1,#1               ; [CPU_] |3750| 
	.dwpsn	file "../Source/prod.c",line 3751,column 10,is_stmt,isa 0
        MOVB      XAR6,#0               ; [CPU_] |3751| 
        ADDB      XAR4,#2               ; [CPU_] 
$C$L760:    
	.dwpsn	file "../Source/prod.c",line 3752,column 6,is_stmt,isa 0
        MOV       AH,*XAR4++            ; [CPU_] |3752| 
	.dwpsn	file "../Source/prod.c",line 3751,column 17,is_stmt,isa 0
        ADDB      XAR6,#1               ; [CPU_] |3751| 
	.dwpsn	file "../Source/prod.c",line 3752,column 6,is_stmt,isa 0
        MOV       *XAR1++,AH            ; [CPU_] |3752| 
        INC       *-SP[55]              ; [CPU_] |3752| 
	.dwpsn	file "../Source/prod.c",line 3751,column 17,is_stmt,isa 0
        CMP       AL,AR6                ; [CPU_] |3751| 
        B         $C$L760,HI            ; [CPU_] |3751| 
        ; branchcc occurs ; [] |3751| 
        B         $C$L765,UNC           ; [CPU_] |3751| 
        ; branch occurs ; [] |3751| 
$C$L761:    
        MOVW      DP,#_cmdbuff$2+2      ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 3718,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2+2    ; [CPU_U] |3718| 
        MOVL      XAR0,#66              ; [CPU_] |3718| 
        MOV       AL,@_cmdbuff$2+2      ; [CPU_] |3718| 
        MOVL      *+FP[AR0],XAR4        ; [CPU_] |3718| 
$C$L762:    
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3718| 
        MOV       *+XAR4[2],AL          ; [CPU_] |3718| 
	.dwpsn	file "../Source/prod.c",line 3721,column 5,is_stmt,isa 0
        B         $C$L764,UNC           ; [CPU_] |3721| 
        ; branch occurs ; [] |3721| 
$C$L763:    
	.dwpsn	file "../Source/prod.c",line 3712,column 5,is_stmt,isa 0
        MOVL      XAR4,#_buff$1         ; [CPU_U] |3712| 
        MOV       *+XAR4[2],#0          ; [CPU_] |3712| 
$C$L764:    
        MOV       *-SP[55],#3           ; [CPU_] |3712| 
$C$L765:    
        MOVL      XAR0,#44              ; [CPU_] 
	.dwpsn	file "../Source/prod.c",line 5703,column 5,is_stmt,isa 0
        MOV       AL,*-SP[55]           ; [CPU_] |5703| 
        SPM       #0                    ; [CPU_] 
        MOVL      XAR4,*+FP[AR0]        ; [CPU_] 
$C$DW$1526	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1526, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1526, DW_AT_name("_scia_send_bin")
	.dwattr $C$DW$1526, DW_AT_TI_call

        LCR       #_scia_send_bin       ; [CPU_] |5703| 
        ; call occurs [#_scia_send_bin] ; [] |5703| 
	.dwpsn	file "../Source/prod.c",line 5705,column 5,is_stmt,isa 0
        MOVL      XAR4,#_cmdbuff$2      ; [CPU_U] |5705| 
        MOVL      *-SP[60],XAR4         ; [CPU_] |5705| 
        MOV       AL,*+XAR4[1]          ; [CPU_] |5705| 
        CMPB      AL,#240               ; [CPU_] |5705| 
        B         $C$L648,NEQ           ; [CPU_] |5705| 
        ; branchcc occurs ; [] |5705| 
	.dwpsn	file "../Source/prod.c",line 5706,column 6,is_stmt,isa 0
        MOV       AL,#2000              ; [CPU_] |5706| 
$C$DW$1527	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1527, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1527, DW_AT_name("_delay_us")
	.dwattr $C$DW$1527, DW_AT_TI_call

        LCR       #_delay_us            ; [CPU_] |5706| 
        ; call occurs [#_delay_us] ; [] |5706| 
        MOVW      DP,#_cmd_mode         ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 5707,column 6,is_stmt,isa 0
        MOV       AL,@_cmd_mode         ; [CPU_] |5707| 
$C$DW$1528	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1528, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1528, DW_AT_name("_scia_set_cmd_mode")
	.dwattr $C$DW$1528, DW_AT_TI_call

        LCR       #_scia_set_cmd_mode   ; [CPU_] |5707| 
        ; call occurs [#_scia_set_cmd_mode] ; [] |5707| 
        B         $C$L648,UNC           ; [CPU_] |5707| 
        ; branch occurs ; [] |5707| 
	.dwattr $C$DW$291, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$291, DW_AT_TI_end_line(0x166a)
	.dwattr $C$DW$291, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$291

	.sect	".text"
	.clink
	.global	_get_fattime

$C$DW$1529	.dwtag  DW_TAG_subprogram
	.dwattr $C$DW$1529, DW_AT_name("get_fattime")
	.dwattr $C$DW$1529, DW_AT_low_pc(_get_fattime)
	.dwattr $C$DW$1529, DW_AT_high_pc(0x00)
	.dwattr $C$DW$1529, DW_AT_TI_symbol_name("_get_fattime")
	.dwattr $C$DW$1529, DW_AT_external
	.dwattr $C$DW$1529, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1529, DW_AT_TI_begin_file("../Source/prod.c")
	.dwattr $C$DW$1529, DW_AT_TI_begin_line(0x73)
	.dwattr $C$DW$1529, DW_AT_TI_begin_column(0x07)
	.dwattr $C$DW$1529, DW_AT_TI_max_frame_size(-2)
	.dwpsn	file "../Source/prod.c",line 115,column 25,is_stmt,address _get_fattime,isa 0

	.dwfde $C$DW$CIE, _get_fattime
;----------------------------------------------------------------------
; 115 | DWORD get_fattime(void) {                                              
;----------------------------------------------------------------------

;***************************************************************
;* FNAME: _get_fattime                  FR SIZE:   0           *
;*                                                             *
;* FUNCTION ENVIRONMENT                                        *
;*                                                             *
;* FUNCTION PROPERTIES                                         *
;*                            0 Parameter,  0 Auto,  0 SOE     *
;***************************************************************

_get_fattime:
	.dwcfi	cfa_offset, -2
	.dwcfi	save_reg_to_mem, 26, 0
        MOVW      DP,#_rtc+6            ; [CPU_U] 
	.dwpsn	file "../Source/prod.c",line 119,column 2,is_stmt,isa 0
;----------------------------------------------------------------------
; 119 | return ((DWORD) (rtc.year - 1980) << 25) | ((DWORD) rtc.month << 21)   
; 120 |                 | ((DWORD) rtc.mday << 16) | ((DWORD) rtc.hour << 11)  
; 121 |                 | ((DWORD) rtc.min << 5) | ((DWORD) rtc.sec >> 1);     
;----------------------------------------------------------------------
        MOV       PH,#0                 ; [CPU_] |119| 
        CLRC      SXM                   ; [CPU_] 
        MOV       PL,@_rtc+6            ; [CPU_] |119| 
        MOVL      ACC,P                 ; [CPU_] |119| 
        SFR       ACC,1                 ; [CPU_] |119| 
        MOVL      P,ACC                 ; [CPU_] |119| 
        MOV       AL,@_rtc              ; [CPU_] |119| 
        SUB       AL,#1980              ; [CPU_] |119| 
        MOV       ACC,AL << 4           ; [CPU_] |119| 
        OR        ACC,@_rtc+1           ; [CPU_] |119| 
        LSL       ACC,5                 ; [CPU_] |119| 
        OR        ACC,@_rtc+2           ; [CPU_] |119| 
        LSL       ACC,5                 ; [CPU_] |119| 
        OR        ACC,@_rtc+4           ; [CPU_] |119| 
        LSL       ACC,6                 ; [CPU_] |119| 
        OR        ACC,@_rtc+5           ; [CPU_] |119| 
        LSL       ACC,5                 ; [CPU_] |119| 
        OR        AL,PL                 ; [CPU_] |119| 
        OR        AH,PH                 ; [CPU_] |119| 
$C$DW$1530	.dwtag  DW_TAG_TI_branch
	.dwattr $C$DW$1530, DW_AT_low_pc(0x00)
	.dwattr $C$DW$1530, DW_AT_TI_return

        LRETR     ; [CPU_] 
        ; return occurs ; [] 
	.dwattr $C$DW$1529, DW_AT_TI_end_file("../Source/prod.c")
	.dwattr $C$DW$1529, DW_AT_TI_end_line(0x7a)
	.dwattr $C$DW$1529, DW_AT_TI_end_column(0x01)
	.dwendentry
	.dwendtag $C$DW$1529

;***************************************************************
;* FAR STRINGS                                                 *
;***************************************************************
	.sect	".econst:.string"
	.align	2
$C$FSL1:	.string	"INCH",0
	.align	2
$C$FSL2:	.string	"IPM",0
	.align	2
$C$FSL3:	.string	" %u",0
	.align	2
$C$FSL4:	.string	"*",0
	.align	2
$C$FSL5:	.string	"IN",0
	.align	2
$C$FSL6:	.string	13,10,"Display Settings:",13,10,0
	.align	2
$C$FSL7:	.string	"  Line %u: %s",0
	.align	2
$C$FSL8:	.string	" Board temperature",0
	.align	2
$C$FSL9:	.string	" channel %u",0
	.align	2
$C$FSL10:	.string	" channel %u with %u digits after decimal point",0
	.align	2
$C$FSL11:	.string	13,10,0
	.align	2
$C$FSL12:	.string	"  Serial number:    %s",13,10,0
	.align	2
$C$FSL13:	.string	"  Sensor name/label:%s",13,10,0
	.align	2
$C$FSL14:	.string	"  Sensor TAGID:     %016llX",13,10,0
	.align	2
$C$FSL15:	.string	"  Cal method:       %s",13,10,0
	.align	2
$C$FSL16:	.string	"  Calibrated unit:  %s        ",0
	.align	2
$C$FSL17:	.string	"  Output unit:      %s",13,10,0
	.align	2
$C$FSL18:	.string	"  Unit scale:       %-10.5f",0
	.align	2
$C$FSL19:	.string	"  Range:            %-10.5f",13,10,0
	.align	2
$C$FSL20:	.string	"  Shunt:            %-10.5f",0
	.align	2
$C$FSL21:	.string	"  Percent base:     %-10.5f",13,10,0
	.align	2
$C$FSL22:	.string	"  DAC gain:         %-10.5f",0
	.align	2
$C$FSL23:	.string	"  DAC offset:       %-10.5f",13,10,0
	.align	2
$C$FSL24:	.string	"  Slope:            %-10.5f",0
	.align	2
$C$FSL25:	.string	"  Intercept:        %-10.5f",13,10,0
	.align	2
$C$FSL26:	.string	"  Points:           %-10i",13,10,0
	.align	2
$C$FSL27:	.string	"  Point:",0
	.align	2
$C$FSL28:	.string	13,10,"  Mass: ",0
	.align	2
$C$FSL29:	.string	13,10,"  Count:",0
	.align	2
$C$FSL30:	.string	13,10,"  Slope:    ",0
	.align	2
$C$FSL31:	.string	13,10,"  Intercept:",0
	.align	2
$C$FSL32:	.string	"%10.5f",0
	.align	2
$C$FSL33:	.string	"%10li",0
	.align	2
$C$FSL34:	.string	"%6i    ",0
	.align	2
$C$FSL35:	.string	"  Sensor has not been calibrated.",13,10,0
	.align	2
$C$FSL36:	.string	13,10,"LIMIT Settings:",13,10,0
	.align	2
$C$FSL37:	.string	"LIMIT %u: ",0
	.align	2
$C$FSL38:	.string	"ON %s channel %u",13,10,0
	.align	2
$C$FSL39:	.string	"Open ",0
	.align	2
$C$FSL40:	.string	"Closed",0
	.align	2
$C$FSL41:	.string	"OFF",0
	.align	2
$C$FSL42:	.string	"ON ",0
	.align	2
$C$FSL43:	.string	"<",0
	.align	2
$C$FSL44:	.string	">",0
	.align	2
$C$FSL45:	.string	"  Normal %s,  Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL46:	.string	"  Limit value set:  %-9.5f%s",0
	.align	2
$C$FSL47:	.string	" reset:  %-9.5f%s",13,10,0
	.align	2
$C$FSL48:	.string	"OFF",13,10,0
	.align	2
$C$FSL49:	.string	13,10,"DAC Settings:",13,10,0
	.align	2
$C$FSL50:	.string	"DAC channel %u:",13,10,0
	.align	2
$C$FSL51:	.string	"  Calibration: slope: (n)%.3f, (p)%.3f, intercept:%.3f",13,10
	.string	0
	.align	2
$C$FSL52:	.string	"  %s",0
	.align	2
$C$FSL53:	.string	" CH %u",0
	.align	2
$C$FSL54:	.string	"    gain:%-.5f, offset:%-.5f",13,10,0
	.align	2
$C$FSL55:	.string	"Channel:            %-i",13,10,0
	.align	2
$C$FSL56:	.string	"Boardcal slope:     %-11g",13,10,0
	.align	2
$C$FSL57:	.string	"Current sensor:     %-10i",13,10,0
	.align	2
$C$FSL58:	.string	"Auto Id enabled and active.",13,10,0
	.align	2
$C$FSL59:	.string	"Pro-D FW ver: %.2f",0
	.align	2
$C$FSL60:	.string	"%s %s",0
	.align	2
$C$FSL61:	.string	"Nov 14 2019",0
	.align	2
$C$FSL62:	.string	"13:41:53",0
	.align	2
$C$FSL63:	.string	34,"SW2",34," TO CHANGE PORT",0
	.align	2
$C$FSL64:	.string	"FLASH WRITING ...",0
	.align	2
$C$FSL65:	.string	"%s",0
	.align	2
$C$FSL66:	.string	"%s, Configuring...",0
	.align	2
$C$FSL67:	.string	"%s, %lu bps",0
	.align	2
$C$FSL68:	.string	"E",13,0
	.align	2
$C$FSL69:	.string	"IPA",13,0
	.align	2
$C$FSL70:	.string	"FWV",13,0
	.align	2
$C$FSL71:	.string	"QSS",13,0
	.align	2
$C$FSL72:	.string	"SC S",13,0
	.align	2
$C$FSL73:	.string	"Sensor Calibration..",0
	.align	2
$C$FSL74:	.string	"Channel %i sensor %i",0
	.align	2
$C$FSL75:	.string	"Method: %s",0
	.align	2
$C$FSL76:	.string	"Reading shunt value...",0
	.align	2
$C$FSL77:	.string	"Reading zero point...",0
	.align	2
$C$FSL78:	.string	"Reading mass point %i...",0
	.align	2
$C$FSL79:	.string	"Board Calibration...",0
	.align	2
$C$FSL80:	.string	"Channel %i",0
	.align	2
$C$FSL81:	.string	"%c: %10.5f",0
	.align	2
$C$FSL82:	.string	"Reading ... ",0
	.align	2
$C$FSL83:	.string	"Flash writing...",0
	.align	2
$C$FSL84:	.string	"Done",0
	.align	2
$C$FSL85:	.string	"Fail",0
	.align	2
$C$FSL86:	.string	"Flash reset and     writing ...",0
	.align	2
$C$FSL87:	.string	"Unit name (up to %i digits): ",0
	.align	2
$C$FSL88:	.string	"%u(%lu)",0
	.align	2
$C$FSL89:	.string	", ",0
	.align	2
$C$FSL90:	.string	"Communication Baud rate [%u(%lu)] bps: ",0
	.align	2
$C$FSL91:	.string	"Communication baud rate is changed to %lu bps",13,10,0
	.align	2
$C$FSL92:	.string	"Please save to flash and reboot for the change to take effe"
	.string	"ct.",13,10,0
	.align	2
$C$FSL93:	.string	"Invalid input, communication baud rate is not changed.",13,10
	.string	0
	.align	2
$C$FSL94:	.string	"Communication baud rate is not changed.",13,10,0
	.align	2
$C$FSL95:	.string	"Baud rate is not changable for the current interface.",13,10
	.string	0
	.align	2
$C$FSL96:	.string	"New diff window ratio [%f]: ",0
	.align	2
$C$FSL97:	.string	"Diff window ratio set to %f.",13,10,0
	.align	2
$C$FSL98:	.string	"Unit serial number (numeric number): ",0
	.align	2
$C$FSL99:	.string	"%lu",13,10,0
	.align	2
$C$FSL100:	.string	"%u(%s)",0
	.align	2
$C$FSL101:	.string	"Communication Interface [%u(%s)]: ",0
	.align	2
$C$FSL102:	.string	"Communication Interface is changed to %s",13,10,0
	.align	2
$C$FSL103:	.string	"Invalid input, interface is not changed.",13,10,0
	.align	2
$C$FSL104:	.string	"Interface is not changed.",13,10,0
	.align	2
$C$FSL105:	.string	"Moving average filter size (up to %i): ",0
	.align	2
$C$FSL106:	.string	"Moving avarage filter size set to %i.",13,10,0
	.align	2
$C$FSL107:	.string	13,10,"Invalid moving average filter size! Try again.",13,10
	.string	0
	.align	2
$C$FSL108:	.string	"Channel number (1-%i): ",0
	.align	2
$C$FSL109:	.string	"Sensor number (1-%i): ",0
	.align	2
$C$FSL110:	.string	"Channel %i set current sensor to %i.",13,10,0
	.align	2
$C$FSL111:	.string	13,10,"Invalid input! Try again",13,10,0
	.align	2
$C$FSL112:	.string	13,10,"Invalid input! Try again.",13,10,0
	.align	2
$C$FSL113:	.string	"Output unit, 6(NM), 7(%): ",0
	.align	2
$C$FSL114:	.string	"Output unit, 5(PS), 7(%): ",0
	.align	2
$C$FSL115:	.string	"Output unit, 2(IN), 3(CM), 4(MM), 7(%): ",0
	.align	2
$C$FSL116:	.string	"Output unit, 0(LB), 1(KG), 7(%): ",0
	.align	2
$C$FSL117:	.string	"Sensor not calibrated!",13,10,0
	.align	2
$C$FSL118:	.string	"Sensor %i output unit set to %s.",13,10,0
	.align	2
$C$FSL119:	.string	"New output unit is the same as the original.",13,10,0
	.align	2
$C$FSL120:	.string	"Sensor %i name/label (up to %i digits): ",0
	.align	2
$C$FSL121:	.string	"Sensor %i name/label set to %s.",13,10,0
	.align	2
$C$FSL122:	.string	"Sensor %i DAC gain (V/%s(calibrated)): ",0
	.align	2
$C$FSL123:	.string	"Sensor %i DAC offset (V): ",0
	.align	2
$C$FSL124:	.string	"Sensor %i DAC gain set to %g, offset set to %g.",13,10,0
	.align	2
$C$FSL125:	.string	"Sensor %i percent base: ",0
	.align	2
$C$FSL126:	.string	"Sensor %i percent base set to %.5f.",13,10,0
	.align	2
$C$FSL127:	.string	"Shunt switch closed",13,10,0
	.align	2
$C$FSL128:	.string	"Shunt switch opened",13,10,0
	.align	2
$C$FSL129:	.string	13,10,"Version:            %.2f [%s %s]",13,10,0
	.align	2
$C$FSL130:	.string	"CPLD Version:       %d.%02d",13,10,0
	.align	2
$C$FSL131:	.string	"Serial Number:      %lu",13,10,0
	.align	2
$C$FSL132:	.string	"Unit Name:          %s",13,10,0
	.align	2
$C$FSL133:	.string	"Com Interface:      %s",13,10,0
	.align	2
$C$FSL134:	.string	"Com Speed:          %lu bps",13,10,0
	.align	2
$C$FSL135:	.string	"Off",0
	.align	2
$C$FSL136:	.string	"On",0
	.align	2
$C$FSL137:	.string	"AutoId:             %s",13,10,0
	.align	2
$C$FSL138:	.string	"Load Filter Length: %u",13,10,0
	.align	2
$C$FSL139:	.string	"Velo Filter Length: %u",13,10,0
	.align	2
$C$FSL140:	.string	"Count Per Inch (%c): %li",13,10,0
	.align	2
$C$FSL141:	.string	"Sensor              %i",13,10,0
	.align	2
$C$FSL142:	.string	"DAC channel %i set to %gV (0x%04X)",13,10,0
	.align	2
$C$FSL143:	.string	"DAC channel number (1-%i): ",0
	.align	2
$C$FSL144:	.string	"%1i(%s)",0
	.align	2
$C$FSL145:	.string	"What to send to DAC channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL146:	.string	13,10,"Invalid input, set to default ",34,"LOAD",34,".",0
	.align	2
$C$FSL147:	.string	"Gain (V/IPM): ",0
	.align	2
$C$FSL148:	.string	"Gain (V/Inch): ",0
	.align	2
$C$FSL149:	.string	"Offset (V): ",0
	.align	2
$C$FSL150:	.string	"DAC channel %i linked to %s",0
	.align	2
$C$FSL151:	.string	" channel %i",13,10,0
	.align	2
$C$FSL152:	.string	"  with gain %g and offset %g.",13,10,0
	.align	2
$C$FSL153:	.string	"LIMIT channel number (1-%i): ",0
	.align	2
$C$FSL154:	.string	"LIMIT %i: ON(1)/[OFF(0)]: ",0
	.align	2
$C$FSL155:	.string	"LIMIT %i set to OFF.",13,10,0
	.align	2
$C$FSL156:	.string	"What to link to LIMIT channel %u [0(LOAD)]: ",0
	.align	2
$C$FSL157:	.string	"Relay switch normal position: NC(1)/[NO(0)]: ",0
	.align	2
$C$FSL158:	.string	"Relay switch latching: Enable(1)/[Disable(0)]: ",0
	.align	2
$C$FSL159:	.string	"Limit trigger level: ",34,">",34,"(1)/",34,"<",34,"(0)]: ",0
	.align	2
$C$FSL160:	.string	"Limit set value (%s): ",0
	.align	2
$C$FSL161:	.string	"Limit reset value (%s): ",0
	.align	2
$C$FSL162:	.string	"LIMIT channel %i linked to %s channel %i",13,10,0
	.align	2
$C$FSL163:	.string	"NO",0
	.align	2
$C$FSL164:	.string	"NC",0
	.align	2
$C$FSL165:	.string	"ON",0
	.align	2
$C$FSL166:	.string	"  Limit:            ON, %s, Latch %s, Trigger %s",13,10,0
	.align	2
$C$FSL167:	.string	"  Limit set value:  %-10.5f%s, reset value:  %-10.5f%s",13,10
	.string	0
	.align	2
$C$FSL168:	.string	"Motor jogging",13,10,0
	.align	2
$C$FSL169:	.string	"Motor not jogging",13,10,0
	.align	2
$C$FSL170:	.string	"Configuration data not changed, saving is not needed.",13,10
	.string	0
	.align	2
$C$FSL171:	.string	"configuration data saved to flash.",13,10,0
	.align	2
$C$FSL172:	.string	"Configuration data read from flash.",13,10,0
	.align	2
$C$FSL173:	.string	"Flash write...",0
	.align	2
$C$FSL174:	.string	"configuration data set to default and written to flash.",13
	.string	10,0
	.align	2
$C$FSL175:	.string	"Error writing to flash memory!",13,10,0
	.align	2
$C$FSL176:	.string	"Encoder channel number (1-%i): ",0
	.align	2
$C$FSL177:	.string	"Encoder %u count per inch: ",0
	.align	2
$C$FSL178:	.string	"Invalid input, value not changed.",13,10,0
	.align	2
$C$FSL179:	.string	"Encoder %u count per inch set to %li.",13,10,0
	.align	2
$C$FSL180:	.string	"Encoder velocity filter size (up to %i): ",0
	.align	2
$C$FSL181:	.string	"Encoder velocity filter size set to %i.",13,10,0
	.align	2
$C$FSL182:	.string	"Line number (1-%i): ",0
	.align	2
$C$FSL183:	.string	"What to display for line %u [0(LOAD)]: ",0
	.align	2
$C$FSL184:	.string	"Line %i set to %s.",13,10,0
	.align	2
$C$FSL185:	.string	"Line %i set to %s channel %u.",13,10,0
	.align	2
$C$FSL186:	.string	"Digits after decimal point (0-5): ",0
	.align	2
$C$FSL187:	.string	"Line %i set to %s of channel %u with %u digits after decima"
	.string	"l point.",13,10,0
	.align	2
$C$FSL188:	.string	"Sensor serial number (up to %i digits): ",0
	.align	2
$C$FSL189:	.string	"Sensor name/label (up to %i digits): ",0
	.align	2
$C$FSL190:	.string	"%2i(%s), ",0
	.align	2
$C$FSL191:	.string	13,10,"Sensor calibration unit [0(LB)]: ",0
	.align	2
$C$FSL192:	.string	13,10,"Invalid input, set to default ",34,"LB",34,".",0
	.align	2
$C$FSL193:	.string	"Sensor range: ",0
	.align	2
$C$FSL194:	.string	"Sensor attached doesn't have TAGID.",13,10,0
	.align	2
$C$FSL195:	.string	"Sensor TAGID: %016llX",13,10,0
	.align	2
$C$FSL196:	.string	"Method: mv/v",0
	.align	2
$C$FSL197:	.string	"Sensor scale (%s per mv/v) [1]: ",0
	.align	2
$C$FSL198:	.string	"Set input to zero and press ENTER",13,10,0
	.align	2
$C$FSL199:	.string	"done",13,10,0
	.align	2
$C$FSL200:	.string	"Method: shunt",0
	.align	2
$C$FSL201:	.string	"Sensor shunt (%s with a 60kohm shunt resistor) [1.46]: ",0
	.align	2
$C$FSL202:	.string	13,10,"Invalid input, set to default 1.46.",0
	.align	2
$C$FSL203:	.string	"Mass points (2-%i): ",0
	.align	2
$C$FSL204:	.string	"Method: %-2ipoint mass",0
	.align	2
$C$FSL205:	.string	"Mass point %2i [%.5f]: ",0
	.align	2
$C$FSL206:	.string	"Set input to %.5f%s for point %i and press ENTER",13,10,0
	.align	2
$C$FSL207:	.string	"Set input to zero and press ENTER for shunt reading",13,10,0
	.align	2
$C$FSL208:	.string	13,10,"Channel %i sensor %i calibration done.",13,10,0
	.align	2
$C$FSL209:	.string	"X: %10.5f",0
	.align	2
$C$FSL210:	.string	"Y: %10.5f",0
	.align	2
$C$FSL211:	.string	"DAC chip Calibration",0
	.align	2
$C$FSL212:	.string	"Ready for DAC chip calibration for channel %d",13,10,0
	.align	2
$C$FSL213:	.string	"+[N]: increase, -[N]: decrease, S: set.",13,10,0
	.align	2
$C$FSL214:	.string	"Adjust for output %.5f V.",13,10,0
	.align	2
$C$FSL215:	.string	":%u",13,10,0
	.align	2
$C$FSL216:	.string	"Adjust for output 0.0V.",13,10,0
	.align	2
$C$FSL217:	.string	"Channel %i: DAC slope: (n)%.3f, (p)%.3f, intercept %.3f",13
	.string	10,0
	.align	2
$C$FSL218:	.string	"Board DAC calibration is done.",13,10,0
	.align	2
$C$FSL219:	.string	"Ready for board calibration for channel %i",13,10,0
	.align	2
$C$FSL220:	.string	"Set input at %.5f mv/v and press ENTER.",13,10,0
	.align	2
$C$FSL221:	.string	"Channel %i: board ADC scale: %g",13,10,0
	.align	2
$C$FSL222:	.string	"Board ADC calibration is done.",13,10,0
	.align	2
$C$FSL223:	.string	"Invalid command or parameter(s) ",34,0
	.align	2
$C$FSL224:	.string	34,", ignored.",13,10,0
	.align	2
$C$FSL225:	.string	"System will reboot in 2 seconds!",13,10,0
	.align	2
$C$FSL226:	.string	"Command mode switched to BINARY mode.",13,10,0
	.align	2
$C$FSL227:	.string	"Entering bootloader",13,10,0
	.align	2
$C$FSL228:	.string	"%f %f %f",13,10,0
	.align	2
$C$FSL229:	.string	13,10,"List of available commands:",13,10,13,10,0
	.align	2
$C$FSL230:	.string	"PA          Print out current configuration.",13,10,0
	.align	2
$C$FSL231:	.string	"PS          Print out calibrated sensor information.",13,10
	.string	0
	.align	2
$C$FSL232:	.string	"PD          Print out display information.",13,10,0
	.align	2
$C$FSL233:	.string	"PO          Print out DAC out information.",13,10,0
	.align	2
$C$FSL234:	.string	"PL          Print out LIMIT information.",13,10,0
	.align	2
$C$FSL235:	.string	"US          Set unit serial number.",13,10,0
	.align	2
$C$FSL236:	.string	"UN          Set unit name.",13,10,0
	.align	2
$C$FSL237:	.string	"UC          Set current sensor.",13,10,0
	.align	2
$C$FSL238:	.string	"UI          Set communication interface.",13,10,0
	.align	2
$C$FSL239:	.string	"UB          Set communication baud rate.",13,10,0
	.align	2
$C$FSL240:	.string	"UF          Set moving average filter size.",13,10,0
	.align	2
$C$FSL241:	.string	"BCc[Xx.xx][Yy.yy] Board ADC calibration on channel c at x.x"
	.string	"x mv/v and y.yy mv/v.",13,10,0
	.align	2
$C$FSL242:	.string	"BDc[Xx.xx][Yy.yy] Board DAC calibration on channel c at x.x"
	.string	"x V and y.yy V.",13,10,0
	.align	2
$C$FSL243:	.string	"CV          MV/V sensor calibration.",13,10,0
	.align	2
$C$FSL244:	.string	"CM          MASS sensor calibration.",13,10,0
	.align	2
$C$FSL245:	.string	"CS          SHUNT sensor calibration.",13,10,0
	.align	2
$C$FSL246:	.string	"SN          Change sensor name/label.",13,10,0
	.align	2
$C$FSL247:	.string	"SU          Change sensor output unit.",13,10,0
	.align	2
$C$FSL248:	.string	"SB          Change sensor percent base.",13,10,0
	.align	2
$C$FSL249:	.string	"SD          Change sensor DAC gain and offset.",13,10,0
	.align	2
$C$FSL250:	.string	"EF          Encoder velocity filter length.",13,10,0
	.align	2
$C$FSL251:	.string	"EP          Encoder count per inch for the two channels.",13
	.string	10,0
	.align	2
$C$FSL252:	.string	"DS          Display Selection.",13,10,0
	.align	2
$C$FSL253:	.string	"OS          DAC Out Selection and gain and offset set.",13,10
	.string	0
	.align	2
$C$FSL254:	.string	"ODcVx.xx    DAC Out directly set channel c to voltage x.xxV"
	.string	".",13,10,0
	.align	2
$C$FSL255:	.string	"LS          Limit Selection.",13,10,0
	.align	2
$C$FSL256:	.string	"RT[x]       Reset tare [channel x].",13,10,0
	.align	2
$C$FSL257:	.string	"RP[x]       Reset peak [channel x].",13,10,0
	.align	2
$C$FSL258:	.string	"RV[x]       Reset valley [channel x].",13,10,0
	.align	2
$C$FSL259:	.string	"RS[O]       Open shunt switch.",13,10,0
	.align	2
$C$FSL260:	.string	"RSC         Close shunt switch.",13,10,0
	.align	2
$C$FSL261:	.string	"RL          Reset latched limit switch.",13,10,0
	.align	2
$C$FSL262:	.string	"RI[x]       Reset posItion [channel x].",13,10,0
	.align	2
$C$FSL263:	.string	"FW          Save current configuration to flash if changed."
	.string	13,10,0
	.align	2
$C$FSL264:	.string	"FR          Read configuration from flash to override chang"
	.string	"es.",13,10,0
	.align	2
$C$FSL265:	.string	"FD          Set configuration to default and write to flash"
	.string	".",13,10,0
	.align	2
$C$FSL266:	.string	"H           Help menu print out.",13,10,0
	.align	2
$C$FSL267:	.string	13,10,"Load Cell:            %.2f",13,10,0
	.align	2
$C$FSL268:	.string	"Sensor State:         %d %d",13,10,0
	.align	2
$C$FSL269:	.string	"Encoder:              %.2f",13,10,0
	.align	2
$C$FSL270:	.string	13,10,"*** Changes have not been saved! Use ",34,"FW",34," t"
	.string	"o save. ***",13,10,0
	.align	2
$C$FSL271:	.string	"%10.1f",0
	.align	2
$C$FSL272:	.string	"1",0
	.align	2
$C$FSL273:	.string	"0",0
	.align	2
$C$FSL274:	.string	"-",0
	.align	2
$C$FSL275:	.string	"%10.4f",0
	.align	2
$C$FSL276:	.string	"%10.3f",0
	.align	2
$C$FSL277:	.string	"%10.2f",0
	.align	2
$C$FSL278:	.string	"%10.0f",0
;**************************************************************
;* UNDEFINED EXTERNAL REFERENCES                              *
;**************************************************************
	.global	_ad7738_resetvall
	.global	_toggleFastDataCollect
	.global	_ad7738_resetlimit
	.global	_ad7738_resettare
	.global	_ad7738_resetpeak
	.global	_ad7738_settemp
	.global	_setMotorDir
	.global	_scia_set_cmd_mode
	.global	_UNITS
	.global	_ad7738_setcal
	.global	_calcAutoDir
	.global	_setautoHeightEnable
	.global	_ad7738_monclr
	.global	_configCAN
	.global	_setAutoHeight
	.global	_ad7738_init
	.global	_maf_rst
	.global	_conf_default
	.global	_set_numSensors
	.global	_velf_rst
	.global	_InitPieCtrl
	.global	_InitPieVectTable
	.global	_LPV
	.global	_InitECan
	.global	_reboot
	.global	_sys_init
	.global	_METHOD
	.global	_latch_dac
	.global	_mcbsp_xmit
	.global	_setMotorJog
	.global	_ds1820start
	.global	_INTERFACE
	.global	_delay_us
	.global	_BITMAP
	.global	_BAUD
	.global	_lcd_clear
	.global	_lcd_puts
	.global	_led_set
	.global	_scia_init
	.global	_dac_setmode
	.global	_lcd_init
	.global	_lcd_dputs
	.global	_flash_init
	.global	_uart_set_dir
	.global	_shunt_switch
	.global	_gpio_init
	.global	_led_init
	.global	_ssr_set
	.global	_extio_init
	.global	_getMotorJog
	.global	_port4004
	.global	_port400e
	.global	_secureRamFuncs_loadend
	.global	_secureRamFuncs_runstart
	.global	_Flash28_API_LoadStart
	.global	_getautoHeightEnable
	.global	_secureRamFuncs_loadstart
	.global	_Flash28_API_LoadEnd
	.global	_Flash28_API_RunStart
	.global	_tagdetect
	.global	_conf_read
	.global	_conf_write
	.global	_scia_send_bin
	.global	_get_numSensors
	.global	_ad7738_rawrdy
	.global	_scia_getparam
	.global	_scia_rx_getcmds
	.global	_atoi
	.global	_scia_puts
	.global	_getStartStop
	.global	_sprintf
	.global	_scia_rx_getcmd
	.global	_ad7738_monrdy
	.global	_ad7738_getlimitchgd
	.global	_ad7738_getlimitst
	.global	_ad7738_tempread
	.global	_ad7738_tempstart
	.global	_ad7738_tagsdetect
	.global	_ds1820read
	.global	_ad7738_getraw
	.global	_ad7738_getmon
	.global	_strlen
	.global	_ad7738_getload
	.global	_atol
	.global	_strtod
	.global	_ad7738_getpeak
	.global	_Flash_CallbackPtr
	.global	_ad7738_getpos
	.global	_Flash_CPUScaleFactor
	.global	_ad7738_getpeakload
	.global	_ad7738_getvall
	.global	_ad7738_getDropTime
	.global	_prod_getnext
	.global	_prod_getavail
	.global	_tagid
	.global	_GpioDataRegs
	.global	__ctypes_
	.global	_conf_data
	.global	ULL$$CMP
	.global	_memcpy
	.global	LL$$DIV
	.global	LL$$CMP
	.global	FS$$MPY
	.global	LL$$TOFS
	.global	FS$$ADD
	.global	FS$$SUB
	.global	FS$$NEG
	.global	FS$$DIV
	.global	FS$$CMP
	.global	L$$TOFS
	.global	FS$$TOLL
	.global	U$$TOFS
	.global	I$$TOFS
	.global	FS$$TOU
	.global	FS$$TOL

;***************************************************************
;* TYPE INFORMATION                                            *
;***************************************************************

$C$DW$T$23	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$23, DW_AT_byte_size(0x21c)
$C$DW$1531	.dwtag  DW_TAG_member
	.dwattr $C$DW$1531, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1531, DW_AT_name("fs_type")
	.dwattr $C$DW$1531, DW_AT_TI_symbol_name("_fs_type")
	.dwattr $C$DW$1531, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1531, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1532	.dwtag  DW_TAG_member
	.dwattr $C$DW$1532, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1532, DW_AT_name("drv")
	.dwattr $C$DW$1532, DW_AT_TI_symbol_name("_drv")
	.dwattr $C$DW$1532, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1532, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1533	.dwtag  DW_TAG_member
	.dwattr $C$DW$1533, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1533, DW_AT_name("csize")
	.dwattr $C$DW$1533, DW_AT_TI_symbol_name("_csize")
	.dwattr $C$DW$1533, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1533, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1534	.dwtag  DW_TAG_member
	.dwattr $C$DW$1534, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1534, DW_AT_name("n_fats")
	.dwattr $C$DW$1534, DW_AT_TI_symbol_name("_n_fats")
	.dwattr $C$DW$1534, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1534, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1535	.dwtag  DW_TAG_member
	.dwattr $C$DW$1535, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1535, DW_AT_name("wflag")
	.dwattr $C$DW$1535, DW_AT_TI_symbol_name("_wflag")
	.dwattr $C$DW$1535, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1535, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1536	.dwtag  DW_TAG_member
	.dwattr $C$DW$1536, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1536, DW_AT_name("fsi_flag")
	.dwattr $C$DW$1536, DW_AT_TI_symbol_name("_fsi_flag")
	.dwattr $C$DW$1536, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1536, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1537	.dwtag  DW_TAG_member
	.dwattr $C$DW$1537, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1537, DW_AT_name("id")
	.dwattr $C$DW$1537, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1537, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1537, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1538	.dwtag  DW_TAG_member
	.dwattr $C$DW$1538, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1538, DW_AT_name("n_rootdir")
	.dwattr $C$DW$1538, DW_AT_TI_symbol_name("_n_rootdir")
	.dwattr $C$DW$1538, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1538, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1539	.dwtag  DW_TAG_member
	.dwattr $C$DW$1539, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1539, DW_AT_name("last_clust")
	.dwattr $C$DW$1539, DW_AT_TI_symbol_name("_last_clust")
	.dwattr $C$DW$1539, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1539, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1540	.dwtag  DW_TAG_member
	.dwattr $C$DW$1540, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1540, DW_AT_name("free_clust")
	.dwattr $C$DW$1540, DW_AT_TI_symbol_name("_free_clust")
	.dwattr $C$DW$1540, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1540, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1541	.dwtag  DW_TAG_member
	.dwattr $C$DW$1541, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1541, DW_AT_name("fsi_sector")
	.dwattr $C$DW$1541, DW_AT_TI_symbol_name("_fsi_sector")
	.dwattr $C$DW$1541, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1541, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1542	.dwtag  DW_TAG_member
	.dwattr $C$DW$1542, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1542, DW_AT_name("cdir")
	.dwattr $C$DW$1542, DW_AT_TI_symbol_name("_cdir")
	.dwattr $C$DW$1542, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1542, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1543	.dwtag  DW_TAG_member
	.dwattr $C$DW$1543, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1543, DW_AT_name("n_fatent")
	.dwattr $C$DW$1543, DW_AT_TI_symbol_name("_n_fatent")
	.dwattr $C$DW$1543, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1543, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1544	.dwtag  DW_TAG_member
	.dwattr $C$DW$1544, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1544, DW_AT_name("fsize")
	.dwattr $C$DW$1544, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1544, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1544, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1545	.dwtag  DW_TAG_member
	.dwattr $C$DW$1545, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1545, DW_AT_name("fatbase")
	.dwattr $C$DW$1545, DW_AT_TI_symbol_name("_fatbase")
	.dwattr $C$DW$1545, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1545, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1546	.dwtag  DW_TAG_member
	.dwattr $C$DW$1546, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1546, DW_AT_name("dirbase")
	.dwattr $C$DW$1546, DW_AT_TI_symbol_name("_dirbase")
	.dwattr $C$DW$1546, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1546, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1547	.dwtag  DW_TAG_member
	.dwattr $C$DW$1547, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1547, DW_AT_name("database")
	.dwattr $C$DW$1547, DW_AT_TI_symbol_name("_database")
	.dwattr $C$DW$1547, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1547, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1548	.dwtag  DW_TAG_member
	.dwattr $C$DW$1548, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1548, DW_AT_name("winsect")
	.dwattr $C$DW$1548, DW_AT_TI_symbol_name("_winsect")
	.dwattr $C$DW$1548, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1548, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1549	.dwtag  DW_TAG_member
	.dwattr $C$DW$1549, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1549, DW_AT_name("win")
	.dwattr $C$DW$1549, DW_AT_TI_symbol_name("_win")
	.dwattr $C$DW$1549, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1549, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$23

$C$DW$T$24	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$24, DW_AT_name("FATFS")
	.dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$23)
	.dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)

$C$DW$T$25	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$24)
	.dwattr $C$DW$T$25, DW_AT_address_class(0x20)


$C$DW$T$28	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$28, DW_AT_byte_size(0x216)
$C$DW$1550	.dwtag  DW_TAG_member
	.dwattr $C$DW$1550, DW_AT_type(*$C$DW$T$25)
	.dwattr $C$DW$1550, DW_AT_name("fs")
	.dwattr $C$DW$1550, DW_AT_TI_symbol_name("_fs")
	.dwattr $C$DW$1550, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1550, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1551	.dwtag  DW_TAG_member
	.dwattr $C$DW$1551, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1551, DW_AT_name("id")
	.dwattr $C$DW$1551, DW_AT_TI_symbol_name("_id")
	.dwattr $C$DW$1551, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1551, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1552	.dwtag  DW_TAG_member
	.dwattr $C$DW$1552, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1552, DW_AT_name("flag")
	.dwattr $C$DW$1552, DW_AT_TI_symbol_name("_flag")
	.dwattr $C$DW$1552, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1552, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1553	.dwtag  DW_TAG_member
	.dwattr $C$DW$1553, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1553, DW_AT_name("pad1")
	.dwattr $C$DW$1553, DW_AT_TI_symbol_name("_pad1")
	.dwattr $C$DW$1553, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1553, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1554	.dwtag  DW_TAG_member
	.dwattr $C$DW$1554, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1554, DW_AT_name("fptr")
	.dwattr $C$DW$1554, DW_AT_TI_symbol_name("_fptr")
	.dwattr $C$DW$1554, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1554, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1555	.dwtag  DW_TAG_member
	.dwattr $C$DW$1555, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1555, DW_AT_name("fsize")
	.dwattr $C$DW$1555, DW_AT_TI_symbol_name("_fsize")
	.dwattr $C$DW$1555, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1555, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1556	.dwtag  DW_TAG_member
	.dwattr $C$DW$1556, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1556, DW_AT_name("org_clust")
	.dwattr $C$DW$1556, DW_AT_TI_symbol_name("_org_clust")
	.dwattr $C$DW$1556, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1556, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1557	.dwtag  DW_TAG_member
	.dwattr $C$DW$1557, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1557, DW_AT_name("curr_clust")
	.dwattr $C$DW$1557, DW_AT_TI_symbol_name("_curr_clust")
	.dwattr $C$DW$1557, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1557, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1558	.dwtag  DW_TAG_member
	.dwattr $C$DW$1558, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1558, DW_AT_name("dsect")
	.dwattr $C$DW$1558, DW_AT_TI_symbol_name("_dsect")
	.dwattr $C$DW$1558, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1558, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1559	.dwtag  DW_TAG_member
	.dwattr $C$DW$1559, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$1559, DW_AT_name("dir_sect")
	.dwattr $C$DW$1559, DW_AT_TI_symbol_name("_dir_sect")
	.dwattr $C$DW$1559, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1559, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1560	.dwtag  DW_TAG_member
	.dwattr $C$DW$1560, DW_AT_type(*$C$DW$T$26)
	.dwattr $C$DW$1560, DW_AT_name("dir_ptr")
	.dwattr $C$DW$1560, DW_AT_TI_symbol_name("_dir_ptr")
	.dwattr $C$DW$1560, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1560, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1561	.dwtag  DW_TAG_member
	.dwattr $C$DW$1561, DW_AT_type(*$C$DW$T$27)
	.dwattr $C$DW$1561, DW_AT_name("cltbl")
	.dwattr $C$DW$1561, DW_AT_TI_symbol_name("_cltbl")
	.dwattr $C$DW$1561, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1561, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1562	.dwtag  DW_TAG_member
	.dwattr $C$DW$1562, DW_AT_type(*$C$DW$T$22)
	.dwattr $C$DW$1562, DW_AT_name("buf")
	.dwattr $C$DW$1562, DW_AT_TI_symbol_name("_buf")
	.dwattr $C$DW$1562, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1562, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$28

$C$DW$T$110	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$110, DW_AT_name("FIL")
	.dwattr $C$DW$T$110, DW_AT_type(*$C$DW$T$28)
	.dwattr $C$DW$T$110, DW_AT_language(DW_LANG_C)


$C$DW$T$29	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$29, DW_AT_byte_size(0x07)
$C$DW$1563	.dwtag  DW_TAG_member
	.dwattr $C$DW$1563, DW_AT_type(*$C$DW$T$20)
	.dwattr $C$DW$1563, DW_AT_name("year")
	.dwattr $C$DW$1563, DW_AT_TI_symbol_name("_year")
	.dwattr $C$DW$1563, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1563, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1564	.dwtag  DW_TAG_member
	.dwattr $C$DW$1564, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1564, DW_AT_name("month")
	.dwattr $C$DW$1564, DW_AT_TI_symbol_name("_month")
	.dwattr $C$DW$1564, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1564, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1565	.dwtag  DW_TAG_member
	.dwattr $C$DW$1565, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1565, DW_AT_name("mday")
	.dwattr $C$DW$1565, DW_AT_TI_symbol_name("_mday")
	.dwattr $C$DW$1565, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1565, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1566	.dwtag  DW_TAG_member
	.dwattr $C$DW$1566, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1566, DW_AT_name("wday")
	.dwattr $C$DW$1566, DW_AT_TI_symbol_name("_wday")
	.dwattr $C$DW$1566, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1566, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1567	.dwtag  DW_TAG_member
	.dwattr $C$DW$1567, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1567, DW_AT_name("hour")
	.dwattr $C$DW$1567, DW_AT_TI_symbol_name("_hour")
	.dwattr $C$DW$1567, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1567, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1568	.dwtag  DW_TAG_member
	.dwattr $C$DW$1568, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1568, DW_AT_name("min")
	.dwattr $C$DW$1568, DW_AT_TI_symbol_name("_min")
	.dwattr $C$DW$1568, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1568, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1569	.dwtag  DW_TAG_member
	.dwattr $C$DW$1569, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$1569, DW_AT_name("sec")
	.dwattr $C$DW$1569, DW_AT_TI_symbol_name("_sec")
	.dwattr $C$DW$1569, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1569, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$29

$C$DW$T$111	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$111, DW_AT_name("RTC")
	.dwattr $C$DW$T$111, DW_AT_type(*$C$DW$T$29)
	.dwattr $C$DW$T$111, DW_AT_language(DW_LANG_C)


$C$DW$T$31	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$31, DW_AT_name("ADC_COUNT")
	.dwattr $C$DW$T$31, DW_AT_byte_size(0x02)
$C$DW$1570	.dwtag  DW_TAG_member
	.dwattr $C$DW$1570, DW_AT_type(*$C$DW$T$30)
	.dwattr $C$DW$1570, DW_AT_name("adc")
	.dwattr $C$DW$1570, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1570, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1570, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$31

$C$DW$T$115	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$115, DW_AT_name("adccnt_t")
	.dwattr $C$DW$T$115, DW_AT_type(*$C$DW$T$31)
	.dwattr $C$DW$T$115, DW_AT_language(DW_LANG_C)

$C$DW$T$116	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$116, DW_AT_type(*$C$DW$T$115)
	.dwattr $C$DW$T$116, DW_AT_address_class(0x20)


$C$DW$T$34	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$34, DW_AT_name("ADC_WEIGHT")
	.dwattr $C$DW$T$34, DW_AT_byte_size(0x0a)
$C$DW$1571	.dwtag  DW_TAG_member
	.dwattr $C$DW$1571, DW_AT_type(*$C$DW$T$32)
	.dwattr $C$DW$1571, DW_AT_name("adw")
	.dwattr $C$DW$1571, DW_AT_TI_symbol_name("_adw")
	.dwattr $C$DW$1571, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1571, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1572	.dwtag  DW_TAG_member
	.dwattr $C$DW$1572, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1572, DW_AT_name("pos")
	.dwattr $C$DW$1572, DW_AT_TI_symbol_name("_pos")
	.dwattr $C$DW$1572, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1572, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1573	.dwtag  DW_TAG_member
	.dwattr $C$DW$1573, DW_AT_type(*$C$DW$T$33)
	.dwattr $C$DW$1573, DW_AT_name("vel")
	.dwattr $C$DW$1573, DW_AT_TI_symbol_name("_vel")
	.dwattr $C$DW$1573, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1573, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$34

$C$DW$T$121	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$121, DW_AT_name("adcwt_t")
	.dwattr $C$DW$T$121, DW_AT_type(*$C$DW$T$34)
	.dwattr $C$DW$T$121, DW_AT_language(DW_LANG_C)

$C$DW$T$122	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$122, DW_AT_type(*$C$DW$T$121)
	.dwattr $C$DW$T$122, DW_AT_address_class(0x20)


$C$DW$T$35	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$35, DW_AT_name("CHANNEL_CONF")
	.dwattr $C$DW$T$35, DW_AT_byte_size(0x0a)
$C$DW$1574	.dwtag  DW_TAG_member
	.dwattr $C$DW$1574, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1574, DW_AT_name("ci")
	.dwattr $C$DW$1574, DW_AT_TI_symbol_name("_ci")
	.dwattr $C$DW$1574, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1574, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1575	.dwtag  DW_TAG_member
	.dwattr $C$DW$1575, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1575, DW_AT_name("bslope")
	.dwattr $C$DW$1575, DW_AT_TI_symbol_name("_bslope")
	.dwattr $C$DW$1575, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1575, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1576	.dwtag  DW_TAG_member
	.dwattr $C$DW$1576, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1576, DW_AT_name("tcx")
	.dwattr $C$DW$1576, DW_AT_TI_symbol_name("_tcx")
	.dwattr $C$DW$1576, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1576, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1577	.dwtag  DW_TAG_member
	.dwattr $C$DW$1577, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1577, DW_AT_name("tcy")
	.dwattr $C$DW$1577, DW_AT_TI_symbol_name("_tcy")
	.dwattr $C$DW$1577, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1577, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1578	.dwtag  DW_TAG_member
	.dwattr $C$DW$1578, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1578, DW_AT_name("tcz")
	.dwattr $C$DW$1578, DW_AT_TI_symbol_name("_tcz")
	.dwattr $C$DW$1578, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1578, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$35

$C$DW$T$93	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$93, DW_AT_name("cconf_t")
	.dwattr $C$DW$T$93, DW_AT_type(*$C$DW$T$35)
	.dwattr $C$DW$T$93, DW_AT_language(DW_LANG_C)


$C$DW$T$94	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$94, DW_AT_type(*$C$DW$T$93)
	.dwattr $C$DW$T$94, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$94, DW_AT_byte_size(0x0a)
$C$DW$1579	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1579, DW_AT_upper_bound(0x00)

	.dwendtag $C$DW$T$94


$C$DW$T$37	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$37, DW_AT_name("DAC_CONF")
	.dwattr $C$DW$T$37, DW_AT_byte_size(0x0c)
$C$DW$1580	.dwtag  DW_TAG_member
	.dwattr $C$DW$1580, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1580, DW_AT_name("what")
	.dwattr $C$DW$1580, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1580, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1580, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1581	.dwtag  DW_TAG_member
	.dwattr $C$DW$1581, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1581, DW_AT_name("ch")
	.dwattr $C$DW$1581, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1581, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1581, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1582	.dwtag  DW_TAG_member
	.dwattr $C$DW$1582, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1582, DW_AT_name("dslopep")
	.dwattr $C$DW$1582, DW_AT_TI_symbol_name("_dslopep")
	.dwattr $C$DW$1582, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1582, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1583	.dwtag  DW_TAG_member
	.dwattr $C$DW$1583, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1583, DW_AT_name("dslopen")
	.dwattr $C$DW$1583, DW_AT_TI_symbol_name("_dslopen")
	.dwattr $C$DW$1583, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1583, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1584	.dwtag  DW_TAG_member
	.dwattr $C$DW$1584, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1584, DW_AT_name("dint")
	.dwattr $C$DW$1584, DW_AT_TI_symbol_name("_dint")
	.dwattr $C$DW$1584, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1584, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1585	.dwtag  DW_TAG_member
	.dwattr $C$DW$1585, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1585, DW_AT_name("gain")
	.dwattr $C$DW$1585, DW_AT_TI_symbol_name("_gain")
	.dwattr $C$DW$1585, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1585, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1586	.dwtag  DW_TAG_member
	.dwattr $C$DW$1586, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1586, DW_AT_name("offset")
	.dwattr $C$DW$1586, DW_AT_TI_symbol_name("_offset")
	.dwattr $C$DW$1586, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
	.dwattr $C$DW$1586, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$37

$C$DW$T$99	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$99, DW_AT_name("dacconf_t")
	.dwattr $C$DW$T$99, DW_AT_type(*$C$DW$T$37)
	.dwattr $C$DW$T$99, DW_AT_language(DW_LANG_C)


$C$DW$T$100	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$100, DW_AT_type(*$C$DW$T$99)
	.dwattr $C$DW$T$100, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$100, DW_AT_byte_size(0x30)
$C$DW$1587	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1587, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$100


$C$DW$T$38	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$38, DW_AT_name("DISPLAY_CONF")
	.dwattr $C$DW$T$38, DW_AT_byte_size(0x03)
$C$DW$1588	.dwtag  DW_TAG_member
	.dwattr $C$DW$1588, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1588, DW_AT_name("what")
	.dwattr $C$DW$1588, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1588, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1588, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1589	.dwtag  DW_TAG_member
	.dwattr $C$DW$1589, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1589, DW_AT_name("ch")
	.dwattr $C$DW$1589, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1589, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1589, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1590	.dwtag  DW_TAG_member
	.dwattr $C$DW$1590, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1590, DW_AT_name("adec")
	.dwattr $C$DW$1590, DW_AT_TI_symbol_name("_adec")
	.dwattr $C$DW$1590, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1590, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$38

$C$DW$T$97	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$97, DW_AT_name("dconf_t")
	.dwattr $C$DW$T$97, DW_AT_type(*$C$DW$T$38)
	.dwattr $C$DW$T$97, DW_AT_language(DW_LANG_C)


$C$DW$T$98	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$98, DW_AT_type(*$C$DW$T$97)
	.dwattr $C$DW$T$98, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$98, DW_AT_byte_size(0x0c)
$C$DW$1591	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1591, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$98


$C$DW$T$39	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$39, DW_AT_name("GPACLEAR_BITS")
	.dwattr $C$DW$T$39, DW_AT_byte_size(0x01)
$C$DW$1592	.dwtag  DW_TAG_member
	.dwattr $C$DW$1592, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1592, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1592, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1592, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1592, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1592, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1592, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1593	.dwtag  DW_TAG_member
	.dwattr $C$DW$1593, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1593, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1593, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1593, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1593, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1593, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1593, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1594	.dwtag  DW_TAG_member
	.dwattr $C$DW$1594, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1594, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1594, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1594, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1594, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1594, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1594, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1595	.dwtag  DW_TAG_member
	.dwattr $C$DW$1595, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1595, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1595, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1595, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1595, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1595, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1595, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1596	.dwtag  DW_TAG_member
	.dwattr $C$DW$1596, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1596, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1596, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1596, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1596, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1596, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1596, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1597	.dwtag  DW_TAG_member
	.dwattr $C$DW$1597, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1597, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1597, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1597, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1597, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1597, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1597, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1598	.dwtag  DW_TAG_member
	.dwattr $C$DW$1598, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1598, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1598, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1598, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1598, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1598, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1598, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1599	.dwtag  DW_TAG_member
	.dwattr $C$DW$1599, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1599, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1599, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1599, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1599, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1599, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1599, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1600	.dwtag  DW_TAG_member
	.dwattr $C$DW$1600, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1600, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1600, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1600, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1600, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1600, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1600, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1601	.dwtag  DW_TAG_member
	.dwattr $C$DW$1601, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1601, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1601, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1601, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1601, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1601, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1601, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1602	.dwtag  DW_TAG_member
	.dwattr $C$DW$1602, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1602, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1602, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1602, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1602, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1602, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1602, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1603	.dwtag  DW_TAG_member
	.dwattr $C$DW$1603, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1603, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1603, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1603, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1603, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1603, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1603, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1604	.dwtag  DW_TAG_member
	.dwattr $C$DW$1604, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1604, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1604, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1604, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1604, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1604, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1604, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1605	.dwtag  DW_TAG_member
	.dwattr $C$DW$1605, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1605, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1605, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1605, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1605, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1605, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1605, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1606	.dwtag  DW_TAG_member
	.dwattr $C$DW$1606, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1606, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1606, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1606, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1606, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1606, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1606, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1607	.dwtag  DW_TAG_member
	.dwattr $C$DW$1607, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1607, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1607, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1607, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1607, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1607, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1607, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$39


$C$DW$T$40	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$40, DW_AT_name("GPACLEAR_REG")
	.dwattr $C$DW$T$40, DW_AT_byte_size(0x01)
$C$DW$1608	.dwtag  DW_TAG_member
	.dwattr $C$DW$1608, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1608, DW_AT_name("all")
	.dwattr $C$DW$1608, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1608, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1608, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1609	.dwtag  DW_TAG_member
	.dwattr $C$DW$1609, DW_AT_type(*$C$DW$T$39)
	.dwattr $C$DW$1609, DW_AT_name("bit")
	.dwattr $C$DW$1609, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1609, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1609, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$40


$C$DW$T$41	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$41, DW_AT_name("GPADAT_BITS")
	.dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
$C$DW$1610	.dwtag  DW_TAG_member
	.dwattr $C$DW$1610, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1610, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1610, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1610, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1610, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1610, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1610, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1611	.dwtag  DW_TAG_member
	.dwattr $C$DW$1611, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1611, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1611, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1611, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1611, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1611, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1611, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1612	.dwtag  DW_TAG_member
	.dwattr $C$DW$1612, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1612, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1612, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1612, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1612, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1612, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1612, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1613	.dwtag  DW_TAG_member
	.dwattr $C$DW$1613, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1613, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1613, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1613, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1613, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1613, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1613, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1614	.dwtag  DW_TAG_member
	.dwattr $C$DW$1614, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1614, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1614, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1614, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1614, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1614, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1614, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1615	.dwtag  DW_TAG_member
	.dwattr $C$DW$1615, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1615, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1615, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1615, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1615, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1615, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1615, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1616	.dwtag  DW_TAG_member
	.dwattr $C$DW$1616, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1616, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1616, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1616, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1616, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1616, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1616, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1617	.dwtag  DW_TAG_member
	.dwattr $C$DW$1617, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1617, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1617, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1617, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1617, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1617, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1617, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1618	.dwtag  DW_TAG_member
	.dwattr $C$DW$1618, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1618, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1618, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1618, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1618, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1618, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1618, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1619	.dwtag  DW_TAG_member
	.dwattr $C$DW$1619, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1619, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1619, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1619, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1619, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1619, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1619, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1620	.dwtag  DW_TAG_member
	.dwattr $C$DW$1620, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1620, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1620, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1620, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1620, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1620, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1620, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1621	.dwtag  DW_TAG_member
	.dwattr $C$DW$1621, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1621, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1621, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1621, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1621, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1621, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1621, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1622	.dwtag  DW_TAG_member
	.dwattr $C$DW$1622, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1622, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1622, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1622, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1622, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1622, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1622, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1623	.dwtag  DW_TAG_member
	.dwattr $C$DW$1623, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1623, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1623, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1623, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1623, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1623, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1623, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1624	.dwtag  DW_TAG_member
	.dwattr $C$DW$1624, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1624, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1624, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1624, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1624, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1624, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1624, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1625	.dwtag  DW_TAG_member
	.dwattr $C$DW$1625, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1625, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1625, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1625, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1625, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1625, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1625, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$41


$C$DW$T$42	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$42, DW_AT_name("GPADAT_REG")
	.dwattr $C$DW$T$42, DW_AT_byte_size(0x01)
$C$DW$1626	.dwtag  DW_TAG_member
	.dwattr $C$DW$1626, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1626, DW_AT_name("all")
	.dwattr $C$DW$1626, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1626, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1626, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1627	.dwtag  DW_TAG_member
	.dwattr $C$DW$1627, DW_AT_type(*$C$DW$T$41)
	.dwattr $C$DW$1627, DW_AT_name("bit")
	.dwattr $C$DW$1627, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1627, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1627, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$42


$C$DW$T$43	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$43, DW_AT_name("GPASET_BITS")
	.dwattr $C$DW$T$43, DW_AT_byte_size(0x01)
$C$DW$1628	.dwtag  DW_TAG_member
	.dwattr $C$DW$1628, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1628, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1628, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1628, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1628, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1628, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1628, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1629	.dwtag  DW_TAG_member
	.dwattr $C$DW$1629, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1629, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1629, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1629, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1629, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1629, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1629, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1630	.dwtag  DW_TAG_member
	.dwattr $C$DW$1630, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1630, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1630, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1630, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1630, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1630, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1630, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1631	.dwtag  DW_TAG_member
	.dwattr $C$DW$1631, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1631, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1631, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1631, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1631, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1631, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1631, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1632	.dwtag  DW_TAG_member
	.dwattr $C$DW$1632, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1632, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1632, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1632, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1632, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1632, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1632, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1633	.dwtag  DW_TAG_member
	.dwattr $C$DW$1633, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1633, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1633, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1633, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1633, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1633, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1633, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1634	.dwtag  DW_TAG_member
	.dwattr $C$DW$1634, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1634, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1634, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1634, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1634, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1634, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1634, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1635	.dwtag  DW_TAG_member
	.dwattr $C$DW$1635, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1635, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1635, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1635, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1635, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1635, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1635, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1636	.dwtag  DW_TAG_member
	.dwattr $C$DW$1636, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1636, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1636, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1636, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1636, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1636, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1636, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1637	.dwtag  DW_TAG_member
	.dwattr $C$DW$1637, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1637, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1637, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1637, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1637, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1637, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1637, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1638	.dwtag  DW_TAG_member
	.dwattr $C$DW$1638, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1638, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1638, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1638, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1638, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1638, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1638, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1639	.dwtag  DW_TAG_member
	.dwattr $C$DW$1639, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1639, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1639, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1639, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1639, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1639, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1639, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1640	.dwtag  DW_TAG_member
	.dwattr $C$DW$1640, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1640, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1640, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1640, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1640, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1640, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1640, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1641	.dwtag  DW_TAG_member
	.dwattr $C$DW$1641, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1641, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1641, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1641, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1641, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1641, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1641, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1642	.dwtag  DW_TAG_member
	.dwattr $C$DW$1642, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1642, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1642, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1642, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1642, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1642, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1642, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1643	.dwtag  DW_TAG_member
	.dwattr $C$DW$1643, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1643, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1643, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1643, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1643, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1643, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1643, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$43


$C$DW$T$44	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$44, DW_AT_name("GPASET_REG")
	.dwattr $C$DW$T$44, DW_AT_byte_size(0x01)
$C$DW$1644	.dwtag  DW_TAG_member
	.dwattr $C$DW$1644, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1644, DW_AT_name("all")
	.dwattr $C$DW$1644, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1644, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1644, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1645	.dwtag  DW_TAG_member
	.dwattr $C$DW$1645, DW_AT_type(*$C$DW$T$43)
	.dwattr $C$DW$1645, DW_AT_name("bit")
	.dwattr $C$DW$1645, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1645, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1645, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$44


$C$DW$T$45	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$45, DW_AT_name("GPATOGGLE_BITS")
	.dwattr $C$DW$T$45, DW_AT_byte_size(0x01)
$C$DW$1646	.dwtag  DW_TAG_member
	.dwattr $C$DW$1646, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1646, DW_AT_name("GPIOA0")
	.dwattr $C$DW$1646, DW_AT_TI_symbol_name("_GPIOA0")
	.dwattr $C$DW$1646, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1646, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1646, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1646, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1647	.dwtag  DW_TAG_member
	.dwattr $C$DW$1647, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1647, DW_AT_name("GPIOA1")
	.dwattr $C$DW$1647, DW_AT_TI_symbol_name("_GPIOA1")
	.dwattr $C$DW$1647, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1647, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1647, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1647, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1648	.dwtag  DW_TAG_member
	.dwattr $C$DW$1648, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1648, DW_AT_name("GPIOA2")
	.dwattr $C$DW$1648, DW_AT_TI_symbol_name("_GPIOA2")
	.dwattr $C$DW$1648, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1648, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1648, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1648, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1649	.dwtag  DW_TAG_member
	.dwattr $C$DW$1649, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1649, DW_AT_name("GPIOA3")
	.dwattr $C$DW$1649, DW_AT_TI_symbol_name("_GPIOA3")
	.dwattr $C$DW$1649, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1649, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1649, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1649, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1650	.dwtag  DW_TAG_member
	.dwattr $C$DW$1650, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1650, DW_AT_name("GPIOA4")
	.dwattr $C$DW$1650, DW_AT_TI_symbol_name("_GPIOA4")
	.dwattr $C$DW$1650, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1650, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1650, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1650, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1651	.dwtag  DW_TAG_member
	.dwattr $C$DW$1651, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1651, DW_AT_name("GPIOA5")
	.dwattr $C$DW$1651, DW_AT_TI_symbol_name("_GPIOA5")
	.dwattr $C$DW$1651, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1651, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1651, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1651, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1652	.dwtag  DW_TAG_member
	.dwattr $C$DW$1652, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1652, DW_AT_name("GPIOA6")
	.dwattr $C$DW$1652, DW_AT_TI_symbol_name("_GPIOA6")
	.dwattr $C$DW$1652, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1652, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1652, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1652, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1653	.dwtag  DW_TAG_member
	.dwattr $C$DW$1653, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1653, DW_AT_name("GPIOA7")
	.dwattr $C$DW$1653, DW_AT_TI_symbol_name("_GPIOA7")
	.dwattr $C$DW$1653, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1653, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1653, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1653, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1654	.dwtag  DW_TAG_member
	.dwattr $C$DW$1654, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1654, DW_AT_name("GPIOA8")
	.dwattr $C$DW$1654, DW_AT_TI_symbol_name("_GPIOA8")
	.dwattr $C$DW$1654, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1654, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1654, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1654, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1655	.dwtag  DW_TAG_member
	.dwattr $C$DW$1655, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1655, DW_AT_name("GPIOA9")
	.dwattr $C$DW$1655, DW_AT_TI_symbol_name("_GPIOA9")
	.dwattr $C$DW$1655, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1655, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1655, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1655, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1656	.dwtag  DW_TAG_member
	.dwattr $C$DW$1656, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1656, DW_AT_name("GPIOA10")
	.dwattr $C$DW$1656, DW_AT_TI_symbol_name("_GPIOA10")
	.dwattr $C$DW$1656, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1656, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1656, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1656, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1657	.dwtag  DW_TAG_member
	.dwattr $C$DW$1657, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1657, DW_AT_name("GPIOA11")
	.dwattr $C$DW$1657, DW_AT_TI_symbol_name("_GPIOA11")
	.dwattr $C$DW$1657, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1657, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1657, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1657, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1658	.dwtag  DW_TAG_member
	.dwattr $C$DW$1658, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1658, DW_AT_name("GPIOA12")
	.dwattr $C$DW$1658, DW_AT_TI_symbol_name("_GPIOA12")
	.dwattr $C$DW$1658, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1658, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1658, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1658, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1659	.dwtag  DW_TAG_member
	.dwattr $C$DW$1659, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1659, DW_AT_name("GPIOA13")
	.dwattr $C$DW$1659, DW_AT_TI_symbol_name("_GPIOA13")
	.dwattr $C$DW$1659, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1659, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1659, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1659, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1660	.dwtag  DW_TAG_member
	.dwattr $C$DW$1660, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1660, DW_AT_name("GPIOA14")
	.dwattr $C$DW$1660, DW_AT_TI_symbol_name("_GPIOA14")
	.dwattr $C$DW$1660, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1660, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1660, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1660, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1661	.dwtag  DW_TAG_member
	.dwattr $C$DW$1661, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1661, DW_AT_name("GPIOA15")
	.dwattr $C$DW$1661, DW_AT_TI_symbol_name("_GPIOA15")
	.dwattr $C$DW$1661, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1661, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1661, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1661, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$45


$C$DW$T$46	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$46, DW_AT_name("GPATOGGLE_REG")
	.dwattr $C$DW$T$46, DW_AT_byte_size(0x01)
$C$DW$1662	.dwtag  DW_TAG_member
	.dwattr $C$DW$1662, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1662, DW_AT_name("all")
	.dwattr $C$DW$1662, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1662, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1662, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1663	.dwtag  DW_TAG_member
	.dwattr $C$DW$1663, DW_AT_type(*$C$DW$T$45)
	.dwattr $C$DW$1663, DW_AT_name("bit")
	.dwattr $C$DW$1663, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1663, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1663, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$46


$C$DW$T$47	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$47, DW_AT_name("GPBCLEAR_BITS")
	.dwattr $C$DW$T$47, DW_AT_byte_size(0x01)
$C$DW$1664	.dwtag  DW_TAG_member
	.dwattr $C$DW$1664, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1664, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1664, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1664, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1664, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1664, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1664, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1665	.dwtag  DW_TAG_member
	.dwattr $C$DW$1665, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1665, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1665, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1665, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1665, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1665, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1665, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1666	.dwtag  DW_TAG_member
	.dwattr $C$DW$1666, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1666, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1666, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1666, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1666, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1666, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1666, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1667	.dwtag  DW_TAG_member
	.dwattr $C$DW$1667, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1667, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1667, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1667, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1667, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1667, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1667, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1668	.dwtag  DW_TAG_member
	.dwattr $C$DW$1668, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1668, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1668, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1668, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1668, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1668, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1668, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1669	.dwtag  DW_TAG_member
	.dwattr $C$DW$1669, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1669, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1669, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1669, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1669, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1669, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1669, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1670	.dwtag  DW_TAG_member
	.dwattr $C$DW$1670, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1670, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1670, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1670, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1670, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1670, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1670, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1671	.dwtag  DW_TAG_member
	.dwattr $C$DW$1671, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1671, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1671, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1671, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1671, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1671, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1671, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1672	.dwtag  DW_TAG_member
	.dwattr $C$DW$1672, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1672, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1672, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1672, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1672, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1672, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1672, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1673	.dwtag  DW_TAG_member
	.dwattr $C$DW$1673, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1673, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1673, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1673, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1673, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1673, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1673, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1674	.dwtag  DW_TAG_member
	.dwattr $C$DW$1674, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1674, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1674, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1674, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1674, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1674, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1674, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1675	.dwtag  DW_TAG_member
	.dwattr $C$DW$1675, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1675, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1675, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1675, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1675, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1675, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1675, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1676	.dwtag  DW_TAG_member
	.dwattr $C$DW$1676, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1676, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1676, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1676, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1676, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1676, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1676, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1677	.dwtag  DW_TAG_member
	.dwattr $C$DW$1677, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1677, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1677, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1677, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1677, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1677, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1677, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1678	.dwtag  DW_TAG_member
	.dwattr $C$DW$1678, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1678, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1678, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1678, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1678, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1678, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1678, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1679	.dwtag  DW_TAG_member
	.dwattr $C$DW$1679, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1679, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1679, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1679, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1679, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1679, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1679, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$47


$C$DW$T$48	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$48, DW_AT_name("GPBCLEAR_REG")
	.dwattr $C$DW$T$48, DW_AT_byte_size(0x01)
$C$DW$1680	.dwtag  DW_TAG_member
	.dwattr $C$DW$1680, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1680, DW_AT_name("all")
	.dwattr $C$DW$1680, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1680, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1680, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1681	.dwtag  DW_TAG_member
	.dwattr $C$DW$1681, DW_AT_type(*$C$DW$T$47)
	.dwattr $C$DW$1681, DW_AT_name("bit")
	.dwattr $C$DW$1681, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1681, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1681, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$48


$C$DW$T$49	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$49, DW_AT_name("GPBDAT_BITS")
	.dwattr $C$DW$T$49, DW_AT_byte_size(0x01)
$C$DW$1682	.dwtag  DW_TAG_member
	.dwattr $C$DW$1682, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1682, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1682, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1682, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1682, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1682, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1682, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1683	.dwtag  DW_TAG_member
	.dwattr $C$DW$1683, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1683, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1683, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1683, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1683, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1683, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1683, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1684	.dwtag  DW_TAG_member
	.dwattr $C$DW$1684, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1684, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1684, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1684, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1684, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1684, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1684, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1685	.dwtag  DW_TAG_member
	.dwattr $C$DW$1685, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1685, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1685, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1685, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1685, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1685, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1685, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1686	.dwtag  DW_TAG_member
	.dwattr $C$DW$1686, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1686, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1686, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1686, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1686, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1686, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1686, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1687	.dwtag  DW_TAG_member
	.dwattr $C$DW$1687, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1687, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1687, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1687, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1687, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1687, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1687, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1688	.dwtag  DW_TAG_member
	.dwattr $C$DW$1688, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1688, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1688, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1688, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1688, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1688, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1688, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1689	.dwtag  DW_TAG_member
	.dwattr $C$DW$1689, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1689, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1689, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1689, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1689, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1689, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1689, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1690	.dwtag  DW_TAG_member
	.dwattr $C$DW$1690, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1690, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1690, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1690, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1690, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1690, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1690, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1691	.dwtag  DW_TAG_member
	.dwattr $C$DW$1691, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1691, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1691, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1691, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1691, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1691, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1691, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1692	.dwtag  DW_TAG_member
	.dwattr $C$DW$1692, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1692, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1692, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1692, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1692, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1692, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1692, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1693	.dwtag  DW_TAG_member
	.dwattr $C$DW$1693, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1693, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1693, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1693, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1693, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1693, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1693, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1694	.dwtag  DW_TAG_member
	.dwattr $C$DW$1694, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1694, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1694, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1694, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1694, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1694, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1694, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1695	.dwtag  DW_TAG_member
	.dwattr $C$DW$1695, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1695, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1695, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1695, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1695, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1695, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1695, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1696	.dwtag  DW_TAG_member
	.dwattr $C$DW$1696, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1696, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1696, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1696, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1696, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1696, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1696, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1697	.dwtag  DW_TAG_member
	.dwattr $C$DW$1697, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1697, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1697, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1697, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1697, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1697, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1697, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$49


$C$DW$T$50	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$50, DW_AT_name("GPBDAT_REG")
	.dwattr $C$DW$T$50, DW_AT_byte_size(0x01)
$C$DW$1698	.dwtag  DW_TAG_member
	.dwattr $C$DW$1698, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1698, DW_AT_name("all")
	.dwattr $C$DW$1698, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1698, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1698, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1699	.dwtag  DW_TAG_member
	.dwattr $C$DW$1699, DW_AT_type(*$C$DW$T$49)
	.dwattr $C$DW$1699, DW_AT_name("bit")
	.dwattr $C$DW$1699, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1699, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1699, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$50


$C$DW$T$51	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$51, DW_AT_name("GPBSET_BITS")
	.dwattr $C$DW$T$51, DW_AT_byte_size(0x01)
$C$DW$1700	.dwtag  DW_TAG_member
	.dwattr $C$DW$1700, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1700, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1700, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1700, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1700, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1700, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1700, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1701	.dwtag  DW_TAG_member
	.dwattr $C$DW$1701, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1701, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1701, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1701, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1701, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1701, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1701, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1702	.dwtag  DW_TAG_member
	.dwattr $C$DW$1702, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1702, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1702, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1702, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1702, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1702, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1702, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1703	.dwtag  DW_TAG_member
	.dwattr $C$DW$1703, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1703, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1703, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1703, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1703, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1703, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1703, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1704	.dwtag  DW_TAG_member
	.dwattr $C$DW$1704, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1704, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1704, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1704, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1704, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1704, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1704, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1705	.dwtag  DW_TAG_member
	.dwattr $C$DW$1705, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1705, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1705, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1705, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1705, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1705, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1705, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1706	.dwtag  DW_TAG_member
	.dwattr $C$DW$1706, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1706, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1706, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1706, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1706, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1706, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1706, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1707	.dwtag  DW_TAG_member
	.dwattr $C$DW$1707, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1707, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1707, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1707, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1707, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1707, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1707, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1708	.dwtag  DW_TAG_member
	.dwattr $C$DW$1708, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1708, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1708, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1708, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1708, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1708, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1708, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1709	.dwtag  DW_TAG_member
	.dwattr $C$DW$1709, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1709, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1709, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1709, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1709, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1709, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1709, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1710	.dwtag  DW_TAG_member
	.dwattr $C$DW$1710, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1710, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1710, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1710, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1710, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1710, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1710, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1711	.dwtag  DW_TAG_member
	.dwattr $C$DW$1711, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1711, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1711, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1711, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1711, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1711, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1711, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1712	.dwtag  DW_TAG_member
	.dwattr $C$DW$1712, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1712, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1712, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1712, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1712, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1712, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1712, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1713	.dwtag  DW_TAG_member
	.dwattr $C$DW$1713, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1713, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1713, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1713, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1713, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1713, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1713, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1714	.dwtag  DW_TAG_member
	.dwattr $C$DW$1714, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1714, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1714, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1714, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1714, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1714, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1714, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1715	.dwtag  DW_TAG_member
	.dwattr $C$DW$1715, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1715, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1715, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1715, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1715, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1715, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1715, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$51


$C$DW$T$52	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$52, DW_AT_name("GPBSET_REG")
	.dwattr $C$DW$T$52, DW_AT_byte_size(0x01)
$C$DW$1716	.dwtag  DW_TAG_member
	.dwattr $C$DW$1716, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1716, DW_AT_name("all")
	.dwattr $C$DW$1716, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1716, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1716, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1717	.dwtag  DW_TAG_member
	.dwattr $C$DW$1717, DW_AT_type(*$C$DW$T$51)
	.dwattr $C$DW$1717, DW_AT_name("bit")
	.dwattr $C$DW$1717, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1717, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1717, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$52


$C$DW$T$53	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$53, DW_AT_name("GPBTOGGLE_BITS")
	.dwattr $C$DW$T$53, DW_AT_byte_size(0x01)
$C$DW$1718	.dwtag  DW_TAG_member
	.dwattr $C$DW$1718, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1718, DW_AT_name("GPIOB0")
	.dwattr $C$DW$1718, DW_AT_TI_symbol_name("_GPIOB0")
	.dwattr $C$DW$1718, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1718, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1718, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1718, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1719	.dwtag  DW_TAG_member
	.dwattr $C$DW$1719, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1719, DW_AT_name("GPIOB1")
	.dwattr $C$DW$1719, DW_AT_TI_symbol_name("_GPIOB1")
	.dwattr $C$DW$1719, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1719, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1719, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1719, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1720	.dwtag  DW_TAG_member
	.dwattr $C$DW$1720, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1720, DW_AT_name("GPIOB2")
	.dwattr $C$DW$1720, DW_AT_TI_symbol_name("_GPIOB2")
	.dwattr $C$DW$1720, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1720, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1720, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1720, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1721	.dwtag  DW_TAG_member
	.dwattr $C$DW$1721, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1721, DW_AT_name("GPIOB3")
	.dwattr $C$DW$1721, DW_AT_TI_symbol_name("_GPIOB3")
	.dwattr $C$DW$1721, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1721, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1721, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1721, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1722	.dwtag  DW_TAG_member
	.dwattr $C$DW$1722, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1722, DW_AT_name("GPIOB4")
	.dwattr $C$DW$1722, DW_AT_TI_symbol_name("_GPIOB4")
	.dwattr $C$DW$1722, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1722, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1722, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1722, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1723	.dwtag  DW_TAG_member
	.dwattr $C$DW$1723, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1723, DW_AT_name("GPIOB5")
	.dwattr $C$DW$1723, DW_AT_TI_symbol_name("_GPIOB5")
	.dwattr $C$DW$1723, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1723, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1723, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1723, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1724	.dwtag  DW_TAG_member
	.dwattr $C$DW$1724, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1724, DW_AT_name("GPIOB6")
	.dwattr $C$DW$1724, DW_AT_TI_symbol_name("_GPIOB6")
	.dwattr $C$DW$1724, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1724, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1724, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1724, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1725	.dwtag  DW_TAG_member
	.dwattr $C$DW$1725, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1725, DW_AT_name("GPIOB7")
	.dwattr $C$DW$1725, DW_AT_TI_symbol_name("_GPIOB7")
	.dwattr $C$DW$1725, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1725, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1725, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1725, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1726	.dwtag  DW_TAG_member
	.dwattr $C$DW$1726, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1726, DW_AT_name("GPIOB8")
	.dwattr $C$DW$1726, DW_AT_TI_symbol_name("_GPIOB8")
	.dwattr $C$DW$1726, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1726, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1726, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1726, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1727	.dwtag  DW_TAG_member
	.dwattr $C$DW$1727, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1727, DW_AT_name("GPIOB9")
	.dwattr $C$DW$1727, DW_AT_TI_symbol_name("_GPIOB9")
	.dwattr $C$DW$1727, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1727, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1727, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1727, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1728	.dwtag  DW_TAG_member
	.dwattr $C$DW$1728, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1728, DW_AT_name("GPIOB10")
	.dwattr $C$DW$1728, DW_AT_TI_symbol_name("_GPIOB10")
	.dwattr $C$DW$1728, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1728, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1728, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1728, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1729	.dwtag  DW_TAG_member
	.dwattr $C$DW$1729, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1729, DW_AT_name("GPIOB11")
	.dwattr $C$DW$1729, DW_AT_TI_symbol_name("_GPIOB11")
	.dwattr $C$DW$1729, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1729, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1729, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1729, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1730	.dwtag  DW_TAG_member
	.dwattr $C$DW$1730, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1730, DW_AT_name("GPIOB12")
	.dwattr $C$DW$1730, DW_AT_TI_symbol_name("_GPIOB12")
	.dwattr $C$DW$1730, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1730, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1730, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1730, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1731	.dwtag  DW_TAG_member
	.dwattr $C$DW$1731, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1731, DW_AT_name("GPIOB13")
	.dwattr $C$DW$1731, DW_AT_TI_symbol_name("_GPIOB13")
	.dwattr $C$DW$1731, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1731, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1731, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1731, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1732	.dwtag  DW_TAG_member
	.dwattr $C$DW$1732, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1732, DW_AT_name("GPIOB14")
	.dwattr $C$DW$1732, DW_AT_TI_symbol_name("_GPIOB14")
	.dwattr $C$DW$1732, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1732, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1732, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1732, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1733	.dwtag  DW_TAG_member
	.dwattr $C$DW$1733, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1733, DW_AT_name("GPIOB15")
	.dwattr $C$DW$1733, DW_AT_TI_symbol_name("_GPIOB15")
	.dwattr $C$DW$1733, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1733, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1733, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1733, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$53


$C$DW$T$54	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$54, DW_AT_name("GPBTOGGLE_REG")
	.dwattr $C$DW$T$54, DW_AT_byte_size(0x01)
$C$DW$1734	.dwtag  DW_TAG_member
	.dwattr $C$DW$1734, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1734, DW_AT_name("all")
	.dwattr $C$DW$1734, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1734, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1734, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1735	.dwtag  DW_TAG_member
	.dwattr $C$DW$1735, DW_AT_type(*$C$DW$T$53)
	.dwattr $C$DW$1735, DW_AT_name("bit")
	.dwattr $C$DW$1735, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1735, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1735, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$54


$C$DW$T$55	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$55, DW_AT_name("GPDCLEAR_BITS")
	.dwattr $C$DW$T$55, DW_AT_byte_size(0x01)
$C$DW$1736	.dwtag  DW_TAG_member
	.dwattr $C$DW$1736, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1736, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1736, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1736, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1736, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1736, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1736, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1737	.dwtag  DW_TAG_member
	.dwattr $C$DW$1737, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1737, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1737, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1737, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1737, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1737, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1737, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1738	.dwtag  DW_TAG_member
	.dwattr $C$DW$1738, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1738, DW_AT_name("rsvd1")
	.dwattr $C$DW$1738, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1738, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1738, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1738, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1738, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1739	.dwtag  DW_TAG_member
	.dwattr $C$DW$1739, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1739, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1739, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1739, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1739, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1739, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1739, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1740	.dwtag  DW_TAG_member
	.dwattr $C$DW$1740, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1740, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1740, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1740, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1740, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1740, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1740, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1741	.dwtag  DW_TAG_member
	.dwattr $C$DW$1741, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1741, DW_AT_name("rsvd2")
	.dwattr $C$DW$1741, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1741, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1741, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1741, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1741, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$55


$C$DW$T$56	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$56, DW_AT_name("GPDCLEAR_REG")
	.dwattr $C$DW$T$56, DW_AT_byte_size(0x01)
$C$DW$1742	.dwtag  DW_TAG_member
	.dwattr $C$DW$1742, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1742, DW_AT_name("all")
	.dwattr $C$DW$1742, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1742, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1742, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1743	.dwtag  DW_TAG_member
	.dwattr $C$DW$1743, DW_AT_type(*$C$DW$T$55)
	.dwattr $C$DW$1743, DW_AT_name("bit")
	.dwattr $C$DW$1743, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1743, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1743, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$56


$C$DW$T$57	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$57, DW_AT_name("GPDDAT_BITS")
	.dwattr $C$DW$T$57, DW_AT_byte_size(0x01)
$C$DW$1744	.dwtag  DW_TAG_member
	.dwattr $C$DW$1744, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1744, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1744, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1744, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1744, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1744, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1744, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1745	.dwtag  DW_TAG_member
	.dwattr $C$DW$1745, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1745, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1745, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1745, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1745, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1745, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1745, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1746	.dwtag  DW_TAG_member
	.dwattr $C$DW$1746, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1746, DW_AT_name("rsvd1")
	.dwattr $C$DW$1746, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1746, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1746, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1746, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1746, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1747	.dwtag  DW_TAG_member
	.dwattr $C$DW$1747, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1747, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1747, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1747, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1747, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1747, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1747, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1748	.dwtag  DW_TAG_member
	.dwattr $C$DW$1748, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1748, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1748, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1748, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1748, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1748, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1748, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1749	.dwtag  DW_TAG_member
	.dwattr $C$DW$1749, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1749, DW_AT_name("rsvd2")
	.dwattr $C$DW$1749, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1749, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1749, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1749, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1749, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$57


$C$DW$T$58	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$58, DW_AT_name("GPDDAT_REG")
	.dwattr $C$DW$T$58, DW_AT_byte_size(0x01)
$C$DW$1750	.dwtag  DW_TAG_member
	.dwattr $C$DW$1750, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1750, DW_AT_name("all")
	.dwattr $C$DW$1750, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1750, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1750, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1751	.dwtag  DW_TAG_member
	.dwattr $C$DW$1751, DW_AT_type(*$C$DW$T$57)
	.dwattr $C$DW$1751, DW_AT_name("bit")
	.dwattr $C$DW$1751, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1751, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1751, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$58


$C$DW$T$59	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$59, DW_AT_name("GPDSET_BITS")
	.dwattr $C$DW$T$59, DW_AT_byte_size(0x01)
$C$DW$1752	.dwtag  DW_TAG_member
	.dwattr $C$DW$1752, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1752, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1752, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1752, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1752, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1752, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1752, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1753	.dwtag  DW_TAG_member
	.dwattr $C$DW$1753, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1753, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1753, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1753, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1753, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1753, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1753, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1754	.dwtag  DW_TAG_member
	.dwattr $C$DW$1754, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1754, DW_AT_name("rsvd1")
	.dwattr $C$DW$1754, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1754, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1754, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1754, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1754, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1755	.dwtag  DW_TAG_member
	.dwattr $C$DW$1755, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1755, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1755, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1755, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1755, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1755, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1755, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1756	.dwtag  DW_TAG_member
	.dwattr $C$DW$1756, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1756, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1756, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1756, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1756, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1756, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1756, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1757	.dwtag  DW_TAG_member
	.dwattr $C$DW$1757, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1757, DW_AT_name("rsvd2")
	.dwattr $C$DW$1757, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1757, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1757, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1757, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1757, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$59


$C$DW$T$60	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$60, DW_AT_name("GPDSET_REG")
	.dwattr $C$DW$T$60, DW_AT_byte_size(0x01)
$C$DW$1758	.dwtag  DW_TAG_member
	.dwattr $C$DW$1758, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1758, DW_AT_name("all")
	.dwattr $C$DW$1758, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1758, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1758, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1759	.dwtag  DW_TAG_member
	.dwattr $C$DW$1759, DW_AT_type(*$C$DW$T$59)
	.dwattr $C$DW$1759, DW_AT_name("bit")
	.dwattr $C$DW$1759, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1759, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1759, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$60


$C$DW$T$61	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$61, DW_AT_name("GPDTOGGLE_BITS")
	.dwattr $C$DW$T$61, DW_AT_byte_size(0x01)
$C$DW$1760	.dwtag  DW_TAG_member
	.dwattr $C$DW$1760, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1760, DW_AT_name("GPIOD0")
	.dwattr $C$DW$1760, DW_AT_TI_symbol_name("_GPIOD0")
	.dwattr $C$DW$1760, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1760, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1760, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1760, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1761	.dwtag  DW_TAG_member
	.dwattr $C$DW$1761, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1761, DW_AT_name("GPIOD1")
	.dwattr $C$DW$1761, DW_AT_TI_symbol_name("_GPIOD1")
	.dwattr $C$DW$1761, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1761, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1761, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1761, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1762	.dwtag  DW_TAG_member
	.dwattr $C$DW$1762, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1762, DW_AT_name("rsvd1")
	.dwattr $C$DW$1762, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1762, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1762, DW_AT_bit_size(0x03)
	.dwattr $C$DW$1762, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1762, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1763	.dwtag  DW_TAG_member
	.dwattr $C$DW$1763, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1763, DW_AT_name("GPIOD5")
	.dwattr $C$DW$1763, DW_AT_TI_symbol_name("_GPIOD5")
	.dwattr $C$DW$1763, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1763, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1763, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1763, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1764	.dwtag  DW_TAG_member
	.dwattr $C$DW$1764, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1764, DW_AT_name("GPIOD6")
	.dwattr $C$DW$1764, DW_AT_TI_symbol_name("_GPIOD6")
	.dwattr $C$DW$1764, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1764, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1764, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1764, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1765	.dwtag  DW_TAG_member
	.dwattr $C$DW$1765, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1765, DW_AT_name("rsvd2")
	.dwattr $C$DW$1765, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1765, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1765, DW_AT_bit_size(0x09)
	.dwattr $C$DW$1765, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1765, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$61


$C$DW$T$62	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$62, DW_AT_name("GPDTOGGLE_REG")
	.dwattr $C$DW$T$62, DW_AT_byte_size(0x01)
$C$DW$1766	.dwtag  DW_TAG_member
	.dwattr $C$DW$1766, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1766, DW_AT_name("all")
	.dwattr $C$DW$1766, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1766, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1766, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1767	.dwtag  DW_TAG_member
	.dwattr $C$DW$1767, DW_AT_type(*$C$DW$T$61)
	.dwattr $C$DW$1767, DW_AT_name("bit")
	.dwattr $C$DW$1767, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1767, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1767, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$62


$C$DW$T$63	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$63, DW_AT_name("GPECLEAR_BITS")
	.dwattr $C$DW$T$63, DW_AT_byte_size(0x01)
$C$DW$1768	.dwtag  DW_TAG_member
	.dwattr $C$DW$1768, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1768, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1768, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1768, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1768, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1768, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1768, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1769	.dwtag  DW_TAG_member
	.dwattr $C$DW$1769, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1769, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1769, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1769, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1769, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1769, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1769, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1770	.dwtag  DW_TAG_member
	.dwattr $C$DW$1770, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1770, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1770, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1770, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1770, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1770, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1770, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1771	.dwtag  DW_TAG_member
	.dwattr $C$DW$1771, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1771, DW_AT_name("rsvd1")
	.dwattr $C$DW$1771, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1771, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1771, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1771, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1771, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$63


$C$DW$T$64	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$64, DW_AT_name("GPECLEAR_REG")
	.dwattr $C$DW$T$64, DW_AT_byte_size(0x01)
$C$DW$1772	.dwtag  DW_TAG_member
	.dwattr $C$DW$1772, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1772, DW_AT_name("all")
	.dwattr $C$DW$1772, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1772, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1772, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1773	.dwtag  DW_TAG_member
	.dwattr $C$DW$1773, DW_AT_type(*$C$DW$T$63)
	.dwattr $C$DW$1773, DW_AT_name("bit")
	.dwattr $C$DW$1773, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1773, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1773, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$64


$C$DW$T$65	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$65, DW_AT_name("GPEDAT_BITS")
	.dwattr $C$DW$T$65, DW_AT_byte_size(0x01)
$C$DW$1774	.dwtag  DW_TAG_member
	.dwattr $C$DW$1774, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1774, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1774, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1774, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1774, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1774, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1774, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1775	.dwtag  DW_TAG_member
	.dwattr $C$DW$1775, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1775, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1775, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1775, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1775, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1775, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1775, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1776	.dwtag  DW_TAG_member
	.dwattr $C$DW$1776, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1776, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1776, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1776, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1776, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1776, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1776, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1777	.dwtag  DW_TAG_member
	.dwattr $C$DW$1777, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1777, DW_AT_name("rsvd1")
	.dwattr $C$DW$1777, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1777, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1777, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1777, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1777, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$65


$C$DW$T$66	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$66, DW_AT_name("GPEDAT_REG")
	.dwattr $C$DW$T$66, DW_AT_byte_size(0x01)
$C$DW$1778	.dwtag  DW_TAG_member
	.dwattr $C$DW$1778, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1778, DW_AT_name("all")
	.dwattr $C$DW$1778, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1778, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1778, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1779	.dwtag  DW_TAG_member
	.dwattr $C$DW$1779, DW_AT_type(*$C$DW$T$65)
	.dwattr $C$DW$1779, DW_AT_name("bit")
	.dwattr $C$DW$1779, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1779, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1779, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$66


$C$DW$T$67	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$67, DW_AT_name("GPESET_BITS")
	.dwattr $C$DW$T$67, DW_AT_byte_size(0x01)
$C$DW$1780	.dwtag  DW_TAG_member
	.dwattr $C$DW$1780, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1780, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1780, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1780, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1780, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1780, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1780, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1781	.dwtag  DW_TAG_member
	.dwattr $C$DW$1781, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1781, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1781, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1781, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1781, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1781, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1781, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1782	.dwtag  DW_TAG_member
	.dwattr $C$DW$1782, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1782, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1782, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1782, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1782, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1782, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1782, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1783	.dwtag  DW_TAG_member
	.dwattr $C$DW$1783, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1783, DW_AT_name("rsvd1")
	.dwattr $C$DW$1783, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1783, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1783, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1783, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1783, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$67


$C$DW$T$68	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$68, DW_AT_name("GPESET_REG")
	.dwattr $C$DW$T$68, DW_AT_byte_size(0x01)
$C$DW$1784	.dwtag  DW_TAG_member
	.dwattr $C$DW$1784, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1784, DW_AT_name("all")
	.dwattr $C$DW$1784, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1784, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1784, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1785	.dwtag  DW_TAG_member
	.dwattr $C$DW$1785, DW_AT_type(*$C$DW$T$67)
	.dwattr $C$DW$1785, DW_AT_name("bit")
	.dwattr $C$DW$1785, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1785, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1785, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$68


$C$DW$T$69	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$69, DW_AT_name("GPETOGGLE_BITS")
	.dwattr $C$DW$T$69, DW_AT_byte_size(0x01)
$C$DW$1786	.dwtag  DW_TAG_member
	.dwattr $C$DW$1786, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1786, DW_AT_name("GPIOE0")
	.dwattr $C$DW$1786, DW_AT_TI_symbol_name("_GPIOE0")
	.dwattr $C$DW$1786, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1786, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1786, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1786, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1787	.dwtag  DW_TAG_member
	.dwattr $C$DW$1787, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1787, DW_AT_name("GPIOE1")
	.dwattr $C$DW$1787, DW_AT_TI_symbol_name("_GPIOE1")
	.dwattr $C$DW$1787, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1787, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1787, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1787, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1788	.dwtag  DW_TAG_member
	.dwattr $C$DW$1788, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1788, DW_AT_name("GPIOE2")
	.dwattr $C$DW$1788, DW_AT_TI_symbol_name("_GPIOE2")
	.dwattr $C$DW$1788, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1788, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1788, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1788, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1789	.dwtag  DW_TAG_member
	.dwattr $C$DW$1789, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1789, DW_AT_name("rsvd1")
	.dwattr $C$DW$1789, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1789, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1789, DW_AT_bit_size(0x0c)
	.dwattr $C$DW$1789, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1789, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$69


$C$DW$T$70	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$70, DW_AT_name("GPETOGGLE_REG")
	.dwattr $C$DW$T$70, DW_AT_byte_size(0x01)
$C$DW$1790	.dwtag  DW_TAG_member
	.dwattr $C$DW$1790, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1790, DW_AT_name("all")
	.dwattr $C$DW$1790, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1790, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1790, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1791	.dwtag  DW_TAG_member
	.dwattr $C$DW$1791, DW_AT_type(*$C$DW$T$69)
	.dwattr $C$DW$1791, DW_AT_name("bit")
	.dwattr $C$DW$1791, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1791, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1791, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$70


$C$DW$T$71	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$71, DW_AT_name("GPFCLEAR_BITS")
	.dwattr $C$DW$T$71, DW_AT_byte_size(0x01)
$C$DW$1792	.dwtag  DW_TAG_member
	.dwattr $C$DW$1792, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1792, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1792, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1792, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1792, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1792, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1792, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1793	.dwtag  DW_TAG_member
	.dwattr $C$DW$1793, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1793, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1793, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1793, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1793, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1793, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1793, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1794	.dwtag  DW_TAG_member
	.dwattr $C$DW$1794, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1794, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1794, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1794, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1794, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1794, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1794, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1795	.dwtag  DW_TAG_member
	.dwattr $C$DW$1795, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1795, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1795, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1795, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1795, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1795, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1795, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1796	.dwtag  DW_TAG_member
	.dwattr $C$DW$1796, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1796, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1796, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1796, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1796, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1796, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1796, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1797	.dwtag  DW_TAG_member
	.dwattr $C$DW$1797, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1797, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1797, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1797, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1797, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1797, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1797, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1798	.dwtag  DW_TAG_member
	.dwattr $C$DW$1798, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1798, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1798, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1798, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1798, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1798, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1798, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1799	.dwtag  DW_TAG_member
	.dwattr $C$DW$1799, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1799, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1799, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1799, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1799, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1799, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1799, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1800	.dwtag  DW_TAG_member
	.dwattr $C$DW$1800, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1800, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1800, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1800, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1800, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1800, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1800, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1801	.dwtag  DW_TAG_member
	.dwattr $C$DW$1801, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1801, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1801, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1801, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1801, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1801, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1801, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1802	.dwtag  DW_TAG_member
	.dwattr $C$DW$1802, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1802, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1802, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1802, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1802, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1802, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1802, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1803	.dwtag  DW_TAG_member
	.dwattr $C$DW$1803, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1803, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1803, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1803, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1803, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1803, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1803, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1804	.dwtag  DW_TAG_member
	.dwattr $C$DW$1804, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1804, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1804, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1804, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1804, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1804, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1804, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1805	.dwtag  DW_TAG_member
	.dwattr $C$DW$1805, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1805, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1805, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1805, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1805, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1805, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1805, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1806	.dwtag  DW_TAG_member
	.dwattr $C$DW$1806, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1806, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1806, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1806, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1806, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1806, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1806, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1807	.dwtag  DW_TAG_member
	.dwattr $C$DW$1807, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1807, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1807, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1807, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1807, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1807, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1807, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$71


$C$DW$T$72	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$72, DW_AT_name("GPFCLEAR_REG")
	.dwattr $C$DW$T$72, DW_AT_byte_size(0x01)
$C$DW$1808	.dwtag  DW_TAG_member
	.dwattr $C$DW$1808, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1808, DW_AT_name("all")
	.dwattr $C$DW$1808, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1808, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1808, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1809	.dwtag  DW_TAG_member
	.dwattr $C$DW$1809, DW_AT_type(*$C$DW$T$71)
	.dwattr $C$DW$1809, DW_AT_name("bit")
	.dwattr $C$DW$1809, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1809, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1809, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$72


$C$DW$T$73	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$73, DW_AT_name("GPFDAT_BITS")
	.dwattr $C$DW$T$73, DW_AT_byte_size(0x01)
$C$DW$1810	.dwtag  DW_TAG_member
	.dwattr $C$DW$1810, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1810, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1810, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1810, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1810, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1810, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1810, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1811	.dwtag  DW_TAG_member
	.dwattr $C$DW$1811, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1811, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1811, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1811, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1811, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1811, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1811, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1812	.dwtag  DW_TAG_member
	.dwattr $C$DW$1812, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1812, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1812, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1812, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1812, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1812, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1812, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1813	.dwtag  DW_TAG_member
	.dwattr $C$DW$1813, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1813, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1813, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1813, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1813, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1813, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1813, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1814	.dwtag  DW_TAG_member
	.dwattr $C$DW$1814, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1814, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1814, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1814, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1814, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1814, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1814, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1815	.dwtag  DW_TAG_member
	.dwattr $C$DW$1815, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1815, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1815, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1815, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1815, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1815, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1815, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1816	.dwtag  DW_TAG_member
	.dwattr $C$DW$1816, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1816, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1816, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1816, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1816, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1816, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1816, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1817	.dwtag  DW_TAG_member
	.dwattr $C$DW$1817, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1817, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1817, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1817, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1817, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1817, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1817, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1818	.dwtag  DW_TAG_member
	.dwattr $C$DW$1818, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1818, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1818, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1818, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1818, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1818, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1818, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1819	.dwtag  DW_TAG_member
	.dwattr $C$DW$1819, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1819, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1819, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1819, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1819, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1819, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1819, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1820	.dwtag  DW_TAG_member
	.dwattr $C$DW$1820, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1820, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1820, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1820, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1820, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1820, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1820, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1821	.dwtag  DW_TAG_member
	.dwattr $C$DW$1821, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1821, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1821, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1821, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1821, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1821, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1821, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1822	.dwtag  DW_TAG_member
	.dwattr $C$DW$1822, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1822, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1822, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1822, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1822, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1822, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1822, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1823	.dwtag  DW_TAG_member
	.dwattr $C$DW$1823, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1823, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1823, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1823, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1823, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1823, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1823, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1824	.dwtag  DW_TAG_member
	.dwattr $C$DW$1824, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1824, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1824, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1824, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1824, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1824, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1824, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1825	.dwtag  DW_TAG_member
	.dwattr $C$DW$1825, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1825, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1825, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1825, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1825, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1825, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1825, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$73


$C$DW$T$74	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$74, DW_AT_name("GPFDAT_REG")
	.dwattr $C$DW$T$74, DW_AT_byte_size(0x01)
$C$DW$1826	.dwtag  DW_TAG_member
	.dwattr $C$DW$1826, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1826, DW_AT_name("all")
	.dwattr $C$DW$1826, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1826, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1826, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1827	.dwtag  DW_TAG_member
	.dwattr $C$DW$1827, DW_AT_type(*$C$DW$T$73)
	.dwattr $C$DW$1827, DW_AT_name("bit")
	.dwattr $C$DW$1827, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1827, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1827, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$74


$C$DW$T$75	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$75, DW_AT_name("GPFSET_BITS")
	.dwattr $C$DW$T$75, DW_AT_byte_size(0x01)
$C$DW$1828	.dwtag  DW_TAG_member
	.dwattr $C$DW$1828, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1828, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1828, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1828, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1828, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1828, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1828, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1829	.dwtag  DW_TAG_member
	.dwattr $C$DW$1829, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1829, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1829, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1829, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1829, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1829, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1829, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1830	.dwtag  DW_TAG_member
	.dwattr $C$DW$1830, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1830, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1830, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1830, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1830, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1830, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1830, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1831	.dwtag  DW_TAG_member
	.dwattr $C$DW$1831, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1831, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1831, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1831, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1831, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1831, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1831, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1832	.dwtag  DW_TAG_member
	.dwattr $C$DW$1832, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1832, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1832, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1832, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1832, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1832, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1832, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1833	.dwtag  DW_TAG_member
	.dwattr $C$DW$1833, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1833, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1833, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1833, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1833, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1833, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1833, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1834	.dwtag  DW_TAG_member
	.dwattr $C$DW$1834, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1834, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1834, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1834, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1834, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1834, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1834, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1835	.dwtag  DW_TAG_member
	.dwattr $C$DW$1835, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1835, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1835, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1835, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1835, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1835, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1835, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1836	.dwtag  DW_TAG_member
	.dwattr $C$DW$1836, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1836, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1836, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1836, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1836, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1836, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1836, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1837	.dwtag  DW_TAG_member
	.dwattr $C$DW$1837, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1837, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1837, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1837, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1837, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1837, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1837, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1838	.dwtag  DW_TAG_member
	.dwattr $C$DW$1838, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1838, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1838, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1838, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1838, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1838, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1838, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1839	.dwtag  DW_TAG_member
	.dwattr $C$DW$1839, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1839, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1839, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1839, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1839, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1839, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1839, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1840	.dwtag  DW_TAG_member
	.dwattr $C$DW$1840, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1840, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1840, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1840, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1840, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1840, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1840, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1841	.dwtag  DW_TAG_member
	.dwattr $C$DW$1841, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1841, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1841, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1841, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1841, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1841, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1841, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1842	.dwtag  DW_TAG_member
	.dwattr $C$DW$1842, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1842, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1842, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1842, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1842, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1842, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1842, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1843	.dwtag  DW_TAG_member
	.dwattr $C$DW$1843, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1843, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1843, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1843, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1843, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1843, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1843, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$75


$C$DW$T$76	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$76, DW_AT_name("GPFSET_REG")
	.dwattr $C$DW$T$76, DW_AT_byte_size(0x01)
$C$DW$1844	.dwtag  DW_TAG_member
	.dwattr $C$DW$1844, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1844, DW_AT_name("all")
	.dwattr $C$DW$1844, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1844, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1844, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1845	.dwtag  DW_TAG_member
	.dwattr $C$DW$1845, DW_AT_type(*$C$DW$T$75)
	.dwattr $C$DW$1845, DW_AT_name("bit")
	.dwattr $C$DW$1845, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1845, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1845, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$76


$C$DW$T$77	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$77, DW_AT_name("GPFTOGGLE_BITS")
	.dwattr $C$DW$T$77, DW_AT_byte_size(0x01)
$C$DW$1846	.dwtag  DW_TAG_member
	.dwattr $C$DW$1846, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1846, DW_AT_name("GPIOF0")
	.dwattr $C$DW$1846, DW_AT_TI_symbol_name("_GPIOF0")
	.dwattr $C$DW$1846, DW_AT_bit_offset(0x0f)
	.dwattr $C$DW$1846, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1846, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1846, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1847	.dwtag  DW_TAG_member
	.dwattr $C$DW$1847, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1847, DW_AT_name("GPIOF1")
	.dwattr $C$DW$1847, DW_AT_TI_symbol_name("_GPIOF1")
	.dwattr $C$DW$1847, DW_AT_bit_offset(0x0e)
	.dwattr $C$DW$1847, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1847, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1847, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1848	.dwtag  DW_TAG_member
	.dwattr $C$DW$1848, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1848, DW_AT_name("GPIOF2")
	.dwattr $C$DW$1848, DW_AT_TI_symbol_name("_GPIOF2")
	.dwattr $C$DW$1848, DW_AT_bit_offset(0x0d)
	.dwattr $C$DW$1848, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1848, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1848, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1849	.dwtag  DW_TAG_member
	.dwattr $C$DW$1849, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1849, DW_AT_name("GPIOF3")
	.dwattr $C$DW$1849, DW_AT_TI_symbol_name("_GPIOF3")
	.dwattr $C$DW$1849, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1849, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1849, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1849, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1850	.dwtag  DW_TAG_member
	.dwattr $C$DW$1850, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1850, DW_AT_name("GPIOF4")
	.dwattr $C$DW$1850, DW_AT_TI_symbol_name("_GPIOF4")
	.dwattr $C$DW$1850, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1850, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1850, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1850, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1851	.dwtag  DW_TAG_member
	.dwattr $C$DW$1851, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1851, DW_AT_name("GPIOF5")
	.dwattr $C$DW$1851, DW_AT_TI_symbol_name("_GPIOF5")
	.dwattr $C$DW$1851, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1851, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1851, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1851, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1852	.dwtag  DW_TAG_member
	.dwattr $C$DW$1852, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1852, DW_AT_name("GPIOF6")
	.dwattr $C$DW$1852, DW_AT_TI_symbol_name("_GPIOF6")
	.dwattr $C$DW$1852, DW_AT_bit_offset(0x09)
	.dwattr $C$DW$1852, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1852, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1852, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1853	.dwtag  DW_TAG_member
	.dwattr $C$DW$1853, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1853, DW_AT_name("GPIOF7")
	.dwattr $C$DW$1853, DW_AT_TI_symbol_name("_GPIOF7")
	.dwattr $C$DW$1853, DW_AT_bit_offset(0x08)
	.dwattr $C$DW$1853, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1853, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1853, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1854	.dwtag  DW_TAG_member
	.dwattr $C$DW$1854, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1854, DW_AT_name("GPIOF8")
	.dwattr $C$DW$1854, DW_AT_TI_symbol_name("_GPIOF8")
	.dwattr $C$DW$1854, DW_AT_bit_offset(0x07)
	.dwattr $C$DW$1854, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1854, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1854, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1855	.dwtag  DW_TAG_member
	.dwattr $C$DW$1855, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1855, DW_AT_name("GPIOF9")
	.dwattr $C$DW$1855, DW_AT_TI_symbol_name("_GPIOF9")
	.dwattr $C$DW$1855, DW_AT_bit_offset(0x06)
	.dwattr $C$DW$1855, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1855, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1855, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1856	.dwtag  DW_TAG_member
	.dwattr $C$DW$1856, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1856, DW_AT_name("GPIOF10")
	.dwattr $C$DW$1856, DW_AT_TI_symbol_name("_GPIOF10")
	.dwattr $C$DW$1856, DW_AT_bit_offset(0x05)
	.dwattr $C$DW$1856, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1856, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1856, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1857	.dwtag  DW_TAG_member
	.dwattr $C$DW$1857, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1857, DW_AT_name("GPIOF11")
	.dwattr $C$DW$1857, DW_AT_TI_symbol_name("_GPIOF11")
	.dwattr $C$DW$1857, DW_AT_bit_offset(0x04)
	.dwattr $C$DW$1857, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1857, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1857, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1858	.dwtag  DW_TAG_member
	.dwattr $C$DW$1858, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1858, DW_AT_name("GPIOF12")
	.dwattr $C$DW$1858, DW_AT_TI_symbol_name("_GPIOF12")
	.dwattr $C$DW$1858, DW_AT_bit_offset(0x03)
	.dwattr $C$DW$1858, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1858, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1858, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1859	.dwtag  DW_TAG_member
	.dwattr $C$DW$1859, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1859, DW_AT_name("GPIOF13")
	.dwattr $C$DW$1859, DW_AT_TI_symbol_name("_GPIOF13")
	.dwattr $C$DW$1859, DW_AT_bit_offset(0x02)
	.dwattr $C$DW$1859, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1859, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1859, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1860	.dwtag  DW_TAG_member
	.dwattr $C$DW$1860, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1860, DW_AT_name("GPIOF14")
	.dwattr $C$DW$1860, DW_AT_TI_symbol_name("_GPIOF14")
	.dwattr $C$DW$1860, DW_AT_bit_offset(0x01)
	.dwattr $C$DW$1860, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1860, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1860, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1861	.dwtag  DW_TAG_member
	.dwattr $C$DW$1861, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1861, DW_AT_name("GPIOF15")
	.dwattr $C$DW$1861, DW_AT_TI_symbol_name("_GPIOF15")
	.dwattr $C$DW$1861, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1861, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1861, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1861, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$77


$C$DW$T$78	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$78, DW_AT_name("GPFTOGGLE_REG")
	.dwattr $C$DW$T$78, DW_AT_byte_size(0x01)
$C$DW$1862	.dwtag  DW_TAG_member
	.dwattr $C$DW$1862, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1862, DW_AT_name("all")
	.dwattr $C$DW$1862, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1862, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1862, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1863	.dwtag  DW_TAG_member
	.dwattr $C$DW$1863, DW_AT_type(*$C$DW$T$77)
	.dwattr $C$DW$1863, DW_AT_name("bit")
	.dwattr $C$DW$1863, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1863, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1863, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$78


$C$DW$T$79	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$79, DW_AT_name("GPGCLEAR_BITS")
	.dwattr $C$DW$T$79, DW_AT_byte_size(0x01)
$C$DW$1864	.dwtag  DW_TAG_member
	.dwattr $C$DW$1864, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1864, DW_AT_name("rsvd1")
	.dwattr $C$DW$1864, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1864, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1864, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1864, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1864, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1865	.dwtag  DW_TAG_member
	.dwattr $C$DW$1865, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1865, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1865, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1865, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1865, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1865, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1865, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1866	.dwtag  DW_TAG_member
	.dwattr $C$DW$1866, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1866, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1866, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1866, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1866, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1866, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1866, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1867	.dwtag  DW_TAG_member
	.dwattr $C$DW$1867, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1867, DW_AT_name("rsvd2")
	.dwattr $C$DW$1867, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1867, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1867, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1867, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1867, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$79


$C$DW$T$80	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$80, DW_AT_name("GPGCLEAR_REG")
	.dwattr $C$DW$T$80, DW_AT_byte_size(0x01)
$C$DW$1868	.dwtag  DW_TAG_member
	.dwattr $C$DW$1868, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1868, DW_AT_name("all")
	.dwattr $C$DW$1868, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1868, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1868, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1869	.dwtag  DW_TAG_member
	.dwattr $C$DW$1869, DW_AT_type(*$C$DW$T$79)
	.dwattr $C$DW$1869, DW_AT_name("bit")
	.dwattr $C$DW$1869, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1869, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1869, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$80


$C$DW$T$81	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$81, DW_AT_name("GPGDAT_BITS")
	.dwattr $C$DW$T$81, DW_AT_byte_size(0x01)
$C$DW$1870	.dwtag  DW_TAG_member
	.dwattr $C$DW$1870, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1870, DW_AT_name("rsvd1")
	.dwattr $C$DW$1870, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1870, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1870, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1870, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1870, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1871	.dwtag  DW_TAG_member
	.dwattr $C$DW$1871, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1871, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1871, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1871, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1871, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1871, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1871, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1872	.dwtag  DW_TAG_member
	.dwattr $C$DW$1872, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1872, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1872, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1872, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1872, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1872, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1872, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1873	.dwtag  DW_TAG_member
	.dwattr $C$DW$1873, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1873, DW_AT_name("rsvd2")
	.dwattr $C$DW$1873, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1873, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1873, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1873, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1873, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$81


$C$DW$T$82	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$82, DW_AT_name("GPGDAT_REG")
	.dwattr $C$DW$T$82, DW_AT_byte_size(0x01)
$C$DW$1874	.dwtag  DW_TAG_member
	.dwattr $C$DW$1874, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1874, DW_AT_name("all")
	.dwattr $C$DW$1874, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1874, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1874, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1875	.dwtag  DW_TAG_member
	.dwattr $C$DW$1875, DW_AT_type(*$C$DW$T$81)
	.dwattr $C$DW$1875, DW_AT_name("bit")
	.dwattr $C$DW$1875, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1875, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1875, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$82


$C$DW$T$83	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$83, DW_AT_name("GPGSET_BITS")
	.dwattr $C$DW$T$83, DW_AT_byte_size(0x01)
$C$DW$1876	.dwtag  DW_TAG_member
	.dwattr $C$DW$1876, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1876, DW_AT_name("rsvd1")
	.dwattr $C$DW$1876, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1876, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1876, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1876, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1876, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1877	.dwtag  DW_TAG_member
	.dwattr $C$DW$1877, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1877, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1877, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1877, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1877, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1877, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1877, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1878	.dwtag  DW_TAG_member
	.dwattr $C$DW$1878, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1878, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1878, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1878, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1878, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1878, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1878, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1879	.dwtag  DW_TAG_member
	.dwattr $C$DW$1879, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1879, DW_AT_name("rsvd2")
	.dwattr $C$DW$1879, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1879, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1879, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1879, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1879, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$83


$C$DW$T$84	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$84, DW_AT_name("GPGSET_REG")
	.dwattr $C$DW$T$84, DW_AT_byte_size(0x01)
$C$DW$1880	.dwtag  DW_TAG_member
	.dwattr $C$DW$1880, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1880, DW_AT_name("all")
	.dwattr $C$DW$1880, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1880, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1880, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1881	.dwtag  DW_TAG_member
	.dwattr $C$DW$1881, DW_AT_type(*$C$DW$T$83)
	.dwattr $C$DW$1881, DW_AT_name("bit")
	.dwattr $C$DW$1881, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1881, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1881, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$84


$C$DW$T$85	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$85, DW_AT_name("GPGTOGGLE_BITS")
	.dwattr $C$DW$T$85, DW_AT_byte_size(0x01)
$C$DW$1882	.dwtag  DW_TAG_member
	.dwattr $C$DW$1882, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1882, DW_AT_name("rsvd1")
	.dwattr $C$DW$1882, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1882, DW_AT_bit_offset(0x0c)
	.dwattr $C$DW$1882, DW_AT_bit_size(0x04)
	.dwattr $C$DW$1882, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1882, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1883	.dwtag  DW_TAG_member
	.dwattr $C$DW$1883, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1883, DW_AT_name("GPIOG4")
	.dwattr $C$DW$1883, DW_AT_TI_symbol_name("_GPIOG4")
	.dwattr $C$DW$1883, DW_AT_bit_offset(0x0b)
	.dwattr $C$DW$1883, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1883, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1883, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1884	.dwtag  DW_TAG_member
	.dwattr $C$DW$1884, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1884, DW_AT_name("GPIOG5")
	.dwattr $C$DW$1884, DW_AT_TI_symbol_name("_GPIOG5")
	.dwattr $C$DW$1884, DW_AT_bit_offset(0x0a)
	.dwattr $C$DW$1884, DW_AT_bit_size(0x01)
	.dwattr $C$DW$1884, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1884, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1885	.dwtag  DW_TAG_member
	.dwattr $C$DW$1885, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1885, DW_AT_name("rsvd2")
	.dwattr $C$DW$1885, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1885, DW_AT_bit_offset(0x00)
	.dwattr $C$DW$1885, DW_AT_bit_size(0x0a)
	.dwattr $C$DW$1885, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1885, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$85


$C$DW$T$86	.dwtag  DW_TAG_union_type
	.dwattr $C$DW$T$86, DW_AT_name("GPGTOGGLE_REG")
	.dwattr $C$DW$T$86, DW_AT_byte_size(0x01)
$C$DW$1886	.dwtag  DW_TAG_member
	.dwattr $C$DW$1886, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1886, DW_AT_name("all")
	.dwattr $C$DW$1886, DW_AT_TI_symbol_name("_all")
	.dwattr $C$DW$1886, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1886, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1887	.dwtag  DW_TAG_member
	.dwattr $C$DW$1887, DW_AT_type(*$C$DW$T$85)
	.dwattr $C$DW$1887, DW_AT_name("bit")
	.dwattr $C$DW$1887, DW_AT_TI_symbol_name("_bit")
	.dwattr $C$DW$1887, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1887, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$86


$C$DW$T$88	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$88, DW_AT_name("GPIO_DATA_REGS")
	.dwattr $C$DW$T$88, DW_AT_byte_size(0x20)
$C$DW$1888	.dwtag  DW_TAG_member
	.dwattr $C$DW$1888, DW_AT_type(*$C$DW$T$42)
	.dwattr $C$DW$1888, DW_AT_name("GPADAT")
	.dwattr $C$DW$1888, DW_AT_TI_symbol_name("_GPADAT")
	.dwattr $C$DW$1888, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1888, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1889	.dwtag  DW_TAG_member
	.dwattr $C$DW$1889, DW_AT_type(*$C$DW$T$44)
	.dwattr $C$DW$1889, DW_AT_name("GPASET")
	.dwattr $C$DW$1889, DW_AT_TI_symbol_name("_GPASET")
	.dwattr $C$DW$1889, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1889, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1890	.dwtag  DW_TAG_member
	.dwattr $C$DW$1890, DW_AT_type(*$C$DW$T$40)
	.dwattr $C$DW$1890, DW_AT_name("GPACLEAR")
	.dwattr $C$DW$1890, DW_AT_TI_symbol_name("_GPACLEAR")
	.dwattr $C$DW$1890, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1890, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1891	.dwtag  DW_TAG_member
	.dwattr $C$DW$1891, DW_AT_type(*$C$DW$T$46)
	.dwattr $C$DW$1891, DW_AT_name("GPATOGGLE")
	.dwattr $C$DW$1891, DW_AT_TI_symbol_name("_GPATOGGLE")
	.dwattr $C$DW$1891, DW_AT_data_member_location[DW_OP_plus_uconst 0x3]
	.dwattr $C$DW$1891, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1892	.dwtag  DW_TAG_member
	.dwattr $C$DW$1892, DW_AT_type(*$C$DW$T$50)
	.dwattr $C$DW$1892, DW_AT_name("GPBDAT")
	.dwattr $C$DW$1892, DW_AT_TI_symbol_name("_GPBDAT")
	.dwattr $C$DW$1892, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1892, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1893	.dwtag  DW_TAG_member
	.dwattr $C$DW$1893, DW_AT_type(*$C$DW$T$52)
	.dwattr $C$DW$1893, DW_AT_name("GPBSET")
	.dwattr $C$DW$1893, DW_AT_TI_symbol_name("_GPBSET")
	.dwattr $C$DW$1893, DW_AT_data_member_location[DW_OP_plus_uconst 0x5]
	.dwattr $C$DW$1893, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1894	.dwtag  DW_TAG_member
	.dwattr $C$DW$1894, DW_AT_type(*$C$DW$T$48)
	.dwattr $C$DW$1894, DW_AT_name("GPBCLEAR")
	.dwattr $C$DW$1894, DW_AT_TI_symbol_name("_GPBCLEAR")
	.dwattr $C$DW$1894, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1894, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1895	.dwtag  DW_TAG_member
	.dwattr $C$DW$1895, DW_AT_type(*$C$DW$T$54)
	.dwattr $C$DW$1895, DW_AT_name("GPBTOGGLE")
	.dwattr $C$DW$1895, DW_AT_TI_symbol_name("_GPBTOGGLE")
	.dwattr $C$DW$1895, DW_AT_data_member_location[DW_OP_plus_uconst 0x7]
	.dwattr $C$DW$1895, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1896	.dwtag  DW_TAG_member
	.dwattr $C$DW$1896, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1896, DW_AT_name("rsvd1")
	.dwattr $C$DW$1896, DW_AT_TI_symbol_name("_rsvd1")
	.dwattr $C$DW$1896, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
	.dwattr $C$DW$1896, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1897	.dwtag  DW_TAG_member
	.dwattr $C$DW$1897, DW_AT_type(*$C$DW$T$58)
	.dwattr $C$DW$1897, DW_AT_name("GPDDAT")
	.dwattr $C$DW$1897, DW_AT_TI_symbol_name("_GPDDAT")
	.dwattr $C$DW$1897, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
	.dwattr $C$DW$1897, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1898	.dwtag  DW_TAG_member
	.dwattr $C$DW$1898, DW_AT_type(*$C$DW$T$60)
	.dwattr $C$DW$1898, DW_AT_name("GPDSET")
	.dwattr $C$DW$1898, DW_AT_TI_symbol_name("_GPDSET")
	.dwattr $C$DW$1898, DW_AT_data_member_location[DW_OP_plus_uconst 0xd]
	.dwattr $C$DW$1898, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1899	.dwtag  DW_TAG_member
	.dwattr $C$DW$1899, DW_AT_type(*$C$DW$T$56)
	.dwattr $C$DW$1899, DW_AT_name("GPDCLEAR")
	.dwattr $C$DW$1899, DW_AT_TI_symbol_name("_GPDCLEAR")
	.dwattr $C$DW$1899, DW_AT_data_member_location[DW_OP_plus_uconst 0xe]
	.dwattr $C$DW$1899, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1900	.dwtag  DW_TAG_member
	.dwattr $C$DW$1900, DW_AT_type(*$C$DW$T$62)
	.dwattr $C$DW$1900, DW_AT_name("GPDTOGGLE")
	.dwattr $C$DW$1900, DW_AT_TI_symbol_name("_GPDTOGGLE")
	.dwattr $C$DW$1900, DW_AT_data_member_location[DW_OP_plus_uconst 0xf]
	.dwattr $C$DW$1900, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1901	.dwtag  DW_TAG_member
	.dwattr $C$DW$1901, DW_AT_type(*$C$DW$T$66)
	.dwattr $C$DW$1901, DW_AT_name("GPEDAT")
	.dwattr $C$DW$1901, DW_AT_TI_symbol_name("_GPEDAT")
	.dwattr $C$DW$1901, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1901, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1902	.dwtag  DW_TAG_member
	.dwattr $C$DW$1902, DW_AT_type(*$C$DW$T$68)
	.dwattr $C$DW$1902, DW_AT_name("GPESET")
	.dwattr $C$DW$1902, DW_AT_TI_symbol_name("_GPESET")
	.dwattr $C$DW$1902, DW_AT_data_member_location[DW_OP_plus_uconst 0x11]
	.dwattr $C$DW$1902, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1903	.dwtag  DW_TAG_member
	.dwattr $C$DW$1903, DW_AT_type(*$C$DW$T$64)
	.dwattr $C$DW$1903, DW_AT_name("GPECLEAR")
	.dwattr $C$DW$1903, DW_AT_TI_symbol_name("_GPECLEAR")
	.dwattr $C$DW$1903, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
	.dwattr $C$DW$1903, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1904	.dwtag  DW_TAG_member
	.dwattr $C$DW$1904, DW_AT_type(*$C$DW$T$70)
	.dwattr $C$DW$1904, DW_AT_name("GPETOGGLE")
	.dwattr $C$DW$1904, DW_AT_TI_symbol_name("_GPETOGGLE")
	.dwattr $C$DW$1904, DW_AT_data_member_location[DW_OP_plus_uconst 0x13]
	.dwattr $C$DW$1904, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1905	.dwtag  DW_TAG_member
	.dwattr $C$DW$1905, DW_AT_type(*$C$DW$T$74)
	.dwattr $C$DW$1905, DW_AT_name("GPFDAT")
	.dwattr $C$DW$1905, DW_AT_TI_symbol_name("_GPFDAT")
	.dwattr $C$DW$1905, DW_AT_data_member_location[DW_OP_plus_uconst 0x14]
	.dwattr $C$DW$1905, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1906	.dwtag  DW_TAG_member
	.dwattr $C$DW$1906, DW_AT_type(*$C$DW$T$76)
	.dwattr $C$DW$1906, DW_AT_name("GPFSET")
	.dwattr $C$DW$1906, DW_AT_TI_symbol_name("_GPFSET")
	.dwattr $C$DW$1906, DW_AT_data_member_location[DW_OP_plus_uconst 0x15]
	.dwattr $C$DW$1906, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1907	.dwtag  DW_TAG_member
	.dwattr $C$DW$1907, DW_AT_type(*$C$DW$T$72)
	.dwattr $C$DW$1907, DW_AT_name("GPFCLEAR")
	.dwattr $C$DW$1907, DW_AT_TI_symbol_name("_GPFCLEAR")
	.dwattr $C$DW$1907, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
	.dwattr $C$DW$1907, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1908	.dwtag  DW_TAG_member
	.dwattr $C$DW$1908, DW_AT_type(*$C$DW$T$78)
	.dwattr $C$DW$1908, DW_AT_name("GPFTOGGLE")
	.dwattr $C$DW$1908, DW_AT_TI_symbol_name("_GPFTOGGLE")
	.dwattr $C$DW$1908, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
	.dwattr $C$DW$1908, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1909	.dwtag  DW_TAG_member
	.dwattr $C$DW$1909, DW_AT_type(*$C$DW$T$82)
	.dwattr $C$DW$1909, DW_AT_name("GPGDAT")
	.dwattr $C$DW$1909, DW_AT_TI_symbol_name("_GPGDAT")
	.dwattr $C$DW$1909, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
	.dwattr $C$DW$1909, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1910	.dwtag  DW_TAG_member
	.dwattr $C$DW$1910, DW_AT_type(*$C$DW$T$84)
	.dwattr $C$DW$1910, DW_AT_name("GPGSET")
	.dwattr $C$DW$1910, DW_AT_TI_symbol_name("_GPGSET")
	.dwattr $C$DW$1910, DW_AT_data_member_location[DW_OP_plus_uconst 0x19]
	.dwattr $C$DW$1910, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1911	.dwtag  DW_TAG_member
	.dwattr $C$DW$1911, DW_AT_type(*$C$DW$T$80)
	.dwattr $C$DW$1911, DW_AT_name("GPGCLEAR")
	.dwattr $C$DW$1911, DW_AT_TI_symbol_name("_GPGCLEAR")
	.dwattr $C$DW$1911, DW_AT_data_member_location[DW_OP_plus_uconst 0x1a]
	.dwattr $C$DW$1911, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1912	.dwtag  DW_TAG_member
	.dwattr $C$DW$1912, DW_AT_type(*$C$DW$T$86)
	.dwattr $C$DW$1912, DW_AT_name("GPGTOGGLE")
	.dwattr $C$DW$1912, DW_AT_TI_symbol_name("_GPGTOGGLE")
	.dwattr $C$DW$1912, DW_AT_data_member_location[DW_OP_plus_uconst 0x1b]
	.dwattr $C$DW$1912, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1913	.dwtag  DW_TAG_member
	.dwattr $C$DW$1913, DW_AT_type(*$C$DW$T$87)
	.dwattr $C$DW$1913, DW_AT_name("rsvd2")
	.dwattr $C$DW$1913, DW_AT_TI_symbol_name("_rsvd2")
	.dwattr $C$DW$1913, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
	.dwattr $C$DW$1913, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$88

$C$DW$1914	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1914, DW_AT_type(*$C$DW$T$88)

$C$DW$T$136	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$136, DW_AT_type(*$C$DW$1914)


$C$DW$T$89	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$89, DW_AT_name("LIM_CONF")
	.dwattr $C$DW$T$89, DW_AT_byte_size(0x08)
$C$DW$1915	.dwtag  DW_TAG_member
	.dwattr $C$DW$1915, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1915, DW_AT_name("what")
	.dwattr $C$DW$1915, DW_AT_TI_symbol_name("_what")
	.dwattr $C$DW$1915, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1915, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1916	.dwtag  DW_TAG_member
	.dwattr $C$DW$1916, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1916, DW_AT_name("ch")
	.dwattr $C$DW$1916, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1916, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
	.dwattr $C$DW$1916, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1917	.dwtag  DW_TAG_member
	.dwattr $C$DW$1917, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1917, DW_AT_name("limit")
	.dwattr $C$DW$1917, DW_AT_TI_symbol_name("_limit")
	.dwattr $C$DW$1917, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1917, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1918	.dwtag  DW_TAG_member
	.dwattr $C$DW$1918, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1918, DW_AT_name("limits")
	.dwattr $C$DW$1918, DW_AT_TI_symbol_name("_limits")
	.dwattr $C$DW$1918, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
	.dwattr $C$DW$1918, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1919	.dwtag  DW_TAG_member
	.dwattr $C$DW$1919, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1919, DW_AT_name("limitr")
	.dwattr $C$DW$1919, DW_AT_TI_symbol_name("_limitr")
	.dwattr $C$DW$1919, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
	.dwattr $C$DW$1919, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$89

$C$DW$T$101	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$101, DW_AT_name("limconf_t")
	.dwattr $C$DW$T$101, DW_AT_type(*$C$DW$T$89)
	.dwattr $C$DW$T$101, DW_AT_language(DW_LANG_C)


$C$DW$T$102	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$102, DW_AT_type(*$C$DW$T$101)
	.dwattr $C$DW$T$102, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$102, DW_AT_byte_size(0x20)
$C$DW$1920	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1920, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$102


$C$DW$T$104	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$104, DW_AT_name("PROD_CONF")
	.dwattr $C$DW$T$104, DW_AT_byte_size(0xc78)
$C$DW$1921	.dwtag  DW_TAG_member
	.dwattr $C$DW$1921, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1921, DW_AT_name("usn")
	.dwattr $C$DW$1921, DW_AT_TI_symbol_name("_usn")
	.dwattr $C$DW$1921, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1921, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1922	.dwtag  DW_TAG_member
	.dwattr $C$DW$1922, DW_AT_type(*$C$DW$T$92)
	.dwattr $C$DW$1922, DW_AT_name("uname")
	.dwattr $C$DW$1922, DW_AT_TI_symbol_name("_uname")
	.dwattr $C$DW$1922, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
	.dwattr $C$DW$1922, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1923	.dwtag  DW_TAG_member
	.dwattr $C$DW$1923, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1923, DW_AT_name("rxdir")
	.dwattr $C$DW$1923, DW_AT_TI_symbol_name("_rxdir")
	.dwattr $C$DW$1923, DW_AT_data_member_location[DW_OP_plus_uconst 0x22]
	.dwattr $C$DW$1923, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1924	.dwtag  DW_TAG_member
	.dwattr $C$DW$1924, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1924, DW_AT_name("baud")
	.dwattr $C$DW$1924, DW_AT_TI_symbol_name("_baud")
	.dwattr $C$DW$1924, DW_AT_data_member_location[DW_OP_plus_uconst 0x23]
	.dwattr $C$DW$1924, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1925	.dwtag  DW_TAG_member
	.dwattr $C$DW$1925, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1925, DW_AT_name("tagiden")
	.dwattr $C$DW$1925, DW_AT_TI_symbol_name("_tagiden")
	.dwattr $C$DW$1925, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1925, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1926	.dwtag  DW_TAG_member
	.dwattr $C$DW$1926, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1926, DW_AT_name("tarepersist")
	.dwattr $C$DW$1926, DW_AT_TI_symbol_name("_tarepersist")
	.dwattr $C$DW$1926, DW_AT_data_member_location[DW_OP_plus_uconst 0x25]
	.dwattr $C$DW$1926, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1927	.dwtag  DW_TAG_member
	.dwattr $C$DW$1927, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1927, DW_AT_name("filter")
	.dwattr $C$DW$1927, DW_AT_TI_symbol_name("_filter")
	.dwattr $C$DW$1927, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1927, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1928	.dwtag  DW_TAG_member
	.dwattr $C$DW$1928, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1928, DW_AT_name("diffwin")
	.dwattr $C$DW$1928, DW_AT_TI_symbol_name("_diffwin")
	.dwattr $C$DW$1928, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1928, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1929	.dwtag  DW_TAG_member
	.dwattr $C$DW$1929, DW_AT_type(*$C$DW$T$94)
	.dwattr $C$DW$1929, DW_AT_name("ch")
	.dwattr $C$DW$1929, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1929, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1929, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1930	.dwtag  DW_TAG_member
	.dwattr $C$DW$1930, DW_AT_type(*$C$DW$T$96)
	.dwattr $C$DW$1930, DW_AT_name("sensor")
	.dwattr $C$DW$1930, DW_AT_TI_symbol_name("_sensor")
	.dwattr $C$DW$1930, DW_AT_data_member_location[DW_OP_plus_uconst 0x34]
	.dwattr $C$DW$1930, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1931	.dwtag  DW_TAG_member
	.dwattr $C$DW$1931, DW_AT_type(*$C$DW$T$98)
	.dwattr $C$DW$1931, DW_AT_name("vfd")
	.dwattr $C$DW$1931, DW_AT_TI_symbol_name("_vfd")
	.dwattr $C$DW$1931, DW_AT_data_member_location[DW_OP_plus_uconst 0xc14]
	.dwattr $C$DW$1931, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1932	.dwtag  DW_TAG_member
	.dwattr $C$DW$1932, DW_AT_type(*$C$DW$T$100)
	.dwattr $C$DW$1932, DW_AT_name("dac")
	.dwattr $C$DW$1932, DW_AT_TI_symbol_name("_dac")
	.dwattr $C$DW$1932, DW_AT_data_member_location[DW_OP_plus_uconst 0xc20]
	.dwattr $C$DW$1932, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1933	.dwtag  DW_TAG_member
	.dwattr $C$DW$1933, DW_AT_type(*$C$DW$T$102)
	.dwattr $C$DW$1933, DW_AT_name("lim")
	.dwattr $C$DW$1933, DW_AT_TI_symbol_name("_lim")
	.dwattr $C$DW$1933, DW_AT_data_member_location[DW_OP_plus_uconst 0xc50]
	.dwattr $C$DW$1933, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1934	.dwtag  DW_TAG_member
	.dwattr $C$DW$1934, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$1934, DW_AT_name("velfilter")
	.dwattr $C$DW$1934, DW_AT_TI_symbol_name("_velfilter")
	.dwattr $C$DW$1934, DW_AT_data_member_location[DW_OP_plus_uconst 0xc70]
	.dwattr $C$DW$1934, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1935	.dwtag  DW_TAG_member
	.dwattr $C$DW$1935, DW_AT_type(*$C$DW$T$103)
	.dwattr $C$DW$1935, DW_AT_name("cntperin")
	.dwattr $C$DW$1935, DW_AT_TI_symbol_name("_cntperin")
	.dwattr $C$DW$1935, DW_AT_data_member_location[DW_OP_plus_uconst 0xc72]
	.dwattr $C$DW$1935, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1936	.dwtag  DW_TAG_member
	.dwattr $C$DW$1936, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1936, DW_AT_name("magic")
	.dwattr $C$DW$1936, DW_AT_TI_symbol_name("_magic")
	.dwattr $C$DW$1936, DW_AT_data_member_location[DW_OP_plus_uconst 0xc76]
	.dwattr $C$DW$1936, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$104

$C$DW$T$142	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$142, DW_AT_name("pconf_t")
	.dwattr $C$DW$T$142, DW_AT_type(*$C$DW$T$104)
	.dwattr $C$DW$T$142, DW_AT_language(DW_LANG_C)

$C$DW$1937	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1937, DW_AT_type(*$C$DW$T$142)

$C$DW$T$143	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$143, DW_AT_type(*$C$DW$1937)


$C$DW$T$109	.dwtag  DW_TAG_structure_type
	.dwattr $C$DW$T$109, DW_AT_name("SENSOR_CONF")
	.dwattr $C$DW$T$109, DW_AT_byte_size(0x98)
$C$DW$1938	.dwtag  DW_TAG_member
	.dwattr $C$DW$1938, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1938, DW_AT_name("ssn")
	.dwattr $C$DW$1938, DW_AT_TI_symbol_name("_ssn")
	.dwattr $C$DW$1938, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
	.dwattr $C$DW$1938, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1939	.dwtag  DW_TAG_member
	.dwattr $C$DW$1939, DW_AT_type(*$C$DW$T$105)
	.dwattr $C$DW$1939, DW_AT_name("slbl")
	.dwattr $C$DW$1939, DW_AT_TI_symbol_name("_slbl")
	.dwattr $C$DW$1939, DW_AT_data_member_location[DW_OP_plus_uconst 0x10]
	.dwattr $C$DW$1939, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1940	.dwtag  DW_TAG_member
	.dwattr $C$DW$1940, DW_AT_type(*$C$DW$T$15)
	.dwattr $C$DW$1940, DW_AT_name("tagid")
	.dwattr $C$DW$1940, DW_AT_TI_symbol_name("_tagid")
	.dwattr $C$DW$1940, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
	.dwattr $C$DW$1940, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1941	.dwtag  DW_TAG_member
	.dwattr $C$DW$1941, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1941, DW_AT_name("method")
	.dwattr $C$DW$1941, DW_AT_TI_symbol_name("_method")
	.dwattr $C$DW$1941, DW_AT_data_member_location[DW_OP_plus_uconst 0x24]
	.dwattr $C$DW$1941, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1942	.dwtag  DW_TAG_member
	.dwattr $C$DW$1942, DW_AT_type(*$C$DW$T$90)
	.dwattr $C$DW$1942, DW_AT_name("date")
	.dwattr $C$DW$1942, DW_AT_TI_symbol_name("_date")
	.dwattr $C$DW$1942, DW_AT_data_member_location[DW_OP_plus_uconst 0x26]
	.dwattr $C$DW$1942, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1943	.dwtag  DW_TAG_member
	.dwattr $C$DW$1943, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1943, DW_AT_name("range")
	.dwattr $C$DW$1943, DW_AT_TI_symbol_name("_range")
	.dwattr $C$DW$1943, DW_AT_data_member_location[DW_OP_plus_uconst 0x28]
	.dwattr $C$DW$1943, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1944	.dwtag  DW_TAG_member
	.dwattr $C$DW$1944, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1944, DW_AT_name("unit")
	.dwattr $C$DW$1944, DW_AT_TI_symbol_name("_unit")
	.dwattr $C$DW$1944, DW_AT_data_member_location[DW_OP_plus_uconst 0x2a]
	.dwattr $C$DW$1944, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1945	.dwtag  DW_TAG_member
	.dwattr $C$DW$1945, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1945, DW_AT_name("ounit")
	.dwattr $C$DW$1945, DW_AT_TI_symbol_name("_ounit")
	.dwattr $C$DW$1945, DW_AT_data_member_location[DW_OP_plus_uconst 0x2b]
	.dwattr $C$DW$1945, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1946	.dwtag  DW_TAG_member
	.dwattr $C$DW$1946, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1946, DW_AT_name("ufactor")
	.dwattr $C$DW$1946, DW_AT_TI_symbol_name("_ufactor")
	.dwattr $C$DW$1946, DW_AT_data_member_location[DW_OP_plus_uconst 0x2c]
	.dwattr $C$DW$1946, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1947	.dwtag  DW_TAG_member
	.dwattr $C$DW$1947, DW_AT_type(*$C$DW$T$10)
	.dwattr $C$DW$1947, DW_AT_name("points")
	.dwattr $C$DW$1947, DW_AT_TI_symbol_name("_points")
	.dwattr $C$DW$1947, DW_AT_data_member_location[DW_OP_plus_uconst 0x2e]
	.dwattr $C$DW$1947, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1948	.dwtag  DW_TAG_member
	.dwattr $C$DW$1948, DW_AT_type(*$C$DW$T$106)
	.dwattr $C$DW$1948, DW_AT_name("mass")
	.dwattr $C$DW$1948, DW_AT_TI_symbol_name("_mass")
	.dwattr $C$DW$1948, DW_AT_data_member_location[DW_OP_plus_uconst 0x30]
	.dwattr $C$DW$1948, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1949	.dwtag  DW_TAG_member
	.dwattr $C$DW$1949, DW_AT_type(*$C$DW$T$107)
	.dwattr $C$DW$1949, DW_AT_name("adc")
	.dwattr $C$DW$1949, DW_AT_TI_symbol_name("_adc")
	.dwattr $C$DW$1949, DW_AT_data_member_location[DW_OP_plus_uconst 0x48]
	.dwattr $C$DW$1949, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1950	.dwtag  DW_TAG_member
	.dwattr $C$DW$1950, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1950, DW_AT_name("slope")
	.dwattr $C$DW$1950, DW_AT_TI_symbol_name("_slope")
	.dwattr $C$DW$1950, DW_AT_data_member_location[DW_OP_plus_uconst 0x60]
	.dwattr $C$DW$1950, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1951	.dwtag  DW_TAG_member
	.dwattr $C$DW$1951, DW_AT_type(*$C$DW$T$108)
	.dwattr $C$DW$1951, DW_AT_name("intercept")
	.dwattr $C$DW$1951, DW_AT_TI_symbol_name("_intercept")
	.dwattr $C$DW$1951, DW_AT_data_member_location[DW_OP_plus_uconst 0x76]
	.dwattr $C$DW$1951, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1952	.dwtag  DW_TAG_member
	.dwattr $C$DW$1952, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1952, DW_AT_name("shunt")
	.dwattr $C$DW$1952, DW_AT_TI_symbol_name("_shunt")
	.dwattr $C$DW$1952, DW_AT_data_member_location[DW_OP_plus_uconst 0x8c]
	.dwattr $C$DW$1952, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1953	.dwtag  DW_TAG_member
	.dwattr $C$DW$1953, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1953, DW_AT_name("base")
	.dwattr $C$DW$1953, DW_AT_TI_symbol_name("_base")
	.dwattr $C$DW$1953, DW_AT_data_member_location[DW_OP_plus_uconst 0x8e]
	.dwattr $C$DW$1953, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1954	.dwtag  DW_TAG_member
	.dwattr $C$DW$1954, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1954, DW_AT_name("tare")
	.dwattr $C$DW$1954, DW_AT_TI_symbol_name("_tare")
	.dwattr $C$DW$1954, DW_AT_data_member_location[DW_OP_plus_uconst 0x90]
	.dwattr $C$DW$1954, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1955	.dwtag  DW_TAG_member
	.dwattr $C$DW$1955, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1955, DW_AT_name("dacgain")
	.dwattr $C$DW$1955, DW_AT_TI_symbol_name("_dacgain")
	.dwattr $C$DW$1955, DW_AT_data_member_location[DW_OP_plus_uconst 0x92]
	.dwattr $C$DW$1955, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1956	.dwtag  DW_TAG_member
	.dwattr $C$DW$1956, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$1956, DW_AT_name("dacoff")
	.dwattr $C$DW$1956, DW_AT_TI_symbol_name("_dacoff")
	.dwattr $C$DW$1956, DW_AT_data_member_location[DW_OP_plus_uconst 0x94]
	.dwattr $C$DW$1956, DW_AT_accessibility(DW_ACCESS_public)

$C$DW$1957	.dwtag  DW_TAG_member
	.dwattr $C$DW$1957, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$1957, DW_AT_name("ch")
	.dwattr $C$DW$1957, DW_AT_TI_symbol_name("_ch")
	.dwattr $C$DW$1957, DW_AT_data_member_location[DW_OP_plus_uconst 0x96]
	.dwattr $C$DW$1957, DW_AT_accessibility(DW_ACCESS_public)

	.dwendtag $C$DW$T$109

$C$DW$T$95	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$95, DW_AT_name("sconf_t")
	.dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$109)
	.dwattr $C$DW$T$95, DW_AT_language(DW_LANG_C)


$C$DW$T$96	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$96, DW_AT_type(*$C$DW$T$95)
	.dwattr $C$DW$T$96, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$96, DW_AT_byte_size(0xbe0)
$C$DW$1958	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1958, DW_AT_upper_bound(0x13)

	.dwendtag $C$DW$T$96

$C$DW$T$2	.dwtag  DW_TAG_unspecified_type
	.dwattr $C$DW$T$2, DW_AT_name("void")

$C$DW$T$3	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$3, DW_AT_type(*$C$DW$T$2)
	.dwattr $C$DW$T$3, DW_AT_address_class(0x20)

$C$DW$1959	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1959, DW_AT_type(*$C$DW$T$2)

$C$DW$T$147	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$147, DW_AT_type(*$C$DW$1959)

$C$DW$T$148	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$148, DW_AT_type(*$C$DW$T$147)
	.dwattr $C$DW$T$148, DW_AT_address_class(0x20)


$C$DW$T$151	.dwtag  DW_TAG_subroutine_type
	.dwattr $C$DW$T$151, DW_AT_language(DW_LANG_C)
	.dwendtag $C$DW$T$151

$C$DW$T$152	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$152, DW_AT_type(*$C$DW$T$151)
	.dwattr $C$DW$T$152, DW_AT_address_class(0x20)

$C$DW$T$4	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
	.dwattr $C$DW$T$4, DW_AT_name("bool")
	.dwattr $C$DW$T$4, DW_AT_byte_size(0x01)

$C$DW$T$5	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$5, DW_AT_name("signed char")
	.dwattr $C$DW$T$5, DW_AT_byte_size(0x01)

$C$DW$T$6	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
	.dwattr $C$DW$T$6, DW_AT_name("unsigned char")
	.dwattr $C$DW$T$6, DW_AT_byte_size(0x01)

$C$DW$T$19	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$19, DW_AT_name("BYTE")
	.dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$6)
	.dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)


$C$DW$T$22	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$22, DW_AT_byte_size(0x200)
$C$DW$1960	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1960, DW_AT_upper_bound(0x1ff)

	.dwendtag $C$DW$T$22

$C$DW$T$26	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$19)
	.dwattr $C$DW$T$26, DW_AT_address_class(0x20)

$C$DW$1961	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1961, DW_AT_type(*$C$DW$T$6)

$C$DW$T$174	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$174, DW_AT_type(*$C$DW$1961)


$C$DW$T$175	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$175, DW_AT_type(*$C$DW$T$174)
	.dwattr $C$DW$T$175, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$175, DW_AT_byte_size(0x101)
$C$DW$1962	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1962, DW_AT_upper_bound(0x100)

	.dwendtag $C$DW$T$175

$C$DW$T$7	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
	.dwattr $C$DW$T$7, DW_AT_name("wchar_t")
	.dwattr $C$DW$T$7, DW_AT_byte_size(0x01)

$C$DW$T$8	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$8, DW_AT_name("short")
	.dwattr $C$DW$T$8, DW_AT_byte_size(0x01)

$C$DW$T$9	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$9, DW_AT_name("unsigned short")
	.dwattr $C$DW$T$9, DW_AT_byte_size(0x01)

$C$DW$T$20	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$20, DW_AT_name("WORD")
	.dwattr $C$DW$T$20, DW_AT_type(*$C$DW$T$9)
	.dwattr $C$DW$T$20, DW_AT_language(DW_LANG_C)

$C$DW$T$10	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$10, DW_AT_name("int")
	.dwattr $C$DW$T$10, DW_AT_byte_size(0x01)

$C$DW$1963	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1963, DW_AT_type(*$C$DW$T$10)

$C$DW$T$199	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$199, DW_AT_type(*$C$DW$1963)

$C$DW$T$11	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$11, DW_AT_name("unsigned int")
	.dwattr $C$DW$T$11, DW_AT_byte_size(0x01)

$C$DW$T$36	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$36, DW_AT_name("Uint16")
	.dwattr $C$DW$T$36, DW_AT_type(*$C$DW$T$11)
	.dwattr $C$DW$T$36, DW_AT_language(DW_LANG_C)

$C$DW$1964	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1964, DW_AT_type(*$C$DW$T$36)

$C$DW$1965	.dwtag  DW_TAG_TI_ioport_type
	.dwattr $C$DW$1965, DW_AT_type(*$C$DW$1964)

$C$DW$T$301	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$301, DW_AT_type(*$C$DW$1965)

$C$DW$1966	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1966, DW_AT_type(*$C$DW$T$36)

$C$DW$T$302	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$302, DW_AT_type(*$C$DW$1966)


$C$DW$T$303	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$303, DW_AT_type(*$C$DW$T$302)
	.dwattr $C$DW$T$303, DW_AT_language(DW_LANG_C)
$C$DW$1967	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$303


$C$DW$T$87	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$87, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$87, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$87, DW_AT_byte_size(0x04)
$C$DW$1968	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1968, DW_AT_upper_bound(0x03)

	.dwendtag $C$DW$T$87


$C$DW$T$308	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$308, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$308, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$308, DW_AT_byte_size(0x01)
$C$DW$1969	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1969, DW_AT_upper_bound(0x00)

	.dwendtag $C$DW$T$308


$C$DW$T$309	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$309, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$309, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$309, DW_AT_byte_size(0x03)
$C$DW$1970	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1970, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$309

$C$DW$T$310	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$310, DW_AT_type(*$C$DW$T$36)
	.dwattr $C$DW$T$310, DW_AT_address_class(0x20)

$C$DW$T$12	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$12, DW_AT_name("long")
	.dwattr $C$DW$T$12, DW_AT_byte_size(0x02)


$C$DW$T$30	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$30, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$30, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$30, DW_AT_byte_size(0x02)
$C$DW$1971	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1971, DW_AT_upper_bound(0x00)

	.dwendtag $C$DW$T$30


$C$DW$T$103	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$103, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$103, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$103, DW_AT_byte_size(0x04)
$C$DW$1972	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1972, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$103


$C$DW$T$107	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$107, DW_AT_type(*$C$DW$T$12)
	.dwattr $C$DW$T$107, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$107, DW_AT_byte_size(0x18)
$C$DW$1973	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1973, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$107

$C$DW$1974	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1974, DW_AT_type(*$C$DW$T$12)

$C$DW$T$332	.dwtag  DW_TAG_volatile_type
	.dwattr $C$DW$T$332, DW_AT_type(*$C$DW$1974)

$C$DW$T$13	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$13, DW_AT_name("unsigned long")
	.dwattr $C$DW$T$13, DW_AT_byte_size(0x02)

$C$DW$T$21	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$21, DW_AT_name("DWORD")
	.dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$21, DW_AT_language(DW_LANG_C)

$C$DW$T$27	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$21)
	.dwattr $C$DW$T$27, DW_AT_address_class(0x20)

$C$DW$T$90	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$90, DW_AT_name("Uint32")
	.dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$90, DW_AT_language(DW_LANG_C)

$C$DW$1975	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1975, DW_AT_type(*$C$DW$T$90)

$C$DW$T$335	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$335, DW_AT_type(*$C$DW$1975)


$C$DW$T$336	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$336, DW_AT_type(*$C$DW$T$335)
	.dwattr $C$DW$T$336, DW_AT_language(DW_LANG_C)
$C$DW$1976	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$336

$C$DW$T$149	.dwtag  DW_TAG_typedef
	.dwattr $C$DW$T$149, DW_AT_name("size_t")
	.dwattr $C$DW$T$149, DW_AT_type(*$C$DW$T$13)
	.dwattr $C$DW$T$149, DW_AT_language(DW_LANG_C)

$C$DW$T$14	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
	.dwattr $C$DW$T$14, DW_AT_name("long long")
	.dwattr $C$DW$T$14, DW_AT_byte_size(0x04)


$C$DW$T$351	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$351, DW_AT_type(*$C$DW$T$14)
	.dwattr $C$DW$T$351, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$351, DW_AT_byte_size(0x08)
$C$DW$1977	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1977, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$351

$C$DW$T$15	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
	.dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
	.dwattr $C$DW$T$15, DW_AT_byte_size(0x04)

$C$DW$T$16	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$16, DW_AT_name("float")
	.dwattr $C$DW$T$16, DW_AT_byte_size(0x02)

$C$DW$T$17	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$17, DW_AT_name("double")
	.dwattr $C$DW$T$17, DW_AT_byte_size(0x02)


$C$DW$T$32	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$32, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$32, DW_AT_byte_size(0x02)
$C$DW$1978	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1978, DW_AT_upper_bound(0x00)

	.dwendtag $C$DW$T$32


$C$DW$T$33	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$33, DW_AT_byte_size(0x04)
$C$DW$1979	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1979, DW_AT_upper_bound(0x01)

	.dwendtag $C$DW$T$33


$C$DW$T$106	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$106, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$106, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$106, DW_AT_byte_size(0x18)
$C$DW$1980	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1980, DW_AT_upper_bound(0x0b)

	.dwendtag $C$DW$T$106


$C$DW$T$108	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$108, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$108, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$108, DW_AT_byte_size(0x16)
$C$DW$1981	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1981, DW_AT_upper_bound(0x0a)

	.dwendtag $C$DW$T$108


$C$DW$T$372	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$372, DW_AT_type(*$C$DW$T$17)
	.dwattr $C$DW$T$372, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$372, DW_AT_byte_size(0x06)
$C$DW$1982	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1982, DW_AT_upper_bound(0x02)

	.dwendtag $C$DW$T$372

$C$DW$T$18	.dwtag  DW_TAG_base_type
	.dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
	.dwattr $C$DW$T$18, DW_AT_name("long double")
	.dwattr $C$DW$T$18, DW_AT_byte_size(0x04)


$C$DW$T$92	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$92, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$92, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$92, DW_AT_byte_size(0x20)
$C$DW$1983	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1983, DW_AT_upper_bound(0x1f)

	.dwendtag $C$DW$T$92


$C$DW$T$105	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$105, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$105, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$105, DW_AT_byte_size(0x10)
$C$DW$1984	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1984, DW_AT_upper_bound(0x0f)

	.dwendtag $C$DW$T$105

$C$DW$T$163	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$163, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$163, DW_AT_address_class(0x20)

$C$DW$T$361	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$361, DW_AT_type(*$C$DW$T$163)
	.dwattr $C$DW$T$361, DW_AT_address_class(0x20)

$C$DW$1985	.dwtag  DW_TAG_TI_far_type
	.dwattr $C$DW$1985, DW_AT_type(*$C$DW$T$5)

$C$DW$T$178	.dwtag  DW_TAG_const_type
	.dwattr $C$DW$T$178, DW_AT_type(*$C$DW$1985)

$C$DW$T$179	.dwtag  DW_TAG_pointer_type
	.dwattr $C$DW$T$179, DW_AT_type(*$C$DW$T$178)
	.dwattr $C$DW$T$179, DW_AT_address_class(0x20)


$C$DW$T$373	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$373, DW_AT_type(*$C$DW$T$179)
	.dwattr $C$DW$T$373, DW_AT_language(DW_LANG_C)
$C$DW$1986	.dwtag  DW_TAG_subrange_type

	.dwendtag $C$DW$T$373


$C$DW$T$374	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$374, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$374, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$374, DW_AT_byte_size(0x400)
$C$DW$1987	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1987, DW_AT_upper_bound(0x3ff)

	.dwendtag $C$DW$T$374


$C$DW$T$379	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$379, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$379, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$379, DW_AT_byte_size(0x08)
$C$DW$1988	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1988, DW_AT_upper_bound(0x07)

	.dwendtag $C$DW$T$379


$C$DW$T$380	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$380, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$380, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$380, DW_AT_byte_size(0x64)
$C$DW$1989	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1989, DW_AT_upper_bound(0x63)

	.dwendtag $C$DW$T$380


$C$DW$T$381	.dwtag  DW_TAG_array_type
	.dwattr $C$DW$T$381, DW_AT_type(*$C$DW$T$5)
	.dwattr $C$DW$T$381, DW_AT_language(DW_LANG_C)
	.dwattr $C$DW$T$381, DW_AT_byte_size(0x40)
$C$DW$1990	.dwtag  DW_TAG_subrange_type
	.dwattr $C$DW$1990, DW_AT_upper_bound(0x3f)

	.dwendtag $C$DW$T$381

	.dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)

;***************************************************************
;* DWARF CIE ENTRIES                                           *
;***************************************************************

$C$DW$CIE	.dwcie 26
	.dwcfi	cfa_register, 20
	.dwcfi	cfa_offset, 0
	.dwcfi	undefined, 0
	.dwcfi	undefined, 1
	.dwcfi	undefined, 2
	.dwcfi	undefined, 3
	.dwcfi	undefined, 20
	.dwcfi	undefined, 21
	.dwcfi	undefined, 22
	.dwcfi	undefined, 23
	.dwcfi	undefined, 24
	.dwcfi	undefined, 25
	.dwcfi	undefined, 26
	.dwcfi	same_value, 28
	.dwcfi	undefined, 29
	.dwcfi	undefined, 30
	.dwcfi	undefined, 31
	.dwcfi	undefined, 32
	.dwcfi	undefined, 33
	.dwcfi	undefined, 34
	.dwcfi	undefined, 35
	.dwcfi	undefined, 36
	.dwcfi	undefined, 37
	.dwcfi	undefined, 38
	.dwcfi	undefined, 75
	.dwcfi	undefined, 76
	.dwcfi	undefined, 77
	.dwcfi	undefined, 4
	.dwcfi	undefined, 5
	.dwcfi	same_value, 6
	.dwcfi	same_value, 7
	.dwcfi	same_value, 8
	.dwcfi	same_value, 9
	.dwcfi	same_value, 10
	.dwcfi	same_value, 11
	.dwcfi	undefined, 12
	.dwcfi	undefined, 13
	.dwcfi	undefined, 14
	.dwcfi	undefined, 15
	.dwcfi	undefined, 16
	.dwcfi	undefined, 17
	.dwcfi	undefined, 18
	.dwcfi	undefined, 19
	.dwendentry

;***************************************************************
;* DWARF REGISTER MAP                                          *
;***************************************************************

$C$DW$1991	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1991, DW_AT_name("AL")
	.dwattr $C$DW$1991, DW_AT_location[DW_OP_reg0]

$C$DW$1992	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1992, DW_AT_name("AH")
	.dwattr $C$DW$1992, DW_AT_location[DW_OP_reg1]

$C$DW$1993	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1993, DW_AT_name("PL")
	.dwattr $C$DW$1993, DW_AT_location[DW_OP_reg2]

$C$DW$1994	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1994, DW_AT_name("PH")
	.dwattr $C$DW$1994, DW_AT_location[DW_OP_reg3]

$C$DW$1995	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1995, DW_AT_name("SP")
	.dwattr $C$DW$1995, DW_AT_location[DW_OP_reg20]

$C$DW$1996	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1996, DW_AT_name("XT")
	.dwattr $C$DW$1996, DW_AT_location[DW_OP_reg21]

$C$DW$1997	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1997, DW_AT_name("T")
	.dwattr $C$DW$1997, DW_AT_location[DW_OP_reg22]

$C$DW$1998	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1998, DW_AT_name("ST0")
	.dwattr $C$DW$1998, DW_AT_location[DW_OP_reg23]

$C$DW$1999	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$1999, DW_AT_name("ST1")
	.dwattr $C$DW$1999, DW_AT_location[DW_OP_reg24]

$C$DW$2000	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2000, DW_AT_name("PC")
	.dwattr $C$DW$2000, DW_AT_location[DW_OP_reg25]

$C$DW$2001	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2001, DW_AT_name("RPC")
	.dwattr $C$DW$2001, DW_AT_location[DW_OP_reg26]

$C$DW$2002	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2002, DW_AT_name("FP")
	.dwattr $C$DW$2002, DW_AT_location[DW_OP_reg28]

$C$DW$2003	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2003, DW_AT_name("DP")
	.dwattr $C$DW$2003, DW_AT_location[DW_OP_reg29]

$C$DW$2004	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2004, DW_AT_name("SXM")
	.dwattr $C$DW$2004, DW_AT_location[DW_OP_reg30]

$C$DW$2005	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2005, DW_AT_name("PM")
	.dwattr $C$DW$2005, DW_AT_location[DW_OP_reg31]

$C$DW$2006	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2006, DW_AT_name("OVM")
	.dwattr $C$DW$2006, DW_AT_location[DW_OP_regx 0x20]

$C$DW$2007	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2007, DW_AT_name("PAGE0")
	.dwattr $C$DW$2007, DW_AT_location[DW_OP_regx 0x21]

$C$DW$2008	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2008, DW_AT_name("AMODE")
	.dwattr $C$DW$2008, DW_AT_location[DW_OP_regx 0x22]

$C$DW$2009	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2009, DW_AT_name("INTM")
	.dwattr $C$DW$2009, DW_AT_location[DW_OP_regx 0x23]

$C$DW$2010	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2010, DW_AT_name("IFR")
	.dwattr $C$DW$2010, DW_AT_location[DW_OP_regx 0x24]

$C$DW$2011	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2011, DW_AT_name("IER")
	.dwattr $C$DW$2011, DW_AT_location[DW_OP_regx 0x25]

$C$DW$2012	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2012, DW_AT_name("V")
	.dwattr $C$DW$2012, DW_AT_location[DW_OP_regx 0x26]

$C$DW$2013	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2013, DW_AT_name("PSEUDOH")
	.dwattr $C$DW$2013, DW_AT_location[DW_OP_regx 0x4c]

$C$DW$2014	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2014, DW_AT_name("VOL")
	.dwattr $C$DW$2014, DW_AT_location[DW_OP_regx 0x4d]

$C$DW$2015	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2015, DW_AT_name("AR0")
	.dwattr $C$DW$2015, DW_AT_location[DW_OP_reg4]

$C$DW$2016	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2016, DW_AT_name("XAR0")
	.dwattr $C$DW$2016, DW_AT_location[DW_OP_reg5]

$C$DW$2017	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2017, DW_AT_name("AR1")
	.dwattr $C$DW$2017, DW_AT_location[DW_OP_reg6]

$C$DW$2018	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2018, DW_AT_name("XAR1")
	.dwattr $C$DW$2018, DW_AT_location[DW_OP_reg7]

$C$DW$2019	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2019, DW_AT_name("AR2")
	.dwattr $C$DW$2019, DW_AT_location[DW_OP_reg8]

$C$DW$2020	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2020, DW_AT_name("XAR2")
	.dwattr $C$DW$2020, DW_AT_location[DW_OP_reg9]

$C$DW$2021	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2021, DW_AT_name("AR3")
	.dwattr $C$DW$2021, DW_AT_location[DW_OP_reg10]

$C$DW$2022	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2022, DW_AT_name("XAR3")
	.dwattr $C$DW$2022, DW_AT_location[DW_OP_reg11]

$C$DW$2023	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2023, DW_AT_name("AR4")
	.dwattr $C$DW$2023, DW_AT_location[DW_OP_reg12]

$C$DW$2024	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2024, DW_AT_name("XAR4")
	.dwattr $C$DW$2024, DW_AT_location[DW_OP_reg13]

$C$DW$2025	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2025, DW_AT_name("AR5")
	.dwattr $C$DW$2025, DW_AT_location[DW_OP_reg14]

$C$DW$2026	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2026, DW_AT_name("XAR5")
	.dwattr $C$DW$2026, DW_AT_location[DW_OP_reg15]

$C$DW$2027	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2027, DW_AT_name("AR6")
	.dwattr $C$DW$2027, DW_AT_location[DW_OP_reg16]

$C$DW$2028	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2028, DW_AT_name("XAR6")
	.dwattr $C$DW$2028, DW_AT_location[DW_OP_reg17]

$C$DW$2029	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2029, DW_AT_name("AR7")
	.dwattr $C$DW$2029, DW_AT_location[DW_OP_reg18]

$C$DW$2030	.dwtag  DW_TAG_TI_assign_register
	.dwattr $C$DW$2030, DW_AT_name("XAR7")
	.dwattr $C$DW$2030, DW_AT_location[DW_OP_reg19]

	.dwendtag $C$DW$CU

